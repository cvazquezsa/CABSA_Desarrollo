/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformeInvValOtraMoneda : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.PageFooterBand pageFooterBand1;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader2;
        private DevExpress.XtraReports.UI.PageHeaderBand PageHeader;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRLine line12;
        private DevExpress.XtraReports.UI.XRLine line11;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label89;
        private DevExpress.XtraReports.UI.XRLabel label88;
        private DevExpress.XtraReports.UI.XRLabel label86;
        private DevExpress.XtraReports.UI.XRLabel label90;
        private DevExpress.XtraReports.UI.XRLabel label87;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.XRLabel label198;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo3;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRLabel label41;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRLabel label32;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.XRLabel label44;
        private DevExpress.XtraReports.UI.XRLabel label69;
        private DevExpress.XtraReports.UI.XRLabel label71;
        private DevExpress.XtraReports.UI.XRLabel label72;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter1;
        private System.Data.SqlClient.SqlCommand sqlCommand1;
        private System.Data.SqlClient.SqlConnection sqlConnection1;
        private XtraReportSerialization.dsDatosDataSet dsDatos;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLabel label55;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLabel label66;
        private DevExpress.XtraReports.UI.XRLabel label58;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private DevExpress.XtraReports.UI.XRLabel label50;
        private DevExpress.XtraReports.UI.XRLabel label47;
        private DevExpress.XtraReports.UI.XRLabel label53;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter2;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private System.Data.OleDb.OleDbDataAdapter TableTableAdapter;
        private System.Data.OleDb.OleDbCommand oleDbCommand1;
        private System.Data.OleDb.OleDbConnection oleDbConnection1;
        private XtraReportSerialization.RepVentaNetaDataSet RepVentaNeta;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField CostoCalc;
        private DevExpress.XtraReports.UI.CalculatedField CostoOtraMonedaCalc;
        private DevExpress.XtraReports.UI.CalculatedField CostoUOtraMoneda;
        private DevExpress.XtraReports.UI.CalculatedField CostoOtraMoneda;
        private System.Resources.ResourceManager _resources;
        public InformeInvValOtraMoneda() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAACAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsHnWR03AAAAACsAAAB+AQAAJ" +
                        "iQAdABoAGkAcwAuAFMAYwByAGkAcAB0AHMAUwBvAHUAcgBjAGUAAAAAACJwAGkAYwB0AHUAcgBlAEIAb" +
                        "wB4ADIALgBJAG0AYQBnAGUAGQcAAAGWDg0KUHJpdmF0ZSBTdWIgUGFnZUhlYWRlcl9CZWZvcmVQcmlud" +
                        "ChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nL" +
                        "lByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYTIiKSA9I" +
                        "DEgVEhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRQ0KICAgIGUuQ2FuY2VsID0gRmFsc2UNC" +
                        "iAgRU5EIElGDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgR3JvdXBIZWFkZXIxX0JlZm9yZVByaW50K" +
                        "EJ5VmFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuU" +
                        "HJpbnRFdmVudEFyZ3MpDQoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJHcmFmaWNhMSIpID0gM" +
                        "SBUSEVODQogICAgIGUuQ2FuY2VsID0gVHJ1ZQ0KICBFTFNFDQonICAgICBJRiBHZXRDdXJyZW50Q29sd" +
                        "W1uVmFsdWUoIkRlc2dsb3NhciIpID0gIlNpIiBUSEVODQonICAgICAgICBlLkNhbmNlbCA9IFRydWUNC" +
                        "icgICAgIEVMU0UNCiAgICAgICAgZS5DYW5jZWwgPSBGYWxzZQ0KJyAgICAgRU5EIElGIA0KICBFTkQgS" +
                        "UYgDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgRGV0YWlsX0JlZm9yZVByaW50XzEoQnlWYWwgc2VuZ" +
                        "GVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50Q" +
                        "XJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkdyYWZpY2ExIikgPSAxIFRIRU4NCiAgI" +
                        "CAgZS5DYW5jZWwgPSBUcnVlDQogIEVMU0UNCicgICAgIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR" +
                        "GVzZ2xvc2FyIikgPSAiTm8iIFRIRU4NCicgICAgICAgIGUuQ2FuY2VsID0gVHJ1ZQ0KJyAgICAgRUxTR" +
                        "Q0KICAgICAgICBlLkNhbmNlbCA9IEZhbHNlDQonICAgICBFTkQgSUYgDQogIEVORCBJRiANCg0KRW5kI" +
                        "FN1Yg0KDQoNClByaXZhdGUgU3ViIGNoYXJ0MV9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZ" +
                        "WN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogJ" +
                        "1NpIGVsIHZhbG9yIGRlbCBjYW1wbyBBcnRpY3VsbyBlcyBudWxsIG5vIHNlIG11ZXN0cmEgDQogIElGI" +
                        "EdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiQXJ0aWN1bG8iKSBJUyBOT1RISU5HIFRIRU4NCiAgICAgZS5DY" +
                        "W5jZWwgPSBUcnVlICAgIA0KICAgIFJFVFVSTg0KICBFTkQgSUYNCg0KICAnR2VuZXJhIHVuIG9iamV0b" +
                        "yBxdWUgcmVwcmVzZW50YSBhIGxhIGdyw6FmaWNhDQogIERpbSBHcmFmaWNhMSBBcyBYUkNoYXJ0ID0gQ" +
                        "1R5cGUoc2VuZGVyLFhSQ2hhcnQpDQoNCiAgJ09jdWx0YSBvIG11ZXN0cmEgbGFzIGV0aXF1ZXRhcyBkZ" +
                        "SBsYSBncmFmaWNhDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiRXRpcXVldGEiKSA9IEZhbHNlI" +
                        "FRIRU4NCiAgICAgR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUuTGFiZWwuVmlzaWJsZSA9IEZhbHNlDQogI" +
                        "EVMU0UNCiAgICAgR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUuTGFiZWwuVmlzaWJsZSA9IFRydWUNCiAgR" +
                        "U5EIElGDQoNCkVuZCBTdWINCg0KDQoNClByaXZhdGUgU3ViIGxhYmVsODhfQmVmb3JlUHJpbnQoQnlWY" +
                        "Wwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5Qcmlud" +
                        "EV2ZW50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlZhbHVhY2lvbk5vbWJyZSIpI" +
                        "D0gIihTaW4gVmFsdWFyKSIgVEhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRQ0KICAgICBlL" +
                        "kNhbmNlbCA9IEZhbHNlDQogIEVORCBJRiANCg0KRW5kIFN1Yg0KQAABAAAA/////wEAAAAAAAAADAIAA" +
                        "ABRU3lzdGVtLkRyYXdpbmcsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZ" +
                        "XlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhBQEAAAAVU3lzdGVtLkRyYXdpbmcuQml0bWFwAQAAAAREYXRhB" +
                        "wICAAAACQMAAAAPAwAAAFrBAAAC/9j/4AAQSkZJRgABAQEAlgCWAAD/7gAOQWRvYmUAZAAAAAAB/+ERl" +
                        "kV4aWYAAE1NACoAAAAIAAcBEgADAAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAA" +
                        "QACAAABMQACAAAAHAAAAHIBMgACAAAAFAAAAI6HaQAEAAAAAQAAAKIAAADCAJYAAAABAAAAlgAAAAEAA" +
                        "EFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cwAyMDExOjAxOjE4IDA5OjUxOjA2AAACoAIABAAAAAEAA" +
                        "AFioAMABAAAAAEAAACBAAAAAAAAAAYBAwADAAAAAQAGAAABGgAFAAAAAQAAARABGwAFAAAAAQAAARgBK" +
                        "AADAAAAAQACAAACAQAEAAAAAQAAASACAgAEAAAAAQAAEG4AAAAAAAAASAAAAAEAAABIAAAAAf/Y/+0AD" +
                        "EFkb2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMVExMYE" +
                        "QwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMD" +
                        "AwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA6AKADASIAAhEBAxEB/" +
                        "90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDB" +
                        "AUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQ" +
                        "wclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWp" +
                        "rbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjw" +
                        "VLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSlt" +
                        "cXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1VJJJJSlgYWR9Z3fWTIqyqg3pL" +
                        "d/pu2tDdoj0HVWA+q+2z/DMf/4H+jV36w9WPSOk3ZrGtfa3a2ljpgveQxu7b+a2fUch/VjquX1bpDMzL" +
                        "rbXY572gskNcGu2eo1ri9zP3Ppp/tS9v3f0OLg/wlnux9z2/wBKuL/BdZJJJMXqSSSSUpJJJJSkkkklK" +
                        "SSSSUpJJJJSkkkklKSSSSU//9D1VZ/WutYnR8T17/fY+W0UNPusd+6391jf8JZ/g03W+t4nRsT17/fY+" +
                        "W0UNPusd4D91jf8JZ/g1xvTOmdR+tfUX5+e8txWnbZY2QIB/oeH+6xv+Ft/9H/zaUr6x9Tys36r9Ouyn" +
                        "B12Xk23ODRDWis3VV1M/kMY5n0kXqw6l0von1f6h08FlWJTuttGoD7xU+Miv/Q2u9Rv9f8A0dnpK1/jB" +
                        "waqOldPGOwVUY9ppZW0QAHMcW/+el0PQHU5f1dwQQLKn4tdb2OALTDBVaxzT9L6LmLQjkGPlsE+HiAnP" +
                        "jidjxcUf+g0ZYzk5nNG+EmEOGQ3Fer/AKbD6vfWHF63i72fo8muBkY5OrT+839+p/5j1rLzvrvQs76sZ" +
                        "rerdIc4YgdodXGouP8AMX/6XFs+ix7v+Ls/S+lbZ131e+sON1vF3sHp5NUDIoJktJ/Ob+/U/wDMeoeY5" +
                        "eIj72E8WGX+Njl+7JlwZ5GRxZRw5Y/4uSP78UvXeuYnQ8H7blte+svFYbXtmSC7/COrZ9FjvzleqtZdU" +
                        "y6syyxoe0+ThuasH68dRy+m9IryMNzWX+u1rbHMa8tllpLqxaHsa/27Po/QWT1PrP1lf1fC6d03KFb8r" +
                        "FqsDXMr2l5bZZa4vfU/b7a03Hys8kRISjEHi+Y/5v5rXZOZhCRiRKUhw6RH7/yvbrK679YMXoddFmVXZ" +
                        "Yy95ZNYadsDcXOD3M/6K5vI6x9dOhOFvV2Ny8Oz2uewMG0n/R20sZ6dv7nr0+k9Zf1of1e7Fx8rKzG53" +
                        "S73F+DZtYyyC3d+mZTXXtsY39FZ/L/0amw8leSPHKEscusJfP8A1Y/1mLNzlY5GMZCceko/L/Wl/VfTU" +
                        "lytXU/rD0LDys36x215LPYzEpr2h7rTu9u+uuprK9v09/qfQ/7co49v+MLqmP8AtDHtrx6njfTRDGbm9" +
                        "vSbdXc/a78z7Taz/MUQ5SRs+5jEAeH3DL0Sl2iyHmQKHBMzI4uAD1xj3k9wuV+qH1hz+oY3UsvqVgezG" +
                        "Ie1rGBoYza+x7W7fe/6P56P9V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa+WGdlrNzd35j/5ypYv1FsNfSOtWB" +
                        "rXljNwa8S0xXYdr2/nMT44DHFnjMDjHtcMt/nlvGX9ZZLOJZMBiTwEZOIf3I/pR/qvWdC63idcwftuI1" +
                        "7GB5rc2zbuDmwf8G6xn0XN/PWiuI6f9beoY31Uf1HJIyst2UcaiWtYwfo22N9RlAq9jGts/l/mJY7P8Y" +
                        "Wbit6hTmVBrxurpBqkg8bQKbKf+3L037nMXxzhACXBxSOkpf1V33uBrhjOZI46iNYx8Xr8/NpwMK/Nvn" +
                        "0sdjrHhokw0bvbMIfSep0dW6fT1DHDm1XTDXRILXOqe07C9n02fvLCr6v1236t9Tt6phjHysNjhXZYz2" +
                        "WED+c9Czex3pu/P/o9n+DVSz63Z+F9VsHKfGR1HOdc0WvaA0Cux7XWOrq9NrnbPTYxn/XE0cpkJocJ9f" +
                        "t6G9eH3OL+7wrjzWMCzY9PuajpxcH+NxPaJLim4/wDjGdQ3MZl1WFwBFDTSSQf+s/Zv/ZhdD9Xc/qWf0" +
                        "71up4pxMlr3MLS1zN4ERaKrPfX9LZ/YTcnLmEeIThMA0eCWoTjz8Z4TCcLFjjGhf//R7P61/Vk9VaM3E" +
                        "MZ9LNgY4+2ysEv9H3e2qzc79FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY9rhsLXA7PsmS327LGu9ldn/AFu39" +
                        "L/O9qub+tX1VZ1RjszDa1ue1sPYYDb2gR6dk+1tzW/zVv8A1q39H/MpTe+tHTHdT6Jk49bd17QLaByd9" +
                        "Z3hrf8AjG7qv+uLE/xedXZbi2dJsd+kpJuxwe9bzNjR/wAVc7/wZR+qn1oex7ekdVc4ODvSx7rJDg4HZ" +
                        "9kyd3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf1X6ul2RU+x7Lm4jpfTfrXkNb6Z37LdzvU/0f/Eq5y0oZMcuX" +
                        "meHiPHjkf0ZtTmYzx5I54Di4RwZIj9KH/oLc+t31rNzn9F6TNjrD6ORawbi4u9hxcdo+m9/0LH/APW6/" +
                        "f8Azep9UPquej1Oy8szn5DQ1zAZbUyd3ogj6dm7+ds/7a/0lsPqn9UmdJY3NzWtf1BzYa0QW0tI/m6/3" +
                        "rXf4W3/AK1V+j/numQz5oRh7GD5P059csv+9ThwylP383z/AKEOmKP/AHzyn+Mj/kGr/wAMt/8APdyzx" +
                        "/4tOjf+FKv/AD1kLpfrLhdOzsGrG6iLfRsyKmMfToW2PPo1Ocf9G51npfR/wiouZ9Xj1M9UYLTk9IfX0" +
                        "8VMMtLn7aKNrHe6za7KdTv3/mWf6NPw5QMIjUiayx0Gl5eGMFmXETmMrG+OXj+r9UnS+sdbLOgdRbY0O" +
                        "AxrXAHxa02Md/Ze3cuAz22u+pXTH8sZk3s+BcbXMH4PXpNzcTPoycMvbYx7XU5DWOG5u8bXNdt/m37XK" +
                        "hi9L6JgdKf0iyxl2I0Ofa3Iewna5xJfZ9Da1tv0H/vpnL5xiiAQTIZBPh/q8MoFfzGH3JEggAwML/rcX" +
                        "E4n12vx+q9AqzenXNyace5r7thna17X17rWfTr2vez2Pas/pnScTqGIy9v1jtpdtAsosftdWQI9Pa69v" +
                        "tb+Y76C6fpv1f6D0jJu9A+/qDdgotsDwWDc411Vv91jPd7t/qrLZ9UPqv1Kyy2oXYm263HFLXtDS+lzm" +
                        "WGllnrez2bv6n+DU2PPjjAwjKcYRPFHJwRlpP8ARlGX/SYsmGcp8ZEZSkOGUOOUfl/SjKKbof1Trxep1" +
                        "9XZ1Q55Zva4wHbiW+l7rvUs+gsf6lvY3pHXKS4C30i70zztDLGF3+f7V1n1e6R0vpWLbX02w3V2WF1jy" +
                        "8P9wAr2/ow1jdm1Yoq6CepV9Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67H13ei79Jucxn+j/AEv6RNjmM/djI" +
                        "ynpDhlwxh/NH3OGUfT/AFkywiAxSiBD5+KNymP1w4OLi9TmdDv6NT9TLf2xW63GszSxjawS/wBQsrcx1" +
                        "TgW7HMa17t2/wD9Jqbfq3jU1Oz/AKvdebTWQCfUs9OPzv091JZt/wCLuxV0ON0zoXTMb/m/Ywvxslj8i" +
                        "x+Q5paYfTTD3+zbbvtp9H02f4P/AEqo2/UH6tOyvT9e6u18uZji1hO0fuerXZfs/tp45iHFM8U4CcjP5" +
                        "Rkxzh/c/RWnl5cMBwwmYxEfm9vJCX99z8Tr3UOp/V/reJnObe/EoJbksAAcHb2w7YG1u/m/0T2s/SVp8" +
                        "e7oDfqb0ynrTXll1twpfUCX1uFt2+8Ob+bW13v/AJzf/obF0tHRug09Pv6RjhjKr6ybw182Frhs9d7yX" +
                        "Wdva/6CVHROiO6WOi7W5WNjH3Me7c9rnE2+o57Nr6rXeo53s9NRnmMWvDGcI+4MlQ9BEeDg4h+7614wZ" +
                        "NLlGcvbOP1eocXHx1/ivLO+r32Co53Qev1V45M/pLRW3/rllRdRa7/jMZbv1L67m9YwrvtoDrcZ4b6zR" +
                        "tDw4bvc0ez1Gfn7P5CpD6ifVdzftTcq00au3C2sshs7/wBL6e7azb7v0q6Xp2DgYGK2jp9basf6Tdhnd" +
                        "u/wheS51m799zkuYzY5YzGzknek5QGOUK6GX6SeXw5I5AdMcK1hGZnGd9h+i//S9VSSSSU859afqs3qb" +
                        "HZuE0N6g1vuZoG3tA/m3z7W3N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/bMloFlTXH062j6Ne1p9O25v59//A" +
                        "Fun9H/O9AkkpSSSSSmn1jEszOm30VfzxbvokwPVrIux/d/x9dax6OgZwzMG6ws2ms3Z/BjKab76TW389" +
                        "n2nqWRb/wCg1K6RJWMXu+2eGuG5Xffh/l/hsGX2uMcV8VDbtxPPfVvo+Tg2VnKqsZbj4/2Y2bqDS/3Nf" +
                        "uq+z11ZVm5zPVa/N/Ss9a78+yyxNX9XpycO23FpdszM2/JcQ0ksudkOxi7T9J9PG9v+D/60uiSUkve45" +
                        "7XR4uHi/dybf8//AA1kfa4I3fDYrir96Dx7+hda+wY2GKvdTTS2t7XVQx9V773NtvsacrZXS3H+xNxfz" +
                        "/V9ZGf0DqxdnbdjhnjNqrc92uOLn2XU20bR/NZstZm/4f1PQ/wdXps6pJSH39f5v5pXX7ywezp8/wAsd" +
                        "/3XH6BgWYzr7rabcey1tTCyw4+39EHAek3p7Kq9rN/pepa31X1sq/0aDh9KzqmfV8WMAPTqnMyvcDtJo" +
                        "9D2/v8A6RbySgPucU/l21q6r2p/L/1NlHBwQviqxV1xX7sPm/w3K6j0r7b1FlttNd+OzEvqAsAcBZY6n" +
                        "b7HfvVss96yW9H605+A26oE4pwXG1rqoikMbl+va5js27K3euyv07Psv2d/+k9Su3q0k7F7vCK4ar08d" +
                        "9/0UZPb4jfFd68NPGdHw3W4OLkV4bK6sazNvtzpZusa4ZWP6DWt/TOc99jHXer+h2Y1f857PSWH0XMze" +
                        "lY/2XFrwQOmCg2hzR9oNpx79n6Nr3+h6dFvqPyW7/Uy3/oLa/V9Xs0lMfd4jQjxcWms/wB7J+96f32KP" +
                        "t8Isy4eHXSP7sP3fV/3bzmL0N77Me27Hs2/bftGRVlGhwhuLbjV3V1YTW4388+ln+l/ReqtDpFGVhMbh" +
                        "HGbXjB2TY2xr27WB2Q9+LjtpH5rsa3f/wAF6fpLTSVfN7lHj4eHSq4uH9Ph4WfFwacPFeu/Df6PFb//2" +
                        "f/tGNBQaG90b3Nob3AgMy4wADhCSU0EJQAAAAAAEAAAAAAAAAAAAAAAAAAAAAA4QklNBDoAAAAAAJMAA" +
                        "AAQAAAAAQAAAAAAC3ByaW50T3V0cHV0AAAABQAAAABDbHJTZW51bQAAAABDbHJTAAAAAFJHQkMAAAAAS" +
                        "W50ZWVudW0AAAAASW50ZQAAAABDbHJtAAAAAE1wQmxib29sAQAAAA9wcmludFNpeHRlZW5CaXRib29sA" +
                        "AAAAAtwcmludGVyTmFtZVRFWFQAAAABAAAAOEJJTQQ7AAAAAAGyAAAAEAAAAAEAAAAAABJwcmludE91d" +
                        "HB1dE9wdGlvbnMAAAASAAAAAENwdG5ib29sAAAAAABDbGJyYm9vbAAAAAAAUmdzTWJvb2wAAAAAAENyb" +
                        "kNib29sAAAAAABDbnRDYm9vbAAAAAAATGJsc2Jvb2wAAAAAAE5ndHZib29sAAAAAABFbWxEYm9vbAAAA" +
                        "AAASW50cmJvb2wAAAAAAEJja2dPYmpjAAAAAQAAAAAAAFJHQkMAAAADAAAAAFJkICBkb3ViQG/gAAAAA" +
                        "AAAAAAAR3JuIGRvdWJAb+AAAAAAAAAAAABCbCAgZG91YkBv4AAAAAAAAAAAAEJyZFRVbnRGI1JsdAAAA" +
                        "AAAAAAAAAAAAEJsZCBVbnRGI1JsdAAAAAAAAAAAAAAAAFJzbHRVbnRGI1B4bEBiwAAAAAAAAAAACnZlY" +
                        "3RvckRhdGFib29sAQAAAABQZ1BzZW51bQAAAABQZ1BzAAAAAFBnUEMAAAAATGVmdFVudEYjUmx0AAAAA" +
                        "AAAAAAAAAAAVG9wIFVudEYjUmx0AAAAAAAAAAAAAAAAU2NsIFVudEYjUHJjQFkAAAAAAAA4QklNA+0AA" +
                        "AAAABAAlgAAAAEAAgCWAAAAAQACOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNBA0AAAAAAAQAA" +
                        "AB4OEJJTQQZAAAAAAAEAAAAHjhCSU0D8wAAAAAACQAAAAAAAAAAAQA4QklNJxAAAAAAAAoAAQAAAAAAA" +
                        "AACOEJJTQP1AAAAAABIAC9mZgABAGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABADIAAAABAFoAA" +
                        "AAGAAAAAAABADUAAAABAC0AAAAGAAAAAAABOEJJTQP4AAAAAABwAAD//////////////////////////" +
                        "///A+gAAAAA/////////////////////////////wPoAAAAAP////////////////////////////8D6" +
                        "AAAAAD/////////////////////////////A+gAADhCSU0EAAAAAAAAAgABOEJJTQQCAAAAAAAEAAAAA" +
                        "DhCSU0EMAAAAAAAAgEBOEJJTQQtAAAAAAAGAAEAAAADOEJJTQQIAAAAAAAQAAAAAQAAAkAAAAJAAAAAA" +
                        "DhCSU0EHgAAAAAABAAAAAA4QklNBBoAAAAAA0kAAAAGAAAAAAAAAAAAAACBAAABYgAAAAoAVQBuAHQAa" +
                        "QB0AGwAZQBkAC0AMQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABYgAAAIEAAAAAAAAAA" +
                        "AAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5kc09ia" +
                        "mMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tb" +
                        "G9uZwAAAIEAAAAAUmdodGxvbmcAAAFiAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVzbGljZ" +
                        "QAAABIAAAAHc2xpY2VJRGxvbmcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlnaW5lbnVtAAAAD" +
                        "EVTbGljZU9yaWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZVR5cGUAAAAAS" +
                        "W1nIAAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0b" +
                        "G9uZwAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJnaHRsb25nAAABYgAAAAN1cmxURVhUAAAAAQAAAAAAA" +
                        "G51bGxURVhUAAAAAQAAAAAAAE1zZ2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABAAAAAAAOY2Vsb" +
                        "FRleHRJc0hUTUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWduZW51bQAAAA9FU" +
                        "2xpY2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VTbGljZVZlcnRBbGlnb" +
                        "gAAAAdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51bQAAABFFU2xpY2VCR0NvbG9yVHlwZQAAAABOb25lA" +
                        "AAACXRvcE91dHNldGxvbmcAAAAAAAAACmxlZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b21PdXRzZXRsb" +
                        "25nAAAAAAAAAAtyaWdodE91dHNldGxvbmcAAAAAADhCSU0EKAAAAAAADAAAAAI/8AAAAAAAADhCSU0EF" +
                        "AAAAAAABAAAAAQ4QklNBAwAAAAAEIoAAAABAAAAoAAAADoAAAHgAABswAAAEG4AGAAB/9j/7QAMQWRvY" +
                        "mVfQ00AAf/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMD" +
                        "AwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwME" +
                        "REMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACEQEDEQH/3QAEA" +
                        "Ar/xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHC" +
                        "AkKCxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU" +
                        "/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5" +
                        "vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwM" +
                        "yRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9" +
                        "VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMirKqDekt3+m7a" +
                        "0N2iPQdVYD6r7bP8Mx//gf6NXfrD1Y9I6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5fVukMzMuttdjn" +
                        "vaCyQ1wa7Z6jWuL3M/c+mn+1L2/d/Q4uD/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkklKSSSSUpJJJJS" +
                        "kkkklKSSSSUpJJJJT//0PVVn9a61idHxPXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGxPXv99j5bRQ0+" +
                        "6x3gP3WN/wln+DXG9M6Z1H619Rfn57y3FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzfqv067KcHXZeT" +
                        "bc4NENaKzdVXUz+QxjmfSRerDqXS+ifV/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2ekrX+MHBqo6V" +
                        "08Y7BVRj2mllbRAAcxxb/56XQ9AdTl/V3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+WwT4eICc+OJ2PF" +
                        "xR/6DRljOTmc0b4SYQ4ZDcV6v8ApsPq99YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u9Czvqxmt6t0h" +
                        "zhiB2h1cai4/wAxf/pcWz6LHu/4uz9L6VtnXfV76w43W8Xewenk1QMigmS0n85v79T/AMx6h5jl4iPvY" +
                        "TxYZf42OX7smXBnkZHFlHDlj/i5I/vxS9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/OV6q1l1TLqzLL" +
                        "Gh7T5OG5qwfrx1HL6b0ivIw3NZf67Wtscxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3TcoVvysWqwNc" +
                        "yvaXltllri99T9vtrTcfKzyREhKMQeL5j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh10WZVdljL3lk" +
                        "1hp2wNxc4Pcz/orm8jrH106E4W9XY3Lw7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXHysrMbndLvcX4" +
                        "Nm1jLILd36ZlNde2xjf0Vn8v/RqbDyV5I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9aX9V9NSXK1dT" +
                        "+sPQsPKzfrHbXks9jMSmvaHutO727666msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9NEMZub29Jt1d" +
                        "z9rvzPtNrP8xRDlJGz7mMQB4fcMvRKXaLIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy+pWB7MYh7WsY" +
                        "GhjNr7Htbt97/o/no/1X+suT1G63pnU6vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw19I61YGteWM3" +
                        "BrxLTFdh2vb+cxPjgMcWeMwOMe1wy3+eW8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1zB+24jXsYHmt" +
                        "zbNu4ObB/wbrGfRc389aK4jp/1t6hjfVR/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+Yljs/xhZuK3q" +
                        "FOZUGvG6ukGqSDxtApsp/7cvTfucxfHOEAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82nAwr82+fSx2Os" +
                        "eGiTDRu9swh9J6nR1bp9PUMcObVdMNdEgtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2OFdljPZYQP5z" +
                        "0LN7Hem78/+j2f4NVLPrdn4X1Wwcp8ZHUc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRymQmhwn1+3ob14" +
                        "fc4v7vCuPNYwLNj0+5qOnFwf43E9okuKbj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1dz+pZ/TvW6ni" +
                        "nEyWvcwtLXM3gRFoqs99f0tn9hNycuYR4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9WT1VozcQxn0s2" +
                        "Bjj7bKwS/0fd7arNzv0Vn9i7/SU5n1T+s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2f8AW7f0v872q" +
                        "5v61fVVnVGOzMNrW57Ww9hgNvaBHp2T7W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3XtAtoHJ31neGt/" +
                        "wCMbuq/64sT/F51dluLZ0mx36Skm7HB71vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHuskODgdn2TJ3e" +
                        "71d3sqe/wD4qz9J/O5/1h6DcM5/Vfq6XZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnLShkxy5eZ4eI8" +
                        "eOR/Rm1OZjPHkjngOLhHBkiP0of+gtz63fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qsf8A9br9/wDN6" +
                        "n1Q+q56PU7LyzOfkNDXMBltTJ3eiCPp2bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS0j+br/etd/hb" +
                        "f8ArVX6P+e6ZDPmhGHsYPk/Tn1yy/71OHDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/wA93LPH/i06N" +
                        "/4Uq/8APWQul+suF07OwasbqIt9GzIqYx9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1RgtOT0h9fTxUwy0" +
                        "uftoo2sd7rNrsp1O/f+ZZ/o0/DlAwiNSJrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6B1FtjQ4DGtcA" +
                        "fFrTYx39l7dy4DPba76ldMfyxmTez4Fxtcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc123+bftcqGL0vo" +
                        "mB0p/SLLGXYjQ59rch7CdrnEl9n0NrW2/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCADAwv+txcTifXa" +
                        "/H6r0CrN6dc3Jpx7mvu2GdrXtfXutZ9Ova97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZAj09rr2+1v5jv" +
                        "oLp+m/V/oPSMm70D7+oN2Ci2wPBYNzjXVW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte0NL6XOZYaWWe" +
                        "t7PZu/qf4NTY8+OMDCMpxhE8UcnBGWk/wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/VOvF6nX1dnVD" +
                        "nlm9rjAduJb6Xuu9Sz6Cx/qW9jekdcpLgLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDdXZYXWPLw/3AC" +
                        "vb+jDWN2bViiroJ6lX1Srp2ZZZ1Wl5pYzYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2OYz92MjKekOG" +
                        "XDGH80fc4ZR9P8AWTLCIDFKIEPn4o3KY/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/AFCytzHVOBbsc" +
                        "xrXu3b/AP0mpt+reNTU7P8Aq915tNZAJ9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC/GyWPyLH5Dml" +
                        "ph9NMPf7Ntu+2n0fTZ/g/8ASqjb9Qfq07K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzxTgJyM/lGTHOH" +
                        "9z9FaeXlwwHDCZjER+b28kJf33PxOvdQ6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RPaz9JWnx7ugN+" +
                        "pvTKetNeWXW3Cl9QJfW4W3b7w5v5tbXe/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWuGz13vJdZ29r/" +
                        "oJUdE6I7pY6LtblY2Mfcx7tz2ucTb6jns2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH7vrXjBk0uUZy" +
                        "9s4/V6hxcfHX+K8s76vfYKjndB6/VXjkz+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOtxnhvrNG0PDhu" +
                        "9zR7PUZ+fs/kKkPqJ9V3N+1NyrTRq7cLayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx/pN2Gd27/CF5" +
                        "LnWbv33OS5jNjljMbOSd6TlAY5QroZfpJ5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1p+qzepsdm4TQ" +
                        "3qDW+5mgbe0D+bfPtbc3/A3f9at/R/zM/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07bm/n3/8AW6f0f" +
                        "870CSSlJJJJKafWMSzM6bfRV/PFu+iTA9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppvvpNbfz2faepZ" +
                        "Fv/AKDUrpElYxe77Z4a4bld9+H+X+GwZfa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZuoNL/c1+6r7PX" +
                        "VlWbnM9Vr839Kz1rvz7LLE1f1enJw7bcWl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6JJSS97jntdHi4" +
                        "eL93Jt/z/8ADWR9rgjd8NiuKv3oPHv6F1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLcf7E3F/P9X1kZ" +
                        "/QOrF2dt2OGeM2qtz3a44ufZdTbRtH81my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7Onz/ACx3/dcfo" +
                        "GBZjOvutptx7LW1MLLDj7f0QcB6Tensqr2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9OqczK9wO0mj0Pb+/" +
                        "wDpFvJKA+5xT+XbWrqvan8v/U2UcHBC+KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCwBwFljqdvsd+9" +
                        "Wyz3rJb0frTn4DbqgTinBcbWuqiKQxuX69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8IrhqvTx33/RRk" +
                        "9viN8V3rw08Z0fDdbg4uRXhsrqxrM2+3Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9JYfRczN6Vj/Zc" +
                        "WvBA6YKDaHNH2g2nHv2fo2vf6Hp0W+o/Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn73p/fYo+3wizL" +
                        "h4ddI/uw/d9X/dvOYvQ3vsx7bsezb9t+0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0OkUZWExuEcZteM" +
                        "HZNjbGvbtYHZD34uO2kfmuxrd//AAXp+ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/o8Vv//ZOEJJT" +
                        "QQhAAAAAABVAAAAAQEAAAAPAEEAZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwAAAAEwBBAGQAbwBiA" +
                        "GUAIABQAGgAbwB0AG8AcwBoAG8AcAAgAEMAUwA1AAAAAQA4QklNBAYAAAAAAAcABwAAAAEBAP/hDdBod" +
                        "HRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ" +
                        "2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4O" +
                        "nhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTItMTc6MzI6M" +
                        "DAgICAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyL" +
                        "zIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6e" +
                        "G1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb" +
                        "2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuM" +
                        "C9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50c" +
                        "y8xLjEvIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8iI" +
                        "HhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXA6Q3JlYXRlRGF0Z" +
                        "T0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxMS0wMS0xOFQwO" +
                        "To1MTowNi0wNjowMCIgeG1wOk1vZGlmeURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtc" +
                        "E1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MzQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHhtc" +
                        "E1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MzM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHhtc" +
                        "E1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3Q" +
                        "zE5OCIgZGM6Zm9ybWF0PSJpbWFnZS9qcGVnIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b3Nob" +
                        "3A6SUNDUHJvZmlsZT0ic1JHQiBJRUM2MTk2Ni0yLjEiPg0KCQkJPHhtcE1NOkhpc3Rvcnk+DQoJCQkJP" +
                        "HJkZjpTZXE+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZ" +
                        "UlEPSJ4bXAuaWlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3aGVuPSIyM" +
                        "DExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob" +
                        "3AgQ1M1IFdpbmRvd3MiLz4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppb" +
                        "nN0YW5jZUlEPSJ4bXAuaWlkOjM0NEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3a" +
                        "GVuPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQa" +
                        "G90b3Nob3AgQ1M1IFdpbmRvd3MiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4NCgkJCQk8L3JkZjpTZXE+DQoJC" +
                        "Qk8L3htcE1NOkhpc3Rvcnk+DQoJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJERj4NCjwveDp4b" +
                        "XBtZXRhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/eHBhY2tldCBlbmQ9J3cnPz7/4gxYSUNDX" +
                        "1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJR" +
                        "UMgc1JHQgAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia" +
                        "3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkb" +
                        "WRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0Z" +
                        "WNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlya" +
                        "WdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2M" +
                        "Tk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAA" +
                        "AAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAA" +
                        "A+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBodHRwO" +
                        "i8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZ" +
                        "XNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAA" +
                        "AAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQ" +
                        "zYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2N" +
                        "i0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAEEwsAA" +
                        "1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AA" +
                        "AACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoAT" +
                        "wBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5" +
                        "QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBq" +
                        "QGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCt" +
                        "gLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEE" +
                        "wQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFx" +
                        "QXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0" +
                        "gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKP" +
                        "QpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMND" +
                        "Q0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQ" +
                        "xBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT5" +
                        "RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF9IX9" +
                        "xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9ocAhwqHFIce" +
                        "xyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYIMQg8CEcIUghd" +
                        "SGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3JicmVyaHJrcm6" +
                        "CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRLAUsOSxuLKIs1" +
                        "y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUMw0zR" +
                        "jN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8Ofk6N" +
                        "jp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBr" +
                        "EHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJq" +
                        "UnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSM" +
                        "VJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbR" +
                        "VuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6" +
                        "WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvH" +
                        "m94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl55" +
                        "3pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR" +
                        "4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP" +
                        "5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0" +
                        "p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaocqo+rA" +
                        "qt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm40" +
                        "blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGxsPHQ" +
                        "ce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWV" +
                        "dbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmD" +
                        "eaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72b" +
                        "fb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////2wBDAAEBAQEBAQEBAQECAQEBAgIBAQEBA" +
                        "gICAgICAgIDAgMDAwMCAwMEBAQEBAMFBQUFBQUHBwcHBwgICAgICAgICAj/2wBDAQEBAQICAgQDAwQHB" +
                        "QQFBwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAj/wAARCACBA" +
                        "WIDAREAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFB" +
                        "AQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3O" +
                        "Dk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipq" +
                        "rKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBA" +
                        "QEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiM" +
                        "oEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ" +
                        "2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1" +
                        "dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/igAoAKACgAoAKAGu6Ro8kjiOOMF5" +
                        "JHICqoGSST0AoA/Fbxl/wAF0P2VvC/xJu/Bul+EvE3jLwjpl0+lX/xJ8Pw6d9jlKOUM9nb3FzHLNBnkO" +
                        "2wkZKqRjMc6NFSZ+wfgnxp4X+I/hDw1498E6xF4g8JeL7K38Q+HdasifLuLS6jEsbgMAynB5VgCpyCAQ" +
                        "RVmbR1FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAYPirQYfFXhjxH4XuLl7O38SWF5oM93a482JLy3e3Z03cblD5Ge9AH8RP" +
                        "jP/AIJcftveFPiTe/Dmy+Bmq+L9l0bHSPGnhlYpdBvYGkKxXAvpHSGBHUbis7IyZw4U1jys6lUR/YJ+y" +
                        "F8FdU/Z2/Zp+D3wY13U49X13wNpKWWvX1mS0BvrmeS+uEhZlQtFHLOyRsVBKgEgHitUjnk7s+kKZIUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAH+ev8A8FEP2sfGf7VP7UfxP8W3Xi+91T4d+HNbvtA+E" +
                        "GiG4lFjYaNp9wbS2mt4AxSOS4WITSuOSzHnAGP9oPBXw6wvD3D+Hoqko15wUqrtq5SV2m92o35Utkkf4" +
                        "peN3iPiuIuIcRWdVyoQm40lfSMIuyaWycrcze92f1P/APBDj4ufFP4vfsR/bPipr154ou/BHizVvh/4O" +
                        "1/xBLNcXk+h2mnabeQrJPOzPKIZruaFCT8qIqDha/z5+llw3l+W8V8uEgoKpSjOSjZJTcpp2S0V1FN92" +
                        "2+p/od9EjiXMcz4T5sXNzdOrKEJSu24KMGrt6uzk0uySXQ/Ymv5lP6fCgAoAKACgAoAKACgAoAKACgAo" +
                        "AKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgCC6uraytri9v" +
                        "bhLSztEe6u7u6dY4ooo1Ls7s5AVVAJJJwBQB8sftdfGzT/hj+xt8cvjh4a1iG5h07wVqOv+CNdspVaCe" +
                        "71KwMGlyxyKcMsk1xEVI6g8V974W8PLNuI8FhGrxnVjzf4U7y/8lTPgPFXiJ5Tw3jsWnaVOlLl/xNWj/" +
                        "wCTNH+crX+4J/hif3b/AAP1Wz/4J8f8EkPCPjt9GhuNZ+HvgBfiddaNqG+NLrxJ4mP9qx21y64fH23UU" +
                        "gYg5CjC8AV/kXxZh5cZ+JFXD8zUatf2d10p0/dbXT4YuS89z/X/AISxEOCvDWliOROdKh7Sz61KnvJPr" +
                        "8c1F+Wx9PfsVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L" +
                        "8D4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf6B4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5" +
                        "mfpwUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFAEF1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+Uj/gpz/wAFOtS/aA1XU" +
                        "P2a/wBm/V3h+ErXA0Pxf400+TyZfFtyZBF9mgcldunBuCSR555P7v7+UpG8IW1Z+kn/AAWu1WH4Z/8AB" +
                        "NXxB4G0uYwWWv6l4P8AhrbDB3Pb2N7FqYXO1sZXTBnkZHGTnB/pz6JOWLEcaUZtfwoVJf8AkvJ/7d/W5" +
                        "/Lv0u80eH4KrQTt7WdOP/k3P/7b/Wx/Fp8OPCUvj74h+A/AsLOs3jXWdL8JRNBjeG1K+iswVyCM5k44r" +
                        "/VPPMyWDwVbEPanCUv/AAFN/of5Q5HlrxuNo4db1Jxj/wCBNL9T+0H/AILt61qPhT/gnvqXh7QNPuDo/" +
                        "ifxP4X8Ia0NNjleC1062km1WNpygYJF59hCgZiBvZBnJAP+XP0RcLDEcaRqVJLmhTqSV93J2i7d3aUnp" +
                        "0Tex/qh9L/F1MNwVKnTi+WdWnF22UVeSv2V4xWvVpb2P5Ef2Yf2nviz+yP8WdD+L/wg1w6bremn7JrOj" +
                        "Xe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP9JuPuAcu4ky6eDxkLweqa+KMukovo19zWjum0f5o+H/iBm" +
                        "XDWZQxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6" +
                        "E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqxOGd" +
                        "pqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAFAHKeOPHPg/4aeE9c8d+PvEdp4S8H+Gof7Q13xFrkqwW1";
                    resourceString += "tFuEYLM3dmYKqjlmIABJAoBI8j+A37V/7PP7TkGuTfAz4oWXj1/DbImu2FvDe2N7bLIzIkj2upwW03lsV" +
                        "IWQJtOODSTuNxaPoemIKACgAoAKAPgbxH/wVC/YQ8H/ABV1z4K+LP2gbTw18RvDWqTeDNf0nXtG8S2lp" +
                        "aajbzGCSOXUZ9OWyVVcYMhn2d92K/YsD4A8X4nLoY6jgnOhOKnFqVNtxaumoqfPt05b+R+NY76QXB+Fz" +
                        "GeBrY1Qrwk4SThUSUk7NObhyb9ea3mfesUsU8UU8EqzQTKssM0TBkdGGQykcEEdDX4/KLTs9z9jjJNXW" +
                        "qZJUlBQAUAFABQB8U/8FGPir4y+Cf7En7RPxK+H2qPofjPQNDW10DW7YlZrKbUr+30o3ELD7ssS3JeNu" +
                        "zAHtX6p4I8PYXNeK8FhcTHmpSneS6NRTlZ+TtZ+R+U+OPEWKynhPHYrDS5asYWi+qcpKN15q915n8hP/" +
                        "BK34hePvFn/AAUe/ZwuvFPjjWPEtzqurapLqlx4g1O9vJLlv+Ec1A5la5kcueBy2a/0o+kJk2Dw3A+OV" +
                        "KlCCjGNuWKVvfjtZaH+Z30d86xmJ46wLrVpzcpyvzSbv+7lvd6n93Gt63o3hrRtV8ReItVttC0DQrabW" +
                        "Nb1vWJo7a0s7S2jM0s00sxVEjRFLMzEAAZNf5Bn+w588fBH9sv9mP8AaO1/W/CvwW+L2neOPEnh6NrzU" +
                        "9Et4r6zufIR1jaaFNRgtzPErMoaSLcoJGTyKSaZTi0fTdMkKACgAoAKAPl34zftqfst/s9+LNI8DfGL4" +
                        "y6Z4L8W60kdzaaFcR3t3PFDLnZJc/2fBOLaNtp2vOUU9jSbRSi2fS+n6hYatYWWq6Vew6npepwx6hpup" +
                        "afIk0FxBMgkjkjkjJV0dSCrAkEHIpklugAoAKACgAoAKACgAoAgurq2sra4vb24S0s7RHuru7unWOKKK" +
                        "NS7O7OQFVQCSScAUAfyf/8ABUb/AIKjXPxwudb/AGe/2e9be0+DVo7af458c6ezRy+K5Y2w0EDDBXTlI" +
                        "5PWc8n93gPlKR0U6dj8mv2bvAHif4nfHj4TeC/CPhqfxbrGq69pbnRdPi80vawXkc9w8mcKsUcSM8jsQ" +
                        "qqCSQBUouT0P6SP+Dh6eeH9if4bxxTPFHdfE/RILlI2KiRB4W8RShWA6jcitg9wD2r+xPoVwT4qr3W2G" +
                        "n/6cpH8Y/Tam1wpQSe+Jh/6bqn8tH7E1tBeftmfsj2l1Ctxa3XxO8BW1zBKAyPG/iqxVlYHqCDg1/oJ4" +
                        "qzceF8yadmsNW/9NyP89PCeClxTliauniaP/pyJ/or+MPB/hb4geFtf8E+NtAtfFPhHxTazaJ4h8Pa3C" +
                        "k9reWs6FHjkRwQQQfw6jmv8TMszPEYLEQr0JuFSDTjJOzTWzTP9wMzyzD43DzoV4KdKaalFq6ae6aP4i" +
                        "f8AgqH/AMEvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf/AFb8A" +
                        "fH7D8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf2nv" +
                        "iz+yP8AFnQ/i/8ACDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxkL" +
                        "weqa+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1p8Rf" +
                        "h1djTdf00Raf8RPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67" +
                        "Nfajun3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAfl9/wV38DeNviX+yFP4" +
                        "D+Hnhy98XeLvE/inw7p+k+HPD8Lz3N0wnkmICJ/CoQuzHhQCxIAzUz2LpvU+AP+CTn7CX7XP7NP7TGqf" +
                        "EL4yfC6TwL4H1Twnqnhp9SGveHb7zbq5vrC6hhe30rULmbnyC3zJgFeSDipjFpl1Jpo/pArQxCgAoAKA" +
                        "CgD/O0/4KJf8n1/taf9j74j/wDTjJX+13gp/wAkjlv/AF4p/wDpKP8AETxu/wCSvzL/AK/1P/Smf3Xfs" +
                        "TXNxefsZfsj3l5O91d3Xwx8A3N1dXLs8kkj+FbFmZmYkliTkk9a/wAjvFWEY8UZkkrJYmt/6ckf6+eFF" +
                        "SUuFsslJ3bw1H/03E+na+CPvwoAKACgAoA/OL/grj/yjo/ae/7BWl/+pHp1fuH0bv8Akt8B/il/6bmfh" +
                        "n0lf+SHzD/DH/05A/kh/wCCR3/KRf8AZh/7Cuqf+o5qNf6PfSR/5IjH/wCGP/pyB/mx9Gr/AJLjL/8AF" +
                        "L/03M/sU/4KV6J4h8S/sQfHnw54T0u71vxJr9npOiaLouhRSz3l5PdeIbCBYIo4AXdpN23aBznFf43y2" +
                        "P8AZyG5+Jn/AATV/wCCen7Z3wO/bA+DXxf+Jnwfm8G/DjR4tfPiPWZ9d8NyyRRah4X1Gyt1ls7PUZbk7" +
                        "riaIFfKJU4LAAEiIxdzWc00f1NVqYBQAUAFABQB/I/+29+w1+1r+01+23+0t4y+Dvwfv/GPhe11bTdMX" +
                        "xJf32laTZzPb+HtPiMdvNrt3ZrN5eArCIttxg4xispRbZ0Rkkj+j/8AYq+H/jn4U/sp/Av4cfErTG0Xx" +
                        "z4M0G30HxFpEt1bXptpYHdVi86zlnicKm0DY5AHA6VpHYxk9T6hpkhQAUAFABQAUAFAEF1dW1lbXF7e3" +
                        "CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+T//AIKjf8FRrn44XOt/s9/s9629p8GrR20/xz4509mjl" +
                        "8VyxthoIGGCunKRyes55P7vAfKUjop07H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0fR9PAyxxueSR" +
                        "2wscUagvJI5CooLMQBUJGjdj+1H9gH9gHwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6f5gDR2kbAZOA" +
                        "0rAO4GERNoxsc053Pj3/g4L0ObVv2GvDF/Fu2eGPiHoGuXOxQRsk0bWdNG4kjA3XY59cCv62+hni1T4t" +
                        "qRf26E1/wCTU5f+2n8h/TTwjqcI05L7GIg//JKkf/bj+S79lTxHF4P/AGof2bvFs7pFB4W8feD/ABHNJ" +
                        "chmjVLHxDaXJLhCCVATnBzX+jXiHgXieH8dRW86FWP3wkj/ADd8OscsLxBgKz2hXpS+6cWf6Tlf4Yn+7" +
                        "ZzfjDwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8RgsRCvQm4VINO" +
                        "Mk7NNbNM4czyzD43DzoV4KdKaalFq6ae6aP4if+Cof/AAS88U/sWeKbj4kfDe3uvFP7NHim68vR9Yk3z" +
                        "3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/9W/AHx+w/FOHWGxLUMfBarZVEvtR8/wCaPTdabf5NfSC+j7iOF" +
                        "MQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307WdOd1aaxvoVZ" +
                        "fMhk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49Y" +
                        "yXVP707NNNJn95/7FX7avwm/be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig" +
                        "8K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12" +
                        "aaX2HX5mfpwUAfnt/wVB/ac8f8A7JX7IHjf4r/C1baLx9Le6X4P8OatqsKXMOnS6nc+W915EoZJXjjVv" +
                        "LVwU3kFgygq37R4A8BYPiPiWlhMXf2NpSkk7OXKvhutUm7Xa1tezT1X4p9IHj/G8N8M1sZhLe2vGMW1d" +
                        "R5n8Vno2leyel7XTWj/ABr/AOCN37eX7W/7SP7XGo/Dz43fGi+8feDYfB+s+IotC1Cy0i3jF7bXunxRS" +
                        "7rG0gfKrM4xuxz0r+nfpO+EHDeRcNxxOBwqpVXVjG6cno1K61k10R/Lv0XfGLiXPeJZYbH4qVWkqM5Wa" +
                        "itU4pPSKfVngH/BSH/gpD+218Fv22vj58MPhh8fNQ8JeA/CWoafZ+HfDtnp+hzR2sc2h2V06q91ZSyHM" +
                        "krN8zHrX2Xgd4HcKZrwpg8VisHGpWqRk5Scpq9pyXSSWyXQ+M8dPHTizKuLMZhMJjJU6NOUVGKjB2vCL" +
                        "6xb3b6nxB/w9x/4KL/9HPar/wCCvw5/8rq/V/8AiW7gj/oAj/4FU/8Akz8l/wCJleOP+hhL/wABp/8Ay" +
                        "B6B8P8A/gtb/wAFD/A2rQ3+ofGG0+I2nI/nT+G/iB4f0Wa0mPAw0umW9jdKOOiTr+dePnP0V+CsXTcY4" +
                        "Z0pfzQnNNfKTlH74s9nJfpW8b4OopSxSrR/lnCDT+cVGX3SR+7H7Mv/AAVU8C/8FBPCt18BLzxxqP7Gf" +
                        "7UWtxhfAvifw7LYahpmo6jGhCCybVoHjkLt9+xnQOynEUzONy/yNx59HrF8GYhZhGlHMMvj8cZJxlGPX" +
                        "m5XdW6Ti7J6yilo/wCv+AfpE4PjTDvLpVpZfmEl7kouMoyl05eZWd+tOSu1pGTeq/G79qP9tX/grN+yN" +
                        "8Y/EnwY+K37Rmp22taMReaPrVlpXh42Gs6XK7Lb39m76aC0MoQ9QGVgyMAysB/Tvh/4V+HPEmWU8bhMD" +
                        "Fwlo05TvGS3jL3919zVmtGj+XfELxW8SOGs0qYHGY6SnHVNRhaUXtKPubP707p6pn5EePPHXiz4neM/E" +
                        "/xD8d6y/iHxl4zvbjxH4n125SGOS7vbqQyyyssCRoCzEnCqB7V/SWUZRhsBhaeGw8eSlTSjFa6JbLW7P" +
                        "5ozjN8TmGKqYnES56tSTlJ6at6t6WX3H2b4O/4Kh/t6fD/wh4V8B+D/ANorUtE8I+CdNsfCPhbRYNN0C" +
                        "RLPTtNtUs7aBWmsHdhHFGqgsxJxySa/L8z8AOD8biamIrYGMqlSTlJ809ZSd29JW1bvofqWV/SC4xwWG" +
                        "p4ehjpRpU4qMVyw0jFWS1jfRK2p/W5/wSO/aq+LP7W/7JR+IXxsMd34z8J+I9T+Hc3iyG1jshrdrY2Nj" +
                        "fJfPFAkcIfN40LmJQhaMnAORX+cP0kPDzLuG+I/q2BuqU6cZ8t78jbkuW7u7e7dX1s/Q/0n+jV4i5lxL" +
                        "w39Zx9nVp1JQ5rW50lF81lZX95xdla8e9z89v28/wDgvBp/w88Q658KP2O9I0/xprejvJpev/GnxOr3O" +
                        "jw3CqUdNKtInT7S0bH/AI+JWEW5SFjlQh6/aPCD6Ic8bRhi86lKnCWsaUdJNf35a8t/5V71nrKL0PxTx" +
                        "i+mDDA154PJYxqTjpKrLWKf9yOnNb+Z+7daRktT8JfFX/BT/wDb+8Y6nLq2q/tUeKrG5lLOYPCt1Dodq" +
                        "N2OFt9GitYgBjj5f61/XOXeAfBuFp8kMvpNf3k5v75Nv8T+QMx+kBxniqnPPMaqf91qC+6CivwPfvgN/" +
                        "wAFr/26Pg5q1ifFXj2H45+EYnQX3hf4oWsEs7xfdfytSs0hu0kI+60jyKCASh5B+O4w+itwlmdN+yovD" +
                        "VOkqbdvnB3jb0Sfmj7Tg76V3F+V1F7assTS6xqJX+U1aSfq2vJn9Y37Dv7e/wAGf26vAFz4m+H0r+HPG" +
                        "vhwRQ+P/hfrk0b6lpMso+WRWQKLi1kIIjnVQDghlRgVH+dPix4PZpwjjFSxPv0p/BUS92Xl5SXWL+Ta1" +
                        "P8AR3wk8ZMr4vwTq4b3KsLc9Nv3ovv/AHovpJL1Sehwf/BXH/lHR+09/wBgrS//AFI9Or2Po3f8lvgP8" +
                        "Uv/AE3M8f6Sv/JD5h/hj/6cgfyQ/wDBI7/lIv8Asw/9hXVP/Uc1Gv8AR76SP/JEY/8Awx/9OQP82Po1f" +
                        "8lxl/8Ail/6bmf2m/tyfHTxJ+zV+yb8b/jd4OsbfUPFfgXSVufDkGrKz2y3t7ewabDLKikF1ia4EhTI3" +
                        "bcZGc1/lr4TcJUM94jwmBrNqnVl71t7JOTS7Xta/S9z/VTxc4vr5Dw3i8fRSdSlD3b7XbUU33s3e3W1j" +
                        "+bb/gmB/wAFGv20vj9+3l8Evhj8W/jpe+L/AAB4wfxRN4h8Lzabodrbzmz8IatqcAzY2ULoI54EcBWH3" +
                        "QOnFf3L4++CHC2TcIYvFYPCKnWp+z5Zc021erCL3k07pta9z+E/o/eOXFWc8Y4TCYzGOpRqe05o8sEna" +
                        "lOS2imrNJ6dj+j79sz9s/4RfsR/CmT4l/FG5kv77UpG0nwN4F0Zo/7T13UFUOYoBIQqRxqQ00zfKi46s" +
                        "yK38PeF/hdmXFeY/VcIrJazm/hhHu+7eyS1b8k2v7o8UvFPLOE8u+tYtttu0IL4py7LslvJvRLu2k/5K" +
                        "fj1/wAFwv24fi7qd6ngbxVZfAXwjI7Cy8P/AA7s7ea9EXIXz9S1KOadpADy0Pkqf7or/R3g/wCifwnlt" +
                        "Ne3pvFVesptpX8oRaVvJ8z8z/NrjH6WvFuZ1H9XqLC0ukYJN285yTd/Ncq8j44h/wCCg37c0GpHVU/a3" +
                        "+ITXRQQ+VN4r1iS2wrBv+PeScw545OzJHGcE1+my8GeEnT5P7NoW/69xv8Afa/4n5fHxq4uVTn/ALSxF" +
                        "/8Ar5K33Xt+B96fs7f8F3v2xPhVqenWfxen079oTwTG6RX9n4ktbbStbjtx1+zajpUMal++64hmz046j" +
                        "8g42+iJwzmNOUsGpYWr0cW5Qv5xk3p/hlE/YuCPpg8UZdUjHGuOLpdVJKM7eU4pa/4oyP6yP2Tv2tPhD" +
                        "+2X8J7P4tfB/Up5dME7aJ4j8O63EsGp6NqccSTPaXUaM67gsisrozIykEMeQP8AOjxF8Ocy4XzF4PGRX" +
                        "Na8ZLWMo7KUX8mrNJp7o/0f8OPEjLOKctWMwUny3tKL0lGW7jJarZp3Taa2Z/Nn/wAFSf8AgqT+2F8Mv" +
                        "2wviR8GPgx8SD8K/AnwrOn6FaWmhafpdzcajcXOl22ozXV1NqNtcNu3XBREQqoVRwWJJ/ub6P30fuGcf" +
                        "wzQxuNoe3rV+ZtuUkopScUkotdrtu7bfayP4S+kL9IXifL+J6+BwNf2FGhypJRi3JuKk23JPvZJWSS73" +
                        "Z/RH+wT8S/F/wAVP2Mf2f8A4ofEzxE3iHxh4q8Ox654q8S3628DXE3nShpXECRRr8qjOFA4r+KfGDIsN" +
                        "l/FGMwuFhyUoVLRiruystNbs/tzwcz7FZjwrgsXip89WdO8pOyu7vXSyPxA/bh/4L4aloPirXPht+xjo" +
                        "+m6pYaJLJpmofG/xZC17BeTRkq7aRZ7kRolYfLcT7hJyVj27Xb+r/Cf6HtOth4YrO5Si5K6pRdml/flv" +
                        "fvGNmusr3S/kzxb+mRUo4ieFyOMZRi7OtJXTf8AcjtbtKV0+kbWb/Enxj/wUq/b28c3V1ea1+1f4zspb" +
                        "zb5yeDtWk8OxDawYbIvD4skj5HOxRkcHiv6ryzwL4PwkVGGXUWl/NHn/GfM38z+Ts08eOMsZJyqZlWTf" +
                        "8suRfJQ5Uvkdn8NP+CsH/BQH4X6hBeaZ+0hrPiu1Rle60j4li28R29wigDYzatHNMgO3kxSI3XnJNeXn" +
                        "v0deDcwg4ywMIPvTvBr/wABaT+aa8j1ch+kdxpl81KOOnUXapaon/4Em18mn5n9Fv8AwT0/4LVeC/2o/" +
                        "FPh74KfHXwvb/Cz40+I5F0zwnrPh1ppPDev3ZUkQILp5JrK4cjEcUjyK54EgYqh/ibxp+ixiuH8PPHYC" +
                        "o62FgryUre0gu+llKK6tJNfy2TZ/cHgn9KzC8Q4iGBzCmqGLm7Rcb+zm+2t3CT6JuSf812kfuxX8jH9f" +
                        "BQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/k/8A+Co3/BUa5+OFzrf7Pf7Petvaf" +
                        "Bq0dtP8c+OdPZo5fFcsbYaCBhgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz40ePPDfwz+GfhufxX408Vz" +
                        "jT9H0fTwMscbnkkdsLHFGoLySOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiuCNfiD8QVjOFGRJ" +
                        "/Z+n+YA0dpGwGTgNKwDuBhETaMbHNOdz9Caog/N3/grl8OZviX/AME9P2jdMs4PO1Hwxptl8RrNgCTGn" +
                        "h3VbbVrpsD/AKdYJh7ZzX7l9G7O1gONMDKT92cnB/8Ab8XFf+TNH4V9JXI3j+CcdGKvKEVNf9uSUn/5K" +
                        "mfwIW1zPZ3Fvd2szW91aulzbTxEq6SIwZWUjoQRkV/sTOClFpq6Z/jTTm4yTTs0f6XvwM+JVj8ZPgv8J" +
                        "/izp0iSWnxI8O6N41TyeiNqWnxXTpjAwUZypBGQRg1/hLxbkU8rzTE4OW9GpKH/AIDJq/z3P96eEc+hm" +
                        "mVYbGR2rU4z/wDAop2+Wx6pXzx9Ec34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoUeORH" +
                        "BBBB/DqOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gqH/wS88U/sWeK" +
                        "bj4kfDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/wDVvwB8fsPxTh1hsS1DHwWq2" +
                        "VRL7UfP+aPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v8Awg1w6" +
                        "bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7pt" +
                        "H434f8AiBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf32fsb/ALV/gT9s74D+Gfjd4EtpdITUJJtB8WeFr" +
                        "91kuNG1qzCG5tHkQBZABIkkcgA3RujEKSVH+O3id4d4zhfN6mBxDUrWcZLaUHtK3TZpro01drV/7KeF3" +
                        "iNg+Ksnp4/DpxveMoveM1vG/XdNPqmnZPRfU1fnx+hn4z/8F4v+Uf3iH/safDP/AKUyV/T/ANEP/ksof" +
                        "9eqn5I/lv6YX/JFz/6+0/zZ+H//AAb/AH/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+kzP5K+hh/wAlf" +
                        "L/rxP8A9KgfLn/BXH/lIv8AtPf9hXS//Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGYf4o/wDpuB/Q/" +
                        "wD8E0/2A/2Nvi3+w5+z/wDEX4k/s9+H/GHjfxPp2o3Wv+JNXhna5upItdvrZGcpKoyEjVRx0FfxX47eM" +
                        "XE+W8WY3DYXG1KdKEo8sU1ZXhF9u7P7a8BvBrhfMuEcFicVgqdStOMuaTTu7Tku/ZI9c+Pv/BEb9h/4u" +
                        "+Hb+DwH4Km+BHjUxt/ZPizwBd3ktsswA2C406/nlt5IwR8wjEbnP3xxXzfB30reLMtrp4iqsTS6xmle3" +
                        "lNJST9eZeR9Lxl9E3hLM6DWHpPC1ekoN2v5wk3Fr05X5n8ff7Tv7N3xX/Yx+Omt/CT4hA6d4p8LSQa94" +
                        "Y8U6G8sdvqVhJIXs9SsZflbYxjOCMMkishwyED/AEu4C45y7ijKIYzDa053Uou14v7UJL5+jTTWjR/mR" +
                        "x/wJmXCubzweJ0qQs4yV7Sj9mcX209U009Uz+tT9hDXfgL/AMFVf2XfAfir9qL4YaL8VvjH8Cprn4Z+L" +
                        "NR8RwE3DSvHBPHeqYnRtt7AsbSfw+csm0AcV/nJ4u4POPDziCtSyrEToYXEpVIqL06px/7cd0uvK43P9" +
                        "JPB/GZN4i8PUa2bYeFfFYZunJyWvRqWn86s305lKx/J7+2/4N8L/Dv9r/8AaS8C+CdFh8N+EfCXjHXdB" +
                        "8N6DpwKwWdnbXzxxRRhiSFVRgZNf6KeFGaYjG8NYHEV5udWdGDk3u20rtn+cXi1leHwPE2Pw9CChSp1p" +
                        "xjFbJJuyR/Xz+yP/wAE5f2HvHH7KX7MfjXxb+zX4b13xV4v+HvgvxR4m1y+huDPeahqHhuzu7ieQrMAX" +
                        "kkkZmwOpr/NXxI8buLMJxFj6FHHVI06derGKTVlGNSSSWnRKx/pn4a+BvCWL4cy+vWwFOVSph6UpNp3c" +
                        "pU4tt67tu54J/wWe+O+jfsc/sieCP2YvgFpFl8Mj8a2v/CsGleCoItPi0zwpYLHLqiwx2oUI15JdxxOx" +
                        "GXV5jksSR9j9F3hCrxPxLVzTMJOt9XtK825OVR35Lt78qi2l0aj0PjfpT8YUuF+GaOVZdGNH6zzRtBKK" +
                        "jTjZzsltzOSTfVOXXU/nV/4J4fsI+Lv28fjRJ4IsdTk8KfDjwdDF4g+KvjuGETPY2UrskFvbo5CNdXbo" +
                        "yxBjhVV5CGCFW/tjxq8XcNwhlft5R569R8tOF7XfVvryx3dt20tL3X8QeCXg/ieMc19hGXJQprmqTtey" +
                        "6JdOaT0V9km9bWf9j/wu/4JcfsFfCjw5B4e0v8AZr8N+L2WH7Je6/8AFGxh8TajdOV2vK0usLOI3Y8/u" +
                        "VjVT91VHFf5j8QfSA4wzGu6k8dUp63UabdOK8rRtdf4m2+rZ/qFw99Hvg7LaCpQwFOppZyqJVJPzvK9n" +
                        "/hSS6JH58/t7/8ABD/4MfEHwN4j+IP7JPhpPhf8XdEhl1iD4e6bPKfD/iERKZHto4bhnFncuBiFoisRb" +
                        "Cug3eYv7N4PfSvzTBYuGHzip7bDSdudr34eba+KK+1e8rapu1n+LeMf0S8qxuEqYnJ6fscTFX5E/cnbo" +
                        "k/hk/s2tG+jSvzL+Yj9kr9o/wAa/sfftEeA/jN4ba5gn8JXy2HjXw2jGE6poksqxajp0ySYGZIwdm8fJ" +
                        "KqPjcgx/e/iPwPheJskrYKrZqcbwlvyzXwyXo97bxbWzP4A8NuOsXwxndHHUrp05WnHbmg/ji/VbX2kk" +
                        "90f2j/8FUNf0nxX/wAEyP2gfFGgXi6joXiTw9oOv6LqEQIWe0vNd0y4hkG4A4ZHBGa/y3+j5g6mH49wV" +
                        "KorThUnFrs1Caa+8/1S+kRjKWJ4AxtWm7wnThJPunODT+4/k5/4JHf8pF/2Yf8AsK6p/wCo5qNf6K/SR" +
                        "/5IjH/4Y/8ApyB/nF9Gr/kuMv8A8Uv/AE3M/re/4K4/8o6P2nv+wVpf/qR6dX+cP0bv+S3wH+KX/puZ/" +
                        "pP9JX/kh8w/wx/9OQP5Sv8Agi7/AMpLf2bP+5x/9QHXK/0O+lH/AMkJjv8AuF/6epn+dH0V/wDkvcB/3" +
                        "F/9M1D6j/4OF9f8TXn7Yvw88OalPKPDOheAtO1DwxYuGEAkv9Z1MXU6Z4LyNbojEdo1HavgPoXYOhHhi" +
                        "vVil7SVeSk+ukYcq+V216s/QvpsY2vLiihSk37ONCLiunvTnzP1dkn6I8w/4JWeEP8Agl/r9zq91+2p4" +
                        "vEXxQW+VPB/hX4lSXWkeC1skVCszXtnKsUsxcsHS8kjjC4wj8sPf+kJmXH9GMVkdL/Z+X3pU7Sq37crV" +
                        "0rbOCbv1Wx8/wDR3yzw/rSk89q/7Rze7GpeNK3fmTs3fdTajbo9z+rDS/2Jf2AfGnhO2k8PfswfCzxB4" +
                        "X1WFVsPEHhjwt4al8+IHh4tQsYPMJ4++suT61/nliPFXjLC4lqpmGJhUi9YyqVNH5xbt8mj/RXD+E/Bm" +
                        "LwydPL8LOnJaSjTp6ryklf5pn5Q/thf8EBPhp48C+J/2PfEFv8ACHxNLMW1PwD4+vNSu/DM8bksXt7lI" +
                        "r28tXUk/KRKhGAojxz/AET4Z/TGx+D/AHWcwdenbScFFVF6q8YyXn7r7tn85eJ30M8BjP3uSzWHqX1hN" +
                        "ydN+jtKUX5e8uyR9+/8Evf2DNZ/YM+C3ibwj4y8Y2njL4g/EHVl8VeK7jwws40mzEFqlpBbWr3ccMsoU" +
                        "BmaV40yWxsG3Lfjnj94v0uMM0p1qNJ06NKPLHmtzO7u27NpdEkm9t9dP2b6Pvg7V4OyqpRr1VUr1Zc0u" +
                        "W/KrKyUbpN9W20r3tbTX+TP/grj/wApF/2nv+wrpf8A6jmnV/ov9G7/AJIjAf4Zf+nJn+b/ANJX/kuMw" +
                        "/xR/wDTcD+hH+3vE3hr/g3/AIdU8I3M1nrB+GUWlvcWIJlWxv8AV1sL7G3kA2s0oZuwye1fxj9ToV/GR" +
                        "wrJOP1m+vdRvH/yZI/tT65iKHgwp0W1L6tbTtKVpf8AkrZ/JB8F7H4Tal8VfAtj8dte1bwz8Ibi/iXx9" +
                        "rnge0ivdVgsACzfZ4pmVcswCs+GKKS4SQqEb/R/imtmVPLq0sBCM8So+4pu0W/Nr77aXejaTuv82OFaO" +
                        "W1MxoxzCcoYZy99wV5KPkn919bLVKTVn/bD+yX+zv8A8EgPHvha0sf2dvAPwy+MYigEt3F4ut7PxP4iC" +
                        "gLulurbxUs97AWIzhokUchQBxX+VviNxr4l4PEOWZVsTh9dOVunD0Tp2g/vb7s/1c8NuCPDLGYdRy2jh" +
                        "sRprzJVJ+slUvNfcl2R2fx5/wCCQ/7Cfxz0S/tIvgxYfCHxJMjLpfi/4MRR6BLaSEcN9itVFjKucZWSA" +
                        "8dCp5ry+EPpJ8XZTVUnipV4dY1ffT/7efvr5S9bnqcY/Rn4PzelKKwscPU6Spe41/26vcfzj6WPy6/Zd" +
                        "/4IL/FX4N/tV/Dz4q+PvjN4d1v4WfCTxDYfETw0PCiaouv6rc6Lex6hYx3Nrd2y29qjSxKZtlzMdoKr9" +
                        "7cv7/4gfS/y7NOHq+Ew+FqRxFem4S5uXkippxk00+aWjdrxjrq9rP8An3w++h1mOV8RUMXiMVTlh6FRT" +
                        "jy83PJwalFNNcsVdK9pS00W91/T1X8Dn9/hQB4p+0V8EtH/AGjPgt4/+C+u+INR8Lab47sjpcuveGJ3g" +
                        "urd1kWZCQrKJYiyASwsdsiEqcZyE0OLsz+Fv9qD9l/4pfsmfFLVPhd8UdL8m5h3XvhvxJZK507WtOLlY" +
                        "7u0kYDKnGGU/MjZVgCKxasdUZXPb/8Agnh+2m37FPxom8Xap4Wg8U+BPGtvD4X8fxw20Daxa2Kz+aJ9P" +
                        "uJAGV42+Z4dwSYABsMqOji7CnG6P7bPh38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdLfdFNE2QQQQGR" +
                        "0YFXRgGRgVYBgRWxytHaUAc34x8KaL488IeKvA/iS2+2eHfGem33hTX7P5f3tlqNq9nOnzBh80chHINd" +
                        "2WZjVweJp16TtOnJST7OLuvxRw5pl1LGYaph6qvCpFxku6krP8ABn+ad8Wvht4g+DnxR+Ifwo8VRGLxF" +
                        "8OdZ1LwXq+5GjEk2nXb2pkQNn5JNm9DkgqQQSDmv91uHM9o5nl9DF0vgrQjNekle3qtn5n+DXEmRVsrz" +
                        "Cvg6y9+jOUH6xbV/R7ryP7BP+CCH7Rdr8T/ANk3UvglqmoCXxd+z5qk2nW9rKcyP4e1yaXU7KXLHLbJz" +
                        "cw4Awqog7gV/mj9MLgmWA4jjjoR/d4qKd/78EoyXzXK/Ntn+nH0OOOI5hw3LATl+9wkmrf3Jtyi/lLmX" +
                        "kkj90a/kk/rsKAP5UP+Cw//AAVe0vxfY+Lv2Qf2btVt9X8MXW/QPjT8ULTy7iC+2PiTStMc7lMQZcT3C" +
                        "/eI2Rnblm/0N+jN9Haphp085zOLjUWtKm9Gu05+f8sem71sl/nV9J36RtPFQq5LlklKm/dq1Fqn3hDy/" +
                        "ml12Wl2/wCbrwf4P8U/EDxToHgnwToF14p8XeKbqHRPD3h7RIXnury6ncIkcaICSST+HU8V/ceZ5nh8F" +
                        "h51681CnBNyk3ZJLdtn8K5ZlmIxuIhQoQc6s2lGKV229kkf3xf8Evv2O9f/AGJ/2WtM+GPjPU4dQ8f+L" +
                        "NWu/if49g0x/NtLHUtRs7SxFpDIOJBDBZRK7j5WfcVyuCf8evH3xNo8VcQSxVCLVGEVThfRuMXJ8zXS7" +
                        "k2lula+p/sj9H7wwrcJ8PRwteSdapN1J21SlJRXKn1sopN7N3tofolX4oftx+M//BeL/lH94h/7Gnwz/" +
                        "wClMlf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/YheIP/AE46XX9YfTJ/5JGP/" +
                        "X+H/pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy/8ATkz8++kr/" +
                        "wAlxmH+KP8A6bgf1vf8Ejv+UdH7MP8A2CtU/wDUj1Gv84fpI/8AJb4//FH/ANNwP9J/o1f8kPl/+GX/A" +
                        "Kcmfo7X4efuZ/NV/wAHG/w60S4+HH7OXxaS1ji8R6Trep/Dqe9RQJp7LULD+040cgfMsUlk5QE/KZGx9" +
                        "41/dX0Ic7qxx2Owd3yShGduicXyt/NSV+9l2P4O+nJkdKWBwOMsvaRnKnfq1JcyXycXbtd9zxT/AINwf" +
                        "EWpwfET9qDwksxOjanovh3xFPbsSQLmxvru2RlHQZS7YH1wPSvqfpw4Km8Fl9a3vKc4/JqL/wDbUfKfQ" +
                        "Yx1RY7MKN/dlCEvmnJL8JM/GX/goFqEGp/tyftcXNsGEcfxE8W6e3mgA+Zaa1cWj9CeN0Zx7V/UPg1Rd" +
                        "PhPLU/+gem/vgn+p/LXjRWVTi7M2v8AoIqr7ptP8j+7f9h3/kyr9j//ALJd8P8A/wBROwr/ACL8WP8Ak" +
                        "qsz/wCwmt/6ckf6/wDhJ/ySmWf9g1H/ANNxP5pv+DjB7w/tJfAeNzJ/Z6+B5HtQ27yvObXrwS7e27aE3" +
                        "Y7Y9q/uv6Eij/YWMf2vbfhyRt+v4n8G/Thcv7ewa+z7H8eeV/0/A/Dr4b/8Lx8jVv8AhUP/AAlf2bfD/" +
                        "bv/AArf+19m/D+V5/8AZfGcbtu73x3r+sc8/sm8frnsr629py/O3N+Nj+SMi/te0vqXtbaX9nzfK/L+F" +
                        "z0z/jNX/qqP/l2V4P8Axiv/AFDf+Uz3/wDjK/8AqJ/8qB/xmr/1VH/y7KP+MV/6hv8AymH/ABlf/UT/A" +
                        "OVDzS5+C/xzvLie8vPhP4suru6d7m6urnQtYeSSR2LMzM0BJYk5JPWvehxTlMYpLE0kl/fj/meDU4Vze" +
                        "UnKWGqtv+5L/I/ru+Pket2//BBKzs/EdtcWetad8LfAml31lqsTwXMJtb7SLZY5I5FVlZFQKQwzxzzX+" +
                        "bPB0qT8YHKk04PE1mmtU7qbun5n+l3GcasfBxRqpqaw1FNNWas6as15H863/BI7/lIv+zD/ANhXVP8A1" +
                        "HNRr+2PpI/8kRj/APDH/wBOQP4h+jV/yXGX/wCKX/puZ/W9/wAFcf8AlHR+09/2CtL/APUj06v84fo3f" +
                        "8lvgP8AFL/03M/0n+kr/wAkPmH+GP8A6cgfylf8EXf+Ulv7Nn/c4/8AqA65X+h30o/+SEx3/cL/ANPUz" +
                        "/Oj6K//ACXuA/7i/wDpmof1kf8ABQP/AIJ3/C/9vXwNpWn+INRfwR8UPBS3DfD74labAs72wuADJaXkB" +
                        "ZPtFo7KrFdysjDKMMuH/wA6fBrxqzDg/FylTj7TD1Lc9Nu17bSi/syW17NNaNOyt/o/40eCOX8Y4OMak" +
                        "vZ4infkqJXtfeMlpzRe9rpp6pq7T/kp/aE/4JDftzfs+zajeT/Ceb4r+ELEvJH4y+DTPrkTxINxd7KJF" +
                        "v4gq8sXtwo5wxAJr/Rzgv6SnCWcqMViVQqv7NX3Nf8AF8D8rSv5H+bXGv0Z+LslcpPDOvSX26Xv6f4V7" +
                        "687xt5nxR8O/jJ8dv2efEV5cfDL4jeJfhD4jt5RFrFt4a1DUNJkeSE48u7gjeMSAHgpKpHqK/VM74Yyj" +
                        "OqCWKoU68GtOaMZb9YvW3qmflOR8UZxkldvC16mHmnryylHbpJaX9Gj9gf2dv8Agvz+1R8ObvTtL+O2h" +
                        "aT8ffCaFIb7UWgh0DxEkY+XdHc6bGLVyo5IktSzkDLrkmv5p41+hzw9joyngJywtTorucPmpPmXylZdn" +
                        "sf03wR9MviLAyjDMIRxVPq7KE/k4rlfzjd91uf1L/snftefBf8AbN+GMPxP+DWtSXFrbyDTPFHhXXEjg" +
                        "1jRL4rv+z3sEbyKpZfmR0ZkcfdY4IH+ffiL4a5pwvj3hcbBJtXjJaxmu8XZfNNJrqtj/Qvw38TMq4py9" +
                        "YvBTbSdpRekoPtJXfyabT6Pc/ij/wCCuP8AykX/AGnv+wrpf/qOadX+qH0bv+SIwH+GX/pyZ/lL9JX/A" +
                        "JLjMP8AFH/03A/rs/4JxeG9B8Y/8E3P2c/CXinSYNe8M+J/BTeH/EOh6nGJba8srx7i3nhlRuGSRHKsP" +
                        "Q1/m344Y6theOcdWpScakK3NFrdNWaa80z/AEs8DMDRxXAmBo1oqVOdHlkns07pp+TR+FP7YP8AwQF+K" +
                        "/hjXdb8XfsgavbfETwRdySX1n8LfFd7DYa/pyu277Pb3d6UtruNOdrSyRSYwCJGyx/rjwz+mNl2Iowo5" +
                        "zF0qq0dSKbhLzcVeUW+yUl10Wh/IXid9DPMcPWnWyWSrUXqqcmozj5KTtGSXduL6avU/DH4mfBD48fs8" +
                        "eIILP4p/DTxH8J9ds5x/Zt54j0+904PNGSyva3LKqS42kq8TkcZBr+tch4syjOqLlhK9OvBrVRkpaf3l" +
                        "uvRo/kXP+Es4ySuo4vD1KE09HKLjr/dez9U2fXfwM/4Kzft4fAZrC10f433vxB8OWOF/wCEU+MK/wDCS" +
                        "W0ka8LH9ovW+2xooGFWK5QAcDivzXi36OfCGcXc8IqU39ql7j9bL3G/WLP0zhH6SHGGT8qhi3Vpr7NX9" +
                        "4vS799L0kj+iz9g/wD4LbfCv9pzxT4d+EHxo8LJ8F/i54kkTSvDep2t19o8M61eucJBFLcbZbSeUnbFF" +
                        "LvV2wolLsqH+JvF76KmYZBh54zA1PrGGgryVrVILu0tJJbtqzS15bJs/uDwe+ljl2f4iGCx1P6viZu0X" +
                        "e9Ob6JN6xb2Sd03pzXaR+5lfyWf1yFABQB8x/tYfsn/AAt/a/8Ahbf/AA2+JNh5NzD5l94M8Z2MaHUdC" +
                        "1EptW4t2bGVOAJYidsi8HBCsqauVGVj+Iz9qD9l/wCKX7JnxS1T4XfFHS/JuYd174b8SWSudO1rTi5WO" +
                        "7tJGAypxhlPzI2VYAisWrHTGVz6Y/4J5/8ABQzxr+xd41GkaubnxX8B/FdyknjfwRG+6WzlbEZ1HThIQ" +
                        "qXCKBvTIWZQFYghHRxlYmcLn9ofw7+Ingr4seCvDnxF+HXiO28V+DPFdsmqaFrulvuimibIIIIDI6MCr" +
                        "owDIwKsAwIrY5mjtKAP49/+C/37Ktx8P/jl4X/ag8NaWV8IfGu3j8PeNrm2T91beKNJtliRn2qAv2uzj" +
                        "Qr1LPDKx61/ph9DjxCjjMpqZVVl+9w75oedOTv/AOSybv2Uoo/zG+mb4dywWb081pR/dYlcs/KpFW/8m" +
                        "ilbu4yZ+cH/AATg/a6uP2Mv2pPBfxOv5pm+HmthvA3xY0603MZdB1CRPMmVB96S1lSO4QDltmzIDGv3D" +
                        "xw8No8UcP1cLFL28ffpt/zx2XpJXi+179D8M8DPEuXC3ENLFSb9hL3KiX8kt3bvF2ku9rdT/QY0rVdM1" +
                        "3S9N1vRdQh1bRtZt4dV0nVdNlSa3uba4jE0UsUkZKujowZWBwQciv8AGXEYepRqSpzi4yi2mno01o010" +
                        "aZ/tNh8RTrU41KclKMkmmtU09U0+qa2P5bv+Cuf/BXP+1P+En/ZV/ZV8T/8Sv8AfaB8YPjBoE3/AB9dY" +
                        "ptK0qaI/wCq6rcXCn5+UQ7NzP8A6A/Ru+jd7P2ebZtT97R0qTW3ac136xi9t3rZL/Pb6S30lvae0yjKK" +
                        "nu6xq1YvfvCD7dJSW+y0u3/ADV+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASSS" +
                        "fw6niv7pzPM8PgsPOvXmoU4JuUm7JJbts/g/LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5/wS88LfsWeFr" +
                        "f4kfEi3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/wC4n7vJf/KTx+8fsRxTiHhsM3DAQei2d" +
                        "Rr7UvL+WPTd67f6y/R9+j7h+FMOsVikp4+a1e6pp/Yh5/zS67LTf9fq/mo/poKAPxn/AOC8X/KP7xD/A" +
                        "NjT4Z/9KZK/p/6If/JZQ/69VPyR/Lf0wv8Aki5/9faf5s/D/wD4N/v+T69W/wCxC8Qf+nHS6/rD6ZP/A" +
                        "CSMf+v8P/SZn8lfQw/5K+X/AF4n/wClQPlz/grj/wApF/2nv+wrpf8A6jmnV9/9G7/kiMB/hl/6cmfn3" +
                        "0lf+S4zD/FH/wBNwP63v+CR3/KOj9mH/sFap/6keo1/nD9JH/kt8f8A4o/+m4H+k/0av+SHy/8Awy/9O" +
                        "TP0dr8PP3M/nt/4OLf+TYPgf/2Pq/8AqPajX9n/AEJf+R/i/wDrx/7fA/ir6cH/ACT+E/6//wDtkz40/" +
                        "wCDcf8A5LX+0f8A9itpX/p2NfqH03v+RVgf+vsv/ST8s+g1/wAjbHf9eo/+lH5pf8FWvhzrnw1/b+/aR" +
                        "sNatpIo/FWuN8RtDupVKpc2OvwpqaPGSAGVGleIkdGRh1Br91+jxndHHcG4GUH8EORrs4Pl19bJ+jTPw" +
                        "b6ReR1sBxnj41F8c/aJ91Nc2no216po/o1/4Jc/8FRv2aPGP7P3wc+AnxN8f2Pwm+Lnwt0PTPhnFp/jm" +
                        "VNP0zV7TRraPTbOezv5ttuXeGOMNDI6yb921WX5q/iL6QH0f8+wuc4rMMLRlXw1acql4e9KLk3KSlFe9" +
                        "ZNuzSata7T0P7k+j59IPIcVkuFy/FVo0MTQhGnab5YyUUoxcZP3btJXTad72TWpzX/Bez9mPUfjN+zv4" +
                        "G/aK8CWx1zUvgNJd3XiNNKAm+0eFNbSBprsGLcXW1lt4pMjgRvI5OBXf9D/AI9hled1stxD5Y4m3LfS1" +
                        "SF7R8uZNrzkorqcH0xuAJ5rklHMsOuaWFbcra3pzteXnytJ+UXJ9D+ff/gmp+3jq37CPxwn8U3+nTeI/" +
                        "hR8QIbfw38VvDGnlBctbQzGS3vrXfgG4tDI5RGIV1d0JUsHX+y/HXwhp8X5SqUZKGJpNypye12tYv8Au" +
                        "ysrvdNJ62s/4u8BvGGpwfm7rSi54aqlGpFb2T0kv70buy2abWl7r+2D4U/trfsnfGrw1Z+Kvh3+0D4W1" +
                        "awu41uZdPv9Ys9O1O03/wAN1Y6g8NzA2e0ka57ZHNf5W8ReFfEeVV3SxOCqxa6qLlF+kopxfybP9XOHP" +
                        "FfhvNcOq2GxtKUWtnJRkv8AFGTUl80j1D/hePwU/wCiweFv/Cg0n/4/Xgf6p5r/ANA1X/wCX+R9B/rdl" +
                        "P8A0FUv/A4/5noel6rpeuafaatoupW+saVfp59jqelzR3FvMhON0ckRZWHHUGvFxGHqUpuE4uMlumrNe" +
                        "qZ7eHxNOtBTpyUovZp3T9Gj4M/4KpaFe+Iv+Ce/7Uun2Cl57fw6uuyBQW/c6XqVrqcxwPSO3Y57V+v/A" +
                        "Ee8ZChxpl8pbOpb5yi4r8Wfjv0iMHOvwVmMY7qnf5RlGT/BM/je/wCCYPxQ8M/Bz9vP9nDx94y12Hwz4" +
                        "ZstXvNA1bXtSKJbWqa7ot7oKvM8hCxx7rwB5GICLliQBmv9OfHzIK+Z8H47D0YOdRwUklu+SUZ6d37ui" +
                        "6vQ/wAvPo/8QYfK+McDiK81CmpuLk9lzwlDV9F72r6LXof2Bf8ABWyWKf8A4Jx/tNTwSrNBNpOkywzRM" +
                        "GR0bxFpxDKRwQR0Nf5pfRwi1xxgE9+aX/pEz/Tb6Sck+Bse1qnCP/pyB/Kd/wAEXf8AlJb+zZ/3OP8A6" +
                        "gOuV/ob9KP/AJITHf8AcL/09TP86vor/wDJe4D/ALi/+mah++X/AAVq/wCCqHxX/Ym+I/w++DPwW8IaL" +
                        "feJvEmgx/EnxF4q8eQXV7BFZXWpXmmW9va29pc2uJN9hK0juzDaVAXOSP49+jl9HvLuK8DWxuOqzVOE/" +
                        "ZxjBpO6jGTbbT0tJWStre76H9k/SS+kRmXCeOoYHA0oOpOHtJSmm1ZylFJJOOt4u7d9LWXU9D/YX/4LM" +
                        "/s//tI+GdL8PfHLxHo/wE+OMR+xalpOvXLWPhzVXyAs2nX2oOUj8wkD7PPL5gbhTIPmrxPFv6L+c5HXl" +
                        "UwEJ4rCbppXnHynGKu7fzRVratR2Pb8IfpS5LnuHjTx9SGFxezUnaEvOEpOyv8Ayyd76Jy3P0O+L/wM/" +
                        "ZX/AGhfDB1j4y/D3wh8SvDixZt/F/iK30+ZreJsR7oNTUrJCDkDdHKvbmvxbhri3iHJcRyYKvVozv8AD" +
                        "FyV35w2fzTP23ibhHh3O8Pz46hSrQt8UlF2XlPdfJo/jx/4KlfAT/gnf8Edb0Sz/Y9+LVx4k8eXd60Xj" +
                        "L4a6FqUfibw5pOniGQ701Ys8iXCyhUNu007YJLGMqA/+mX0fuMONc2pTlnOGUKKXu1HH2c5SuvsbONte" +
                        "ZRitrc19P8AMP6QvBvBGU1YRyXEudZy9+mpe0pxjZ7T1aley5XKT3vy21+lv+DdK78UJ+1D8brG0af/A" +
                        "IQq58Avd+IFjB+zHVIfEOmpp5kP9/ypbvZ7bq+E+m1Tw74fwknb2qr2j35XCfNbyuoX+R979B+piFxBi" +
                        "4xv7J0Ly7cynDlv52c7fM+C/wDgrj/ykX/ae/7Cul/+o5p1fr/0bv8AkiMB/hl/6cmfjv0lf+S4zD/FH" +
                        "/03A/qU/ZW+NVt+zn/wSA+GHxxutFfxGvwz+HknieDQIZRB9suIp5lghaUhtiPIyh32kquSASMH/P7xC" +
                        "4WlnfiXiMAp8ntsRy829k0ru3WyvZdX1R/oT4d8VxyPwyw+PcOf2OH5uXa7Tdlfom7Xetl0Z+Vv7M//A" +
                        "AcJeP7j4pR6d+1d4E0K0+E+vO0H/CRfCnT9Si1DQHc/JK8F1e3Zu7dekiqBKBll3keW39B8efQwwccv5" +
                        "sorTeJj9mpKPLPyuox5Zdm/d6O26/njgH6auNlmPLm9GCw0vtU4y5odm05S5o90ve6q+z/pB+H/AMaf2" +
                        "cf2nPChb4f/ABB8LfGTwvrUW290ayurDUtyMu4x3VjNukjYDlo5oww7iv4eznhbPMhxH+0UauHqRejac" +
                        "fnGS0fqnY/ujJeKsiz/AA3+zV6WIpyWqTUvlKL1Xo0mfk3+3l+w5/wSH0Hw34g8UfFjU9E/Zi8VxxS3d" +
                        "rc/CPUrfT9UnlUEiO38OQi4huMt95YbQNj+NRyP6L8IPFnxJrV4UsJGeMp3S/eRcorzdV2cfVzt5PY/m" +
                        "/xi8I/DOjQnVxkoYKpZteykoyfkqSupeihfzW5/GxdNbWWt3LeG765ns7S6dtB1OeIWl48ccx8iVo4ZZ" +
                        "RHIQAxVZG2ngMcZr/TympSpL2qSbWq3W2qu0rr5K/Y/y6qOMKr9k20n7r2e+jsm7P0bt3P9NH4dSeIJf" +
                        "h94El8WLInimXRtLk8SpeLtmGoNZRG4Eg7N5m7I9a/wcztUVjayo29nzy5bbct3a3yP98cjlWeCoutf2" +
                        "nJHmvvzWV7/ADOyrzD1AoAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2Mqc" +
                        "ASxE7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfm" +
                        "RsqwBFYtWOmMrn0x/wTz/4KGeNf2LvGo0jVzc+K/gP4ruUk8b+CI33S2crYjOo6cJCFS4RQN6ZCzKArE" +
                        "EI6OMrEzhc/tD+HfxE8FfFjwV4c+Ivw68R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdGAZGBVgGBFbHM" +
                        "0eVftXfs3+Df2svgL8QPgX42/0aw8X2udH1yNA82latbMJ7K9iGVJMMyqWUEb03IThjX23h3xxiuHM4o" +
                        "4+hq6b1XSUXpKL9V16Oz3R8R4jcC4XiTJq2X19FUWj6xktYyXo+nVXWzP8AO/8AjR8H/HfwC+KXjb4Pf" +
                        "EvR30Pxr4CvpNE1mycHY+0B4p4WIG+GeNlliccMjKw4Nf7U8LcS4POMvpY3Cy5qVWN0/wA0+zTumujTR" +
                        "/iTxVwxjMmzGrgsVHlq0pWa/JrumrNPqmmfYvh3/gp5+0/4V/Y+n/Y60HxL/Z/haSaWwtvHcMkw1228N" +
                        "zxkSaLBMD8luzk/OPnCExAhOK/Msb4CZBiOJlnVSnepa/JpyOa2qNdZW6bX956n6fgfH/iDDcMPJadS1" +
                        "O7XPrzqm96afSN+u9vdWh8H+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASSSfw6" +
                        "niv17M8zw+Cw869eahTgm5Sbsklu2z8eyzLMRjcRChQg51ZtKMUrtt7JI/t2/4Jef8ABLzwt+xZ4Wt/i" +
                        "R8SLe18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/uJ+7yX/yk8fvH7EcU4h4bDNwwEHotnUa+1" +
                        "Ly/lj03eu3+sv0ffo+4fhTDrFYpKePmtXuqaf2Ief8ANLrstN/1+r+aj+mgoAKAPzB/4LAfBD4l/Hz9h" +
                        "/x34P8AhN4YuPGfi/R9S0fxnH4V0dDLf3trptyXuEtYl+aaZUcusS5Z8FUDMQp/ffo08V4DJ+LKNbGVF" +
                        "TpSjKHM9k5LS76K+l3ot3ZXZ/P/ANJvhLH5zwlWo4Om6lWMoz5VrJqL15V1dtbLV2sruyPxs/4IPfsp/" +
                        "tAeC/2mfGvxj+IHwq1z4d+A9D8Kah4Pj1Tx3pl5pL3up6lf2MscNtFfxxPKFjt5HkdVKrgAkFhX9O/S8" +
                        "8Q8mxWQ0sFh8RCrWlVjK0JKVoxUk22m0tWkk9XrbZn8u/Q98Os6wmf1cbicNOlRjSlG84uN5SlFpJSSb" +
                        "0Tba0Wl90fPX/BXr9jL9pO6/br+J3j3wd8G/EnxD8F/F1tJ8QeD/EHgPRdR1eF5I9Hs9OuLaY6fDKIpo" +
                        "7iBwEYglCrDrx9p9GvxQyKPCOHw9bFU6VWhzRlGc4xfxSkmuZq6aa1XW66HxP0mPCzPpcX4jEUMLUq0q" +
                        "/LKMoQlJfDGLT5U7NST0e6s+p/UT/wTz+EXjL4EfsW/s9/Cz4hWI0vxr4a0Mz+I9IyGeyudSvrjVTbSF" +
                        "SR5kIuRHJgkblOCRzX8A+NPEuFzfinG4vDPmpTn7r7qKUbrydrryZ/oL4J8M4rJ+FcFhMSuWrCHvLs5N" +
                        "ys/NXs/NH2bX5efqZ+Kf/BdL9n/AOLPx2/ZV8HS/CPwbe+PtT+G/iu38X+IvDfhmCW81NtNk0u8095re" +
                        "2gVpJvLknTeqAsFJbG1WI/qf6JPGWW5RxDVWMqqlGtScYyk7R5uaMrNvRXSdm9L6btH8p/S84MzLOOHa" +
                        "TwdJ1ZUaqlKMVeXLyyjdJauzaulrbXZM+Ev+Dfz4QfFr4a/GH9oK++Ivwu8ReAbLU/DWmWmnXnjXRNT0" +
                        "qK4lTVC7JG99DEHYDkgEnFfrv0yeJctx2WYKOGxFOq1Uk2oTjK3u9bN2Px/6GHDGZYDNMbLE4epSUqcU" +
                        "nOEopvm6XSufrz/AMFC/wDgm78Lv29fCemz6lqJ8BfGPwbby2fgT4mWUAuAIHfzjY38G5DPas5LKAwaJ" +
                        "iWQ4Z0f+bPBbxyzDg/EyUY+1wtR3nTbtrtzRfSVt9LSSs9k1/THjZ4FZfxjhouUvZYqmrQqJX035ZLrG" +
                        "+2t4t3W7T/kW/aF/wCCWP7bf7Omtz2OufBfUviJ4eMnkab45+DttdeI9MuVJwHZbGI3Nvk8YuYYznpnI" +
                        "z/pHwX9IPhTO6SlTxUaU7awqtQkvvfLL/t2TP8ANPjb6PHFmR1XGphJVoX0nSTqRf3Lmj/29FH9TH/BG" +
                        "f4SfG34cfsPQ+C/2jPD9/pT63r2s6j4K8C+PYmF1YeFL2ys4UtZ7O7XfCklyl1KIZFB2yZIAbFf59/Sg" +
                        "4kyrHcWOvls4y5YRU5w2dROT5lJaNqPKuZdV5H+hf0WuGs2wPCSoZnCUeapJwhPdU2orlcXqk5c75X0e" +
                        "2p+Yv7dn/BBfxTHr+tfEr9iiS31fQtUll1K++BfiG8is7qwkkbeU0m8vGSGSDk7YriRGQDAeTOB+9+Ef" +
                        "0v8O6MMLnl4zjZKtFXT/wAcVqn5xTT7Lr+AeL/0O8Qq08VkVpQk23Rk0mv8Eno15Saa7vp+FfiT9i79r" +
                        "3wjqk+jeIf2YPH2n39uSpUeEtcmikAO3dFNBbPHImRwyMQfWv63wPilw1iaanTzCg0/+nkE/mm7r0auf" +
                        "yHjvCvibDVHCpl9dNf9OptfJpWa807GB/wyt+0//wBG4ePf/CP8Q/8AyJXZ/wARCyD/AKDqH/g2H/yRx" +
                        "/8AEO+IP+gCv/4Kn/8AIn9Uv/BAv4N/tG/Cb4RfG+b4y+Gda8DeA/FWraPdfC3wf44t7nT7lLq2t7xNV" +
                        "vI7O8SOWOK4ElqocgBzGSOhJ/z3+mJxPkeY5lhFgqkKlaEZe0lBqSs3Hki5K6bVpu3S+p/oh9DXhfPMt" +
                        "yzFvHU50qM5xdOM04u6UueSi7NKV4K/Xl0P3e8S+HND8Y+HPEHhHxPpketeGvFVld+HPEOj3gJhu7G+g" +
                        "a1nhcAg7ZI3ZTz0NfyHgMdVwteFalLlqQalFrdNO6a9Gf2Dj8DRxVCdGrFSpzi4yT2aas0/VaH8Lf7b3" +
                        "/BJv9pD9l/4kalH4A8A618Zfgzrt3PJ4A8ZeBtPudXvILZmLx2mqW+nxPJBcxJhTIUEUv3kOdyJ/rb4U" +
                        "fSLyPP8DF4itDD4qKXPGclFN9ZQcnZxfa/NHZ9G/wDIjxZ+jhnvD+PksNRniMLJvknCLk0ukZqKupJdb" +
                        "cst090v26+Dv7MH7VXiP/giV48+AfjfQ7+T4veIbG+1H4bfDvxWzw6rZaLaaxa6lZ6ZIt2QYpXW1kMEL" +
                        "kbBIkZ2YIX+UuJuPuHqHitRzChOP1aEkqk46xc3FxlNW3S5lzNb2bV93/WXC/h/xFX8J62XV4S+szi3T" +
                        "hLSSgpRlGDvs3yvlT2uk7bL8yv+CNX7Hn7Suhft2/D74n+Mvgx4j+H/AIJ+EVv4ivPFeuePtHv9Gi87U" +
                        "fDmoaDBbQHUYofNmMt4rFEyVVSTgYr95+k94mZFW4RrYWjiqdWrXcFFQkpO0Zxm2+VuytHd7tpI/Avou" +
                        "eGOfUeMKGLr4WpSpUFNyc4ygryhKCS5kru8tlsk2z+ir/goL/wTq+F37engjTrbWr4+B/ix4OjmT4f/A" +
                        "BNsIBO8CS/O9new7k8+0d8Nt3Bkb5kYZdX/AIn8GfGzMOD8XJwXtMNUtz027X/vRfSSXya0a2a/t/xp8" +
                        "D8v4xwkVUfssTTvyVEr2v8AZkusW9e6eqe6f8hH7Q//AASv/bb/AGctT1CPXvgzqPxA8LWZZrfx/wDCG" +
                        "C48Q6XNCM/vXWzi+0268c/aYY/yIJ/0o4K+kHwpnlOLp4qNKo/sVWoST7avll/27Jn+Z3G30eOLMjqSV" +
                        "TCyq019uknOLXfRc0f+3oo+H/8AhXfxA+1fYf8AhBtY+2+Z9k+x/wBmXvm+bu2bNnl53Z4xjOa/WP7aw" +
                        "fLze2hbe/Mv8z8k/sTG83L7Gd9rcrvf7j7S/Z9/4Je/ts/tG6lp0fhf4J6p4M8M3zKZfH3xWt7jw9pEU" +
                        "Lf8tla+jWe4Tt/o0Upz24OPy3jPx+4UySEnVxcalRfYptTlfto7Rf8AicT9V4L+j7xZnlSKpYSVOm/t1" +
                        "E4Rt31V5L/CpH9kn/BP/wDYO+H/AOwb8JbrwX4d1E+LfHni6aHWvib8Q7m3S3k1K6hjMcMMMYLGO0tw7" +
                        "eVGzMcs7E5Ygf5ieMni9jeL8yVepH2dGmmqcL35U9231lLS7stkuh/qJ4MeD2C4Oy10KUvaVqjTqTtbm" +
                        "a2SXSMdbK73b6n8yX/BW39jT9p7Uv27/in428KfBLxJ4+8I/FufSta8EeIfAOjahrNtcY0mz06SCRtPi" +
                        "lEU6TQspjkwSMMMqwNf3n9HDxPyCnwhh6FbF06VSgpKcZyjFr3pSTXM1dNPdea3R/Av0k/C3iCpxhiK9" +
                        "HCVKtKu4uEoRlJP3YxafKnZpp6PyezP6kf2QfgJeeC/2G/g1+z18bPDVrf3MXg2Lwd8SfBuo+XdWxXUY" +
                        "JDd2M2wsj7VnMT7SVJBwSMGv8/vErjCOK4txWY4Go0vbOVOS0futcsl1W1117n+hHhlwbLC8I4XLcdTT" +
                        "fsVGpB6r3k+aL6Peztp2P5z/wBtT/ggx8XvAet6343/AGRJV+Knw7upHvoPhjqt1FbeJtJR2LGGCW7ZI" +
                        "b6GMfdYyJNjC7JGBc/234WfS+y3GUoUM4/cV1p7RK9OXm0ruDfXRx63itF/D3it9DvM8HWnXyb9/Qbv7" +
                        "NtKpHyTdlNLo7qXS0nq/wAPvGfwE+OXw61N9F8ffBzxT4L1aMlDp/ijQNVsZTjuouYE3DuCMgjkV/WGV" +
                        "8YZTjqfPh8VSqR7xnF/kz+Ss14OzfA1OTEYWrTl2lCS/NGp8P8A9mn9ob4rajDpXw3+B/ivxrezP5OPD" +
                        "2gancRxnIBMsqQ+XGoyMs7ADua58546yXLoOeJxdKmv704r7le7+R0ZLwHneYzUMLhKtR/3YSf3u1l8z" +
                        "+ir/gm9/wAEQ/F/g7x34U+O/wC2FFZ6fJ4RuLfxH4O+B9hNb6i8l/Awlhm1ieEyW/lxOA628TPvOPMYK" +
                        "Gjf+J/HH6V2GxWEqZfk137ROMqrTjo9GqadndrTmaVuibs1/b/gX9EzE4XGU8wzqy9m1KNFNS95ap1Gr" +
                        "xsnrypu/VpXT/qAr+BD/QIKACgAoAKAPmP9rD9k/wCFv7X/AMLb/wCG3xJsPJuYfMvvBnjOxjQ6joWol" +
                        "Nq3FuzYypwBLETtkXg4IVlTVyoysfxGftQfsv8AxS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXKx3dp" +
                        "IwGVOMMp+ZGyrAEVi1Y6YyufU3/AATl/wCChfif9jDxxJoXiU3Xib4C+MplPjDwpC5eTTLltqDU7BG4E" +
                        "qqAJYxgSoMH5lQq4ysTOFz+0DwR438JfEnwl4f8eeA/EFt4p8H+KbaPV9A1/SJBJb3NvIOGU8EEEFWVg" +
                        "GVgVYAgitjmaPyM/wCCpX/BO3wz+3f8MbH4z/BG60+8+O/gnT5W8KaxpM8Etn4u0mAyS/2W9zE/leYHL" +
                        "G1mJ2q5KOQrFk/pr6OnjrPhfGfVcU28DVev/TuT050u38yW6V1qrP8AmH6R/gNDinB/WsKksdRjp/08i" +
                        "teRvo/5G9E3Z2Tuv4yNP+EPxT1T4kw/Byx+HeszfFae+Hhpfh02nXSayt/naYHtJEWRHHVgyjA5OBzX+" +
                        "pNbiXL6eBeNlXh9XUebn5ly2782z+R/lXR4ZzGpj1go0J/WXLl5OV8/N25d0/XY/tV/4Jef8EvPC37Fn" +
                        "ha3+JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgff+4n7vJf8Ayx8fvH7EcU4h4bDNwwEHo" +
                        "tnUa+1Ly/lj03eu3+rH0ffo+4fhTDrFYpKePmtXuqaf2Ief80uuy03/AF+r+aj+mgoAKACgDwn9pn476" +
                        "T+zJ8DvH3x21/wxqPjHQvh3BbaprOgeE/s51CS2nvoLJ5IhdyRRkQibzX3OPkVsZOAfruA+EKmfZtRwF" +
                        "OpGnOq2lKV+W6TdnZN62stN2j4/j7jClkGUVswqU5VIUkm4xtzWbSurtLS93rsmaPhH45+B/F3wA0D9p" +
                        "CCeTTvh3rnhOD4xSS3oTz7TSpNKGryCVUYqJIo8hwDgMCM1hmXCWLw2czyxq9eNV0tNnLm5Vbyb28joy" +
                        "zi7CYnJoZmm1QlSVXXdR5eZ380t/M8W/Yg/bd+G37dnw08S/Er4b6BqnhW18Ka3L4I1bQPGQsxerLHZW" +
                        "18kwFjPOnlSLc7VJYHcrDHHP1Xiv4U47hHH08LiZxm5w5043ta7VtUndW18mj5Twl8WcBxhgKmKwsJQU" +
                        "JuDjO172Tvo2rO+nmmbPwY/a+8E/HT4/wD7RXwE8F+GdUN1+zTcWGieN/HN59jGkz6jfeYotbbypnlLo" +
                        "9vOr70XBjPqK5eKPDXF5Rk2CzCvUjbGJuEFfmUVbV6Ws04tWb3OrhbxNwmb51jsuoU5XwbSnN25XJ30W" +
                        "t7pqSd0tmfWtfnB+khQAUAFABQAUAfCP/BRH9sfUv2G/gFZ/GjSvAcHxFurrxBp3gk+H9Qv5NNjVL62u" +
                        "7gy+bHBcHK/ZsbdvOevFfrvgp4Y0+Lc4eBnWdJKnKfMo82zirWuu/c/H/G7xQqcI5MsdCiqzdSMOVy5d" +
                        "1J3vZ9ux93V+RH7AFABQB89ftVftF+F/wBk34C+PP2gfGeh3/iTw14A/sv+0tF8MC3N9N/aus2miR+V9" +
                        "rkij+WS8Vmyw+UHHOBX2nh7wTiOI84o5dQnGFSrzWcr2XLGU3eyb2jbbc+K8ROOMPw3k1bMa8JTp0uW6" +
                        "ja75pxgrXaW8k99j5W+If8AwUY1bwbceDn8LfsSfGj4xaD418N6D8SdM8XfCbwjLrGlLDr2npqCWrXNu" +
                        "5QzwrIFlVSQD3NfoWS+CVPFKr7XNcHh506k6bjUqcsrwk43s9bO2h+dZ3441MK6XsspxmIhUpwqKVKlz" +
                        "RtOKla60ur2fmeDfD//AILM6Z8WdCfxT8K/2Evjl8S/DMdxJpUniP4f+E49ZsFuoVV5ITcadPNGJFDqW" +
                        "XdkAjI5FfX5z9F+pl1b2WLzfBUalr8s6nK7PZ2kk7abnx+S/Slp5lR9rhMnxtane3NClzq63V4tq+q0P" +
                        "2b0+6a+sLG+a1ksmvIYrprK8XZNCZED7JF7MucEetfy9Wp8k3G97O11s/Q/qWjU54KVmrq9nuvU+Mv+C" +
                        "f8A+1rqP7a37O2m/HLVPBEPw+u7/VtU8Nnw7YXz6jGq6dKsYk86SGAkvu6beK/UfGTw4hwrncsBCq6qU" +
                        "Yy5muX4ulrv8z8t8GPEmfFeSRx86KpNzlHlT5vh63st/Q+2a/Kj9XCgAoAKACgAoAKACgAoAKACgAoAK" +
                        "ACgAoAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cq" +
                        "MrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrl34" +
                        "bftgftDfCP4QfED4F+APiNd6D8OfiRj+3NJgOZbff8ALcfYpj89t9pT5J/LI3rwaLg4o+1P+CZn/BQv4" +
                        "t/s1eKNM+CVt4K1D41/Dbx9qUUOk/DvQGL61p+pXbiNpNJEmUbzfvSW7lUZhuDRkuzOMrEzhc/sds4YL" +
                        "g2+szaT/Z+q3NtHDMLtbc3cMZ/e+RJJA0inYxOQrsuckE9a6fay5eW7tvbpfucXso83NZc1rX627GjUG" +
                        "gUAFABQAUAeZ/Gn4baf8Y/g/wDFL4S6qUXT/iX4e1jwLczTAkRDVdPlshJwCQUMgYEcggEc173C2eTyz" +
                        "M8PjIfFRqRn/wCAyTt87WPA4qyKGaZZiMHP4a1OUP8AwKLV/le5/NZ4F/aM8Sab/wAEM/FfwmDSR/F6y" +
                        "8U3v7EVnolwQt295retC9ezZSeSNMu5oVx/cx2Jr+6c34IoVPFqnjP+YZ0li2+loQtzf+DIqXz9D+EMo" +
                        "44r0/CKpg9frSqvCJdbzndx/wDBcnH5eTPpP9i6w8Pf8E+f20f2zf2dtUuhZ/Dey+F3hT9oXQJmHlpPB" +
                        "4P0CGy1aeMvjLyyzzs5PLeXuPQ18L4pVq3GfC2V5lBXrvE1KMvJ1ZtwT8klFLtex934V0aHBXFWa5ZN2" +
                        "oLDU68fNUoJTa823Jvva54b+z5+0J4t/Y0/4JseMv2uV02yvv2h/wBvD4narqfgk+J38u1hvNVu7q3iu" +
                        "bvzWTNvb/Yru6VmIVjKgYhWr6zjPgvDcUcdUsn5msFlmGip8u7UUm1H+9LmhHTVcrsro+R4K41xPC3Ad" +
                        "XOeWLx2Z4mThzbJybScv7seWctdHzK7szt/jT8bP2iv2Q/hvov7TGif8FOPDP7V3irw5e6TJ8ZP2ep5P" +
                        "CJ0vVbLUr2G0nj0aLSZmuIjA8yjdGitsDSnaFMZ8rhbhXJOJcdPK6mQVMDTmpeyr/veaLim06jkuV3S";
                    resourceString += "ejbV7R1bUj1uKuLM84ZwMM0p8QU8dUg4+1ofuuWSk0mqai+ZWbWqSdry0ScX/RH4O8U6X458IeFfGuhuZ" +
                        "NF8YabY+KdHkkxua11C1S7iJ2kjJSQdDX8U5nl9TCYmpQqfHTk4v1i7P8Uf27leY08Xhqden8FSKkvSS" +
                        "uvwZ+Dnw38Zft+ftdftR/tv/AfwL+06/wAD/hF8D/Gl/Yn4gWvh/TdW1qCC5nubXTdG09ZBaqsKi0lmn" +
                        "mMhlGEXcA3P9e55lfB3DfD+U5hiMB9ZxOJop8nPKMG0k51Jb6+8lFW5d3bQ/jzIs04z4m4hzfL8PmH1b" +
                        "DYas1zqEZTSbahTjtp7rcnfm2V9Tl/2dviB/wAFJP2iviN8cf2G9Z/ab074dX/7Luq3Vt8QP2m9E0Czv" +
                        "/FOv2FzOYNJtILV3ggiDiGSaW4BEwXYjEsGL+hxtk3A2SYHCZ9DASqrGxXJh3NxpwaV5yb1btdJR1je7" +
                        "WlrefwRnXHeeY7F5BPMI0XgpPnxCgpVJpu0IqOiV7NuWkrWT1vf65/4Jx/tAftAXvxl/aq/Yx/aZ8bw/" +
                        "FXx7+zRe6dc+FfirDaR2d1rOi6krlftUduNgdEMDrktJ+8ZWZtm4/m3jfwbk0Mry7O8rpOhRxilzU73U" +
                        "Zx/lb11fMui91NJXsfpXgZxpnU80zHI81rKvWwbjy1LWc4S/mS0ulyvq/eabdrnyx+1d4n+P/7O/h/x7" +
                        "471b/gsTok37QngW2u/F2k/s+T6P4N02xv4bONrgaV/Zcc803nTRrshkliJkfjAJ3L+heHeAybO61HDw" +
                        "4Zn9SqtRdbmqyab05+eyVk9Wk9F6Wf554jZhnWSUa2InxRD67STkqHLSipJa8nJdu7WibWr063XD/8AB" +
                        "T347XX7TX/BHf4BfHTUdMh0bV/iF4k8Nalr2mad5n2aLUbez1ixuxCJiWERngcoGJIXAJbqfW8A+EY5D" +
                        "4m4zARk5RpU6iTe7i3Tcb262av59EeR9IDjCWf+GGCzCUVGVWpTbS2Ukqila+trp28ur3PsXS/2hvjt+" +
                        "3l+1JP4P/ZT+IV18Lv2Ov2fr6TSvjJ8ePDltp1xdeM9eQK7aTpEmoxXKeSqFf3yJwrGQkhoA/5jiOC8o" +
                        "4Q4fVbNqKrZnio3pUZOSVKH881Fp3v9lvdculptfqGH42zjjHiF0MoruhleFlarWiot1Z/yU3JNWt9pL" +
                        "Z82t4J8V8dP2p/iN8df2yviT+y34D/as0T9jT4Mfs/WNifif8UdQm0KPxD4i1/UoROun6a2vSoscUAJE" +
                        "jxgMrI24sHQV6vCPh7gco4YoZriMunmGKxUn7OmlPkhCLtzT5Fq30T0aatazPJ4v8RMdnHFNfKcPmMMv" +
                        "wuFivaVG4c85yV+WHO9EurWqad73R137Dn7T/xOsP2tfif+xP8AEz4/aV+1h4e0zw1F8Xvg38ffDf8AZ" +
                        "Ju5LBbmCzudM1I6LJLC80bT5DM2/wCQliVkRU83xZ4BwE+HMPnmFwcsDN1PZVaMua17NqcOdJpO2y01V" +
                        "tU2/T8I/EDMIcSYjIsVjYY6EaftaVaPLfluk4T5G02r7vXRtu0kl6j/AMFov+UaX7Sf/cnf+p9odfP/A" +
                        "EXP+S7wP/cX/wBM1D6H6VH/ACQWP/7hf+nqZ9mfsrf8mwfs4f8AYheD/wD1HrSvzDxC/wCR/jv+v9X/A" +
                        "NLkfqXh3/yT+A/68Uv/AEiJ+XP/AAb/AH/Jimrf9j74g/8ATdpdfv8A9Mn/AJK6P/XiH/pUz+e/oYf8k" +
                        "hL/AK/z/wDSYH7gV/KB/Wp/K5/wSx+Cn7bfx0/Y1ay+EX7UkX7Lfwv8La3rcHg+Pw34ft9X1bxHrcjx3" +
                        "M899dXE0bW1pEWSFEhyWO8spAXP+hH0g+KuFMo4n5sZl7xuInCHNzTcYwhqkopJ80nq23tok97f53/R4" +
                        "4U4szfhflweYLBYeE58vLBSlUno25NtcsVoklvq2tr/AKhf8E4f2mfj7+1B+zt8c/A/xO8QWWlftNfAv" +
                        "W9d+Cl/8QrawgltJNShtGSy1Ka1iSKCRorjeJI0VVcRg7RvNfgPjhwHk+QZ3hK+Fg5YDEwhVULu/K370" +
                        "E3dq8bWbbavvof0F4GcfZzxBkeMw+KnGOYYac6TnZW5kvdm0rJ2le6SSdtlc+Af2pvjt8c/2O9Euvit4" +
                        "a/4K0aD+0T8Y/A+o2H/AAn/AOzXq2neEobXVra51CG0uLa30/SJ55LR4fM3yIAkgiDOroVG79k8PuEcp" +
                        "4mqrCVeHJ4TC1Iy5K6lUbi1FtNykkpJ2snquayad9PxjxD4vzfhik8XS4khi8VSlHnoONJKSckmlGLbi" +
                        "1e7Wj5btNW1+nf+CjH7Yn7RHgew/wCCePin9lnUxpmsftK6miweBtWjtprPWpdZtNHfTLK8eaISCMS34" +
                        "DmNo2IJ5HBHwPgj4ZZJi551SzaPNHBx+NXTgoupzyjZ2vaOl7ryZ9/44+J+d4SGSVcplyyxkvgdmpuSp" +
                        "8kZXV7Xlraz80cV+03oH/BTD9ij4bj9r1v2y4/2hIfBNxp+qfGz4I614W07S9AfTry6itZU05rUtIIoZ" +
                        "JlUuqwybMyZGCh9XgPGcCcVY7+xv7L+quopKlVVSUp8yTa576XaV7NyV/d7M8rj7Bce8KYD+2f7VWLVN" +
                        "xdWi6cYw5W0nyW1sm7XSi7e90sdP+2/+2R+0Ra+MP8Agmfr/wCx/r628X7Yljrctn4I8WQ2z6TdSappu" +
                        "hPpU+oMIHnRbFtYaaYRuMiPBHWvP8KPDHJJYbPqecwu8BKF5xb5lyyqc6jrZ8/JZXT3ueh4teKOdxxWQ" +
                        "VMlnZZhGdoSS5XzRp8jlpdcntHKVmtrHF/tOv8A8FGv+CeXhfRf2r9Q/a5b9qr4eaPqWl2Hx4+Fnizwz" +
                        "pui2cdpqN0lmJdPazMxgjM0qxK0ZjZHZCyyKWQerwEuCONcRPKI5b9SryjJ0akakpu8Ve0r2u7Jtp3TS" +
                        "aTi7M8rj98c8E4eGcSzP69QjKKrU5U4wVpO142vZXaStZptNqSuj2X9rr9tvxd4p+NXwB/Zd/Z/+Nmh/" +
                        "s5WHxd8KQfHv4iftH/EAaU39keF79JPsVrp8WrSpbteXHlkkMcjchVgN7D5fw28KcNh8qxma5jhJ4uVC" +
                        "q6MKEOb3qitzOTiubljf8HdPRH1PiX4sYnEZrgspy7FwwkcRSVadefL7tN35VFSfLzSt+Ks1qzz/wCE3" +
                        "7SnxN/Z2/bV+CP7PWu/tiab+218Cv2lbbU9L0PxIJdAuvEPhPxHp0PnKk8ugyyl4LgtGq+aQCHYqB5TF" +
                        "/Z4j4FwGd8K4vMaeWSy7F4Nxbj76hUhJ20U0rOOr07K7fMreLw3x5j8k4rwmW1M0jmWDxiklL3HOnOKv" +
                        "q4N3UtFr3dkuV34/wCGXxE/b8/a1/az/bh/Z28B/tKx/Br4Q/BXxlcRX3xCg0LTdU8Q6dY3F1e2enaNp" +
                        "iSCBFjl+xyySTs3mL5YAb5irenn2ScHcOcOZTmWIwH1jE4iirQ55RhJpRc6k93dcySivdd9tLrzMgzzj" +
                        "PiTiTN8tw+P+r4bDVnefJGU4puShTgtFZ8rbk/eVlrrZ/Rn7AHxx/aX0P8Aab/aW/YW/ai8dr8Y/E3wS" +
                        "sdM8deAvi8tlb6fPqGiX627BbmOAfMzLfQMpZmZGEiM7gKR8R4ycJ5FVyHAZ9lVH6vTxMpQnSu5KM1fZ" +
                        "v8AwyXRNcrSWp9x4McXZ9Rz/H5Bm1b6xUw0YzhVsouUHbdLf4ovq0+ZNvQ/YOv5oP6cCgAoAKACgAoAK" +
                        "APmP9rD9k/4W/tf/C2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxWfHT" +
                        "9jT47/Ab472/wCz7r/g+51/xlr9ylp8PJvDUEtxb+Jbe4l8qCewIGWDHh1PzRtkPgg1i0dKkmj+pb/gm" +
                        "3/wTb8NfsgeGoPiD8QYLbxL+0R4ltvL1XVY9s9t4ctp1+awsG5Bcg4nnH3/ALq/JkvpGNjCc7n6s1ZmF" +
                        "ABQAUAFABQAUAfzD6V+yd8XU/4K66t8MX8DaqP2Xl+Jkf7bh8WDTr1dDGsQ+H5dVjRLgp9nLf2hdC3Me" +
                        "cgKcDFf3viPEXLX4bRxXto/2h9W+qcvMuflc1F6X5vgXNfzP4Bw/hxma8S5YX2Mv7P+s/W+blfJzKDkt" +
                        "fh+OXLbfQ9N/wCC23wb+Ndz8Sfgf8YPgB4I1fxp4i8eeFfF/wCzH8RLbwlp15fuujavFi2Wf7HG+yNjq" +
                        "V0dz4UMB1yceD9FTifKo4HF4PMasKcKVWliIc0kvei9bXau/chotbHvfSx4WzWWPwmNy6jOpOrSq4efL" +
                        "Fy92S0vZOy9+er0ukfRf/BQT9hLxh4r/YI+BXwl+B3hu18deL/2T7rwt4j0XwNdpG8XiW10LSpNJvbfy" +
                        "ptiSvOJfPZWIMm1lGWcA/E+DPi7hsPxhi8Zj6jpUscqkXNb03OSlF3WyVuVNbXT2R9x40+D+KxPBuDwe" +
                        "ApqrVwLpyUHtUUIuMlZ2u3fmae9mt2fMvg/4z/8ExPEFrouhav/AMEt/Eml/F66Ntp+v/CXSvhCl/f2V" +
                        "9L+7kVXCw+ZCkiuA5VXKqT5YOVH3mZ8LcfUZTqQ4gpywyu1UeJsmunezatpdq7+LqfBZXxV4f14wpz4e" +
                        "qRxTspUlheaSfXtdJ31sm0vhT0P6KNG0fSvD2kaVoGhadDo+h6HbQaPo2k6bGsNva2ltEsEMMUaAKqIi" +
                        "hVUDAAxX8T4rE1K9WVSpJynJttvVtvVtvu2f29hcLToUo06cVGEUkktEktEkuyWx+UH/BOvwV4y8L/tS" +
                        "f8ABULWPEvhLU/Duk+LviVbar4U1TXbC6tLfVLUS6sTNaSXCIs8Y3r80ZI5HPNf0V42ZrhcRw/w/ClUj" +
                        "OVPDtSSabi7Q0kk9H5M/nHwPyrFYfiHiCdWlKEamITi3FpSV56xbWq80cz+wt4F8b+Hv+CjX/BTjxR4g" +
                        "8HarofhnxbqXh2Xwr4i1jT7u2sdTSJr3e1pcTxrHMF3DJRjjNd3i3m+Er8EZBSp1YyqU4z5oqSbj8PxJ" +
                        "O6+ZweEOT4uhxxn9WpSlGnUlDlk4tKXxfC2rP5Hmfw1+HXx0tf2+v8AgrX4j8B+F9V8O+IPGnga3074J" +
                        "+NtTsbi00278Qjw9BFZNbXlykcEhjuQu7a+Bg5xivez3O8olwdw5SxFSM4U6zdWCaclDnfNeKu1eN+h4" +
                        "OQ5Hm8eMuJKuHpyhOpQSpTaai58i5bSdk7St10Pz/8AgVrHwk8MfsTfE/8AZut/2GPGPjb/AIKDeMNH8" +
                        "aeD/HGs674FN1qlrqOtR6hbR6rNrWqJ5lrBbW0oKou1jKhABLmU/snF2GzLEcVYfM3m9KnktOdKUEq1o" +
                        "uMeVuCpx0k5SW7uuV+XKfi/CGKy3D8J4jK1lFapnVSFWM26N5KU+ZKbqS1ioxeys+Zba8z9K/aB+EXxY" +
                        "1X/AIIWfsufD3S/hh4i1Lx9o/iW1udW8D2Gi6lNrFrGmo+IizTWccJmRQJFyWQfeHqK8Pg3iXLqfi3mG" +
                        "JniKaoypu03OKi/dpbSvZ7Pr0Pe404ZzKp4Q5fhoYeo60aivBQk5L3qu8bXW66dT6m8ZfBXxl/wSz/al" +
                        "8JfGr9mP4c634x/Y4+Of2LwD8e/gp8P7PUdbvPDl/ZwFLfV7S3hE87gKGlBIbJ82JmXzYiv57lnFWF8Q" +
                        "eH6mBzSvCnmeGvOjVm4wU03rCTdktbLp9mST5ZX/Q804UxXh5xDSx2VUJ1MrxNoVqUFKbhJLScUrt6Xf" +
                        "X7UW1zRt5F8bPhL4C/Zs/bl+Nvx2/aP/ZKuv2pf2Uv2oYNK8YeGviPovheLxNeeDtZitws0M9tKqtBFK" +
                        "ZHLZ2l0ERXe6Oo+l4V4jxme8JYTAZZmSwWY4JyjKDqezVWN9Gmt2rK29nzXsmmfM8V8N4PIeLsXmGZ5a" +
                        "8bl2NUZRqKn7R0pJapp7J3d9rrltdpo/Qf9hfXv2J/H3xB8V6/+y/8Ashal8Gr/AMO6TFHJ8WdY8ADwr" +
                        "Y6jb6hMjSWVpdt80jjy0eRCFyMEbgMj8Y8W8HxVg8FTp5rmUcQpy/hqt7RxcVpKUem7SevZ2P2vwixnC" +
                        "mNxtSplWWSw7hH+I6Ps1JSesYy6vRNrTurnRf8ABXvwr4o8bf8ABO79oXwx4M8N3/i7xLqf/CJ/2b4e8" +
                        "MWdxf31x5PjnRriTyoLRJJH2Rxs7YU4UEngGuL6NeY4fCca4KrXqRp017S8pNRSvRqJXbsldu3qdv0mM" +
                        "uxGL4IxtKhTlUqS9naMU5N2rU27JXbsk36H1z+zNp9/pP7N/wCz7pWq2U2manpngjwpp+pabqEbwz288" +
                        "Og2sckckcgDI6MCGUgEEYNfm3HlaFTPMbODTi61RprVNObs0+qZ+lcA0Z08iwUJpxlGjTTT0aahG6a6N" +
                        "H5r/wDBC7wL43+Hn7FWqaD4/wDB2q+B9dfxvruoJovjDT7vTLswSafpqpIIb2ON9jFCA2MHB9K/dPpbZ" +
                        "vhMbxVGph6sakPYwV4yUlfmnpdNq5+EfRDyfF4LhSVPEUpUp+2m7Si4u3LDWzSdj9lq/mA/qQ/I7/giV" +
                        "4K8ZeAf2FtB8PeO/CWp+Ctfj8S+IruTQ/FthdabeLFLcRlHMN5HG4VgODjBr+kPpV5rhcZxdOph6kakP" +
                        "ZwV4tSWz6ptH81fRPyrFYLhCFPEUpU5+0m7Si4u110aTPg74QfCP9piD9lz/gsVoXw18Fa/4a+Jnjzx/" +
                        "rOofD+G407ULG81nSZNWle/GmeYkbztcWBmjhMWdzMoGSRX6/xLxJkL4g4YqYqrCdClQip+9FqMuVcvP" +
                        "vblnyt32Sdz8e4Z4az9cP8AFFPC0qkMRVrzcPdknOPM+bk2vzQ5krbtqx82+ONX+CHjj/gnFP8As3fsu" +
                        "fsL+Lbj9omHRPD0fxo8at4DaO/0a+0bU9P1bV57nWJomubmS6mtdkMEZyY5AAqBBHX3OU4bNsJxwszzX" +
                        "N6SwXPP2UPbaSUoyjBKCfLFRTu5Pqt3fmPhM2xOU4vgZ5ZlOUVXjlCHtZ+x96DhKMpt1GuaTk1aMV0ey" +
                        "S5T6L/4KJX/AI38EeAf+CJup+FfBs/iP4keENR8LX/hz4fXgazub/W9PsvC8lvpzi4CmJ5Z41iO8DaTz" +
                        "0r4nwUo4TF4ziqNWqoUKkailNapQk615K26Sd9Nz7jxurYvCYPhOdGk516cqbjB6NziqNoO+zclbXY9b" +
                        "/a9/bl8Rfts/BXXf2Qf2Xv2b/iK3xp+MTWPhTxza/ErwzNoll4QsBexT3h1G4mkeONv3flF2wihi27cF" +
                        "U/N+GvhLQ4VzWGc5rjsP9Vw95Q9nUU3Vdmo8qSu9723drWtdr6XxM8Xa/FmVTyXKcBiPreItGftKbgqS" +
                        "unLnbdlta+yu3e9k+H/AOCgvhvxd+yr49/4IveEvhZ4Vn+LPiv4CR+INB0vwppAWK78R/2BpvhWC8jgD" +
                        "A4nuooZSgCk72GFJwD63gzjsNxDg+Ka2LqKhTxTg3J7Q55VnFvyi2r+S1a3PJ8acBieHcZwrRwlN16mF" +
                        "50orepyRoqSXnJJ283onsb/AO2f+114h/4KLfCeH9i79lX4A+O28X/FfVNDg+K/iD4peG7jQ9N8H6dpu" +
                        "p2+sN9undpVSRZ7aMuc7dgYIXdlU8fhd4bUeCcxed5tjKHsqEZ+zjTmpyqylFx91aXVm7db2bsk2dnin" +
                        "4l1+OMtWR5Rgq/ta8oe0lUpuEaUYyUveetndK/S10rtpEf7av7J1n+z7+0h+z5+0rq/7N0v7XH7Mvhbw" +
                        "Fpn7Pnxj8C6fo8euavph0K2ktrPWY7OQkH90sQ3t8q7HR3TzEYPws8RZZ1keNyyGOWBx868q1KblyRlz" +
                        "tOVNy9b6bu6aT5WifFXw4jkue4LNJ4B4/AQoRoVYKPPKPImo1FH0trsrNNrmTPoz9k3xj/wTp+Kfxt8G" +
                        "2X7O/7D2p+E/F2lx3fiez+Ld58M00PS9AmsYpBtl1F+Yp3YGOPapBbK7s4B+I8Rss42y/KqssyzaM6Ur" +
                        "RdNV+eU07bR6pbvrbWx9z4b5pwPmObUo5blEqdWN5Kq8PyRg1fefRt6LpfS5Z/4JweBfG/hb9tX/gq/r" +
                        "3ifwdqvhzQvGXjfQNQ8Ia1r2n3dnaarBHqHidnks5riNEnRRMhLRkgbl9RUeOGb4TEcK8O06VWM506M1" +
                        "JKSbi+WjpJJ3T0e/Zl+BeT4vD8V8R1KtKUIVK0HFuLSkuatrFtWa1W190dL8HvBXjKx/wCCxv7W3jm98" +
                        "JanZ+Cta+GvhrStG8YXVhdR6Xd3US6Lvhhu3QQySL5bblViRg5HBrh4mzXCz8MctoRqRdWOIqNxuuZJ+" +
                        "01cb3S1Wtjv4YyrFQ8UMyxEqUlSlh6aUnF8ra9ndKVrN6PRM+k/2Gv2wNf/AGxvBHj7xhr/AMBdb+As3" +
                        "grxDceB7bR/GU0lw1+kEEcpmV5bOyKyIX2SxBWCNgb2zx8L4s+GlHhjF0aNPGQxSqU1O8Va121b4paPd" +
                        "O6uuiPvPCPxNrcUYStWqYOeFdOo4Wk73sk7/DHVbNWdn1Z9vV+UH6yFABQAUAFABQAUAZF54f0HUdV0b" +
                        "XdQ0S0vtc8O/aP+Ef1m8toZbuw+2RiGf7PM6l4vNQBX2EbhwcigDXoAKACgAoAKACgAoAKACgAoAKACg" +
                        "AoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoA/PX9tL9kDxv8AtL/F79iX4ieFPE2laDpn7MXj20+K/" +
                        "i2x8Qm7E+oWdvqmlXzQ2n2aGVfNK2DgeYVGSOeuP2jwt8S8JkOWZrhq1OUpYyg6cXG1otxmryu1p7y2u" +
                        "z8U8VfDLF59meU4mjUjGOCrqpJSveSUoO0bJ6+697LY/Qqvxc/az4N/ag/ZR8ZfHP8AaY/Yg+N3h7xHp" +
                        "mkaB+y9rHiXxH4u0nWTdC81CLWotLjiWz8iKRNyGxbd5jKORjPNfr/APiJhcpyHNsDUhKU8bCnGLVrR5" +
                        "HO/Ndp68ytZM/HfEDw5xWb5/lGPp1Ixhgp1JSTveSmoW5bJrTld7tH3lX5AfsQUAFABQAUAFABQAUAFA" +
                        "BQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQB//2Qs=";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.StackedBarSeriesLabel stackedBarSeriesLabel1 = new DevExpress.XtraCharts.StackedBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.StackedBarSeriesView stackedBarSeriesView1 = new DevExpress.XtraCharts.StackedBarSeriesView();
            DevExpress.XtraCharts.ChartTitle chartTitle1 = new DevExpress.XtraCharts.ChartTitle();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary10 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary11 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary12 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary13 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary14 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary15 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary16 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary17 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary18 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.pageFooterBand1 = new DevExpress.XtraReports.UI.PageFooterBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.GroupHeader2 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.PageHeader = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter2 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.line12 = new DevExpress.XtraReports.UI.XRLine();
            this.line11 = new DevExpress.XtraReports.UI.XRLine();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label89 = new DevExpress.XtraReports.UI.XRLabel();
            this.label88 = new DevExpress.XtraReports.UI.XRLabel();
            this.label86 = new DevExpress.XtraReports.UI.XRLabel();
            this.label90 = new DevExpress.XtraReports.UI.XRLabel();
            this.label87 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.label198 = new DevExpress.XtraReports.UI.XRLabel();
            this.pageInfo3 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.label41 = new DevExpress.XtraReports.UI.XRLabel();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.label32 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.label44 = new DevExpress.XtraReports.UI.XRLabel();
            this.label69 = new DevExpress.XtraReports.UI.XRLabel();
            this.label71 = new DevExpress.XtraReports.UI.XRLabel();
            this.label72 = new DevExpress.XtraReports.UI.XRLabel();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.label55 = new DevExpress.XtraReports.UI.XRLabel();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.dsDatos = new XtraReportSerialization.dsDatosDataSet();
            this.sqlDataAdapter1 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand1 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection1 = new System.Data.SqlClient.SqlConnection();
            this.label66 = new DevExpress.XtraReports.UI.XRLabel();
            this.label58 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.label50 = new DevExpress.XtraReports.UI.XRLabel();
            this.label47 = new DevExpress.XtraReports.UI.XRLabel();
            this.label53 = new DevExpress.XtraReports.UI.XRLabel();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.TableTableAdapter = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand1 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection1 = new System.Data.OleDb.OleDbConnection();
            this.RepVentaNeta = new XtraReportSerialization.RepVentaNetaDataSet();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.CostoCalc = new DevExpress.XtraReports.UI.CalculatedField();
            this.CostoOtraMonedaCalc = new DevExpress.XtraReports.UI.CalculatedField();
            this.CostoUOtraMoneda = new DevExpress.XtraReports.UI.CalculatedField();
            this.CostoOtraMoneda = new DevExpress.XtraReports.UI.CalculatedField();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label2,
                        this.label19,
                        this.label17,
                        this.label45,
                        this.label46,
                        this.label40,
                        this.label42,
                        this.label43});
            this.Detail.HeightF = 18F;
            this.Detail.Name = "Detail";
            this.Detail.Scripts.OnBeforePrint = "Detail_BeforePrint_1";
            // 
            // pageFooterBand1
            // 
            this.pageFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line7,
                        this.pageInfo2,
                        this.pageInfo1});
            this.pageFooterBand1.HeightF = 24.25003F;
            this.pageFooterBand1.Name = "pageFooterBand1";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 38F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 63F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // GroupHeader2
            // 
            this.GroupHeader2.Expanded = false;
            this.GroupHeader2.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Sucursal", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader2.HeightF = 0F;
            this.GroupHeader2.KeepTogether = true;
            this.GroupHeader2.Level = 1;
            this.GroupHeader2.Name = "GroupHeader2";
            this.GroupHeader2.RepeatEveryPage = true;
            // 
            // PageHeader
            // 
            this.PageHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label5,
                        this.label1,
                        this.line12,
                        this.line11,
                        this.label7,
                        this.label4,
                        this.label11,
                        this.label89,
                        this.label88,
                        this.label86,
                        this.label90,
                        this.label87,
                        this.pictureBox2,
                        this.label198,
                        this.pageInfo3,
                        this.line6,
                        this.label41,
                        this.label29,
                        this.label31,
                        this.label30,
                        this.label32,
                        this.label10,
                        this.label20,
                        this.label44,
                        this.label69,
                        this.label71,
                        this.label72});
            this.PageHeader.HeightF = 188.8749F;
            this.PageHeader.Name = "PageHeader";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart1,
                        this.line3,
                        this.label55,
                        this.label14,
                        this.label13,
                        this.label12});
            this.ReportFooter.HeightF = 416.6667F;
            this.ReportFooter.Name = "ReportFooter";
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label66,
                        this.label58,
                        this.label3,
                        this.label49,
                        this.label50,
                        this.label47,
                        this.label53,
                        this.line8});
            this.GroupFooter1.HeightF = 23.95833F;
            this.GroupFooter1.Name = "GroupFooter1";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Expanded = false;
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Sucursal", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("Articulo", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 0F;
            this.GroupHeader1.Name = "GroupHeader1";
            // 
            // GroupFooter2
            // 
            this.GroupFooter2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label23,
                        this.label22,
                        this.label21,
                        this.label16,
                        this.line1,
                        this.label15,
                        this.label9,
                        this.label8});
            this.GroupFooter2.HeightF = 25F;
            this.GroupFooter2.Level = 1;
            this.GroupFooter2.Name = "GroupFooter2";
            // 
            // label2
            // 
            this.label2.CanGrow = false;
            this.label2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SubCuenta")});
            this.label2.Font = new System.Drawing.Font("Arial", 6F);
            this.label2.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(293.8751F, 0F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(97.4581F, 18F);
            this.label2.StyleName = "Title";
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseForeColor = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.Text = "label2";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label2.WordWrap = false;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoOtraMonedaCalc", "{0:$#,#0.00}")});
            this.label19.Font = new System.Drawing.Font("Arial", 6F);
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(721.3334F, 0F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label19.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label19.StylePriority.UseFont = false;
            this.label19.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:$#,#.00}";
            this.label19.Summary = summary1;
            this.label19.Text = "label19";
            this.label19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label17
            // 
            this.label17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoUnitarioOtraMoneda", "{0:$#,#0.00}")});
            this.label17.Font = new System.Drawing.Font("Arial", 6F);
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(621.3334F, 0F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label17.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:$#,#.00}";
            this.label17.Summary = summary2;
            this.label17.Text = "label17";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label45
            // 
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoCalc", "{0:$#,#0.00}")});
            this.label45.Font = new System.Drawing.Font("Arial", 6F);
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(541.3333F, 0F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label45.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label45.StylePriority.UseFont = false;
            this.label45.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:$#,#.00}";
            this.label45.Summary = summary3;
            this.label45.Text = "label45";
            this.label45.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label46
            // 
            this.label46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoUnitario", "{0:$#,#0.00}")});
            this.label46.Font = new System.Drawing.Font("Arial", 6F);
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(461.3333F, 0F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label46.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label46.StylePriority.UseFont = false;
            this.label46.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:$#,#.00}";
            this.label46.Summary = summary4;
            this.label46.Text = "label46";
            this.label46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label40
            // 
            this.label40.CanGrow = false;
            this.label40.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Descripcion")});
            this.label40.Font = new System.Drawing.Font("Arial", 6F);
            this.label40.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(73.54094F, 0F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.SizeF = new System.Drawing.SizeF(220.3342F, 18F);
            this.label40.StyleName = "Title";
            this.label40.StylePriority.UseFont = false;
            this.label40.StylePriority.UseForeColor = false;
            this.label40.StylePriority.UseTextAlignment = false;
            this.label40.Text = "label40";
            this.label40.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label40.WordWrap = false;
            // 
            // label42
            // 
            this.label42.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Existencia", "{0:#,#0.00}")});
            this.label42.Font = new System.Drawing.Font("Arial", 6F);
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(391.3333F, 0F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label42.StylePriority.UseFont = false;
            this.label42.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:$#,#.00}";
            this.label42.Summary = summary5;
            this.label42.Text = "label42";
            this.label42.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label43
            // 
            this.label43.CanGrow = false;
            this.label43.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Articulo")});
            this.label43.Font = new System.Drawing.Font("Arial", 6F);
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(2.000122F, 0F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.SizeF = new System.Drawing.SizeF(71.54083F, 18F);
            this.label43.StylePriority.UseFont = false;
            this.label43.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:$#,#.00}";
            this.label43.Summary = summary6;
            this.label43.Text = "label43";
            this.label43.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label43.WordWrap = false;
            // 
            // line7
            // 
            this.line7.BorderColor = System.Drawing.Color.Gray;
            this.line7.ForeColor = System.Drawing.Color.Gray;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(822.0002F, 2.166621F);
            this.line7.StylePriority.UseBorderColor = false;
            this.line7.StylePriority.UseForeColor = false;
            // 
            // pageInfo2
            // 
            this.pageInfo2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo2.Format = "Página {0} de {1}";
            this.pageInfo2.LocationFloat = new DevExpress.Utils.PointFloat(440.6547F, 2.166622F);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo2.SizeF = new System.Drawing.SizeF(381.3455F, 18F);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.StylePriority.UseFont = false;
            this.pageInfo2.StylePriority.UseTextAlignment = false;
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.166621F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo1.StyleName = "PageInfo";
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label5
            // 
            this.label5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Valuacion")});
            this.label5.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label5.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(481.8333F, 131.2915F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(136.3752F, 18F);
            this.label5.StyleName = "Title";
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseForeColor = false;
            this.label5.StylePriority.UseTextAlignment = false;
            this.label5.Text = "label5";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label1
            // 
            this.label1.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label1.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(401.8333F, 131.2915F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label1.StyleName = "Title";
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseForeColor = false;
            this.label1.StylePriority.UseTextAlignment = false;
            this.label1.Text = "Valuación:";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line12
            // 
            this.line12.BorderColor = System.Drawing.Color.Gray;
            this.line12.ForeColor = System.Drawing.Color.Gray;
            this.line12.LocationFloat = new DevExpress.Utils.PointFloat(0F, 180.8333F);
            this.line12.Name = "line12";
            this.line12.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line12.StylePriority.UseBorderColor = false;
            this.line12.StylePriority.UseForeColor = false;
            // 
            // line11
            // 
            this.line11.BorderColor = System.Drawing.Color.Gray;
            this.line11.ForeColor = System.Drawing.Color.Gray;
            this.line11.LocationFloat = new DevExpress.Utils.PointFloat(0F, 160.8333F);
            this.line11.Name = "line11";
            this.line11.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line11.StylePriority.UseBorderColor = false;
            this.line11.StylePriority.UseForeColor = false;
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoUOtraMoneda")});
            this.label7.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label7.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(621.3334F, 162.8333F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label7.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label7.StyleName = "Title";
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseForeColor = false;
            this.label7.StylePriority.UseTextAlignment = false;
            this.label7.Text = "label7";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label4
            // 
            this.label4.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label4.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(293.8752F, 162.8333F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(97.45807F, 18F);
            this.label4.StyleName = "Title";
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseForeColor = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "SubCuenta";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label11
            // 
            this.label11.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoOtraMoneda")});
            this.label11.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label11.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(721.3335F, 162.8333F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label11.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label11.StyleName = "Title";
            this.label11.StylePriority.UseFont = false;
            this.label11.StylePriority.UseForeColor = false;
            this.label11.StylePriority.UseTextAlignment = false;
            this.label11.Text = "label11";
            this.label11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label89
            // 
            this.label89.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label89.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label89.LocationFloat = new DevExpress.Utils.PointFloat(391.3333F, 162.8333F);
            this.label89.Name = "label89";
            this.label89.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label89.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label89.StyleName = "Title";
            this.label89.StylePriority.UseFont = false;
            this.label89.StylePriority.UseForeColor = false;
            this.label89.StylePriority.UseTextAlignment = false;
            this.label89.Text = "Existencias";
            this.label89.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label88
            // 
            this.label88.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label88.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label88.LocationFloat = new DevExpress.Utils.PointFloat(461.3333F, 162.8333F);
            this.label88.Name = "label88";
            this.label88.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label88.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label88.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label88.StyleName = "Title";
            this.label88.StylePriority.UseFont = false;
            this.label88.StylePriority.UseForeColor = false;
            this.label88.StylePriority.UseTextAlignment = false;
            this.label88.Text = "Costo Unitario";
            this.label88.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label86
            // 
            this.label86.CanGrow = false;
            this.label86.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label86.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label86.LocationFloat = new DevExpress.Utils.PointFloat(72.00012F, 162.8333F);
            this.label86.Name = "label86";
            this.label86.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label86.SizeF = new System.Drawing.SizeF(221.875F, 18F);
            this.label86.StyleName = "Title";
            this.label86.StylePriority.UseFont = false;
            this.label86.StylePriority.UseForeColor = false;
            this.label86.StylePriority.UseTextAlignment = false;
            this.label86.Text = "Descripción";
            this.label86.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label86.WordWrap = false;
            // 
            // label90
            // 
            this.label90.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label90.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label90.LocationFloat = new DevExpress.Utils.PointFloat(541.3333F, 162.8333F);
            this.label90.Name = "label90";
            this.label90.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label90.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label90.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label90.StyleName = "Title";
            this.label90.StylePriority.UseFont = false;
            this.label90.StylePriority.UseForeColor = false;
            this.label90.StylePriority.UseTextAlignment = false;
            this.label90.Text = "Costo";
            this.label90.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label87
            // 
            this.label87.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label87.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label87.LocationFloat = new DevExpress.Utils.PointFloat(2.000122F, 162.8333F);
            this.label87.Name = "label87";
            this.label87.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label87.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label87.StyleName = "Title";
            this.label87.StylePriority.UseFont = false;
            this.label87.StylePriority.UseForeColor = false;
            this.label87.StylePriority.UseTextAlignment = false;
            this.label87.Text = "Articulo";
            this.label87.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(0.6666263F, 0F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // label198
            // 
            this.label198.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label198.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label198.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label198.LocationFloat = new DevExpress.Utils.PointFloat(0.6666263F, 103.7916F);
            this.label198.Name = "label198";
            this.label198.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label198.SizeF = new System.Drawing.SizeF(270.0001F, 18F);
            this.label198.StyleName = "Title";
            this.label198.StylePriority.UseFont = false;
            this.label198.StylePriority.UseForeColor = false;
            this.label198.StylePriority.UseTextAlignment = false;
            this.label198.Text = "label198";
            this.label198.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pageInfo3
            // 
            this.pageInfo3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo3.LocationFloat = new DevExpress.Utils.PointFloat(601.3335F, 103.7916F);
            this.pageInfo3.Name = "pageInfo3";
            this.pageInfo3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo3.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo3.SizeF = new System.Drawing.SizeF(219.9999F, 17.99999F);
            this.pageInfo3.StyleName = "PageInfo";
            this.pageInfo3.StylePriority.UseFont = false;
            this.pageInfo3.StylePriority.UseTextAlignment = false;
            this.pageInfo3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line6
            // 
            this.line6.BorderColor = System.Drawing.Color.Gray;
            this.line6.ForeColor = System.Drawing.Color.Gray;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 121.7916F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(822.0002F, 9.5F);
            this.line6.StylePriority.UseBorderColor = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // label41
            // 
            this.label41.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label41.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label41.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label41.LocationFloat = new DevExpress.Utils.PointFloat(270.6667F, 103.7916F);
            this.label41.Name = "label41";
            this.label41.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label41.SizeF = new System.Drawing.SizeF(330.6667F, 18.00001F);
            this.label41.StyleName = "Title";
            this.label41.StylePriority.UseFont = false;
            this.label41.StylePriority.UseForeColor = false;
            this.label41.StylePriority.UseTextAlignment = false;
            this.label41.Text = "label41";
            this.label41.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.label41.Visible = false;
            // 
            // label29
            // 
            this.label29.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion2")});
            this.label29.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(508.3335F, 31.66666F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseTextAlignment = false;
            this.label29.Text = "[Direccion2]";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label31
            // 
            this.label31.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(508.3335F, 49.66666F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseTextAlignment = false;
            this.label31.Text = "[Direccion3]";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label30
            // 
            this.label30.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion4")});
            this.label30.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(508.3335F, 67.66666F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(313.6667F, 18F);
            this.label30.StylePriority.UseFont = false;
            this.label30.StylePriority.UseTextAlignment = false;
            this.label30.Text = "label31";
            this.label30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label32
            // 
            this.label32.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label32.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label32.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label32.LocationFloat = new DevExpress.Utils.PointFloat(508.3335F, 13.66663F);
            this.label32.Name = "label32";
            this.label32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label32.SizeF = new System.Drawing.SizeF(313.6666F, 18.00001F);
            this.label32.StyleName = "Title";
            this.label32.StylePriority.UseFont = false;
            this.label32.StylePriority.UseForeColor = false;
            this.label32.StylePriority.UseTextAlignment = false;
            this.label32.Text = "label41";
            this.label32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label10
            // 
            this.label10.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaA", "{0:d\' de \'MMMM\' de \'yyyy}")});
            this.label10.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label10.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(678.8752F, 131.2916F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(143.1249F, 17.99995F);
            this.label10.StyleName = "Title";
            this.label10.StylePriority.UseFont = false;
            this.label10.StylePriority.UseForeColor = false;
            this.label10.StylePriority.UseTextAlignment = false;
            this.label10.Text = "label10";
            this.label10.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label20
            // 
            this.label20.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label20.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(618.8752F, 131.2916F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label20.StyleName = "Title";
            this.label20.StylePriority.UseFont = false;
            this.label20.StylePriority.UseForeColor = false;
            this.label20.StylePriority.UseTextAlignment = false;
            this.label20.Text = "A la Fecha ";
            this.label20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label44
            // 
            this.label44.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label44.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label44.LocationFloat = new DevExpress.Utils.PointFloat(1.833248F, 131.2916F);
            this.label44.Name = "label44";
            this.label44.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label44.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label44.StyleName = "Title";
            this.label44.StylePriority.UseFont = false;
            this.label44.StylePriority.UseForeColor = false;
            this.label44.StylePriority.UseTextAlignment = false;
            this.label44.Text = "Del Artículo:";
            this.label44.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label69
            // 
            this.label69.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ArticuloDesde")});
            this.label69.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label69.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label69.LocationFloat = new DevExpress.Utils.PointFloat(81.83326F, 131.2916F);
            this.label69.Name = "label69";
            this.label69.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label69.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label69.StyleName = "Title";
            this.label69.StylePriority.UseFont = false;
            this.label69.StylePriority.UseForeColor = false;
            this.label69.StylePriority.UseTextAlignment = false;
            this.label69.Text = "label69";
            this.label69.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label71
            // 
            this.label71.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label71.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label71.LocationFloat = new DevExpress.Utils.PointFloat(201.8333F, 131.2916F);
            this.label71.Name = "label71";
            this.label71.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label71.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label71.StyleName = "Title";
            this.label71.StylePriority.UseFont = false;
            this.label71.StylePriority.UseForeColor = false;
            this.label71.StylePriority.UseTextAlignment = false;
            this.label71.Text = "Al Artículo:";
            this.label71.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label72
            // 
            this.label72.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ArticuloHasta")});
            this.label72.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label72.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label72.LocationFloat = new DevExpress.Utils.PointFloat(281.8333F, 131.2916F);
            this.label72.Name = "label72";
            this.label72.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label72.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label72.StyleName = "Title";
            this.label72.StylePriority.UseFont = false;
            this.label72.StylePriority.UseForeColor = false;
            this.label72.StylePriority.UseTextAlignment = false;
            this.label72.Text = "label72";
            this.label72.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // chart1
            // 
            this.chart1.AppearanceName = "Pastel Kit";
            this.chart1.AutoBindingSettingsEnabled = false;
            this.chart1.AutoLayoutSettingsEnabled = false;
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart1.DataAdapter = this.sqlDataAdapter1;
            this.chart1.DataMember = "Table";
            this.chart1.DataSource = this.dsDatos;
            xYDiagram1.AxisX.Label.Font = new System.Drawing.Font("Tahoma", 6F);
            xYDiagram1.AxisX.Label.Staggered = true;
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.Title.Text = "Costo Unitario Otra Moneda";
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram1.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.True;
            xYDiagram1.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.True;
            xYDiagram1.EnableAxisXScrolling = true;
            xYDiagram1.EnableAxisYScrolling = true;
            this.chart1.Diagram = xYDiagram1;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart1.Legend.HorizontalIndent = 0;
            this.chart1.Legend.TextOffset = 0;
            this.chart1.Legend.VerticalIndent = 0;
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(7.833234F, 30.20833F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart1.SeriesDataMember = "GraficaSerie";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "GraficaArgumento";
            this.chart1.SeriesTemplate.DataFilters.ClearAndAddRange(new DevExpress.XtraCharts.DataFilter[] {
                        new DevExpress.XtraCharts.DataFilter("Grafica1", "System.Int32", DevExpress.XtraCharts.DataFilterCondition.Equal, 1)});
            stackedBarSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart1.SeriesTemplate.Label = stackedBarSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions1;
            this.chart1.SeriesTemplate.SeriesPointsSortingKey = DevExpress.XtraCharts.SeriesPointKey.Value_1;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "GraficaValor";
            this.chart1.SeriesTemplate.View = stackedBarSeriesView1;
            this.chart1.SizeF = new System.Drawing.SizeF(813.5001F, 384.9984F);
            this.chart1.Tag = "spCorteInvValOtraMoneda [EstacionTrabajo]";
            chartTitle1.Text = "Resumen por Artículos (Capas de costos)";
            chartTitle1.TextColor = System.Drawing.Color.Black;
            this.chart1.Titles.AddRange(new DevExpress.XtraCharts.ChartTitle[] {
                        chartTitle1});
            // 
            // line3
            // 
            this.line3.BorderColor = System.Drawing.Color.Gray;
            this.line3.ForeColor = System.Drawing.Color.Gray;
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(0.6666263F, 0F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line3.StylePriority.UseBorderColor = false;
            this.line3.StylePriority.UseForeColor = false;
            // 
            // label55
            // 
            this.label55.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoOtraMonedaCalc")});
            this.label55.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label55.LocationFloat = new DevExpress.Utils.PointFloat(721.3333F, 2F);
            this.label55.Name = "label55";
            this.label55.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label55.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label55.SizeF = new System.Drawing.SizeF(100.0001F, 18F);
            this.label55.StylePriority.UseFont = false;
            this.label55.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:$#,#0.00}";
            summary7.IgnoreNullValues = true;
            summary7.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label55.Summary = summary7;
            this.label55.Text = "label55";
            this.label55.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label14
            // 
            this.label14.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoCalc")});
            this.label14.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(541.3333F, 2F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label14.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:$#,#0.00}";
            summary8.IgnoreNullValues = true;
            summary8.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label14.Summary = summary8;
            this.label14.Text = "label14";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label13
            // 
            this.label13.CanGrow = false;
            this.label13.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(25.66663F, 2F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            summary9.FormatString = "{0:$#,#.00}";
            this.label13.Summary = summary9;
            this.label13.Text = "Total General";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label13.WordWrap = false;
            // 
            // label12
            // 
            this.label12.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Existencia")});
            this.label12.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(391.3333F, 2F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseTextAlignment = false;
            summary10.FormatString = "{0:#,#0.00}";
            summary10.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label12.Summary = summary10;
            this.label12.Text = "label12";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // dsDatos
            // 
            this.dsDatos.DataSetName = "dsDatosDataSet";
            this.dsDatos.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // sqlDataAdapter1
            // 
            this.sqlDataAdapter1.SelectCommand = this.sqlCommand1;
            this.sqlDataAdapter1.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand1
            // 
            this.sqlCommand1.CommandText = "SPCORTEINVVALOTRAMONEDA 1";
            this.sqlCommand1.CommandTimeout = 0;
            this.sqlCommand1.Connection = this.sqlConnection1;
            // 
            // sqlConnection1
            // 
            this.sqlConnection1.ConnectionString = "Data Source=NOLIVERA;Initial Catalog=V4600;User ID=SA;Password=";
            this.sqlConnection1.FireInfoMessageEventOnUserErrors = false;
            // 
            // label66
            // 
            this.label66.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoOtraMonedaCalc")});
            this.label66.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label66.LocationFloat = new DevExpress.Utils.PointFloat(721.3333F, 2F);
            this.label66.Name = "label66";
            this.label66.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label66.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label66.SizeF = new System.Drawing.SizeF(100.0001F, 18F);
            this.label66.StylePriority.UseFont = false;
            this.label66.StylePriority.UseTextAlignment = false;
            summary11.FormatString = "{0:$#,#0.00}";
            summary11.IgnoreNullValues = true;
            summary11.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label66.Summary = summary11;
            this.label66.Text = "label66";
            this.label66.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label58
            // 
            this.label58.CanGrow = false;
            this.label58.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Descripcion")});
            this.label58.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label58.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label58.LocationFloat = new DevExpress.Utils.PointFloat(142.0001F, 2F);
            this.label58.Name = "label58";
            this.label58.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label58.SizeF = new System.Drawing.SizeF(150.3337F, 18F);
            this.label58.StyleName = "Title";
            this.label58.StylePriority.UseFont = false;
            this.label58.StylePriority.UseForeColor = false;
            this.label58.StylePriority.UseTextAlignment = false;
            this.label58.Text = "label58";
            this.label58.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label58.WordWrap = false;
            // 
            // label3
            // 
            this.label3.CanGrow = false;
            this.label3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SubCuenta")});
            this.label3.Font = new System.Drawing.Font("Arial", 6F);
            this.label3.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(293.8752F, 2F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(97.4581F, 18F);
            this.label3.StyleName = "Title";
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseForeColor = false;
            this.label3.StylePriority.UseTextAlignment = false;
            this.label3.Text = "label3";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label3.WordWrap = false;
            // 
            // label49
            // 
            this.label49.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Existencia")});
            this.label49.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(391.3333F, 2F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label49.StylePriority.UseFont = false;
            this.label49.StylePriority.UseTextAlignment = false;
            summary12.FormatString = "{0:#,#0.00}";
            summary12.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label49.Summary = summary12;
            this.label49.Text = "label49";
            this.label49.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label50
            // 
            this.label50.CanGrow = false;
            this.label50.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Articulo")});
            this.label50.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label50.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label50.LocationFloat = new DevExpress.Utils.PointFloat(72.00012F, 2F);
            this.label50.Name = "label50";
            this.label50.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label50.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label50.StyleName = "Title";
            this.label50.StylePriority.UseFont = false;
            this.label50.StylePriority.UseForeColor = false;
            this.label50.StylePriority.UseTextAlignment = false;
            this.label50.Text = "label50";
            this.label50.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label50.WordWrap = false;
            // 
            // label47
            // 
            this.label47.CanGrow = false;
            this.label47.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label47.LocationFloat = new DevExpress.Utils.PointFloat(2.000122F, 2F);
            this.label47.Name = "label47";
            this.label47.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label47.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label47.StylePriority.UseFont = false;
            this.label47.StylePriority.UseTextAlignment = false;
            summary13.FormatString = "{0:$#,#.00}";
            this.label47.Summary = summary13;
            this.label47.Text = "Total Artículo";
            this.label47.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label47.WordWrap = false;
            // 
            // label53
            // 
            this.label53.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoCalc")});
            this.label53.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label53.LocationFloat = new DevExpress.Utils.PointFloat(541.3333F, 2F);
            this.label53.Name = "label53";
            this.label53.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label53.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label53.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label53.StylePriority.UseFont = false;
            this.label53.StylePriority.UseTextAlignment = false;
            summary14.FormatString = "{0:$#,#0.00}";
            summary14.IgnoreNullValues = true;
            summary14.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label53.Summary = summary14;
            this.label53.Text = "label53";
            this.label53.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line8
            // 
            this.line8.BorderColor = System.Drawing.Color.Gray;
            this.line8.ForeColor = System.Drawing.Color.Gray;
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line8.StylePriority.UseBorderColor = false;
            this.line8.StylePriority.UseForeColor = false;
            // 
            // label23
            // 
            this.label23.CanGrow = false;
            this.label23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SubCuenta")});
            this.label23.Font = new System.Drawing.Font("Arial", 6F);
            this.label23.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(293.8752F, 2F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(97.4581F, 18F);
            this.label23.StyleName = "Title";
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseForeColor = false;
            this.label23.StylePriority.UseTextAlignment = false;
            this.label23.Text = "label3";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label23.WordWrap = false;
            // 
            // label22
            // 
            this.label22.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoOtraMonedaCalc")});
            this.label22.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(721.3334F, 2F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label22.SizeF = new System.Drawing.SizeF(100.0001F, 18F);
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            summary15.FormatString = "{0:$#,#0.00}";
            summary15.IgnoreNullValues = true;
            summary15.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label22.Summary = summary15;
            this.label22.Text = "label66";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label21
            // 
            this.label21.CanGrow = false;
            this.label21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaSucursal")});
            this.label21.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label21.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(142.0001F, 2F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(150.3337F, 18F);
            this.label21.StyleName = "Title";
            this.label21.StylePriority.UseFont = false;
            this.label21.StylePriority.UseForeColor = false;
            this.label21.StylePriority.UseTextAlignment = false;
            this.label21.Text = "label21";
            this.label21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label21.WordWrap = false;
            // 
            // label16
            // 
            this.label16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoCalc")});
            this.label16.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(541.3333F, 2F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.Scripts.OnBeforePrint = "label88_BeforePrint";
            this.label16.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseTextAlignment = false;
            summary16.FormatString = "{0:$#,#0.00}";
            summary16.IgnoreNullValues = true;
            summary16.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label16.Summary = summary16;
            this.label16.Text = "label53";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line1
            // 
            this.line1.BorderColor = System.Drawing.Color.Gray;
            this.line1.ForeColor = System.Drawing.Color.Gray;
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(0.6666263F, 0F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line1.StylePriority.UseBorderColor = false;
            this.line1.StylePriority.UseForeColor = false;
            // 
            // label15
            // 
            this.label15.CanGrow = false;
            this.label15.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(2.000122F, 2F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label15.StylePriority.UseFont = false;
            this.label15.StylePriority.UseTextAlignment = false;
            summary17.FormatString = "{0:$#,#.00}";
            this.label15.Summary = summary17;
            this.label15.Text = "Total Sucursal";
            this.label15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label15.WordWrap = false;
            // 
            // label9
            // 
            this.label9.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Existencia")});
            this.label9.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(391.3333F, 2F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseTextAlignment = false;
            summary18.FormatString = "{0:#,#0.00}";
            summary18.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label9.Summary = summary18;
            this.label9.Text = "label49";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label8
            // 
            this.label8.CanGrow = false;
            this.label8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Sucursal")});
            this.label8.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label8.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(72.00012F, 2F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label8.StyleName = "Title";
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseForeColor = false;
            this.label8.StylePriority.UseTextAlignment = false;
            this.label8.Text = "label8";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label8.WordWrap = false;
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.SelectCommand = this.oleDbCommand1;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand1
            // 
            this.oleDbCommand1.CommandText = "SPCORTEINVVALOTRAMONEDA 1";
            this.oleDbCommand1.CommandTimeout = 0;
            this.oleDbCommand1.Connection = this.oleDbConnection1;
            // 
            // oleDbConnection1
            // 
            this.oleDbConnection1.ConnectionString = "Provider=SQLOLEDB;Data Source=NOLIVERA;Initial Catalog=V4600;User ID=SA;";
            // 
            // RepVentaNeta
            // 
            this.RepVentaNeta.DataSetName = "RepVentaNetaDataSet";
            this.RepVentaNeta.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Maroon;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Maroon;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // CostoCalc
            // 
            this.CostoCalc.DataMember = "Table";
            this.CostoCalc.DataSource = this.RepVentaNeta;
            this.CostoCalc.Expression = "[Existencia]  *  [CostoUnitario]";
            this.CostoCalc.Name = "CostoCalc";
            // 
            // CostoOtraMonedaCalc
            // 
            this.CostoOtraMonedaCalc.DataMember = "Table";
            this.CostoOtraMonedaCalc.DataSource = this.RepVentaNeta;
            this.CostoOtraMonedaCalc.Expression = "[Existencia]*[CostoUnitarioOtraMoneda]";
            this.CostoOtraMonedaCalc.Name = "CostoOtraMonedaCalc";
            // 
            // CostoUOtraMoneda
            // 
            this.CostoUOtraMoneda.DataMember = "Table";
            this.CostoUOtraMoneda.DataSource = this.RepVentaNeta;
            this.CostoUOtraMoneda.Expression = "\'Costo U. \' + [OtraMoneda]";
            this.CostoUOtraMoneda.Name = "CostoUOtraMoneda";
            // 
            // CostoOtraMoneda
            // 
            this.CostoOtraMoneda.DataMember = "Table";
            this.CostoOtraMoneda.DataSource = this.RepVentaNeta;
            this.CostoOtraMoneda.Expression = "\'Costo \' + [OtraMoneda]";
            this.CostoOtraMoneda.Name = "CostoOtraMoneda";
            // 
            // InformeInvValOtraMoneda
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.pageFooterBand1,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.GroupHeader2,
                        this.PageHeader,
                        this.ReportFooter,
                        this.GroupFooter1,
                        this.GroupHeader1,
                        this.GroupFooter2});
            this.Bookmark = "InformeInvValOtraMoneda";
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.CostoCalc,
                        this.CostoOtraMonedaCalc,
                        this.CostoUOtraMoneda,
                        this.CostoOtraMoneda});
            this.DataAdapter = this.TableTableAdapter;
            this.DataMember = "Table";
            this.DataSource = this.RepVentaNeta;
            this.DisplayName = "InformeInvValOtraMoneda";
            this.FilterString = "[Grafica1] = 0";
            this.Margins = new System.Drawing.Printing.Margins(12, 12, 38, 63);
            this.Name = "InformeInvValOtraMoneda";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "spCorteInvValOtraMoneda [EstacionTrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatosDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatosDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatosDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatosDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatosDataSet cln = ((dsDatosDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatosDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatosDataSet ds = new dsDatosDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnSucursal;
            private global::System.Data.DataColumn columnArticulo;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnSubCuenta;
            private global::System.Data.DataColumn columnExistencia;
            private global::System.Data.DataColumn columnCostoUnitario;
            private global::System.Data.DataColumn columnCostoUnitarioOtraMoneda;
            private global::System.Data.DataColumn columnOtraMoneda;
            private global::System.Data.DataColumn columnEmpresaSucursal;
            private global::System.Data.DataColumn columnFechaA;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor;
            private global::System.Data.DataColumn columnGrafica1;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnReporte;
            private global::System.Data.DataColumn columnDireccion2;
            private global::System.Data.DataColumn columnDireccion3;
            private global::System.Data.DataColumn columnDireccion4;
            private global::System.Data.DataColumn columnGraficaSerie;
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnArticuloDesde;
            private global::System.Data.DataColumn columnArticuloHasta;
            private global::System.Data.DataColumn columnMonedaContable;
            private global::System.Data.DataColumn columnEtiqueta;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SucursalColumn {
                get {
                    return this.columnSucursal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArticuloColumn {
                get {
                    return this.columnArticulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubCuentaColumn {
                get {
                    return this.columnSubCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExistenciaColumn {
                get {
                    return this.columnExistencia;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoUnitarioColumn {
                get {
                    return this.columnCostoUnitario;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoUnitarioOtraMonedaColumn {
                get {
                    return this.columnCostoUnitarioOtraMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtraMonedaColumn {
                get {
                    return this.columnOtraMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaSucursalColumn {
                get {
                    return this.columnEmpresaSucursal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaAColumn {
                get {
                    return this.columnFechaA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValorColumn {
                get {
                    return this.columnGraficaValor;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica1Column {
                get {
                    return this.columnGrafica1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporteColumn {
                get {
                    return this.columnReporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion2Column {
                get {
                    return this.columnDireccion2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion3Column {
                get {
                    return this.columnDireccion3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion4Column {
                get {
                    return this.columnDireccion4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaSerieColumn {
                get {
                    return this.columnGraficaSerie;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArticuloDesdeColumn {
                get {
                    return this.columnArticuloDesde;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArticuloHastaColumn {
                get {
                    return this.columnArticuloHasta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaContableColumn {
                get {
                    return this.columnMonedaContable;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtiquetaColumn {
                get {
                    return this.columnEtiqueta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        string Empresa, 
                        int Sucursal, 
                        string Articulo, 
                        string Descripcion, 
                        string SubCuenta, 
                        double Existencia, 
                        decimal CostoUnitario, 
                        decimal CostoUnitarioOtraMoneda, 
                        string OtraMoneda, 
                        string EmpresaSucursal, 
                        System.DateTime FechaA, 
                        string GraficaArgumento, 
                        double GraficaValor, 
                        int Grafica1, 
                        string Titulo, 
                        string Reporte, 
                        string Direccion2, 
                        string Direccion3, 
                        string Direccion4, 
                        string GraficaSerie, 
                        string EmpresaNombre, 
                        string ArticuloDesde, 
                        string ArticuloHasta, 
                        string MonedaContable, 
                        bool Etiqueta) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Empresa,
                        Sucursal,
                        Articulo,
                        Descripcion,
                        SubCuenta,
                        Existencia,
                        CostoUnitario,
                        CostoUnitarioOtraMoneda,
                        OtraMoneda,
                        EmpresaSucursal,
                        FechaA,
                        GraficaArgumento,
                        GraficaValor,
                        Grafica1,
                        Titulo,
                        Reporte,
                        Direccion2,
                        Direccion3,
                        Direccion4,
                        GraficaSerie,
                        EmpresaNombre,
                        ArticuloDesde,
                        ArticuloHasta,
                        MonedaContable,
                        Etiqueta};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnSucursal = base.Columns["Sucursal"];
                this.columnArticulo = base.Columns["Articulo"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnSubCuenta = base.Columns["SubCuenta"];
                this.columnExistencia = base.Columns["Existencia"];
                this.columnCostoUnitario = base.Columns["CostoUnitario"];
                this.columnCostoUnitarioOtraMoneda = base.Columns["CostoUnitarioOtraMoneda"];
                this.columnOtraMoneda = base.Columns["OtraMoneda"];
                this.columnEmpresaSucursal = base.Columns["EmpresaSucursal"];
                this.columnFechaA = base.Columns["FechaA"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor = base.Columns["GraficaValor"];
                this.columnGrafica1 = base.Columns["Grafica1"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnReporte = base.Columns["Reporte"];
                this.columnDireccion2 = base.Columns["Direccion2"];
                this.columnDireccion3 = base.Columns["Direccion3"];
                this.columnDireccion4 = base.Columns["Direccion4"];
                this.columnGraficaSerie = base.Columns["GraficaSerie"];
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnArticuloDesde = base.Columns["ArticuloDesde"];
                this.columnArticuloHasta = base.Columns["ArticuloHasta"];
                this.columnMonedaContable = base.Columns["MonedaContable"];
                this.columnEtiqueta = base.Columns["Etiqueta"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnSucursal = new global::System.Data.DataColumn("Sucursal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSucursal);
                this.columnArticulo = new global::System.Data.DataColumn("Articulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticulo);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnSubCuenta = new global::System.Data.DataColumn("SubCuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCuenta);
                this.columnExistencia = new global::System.Data.DataColumn("Existencia", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExistencia);
                this.columnCostoUnitario = new global::System.Data.DataColumn("CostoUnitario", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoUnitario);
                this.columnCostoUnitarioOtraMoneda = new global::System.Data.DataColumn("CostoUnitarioOtraMoneda", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoUnitarioOtraMoneda);
                this.columnOtraMoneda = new global::System.Data.DataColumn("OtraMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtraMoneda);
                this.columnEmpresaSucursal = new global::System.Data.DataColumn("EmpresaSucursal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaSucursal);
                this.columnFechaA = new global::System.Data.DataColumn("FechaA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaA);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor = new global::System.Data.DataColumn("GraficaValor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor);
                this.columnGrafica1 = new global::System.Data.DataColumn("Grafica1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica1);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnReporte = new global::System.Data.DataColumn("Reporte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporte);
                this.columnDireccion2 = new global::System.Data.DataColumn("Direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion2);
                this.columnDireccion3 = new global::System.Data.DataColumn("Direccion3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion3);
                this.columnDireccion4 = new global::System.Data.DataColumn("Direccion4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion4);
                this.columnGraficaSerie = new global::System.Data.DataColumn("GraficaSerie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaSerie);
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnArticuloDesde = new global::System.Data.DataColumn("ArticuloDesde", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticuloDesde);
                this.columnArticuloHasta = new global::System.Data.DataColumn("ArticuloHasta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticuloHasta);
                this.columnMonedaContable = new global::System.Data.DataColumn("MonedaContable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonedaContable);
                this.columnEtiqueta = new global::System.Data.DataColumn("Etiqueta", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtiqueta);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatosDataSet ds = new dsDatosDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Sucursal {
                get {
                    try {
                        return ((int)(this[this.table_Table.SucursalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Sucursal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SucursalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Articulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.ArticuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Articulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ArticuloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubCuenta {
                get {
                    try {
                        return ((string)(this[this.table_Table.SubCuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubCuenta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubCuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Existencia {
                get {
                    try {
                        return ((double)(this[this.table_Table.ExistenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Existencia\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ExistenciaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostoUnitario {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.CostoUnitarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoUnitario\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoUnitarioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostoUnitarioOtraMoneda {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.CostoUnitarioOtraMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoUnitarioOtraMoneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoUnitarioOtraMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtraMoneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.OtraMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'OtraMoneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.OtraMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaSucursal {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaSucursalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaSucursal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaSucursalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaA\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor {
                get {
                    try {
                        return ((double)(this[this.table_Table.GraficaValorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaValorColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Grafica1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reporte {
                get {
                    try {
                        return ((string)(this[this.table_Table.ReporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Reporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ReporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion3 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion4 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaSerie {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaSerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaSerie\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaSerieColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ArticuloDesde {
                get {
                    try {
                        return ((string)(this[this.table_Table.ArticuloDesdeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ArticuloDesde\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ArticuloDesdeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ArticuloHasta {
                get {
                    try {
                        return ((string)(this[this.table_Table.ArticuloHastaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ArticuloHasta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ArticuloHastaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonedaContable {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaContableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MonedaContable\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaContableColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Etiqueta {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EtiquetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Etiqueta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EtiquetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.table_Table.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.table_Table.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSucursalNull() {
                return this.IsNull(this.table_Table.SucursalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSucursalNull() {
                this[this.table_Table.SucursalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArticuloNull() {
                return this.IsNull(this.table_Table.ArticuloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArticuloNull() {
                this[this.table_Table.ArticuloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.table_Table.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.table_Table.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubCuentaNull() {
                return this.IsNull(this.table_Table.SubCuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubCuentaNull() {
                this[this.table_Table.SubCuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExistenciaNull() {
                return this.IsNull(this.table_Table.ExistenciaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExistenciaNull() {
                this[this.table_Table.ExistenciaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoUnitarioNull() {
                return this.IsNull(this.table_Table.CostoUnitarioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoUnitarioNull() {
                this[this.table_Table.CostoUnitarioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoUnitarioOtraMonedaNull() {
                return this.IsNull(this.table_Table.CostoUnitarioOtraMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoUnitarioOtraMonedaNull() {
                this[this.table_Table.CostoUnitarioOtraMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtraMonedaNull() {
                return this.IsNull(this.table_Table.OtraMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtraMonedaNull() {
                this[this.table_Table.OtraMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaSucursalNull() {
                return this.IsNull(this.table_Table.EmpresaSucursalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaSucursalNull() {
                this[this.table_Table.EmpresaSucursalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaANull() {
                return this.IsNull(this.table_Table.FechaAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaANull() {
                this[this.table_Table.FechaAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.table_Table.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.table_Table.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValorNull() {
                return this.IsNull(this.table_Table.GraficaValorColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValorNull() {
                this[this.table_Table.GraficaValorColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica1Null() {
                return this.IsNull(this.table_Table.Grafica1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica1Null() {
                this[this.table_Table.Grafica1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.table_Table.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.table_Table.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporteNull() {
                return this.IsNull(this.table_Table.ReporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporteNull() {
                this[this.table_Table.ReporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion2Null() {
                return this.IsNull(this.table_Table.Direccion2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion2Null() {
                this[this.table_Table.Direccion2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion3Null() {
                return this.IsNull(this.table_Table.Direccion3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion3Null() {
                this[this.table_Table.Direccion3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion4Null() {
                return this.IsNull(this.table_Table.Direccion4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion4Null() {
                this[this.table_Table.Direccion4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaSerieNull() {
                return this.IsNull(this.table_Table.GraficaSerieColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaSerieNull() {
                this[this.table_Table.GraficaSerieColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.table_Table.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.table_Table.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArticuloDesdeNull() {
                return this.IsNull(this.table_Table.ArticuloDesdeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArticuloDesdeNull() {
                this[this.table_Table.ArticuloDesdeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArticuloHastaNull() {
                return this.IsNull(this.table_Table.ArticuloHastaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArticuloHastaNull() {
                this[this.table_Table.ArticuloHastaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaContableNull() {
                return this.IsNull(this.table_Table.MonedaContableColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaContableNull() {
                this[this.table_Table.MonedaContableColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEtiquetaNull() {
                return this.IsNull(this.table_Table.EtiquetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEtiquetaNull() {
                this[this.table_Table.EtiquetaColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepVentaNetaDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepVentaNetaDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepVentaNetaDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepVentaNetaDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepVentaNetaDataSet cln = ((RepVentaNetaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepVentaNetaDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnSucursal;
            private global::System.Data.DataColumn columnArticulo;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnSubCuenta;
            private global::System.Data.DataColumn columnExistencia;
            private global::System.Data.DataColumn columnCostoUnitario;
            private global::System.Data.DataColumn columnCostoUnitarioOtraMoneda;
            private global::System.Data.DataColumn columnOtraMoneda;
            private global::System.Data.DataColumn columnEmpresaSucursal;
            private global::System.Data.DataColumn columnFechaA;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor;
            private global::System.Data.DataColumn columnGrafica1;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnReporte;
            private global::System.Data.DataColumn columnDireccion2;
            private global::System.Data.DataColumn columnDireccion3;
            private global::System.Data.DataColumn columnDireccion4;
            private global::System.Data.DataColumn columnGraficaSerie;
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnArticuloDesde;
            private global::System.Data.DataColumn columnArticuloHasta;
            private global::System.Data.DataColumn columnMonedaContable;
            private global::System.Data.DataColumn columnValuacion;
            private global::System.Data.DataColumn columnEtiqueta;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SucursalColumn {
                get {
                    return this.columnSucursal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArticuloColumn {
                get {
                    return this.columnArticulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubCuentaColumn {
                get {
                    return this.columnSubCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExistenciaColumn {
                get {
                    return this.columnExistencia;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoUnitarioColumn {
                get {
                    return this.columnCostoUnitario;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoUnitarioOtraMonedaColumn {
                get {
                    return this.columnCostoUnitarioOtraMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtraMonedaColumn {
                get {
                    return this.columnOtraMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaSucursalColumn {
                get {
                    return this.columnEmpresaSucursal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaAColumn {
                get {
                    return this.columnFechaA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValorColumn {
                get {
                    return this.columnGraficaValor;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica1Column {
                get {
                    return this.columnGrafica1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporteColumn {
                get {
                    return this.columnReporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion2Column {
                get {
                    return this.columnDireccion2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion3Column {
                get {
                    return this.columnDireccion3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion4Column {
                get {
                    return this.columnDireccion4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaSerieColumn {
                get {
                    return this.columnGraficaSerie;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArticuloDesdeColumn {
                get {
                    return this.columnArticuloDesde;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArticuloHastaColumn {
                get {
                    return this.columnArticuloHasta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaContableColumn {
                get {
                    return this.columnMonedaContable;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValuacionColumn {
                get {
                    return this.columnValuacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtiquetaColumn {
                get {
                    return this.columnEtiqueta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        string Empresa, 
                        int Sucursal, 
                        string Articulo, 
                        string Descripcion, 
                        string SubCuenta, 
                        double Existencia, 
                        decimal CostoUnitario, 
                        decimal CostoUnitarioOtraMoneda, 
                        string OtraMoneda, 
                        string EmpresaSucursal, 
                        System.DateTime FechaA, 
                        string GraficaArgumento, 
                        double GraficaValor, 
                        int Grafica1, 
                        string Titulo, 
                        string Reporte, 
                        string Direccion2, 
                        string Direccion3, 
                        string Direccion4, 
                        string GraficaSerie, 
                        string EmpresaNombre, 
                        string ArticuloDesde, 
                        string ArticuloHasta, 
                        string MonedaContable, 
                        string Valuacion, 
                        bool Etiqueta, 
                        bool VerGraficaDetalle) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Empresa,
                        Sucursal,
                        Articulo,
                        Descripcion,
                        SubCuenta,
                        Existencia,
                        CostoUnitario,
                        CostoUnitarioOtraMoneda,
                        OtraMoneda,
                        EmpresaSucursal,
                        FechaA,
                        GraficaArgumento,
                        GraficaValor,
                        Grafica1,
                        Titulo,
                        Reporte,
                        Direccion2,
                        Direccion3,
                        Direccion4,
                        GraficaSerie,
                        EmpresaNombre,
                        ArticuloDesde,
                        ArticuloHasta,
                        MonedaContable,
                        Valuacion,
                        Etiqueta,
                        VerGraficaDetalle};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnSucursal = base.Columns["Sucursal"];
                this.columnArticulo = base.Columns["Articulo"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnSubCuenta = base.Columns["SubCuenta"];
                this.columnExistencia = base.Columns["Existencia"];
                this.columnCostoUnitario = base.Columns["CostoUnitario"];
                this.columnCostoUnitarioOtraMoneda = base.Columns["CostoUnitarioOtraMoneda"];
                this.columnOtraMoneda = base.Columns["OtraMoneda"];
                this.columnEmpresaSucursal = base.Columns["EmpresaSucursal"];
                this.columnFechaA = base.Columns["FechaA"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor = base.Columns["GraficaValor"];
                this.columnGrafica1 = base.Columns["Grafica1"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnReporte = base.Columns["Reporte"];
                this.columnDireccion2 = base.Columns["Direccion2"];
                this.columnDireccion3 = base.Columns["Direccion3"];
                this.columnDireccion4 = base.Columns["Direccion4"];
                this.columnGraficaSerie = base.Columns["GraficaSerie"];
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnArticuloDesde = base.Columns["ArticuloDesde"];
                this.columnArticuloHasta = base.Columns["ArticuloHasta"];
                this.columnMonedaContable = base.Columns["MonedaContable"];
                this.columnValuacion = base.Columns["Valuacion"];
                this.columnEtiqueta = base.Columns["Etiqueta"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnSucursal = new global::System.Data.DataColumn("Sucursal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSucursal);
                this.columnArticulo = new global::System.Data.DataColumn("Articulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticulo);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnSubCuenta = new global::System.Data.DataColumn("SubCuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCuenta);
                this.columnExistencia = new global::System.Data.DataColumn("Existencia", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExistencia);
                this.columnCostoUnitario = new global::System.Data.DataColumn("CostoUnitario", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoUnitario);
                this.columnCostoUnitarioOtraMoneda = new global::System.Data.DataColumn("CostoUnitarioOtraMoneda", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoUnitarioOtraMoneda);
                this.columnOtraMoneda = new global::System.Data.DataColumn("OtraMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtraMoneda);
                this.columnEmpresaSucursal = new global::System.Data.DataColumn("EmpresaSucursal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaSucursal);
                this.columnFechaA = new global::System.Data.DataColumn("FechaA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaA);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor = new global::System.Data.DataColumn("GraficaValor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor);
                this.columnGrafica1 = new global::System.Data.DataColumn("Grafica1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica1);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnReporte = new global::System.Data.DataColumn("Reporte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporte);
                this.columnDireccion2 = new global::System.Data.DataColumn("Direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion2);
                this.columnDireccion3 = new global::System.Data.DataColumn("Direccion3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion3);
                this.columnDireccion4 = new global::System.Data.DataColumn("Direccion4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion4);
                this.columnGraficaSerie = new global::System.Data.DataColumn("GraficaSerie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaSerie);
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnArticuloDesde = new global::System.Data.DataColumn("ArticuloDesde", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticuloDesde);
                this.columnArticuloHasta = new global::System.Data.DataColumn("ArticuloHasta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticuloHasta);
                this.columnMonedaContable = new global::System.Data.DataColumn("MonedaContable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonedaContable);
                this.columnValuacion = new global::System.Data.DataColumn("Valuacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValuacion);
                this.columnEtiqueta = new global::System.Data.DataColumn("Etiqueta", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtiqueta);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Sucursal {
                get {
                    try {
                        return ((int)(this[this.table_Table.SucursalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Sucursal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SucursalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Articulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.ArticuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Articulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ArticuloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubCuenta {
                get {
                    try {
                        return ((string)(this[this.table_Table.SubCuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubCuenta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubCuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Existencia {
                get {
                    try {
                        return ((double)(this[this.table_Table.ExistenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Existencia\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ExistenciaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostoUnitario {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.CostoUnitarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoUnitario\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoUnitarioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostoUnitarioOtraMoneda {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.CostoUnitarioOtraMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoUnitarioOtraMoneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoUnitarioOtraMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtraMoneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.OtraMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'OtraMoneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.OtraMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaSucursal {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaSucursalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaSucursal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaSucursalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaA\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor {
                get {
                    try {
                        return ((double)(this[this.table_Table.GraficaValorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaValorColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Grafica1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reporte {
                get {
                    try {
                        return ((string)(this[this.table_Table.ReporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Reporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ReporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion3 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion4 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaSerie {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaSerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaSerie\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaSerieColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ArticuloDesde {
                get {
                    try {
                        return ((string)(this[this.table_Table.ArticuloDesdeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ArticuloDesde\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ArticuloDesdeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ArticuloHasta {
                get {
                    try {
                        return ((string)(this[this.table_Table.ArticuloHastaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ArticuloHasta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ArticuloHastaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonedaContable {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaContableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MonedaContable\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaContableColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Valuacion {
                get {
                    try {
                        return ((string)(this[this.table_Table.ValuacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Valuacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ValuacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Etiqueta {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EtiquetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Etiqueta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EtiquetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.table_Table.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.table_Table.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.table_Table.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSucursalNull() {
                return this.IsNull(this.table_Table.SucursalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSucursalNull() {
                this[this.table_Table.SucursalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArticuloNull() {
                return this.IsNull(this.table_Table.ArticuloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArticuloNull() {
                this[this.table_Table.ArticuloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.table_Table.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.table_Table.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubCuentaNull() {
                return this.IsNull(this.table_Table.SubCuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubCuentaNull() {
                this[this.table_Table.SubCuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExistenciaNull() {
                return this.IsNull(this.table_Table.ExistenciaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExistenciaNull() {
                this[this.table_Table.ExistenciaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoUnitarioNull() {
                return this.IsNull(this.table_Table.CostoUnitarioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoUnitarioNull() {
                this[this.table_Table.CostoUnitarioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoUnitarioOtraMonedaNull() {
                return this.IsNull(this.table_Table.CostoUnitarioOtraMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoUnitarioOtraMonedaNull() {
                this[this.table_Table.CostoUnitarioOtraMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtraMonedaNull() {
                return this.IsNull(this.table_Table.OtraMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtraMonedaNull() {
                this[this.table_Table.OtraMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaSucursalNull() {
                return this.IsNull(this.table_Table.EmpresaSucursalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaSucursalNull() {
                this[this.table_Table.EmpresaSucursalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaANull() {
                return this.IsNull(this.table_Table.FechaAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaANull() {
                this[this.table_Table.FechaAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.table_Table.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.table_Table.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValorNull() {
                return this.IsNull(this.table_Table.GraficaValorColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValorNull() {
                this[this.table_Table.GraficaValorColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica1Null() {
                return this.IsNull(this.table_Table.Grafica1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica1Null() {
                this[this.table_Table.Grafica1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.table_Table.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.table_Table.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporteNull() {
                return this.IsNull(this.table_Table.ReporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporteNull() {
                this[this.table_Table.ReporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion2Null() {
                return this.IsNull(this.table_Table.Direccion2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion2Null() {
                this[this.table_Table.Direccion2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion3Null() {
                return this.IsNull(this.table_Table.Direccion3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion3Null() {
                this[this.table_Table.Direccion3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion4Null() {
                return this.IsNull(this.table_Table.Direccion4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion4Null() {
                this[this.table_Table.Direccion4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaSerieNull() {
                return this.IsNull(this.table_Table.GraficaSerieColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaSerieNull() {
                this[this.table_Table.GraficaSerieColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.table_Table.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.table_Table.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArticuloDesdeNull() {
                return this.IsNull(this.table_Table.ArticuloDesdeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArticuloDesdeNull() {
                this[this.table_Table.ArticuloDesdeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArticuloHastaNull() {
                return this.IsNull(this.table_Table.ArticuloHastaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArticuloHastaNull() {
                this[this.table_Table.ArticuloHastaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaContableNull() {
                return this.IsNull(this.table_Table.MonedaContableColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaContableNull() {
                this[this.table_Table.MonedaContableColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValuacionNull() {
                return this.IsNull(this.table_Table.ValuacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValuacionNull() {
                this[this.table_Table.ValuacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEtiquetaNull() {
                return this.IsNull(this.table_Table.EtiquetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEtiquetaNull() {
                this[this.table_Table.EtiquetaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.table_Table.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.table_Table.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
