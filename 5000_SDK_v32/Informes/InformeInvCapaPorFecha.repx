/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformeInvCapa : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label78;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.XRLabel label55;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.PageFooterBand pageFooterBand1;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRLabel label36;
        private DevExpress.XtraReports.UI.XRLabel label37;
        private DevExpress.XtraReports.UI.XRLabel label56;
        private DevExpress.XtraReports.UI.XRLabel label39;
        private DevExpress.XtraReports.UI.XRLabel label38;
        private DevExpress.XtraReports.UI.XRLabel label26;
        private DevExpress.XtraReports.UI.XRLabel label25;
        private DevExpress.XtraReports.UI.XRLabel label24;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo4;
        private DevExpress.XtraReports.UI.XRLabel label33;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox1;
        private DevExpress.XtraReports.UI.XRPageBreak pageBreak1;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private XtraReportSerialization.RepVentaNetaDataSet RepVentaNeta;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter3;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.XRLabel label53;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.XRLabel label47;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private DevExpress.XtraReports.UI.XRLabel label50;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader2;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.XRLabel label48;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label51;
        private DevExpress.XtraReports.UI.XRLabel label57;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo5;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox3;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLine line12;
        private DevExpress.XtraReports.UI.XRLine line11;
        private DevExpress.XtraReports.UI.XRLabel label92;
        private DevExpress.XtraReports.UI.XRLabel label91;
        private DevExpress.XtraReports.UI.XRLabel label90;
        private DevExpress.XtraReports.UI.XRLabel label87;
        private DevExpress.XtraReports.UI.XRLabel label86;
        private DevExpress.XtraReports.UI.XRLabel label89;
        private DevExpress.XtraReports.UI.XRLabel label88;
        private System.Data.OleDb.OleDbDataAdapter TableTableAdapter;
        private System.Data.OleDb.OleDbCommand oleDbCommand1;
        private System.Data.OleDb.OleDbConnection oleDbConnection1;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField Total;
        private System.Resources.ResourceManager _resources;
        public InformeInvCapa() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAADAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsFmHUPu5IbpXQAAAABSAAAAK" +
                        "wAAAK0BAAAmJAB0AGgAaQBzAC4AUwBjAHIAaQBwAHQAcwBTAG8AdQByAGMAZQAAAAAAInAAaQBjAHQAd" +
                        "QByAGUAQgBvAHgAMQAuAEkAbQBhAGcAZQD2BwAAInAAaQBjAHQAdQByAGUAQgBvAHgAMwAuAEkAbQBhA" +
                        "GcAZQDzyQAAAfMPDQpQcml2YXRlIFN1YiBQYWdlSGVhZGVyX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlc" +
                        "iBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ" +
                        "3MpDQoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJHcmFmaWNhMiIpID0gMSBUSEVODQogICAgI" +
                        "GUuQ2FuY2VsID0gVHJ1ZQ0KICBFTFNFDQogICAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTkQgSUYNCg0KR" +
                        "W5kIFN1Yg0KDQpQcml2YXRlIFN1YiBHcm91cEhlYWRlcjFfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyI" +
                        "EFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJnc" +
                        "ykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkdyYWZpY2ExIikgPSAxIFRIRU4NCiAgICAgZ" +
                        "S5DYW5jZWwgPSBUcnVlDQogIEVMU0UNCicgICAgIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiRGVzZ" +
                        "2xvc2FyIikgPSAiU2kiIFRIRU4NCicgICAgICAgIGUuQ2FuY2VsID0gVHJ1ZQ0KJyAgICAgRUxTRQ0KI" +
                        "CAgICAgICBlLkNhbmNlbCA9IEZhbHNlDQonICAgICBFTkQgSUYgDQogIEVORCBJRiANCg0KRW5kIFN1Y" +
                        "g0KDQpQcml2YXRlIFN1YiBEZXRhaWxfQmVmb3JlUHJpbnRfMShCeVZhbCBzZW5kZXIgQXMgT2JqZWN0L" +
                        "CBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGI" +
                        "EdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYTEiKSA9IDEgVEhFTg0KICAgICBlLkNhbmNlbCA9I" +
                        "FRydWUNCiAgRUxTRQ0KICAgICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkRlc2dsb3NhciIpID0gI" +
                        "k5vIiBUSEVODQogICAgICAgIGUuQ2FuY2VsID0gVHJ1ZQ0KICAgICBFTFNFDQogICAgICAgIGUuQ2FuY" +
                        "2VsID0gRmFsc2UNCiAgICAgRU5EIElGIA0KICBFTkQgSUYgDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTd" +
                        "WIgbGFiZWw5NF9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c" +
                        "3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogICBJRiBHZXRDdXJyZW50Q29sd" +
                        "W1uVmFsdWUoIkRlc2dsb3NhcjIiKSA9ICJObyIgVEhFTg0KICAgICAgZS5DYW5jZWwgPSBUcnVlDQogI" +
                        "CBFTFNFDQogICAgICBlLkNhbmNlbCA9IEZhbHNlDQogICBFTkQgSUYgDQoNCkVuZCBTdWINCg0KUHJpd" +
                        "mF0ZSBTdWIgY2hhcnQxX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQ" +
                        "XMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpDQoNCiAnU2kgZWwgdmFsb3IgZ" +
                        "GVsIGNhbXBvIEFydGljdWxvIGVzIG51bGwgbm8gc2UgbXVlc3RyYSANCiAgSUYgR2V0Q3VycmVudENvb" +
                        "HVtblZhbHVlKCJBcnRpY3VsbyIpIElTIE5PVEhJTkcgVEhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUgI" +
                        "CAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQogICdHZW5lcmEgdW4gb2JqZXRvIHF1ZSByZXByZXNlb" +
                        "nRhIGEgbGEgZ3LDoWZpY2ENCiAgRGltIEdyYWZpY2ExIEFzIFhSQ2hhcnQgPSBDVHlwZShzZW5kZXIsW" +
                        "FJDaGFydCkNCg0KICAnT2N1bHRhIG8gbXVlc3RyYSBsYXMgZXRpcXVldGFzIGRlIGxhIGdyYWZpY2ENC" +
                        "iAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJFdGlxdWV0YSIpID0gRmFsc2UgVEhFTg0KICAgICBHc" +
                        "mFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gRmFsc2UNCiAgRUxTRQ0KICAgICBHc" +
                        "mFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gVHJ1ZQ0KICBFTkQgSUYNCg0KRW5kI" +
                        "FN1Yg0KDQoNCg0KUHJpdmF0ZSBTdWIgbGFiZWwxMF9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT" +
                        "2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KD" +
                        "QogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiSW52VmFsdWFjaW9uT3RyYU1vbmVkYSIpID0gIk5PI" +
                        "iBUSEVODQogICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgICBSRVRVUk4NCiAgRU5EIElGDQoNCkVuZ" +
                        "CBTdWINCkAAAQAAAP////8BAAAAAAAAAAwCAAAAUVN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wL" +
                        "jAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQUBAAAAFVN5c" +
                        "3RlbS5EcmF3aW5nLkJpdG1hcAEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABawQAAAv/Y/+AAEEpGSUYAA" +
                        "QEBAJYAlgAA/+4ADkFkb2JlAGQAAAAAAf/hEZZFeGlmAABNTQAqAAAACAAHARIAAwAAAAEAAQAAARoAB" +
                        "QAAAAEAAABiARsABQAAAAEAAABqASgAAwAAAAEAAgAAATEAAgAAABwAAAByATIAAgAAABQAAACOh2kAB" +
                        "AAAAAEAAACiAAAAwgCWAAAAAQAAAJYAAAABAABBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MAMjAxM" +
                        "TowMToxOCAwOTo1MTowNgAAAqACAAQAAAABAAABYqADAAQAAAABAAAAgQAAAAAAAAAGAQMAAwAAAAEAB" +
                        "gAAARoABQAAAAEAAAEQARsABQAAAAEAAAEYASgAAwAAAAEAAgAAAgEABAAAAAEAAAEgAgIABAAAAAEAA" +
                        "BBuAAAAAAAAAEgAAAABAAAASAAAAAH/2P/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlAGSAAAAAAf/bAIQAD" +
                        "AgICAkIDAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD" +
                        "AwMDAENCwsNDg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwM/8AAEQgAOgCgAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEB" +
                        "QYHCAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQhE" +
                        "jEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXiZfKzh" +
                        "MPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIEBAMEBQYHB" +
                        "wYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKygwcmNcLSRJNUo" +
                        "xdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dXZ3eHl6e3x//aAAwDA" +
                        "QACEQMRAD8A9VSSSSUpYGFkfWd31kyKsqoN6S3f6btrQ3aI9B1VgPqvts/wzH/+B/o1d+sPVj0jpN2ax" +
                        "rX2t2tpY6YL3kMbu2/mtn1HIf1Y6rl9W6QzMy6212Oe9oLJDXBrtnqNa4vcz9z6af7Uvb939Di4P8JZ7" +
                        "sfc9v8ASri/wXWSSSTF6kkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklP//Q9VWf1rrWJ0fE9e/32" +
                        "PltFDT7rHfut/dY3/CWf4NN1vreJ0bE9e/32PltFDT7rHeA/dY3/CWf4Ncb0zpnUfrX1F+fnvLcVp22W" +
                        "NkCAf6Hh/usb/hbf/R/82lK+sfU8rN+q/Trspwddl5Ntzg0Q1orN1VdTP5DGOZ9JF6sOpdL6J9X+odPB" +
                        "ZViU7rbRqA+8VPjIr/0NrvUb/X/ANHZ6Stf4wcGqjpXTxjsFVGPaaWVtEABzHFv/npdD0B1OX9XcEECy" +
                        "p+LXW9jgC0wwVWsc0/S+i5i0I5Bj5bBPh4gJz44nY8XFH/oNGWM5OZzRvhJhDhkNxXq/wCmw+r31hxet" +
                        "4u9n6PJrgZGOTq0/vN/fqf+Y9ay87670LO+rGa3q3SHOGIHaHVxqLj/ADF/+lxbPose7/i7P0vpW2dd9" +
                        "XvrDjdbxd7B6eTVAyKCZLSfzm/v1P8AzHqHmOXiI+9hPFhl/jY5fuyZcGeRkcWUcOWP+Lkj+/FL13rmJ" +
                        "0PB+25bXvrLxWG17Zkgu/wjq2fRY785XqrWXVMurMssaHtPk4bmrB+vHUcvpvSK8jDc1l/rta2xzGvLZ" +
                        "ZaS6sWh7Gv9uz6P0Fk9T6z9ZX9XwundNyhW/KxarA1zK9peW2WWuL31P2+2tNx8rPJESEoxB4vmP+b+a" +
                        "12TmYQkYkSlIcOkR+/8r26yuu/WDF6HXRZlV2WMveWTWGnbA3Fzg9zP+iubyOsfXToThb1djcvDs9rns" +
                        "DBtJ/0dtLGenb+569PpPWX9aH9XuxcfKysxud0u9xfg2bWMsgt3fpmU117bGN/RWfy/9GpsPJXkjxyhL" +
                        "HLrCXz/ANWP9Zizc5WORjGQnHpKPy/1pf1X01JcrV1P6w9Cw8rN+sdteSz2MxKa9oe607vbvrrqayvb9" +
                        "Pf6n0P+3KOPb/jC6pj/ALQx7a8ep4300Qxm5vb0m3V3P2u/M+02s/zFEOUkbPuYxAHh9wy9Epdosh5kC" +
                        "hwTMyOLgA9cY95PcLlfqh9Yc/qGN1LL6lYHsxiHtaxgaGM2vse1u33v+j+ej/Vf6y5PUbremdTq9DqOM" +
                        "JIALQ9rSGvlhnZazc3d+Y/+cqWL9RbDX0jrVga15YzcGvEtMV2Ha9v5zE+OAxxZ4zA4x7XDLf55bxl/W" +
                        "WSziWTAYk8BGTiH9yP6Uf6r1nQut4nXMH7biNexgea3Ns27g5sH/BusZ9Fzfz1oriOn/W3qGN9VH9RyS" +
                        "MrLdlHGolrWMH6NtjfUZQKvYxrbP5f5iWOz/GFm4reoU5lQa8bq6QapIPG0Cmyn/ty9N+5zF8c4QAlwc" +
                        "UjpKX9Vd97ga4YzmSOOojWMfF6/PzacDCvzb59LHY6x4aJMNG72zCH0nqdHVun09Qxw5tV0w10SC1zqn" +
                        "tOwvZ9Nn7ywq+r9dt+rfU7eqYYx8rDY4V2WM9lhA/nPQs3sd6bvz/6PZ/g1Us+t2fhfVbBynxkdRznXN" +
                        "Fr2gNArse11jq6vTa52z02MZ/1xNHKZCaHCfX7ehvXh9zi/u8K481jAs2PT7mo6cXB/jcT2iS4puP8A4" +
                        "xnUNzGZdVhcARQ00kkH/rP2b/2YXQ/V3P6ln9O9bqeKcTJa9zC0tczeBEWiqz31/S2f2E3Jy5hHiE4TA" +
                        "NHglqE48/GeEwnCxY4xoX//0ez+tf1ZPVWjNxDGfSzYGOPtsrBL/R93tqs3O/RWf2Lv9JTmfVP6z+gWd" +
                        "H6l+iDD6WPa4bC1wOz7Jkt9uyxrvZXZ/wBbt/S/zvarm/rV9VWdUY7Mw2tbntbD2GA29oEenZPtbc1v8" +
                        "1b/ANat/R/zKU3vrR0x3U+iZOPW3de0C2gcnfWd4a3/AIxu6r/rixP8XnV2W4tnSbHfpKSbscHvW8zY0" +
                        "f8AFXO/8GUfqp9aHse3pHVXODg70se6yQ4OB2fZMnd7vV3eyp7/APirP0n87n/WHoNwzn9V+rpdkVPse" +
                        "y5uI6X03615DW+md+y3c71P9H/xKuctKGTHLl5nh4jx45H9GbU5mM8eSOeA4uEcGSI/Sh/6C3Prd9azc" +
                        "5/RekzY6w+jkWsG4uLvYcXHaPpvf9Cx/wD1uv3/AM3qfVD6rno9TsvLM5+Q0NcwGW1Mnd6II+nZu/nbP" +
                        "+2v9JbD6p/VJnSWNzc1rX9Qc2GtEFtLSP5uv9613+Ft/wCtVfo/57pkM+aEYexg+T9OfXLL/vU4cMpT9" +
                        "/N8/wChDpij/wB88p/jI/5Bq/8ADLf/AD3cs8f+LTo3/hSr/wA9ZC6X6y4XTs7Bqxuoi30bMipjH06Ft" +
                        "jz6NTnH/RudZ6X0f8IqLmfV49TPVGC05PSH19PFTDLS5+2ijax3us2uynU79/5ln+jT8OUDCI1ImssdB" +
                        "peXhjBZlxE5jKxvjl4/q/VJ0vrHWyzoHUW2NDgMa1wB8WtNjHf2Xt3LgM9trvqV0x/LGZN7PgXG1zB+D" +
                        "16Tc3Ez6MnDL22Me11OQ1jhubvG1zXbf5t+1yoYvS+iYHSn9IssZdiNDn2tyHsJ2ucSX2fQ2tbb9B/76" +
                        "Zy+cYogEEyGQT4f6vDKBX8xh9yRIIAMDC/63FxOJ9dr8fqvQKs3p1zcmnHua+7YZ2te19e61n069r3s9" +
                        "j2rP6Z0nE6hiMvb9Y7aXbQLKLH7XVkCPT2uvb7W/mO+gun6b9X+g9IybvQPv6g3YKLbA8Fg3ONdVb/dY" +
                        "z3e7f6qy2fVD6r9SsstqF2JtutxxS17Q0vpc5lhpZZ63s9m7+p/g1Njz44wMIynGETxRycEZaT/AEZRl" +
                        "/0mLJhnKfGRGUpDhlDjlH5f0oyim6H9U68XqdfV2dUOeWb2uMB24lvpe671LPoLH+pb2N6R1ykuAt9Iu" +
                        "9M87Qyxhd/n+1dZ9XukdL6Vi219NsN1dlhdY8vD/cAK9v6MNY3ZtWKKugnqVfVKunZllnVaXmljNgrs9" +
                        "av1sl7Weux9d3ou/SbnMZ/o/wBL+kTY5jP3YyMp6Q4ZcMYfzR9zhlH0/wBZMsIgMUogQ+fijcpj9cODi" +
                        "4vU5nQ7+jU/Uy39sVutxrM0sY2sEv8AULK3MdU4FuxzGte7dv8A/Sam36t41NTs/wCr3Xm01kAn1LPTj" +
                        "879PdSWbf8Ai7sVdDjdM6F0zG/5v2ML8bJY/IsfkOaWmH00w9/s2277afR9Nn+D/wBKqNv1B+rTsr0/X" +
                        "urtfLmY4tYTtH7nq12X7P7aeOYhxTPFOAnIz+UZMc4f3P0Vp5eXDAcMJmMRH5vbyQl/fc/E691Dqf1f6" +
                        "3iZzm3vxKCW5LAAHB29sO2Btbv5v9E9rP0lafHu6A36m9Mp6015ZdbcKX1Al9bhbdvvDm/m1td7/wCc3" +
                        "/6GxdLR0boNPT7+kY4Yyq+sm8NfNha4bPXe8l1nb2v+glR0Tojuljou1uVjYx9zHu3Pa5xNvqOeza+q1" +
                        "3qOd7PTUZ5jFrwxnCPuDJUPQRHg4OIfu+teMGTS5RnL2zj9XqHFx8df4ryzvq99gqOd0Hr9VeOTP6S0V" +
                        "t/65ZUXUWu/4zGW79S+u5vWMK77aA63GeG+s0bQ8OG73NHs9Rn5+z+QqQ+on1Xc37U3KtNGrtwtrLIbO" +
                        "/8AS+nu2s2+79Kul6dg4GBito6fW2rH+k3YZ3bv8IXkudZu/fc5LmM2OWMxs5J3pOUBjlCuhl+knl8OS" +
                        "OQHTHCtYRmZxnfYfov/0vVUkkklPOfWn6rN6mx2bhNDeoNb7maBt7QP5t8+1tzf8Dd/1q39H/Mz+qf1c" +
                        "f0il2RkuP2zJaBZU1x9Oto+jXtafTtub+ff/wBbp/R/zvQJJKUkkkkpp9YxLMzpt9FX88W76JMD1ayLs" +
                        "f3f8fXWsejoGcMzBusLNprN2fwYymm++k1t/PZ9p6lkW/8AoNSukSVjF7vtnhrhuV334f5f4bBl9rjHF" +
                        "fFQ27cTz31b6Pk4NlZyqrGW4+P9mNm6g0v9zX7qvs9dWVZucz1Wvzf0rPWu/PsssTV/V6cnDttxaXbMz" +
                        "NvyXENJLLnZDsYu0/SfTxvb/g/+tLoklJL3uOe10eLh4v3cm3/P/wANZH2uCN3w2K4q/eg8e/oXWvsGN" +
                        "hir3U00tre11UMfVe+9zbb7GnK2V0tx/sTcX8/1fWRn9A6sXZ23Y4Z4zaq3Pdrji59l1NtG0fzWbLWZv" +
                        "+H9T0P8HV6bOqSUh9/X+b+aV1+8sHs6fP8ALHf91x+gYFmM6+62m3HstbUwssOPt/RBwHpN6eyqvazf6" +
                        "XqWt9V9bKv9Gg4fSs6pn1fFjAD06pzMr3A7SaPQ9v7/AOkW8koD7nFP5dtauq9qfy/9TZRwcEL4qsVdc" +
                        "V+7D5v8Nyuo9K+29RZbbTXfjsxL6gLAHAWWOp2+x371bLPeslvR+tOfgNuqBOKcFxta6qIpDG5fr2uY7" +
                        "Nuyt3rsr9Oz7L9nf/pPUrt6tJOxe7wiuGq9PHff9FGT2+I3xXevDTxnR8N1uDi5FeGyurGszb7c6WbrG" +
                        "uGVj+g1rf0znPfYx13q/odmNX/Oez0lh9FzM3pWP9lxa8EDpgoNoc0faDace/Z+ja9/oenRb6j8lu/1M" +
                        "t/6C2v1fV7NJTH3eI0I8XFprP8Aeyfven99ij7fCLMuHh10j+7D931f9285i9De+zHtux7Nv237RkVZR" +
                        "ocIbi241d1dWE1uN/PPpZ/pf0XqrQ6RRlYTG4Rxm14wdk2Nsa9u1gdkPfi47aR+a7Gt3/8ABen6S00lX" +
                        "ze5R4+Hh0quLh/T4eFnxcGnDxXrvw3+jxW//9n/7RjQUGhvdG9zaG9wIDMuMAA4QklNBCUAAAAAABAAA" +
                        "AAAAAAAAAAAAAAAAAAAOEJJTQQ6AAAAAACTAAAAEAAAAAEAAAAAAAtwcmludE91dHB1dAAAAAUAAAAAQ" +
                        "2xyU2VudW0AAAAAQ2xyUwAAAABSR0JDAAAAAEludGVlbnVtAAAAAEludGUAAAAAQ2xybQAAAABNcEJsY" +
                        "m9vbAEAAAAPcHJpbnRTaXh0ZWVuQml0Ym9vbAAAAAALcHJpbnRlck5hbWVURVhUAAAAAQAAADhCSU0EO" +
                        "wAAAAABsgAAABAAAAABAAAAAAAScHJpbnRPdXRwdXRPcHRpb25zAAAAEgAAAABDcHRuYm9vbAAAAAAAQ" +
                        "2xicmJvb2wAAAAAAFJnc01ib29sAAAAAABDcm5DYm9vbAAAAAAAQ250Q2Jvb2wAAAAAAExibHNib29sA" +
                        "AAAAABOZ3R2Ym9vbAAAAAAARW1sRGJvb2wAAAAAAEludHJib29sAAAAAABCY2tnT2JqYwAAAAEAAAAAA" +
                        "ABSR0JDAAAAAwAAAABSZCAgZG91YkBv4AAAAAAAAAAAAEdybiBkb3ViQG/gAAAAAAAAAAAAQmwgIGRvd" +
                        "WJAb+AAAAAAAAAAAABCcmRUVW50RiNSbHQAAAAAAAAAAAAAAABCbGQgVW50RiNSbHQAAAAAAAAAAAAAA" +
                        "ABSc2x0VW50RiNQeGxAYsAAAAAAAAAAAAp2ZWN0b3JEYXRhYm9vbAEAAAAAUGdQc2VudW0AAAAAUGdQc" +
                        "wAAAABQZ1BDAAAAAExlZnRVbnRGI1JsdAAAAAAAAAAAAAAAAFRvcCBVbnRGI1JsdAAAAAAAAAAAAAAAA" +
                        "FNjbCBVbnRGI1ByY0BZAAAAAAAAOEJJTQPtAAAAAAAQAJYAAAABAAIAlgAAAAEAAjhCSU0EJgAAAAAAD" +
                        "gAAAAAAAAAAAAA/gAAAOEJJTQQNAAAAAAAEAAAAeDhCSU0EGQAAAAAABAAAAB44QklNA/MAAAAAAAkAA" +
                        "AAAAAAAAAEAOEJJTScQAAAAAAAKAAEAAAAAAAAAAjhCSU0D9QAAAAAASAAvZmYAAQBsZmYABgAAAAAAA" +
                        "QAvZmYAAQChmZoABgAAAAAAAQAyAAAAAQBaAAAABgAAAAAAAQA1AAAAAQAtAAAABgAAAAAAAThCSU0D+" +
                        "AAAAAAAcAAA/////////////////////////////wPoAAAAAP////////////////////////////8D6" +
                        "AAAAAD/////////////////////////////A+gAAAAA/////////////////////////////wPoAAA4Q" +
                        "klNBAAAAAAAAAIAAThCSU0EAgAAAAAABAAAAAA4QklNBDAAAAAAAAIBAThCSU0ELQAAAAAABgABAAAAA" +
                        "zhCSU0ECAAAAAAAEAAAAAEAAAJAAAACQAAAAAA4QklNBB4AAAAAAAQAAAAAOEJJTQQaAAAAAANJAAAAB" +
                        "gAAAAAAAAAAAAAAgQAAAWIAAAAKAFUAbgB0AGkAdABsAGUAZAAtADEAAAABAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAEAAAAAAAAAAAAAAWIAAACBAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAEAAAA" +
                        "AEAAAAAAABudWxsAAAAAgAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nA" +
                        "AAAAAAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJnaHRsb25nAAABYgAAAAZzbGljZ" +
                        "XNWbExzAAAAAU9iamMAAAABAAAAAAAFc2xpY2UAAAASAAAAB3NsaWNlSURsb25nAAAAAAAAAAdncm91c" +
                        "ElEbG9uZwAAAAAAAAAGb3JpZ2luZW51bQAAAAxFU2xpY2VPcmlnaW4AAAANYXV0b0dlbmVyYXRlZAAAA" +
                        "ABUeXBlZW51bQAAAApFU2xpY2VUeXBlAAAAAEltZyAAAAAGYm91bmRzT2JqYwAAAAEAAAAAAABSY3QxA" +
                        "AAABAAAAABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAAgQAAAABSZ2h0b" +
                        "G9uZwAAAWIAAAADdXJsVEVYVAAAAAEAAAAAAABudWxsVEVYVAAAAAEAAAAAAABNc2dlVEVYVAAAAAEAA" +
                        "AAAAAZhbHRUYWdURVhUAAAAAQAAAAAADmNlbGxUZXh0SXNIVE1MYm9vbAEAAAAIY2VsbFRleHRURVhUA" +
                        "AAAAQAAAAAACWhvcnpBbGlnbmVudW0AAAAPRVNsaWNlSG9yekFsaWduAAAAB2RlZmF1bHQAAAAJdmVyd" +
                        "EFsaWduZW51bQAAAA9FU2xpY2VWZXJ0QWxpZ24AAAAHZGVmYXVsdAAAAAtiZ0NvbG9yVHlwZWVudW0AA" +
                        "AARRVNsaWNlQkdDb2xvclR5cGUAAAAATm9uZQAAAAl0b3BPdXRzZXRsb25nAAAAAAAAAApsZWZ0T3V0c" +
                        "2V0bG9uZwAAAAAAAAAMYm90dG9tT3V0c2V0bG9uZwAAAAAAAAALcmlnaHRPdXRzZXRsb25nAAAAAAA4Q" +
                        "klNBCgAAAAAAAwAAAACP/AAAAAAAAA4QklNBBQAAAAAAAQAAAAEOEJJTQQMAAAAABCKAAAAAQAAAKAAA" +
                        "AA6AAAB4AAAbMAAABBuABgAAf/Y/+0ADEFkb2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgIC" +
                        "QgMCQkMEQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA" +
                        "Q0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD" +
                        "AwMDAz/wAARCAA6AKADASIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcIC" +
                        "QoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBU" +
                        "WETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14" +
                        "/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1A" +
                        "QACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFV" +
                        "TZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRA" +
                        "xEAPwD1VJJJJSlgYWR9Z3fWTIqyqg3pLd/pu2tDdoj0HVWA+q+2z/DMf/4H+jV36w9WPSOk3ZrGtfa3a" +
                        "2ljpgveQxu7b+a2fUch/VjquX1bpDMzLrbXY572gskNcGu2eo1ri9zP3Ppp/tS9v3f0OLg/wlnux9z2/" +
                        "wBKuL/BdZJJJMXqSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//9D1VZ/WutYnR8T17/fY+W0UN" +
                        "Pusd+6391jf8JZ/g03W+t4nRsT17/fY+W0UNPusd4D91jf8JZ/g1xvTOmdR+tfUX5+e8txWnbZY2QIB/" +
                        "oeH+6xv+Ft/9H/zaUr6x9Tys36r9OuynB12Xk23ODRDWis3VV1M/kMY5n0kXqw6l0von1f6h08FlWJTu" +
                        "ttGoD7xU+Miv/Q2u9Rv9f8A0dnpK1/jBwaqOldPGOwVUY9ppZW0QAHMcW/+el0PQHU5f1dwQQLKn4tdb" +
                        "2OALTDBVaxzT9L6LmLQjkGPlsE+HiAnPjidjxcUf+g0ZYzk5nNG+EmEOGQ3Fer/AKbD6vfWHF63i72fo" +
                        "8muBkY5OrT+839+p/5j1rLzvrvQs76sZrerdIc4YgdodXGouP8AMX/6XFs+ix7v+Ls/S+lbZ131e+sON" +
                        "1vF3sHp5NUDIoJktJ/Ob+/U/wDMeoeY5eIj72E8WGX+Njl+7JlwZ5GRxZRw5Y/4uSP78UvXeuYnQ8H7b" +
                        "lte+svFYbXtmSC7/COrZ9FjvzleqtZdUy6syyxoe0+ThuasH68dRy+m9IryMNzWX+u1rbHMa8tllpLqx" +
                        "aHsa/27Po/QWT1PrP1lf1fC6d03KFb8rFqsDXMr2l5bZZa4vfU/b7a03Hys8kRISjEHi+Y/5v5rXZOZh" +
                        "CRiRKUhw6RH7/yvbrK679YMXoddFmVXZYy95ZNYadsDcXOD3M/6K5vI6x9dOhOFvV2Ny8Oz2uewMG0n/" +
                        "R20sZ6dv7nr0+k9Zf1of1e7Fx8rKzG53S73F+DZtYyyC3d+mZTXXtsY39FZ/L/0amw8leSPHKEscusJf" +
                        "P8A1Y/1mLNzlY5GMZCceko/L/Wl/VfTUlytXU/rD0LDys36x215LPYzEpr2h7rTu9u+uuprK9v09/qfQ" +
                        "/7co49v+MLqmP8AtDHtrx6njfTRDGbm9vSbdXc/a78z7Taz/MUQ5SRs+5jEAeH3DL0Sl2iyHmQKHBMzI" +
                        "4uAD1xj3k9wuV+qH1hz+oY3UsvqVgezGIe1rGBoYza+x7W7fe/6P56P9V/rLk9Rut6Z1Or0Oo4wkgAtD" +
                        "2tIa+WGdlrNzd35j/5ypYv1FsNfSOtWBrXljNwa8S0xXYdr2/nMT44DHFnjMDjHtcMt/nlvGX9ZZLOJZ" +
                        "MBiTwEZOIf3I/pR/qvWdC63idcwftuI17GB5rc2zbuDmwf8G6xn0XN/PWiuI6f9beoY31Uf1HJIyst2U" +
                        "caiWtYwfo22N9RlAq9jGts/l/mJY7P8YWbit6hTmVBrxurpBqkg8bQKbKf+3L037nMXxzhACXBxSOkpf" +
                        "1V33uBrhjOZI46iNYx8Xr8/NpwMK/Nvn0sdjrHhokw0bvbMIfSep0dW6fT1DHDm1XTDXRILXOqe07C9n" +
                        "02fvLCr6v1236t9Tt6phjHysNjhXZYz2WED+c9Czex3pu/P/o9n+DVSz63Z+F9VsHKfGR1HOdc0WvaA0" +
                        "Cux7XWOrq9NrnbPTYxn/XE0cpkJocJ9ft6G9eH3OL+7wrjzWMCzY9PuajpxcH+NxPaJLim4/wDjGdQ3M" +
                        "Zl1WFwBFDTSSQf+s/Zv/ZhdD9Xc/qWf071up4pxMlr3MLS1zN4ERaKrPfX9LZ/YTcnLmEeIThMA0eCWo" +
                        "Tjz8Z4TCcLFjjGhf//R7P61/Vk9VaM3EMZ9LNgY4+2ysEv9H3e2qzc79FZ/Yu/0lOZ9U/rP6BZ0fqX6I" +
                        "MPpY9rhsLXA7PsmS327LGu9ldn/AFu39L/O9qub+tX1VZ1RjszDa1ue1sPYYDb2gR6dk+1tzW/zVv8A1" +
                        "q39H/MpTe+tHTHdT6Jk49bd17QLaByd9Z3hrf8AjG7qv+uLE/xedXZbi2dJsd+kpJuxwe9bzNjR/wAVc" +
                        "7/wZR+qn1oex7ekdVc4ODvSx7rJDg4HZ9kyd3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf1X6ul2RU+x7Lm4jp" +
                        "fTfrXkNb6Z37LdzvU/0f/Eq5y0oZMcuXmeHiPHjkf0ZtTmYzx5I54Di4RwZIj9KH/oLc+t31rNzn9F6T" +
                        "NjrD6ORawbi4u9hxcdo+m9/0LH/APW6/f8Azep9UPquej1Oy8szn5DQ1zAZbUyd3ogj6dm7+ds/7a/0l" +
                        "sPqn9UmdJY3NzWtf1BzYa0QW0tI/m6/3rXf4W3/AK1V+j/numQz5oRh7GD5P059csv+9ThwylP383z/A" +
                        "KEOmKP/AHzyn+Mj/kGr/wAMt/8APdyzx/4tOjf+FKv/AD1kLpfrLhdOzsGrG6iLfRsyKmMfToW2PPo1O" +
                        "cf9G51npfR/wiouZ9Xj1M9UYLTk9IfX08VMMtLn7aKNrHe6za7KdTv3/mWf6NPw5QMIjUiayx0Gl5eGM" +
                        "FmXETmMrG+OXj+r9UnS+sdbLOgdRbY0OAxrXAHxa02Md/Ze3cuAz22u+pXTH8sZk3s+BcbXMH4PXpNzc" +
                        "TPoycMvbYx7XU5DWOG5u8bXNdt/m37XKhi9L6JgdKf0iyxl2I0Ofa3Iewna5xJfZ9Da1tv0H/vpnL5xi" +
                        "iAQTIZBPh/q8MoFfzGH3JEggAwML/rcXE4n12vx+q9AqzenXNyace5r7thna17X17rWfTr2vez2Pas/p" +
                        "nScTqGIy9v1jtpdtAsosftdWQI9Pa69vtb+Y76C6fpv1f6D0jJu9A+/qDdgotsDwWDc411Vv91jPd7t/" +
                        "qrLZ9UPqv1Kyy2oXYm263HFLXtDS+lzmWGllnrez2bv6n+DU2PPjjAwjKcYRPFHJwRlpP8ARlGX/SYsm" +
                        "Gcp8ZEZSkOGUOOUfl/SjKKbof1Trxep19XZ1Q55Zva4wHbiW+l7rvUs+gsf6lvY3pHXKS4C30i70zztD" +
                        "LGF3+f7V1n1e6R0vpWLbX02w3V2WF1jy8P9wAr2/ow1jdm1Yoq6CepV9Uq6dmWWdVpeaWM2Cuz1q/WyX" +
                        "tZ67H13ei79Jucxn+j/AEv6RNjmM/djIynpDhlwxh/NH3OGUfT/AFkywiAxSiBD5+KNymP1w4OLi9Tmd" +
                        "Dv6NT9TLf2xW63GszSxjawS/wBQsrcx1TgW7HMa17t2/wD9Jqbfq3jU1Oz/AKvdebTWQCfUs9OPzv091" +
                        "JZt/wCLuxV0ON0zoXTMb/m/Ywvxslj8ix+Q5paYfTTD3+zbbvtp9H02f4P/AEqo2/UH6tOyvT9e6u18u" +
                        "Zji1hO0fuerXZfs/tp45iHFM8U4CcjP5Rkxzh/c/RWnl5cMBwwmYxEfm9vJCX99z8Tr3UOp/V/reJnOb" +
                        "e/EoJbksAAcHb2w7YG1u/m/0T2s/SVp8e7oDfqb0ynrTXll1twpfUCX1uFt2+8Ob+bW13v/AJzf/obF0" +
                        "tHRug09Pv6RjhjKr6ybw182Frhs9d7yXWdva/6CVHROiO6WOi7W5WNjH3Me7c9rnE2+o57Nr6rXeo53s" +
                        "9NRnmMWvDGcI+4MlQ9BEeDg4h+7614wZNLlGcvbOP1eocXHx1/ivLO+r32Co53Qev1V45M/pLRW3/rll" +
                        "RdRa7/jMZbv1L67m9YwrvtoDrcZ4b6zRtDw4bvc0ez1Gfn7P5CpD6ifVdzftTcq00au3C2sshs7/wBL6" +
                        "e7azb7v0q6Xp2DgYGK2jp9basf6Tdhndu/wheS51m799zkuYzY5YzGzknek5QGOUK6GX6SeXw5I5AdMc" +
                        "K1hGZnGd9h+i//S9VSSSSU859afqs3qbHZuE0N6g1vuZoG3tA/m3z7W3N/wN3/Wrf0f8zP6p/Vx/SKXZ" +
                        "GS4/bMloFlTXH062j6Ne1p9O25v59//AFun9H/O9AkkpSSSSSmn1jEszOm30VfzxbvokwPVrIux/d/x9" +
                        "dax6OgZwzMG6ws2ms3Z/BjKab76TW389n2nqWRb/wCg1K6RJWMXu+2eGuG5Xffh/l/hsGX2uMcV8VDbt" +
                        "xPPfVvo+Tg2VnKqsZbj4/2Y2bqDS/3Nfuq+z11ZVm5zPVa/N/Ss9a78+yyxNX9XpycO23FpdszM2/JcQ" +
                        "0ksudkOxi7T9J9PG9v+D/60uiSUkve457XR4uHi/dybf8//AA1kfa4I3fDYrir96Dx7+hda+wY2GKvdT" +
                        "TS2t7XVQx9V773NtvsacrZXS3H+xNxfz/V9ZGf0DqxdnbdjhnjNqrc92uOLn2XU20bR/NZstZm/4f1PQ" +
                        "/wdXps6pJSH39f5v5pXX7ywezp8/wAsd/3XH6BgWYzr7rabcey1tTCyw4+39EHAek3p7Kq9rN/pepa31" +
                        "X1sq/0aDh9KzqmfV8WMAPTqnMyvcDtJo9D2/v8A6RbySgPucU/l21q6r2p/L/1NlHBwQviqxV1xX7sPm" +
                        "/w3K6j0r7b1FlttNd+OzEvqAsAcBZY6nb7HfvVss96yW9H605+A26oE4pwXG1rqoikMbl+va5js27K3e" +
                        "uyv07Psv2d/+k9Su3q0k7F7vCK4ar08d9/0UZPb4jfFd68NPGdHw3W4OLkV4bK6sazNvtzpZusa4ZWP6" +
                        "DWt/TOc99jHXer+h2Y1f857PSWH0XMzelY/2XFrwQOmCg2hzR9oNpx79n6Nr3+h6dFvqPyW7/Uy3/oLa" +
                        "/V9Xs0lMfd4jQjxcWms/wB7J+96f32KPt8Isy4eHXSP7sP3fV/3bzmL0N77Me27Hs2/bftGRVlGhwhuL" +
                        "bjV3V1YTW4388+ln+l/ReqtDpFGVhMbhHGbXjB2TY2xr27WB2Q9+LjtpH5rsa3f/wAF6fpLTSVfN7lHj" +
                        "4eHSq4uH9Ph4WfFwacPFeu/Df6PFb//2ThCSU0EIQAAAAAAVQAAAAEBAAAADwBBAGQAbwBiAGUAIABQA" +
                        "GgAbwB0AG8AcwBoAG8AcAAAABMAQQBkAG8AYgBlACAAUABoAG8AdABvAHMAaABvAHAAIABDAFMANQAAA" +
                        "AEAOEJJTQQGAAAAAAAHAAcAAAABAQD/4Q3QaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwY" +
                        "WNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0Y" +
                        "SB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4wLWMwNjAgN" +
                        "jEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPg0KCTxyZGY6UkRGIHhtbG5zOnJkZ" +
                        "j0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+DQoJCTxyZGY6RGVzY" +
                        "3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL" +
                        "yIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0RXZ0P" +
                        "SJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiIHhtbG5zOmRjP" +
                        "SJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vb" +
                        "nMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvc" +
                        "CBDUzUgV2luZG93cyIgeG1wOkNyZWF0ZURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtc" +
                        "DpNZXRhZGF0YURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcDpNb2RpZnlEYXRlPSIyM" +
                        "DExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjM0NEMwOUFCM" +
                        "UEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjMzNEMwOUFCM" +
                        "UEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6M" +
                        "zM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIGRjOmZvcm1hdD0iaW1hZ2UvanBlZyIgcGhvd" +
                        "G9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xI" +
                        "j4NCgkJCTx4bXBNTTpIaXN0b3J5Pg0KCQkJCTxyZGY6U2VxPg0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjd" +
                        "Glvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDozMzRDMDlBQjFBMjNFMDExODIwM" +
                        "UIyQTAyRTQ3QzE5OCIgc3RFdnQ6d2hlbj0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgc3RFdnQ6c" +
                        "29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIi8+DQoJCQkJCTxyZGY6bGkgc" +
                        "3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDozNDRDMDlBQjFBMjNFM" +
                        "DExODIwMUIyQTAyRTQ3QzE5OCIgc3RFdnQ6d2hlbj0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgc" +
                        "3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiBzdEV2dDpjaGFuZ" +
                        "2VkPSIvIi8+DQoJCQkJPC9yZGY6U2VxPg0KCQkJPC94bXBNTTpIaXN0b3J5Pg0KCQk8L3JkZjpEZXNjc" +
                        "mlwdGlvbj4NCgk8L3JkZjpSREY+DQo8L3g6eG1wbWV0YT4NCiAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CA8P3hwYWNrZXQgZW5kPSd3Jz8+/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYW" +
                        "VogB84AAgAJAAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAEAAPbWAAEAAAAA0y1IU" +
                        "CAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAA" +
                        "AAzZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwAA" +
                        "AAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAAA9QAA" +
                        "AAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RSQwAABDwAA" +
                        "AgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1QYWNrYXJkIENvb" +
                        "XBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAASc1JHQiBJRUM2MTk2N" +
                        "i0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAA" +
                        "AAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAA" +
                        "AAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNjAAAAAAAAABZJRUMgaHR0cDovL3d3d" +
                        "y5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0I" +
                        "FJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQ" +
                        "iBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZ" +
                        "W5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgV" +
                        "mlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2a" +
                        "WV3AAAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAA" +
                        "AAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUAC" +
                        "gAPABQAGQAeACMAKAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAn" +
                        "wCkAKkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BR" +
                        "QFMAVIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCL" +
                        "wI4AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oDZ" +
                        "gNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATTBOEE8" +
                        "AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowGnQavBsAG0" +
                        "QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiqCL4I0gjnCPsJE" +
                        "AklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsLIgs5C1ELaQuAC5gLs" +
                        "AvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3eDfgOEw4uDkkOZA5/DpsOt" +
                        "g7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURExExEU8RbRGMEaoRyRHoEgcSJ" +
                        "hJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0UzhTwFRIVNBVWFXgVmxW9FeAWA" +
                        "xYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaU" +
                        "Rp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfE" +
                        "x8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kT" +
                        "SR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqA" +
                        "io1KmgqmyrPKwIrNitpK50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wN" +
                        "TBsMKQw2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426" +
                        "TckN2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+I" +
                        "D5gPqA+4D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3" +
                        "kYiRmdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJ" +
                        "U5uTrdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW9" +
                        "1dEV5JX4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV" +
                        "2CqYPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFqS" +
                        "GqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQUdHB0z" +
                        "HUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+wn8jf4R/5" +
                        "YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZif6KZIrKizCLl" +
                        "ov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSVX5XJljSWn5cKl3WX4" +
                        "JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFHobaiJqKWowajdqPmpFakx" +
                        "6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuLa6hrxavi7AAsHWw6rFgsdayS" +
                        "7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsuu6e8IbybvRW9j74KvoS+/796v/XAc" +
                        "MDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN" +
                        "8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeo" +
                        "t8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijut" +
                        "O9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/b" +
                        "f///9sAQwABAQEBAQEBAQEBAgEBAQICAQEBAQICAgICAgICAwIDAwMDAgMDBAQEBAQDBQUFBQUFBwcHB" +
                        "wcICAgICAgICAgI/9sAQwEBAQECAgIEAwMEBwUEBQcICAgICAgICAgICAgICAgICAgICAgICAgICAgIC" +
                        "AgICAgICAgICAgICAgICAgICAgI/8AAEQgAgQFiAwERAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAA" +
                        "AABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCs" +
                        "cEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3e" +
                        "Hl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5" +
                        "ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEA" +
                        "wQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoK" +
                        "So1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjp" +
                        "KWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACE" +
                        "QMRAD8A/v4oAKACgAoAKACgBrukaPJI4jjjBeSRyAqqBkkk9AKAPxW8Zf8ABdD9lbwv8SbvwbpfhLxN4" +
                        "y8I6ZdPpV/8SfD8OnfY5SjlDPZ29xcxyzQZ5DtsJGSqkYzHOjRUmfsH4J8aeF/iP4Q8NePfBOsReIPCX" +
                        "i+yt/EPh3WrIny7i0uoxLG4DAMpweVYAqcggEEVZm0dRQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAGD4q0GHxV4Y8R+F7i5e" +
                        "zt/ElheaDPd2uPNiS8t3t2dN3G5Q+RnvQB/ET4z/wCCXH7b3hT4k3vw5svgZqvi/ZdGx0jxp4ZWKXQb2" +
                        "BpCsVwL6R0hgR1G4rOyMmcOFNY8rOpVEf2CfshfBXVP2dv2afg98GNd1OPV9d8DaSllr19ZktAb65nkv" +
                        "rhIWZULRRyzskbFQSoBIB4rVI55O7PpCmSFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQB/nr/A" +
                        "PBRD9rHxn+1T+1H8T/Ft14vvdU+HfhzW77QPhBohuJRY2GjafcG0tpreAMUjkuFiE0rjksx5wBj/aDwV" +
                        "8OsLw9w/h6KpKNecFKq7auUldpvdqN+VLZJH+KXjd4j4riLiHEVnVcqEJuNJX0jCLsmlsnK3M3vdn9T/" +
                        "wDwQ4+LnxT+L37Ef2z4qa9eeKLvwR4s1b4f+Dtf8QSzXF5Podpp2m3kKyTzszyiGa7mhQk/KiKg4Wv8+" +
                        "fpZcN5flvFfLhIKCqUozko2SU3KadktFdRTfdtvqf6HfRI4lzHM+E+bFzc3TqyhCUrtuCjBq7ers5NLs" +
                        "kl0P2Jr+ZT+nwoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKA" +
                        "CgAoAKACgAoAKACgAoAKACgAoAgurq2sra4vb24S0s7RHuru7unWOKKKNS7O7OQFVQCSScAUAfLH7XXx" +
                        "s0/4Y/sbfHL44eGtYhuYdO8Fajr/gjXbKVWgnu9SsDBpcscinDLJNcRFSOoPFfe+FvDyzbiPBYRq8Z1Y" +
                        "83+FO8v/JUz4DxV4ieU8N47Fp2lTpS5f8TVo/8AkzR/nK1/uCf4Yn92/wAD9Vs/+CfH/BJDwj47fRobj" +
                        "Wfh74AX4nXWjahvjS68SeJj/asdtcuuHx9t1FIGIOQowvAFf5F8WYeXGfiRVw/M1GrX9nddKdP3W10+G" +
                        "LkvPc/1/wCEsRDgrw1pYjkTnSoe0s+tSp7yT6/HNRflsfT37FX7avwm/be+E1p8Rfh1djTdf00Raf8AE" +
                        "T4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui/A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003+geFP" +
                        "itlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUU" +
                        "al2d2cgKqgEkk4AoA/lI/4Kc/8ABTrUv2gNV1D9mv8AZv1d4fhK1wND8X+NNPk8mXxbcmQRfZoHJXbpw" +
                        "bgkkeeeT+7+/lKRvCFtWfpJ/wAFrtVh+Gf/AATV8QeBtLmMFlr+peD/AIa2wwdz29jexamFztbGV0wZ5" +
                        "GRxk5wf6c+iTlixHGlGbX8KFSX/AJLyf+3f1ufy79LvNHh+Cq0E7e1nTj/5Nz/+2/1sfxafDjwlL4++I" +
                        "fgPwLCzrN411nS/CUTQY3htSvorMFcgjOZOOK/1TzzMlg8FWxD2pwlL/wABTf6H+UOR5a8bjaOHW9ScY" +
                        "/8AgTS/U/tB/wCC7etaj4U/4J76l4e0DT7g6P4n8T+F/CGtDTY5XgtdOtpJtVjacoGCRefYQoGYgb2QZ" +
                        "yQD/lz9EXCwxHGkalSS5oU6klfdydou3d2lJ6dE3sf6ofS/xdTDcFSp04vlnVpxdtlFXkr9leMVr1aW";
                    resourceString += "9j+RH9mH9p74s/sj/FnQ/i/8INcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD/Sbj7gHLu" +
                        "JMung8ZC8HqmvijLpKL6Nfc1o7ptH+aPh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/" +
                        "be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui/5A+KfhZmPCmYvDYlXg" +
                        "7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpwUAFABQBynjjxz" +
                        "4P+GnhPXPHfj7xHaeEvB/hqH+0Nd8Ra5KsFtbRbhGCzN3ZmCqo5ZiAASQKASPI/gN+1f+zz+05Brk3wM" +
                        "+KFl49fw2yJrthbw3tje2yyMyJI9rqcFtN5bFSFkCbTjg0k7jcWj6HpiCgAoAKACgD4G8R/8FQv2EPB/" +
                        "wAVdc+Cviz9oG08NfEbw1qk3gzX9J17RvEtpaWmo28xgkjl1GfTlslVXGDIZ9nfdiv2LA+APF+Jy6GOo" +
                        "4JzoTipxalTbcWrpqKnz7dOW/kfjWO+kFwfhcxnga2NUK8JOEk4VElJOzTm4cm/Xmt5n3rFLFPFFPBKs" +
                        "0EyrLDNEwZHRhkMpHBBHQ1+Pyi07Pc/Y4yTV1qmSVJQUAFABQAUAfFP/BRj4q+Mvgn+xJ+0T8Svh9qj6" +
                        "H4z0DQ1tdA1u2JWaym1K/t9KNxCw+7LEtyXjbswB7V+qeCPD2FzXivBYXEx5qUp3kujUU5Wfk7WfkflP" +
                        "jjxFisp4Tx2Kw0uWrGFovqnKSjdeavdeZ/IT/wSt+IXj7xZ/wAFHv2cLrxT441jxLc6rq2qS6pceINTv" +
                        "byS5b/hHNQOZWuZHLngctmv9KPpCZNg8NwPjlSpQgoxjblilb347WWh/md9HfOsZieOsC61ac3Kcr80m" +
                        "7/u5b3ep/dxret6N4a0bVfEXiLVbbQtA0K2m1jW9b1iaO2tLO0tozNLNNLMVRI0RSzMxAAGTX+QZ/sOf" +
                        "PHwR/bL/Zj/AGjtf1vwr8Fvi9p3jjxJ4eja81PRLeK+s7nyEdY2mhTUYLczxKzKGki3KCRk8ikmmU4tH" +
                        "03TJCgAoAKACgD5d+M37an7Lf7PfizSPA3xi+MumeC/FutJHc2mhXEd7dzxQy52SXP9nwTi2jbadrzlF" +
                        "PY0m0Uotn0vp+oWGrWFlqulXsOp6XqcMeoabqWnyJNBcQTIJI5I5IyVdHUgqwJBByKZJboAKACgAoAKA" +
                        "CgAoAKAILq6trK2uL29uEtLO0R7q7u7p1jiiijUuzuzkBVUAkknAFAH8n//AAVG/wCCo1z8cLnW/wBnv" +
                        "9nvW3tPg1aO2n+OfHOns0cviuWNsNBAwwV05SOT1nPJ/d4D5SkdFOnY/Jr9m7wB4n+J3x4+E3gvwj4an" +
                        "8W6xquvaW50XT4vNL2sF5HPcPJnCrFHEjPI7EKqgkkAVKLk9D+kj/g4ennh/Yn+G8cUzxR3XxP0SC5SN" +
                        "iokQeFvEUoVgOo3IrYPcA9q/sT6FcE+Kq91thp/+nKR/GP02ptcKUEnviYf+m6p/LR+xNbQXn7Zn7I9p" +
                        "dQrcWt18TvAVtcwSgMjxv4qsVZWB6gg4Nf6CeKs3HhfMmnZrDVv/Tcj/PTwngpcU5Ymrp4mj/6cif6K/" +
                        "jDwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5r/EzLMzxGCxEK9CbhUg04y" +
                        "Ts01s0z/cDM8sw+Nw86FeCnSmmpRaumnumj+In/AIKh/wDBLzxT+xZ4puPiR8N7e68U/s0eKbry9H1iT" +
                        "fPdeGLqd/k07UX5JjJOLe4P3/uP+8wX/wBW/AHx+w/FOHWGxLUMfBarZVEvtR8/5o9N1pt/k19IL6PuI" +
                        "4UxDxWFTngJvR7um39ifl/LLrs9d/gf9mH9p74s/sj/ABZ0P4v/AAg1w6bremn7JrOjXe99O1nTndWms" +
                        "b6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH434f+IGZcNZlDG4KdprRp/" +
                        "DOPWMl1T+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ET4d6hKj6joGouhPlyYC+ZBJtYwThQ" +
                        "sig8K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zl" +
                        "s12aaX2HX5mfpwUAFAH5ff8Fd/A3jb4l/shT+A/h54cvfF3i7xP4p8O6fpPhzw/C89zdMJ5JiAifwqEL" +
                        "sx4UAsSAM1M9i6b1PgD/gk5+wl+1z+zT+0xqnxC+Mnwuk8C+B9U8J6p4afUhr3h2+826ub6wuoYXt9K1" +
                        "C5m58gt8yYBXkg4qYxaZdSaaP6QK0MQoAKACgAoA/ztP+CiX/J9f7Wn/Y++I/8A04yV/td4Kf8AJI5b/" +
                        "wBeKf8A6Sj/ABE8bv8Akr8y/wCv9T/0pn9137E1zcXn7GX7I95eTvdXd18MfANzdXVy7PJJI/hWxZmZm" +
                        "JJYk5JPWv8AI7xVhGPFGZJKyWJrf+nJH+vnhRUlLhbLJSd28NR/9NxPp2vgj78KACgAoAKAPzi/4K4/8" +
                        "o6P2nv+wVpf/qR6dX7h9G7/AJLfAf4pf+m5n4Z9JX/kh8w/wx/9OQP5If8Agkd/ykX/AGYf+wrqn/qOa" +
                        "jX+j30kf+SIx/8Ahj/6cgf5sfRq/wCS4y//ABS/9NzP7FP+CleieIfEv7EHx58OeE9Lu9b8Sa/Z6Tomi" +
                        "6LoUUs95eT3XiGwgWCKOAF3aTdt2gc5xX+N8tj/AGchufiZ/wAE1f8Agnp+2d8Dv2wPg18X/iZ8H5vBv" +
                        "w40eLXz4j1mfXfDcskUWoeF9RsrdZbOz1GW5O64miBXyiVOCwABIiMXc1nNNH9TVamAUAFABQAUAfyP/" +
                        "tvfsNfta/tNftt/tLeMvg78H7/xj4XtdW03TF8SX99pWk2cz2/h7T4jHbza7d2azeXgKwiLbcYOMYrKU" +
                        "W2dEZJI/o//AGKvh/45+FP7KfwL+HHxK0xtF8c+DNBt9B8RaRLdW16baWB3VYvOs5Z4nCptA2OQBwOla" +
                        "R2MZPU+oaZIUAFABQAUAFABQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/k//wCCo" +
                        "3/BUa5+OFzrf7Pf7PetvafBq0dtP8c+OdPZo5fFcsbYaCBhgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz" +
                        "40ePPDfwz+GfhufxX408VzjT9H0fTwMscbnkkdsLHFGoLySOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+" +
                        "R4r+NXiuCNfiD8QVjOFGRJ/Z+n+YA0dpGwGTgNKwDuBhETaMbHNOdz49/4OC9Dm1b9hrwxfxbtnhj4h6" +
                        "BrlzsUEbJNG1nTRuJIwN12OfXAr+tvoZ4tU+LakX9uhNf8Ak1OX/tp/If008I6nCNOS+xiIP/ySpH/24" +
                        "/ku/ZU8RxeD/wBqH9m7xbO6RQeFvH3g/wARzSXIZo1Sx8Q2lyS4QglQE5wc1/o14h4F4nh/HUVvOhVj9" +
                        "8JI/wA3fDrHLC8QYCs9oV6UvunFn+k5X+GJ/u2c34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2" +
                        "t5azoUeORHBBBB/DqOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gqH/" +
                        "wAEvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf/VvwB8fsPxTh1" +
                        "hsS1DHwWq2VRL7UfP8Amj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf2nviz+yP8W" +
                        "dD+L/wg1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpK" +
                        "L6Nfc1o7ptH434f+IGZcNZlDG4KdprRp/DOPWMl1T+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03X9NE" +
                        "Wn/ABE+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurov+QPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdN" +
                        "N/7E+FPitlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFAH57f8FQf2nPH/AOyV+yB43+K/wtW2i" +
                        "8fS3ul+D/DmrarClzDp0up3PlvdeRKGSV441by1cFN5BYMoKt+0eAPAWD4j4lpYTF39jaUpJOzlyr4br" +
                        "VJu12tbXs09V+KfSB4/xvDfDNbGYS3trxjFtXUeZ/FZ6NpXsnpe101o/wAa/wDgjd+3l+1v+0j+1xqPw" +
                        "8+N3xovvH3g2HwfrPiKLQtQstIt4xe217p8UUu6xtIHyqzOMbsc9K/p36TvhBw3kXDccTgcKqVV1Yxun" +
                        "J6NSutZNdEfy79F3xi4lz3iWWGx+KlVpKjOVmorVOKT0in1Z4B/wUh/4KQ/ttfBb9tr4+fDD4YfHzUPC" +
                        "XgPwlqGn2fh3w7Z6foc0drHNodldOqvdWUshzJKzfMx619l4HeB3Cma8KYPFYrBxqVqkZOUnKavacl0k" +
                        "lsl0PjPHTx04syrizGYTCYyVOjTlFRiowdrwi+sW92+p8Qf8Pcf+Ci//Rz2q/8Agr8Of/K6v1f/AIlu4" +
                        "I/6AI/+BVP/AJM/Jf8AiZXjj/oYS/8AAaf/AMgegfD/AP4LW/8ABQ/wNq0N/qHxhtPiNpyP50/hv4geH" +
                        "9FmtJjwMNLplvY3Sjjok6/nXj5z9FfgrF03GOGdKX80JzTXyk5R++LPZyX6VvG+DqKUsUq0f5Zwg0/nF" +
                        "Rl90kfux+zL/wAFVPAv/BQTwrdfAS88caj+xn+1FrcYXwL4n8Oy2GoaZqOoxoQgsm1aB45C7ffsZ0Dsp" +
                        "xFMzjcv8jcefR6xfBmIWYRpRzDL4/HGScZRj15uV3Vuk4uyesopaP8Ar/gH6ROD40w7y6VaWX5hJe5KL" +
                        "jKMpdOXmVnfrTkrtaRk3qvxu/aj/bV/4KzfsjfGPxJ8GPit+0ZqdtrWjEXmj61ZaV4eNhrOlyuy29/Zu" +
                        "+mgtDKEPUBlYMjAMrAf074f+FfhzxJllPG4TAxcJaNOU7xkt4y9/dfc1ZrRo/l3xC8VvEjhrNKmBxmOk" +
                        "px1TUYWlF7Sj7mz+9O6eqZ+RHjzx14s+J3jPxP8Q/Hesv4h8ZeM7248R+J9duUhjku726kMssrLAkaAs" +
                        "xJwqge1f0llGUYbAYWnhsPHkpU0oxWuiWy1uz+aM4zfE5hiqmJxEuerUk5Semrerell9x9m+Dv+Cof7e" +
                        "nw/8IeFfAfg/wDaK1LRPCPgnTbHwj4W0WDTdAkSz07TbVLO2gVprB3YRxRqoLMScckmvy/M/ADg/G4mp" +
                        "iK2BjKpUk5SfNPWUndvSVtW76H6llf0guMcFhqeHoY6UaVOKjFcsNIxVktY30Stqf1uf8Ejv2qviz+1v" +
                        "+yUfiF8bDHd+M/CfiPU/h3N4shtY7Ia3a2NjY3yXzxQJHCHzeNC5iUIWjJwDkV/nD9JDw8y7hviP6tgb" +
                        "qlOnGfLe/I25Llu7u3u3V9bP0P9J/o1eIuZcS8N/WcfZ1adSUOa1udJRfNZWV/ecXZWvHvc/Pb9vP8A4" +
                        "Lwaf8PPEOufCj9jvSNP8aa3o7yaXr/xp8Tq9zo8NwqlHTSrSJ0+0tGx/wCPiVhFuUhY5UIev2jwg+iHP" +
                        "G0YYvOpSpwlrGlHSTX9+WvLf+Ve9Z6yi9D8U8YvpgwwNeeDyWMak46Sqy1in/cjpzW/mfu3WkZLU/CXx" +
                        "V/wU/8A2/vGOpy6tqv7VHiqxuZSzmDwrdQ6HajdjhbfRorWIAY4+X+tf1zl3gHwbhafJDL6TX95Ob++T" +
                        "b/E/kDMfpAcZ4qpzzzGqn/dagvugor8D374Df8ABa/9uj4OatYnxV49h+OfhGJ0F94X+KFrBLO8X3X8r" +
                        "UrNIbtJCPutI8iggEoeQfjuMPorcJZnTfsqLw1TpKm3b5wd429En5o+04O+ldxfldRe2rLE0usaiV/lN" +
                        "Wkn6tryZ/WN+w7+3v8ABn9urwBc+Jvh9K/hzxr4cEUPj/4X65NG+paTLKPlkVkCi4tZCCI51UA4IZUYF" +
                        "R/nT4seD2acI4xUsT79KfwVEvdl5eUl1i/k2tT/AEd8JPGTK+L8E6uG9yrC3PTb96L7/wB6L6SS9Unoc" +
                        "H/wVx/5R0ftPf8AYK0v/wBSPTq9j6N3/Jb4D/FL/wBNzPH+kr/yQ+Yf4Y/+nIH8kP8AwSO/5SL/ALMP/" +
                        "YV1T/1HNRr/AEe+kj/yRGP/AMMf/TkD/Nj6NX/JcZf/AIpf+m5n9pv7cnx08Sfs1fsm/G/43eDrG31Dx" +
                        "X4F0lbnw5Bqys9st7e3sGmwyyopBdYmuBIUyN23GRnNf5a+E3CVDPeI8Jgazap1Ze9beyTk0u17Wv0vc" +
                        "/1U8XOL6+Q8N4vH0UnUpQ92+121FN97N3t1tY/m2/4Jgf8ABRr9tL4/ft5fBL4Y/Fv46Xvi/wAAeMH8U" +
                        "TeIfC82m6Ha285s/CGranAM2NlC6COeBHAVh90DpxX9y+Pvghwtk3CGLxWDwip1qfs+WXNNtXqwi95NO" +
                        "6bWvc/hP6P3jlxVnPGOEwmMxjqUantOaPLBJ2pTktopqzSenY/o+/bM/bP+EX7Efwpk+JfxRuZL++1KR" +
                        "tJ8DeBdGaP+09d1BVDmKASEKkcakNNM3youOrMit/D3hf4XZlxXmP1XCKyWs5v4YR7vu3sktW/JNr+6P" +
                        "FLxTyzhPLvrWLbbbtCC+Kcuy7Jbyb0S7tpP+Sn49f8ABcL9uH4u6nep4G8VWXwF8IyOwsvD/wAO7O3mv" +
                        "RFyF8/UtSjmnaQA8tD5Kn+6K/0d4P8Aon8J5bTXt6bxVXrKbaV/KEWlbyfM/M/za4x+lrxbmdR/V6iwt" +
                        "LpGCTdvOck3fzXKvI+OIf8AgoN+3NBqR1VP2t/iE10UEPlTeK9YktsKwb/j3knMOeOTsyRxnBNfpsvBn" +
                        "hJ0+T+zaFv+vcb/AH2v+J+Xx8auLlU5/wC0sRf/AK+St917fgfen7O3/Bd79sT4Vanp1n8Xp9O/aE8Ex" +
                        "ukV/Z+JLW20rW47cdfs2o6VDGpfvuuIZs9OOo/IONvoicM5jTlLBqWFq9HFuUL+cZN6f4ZRP2Lgj6YPF" +
                        "GXVIxxrji6XVSSjO3lOKWv+KMj+sj9k79rT4Q/tl/Cez+LXwf1KeXTBO2ieI/DutxLBqejanHEkz2l1G" +
                        "jOu4LIrK6MyMpBDHkD/ADo8RfDnMuF8xeDxkVzWvGS1jKOylF/JqzSae6P9H/DjxIyzinLVjMFJ8t7Si" +
                        "9JRlu4yWq2ad02mtmfzZ/8ABUn/AIKk/thfDL9sL4kfBj4MfEg/CvwJ8Kzp+hWlpoWn6Xc3Go3Fzpdtq" +
                        "M11dTajbXDbt1wUREKqFUcFiSf7m+j99H7hnH8M0MbjaHt61fmbblJKKUnFJKLXa7bu232sj+EvpC/SF" +
                        "4ny/ievgcDX9hRocqSUYtybipNtyT72SVkku92f0R/sE/Evxf8AFT9jH9n/AOKHxM8RN4h8YeKvDseue" +
                        "KvEt+tvA1xN50oaVxAkUa/KozhQOK/inxgyLDZfxRjMLhYclKFS0Yq7srLTW7P7c8HM+xWY8K4LF4qfP" +
                        "VnTvKTsru710sj8QP24f+C+GpaD4q1z4bfsY6PpuqWGiSyaZqHxv8WQtewXk0ZKu2kWe5EaJWHy3E+4S" +
                        "clY9u12/q/wn+h7TrYeGKzuUouSuqUXZpf35b37xjZrrK90v5M8W/pkVKOInhcjjGUYuzrSV03/AHI7W" +
                        "7SldPpG1m/xJ8Y/8FKv29vHN1dXmtftX+M7KW82+cng7VpPDsQ2sGGyLw+LJI+RzsUZHB4r+q8s8C+D8" +
                        "JFRhl1FpfzR5/xnzN/M/k7NPHjjLGScqmZVk3/LLkXyUOVL5HZ/DT/grB/wUB+F+oQXmmftIaz4rtUZX" +
                        "utI+JYtvEdvcIoA2M2rRzTIDt5MUiN15yTXl579HXg3MIOMsDCD707wa/8AAWk/mmvI9XIfpHcaZfNSj" +
                        "jp1F2qWqJ/+BJtfJp+Z/Rb/AME9P+C1Xgv9qPxT4e+Cnx18L2/ws+NPiORdM8J6z4daaTw3r92VJECC6" +
                        "eSayuHIxHFI8iueBIGKof4m8afosYrh/Dzx2AqOthYK8lK3tILvpZSiurSTX8tk2f3B4J/SswvEOIhgc" +
                        "wpqhi5u0XG/s5vtrdwk+ibkn/NdpH7sV/Ix/XwUAQXV1bWVtcXt7cJaWdoj3V3d3TrHFFFGpdndnICqo" +
                        "BJJOAKAP5P/APgqN/wVGufjhc63+z3+z3rb2nwatHbT/HPjnT2aOXxXLG2GggYYK6cpHJ6znk/u8B8pS" +
                        "OinTsfjZ8Lvhd48+NHjzw38M/hn4bn8V+NPFc40/R9H08DLHG55JHbCxxRqC8kjkKigsxAFQkaN2P7Uf" +
                        "2Af2AfAf7FPgPe/keK/jV4rgjX4g/EFYzhRkSf2fp/mANHaRsBk4DSsA7gYRE2jGxzTnc/QmqIPzd/4K" +
                        "5fDmb4l/wDBPT9o3TLODztR8MabZfEazYAkxp4d1W21a6bA/wCnWCYe2c1+5fRuztYDjTAyk/dnJwf/A" +
                        "G/FxX/kzR+FfSVyN4/gnHRiryhFTX/bklJ/+Spn8CFtcz2dxb3drM1vdWrpc208RKukiMGVlI6EEZFf7" +
                        "EzgpRaaumf4005uMk07NH+l78DPiVY/GT4L/Cf4s6dIklp8SPDujeNU8nojalp8V06YwMFGcqQRkEYNf" +
                        "4S8W5FPK80xODlvRqSh/wCAyav89z/enhHPoZplWGxkdq1OM/8AwKKdvlseqV88fRHN+MPB/hb4geFtf" +
                        "8E+NtAtfFPhHxTazaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmu7LMzxGCxEK9CbhUg04yTs01s0zhzPLMPj" +
                        "cPOhXgp0ppqUWrpp7po/iJ/4Kh/8EvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk" +
                        "4t7g/f+4/7zBf8A1b8AfH7D8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2" +
                        "J+X8suuz13+B/2Yf2nviz+yP8WdD+L/AMINcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqr" +
                        "D9h4+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR+N+H/AIgZlw1mUMbgp2mtGn8M49YyXVP707NNNJn99" +
                        "n7G/wC1f4E/bO+A/hn43eBLaXSE1CSbQfFnha/dZLjRtaswhubR5EAWQASJJHIAN0boxCklR/jt4neHe" +
                        "M4XzepgcQ1K1nGS2lB7St02aa6NNXa1f+ynhd4jYPirJ6ePw6cb3jKL3jNbxv13TT6pp2T0X1NX58foZ" +
                        "+M//BeL/lH94h/7Gnwz/wClMlf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/Yhe" +
                        "IP/AE46XX9YfTJ/5JGP/X+H/pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd" +
                        "/yRGA/wy/8ATkz8++kr/wAlxmH+KP8A6bgf0P8A/BNP9gP9jb4t/sOfs/8AxF+JP7Pfh/xh438T6dqN1" +
                        "r/iTV4Z2ubqSLXb62RnKSqMhI1UcdBX8V+O3jFxPlvFmNw2FxtSnShKPLFNWV4Rfbuz+2vAbwa4XzLhH" +
                        "BYnFYKnUrTjLmk07u05Lv2SPXPj7/wRG/Yf+Lvh2/g8B+CpvgR41Mbf2T4s8AXd5LbLMANguNOv55beS" +
                        "MEfMIxG5z98cV83wd9K3izLa6eIqrE0usZpXt5TSUk/XmXkfS8ZfRN4SzOg1h6TwtXpKDdr+cJNxa9OV" +
                        "+Z/H3+07+zd8V/2Mfjprfwk+IQOneKfC0kGveGPFOhvLHb6lYSSF7PUrGX5W2MYzgjDJIrIcMhA/wBLu" +
                        "AuOcu4oyiGMw2tOd1KLteL+1CS+fo001o0f5kcf8CZlwrm88HidKkLOMle0o/ZnF9tPVNNPVM/rU/YQ1" +
                        "34C/wDBVX9l3wH4q/ai+GGi/Fb4x/Aqa5+GfizUfEcBNw0rxwTx3qmJ0bbewLG0n8PnLJtAHFf5yeLuD" +
                        "zjw84grUsqxE6GFxKVSKi9Oqcf+3HdLryuNz/STwfxmTeIvD1Gtm2HhXxWGbpyclr0alp/OrN9OZSsfy" +
                        "e/tv+DfC/w7/a//AGkvAvgnRYfDfhHwl4x13QfDeg6cCsFnZ2188cUUYYkhVUYGTX+inhRmmIxvDWBxF" +
                        "ebnVnRg5N7ttK7Z/nF4tZXh8DxNj8PQgoUqdacYxWySbskf18/sj/8ABOX9h7xx+yl+zH418W/s1+G9d" +
                        "8VeL/h74L8UeJtcvobgz3moah4bs7u4nkKzAF5JJGZsDqa/zV8SPG7izCcRY+hRx1SNOnXqxik1ZRjUk" +
                        "klp0Ssf6Z+Gvgbwli+HMvr1sBTlUqYelKTad3KVOLbeu7bueCf8Fnvjvo37HP7Ingj9mL4BaRZfDI/Gt" +
                        "r/wrBpXgqCLT4tM8KWCxy6osMdqFCNeSXccTsRl1eY5LEkfY/Rd4Qq8T8S1c0zCTrfV7SvNuTlUd+S7e" +
                        "/KotpdGo9D436U/GFLhfhmjlWXRjR+s80bQSio042c7Jbczkk31Tl11P51f+CeH7CPi79vH40SeCLHU5" +
                        "PCnw48HQxeIPir47hhEz2NlK7JBb26OQjXV26MsQY4VVeQhghVv7Y8avF3DcIZX7eUeevUfLThe131b6" +
                        "8sd3bdtLS91/EHgl4P4njHNfYRlyUKa5qk7XsuiXTmk9FfZJvW1n/Y/8Lv+CXH7BXwo8OQeHtL/AGa/D" +
                        "fi9lh+yXuv/ABRsYfE2o3TldrytLrCziN2PP7lY1U/dVRxX+Y/EH0gOMMxrupPHVKet1Gm3TivK0bXX+" +
                        "Jtvq2f6hcPfR74Oy2gqUMBTqaWcqiVST87yvZ/4UkuiR+fP7e//AAQ/+DHxB8DeI/iD+yT4aT4X/F3RI" +
                        "ZdYg+Humzynw/4hESmR7aOG4ZxZ3LgYhaIrEWwroN3mL+zeD30r80wWLhh84qe2w0nbna9+Hm2viivtX" +
                        "vK2qbtZ/i3jH9EvKsbhKmJyen7HExV+RP3J26JP4ZP7NrRvo0r8y/mI/ZK/aP8AGv7H37RHgP4zeG2uY" +
                        "J/CV8th418NoxhOqaJLKsWo6dMkmBmSMHZvHySqj43IMf3v4j8D4XibJK2Cq2anG8Jb8s18Ml6Pe28W1" +
                        "sz+APDbjrF8MZ3Rx1K6dOVpx25oP44v1W19pJPdH9o//BVDX9J8V/8ABMj9oHxRoF4uo6F4k8PaDr+i6" +
                        "hECFntLzXdMuIZBuAOGRwRmv8t/o+YOph+PcFSqK04VJxa7NQmmvvP9UvpEYylieAMbVpu8J04ST7pzg" +
                        "0/uP5Of+CR3/KRf9mH/ALCuqf8AqOajX+iv0kf+SIx/+GP/AKcgf5xfRq/5LjL/APFL/wBNzP63v+CuP" +
                        "/KOj9p7/sFaX/6kenV/nD9G7/kt8B/il/6bmf6T/SV/5IfMP8Mf/TkD+Ur/AIIu/wDKS39mz/ucf/UB1" +
                        "yv9DvpR/wDJCY7/ALhf+nqZ/nR9Ff8A5L3Af9xf/TNQ+o/+DhfX/E15+2L8PPDmpTyjwzoXgLTtQ8MWL" +
                        "hhAJL/WdTF1OmeC8jW6IxHaNR2r4D6F2DoR4Yr1Ype0lXkpPrpGHKvldterP0L6bGNry4ooUpN+zjQi4" +
                        "rp7058z9XZJ+iPMP+CVnhD/AIJf6/c6vdftqeLxF8UFvlTwf4V+JUl1pHgtbJFQrM17ZyrFLMXLB0vJI" +
                        "4wuMI/LD3/pCZlx/RjFZHS/2fl96VO0qt+3K1dK2zgm79VsfP8A0d8s8P60pPPav+0c3uxqXjSt35k7N" +
                        "33U2o26Pc/qw0v9iX9gHxp4TtpPD37MHws8QeF9VhVbDxB4Y8LeGpfPiB4eLULGDzCePvrLk+tf55Yjx" +
                        "V4ywuJaqZhiYVIvWMqlTR+cW7fJo/0Vw/hPwZi8MnTy/CzpyWko06eq8pJX+aZ+UP7YX/BAT4aePAvif" +
                        "9j3xBb/AAh8TSzFtT8A+PrzUrvwzPG5LF7e5SK9vLV1JPykSoRgKI8c/wBE+Gf0xsfg/wB1nMHXp20nB" +
                        "RVReqvGMl5+6+7Z/OXid9DPAYz97ks1h6l9YTcnTfo7SlF+XvLskffv/BL39gzWf2DPgt4m8I+MvGNp4" +
                        "y+IPxB1ZfFXiu48MLONJsxBapaQW1q93HDLKFAZmleNMlsbBty3454/eL9LjDNKdajSdOjSjyx5rczu7" +
                        "tuzaXRJJvbfXT9m+j74O1eDsqqUa9VVK9WXNLlvyqyslG6TfVttK97W01/kz/4K4/8AKRf9p7/sK6X/A" +
                        "Oo5p1f6L/Ru/wCSIwH+GX/pyZ/m/wDSV/5LjMP8Uf8A03A/oR/t7xN4a/4N/wCHVPCNzNZ6wfhlFpb3F" +
                        "iCZVsb/AFdbC+xt5ANrNKGbsMntX8Y/U6FfxkcKyTj9Zvr3Ubx/8mSP7U+uYih4MKdFtS+rW07SlaX/A" +
                        "JK2fyQfBex+E2pfFXwLY/HbXtW8M/CG4v4l8fa54HtIr3VYLAAs32eKZlXLMArPhiikuEkKhG/0f4prZ" +
                        "lTy6tLAQjPEqPuKbtFvza++2l3o2k7r/NjhWjltTMaMcwnKGGcvfcFeSj5J/dfWy1Sk1Z/2w/sl/s7/A" +
                        "PBIDx74WtLH9nbwD8MvjGIoBLdxeLrez8T+IgoC7pbq28VLPewFiM4aJFHIUAcV/lb4jca+JeDxDlmVb" +
                        "E4fXTlbpw9E6doP72+7P9XPDbgjwyxmHUcto4bEaa8yVSfrJVLzX3Jdkdn8ef8AgkP+wn8c9Ev7SL4MW" +
                        "Hwh8STIy6X4v+DEUegS2khHDfYrVRYyrnGVkgPHQqea8vhD6SfF2U1VJ4qVeHWNX30/+3n76+UvW56nG" +
                        "P0Z+D83pSisLHD1OkqXuNf9ur3H84+lj8uv2Xf+CC/xV+Df7Vfw8+Kvj74zeHdb+Fnwk8Q2HxE8NDwom" +
                        "qLr+q3Oi3seoWMdza3dstvao0sSmbZczHaCq/e3L+/+IH0v8uzTh6vhMPhakcRXpuEubl5IqacZNNPml" +
                        "o3a8Y66vaz/AJ98PvodZjlfEVDF4jFU5YehUU48vNzycGpRTTXLFXSvaUtNFvdf09V/A5/f4UAeKftFf" +
                        "BLR/wBoz4LeP/gvrviDUfC2m+O7I6XLr3hid4Lq3dZFmQkKyiWIsgEsLHbIhKnGchNDi7M/hb/ag/Zf+" +
                        "KX7JnxS1T4XfFHS/JuYd174b8SWSudO1rTi5WO7tJGAypxhlPzI2VYAisWrHVGVz2//AIJ4ftpt+xT8a" +
                        "JvF2qeFoPFPgTxrbw+F/H8cNtA2sWtis/mifT7iQBleNvmeHcEmAAbDKjo4uwpxuj+2z4d/ETwV8WPBX" +
                        "hz4i/DrxHbeK/Bniu2TVNC13S33RTRNkEEEBkdGBV0YBkYFWAYEVscrR2lAHN+MfCmi+PPCHirwP4ktv" +
                        "tnh3xnpt94U1+z+X97ZajavZzp8wYfNHIRyDXdlmY1cHiadek7TpyUk+zi7r8UcOaZdSxmGqYeqrwqRc" +
                        "ZLupKz/AAZ/mnfFr4beIPg58UfiH8KPFURi8RfDnWdS8F6vuRoxJNp129qZEDZ+STZvQ5IKkEEg5r/db" +
                        "hzPaOZ5fQxdL4K0IzXpJXt6rZ+Z/g1xJkVbK8wr4OsvfozlB+sW1f0e68j+wT/ggh+0Xa/E/wDZN1L4J" +
                        "apqAl8Xfs+apNp1vaynMj+Htcml1Oylyxy2yc3MOAMKqIO4Ff5o/TC4JlgOI446Ef3eKinf+/BKMl81y" +
                        "vzbZ/px9DjjiOYcNywE5fvcJJq39ybcov5S5l5JI/dGv5JP67CgD+VD/gsP/wAFXtL8X2Pi79kH9m7Vb" +
                        "fV/DF1v0D40/FC08u4gvtj4k0rTHO5TEGXE9wv3iNkZ25Zv9DfozfR2qYadPOczi41FrSpvRrtOfn/LH" +
                        "pu9bJf51fSd+kbTxUKuS5ZJSpv3atRap94Q8v5pddlpdv8Am68H+D/FPxA8U6B4J8E6BdeKfF3im6h0T" +
                        "w94e0SF57q8up3CJHGiAkkk/h1PFf3HmeZ4fBYedevNQpwTcpN2SS3bZ/CuWZZiMbiIUKEHOrNpRildt" +
                        "vZJH98X/BL79jvX/wBif9lrTPhj4z1OHUPH/izVrv4n+PYNMfzbSx1LUbO0sRaQyDiQQwWUSu4+Vn3Fc" +
                        "rgn/Hrx98TaPFXEEsVQi1RhFU4X0bjFyfM10u5NpbpWvqf7I/R+8MK3CfD0cLXknWqTdSdtUpSUVyp9b" +
                        "KKTezd7aH6JV+KH7cfjP/wXi/5R/eIf+xp8M/8ApTJX9P8A0Q/+Syh/16qfkj+W/phf8kXP/r7T/Nn4f" +
                        "/8ABv8Af8n16t/2IXiD/wBOOl1/WH0yf+SRj/1/h/6TM/kr6GH/ACV8v+vE/wD0qB8uf8Fcf+Ui/wC09" +
                        "/2FdL/9RzTq+/8Ao3f8kRgP8Mv/AE5M/PvpK/8AJcZh/ij/AOm4H9b3/BI7/lHR+zD/ANgrVP8A1I9Rr" +
                        "/OH6SP/ACW+P/xR/wDTcD/Sf6NX/JD5f/hl/wCnJn6O1+Hn7mfzVf8ABxv8OtEuPhx+zl8WktY4vEek6" +
                        "3qfw6nvUUCaey1Cw/tONHIHzLFJZOUBPymRsfeNf3V9CHO6scdjsHd8koRnbonF8rfzUlfvZdj+DvpyZ" +
                        "HSlgcDjLL2kZyp36tSXMl8nF27Xfc8U/wCDcHxFqcHxE/ag8JLMTo2p6L4d8RT27EkC5sb67tkZR0GUu" +
                        "2B9cD0r6n6cOCpvBZfWt7ynOPyai/8A21Hyn0GMdUWOzCjf3ZQhL5pyS/CTPxl/4KBahBqf7cn7XFzbB" +
                        "hHH8RPFunt5oAPmWmtXFo/QnjdGce1f1D4NUXT4Ty1P/oHpv74J/qfy140VlU4uzNr/AKCKq+6bT/I/u" +
                        "3/Yd/5Mq/Y//wCyXfD/AP8AUTsK/wAi/Fj/AJKrM/8AsJrf+nJH+v8A4Sf8kpln/YNR/wDTcT+ab/g4w" +
                        "e8P7SXwHjcyf2evgeR7UNu8rzm168Eu3tu2hN2O2Pav7r+hIo/2FjH9r234ckbfr+J/Bv04XL+3sGvs+" +
                        "x/Hnlf9PwPw6+G//C8fI1b/AIVD/wAJX9m3w/27/wAK3/tfZvw/lef/AGXxnG7bu98d6/rHPP7JvH657" +
                        "K+tvacvztzfjY/kjIv7XtL6l7W2l/Z83yvy/hc9M/4zV/6qj/5dleD/AMYr/wBQ3/lM9/8A4yv/AKif/" +
                        "Kgf8Zq/9VR/8uyj/jFf+ob/AMph/wAZX/1E/wDlQ80ufgv8c7y4nvLz4T+LLq7une5urq50LWHkkkdiz" +
                        "MzNASWJOST1r3ocU5TGKSxNJJf34/5ng1OFc3lJylhqrb/uS/yP67vj5Hrdv/wQSs7PxHbXFnrWnfC3w" +
                        "Jpd9ZarE8FzCbW+0i2WOSORVZWRUCkMM8c81/mzwdKk/GBypNODxNZprVO6m7p+Z/pdxnGrHwcUaqams" +
                        "NRTTVmrOmrNeR/Ot/wSO/5SL/sw/wDYV1T/ANRzUa/tj6SP/JEY/wDwx/8ATkD+Ifo1f8lxl/8Ail/6b" +
                        "mf1vf8ABXH/AJR0ftPf9grS/wD1I9Or/OH6N3/Jb4D/ABS/9NzP9J/pK/8AJD5h/hj/AOnIH8pX/BF3/" +
                        "lJb+zZ/3OP/AKgOuV/od9KP/khMd/3C/wDT1M/zo+iv/wAl7gP+4v8A6ZqH9ZH/AAUD/wCCd/wv/b18D" +
                        "aVp/iDUX8EfFDwUtw3w++JWmwLO9sLgAyWl5AWT7RaOyqxXcrIwyjDLh/8AOnwa8asw4PxcpU4+0w9S3" +
                        "PTbte20ov7MltezTWjTsrf6P+NHgjl/GODjGpL2eIp35KiV7X3jJac0Xva6aeqau0/5Kf2hP+CQ37c37" +
                        "Ps2o3k/wnm+K/hCxLyR+Mvg0z65E8SDcXeyiRb+IKvLF7cKOcMQCa/0c4L+kpwlnKjFYlUKr+zV9zX/A" +
                        "BfA/K0r+R/m1xr9Gfi7JXKTwzr0l9ul7+n+Fe+vO8beZ8UfDv4yfHb9nnxFeXHwy+I3iX4Q+I7eURaxb" +
                        "eGtQ1DSZHkhOPLu4I3jEgB4KSqR6iv1TO+GMozqgliqFOvBrTmjGW/WL1t6pn5TkfFGcZJXbwteph5p6" +
                        "8spR26SWl/Ro/YH9nb/AIL8/tUfDm707S/jtoWk/H3wmhSG+1FoIdA8RJGPl3R3Omxi1cqOSJLUs5Ay6" +
                        "5Jr+aeNfoc8PY6Mp4CcsLU6K7nD5qT5l8pWXZ7H9N8EfTL4iwMowzCEcVT6uyhP5OK5X843fdbn9S/7J" +
                        "37XnwX/AGzfhjD8T/g1rUlxa28g0zxR4V1xI4NY0S+K7/s97BG8iqWX5kdGZHH3WOCB/n34i+GuacL49" +
                        "4XGwSbV4yWsZrvF2XzTSa6rY/0L8N/EzKuKcvWLwU20naUXpKD7SV38mm0+j3P4o/8Agrj/AMpF/wBp7" +
                        "/sK6X/6jmnV/qh9G7/kiMB/hl/6cmf5S/SV/wCS4zD/ABR/9NwP67P+CcXhvQfGP/BNz9nPwl4p0mDXv" +
                        "DPifwU3h/xDoepxiW2vLK8e4t54ZUbhkkRyrD0Nf5t+OGOrYXjnHVqUnGpCtzRa3TVmmvNM/wBLPAzA0" +
                        "cVwJgaNaKlTnR5ZJ7NO6afk0fhT+2D/AMEBfiv4Y13W/F37IGr23xE8EXckl9Z/C3xXew2Gv6crtu+z2" +
                        "93elLa7jTna0skUmMAiRssf648M/pjZdiKMKOcxdKqtHUim4S83FXlFvslJddFofyF4nfQzzHD1p1slk" +
                        "q1F6qnJqM4+Sk7Rkl3bi+mr1Pwx+JnwQ+PH7PHiCCz+Kfw08R/CfXbOcf2beeI9PvdODzRksr2tyyqku" +
                        "NpKvE5HGQa/rXIeLMozqi5YSvTrwa1UZKWn95br0aP5Fz/hLOMkrqOLw9ShNPRyi46/3Xs/VNn138DP+" +
                        "Cs37eHwGawtdH+N978QfDljhf8AhFPjCv8AwkltJGvCx/aL1vtsaKBhViuUAHA4r814t+jnwhnF3PCKl" +
                        "N/ape4/Wy9xv1iz9M4R+khxhk/KoYt1aa+zV/eL0u/fS9JI/os/YP8A+C23wr/ac8U+HfhB8aPCyfBf4" +
                        "ueJJE0rw3qdrdfaPDOtXrnCQRS3G2W0nlJ2xRS71dsKJS7Kh/ibxe+ipmGQYeeMwNT6xhoK8la1SC7tL" +
                        "SSW7as0teWybP7g8HvpY5dn+IhgsdT+r4mbtF3vTm+iTesW9kndN6c12kfuZX8ln9chQAUAfMf7WH7J/" +
                        "wALf2v/AIW3/wANviTYeTcw+ZfeDPGdjGh1HQtRKbVuLdmxlTgCWInbIvBwQrKmrlRlY/iM/ag/Zf8Ai" +
                        "l+yZ8UtU+F3xR0vybmHde+G/ElkrnTta04uVju7SRgMqcYZT8yNlWAIrFqx0xlc+mP+Cef/AAUM8a/sX" +
                        "eNRpGrm58V/AfxXcpJ438ERvuls5WxGdR04SEKlwigb0yFmUBWIIR0cZWJnC5/aH8O/iJ4K+LHgrw58R" +
                        "fh14jtvFfgzxXbJqmha7pb7opomyCCCAyOjAq6MAyMCrAMCK2OZo7SgD+Pf/gv9+yrcfD/45eF/2oPDW" +
                        "llfCHxrt4/D3ja5tk/dW3ijSbZYkZ9qgL9rs40K9Szwysetf6YfQ48Qo4zKamVVZfvcO+aHnTk7/wDks" +
                        "m79lKKP8xvpm+HcsFm9PNaUf3WJXLPyqRVv/JopW7uMmfnB/wAE4P2urj9jL9qTwX8Tr+aZvh5rYbwN8" +
                        "WNOtNzGXQdQkTzJlQfektZUjuEA5bZsyAxr9w8cPDaPFHD9XCxS9vH36bf88dl6SV4vte/Q/DPAzxLlw" +
                        "txDSxUm/YS9yol/JLd27xdpLva3U/0GNK1XTNd0vTdb0XUIdW0bWbeHVdJ1XTZUmt7m2uIxNFLFJGSro" +
                        "6MGVgcEHIr/ABlxGHqUakqc4uMotpp6NNaNNdGmf7TYfEU61ONSnJSjJJprVNPVNPqmtj+W7/grn/wVz" +
                        "/tT/hJ/2Vf2VfE//Er/AH2gfGD4waBN/wAfXWKbStKmiP8Aquq3Fwp+flEOzcz/AOgP0bvo3ez9nm2bU" +
                        "/e0dKk1t2nNd+sYvbd62S/z2+kt9Jb2ntMoyip7usatWL37wg+3SUlvstLt/wA1fg/wf4p+IHinQPBPg" +
                        "nQLrxT4u8U3UOieHvD2iQvPdXl1O4RI40QEkkn8Op4r+6czzPD4LDzr15qFOCblJuySW7bP4PyzLMRjc" +
                        "RChQg51ZtKMUrtt7JI/t2/4Jef8EvPC37Fnha3+JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4" +
                        "uLgff8AuJ+7yX/yk8fvH7EcU4h4bDNwwEHotnUa+1Ly/lj03eu3+sv0ffo+4fhTDrFYpKePmtXuqaf2I" +
                        "ef80uuy03/X6v5qP6aCgD8Z/wDgvF/yj+8Q/wDY0+Gf/SmSv6f+iH/yWUP+vVT8kfy39ML/AJIuf/X2n" +
                        "+bPw/8A+Df7/k+vVv8AsQvEH/px0uv6w+mT/wAkjH/r/D/0mZ/JX0MP+Svl/wBeJ/8ApUD5c/4K4/8AK" +
                        "Rf9p7/sK6X/AOo5p1ff/Ru/5IjAf4Zf+nJn599JX/kuMw/xR/8ATcD+t7/gkd/yjo/Zh/7BWqf+pHqNf" +
                        "5w/SR/5LfH/AOKP/puB/pP9Gr/kh8v/AMMv/Tkz9Ha/Dz9zP57f+Di3/k2D4H/9j6v/AKj2o1/Z/wBCX" +
                        "/kf4v8A68f+3wP4q+nB/wAk/hP+v/8A7ZM+NP8Ag3H/AOS1/tH/APYraV/6djX6h9N7/kVYH/r7L/0k/" +
                        "LPoNf8AI2x3/XqP/pR+aX/BVr4c658Nf2/v2kbDWraSKPxVrjfEbQ7qVSqXNjr8KamjxkgBlRpXiJHRk" +
                        "YdQa/dfo8Z3Rx3BuBlB/BDka7OD5dfWyfo0z8G+kXkdbAcZ4+NRfHP2ifdTXNp6NteqaP6Nf+CXP/BUb" +
                        "9mjxj+z98HPgJ8TfH9j8Jvi58LdD0z4Zxaf45lTT9M1e00a2j02zns7+bbbl3hjjDQyOsm/dtVl+av4i" +
                        "+kB9H/PsLnOKzDC0ZV8NWnKpeHvSi5NykpRXvWTbs0mrWu09D+5Po+fSDyHFZLhcvxVaNDE0IRp2m+WM" +
                        "lFKMXGT927SV02ne9k1qc1/wXs/Zj1H4zfs7+Bv2ivAlsdc1L4DSXd14jTSgJvtHhTW0gaa7Bi3F1tZb" +
                        "eKTI4EbyOTgV3/Q/wCPYZXndbLcQ+WOJty30tUhe0fLmTa85KK6nB9MbgCea5JRzLDrmlhW3K2t6c7Xl" +
                        "58rSflFyfQ/n3/4Jqft46t+wj8cJ/FN/p03iP4UfECG38N/Fbwxp5QXLW0Mxkt76134BuLQyOURiFdXd" +
                        "CVLB1/svx18IafF+UqlGShiaTcqcntdrWL/ALsrK73TSetrP+LvAbxhqcH5u60oueGqpRqRW9k9JL+9G" +
                        "7stmm1pe6/tg+FP7a37J3xq8NWfir4d/tA+FtWsLuNbmXT7/WLPTtTtN/8ADdWOoPDcwNntJGue2RzX+" +
                        "VvEXhXxHlVd0sTgqsWuqi5RfpKKcX8mz/VzhzxX4bzXDqthsbSlFrZyUZL/ABRk1JfNI9Q/4Xj8FP8Ao" +
                        "sHhb/woNJ/+P14H+qea/wDQNV/8Al/kfQf63ZT/ANBVL/wOP+Z6Hpeq6Xrmn2mraLqVvrGlX6efY6npc" +
                        "0dxbzITjdHJEWVhx1BrxcRh6lKbhOLjJbpqzXqme3h8TTrQU6clKL2ad0/Ro+DP+CqWhXviL/gnv+1Lp" +
                        "9gpee38OrrsgUFv3Ol6la6nMcD0jt2Oe1fr/wBHvGQocaZfKWzqW+couK/Fn479IjBzr8FZjGO6p3+UZ" +
                        "Rk/wTP43v8AgmD8UPDPwc/bz/Zw8feMtdh8M+GbLV7zQNW17UiiW1qmu6Le6CrzPIQsce68AeRiAi5Yk" +
                        "AZr/Tnx8yCvmfB+Ow9GDnUcFJJbvklGend+7our0P8ALz6P/EGHyvjHA4ivNQpqbi5PZc8JQ1fRe9q+i" +
                        "16H9gX/AAVslin/AOCcf7TU8EqzQTaTpMsM0TBkdG8RacQykcEEdDX+aX0cItccYBPfml/6RM/02+knJ" +
                        "PgbHtapwj/6cgfynf8ABF3/AJSW/s2f9zj/AOoDrlf6G/Sj/wCSEx3/AHC/9PUz/Or6K/8AyXuA/wC4v" +
                        "/pmofvl/wAFav8Agqh8V/2JviP8Pvgz8FvCGi33ibxJoMfxJ8ReKvHkF1ewRWV1qV5plvb2tvaXNriTf" +
                        "YStI7sw2lQFzkj+Pfo5fR7y7ivA1sbjqs1ThP2cYwaTuoxk2209LSVkra3u+h/ZP0kvpEZlwnjqGBwNK" +
                        "DqTh7SUpptWcpRSSTjreLu3fS1l1PQ/2F/+CzP7P/7SPhnS/D3xy8R6P8BPjjEfsWpaTr1y1j4c1V8gL" +
                        "Np19qDlI/MJA+zzy+YG4UyD5q8Txb+i/nOR15VMBCeKwm6aV5x8pxiru380Va2rUdj2/CH6UuS57h408" +
                        "fUhhcXs1J2hLzhKTsr/AMsne+ictz9Dvi/8DP2V/wBoXwwdY+Mvw98IfErw4sWbfxf4it9Pma3ibEe6D" +
                        "U1KyQg5A3Ryr25r8W4a4t4hyXEcmCr1aM7/AAxcld+cNn80z9t4m4R4dzvD8+OoUq0LfFJRdl5T3XyaP" +
                        "48f+CpXwE/4J3/BHW9Es/2Pfi1ceJPHl3etF4y+GuhalH4m8OaTp4hkO9NWLPIlwsoVDbtNO2CSxjKgP" +
                        "/pl9H7jDjXNqU5ZzhlCil7tRx9nOUrr7GzjbXmUYra3NfT/ADD+kLwbwRlNWEclxLnWcvfpqXtKcY2e0" +
                        "9WpXsuVyk978ttfpb/g3Su/FCftQ/G6xtGn/wCEKufAL3fiBYwfsx1SHxDpqaeZD/f8qW72e26vhPptU" +
                        "8O+H8JJ29qq9o9+VwnzW8rqF/kfe/QfqYhcQYuMb+ydC8u3Mpw5b+dnO3zPgv8A4K4/8pF/2nv+wrpf/" +
                        "qOadX6/9G7/AJIjAf4Zf+nJn479JX/kuMw/xR/9NwP6lP2VvjVbfs5/8EgPhh8cbrRX8Rr8M/h5J4ng0" +
                        "CGUQfbLiKeZYIWlIbYjyMod9pKrkgEjB/z+8QuFpZ34l4jAKfJ7bEcvNvZNK7t1sr2XV9Uf6E+HfFccj" +
                        "8MsPj3Dn9jh+bl2u03ZX6Ju13rZdGflb+zP/wAHCXj+4+KUenftXeBNCtPhPrztB/wkXwp0/UotQ0B3P" +
                        "ySvBdXt2bu3XpIqgSgZZd5Hlt/QfHn0MMHHL+bKK03iY/ZqSjyz8rqMeWXZv3ejtuv544B+mrjZZjy5v" +
                        "RgsNL7VOMuaHZtOUuaPdL3uqvs/6Qfh/wDGn9nH9pzwoW+H/wAQfC3xk8L61FtvdGsrqw1LcjLuMd1Yz" +
                        "bpI2A5aOaMMO4r+Hs54WzzIcR/tFGrh6kXo2nH5xktH6p2P7oyXirIs/wAN/s1eliKclqk1L5Si9V6NJ" +
                        "n5N/t5fsOf8Eh9B8N+IPFHxY1PRP2YvFccUt3a3Pwj1K30/VJ5VBIjt/DkIuIbjLfeWG0DY/jUcj+i/C" +
                        "DxZ8Sa1eFLCRnjKd0v3kXKK83VdnH1c7eT2P5v8YvCPwzo0J1cZKGCqWbXspKMn5KkrqXooX81ufxsXT" +
                        "W1lrdy3hu+uZ7O0unbQdTniFpePHHMfIlaOGWURyEAMVWRtp4DHGa/08pqUqS9qkm1qt1tqrtK6+Sv2P" +
                        "8uqjjCq/ZNtJ+69nvo7Juz9G7dz/TR+HUniCX4feBJfFiyJ4pl0bS5PEqXi7ZhqDWURuBIOzeZuyPWv8" +
                        "HM7VFY2sqNvZ88uW23Ld2t8j/fHI5VngqLrX9pyR5r781le/wAzsq8w9QKACgD5j/aw/ZP+Fv7X/wALb" +
                        "/4bfEmw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/EZ+1B+y/8AFL9kz4pap8Lvi" +
                        "jpfk3MO698N+JLJXOna1pxcrHd2kjAZU4wyn5kbKsARWLVjpjK59Mf8E8/+ChnjX9i7xqNI1c3Piv4D+" +
                        "K7lJPG/giN90tnK2IzqOnCQhUuEUDemQsygKxBCOjjKxM4XP7Q/h38RPBXxY8FeHPiL8OvEdt4r8GeK7" +
                        "ZNU0LXdLfdFNE2QQQQGR0YFXRgGRgVYBgRWxzNHlX7V37N/g39rL4C/ED4F+Nv9GsPF9rnR9cjQPNpWr" +
                        "WzCeyvYhlSTDMqllBG9NyE4Y19t4d8cYrhzOKOPoaum9V0lF6Si/Vdejs90fEeI3AuF4kyatl9fRVFo+" +
                        "sZLWMl6Pp1V1sz/ADv/AI0fB/x38Avil42+D3xL0d9D8a+Ar6TRNZsnB2PtAeKeFiBvhnjZZYnHDIysO" +
                        "DX+1PC3EuDzjL6WNwsualVjdP8ANPs07pro00f4k8VcMYzJsxq4LFR5atKVmvya7pqzT6ppn2L4d/4Ke" +
                        "ftP+Ff2Pp/2OtB8S/2f4WkmlsLbx3DJMNdtvDc8ZEmiwTA/Jbs5Pzj5whMQITivzLG+AmQYjiZZ1Up3q" +
                        "WvyacjmtqjXWVum1/eep+n4Hx/4gw3DDyWnUtTu1z686pvemn0jfrvb3VofB/g/wf4p+IHinQPBPgnQL" +
                        "rxT4u8U3UOieHvD2iQvPdXl1O4RI40QEkkn8Op4r9ezPM8PgsPOvXmoU4JuUm7JJbts/HssyzEY3EQoU" +
                        "IOdWbSjFK7beySP7dv+CXn/AAS88LfsWeFrf4kfEi3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4u" +
                        "B9/7ifu8l/8pPH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/rL9H36PuH4Uw6xWKSnj5rV7qmn9iHn/A" +
                        "DS67LTf9fq/mo/poKACgD8wf+CwHwQ+Jfx8/Yf8d+D/AITeGLjxn4v0fUtH8Zx+FdHQy397a6bcl7hLW" +
                        "JfmmmVHLrEuWfBVAzEKf336NPFeAyfiyjWxlRU6UoyhzPZOS0u+ivpd6Ld2V2fz/wDSb4Sx+c8JVqODp" +
                        "upVjKM+Vayai9eVdXbWy1drK7sj8bP+CD37Kf7QHgv9pnxr8Y/iB8Ktc+HfgPQ/CmoeD49U8d6ZeaS97" +
                        "qepX9jLHDbRX8cTyhY7eR5HVSq4AJBYV/Tv0vPEPJsVkNLBYfEQq1pVYytCSlaMVJNtptLVpJPV622Z/" +
                        "Lv0PfDrOsJn9XG4nDTpUY0pRvOLjeUpRaSUkm9E22tFpfdHz1/wV6/Yy/aTuv26/id498HfBvxJ8Q/Bf" +
                        "xdbSfEHg/xB4D0XUdXheSPR7PTri2mOnwyiKaO4gcBGIJQqw68fafRr8UMijwjh8PWxVOlVoc0ZRnOMX" +
                        "8UpJrmaummtV1uuh8T9Jjwsz6XF+IxFDC1KtKvyyjKEJSXwxi0+VOzUk9HurPqf1E/8E8/hF4y+BH7Fv" +
                        "7Pfws+IViNL8a+GtDM/iPSMhnsrnUr641U20hUkeZCLkRyYJG5Tgkc1/APjTxLhc34pxuLwz5qU5+6+6" +
                        "ilG68na68mf6C+CfDOKyfhXBYTErlqwh7y7OTcrPzV7PzR9m1+Xn6mfin/wXS/Z/wDiz8dv2VfB0vwj8" +
                        "G3vj7U/hv4rt/F/iLw34ZglvNTbTZNLvNPea3toFaSby5J03qgLBSWxtViP6n+iTxlluUcQ1VjKqpRrU" +
                        "nGMpO0ebmjKzb0V0nZvS+m7R/Kf0vODMyzjh2k8HSdWVGqpSjFXly8so3SWrs2rpa212TPhL/g38+EHx" +
                        "a+Gvxh/aCvviL8LvEXgGy1Pw1plpp15410TU9KiuJU1QuyRvfQxB2A5IBJxX679MniXLcdlmCjhsRTqt" +
                        "VJNqE4yt7vWzdj8f+hhwxmWAzTGyxOHqUlKnFJzhKKb5ul0rn68/wDBQv8A4Ju/C79vXwnps+paifAXx" +
                        "j8G28tn4E+JllALgCB3842N/BuQz2rOSygMGiYlkOGdH/mzwW8csw4PxMlGPtcLUd5027a7c0X0lbfS0" +
                        "krPZNf0x42eBWX8Y4aLlL2WKpq0KiV9N+WS6xvtreLd1u0/5Fv2hf8Aglj+23+zprc9jrnwX1L4ieHjJ" +
                        "5Gm+Ofg7bXXiPTLlScB2WxiNzb5PGLmGM56ZyM/6R8F/SD4UzukpU8VGlO2sKrUJL73yy/7dkz/ADT42" +
                        "+jxxZkdVxqYSVaF9J0k6kX9y5o/9vRR/Ux/wRn+Enxt+HH7D0Pgv9ozw/f6U+t69rOo+CvAvj2JhdWHh" +
                        "S9srOFLWezu13wpJcpdSiGRQdsmSAGxX+ff0oOJMqx3Fjr5bOMuWEVOcNnUTk+ZSWjajyrmXVeR/oX9F" +
                        "rhrNsDwkqGZwlHmqScIT3VNqK5XF6pOXO+V9HtqfmL+3Z/wQX8Ux6/rXxK/Yokt9X0LVJZdSvvgX4hvI" +
                        "rO6sJJG3lNJvLxkhkg5O2K4kRkAwHkzgfvfhH9L/DujDC55eM42SrRV0/8AHFap+cU0+y6/gHi/9DvEK" +
                        "tPFZFaUJNt0ZNJr/BJ6NeUmmu76fhX4k/Yu/a98I6pPo3iH9mDx9p9/bkqVHhLXJopADt3RTQWzxyJkc" +
                        "MjEH1r+t8D4pcNYmmp08woNP/p5BP5pu69Grn8h47wr4mw1RwqZfXTX/TqbXyaVmvNOxgf8MrftP/8AR" +
                        "uHj3/wj/EP/AMiV2f8AEQsg/wCg6h/4Nh/8kcf/ABDviD/oAr/+Cp//ACJ/VL/wQL+Df7Rvwm+EXxvm+" +
                        "MvhnWvA3gPxVq2j3Xwt8H+OLe50+5S6tre8TVbyOzvEjljiuBJaqHIAcxkjoSf89/picT5HmOZYRYKpC" +
                        "pWhGXtJQakrNx5IuSum1abt0vqf6IfQ14XzzLcsxbx1OdKjOcXTjNOLulLnkouzSleCv15dD93vEvhzQ" +
                        "/GPhzxB4R8T6ZHrXhrxVZXfhzxDo94CYbuxvoGtZ4XAIO2SN2U89DX8h4DHVcLXhWpS5akGpRa3TTumv" +
                        "Rn9g4/A0cVQnRqxUqc4uMk9mmrNP1Wh/C3+29/wSb/aQ/Zf+JGpR+APAOtfGX4M67dzyeAPGXgbT7nV7" +
                        "yC2Zi8dpqlvp8TyQXMSYUyFBFL95Dncif62+FH0i8jz/AxeIrQw+KilzxnJRTfWUHJ2cX2vzR2fRv8Ay" +
                        "I8Wfo4Z7w/j5LDUZ4jCyb5Jwi5NLpGairqSXW3LLdPdL9uvg7+zB+1V4j/4IlePPgH430O/k+L3iGxvt" +
                        "R+G3w78Vs8Oq2Wi2msWupWemSLdkGKV1tZDBC5GwSJGdmCF/lLibj7h6h4rUcwoTj9WhJKpOOsXNxcZT" +
                        "Vt0uZczW9m1fd/1lwv4f8RV/Cetl1eEvrM4t04S0koKUZRg77N8r5U9rpO2y/Mr/gjV+x5+0roX7dvw+" +
                        "+J/jL4MeI/h/wCCfhFb+IrzxXrnj7R7/RovO1Hw5qGgwW0B1GKHzZjLeKxRMlVUk4GK/efpPeJmRVuEa" +
                        "2Fo4qnVq13BRUJKTtGcZtvlbsrR3e7aSPwL6Lnhjn1HjChi6+FqUqVBTcnOMoK8oSgkuZK7vLZbJNs/o" +
                        "q/4KC/8E6vhd+3p4I0621q+Pgf4seDo5k+H/wATbCATvAkvzvZ3sO5PPtHfDbdwZG+ZGGXV/wCJ/Bnxs" +
                        "zDg/FycF7TDVLc9Nu1/70X0kl8mtGtmv7f8afA/L+McJFVH7LE078lRK9r/AGZLrFvXunqnun/IR+0P/" +
                        "wAEr/22/wBnLU9Qj174M6j8QPC1mWa38f8AwhguPEOlzQjP711s4vtNuvHP2mGP8iCf9KOCvpB8KZ5Ti" +
                        "6eKjSqP7FVqEk+2r5Zf9uyZ/mdxt9HjizI6klUwsqtNfbpJzi130XNH/t6KPh//AIV38QPtX2H/AIQbW" +
                        "PtvmfZPsf8AZl75vm7tmzZ5ed2eMYzmv1j+2sHy83toW3vzL/M/JP7ExvNy+xnfa3K73+4+0v2ff+CXv" +
                        "7bP7RupadH4X+CeqeDPDN8ymXx98Vre48PaRFC3/LZWvo1nuE7f6NFKc9uDj8t4z8fuFMkhJ1cXGpUX2" +
                        "KbU5X7aO0X/AInE/VeC/o+8WZ5UiqWElTpv7dROEbd9VeS/wqR/ZJ/wT/8A2Dvh/wDsG/CW68F+HdRPi" +
                        "3x54umh1r4m/EO5t0t5NSuoYzHDDDGCxjtLcO3lRszHLOxOWIH+YnjJ4vY3i/MlXqR9nRppqnC9+VPdt" +
                        "9ZS0u7LZLof6ieDHg9guDstdClL2lao06k7W5mtkl0jHWyu92+p/Ml/wVt/Y0/ae1L9u/4p+NvCnwS8S" +
                        "ePvCPxbn0rWvBHiHwDo2oazbXGNJs9OkgkbT4pRFOk0LKY5MEjDDKsDX95/Rw8T8gp8IYehWxdOlUoKS" +
                        "nGcoxa96Uk1zNXTT3Xmt0fwL9JPwt4gqcYYivRwlSrSruLhKEZST92MWnyp2aaej8nsz+pH9kH4CXngv" +
                        "9hv4Nfs9fGzw1a39zF4Ni8HfEnwbqPl3VsV1GCQ3djNsLI+1ZzE+0lSQcEjBr/P7xK4wjiuLcVmOBqNL" +
                        "2zlTktH7rXLJdVtdde5/oR4ZcGywvCOFy3HU037FRqQeq95Pmi+j3s7adj+c/8AbU/4IMfF7wHret+N/" +
                        "wBkSVfip8O7qR76D4Y6rdRW3ibSUdixhglu2SG+hjH3WMiTYwuyRgXP9t+Fn0vstxlKFDOP3Fdae0SvT" +
                        "l5tK7g310cet4rRfw94rfQ7zPB1p18m/f0G7+zbSqR8k3ZTS6O6l0tJ6v8AD7xn8BPjl8OtTfRfH3wc8" +
                        "U+C9WjJQ6f4o0DVbGU47qLmBNw7gjII5Ff1hlfGGU46nz4fFUqke8Zxf5M/krNeDs3wNTkxGFq05dpQk" +
                        "vzRqfD/APZp/aG+K2ow6V8N/gf4r8a3sz+Tjw9oGp3EcZyATLKkPlxqMjLOwA7mufOeOsly6DnicXSpr" +
                        "+9OK+5Xu/kdGS8B53mM1DC4SrUf92En97tZfM/oq/4Jvf8ABEPxf4O8d+FPjv8AthRWenyeEbi38R+Dv" +
                        "gfYTW+ovJfwMJYZtYnhMlv5cTgOtvEz7zjzGCho3/ifxx+ldhsVhKmX5Nd+0TjKq046PRqmnZ3a05mlb" +
                        "om7Nf2/4F/RMxOFxlPMM6svZtSjRTUveWqdRq8bJ68qbv1aV0/6gK/gQ/0CCgAoAKACgD5j/aw/ZP8Ah" +
                        "b+1/wDC2/8Aht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Rn7UH7L/AMUv2" +
                        "TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrn1N/wAE5f8AgoX4n/Yw8" +
                        "cSaF4lN14m+AvjKZT4w8KQuXk0y5bag1OwRuBKqgCWMYEqDB+ZUKuMrEzhc/tA8EeN/CXxJ8JeH/HngP" +
                        "xBbeKfB/im2j1fQNf0iQSW9zbyDhlPBBBBVlYBlYFWAIIrY5mj8jP8AgqV/wTt8M/t3/DGx+M/wRutPv" +
                        "Pjv4J0+VvCmsaTPBLZ+LtJgMkv9lvcxP5XmByxtZidquSjkKxZP6a+jp46z4Xxn1XFNvA1Xr/07k9OdL" +
                        "t/Mluldaqz/AJh+kf4DQ4pwf1rCpLHUY6f9PIrXkb6P+RvRN2dk7r+MjT/hD8U9U+JMPwcsfh3rM3xWn" +
                        "vh4aX4dNp10msrf52mB7SRFkRx1YMowOTgc1/qTW4ly+ngXjZV4fV1Hm5+Zctu/Ns/kf5V0eGcxqY9YK" +
                        "NCf1ly5eTlfPzduXdP12P7Vf+CXn/BLzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5Bk" +
                        "IOLi4H3/uJ+7yX/AMsfH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/qx9H36PuH4Uw6xWKSnj5rV7qmn" +
                        "9iHn/NLrstN/wBfq/mo/poKACgAoA8J/aZ+O+k/syfA7x98dtf8Maj4x0L4dwW2qazoHhP7OdQktp76C" +
                        "yeSIXckUZEIm819zj5FbGTgH67gPhCpn2bUcBTqRpzqtpSlfluk3Z2TetrLTdo+P4+4wpZBlFbMKlOVS" +
                        "FJJuMbc1m0rq7S0vd67Jmj4R+Ofgfxd8ANA/aQgnk074d654Tg+MUkt6E8+00qTShq8glVGKiSKPIcA4" +
                        "DAjNYZlwli8NnM8savXjVdLTZy5uVW8m9vI6Ms4uwmJyaGZptUJUlV13UeXmd/NLfzPFv2IP23fht+3Z" +
                        "8NPEvxK+G+gap4VtfCmty+CNW0DxkLMXqyx2VtfJMBYzzp5Ui3O1SWB3Kwxxz9V4r+FOO4Rx9PC4mcZu" +
                        "cOdON7Wu1bVJ3VtfJo+U8JfFnAcYYCpisLCUFCbg4zte9k76Nqzvp5pmz8GP2vvBPx0+P8A+0V8BPBfh" +
                        "nVDdfs03FhonjfxzefYxpM+o33mKLW28qZ5S6Pbzq+9FwYz6iuXijw1xeUZNgswr1I2xibhBX5lFW1el" +
                        "rNOLVm9zq4W8TcJm+dY7LqFOV8G0pzduVyd9Fre6akndLZn1rX5wfpIUAFABQAUAFAHwj/wUR/bH1L9h" +
                        "v4BWfxo0rwHB8Rbq68Qad4JPh/UL+TTY1S+tru4MvmxwXByv2bG3bznrxX674KeGNPi3OHgZ1nSSpynz" +
                        "KPNs4q1rrv3Px/xu8UKnCOTLHQoqs3UjDlcuXdSd72fbsfd1fkR+wBQAUAfPX7VX7Rfhf8AZN+Avjz9o" +
                        "Hxnod/4k8NeAP7L/tLRfDAtzfTf2rrNpokflfa5Io/lkvFZssPlBxzgV9p4e8E4jiPOKOXUJxhUq81nK" +
                        "9lyxlN3sm9o223PivETjjD8N5NWzGvCU6dLluo2u+acYK12lvJPfY+VviH/AMFGNW8G3Hg5/C37Enxo+" +
                        "MWg+NfDeg/EnTPF3wm8Iy6xpSw69p6aglq1zbuUM8KyBZVUkA9zX6FkvglTxSq+1zXB4edOpOm41KnLK" +
                        "8JON7PWztofnWd+ONTCul7LKcZiIVKcKilSpc0bTipWutLq9n5ng3w//wCCzOmfFnQn8U/Cv9hL45fEv" +
                        "wzHcSaVJ4j+H/hOPWbBbqFVeSE3GnTzRiRQ6ll3ZAIyORX1+c/RfqZdW9li83wVGpa/LOpyuz2dpJO2m" +
                        "58fkv0paeZUfa4TJ8bWp3tzQpc6ut1eLavqtD9m9PumvrCxvmtZLJryGK6ayvF2TQmRA+yRezLnBHrX8" +
                        "vVqfJNxveztdbP0P6lo1OeClZq6vZ7r1PjL/gn/APta6j+2t+ztpvxy1TwRD8Pru/1bVPDZ8O2F8+oxq" +
                        "unSrGJPOkhgJL7um3iv1Hxk8OIcK53LAQquqlGMuZrl+Lpa7/M/LfBjxJnxXkkcfOiqTc5R5U+b4et7L" +
                        "f0Ptmvyo/VwoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD5j/aw/ZP+Fv7X/wALb/4bfEmw8m5h8y+8G" +
                        "eM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/EZ+1B+y/8AFL9kz4pap8Lvijpfk3MO698N+JLJX" +
                        "Ona1pxcrHd2kjAZU4wyn5kbKsARWLVjpjK5d+G37YH7Q3wj+EHxA+BfgD4jXeg/Dn4kY/tzSYDmW33/A" +
                        "C3H2KY/PbfaU+SfyyN68Gi4OKPtT/gmZ/wUL+Lf7NXijTPglbeCtQ+Nfw28falFDpPw70Bi+tafqV24j" +
                        "aTSRJlG8370lu5VGYbg0ZLszjKxM4XP7HbOGC4NvrM2k/2fqtzbRwzC7W3N3DGf3vkSSQNIp2MTkK7Ln" +
                        "JBPWun2suXlu7b26X7nF7KPNzWXNa1+tuxo1BoFABQAUAFAHmfxp+G2n/GP4P8AxS+EuqlF0/4l+HtY8" +
                        "C3M0wJEQ1XT5bIScAkFDIGBHIIBHNe9wtnk8szPD4yHxUakZ/8AgMk7fO1jwOKsihmmWYjBz+GtTlD/A" +
                        "MCi1f5XufzWeBf2jPEmm/8ABDPxX8Jg0kfxesvFN7+xFZ6JcELdvea3rQvXs2UnkjTLuaFcf3Mdia/un" +
                        "N+CKFTxap4z/mGdJYtvpaELc3/gyKl8/Q/hDKOOK9PwiqYPX60qrwiXW853cf8AwXJx+Xkz6T/YusPD3" +
                        "/BPn9tH9s39nbVLoWfw3svhd4U/aF0CZh5aTweD9AhstWnjL4y8ss87OTy3l7j0NfC+KVatxnwtleZQ";
                    resourceString += "V67xNSjLydWbcE/JJRS7Xsfd+FdGhwVxVmuWTdqCw1OvHzVKCU2vNtyb72ueG/s+ftCeLf2NP+CbHjL9r" +
                        "ldNsr79of8Abw+J2q6n4JPid/LtYbzVbu6t4rm781kzb2/2K7ulZiFYyoGIVq+s4z4Lw3FHHVLJ+ZrBZ" +
                        "ZhoqfLu1FJtR/vS5oR01XK7K6PkeCuNcTwtwHVznli8dmeJk4c2ycm0nL+7HlnLXR8yu7M7f40/Gz9or" +
                        "9kP4b6L+0xon/BTjwz+1d4q8OXukyfGT9nqeTwidL1Wy1K9htJ49Gi0mZriIwPMo3RorbA0p2hTGfK4W" +
                        "4VyTiXHTyupkFTA05qXsq/73mi4ptOo5Lld0no21e0dW1I9birizPOGcDDNKfEFPHVIOPtaH7rlkpNJq" +
                        "movmVm1qkna8tEnF/0R+DvFOl+OfCHhXxrobmTRfGGm2PinR5JMbmtdQtUu4idpIyUkHQ1/FOZ5fUwmJ" +
                        "qUKnx05OL9Yuz/FH9u5XmNPF4anXp/BUipL0krr8Gfg58N/GX7fn7XX7Uf7b/wH8C/tOv8AA/4RfA/xp" +
                        "f2J+IFr4f03VtagguZ7m103RtPWQWqrCotJZp5jIZRhF3ANz/XueZXwdw3w/lOYYjAfWcTiaKfJzyjBt" +
                        "JOdSW+vvJRVuXd20P48yLNOM+JuIc3y/D5h9Ww2GrNc6hGU0m2oU47ae63J35tlfU5f9nb4gf8ABST9o" +
                        "r4jfHH9hvWf2m9O+HV/+y7qt1bfED9pvRNAs7/xTr9hczmDSbSC1d4IIg4hkmluARMF2IxLBi/ocbZNw" +
                        "NkmBwmfQwEqqxsVyYdzcacGlecm9W7XSUdY3u1pa3n8EZ1x3nmOxeQTzCNF4KT58QoKVSabtCKjolezb" +
                        "lpK1k9b3+uf+Ccf7QH7QF78Zf2qv2Mf2mfG8PxV8e/s0XunXPhX4qw2kdndazoupK5X7VHbjYHRDA65L" +
                        "SfvGVmbZuP5t438G5NDK8uzvK6ToUcYpc1O91Gcf5W9dXzLovdTSV7H6V4GcaZ1PNMxyPNayr1sG48tS" +
                        "1nOEv5ktLpcr6v3mm3a58sftXeJ/j/+zv4f8e+O9W/4LE6JN+0J4FtrvxdpP7Pk+j+DdNsb+Gzja4Glf" +
                        "2XHPNN500a7IZJYiZH4wCdy/oXh3gMmzutRw8OGZ/UqrUXW5qsmm9OfnslZPVpPReln+eeI2YZ1klGti" +
                        "J8UQ+u0k5Khy0oqSWvJyXbu1om1q9Ot1w//AAU9+O11+01/wR3+AXx01HTIdG1f4heJPDWpa9pmneZ9m" +
                        "i1G3s9YsbsQiYlhEZ4HKBiSFwCW6n1vAPhGOQ+JuMwEZOUaVOok3u4t03G9utmr+fRHkfSA4wln/hhgs" +
                        "wlFRlVqU20tlJKopWvra6dvLq9z7F0v9ob47ft5ftST+D/2U/iFdfC79jr9n6+k0r4yfHjw5badcXXjP" +
                        "XkCu2k6RJqMVynkqhX98icKxkJIaAP+Y4jgvKOEOH1Wzaiq2Z4qN6VGTklSh/PNRad7/Zb3XLpabX6hh" +
                        "+Ns44x4hdDKK7oZXhZWq1oqLdWf8lNyTVrfaS2fNreCfFfHT9qf4jfHX9sr4k/st+A/2rNE/Y0+DH7P1" +
                        "jYn4n/FHUJtCj8Q+Itf1KETrp+mtr0qLHFACRI8YDKyNuLB0Ferwj4e4HKOGKGa4jLp5hisVJ+zppT5I" +
                        "Qi7c0+Rat9E9GmrWszyeL/ETHZxxTXynD5jDL8LhYr2lRuHPOclflhzvRLq1qmne90dd+w5+0/8TrD9r" +
                        "X4n/sT/ABM+P2lftYeHtM8NRfF74N/H3w3/AGSbuSwW5gs7nTNSOiySwvNG0+QzNv8AkJYlZEVPN8WeA" +
                        "cBPhzD55hcHLAzdT2VWjLmtezanDnSaTtstNVbVNv0/CPxAzCHEmIyLFY2GOhGn7WlWjy35bpOE+RtNq" +
                        "+710bbtJJeo/wDBaL/lGl+0n/3J3/qfaHXz/wBFz/ku8D/3F/8ATNQ+h+lR/wAkFj/+4X/p6mfZn7K3/" +
                        "JsH7OH/AGIXg/8A9R60r8w8Qv8Akf47/r/V/wDS5H6l4d/8k/gP+vFL/wBIiflz/wAG/wB/yYpq3/Y++" +
                        "IP/AE3aXX7/APTJ/wCSuj/14h/6VM/nv6GH/JIS/wCv8/8A0mB+4Ffygf1qfyuf8Esfgp+238dP2NWsv" +
                        "hF+1JF+y38L/C2t63B4Pj8N+H7fV9W8R63I8dzPPfXVxNG1taRFkhRIcljvLKQFz/oR9IPirhTKOJ+bG" +
                        "Ze8biJwhzc03GMIapKKSfNJ6tt7aJPe3+d/0eOFOLM34X5cHmCwWHhOfLywUpVJ6NuTbXLFaJJb6tra/" +
                        "wCoX/BOH9pn4+/tQfs7fHPwP8TvEFlpX7TXwL1vXfgpf/EK2sIJbSTUobRkstSmtYkigkaK43iSNFVXE" +
                        "YO0bzX4D44cB5PkGd4SvhYOWAxMIVVC7vyt+9BN3avG1m22r76H9BeBnH2c8QZHjMPipxjmGGnOk52Vu" +
                        "ZL3ZtKydpXukknbZXPgH9qb47fHP9jvRLr4reGv+CtGg/tE/GPwPqNh/wAJ/wDs16tp3hKG11a2udQht" +
                        "Li2t9P0ieeS0eHzN8iAJIIgzq6FRu/ZPD7hHKeJqqwlXhyeEwtSMuSupVG4tRbTcpJKSdrJ6rmsmnfT8" +
                        "Y8Q+L834YpPF0uJIYvFUpR56DjSSknJJpRi24tXu1o+W7TVtfp3/gox+2J+0R4HsP8Agnj4p/ZZ1MaZr" +
                        "H7SuposHgbVo7aaz1qXWbTR30yyvHmiEgjEt+A5jaNiCeRwR8D4I+GWSYuedUs2jzRwcfjV04KLqc8o2" +
                        "dr2jpe68mff+OPifneEhklXKZcssZL4HZqbkqfJGV1e15a2s/NHFftN6B/wUw/Yo+G4/a9b9suP9oSHw" +
                        "Tcafqnxs+COteFtO0vQH068uorWVNOa1LSCKGSZVLqsMmzMmRgofV4DxnAnFWO/sb+y/qrqKSpVVUlKf" +
                        "Mk2ue+l2lezclf3ezPK4+wXHvCmA/tn+1Vi1TcXVounGMOVtJ8ltbJu10ou3vdLHT/tv/tkftEWvjD/A" +
                        "IJn6/8Asf6+tvF+2JY63LZ+CPFkNs+k3UmqaboT6VPqDCB50WxbWGmmEbjIjwR1rz/CjwxySWGz6nnML" +
                        "vAShecW+ZcsqnOo62fPyWV097noeLXijnccVkFTJZ2WYRnaEkuV80afI5aXXJ7RylZraxxf7Tr/APBRr" +
                        "/gnl4X0X9q/UP2uW/aq+Hmj6lpdh8ePhZ4s8M6botnHaajdJZiXT2szMYIzNKsStGY2R2QssilkHq8BL" +
                        "gjjXETyiOW/Uq8oydGpGpKbvFXtK9ruybad00mk4uzPK4/fHPBOHhnEsz+vUIyiq1OVOMFaTteNr2V2k" +
                        "rWabTakro9l/a6/bb8XeKfjV8Af2Xf2f/jZof7OVh8XfCkHx7+In7R/xAGlN/ZHhe/ST7Fa6fFq0qW7X" +
                        "lx5ZJDHI3IVYDew+X8NvCnDYfKsZmuY4SeLlQqujChDm96orczk4rm5Y3/B3T0R9T4l+LGJxGa4LKcux" +
                        "cMJHEUlWnXny+7Td+VRUny80rfirNas8/8AhN+0p8Tf2dv21fgj+z1rv7Ymm/ttfAr9pW21PS9D8SCXQ" +
                        "LrxD4T8R6dD5ypPLoMspeC4LRqvmkAh2KgeUxf2eI+BcBnfCuLzGnlksuxeDcW4++oVISdtFNKzjq9Oy" +
                        "u3zK3i8N8eY/JOK8JltTNI5lg8YpJS9xzpzir6uDd1LRa93ZLld+P8Ahl8RP2/P2tf2s/24f2dvAf7Ss" +
                        "fwa+EPwV8ZXEV98QoNC03VPEOnWNxdXtnp2jaYkggRY5fscskk7N5i+WAG+Yq3p59knB3DnDmU5liMB9" +
                        "YxOIoq0OeUYSaUXOpPd3XMkor3XfbS68zIM84z4k4kzfLcPj/q+Gw1Z3nyRlOKbkoU4LRWfK25P3lZa6" +
                        "2f0Z+wB8cf2l9D/AGm/2lv2Fv2ovHa/GPxN8ErHTPHXgL4vLZW+nz6hol+tuwW5jgHzMy30DKWZmRhIj" +
                        "O4CkfEeMnCeRVchwGfZVR+r08TKUJ0ruSjNX2b/AMMl0TXK0lqfceDHF2fUc/x+QZtW+sVMNGM4VbKLl" +
                        "B23S3+KL6tPmTb0P2Dr+aD+nAoAKACgAoAKACgD5j/aw/ZP+Fv7X/wtv/ht8SbDybmHzL7wZ4zsY0Oo6" +
                        "FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Vnx0/Y0+O/wG+O9v8As+6/4Pudf8Za/cpafDybw1BLcW/iW" +
                        "3uJfKgnsCBlgx4dT80bZD4INYtHSpJo/qW/4Jt/8E2/DX7IHhqD4g/EGC28S/tEeJbby9V1WPbPbeHLa" +
                        "dfmsLBuQXIOJ5x9/wC6vyZL6RjYwnO5+rNWZhQAUAFABQAUAFAH8w+lfsnfF1P+CuurfDF/A2qj9l5fi" +
                        "ZH+24fFg069XQxrEPh+XVY0S4KfZy39oXQtzHnICnAxX974jxFy1+G0cV7aP9ofVvqnLzLn5XNRel+b4" +
                        "FzX8z+AcP4cZmvEuWF9jL+z/rP1vm5Xycyg5LX4fjly230PTf8Agtt8G/jXc/En4H/GD4AeCNX8aeIvH" +
                        "nhXxf8Asx/ES28JadeX7ro2rxYtln+xxvsjY6ldHc+FDAdcnHg/RU4nyqOBxeDzGrCnClVpYiHNJL3ov" +
                        "W12rv3IaLWx730seFs1lj8JjcuozqTq0quHnyxcvdktL2Tsvfnq9LpH0X/wUE/YS8YeK/2CPgV8Jfgd4" +
                        "btfHXi/9k+68LeI9F8DXaRvF4ltdC0qTSb238qbYkrziXz2ViDJtZRlnAPxPgz4u4bD8YYvGY+o6VLHK" +
                        "pFzW9NzkpRd1slblTW109kfceNPg/isTwbg8HgKaq1cC6clB7VFCLjJWdrt35mnvZrdnzL4P+M//BMTx" +
                        "Ba6LoWr/wDBLfxJpfxeujbafr/wl0r4Qpf39lfS/u5FVwsPmQpIrgOVVyqk+WDlR95mfC3H1GU6kOIKc" +
                        "sMrtVHibJrp3s2raXau/i6nwWV8VeH9eMKc+HqkcU7KVJYXmkn17XSd9bJtL4U9D+ijRtH0rw9pGlaBo" +
                        "WnQ6Poeh20Gj6NpOmxrDb2tpbRLBDDFGgCqiIoVVAwAMV/E+KxNSvVlUqScpybbb1bb1bb7tn9vYXC06" +
                        "FKNOnFRhFJJLRJLRJLslsflB/wTr8FeMvC/7Un/AAVC1jxL4S1Pw7pPi74lW2q+FNU12wurS31S1EurE" +
                        "zWklwiLPGN6/NGSORzzX9FeNma4XEcP8PwpVIzlTw7Ukmm4u0NJJPR+TP5x8D8qxWH4h4gnVpShGpiE4" +
                        "txaUleesW1qvNHM/sLeBfG/h7/go1/wU48UeIPB2q6H4Z8W6l4dl8K+ItY0+7trHU0ia93taXE8axzBd" +
                        "wyUY4zXd4t5vhK/BGQUqdWMqlOM+aKkm4/D8STuvmcHhDk+LoccZ/VqUpRp1JQ5ZOLSl8Xwtqz+R5n8N" +
                        "fh18dLX9vr/AIK1+I/AfhfVfDviDxp4Gt9O+CfjbU7G4tNNu/EI8PQRWTW15cpHBIY7kLu2vgYOcYr3s" +
                        "9zvKJcHcOUsRUjOFOs3VgmnJQ53zXirtXjfoeDkOR5vHjLiSrh6coTqUEqU2moufIuW0nZO0rddD8//A" +
                        "IFax8JPDH7E3xP/AGbrf9hjxj42/wCCg3jDR/Gng/xxrOu+BTdapa6jrUeoW0eqza1qieZawW1tKCqLt" +
                        "YyoQAS5lP7JxdhsyxHFWHzN5vSp5LTnSlBKtaLjHlbgqcdJOUlu7rlflyn4vwhistw/CeIytZRWqZ1Uh" +
                        "VjNujeSlPmSm6ktYqMXsrPmW2vM/Sv2gfhF8WNV/wCCFn7Lnw90v4YeItS8faP4ltbnVvA9houpTaxax" +
                        "pqPiIs01nHCZkUCRclkH3h6ivD4N4ly6n4t5hiZ4imqMqbtNziov3aW0r2ez69D3uNOGcyqeEOX4aGHq" +
                        "OtGorwUJOS96rvG11uunU+pvGXwV8Zf8Es/2pfCXxq/Zj+HOt+Mf2OPjn9i8A/Hv4KfD+z1HW7zw5f2c" +
                        "BS31e0t4RPO4ChpQSGyfNiZl82Ir+e5ZxVhfEHh+pgc0rwp5nhrzo1ZuMFNN6wk3ZLWy6fZkk+WV/0PN" +
                        "OFMV4ecQ0sdlVCdTK8TaFalBSm4SS0nFK7el31+1Ftc0beRfGz4S+Av2bP25fjb8dv2j/2Srr9qX9lL9" +
                        "qGDSvGHhr4j6L4Xi8TXng7WYrcLNDPbSqrQRSmRy2dpdBEV3ujqPpeFeI8ZnvCWEwGWZksFmOCcoyg6n" +
                        "s1VjfRprdqytvZ817JpnzPFfDeDyHi7F5hmeWvG5djVGUaip+0dKSWqaeyd3fa65bXaaP0H/YX179ifx" +
                        "98QfFev/sv/ALIWpfBq/wDDukxRyfFnWPAA8K2Oo2+oTI0llaXbfNI48tHkQhcjBG4DI/GPFvB8VYPBU" +
                        "6ea5lHEKcv4are0cXFaSlHpu0nr2dj9r8IsZwpjcbUqZVlksO4R/iOj7NSUnrGMur0Ta07q50X/AAV78" +
                        "K+KPG3/AATu/aF8MeDPDd/4u8S6n/wif9m+HvDFncX99ceT450a4k8qC0SSR9kcbO2FOFBJ4Bri+jXmO" +
                        "HwnGuCq16kadNe0vKTUUr0aiV27JXbt6nb9JjLsRi+CMbSoU5VKkvZ2jFOTdq1NuyV27JN+h9c/szaff" +
                        "6T+zf8As+6VqtlNpmp6Z4I8KafqWm6hG8M9vPDoNrHJHJHIAyOjAhlIBBGDX5tx5WhUzzGzg04utUaa1" +
                        "TTm7NPqmfpXANGdPIsFCacZRo0009GmoRumujR+a/8AwQu8C+N/h5+xVqmg+P8AwdqvgfXX8b67qCaL4" +
                        "w0+70y7MEmn6aqSCG9jjfYxQgNjBwfSv3T6W2b4TG8VRqYerGpD2MFeMlJX5p6XTaufhH0Q8nxeC4UlT" +
                        "xFKVKftpu0ouLtyw1s0nY/Zav5gP6kPyO/4IleCvGXgH9hbQfD3jvwlqfgrX4/EviK7k0PxbYXWm3ixS" +
                        "3EZRzDeRxuFYDg4wa/pD6Vea4XGcXTqYepGpD2cFeLUls+qbR/NX0T8qxWC4QhTxFKVOftJu0ouLtddG" +
                        "kz4O+EHwj/aYg/Zc/4LFaF8NfBWv+GviZ488f6zqHw/huNO1CxvNZ0mTVpXvxpnmJG87XFgZo4TFnczK" +
                        "BkkV+v8S8SZC+IOGKmKqwnQpUIqfvRajLlXLz725Z8rd9knc/HuGeGs/XD/ABRTwtKpDEVa83D3ZJzjz" +
                        "Pm5Nr80OZK27asfNvjjV/gh44/4JxT/ALN37Ln7C/i24/aJh0Tw9H8aPGreA2jv9GvtG1PT9W1ee51ia" +
                        "Jrm5kuprXZDBGcmOQAKgQR19zlOGzbCccLM81zeksFzz9lD22klKMowSgnyxUU7uT6rd35j4TNsTlOL4" +
                        "GeWZTlFV45Qh7Wfsfeg4SjKbdRrmk5NWjFdHskuU+i/+CiV/wCN/BHgH/gibqfhXwbP4j+JHhDUfC1/4" +
                        "c+H14Gs7m/1vT7LwvJb6c4uApieWeNYjvA2k89K+J8FKOExeM4qjVqqFCpGopTWqUJOteStuknfTc+48" +
                        "bq2LwmD4TnRpOdenKm4wejc4qjaDvs3JW12PW/2vf25fEX7bPwV139kH9l79m/4it8afjE1j4U8c2vxK" +
                        "8MzaJZeELAXsU94dRuJpHjjb935RdsIoYtu3BVPzfhr4S0OFc1hnOa47D/VcPeUPZ1FN1XZqPKkrve9t" +
                        "3a1rXa+l8TPF2vxZlU8lynAYj63iLRn7Sm4Kkrpy523ZbWvsrt3vZPh/wDgoL4b8Xfsq+Pf+CL3hL4We" +
                        "FZ/iz4r+AkfiDQdL8KaQFiu/Ef9gab4VgvI4AwOJ7qKGUoApO9hhScA+t4M47DcQ4Pimti6ioU8U4Nye" +
                        "0OeVZxb8otq/ktWtzyfGnAYnh3GcK0cJTdephedKK3qckaKkl5ySdvN6J7G/wDtn/tdeIf+Ci3wnh/Yu" +
                        "/ZV+APjtvF/xX1TQ4Piv4g+KXhu40PTfB+nabqdvrDfbp3aVUkWe2jLnO3YGCF3ZVPH4XeG1HgnMXneb" +
                        "Yyh7KhGfs405qcqspRcfdWl1Zu3W9m7JNnZ4p+JdfjjLVkeUYKv7WvKHtJVKbhGlGMlL3nrZ3Sv0tdK7" +
                        "aRH+2r+ydZ/s+/tIfs+ftK6v+zdL+1x+zL4W8BaZ+z58Y/Aun6PHrmr6YdCtpLaz1mOzkJB/dLEN7fKu" +
                        "x0d08xGD8LPEWWdZHjcshjlgcfOvKtSm5ckZc7TlTcvW+m7umk+VonxV8OI5LnuCzSeAePwEKEaFWCjz" +
                        "yjyJqNRR9La7KzTa5kz6M/ZN8Y/8E6fin8bfBtl+zv+w9qfhPxdpcd34ns/i3efDNND0vQJrGKQbZdRf" +
                        "mKd2Bjj2qQWyu7OAfiPEbLONsvyqrLMs2jOlK0XTVfnlNO20eqW7621sfc+G+acD5jm1KOW5RKnVjeSq" +
                        "vD8kYNX3n0bei6X0uWf+CcHgXxv4W/bV/4Kv694n8Har4c0Lxl430DUPCGta9p93Z2mqwR6h4nZ5LOa4" +
                        "jRJ0UTIS0ZIG5fUVHjhm+ExHCvDtOlVjOdOjNSSkm4vlo6SSd09Hv2ZfgXk+Lw/FfEdSrSlCFStBxbi0" +
                        "pLmraxbVmtVtfdHS/B7wV4ysf8Agsb+1t45vfCWp2fgrWvhr4a0rRvGF1YXUel3d1Eui74Ybt0EMki+W" +
                        "25VYkYORwa4eJs1ws/DHLaEakXVjiKjcbrmSftNXG90tVrY7+GMqxUPFDMsRKlJUpYemlJxfK2vZ3Sla" +
                        "zej0TPpP9hr9sDX/wBsbwR4+8Ya/wDAXW/gLN4K8Q3Hge20fxlNJcNfpBBHKZleWzsisiF9ksQVgjYG9" +
                        "s8fC+LPhpR4YxdGjTxkMUqlNTvFWtdtW+KWj3Turroj7zwj8Ta3FGErVqmDnhXTqOFpO97JO/wx1WzVn" +
                        "Z9Wfb1flB+shQAUAFABQAUAFAGReeH9B1HVdG13UNEtL7XPDv2j/hH9ZvLaGW7sPtkYhn+zzOpeLzUAV" +
                        "9hG4cHIoA16ACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAPz1/b" +
                        "S/ZA8b/ALS/xe/Yl+InhTxNpWg6Z+zF49tPiv4tsfEJuxPqFnb6ppV80Np9mhlXzStg4HmFRkjnrj9o8" +
                        "LfEvCZDlma4atTlKWMoOnFxtaLcZq8rtae8trs/FPFXwyxefZnlOJo1Ixjgq6qSUr3klKDtGyevuvey2" +
                        "P0Kr8XP2s+Df2oP2UfGXxz/AGmP2IPjd4e8R6ZpGgfsvax4l8R+LtJ1k3QvNQi1qLS44ls/IikTchsW3" +
                        "eYyjkYzzX6/wD4iYXKchzbA1ISlPGwpxi1a0eRzvzXaevMrWTPx3xA8OcVm+f5Rj6dSMYYKdSUk73kpq" +
                        "FuWya05Xe7R95V+QH7EFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAf/9kLQAABAAAA/////wEAA" +
                        "AAAAAAADAIAAABRU3lzdGVtLkRyYXdpbmcsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsL" +
                        "CBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhBQEAAAAVU3lzdGVtLkRyYXdpbmcuQml0bWFwA" +
                        "QAAAAREYXRhBwICAAAACQMAAAAPAwAAAFrBAAAC/9j/4AAQSkZJRgABAQEAlgCWAAD/7gAOQWRvYmUAZ" +
                        "AAAAAAB/+ERlkV4aWYAAE1NACoAAAAIAAcBEgADAAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAA" +
                        "GoBKAADAAAAAQACAAABMQACAAAAHAAAAHIBMgACAAAAFAAAAI6HaQAEAAAAAQAAAKIAAADCAJYAAAABA" +
                        "AAAlgAAAAEAAEFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cwAyMDExOjAxOjE4IDA5OjUxOjA2AAACo" +
                        "AIABAAAAAEAAAFioAMABAAAAAEAAACBAAAAAAAAAAYBAwADAAAAAQAGAAABGgAFAAAAAQAAARABGwAFA" +
                        "AAAAQAAARgBKAADAAAAAQACAAACAQAEAAAAAQAAASACAgAEAAAAAQAAEG4AAAAAAAAASAAAAAEAAABIA" +
                        "AAAAf/Y/+0ADEFkb2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMD" +
                        "xUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OF" +
                        "BQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA6AKADA" +
                        "SIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAA" +
                        "AAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkF" +
                        "VLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1x" +
                        "dXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITB" +
                        "TKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUp" +
                        "IW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1VJJJJSlgYWR9Z" +
                        "3fWTIqyqg3pLd/pu2tDdoj0HVWA+q+2z/DMf/4H+jV36w9WPSOk3ZrGtfa3a2ljpgveQxu7b+a2fUch/" +
                        "VjquX1bpDMzLrbXY572gskNcGu2eo1ri9zP3Ppp/tS9v3f0OLg/wlnux9z2/wBKuL/BdZJJJMXqSSSSU" +
                        "pJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//9D1VZ/WutYnR8T17/fY+W0UNPusd+6391jf8JZ/g03W+" +
                        "t4nRsT17/fY+W0UNPusd4D91jf8JZ/g1xvTOmdR+tfUX5+e8txWnbZY2QIB/oeH+6xv+Ft/9H/zaUr6x" +
                        "9Tys36r9OuynB12Xk23ODRDWis3VV1M/kMY5n0kXqw6l0von1f6h08FlWJTuttGoD7xU+Miv/Q2u9Rv9" +
                        "f8A0dnpK1/jBwaqOldPGOwVUY9ppZW0QAHMcW/+el0PQHU5f1dwQQLKn4tdb2OALTDBVaxzT9L6LmLQj" +
                        "kGPlsE+HiAnPjidjxcUf+g0ZYzk5nNG+EmEOGQ3Fer/AKbD6vfWHF63i72fo8muBkY5OrT+839+p/5j1" +
                        "rLzvrvQs76sZrerdIc4YgdodXGouP8AMX/6XFs+ix7v+Ls/S+lbZ131e+sON1vF3sHp5NUDIoJktJ/Ob" +
                        "+/U/wDMeoeY5eIj72E8WGX+Njl+7JlwZ5GRxZRw5Y/4uSP78UvXeuYnQ8H7blte+svFYbXtmSC7/COrZ" +
                        "9FjvzleqtZdUy6syyxoe0+ThuasH68dRy+m9IryMNzWX+u1rbHMa8tllpLqxaHsa/27Po/QWT1PrP1lf" +
                        "1fC6d03KFb8rFqsDXMr2l5bZZa4vfU/b7a03Hys8kRISjEHi+Y/5v5rXZOZhCRiRKUhw6RH7/yvbrK67" +
                        "9YMXoddFmVXZYy95ZNYadsDcXOD3M/6K5vI6x9dOhOFvV2Ny8Oz2uewMG0n/R20sZ6dv7nr0+k9Zf1of" +
                        "1e7Fx8rKzG53S73F+DZtYyyC3d+mZTXXtsY39FZ/L/0amw8leSPHKEscusJfP8A1Y/1mLNzlY5GMZCce" +
                        "ko/L/Wl/VfTUlytXU/rD0LDys36x215LPYzEpr2h7rTu9u+uuprK9v09/qfQ/7co49v+MLqmP8AtDHtr" +
                        "x6njfTRDGbm9vSbdXc/a78z7Taz/MUQ5SRs+5jEAeH3DL0Sl2iyHmQKHBMzI4uAD1xj3k9wuV+qH1hz+" +
                        "oY3UsvqVgezGIe1rGBoYza+x7W7fe/6P56P9V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa+WGdlrNzd35j/5yp" +
                        "Yv1FsNfSOtWBrXljNwa8S0xXYdr2/nMT44DHFnjMDjHtcMt/nlvGX9ZZLOJZMBiTwEZOIf3I/pR/qvWd" +
                        "C63idcwftuI17GB5rc2zbuDmwf8G6xn0XN/PWiuI6f9beoY31Uf1HJIyst2UcaiWtYwfo22N9RlAq9jG" +
                        "ts/l/mJY7P8YWbit6hTmVBrxurpBqkg8bQKbKf+3L037nMXxzhACXBxSOkpf1V33uBrhjOZI46iNYx8X" +
                        "r8/NpwMK/Nvn0sdjrHhokw0bvbMIfSep0dW6fT1DHDm1XTDXRILXOqe07C9n02fvLCr6v1236t9Tt6ph" +
                        "jHysNjhXZYz2WED+c9Czex3pu/P/o9n+DVSz63Z+F9VsHKfGR1HOdc0WvaA0Cux7XWOrq9NrnbPTYxn/" +
                        "XE0cpkJocJ9ft6G9eH3OL+7wrjzWMCzY9PuajpxcH+NxPaJLim4/wDjGdQ3MZl1WFwBFDTSSQf+s/Zv/" +
                        "ZhdD9Xc/qWf071up4pxMlr3MLS1zN4ERaKrPfX9LZ/YTcnLmEeIThMA0eCWoTjz8Z4TCcLFjjGhf//R7" +
                        "P61/Vk9VaM3EMZ9LNgY4+2ysEv9H3e2qzc79FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY9rhsLXA7PsmS327L" +
                        "Gu9ldn/AFu39L/O9qub+tX1VZ1RjszDa1ue1sPYYDb2gR6dk+1tzW/zVv8A1q39H/MpTe+tHTHdT6Jk4" +
                        "9bd17QLaByd9Z3hrf8AjG7qv+uLE/xedXZbi2dJsd+kpJuxwe9bzNjR/wAVc7/wZR+qn1oex7ekdVc4O" +
                        "DvSx7rJDg4HZ9kyd3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf1X6ul2RU+x7Lm4jpfTfrXkNb6Z37LdzvU/0f" +
                        "/Eq5y0oZMcuXmeHiPHjkf0ZtTmYzx5I54Di4RwZIj9KH/oLc+t31rNzn9F6TNjrD6ORawbi4u9hxcdo+" +
                        "m9/0LH/APW6/f8Azep9UPquej1Oy8szn5DQ1zAZbUyd3ogj6dm7+ds/7a/0lsPqn9UmdJY3NzWtf1BzY" +
                        "a0QW0tI/m6/3rXf4W3/AK1V+j/numQz5oRh7GD5P059csv+9ThwylP383z/AKEOmKP/AHzyn+Mj/kGr/" +
                        "wAMt/8APdyzx/4tOjf+FKv/AD1kLpfrLhdOzsGrG6iLfRsyKmMfToW2PPo1Ocf9G51npfR/wiouZ9Xj1" +
                        "M9UYLTk9IfX08VMMtLn7aKNrHe6za7KdTv3/mWf6NPw5QMIjUiayx0Gl5eGMFmXETmMrG+OXj+r9UnS+" +
                        "sdbLOgdRbY0OAxrXAHxa02Md/Ze3cuAz22u+pXTH8sZk3s+BcbXMH4PXpNzcTPoycMvbYx7XU5DWOG5u" +
                        "8bXNdt/m37XKhi9L6JgdKf0iyxl2I0Ofa3Iewna5xJfZ9Da1tv0H/vpnL5xiiAQTIZBPh/q8MoFfzGH3" +
                        "JEggAwML/rcXE4n12vx+q9AqzenXNyace5r7thna17X17rWfTr2vez2Pas/pnScTqGIy9v1jtpdtAsos" +
                        "ftdWQI9Pa69vtb+Y76C6fpv1f6D0jJu9A+/qDdgotsDwWDc411Vv91jPd7t/qrLZ9UPqv1Kyy2oXYm26" +
                        "3HFLXtDS+lzmWGllnrez2bv6n+DU2PPjjAwjKcYRPFHJwRlpP8ARlGX/SYsmGcp8ZEZSkOGUOOUfl/Sj" +
                        "KKbof1Trxep19XZ1Q55Zva4wHbiW+l7rvUs+gsf6lvY3pHXKS4C30i70zztDLGF3+f7V1n1e6R0vpWLb" +
                        "X02w3V2WF1jy8P9wAr2/ow1jdm1Yoq6CepV9Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67H13ei79Jucxn+j/A" +
                        "Ev6RNjmM/djIynpDhlwxh/NH3OGUfT/AFkywiAxSiBD5+KNymP1w4OLi9TmdDv6NT9TLf2xW63GszSxj" +
                        "awS/wBQsrcx1TgW7HMa17t2/wD9Jqbfq3jU1Oz/AKvdebTWQCfUs9OPzv091JZt/wCLuxV0ON0zoXTMb" +
                        "/m/Ywvxslj8ix+Q5paYfTTD3+zbbvtp9H02f4P/AEqo2/UH6tOyvT9e6u18uZji1hO0fuerXZfs/tp45" +
                        "iHFM8U4CcjP5Rkxzh/c/RWnl5cMBwwmYxEfm9vJCX99z8Tr3UOp/V/reJnObe/EoJbksAAcHb2w7YG1u" +
                        "/m/0T2s/SVp8e7oDfqb0ynrTXll1twpfUCX1uFt2+8Ob+bW13v/AJzf/obF0tHRug09Pv6RjhjKr6ybw" +
                        "182Frhs9d7yXWdva/6CVHROiO6WOi7W5WNjH3Me7c9rnE2+o57Nr6rXeo53s9NRnmMWvDGcI+4MlQ9BE" +
                        "eDg4h+7614wZNLlGcvbOP1eocXHx1/ivLO+r32Co53Qev1V45M/pLRW3/rllRdRa7/jMZbv1L67m9Ywr" +
                        "vtoDrcZ4b6zRtDw4bvc0ez1Gfn7P5CpD6ifVdzftTcq00au3C2sshs7/wBL6e7azb7v0q6Xp2DgYGK2j" +
                        "p9basf6Tdhndu/wheS51m799zkuYzY5YzGzknek5QGOUK6GX6SeXw5I5AdMcK1hGZnGd9h+i//S9VSSS" +
                        "SU859afqs3qbHZuE0N6g1vuZoG3tA/m3z7W3N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/bMloFlTXH062j6Ne" +
                        "1p9O25v59//AFun9H/O9AkkpSSSSSmn1jEszOm30VfzxbvokwPVrIux/d/x9dax6OgZwzMG6ws2ms3Z/" +
                        "BjKab76TW389n2nqWRb/wCg1K6RJWMXu+2eGuG5Xffh/l/hsGX2uMcV8VDbtxPPfVvo+Tg2VnKqsZbj4" +
                        "/2Y2bqDS/3Nfuq+z11ZVm5zPVa/N/Ss9a78+yyxNX9XpycO23FpdszM2/JcQ0ksudkOxi7T9J9PG9v+D" +
                        "/60uiSUkve457XR4uHi/dybf8//AA1kfa4I3fDYrir96Dx7+hda+wY2GKvdTTS2t7XVQx9V773Ntvsac" +
                        "rZXS3H+xNxfz/V9ZGf0DqxdnbdjhnjNqrc92uOLn2XU20bR/NZstZm/4f1PQ/wdXps6pJSH39f5v5pXX" +
                        "7ywezp8/wAsd/3XH6BgWYzr7rabcey1tTCyw4+39EHAek3p7Kq9rN/pepa31X1sq/0aDh9KzqmfV8WMA" +
                        "PTqnMyvcDtJo9D2/v8A6RbySgPucU/l21q6r2p/L/1NlHBwQviqxV1xX7sPm/w3K6j0r7b1FlttNd+Oz" +
                        "EvqAsAcBZY6nb7HfvVss96yW9H605+A26oE4pwXG1rqoikMbl+va5js27K3euyv07Psv2d/+k9Su3q0k" +
                        "7F7vCK4ar08d9/0UZPb4jfFd68NPGdHw3W4OLkV4bK6sazNvtzpZusa4ZWP6DWt/TOc99jHXer+h2Y1f" +
                        "857PSWH0XMzelY/2XFrwQOmCg2hzR9oNpx79n6Nr3+h6dFvqPyW7/Uy3/oLa/V9Xs0lMfd4jQjxcWms/" +
                        "wB7J+96f32KPt8Isy4eHXSP7sP3fV/3bzmL0N77Me27Hs2/bftGRVlGhwhuLbjV3V1YTW4388+ln+l/R" +
                        "eqtDpFGVhMbhHGbXjB2TY2xr27WB2Q9+LjtpH5rsa3f/wAF6fpLTSVfN7lHj4eHSq4uH9Ph4WfFwacPF" +
                        "eu/Df6PFb//2f/tGNBQaG90b3Nob3AgMy4wADhCSU0EJQAAAAAAEAAAAAAAAAAAAAAAAAAAAAA4QklNB" +
                        "DoAAAAAAJMAAAAQAAAAAQAAAAAAC3ByaW50T3V0cHV0AAAABQAAAABDbHJTZW51bQAAAABDbHJTAAAAA" +
                        "FJHQkMAAAAASW50ZWVudW0AAAAASW50ZQAAAABDbHJtAAAAAE1wQmxib29sAQAAAA9wcmludFNpeHRlZ" +
                        "W5CaXRib29sAAAAAAtwcmludGVyTmFtZVRFWFQAAAABAAAAOEJJTQQ7AAAAAAGyAAAAEAAAAAEAAAAAA" +
                        "BJwcmludE91dHB1dE9wdGlvbnMAAAASAAAAAENwdG5ib29sAAAAAABDbGJyYm9vbAAAAAAAUmdzTWJvb" +
                        "2wAAAAAAENybkNib29sAAAAAABDbnRDYm9vbAAAAAAATGJsc2Jvb2wAAAAAAE5ndHZib29sAAAAAABFb" +
                        "WxEYm9vbAAAAAAASW50cmJvb2wAAAAAAEJja2dPYmpjAAAAAQAAAAAAAFJHQkMAAAADAAAAAFJkICBkb" +
                        "3ViQG/gAAAAAAAAAAAAR3JuIGRvdWJAb+AAAAAAAAAAAABCbCAgZG91YkBv4AAAAAAAAAAAAEJyZFRVb" +
                        "nRGI1JsdAAAAAAAAAAAAAAAAEJsZCBVbnRGI1JsdAAAAAAAAAAAAAAAAFJzbHRVbnRGI1B4bEBiwAAAA" +
                        "AAAAAAACnZlY3RvckRhdGFib29sAQAAAABQZ1BzZW51bQAAAABQZ1BzAAAAAFBnUEMAAAAATGVmdFVud" +
                        "EYjUmx0AAAAAAAAAAAAAAAAVG9wIFVudEYjUmx0AAAAAAAAAAAAAAAAU2NsIFVudEYjUHJjQFkAAAAAA" +
                        "AA4QklNA+0AAAAAABAAlgAAAAEAAgCWAAAAAQACOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNB" +
                        "A0AAAAAAAQAAAB4OEJJTQQZAAAAAAAEAAAAHjhCSU0D8wAAAAAACQAAAAAAAAAAAQA4QklNJxAAAAAAA" +
                        "AoAAQAAAAAAAAACOEJJTQP1AAAAAABIAC9mZgABAGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABA" +
                        "DIAAAABAFoAAAAGAAAAAAABADUAAAABAC0AAAAGAAAAAAABOEJJTQP4AAAAAABwAAD//////////////" +
                        "///////////////A+gAAAAA/////////////////////////////wPoAAAAAP///////////////////" +
                        "/////////8D6AAAAAD/////////////////////////////A+gAADhCSU0EAAAAAAAAAgABOEJJTQQCA" +
                        "AAAAAAEAAAAADhCSU0EMAAAAAAAAgEBOEJJTQQtAAAAAAAGAAEAAAADOEJJTQQIAAAAAAAQAAAAAQAAA" +
                        "kAAAAJAAAAAADhCSU0EHgAAAAAABAAAAAA4QklNBBoAAAAAA0kAAAAGAAAAAAAAAAAAAACBAAABYgAAA" +
                        "AoAVQBuAHQAaQB0AGwAZQBkAC0AMQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABYgAAA" +
                        "IEAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAAB" +
                        "mJvdW5kc09iamMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAA" +
                        "AAAAABCdG9tbG9uZwAAAIEAAAAAUmdodGxvbmcAAAFiAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAA" +
                        "AAAAAVzbGljZQAAABIAAAAHc2xpY2VJRGxvbmcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlna" +
                        "W5lbnVtAAAADEVTbGljZU9yaWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZ" +
                        "VR5cGUAAAAASW1nIAAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAA" +
                        "AAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJnaHRsb25nAAABYgAAAAN1cmxURVhUA" +
                        "AAAAQAAAAAAAG51bGxURVhUAAAAAQAAAAAAAE1zZ2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABA" +
                        "AAAAAAOY2VsbFRleHRJc0hUTUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWduZ" +
                        "W51bQAAAA9FU2xpY2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VTbGljZ" +
                        "VZlcnRBbGlnbgAAAAdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51bQAAABFFU2xpY2VCR0NvbG9yVHlwZ" +
                        "QAAAABOb25lAAAACXRvcE91dHNldGxvbmcAAAAAAAAACmxlZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b" +
                        "21PdXRzZXRsb25nAAAAAAAAAAtyaWdodE91dHNldGxvbmcAAAAAADhCSU0EKAAAAAAADAAAAAI/8AAAA" +
                        "AAAADhCSU0EFAAAAAAABAAAAAQ4QklNBAwAAAAAEIoAAAABAAAAoAAAADoAAAHgAABswAAAEG4AGAAB/" +
                        "9j/7QAMQWRvYmVfQ00AAf/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTE" +
                        "xUTExgRDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4OD" +
                        "g4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACE" +
                        "QEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAA" +
                        "AEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiM" +
                        "zRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1V" +
                        "mZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRF" +
                        "KGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVx" +
                        "NTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMi" +
                        "rKqDekt3+m7a0N2iPQdVYD6r7bP8Mx//gf6NXfrD1Y9I6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5f" +
                        "VukMzMuttdjnvaCyQ1wa7Z6jWuL3M/c+mn+1L2/d/Q4uD/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkkl" +
                        "KSSSSUpJJJJSkkkklKSSSSUpJJJJT//0PVVn9a61idHxPXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGx" +
                        "PXv99j5bRQ0+6x3gP3WN/wln+DXG9M6Z1H619Rfn57y3FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzf" +
                        "qv067KcHXZeTbc4NENaKzdVXUz+QxjmfSRerDqXS+ifV/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2" +
                        "ekrX+MHBqo6V08Y7BVRj2mllbRAAcxxb/56XQ9AdTl/V3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+Ww" +
                        "T4eICc+OJ2PFxR/6DRljOTmc0b4SYQ4ZDcV6v8ApsPq99YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u" +
                        "9Czvqxmt6t0hzhiB2h1cai4/wAxf/pcWz6LHu/4uz9L6VtnXfV76w43W8Xewenk1QMigmS0n85v79T/A" +
                        "Mx6h5jl4iPvYTxYZf42OX7smXBnkZHFlHDlj/i5I/vxS9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/O" +
                        "V6q1l1TLqzLLGh7T5OG5qwfrx1HL6b0ivIw3NZf67Wtscxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3" +
                        "TcoVvysWqwNcyvaXltllri99T9vtrTcfKzyREhKMQeL5j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh" +
                        "10WZVdljL3lk1hp2wNxc4Pcz/orm8jrH106E4W9XY3Lw7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXH" +
                        "ysrMbndLvcX4Nm1jLILd36ZlNde2xjf0Vn8v/RqbDyV5I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9" +
                        "aX9V9NSXK1dT+sPQsPKzfrHbXks9jMSmvaHutO727666msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9" +
                        "NEMZub29Jt1dz9rvzPtNrP8xRDlJGz7mMQB4fcMvRKXaLIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy" +
                        "+pWB7MYh7WsYGhjNr7Htbt97/o/no/1X+suT1G63pnU6vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw" +
                        "19I61YGteWM3BrxLTFdh2vb+cxPjgMcWeMwOMe1wy3+eW8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1" +
                        "zB+24jXsYHmtzbNu4ObB/wbrGfRc389aK4jp/1t6hjfVR/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+" +
                        "Yljs/xhZuK3qFOZUGvG6ukGqSDxtApsp/7cvTfucxfHOEAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82n" +
                        "Awr82+fSx2OseGiTDRu9swh9J6nR1bp9PUMcObVdMNdEgtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2" +
                        "OFdljPZYQP5z0LN7Hem78/+j2f4NVLPrdn4X1Wwcp8ZHUc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRym" +
                        "Qmhwn1+3ob14fc4v7vCuPNYwLNj0+5qOnFwf43E9okuKbj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1" +
                        "dz+pZ/TvW6ninEyWvcwtLXM3gRFoqs99f0tn9hNycuYR4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9W" +
                        "T1VozcQxn0s2Bjj7bKwS/0fd7arNzv0Vn9i7/SU5n1T+s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2" +
                        "f8AW7f0v872q5v61fVVnVGOzMNrW57Ww9hgNvaBHp2T7W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3Xt" +
                        "AtoHJ31neGt/wCMbuq/64sT/F51dluLZ0mx36Skm7HB71vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHu" +
                        "skODgdn2TJ3e71d3sqe/wD4qz9J/O5/1h6DcM5/Vfq6XZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnL" +
                        "Shkxy5eZ4eI8eOR/Rm1OZjPHkjngOLhHBkiP0of+gtz63fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qs" +
                        "f8A9br9/wDN6n1Q+q56PU7LyzOfkNDXMBltTJ3eiCPp2bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS" +
                        "0j+br/etd/hbf8ArVX6P+e6ZDPmhGHsYPk/Tn1yy/71OHDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/" +
                        "wA93LPH/i06N/4Uq/8APWQul+suF07OwasbqIt9GzIqYx9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1Rgt" +
                        "OT0h9fTxUwy0uftoo2sd7rNrsp1O/f+ZZ/o0/DlAwiNSJrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6" +
                        "B1FtjQ4DGtcAfFrTYx39l7dy4DPba76ldMfyxmTez4Fxtcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc12" +
                        "3+bftcqGL0vomB0p/SLLGXYjQ59rch7CdrnEl9n0NrW2/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCAD" +
                        "Awv+txcTifXa/H6r0CrN6dc3Jpx7mvu2GdrXtfXutZ9Ova97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZA" +
                        "j09rr2+1v5jvoLp+m/V/oPSMm70D7+oN2Ci2wPBYNzjXVW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte" +
                        "0NL6XOZYaWWet7PZu/qf4NTY8+OMDCMpxhE8UcnBGWk/wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/" +
                        "VOvF6nX1dnVDnlm9rjAduJb6Xuu9Sz6Cx/qW9jekdcpLgLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDd" +
                        "XZYXWPLw/3ACvb+jDWN2bViiroJ6lX1Srp2ZZZ1Wl5pYzYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2" +
                        "OYz92MjKekOGXDGH80fc4ZR9P8AWTLCIDFKIEPn4o3KY/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/A" +
                        "FCytzHVOBbscxrXu3b/AP0mpt+reNTU7P8Aq915tNZAJ9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC" +
                        "/GyWPyLH5Dmlph9NMPf7Ntu+2n0fTZ/g/8ASqjb9Qfq07K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzx" +
                        "TgJyM/lGTHOH9z9FaeXlwwHDCZjER+b28kJf33PxOvdQ6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RP" +
                        "az9JWnx7ugN+pvTKetNeWXW3Cl9QJfW4W3b7w5v5tbXe/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWu" +
                        "Gz13vJdZ29r/oJUdE6I7pY6LtblY2Mfcx7tz2ucTb6jns2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH" +
                        "7vrXjBk0uUZy9s4/V6hxcfHX+K8s76vfYKjndB6/VXjkz+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOt" +
                        "xnhvrNG0PDhu9zR7PUZ+fs/kKkPqJ9V3N+1NyrTRq7cLayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx" +
                        "/pN2Gd27/CF5LnWbv33OS5jNjljMbOSd6TlAY5QroZfpJ5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1" +
                        "p+qzepsdm4TQ3qDW+5mgbe0D+bfPtbc3/A3f9at/R/zM/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07b" +
                        "m/n3/8AW6f0f870CSSlJJJJKafWMSzM6bfRV/PFu+iTA9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppv" +
                        "vpNbfz2faepZFv/AKDUrpElYxe77Z4a4bld9+H+X+GwZfa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZu" +
                        "oNL/c1+6r7PXVlWbnM9Vr839Kz1rvz7LLE1f1enJw7bcWl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6J" +
                        "JSS97jntdHi4eL93Jt/z/8ADWR9rgjd8NiuKv3oPHv6F1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLc" +
                        "f7E3F/P9X1kZ/QOrF2dt2OGeM2qtz3a44ufZdTbRtH81my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7O" +
                        "nz/ACx3/dcfoGBZjOvutptx7LW1MLLDj7f0QcB6Tensqr2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9Oqcz" +
                        "K9wO0mj0Pb+/wDpFvJKA+5xT+XbWrqvan8v/U2UcHBC+KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCw" +
                        "BwFljqdvsd+9Wyz3rJb0frTn4DbqgTinBcbWuqiKQxuX69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8I" +
                        "rhqvTx33/RRk9viN8V3rw08Z0fDdbg4uRXhsrqxrM2+3Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9J" +
                        "YfRczN6Vj/ZcWvBA6YKDaHNH2g2nHv2fo2vf6Hp0W+o/Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn7" +
                        "3p/fYo+3wizLh4ddI/uw/d9X/dvOYvQ3vsx7bsezb9t+0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0Ok" +
                        "UZWExuEcZteMHZNjbGvbtYHZD34uO2kfmuxrd//AAXp+ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/" +
                        "o8Vv//ZOEJJTQQhAAAAAABVAAAAAQEAAAAPAEEAZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwAAAAE" +
                        "wBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoAG8AcAAgAEMAUwA1AAAAAQA4QklNBAYAAAAAAAcABwAAA" +
                        "AEBAP/hDdBodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZ" +
                        "D0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zO" +
                        "m1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvM" +
                        "TItMTc6MzI6MDAgICAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZ" +
                        "y8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9I" +
                        "iIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0c" +
                        "DovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb" +
                        "20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kY" +
                        "y9lbGVtZW50cy8xLjEvIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9za" +
                        "G9wLzEuMC8iIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXA6Q" +
                        "3JlYXRlRGF0ZT0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxM" +
                        "S0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wOk1vZGlmeURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtM" +
                        "DY6MDAiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MzQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N" +
                        "0MxOTgiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MzM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N" +
                        "0MxOTgiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwM" +
                        "UIyQTAyRTQ3QzE5OCIgZGM6Zm9ybWF0PSJpbWFnZS9qcGVnIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzI" +
                        "iBwaG90b3Nob3A6SUNDUHJvZmlsZT0ic1JHQiBJRUM2MTk2Ni0yLjEiPg0KCQkJPHhtcE1NOkhpc3Rvc" +
                        "nk+DQoJCQkJPHJkZjpTZXE+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2d" +
                        "DppbnN0YW5jZUlEPSJ4bXAuaWlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2d" +
                        "Dp3aGVuPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZ" +
                        "SBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiLz4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkI" +
                        "iBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjM0NEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4I" +
                        "iBzdEV2dDp3aGVuPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50P" +
                        "SJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4NCgkJCQk8L3JkZ" +
                        "jpTZXE+DQoJCQk8L3htcE1NOkhpc3Rvcnk+DQoJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJER" +
                        "j4NCjwveDp4bXBtZXRhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/eHBhY2tldCBlbmQ9J3cnP" +
                        "z7/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwT" +
                        "VNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0A" +
                        "AAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kA" +
                        "AACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzA" +
                        "AAEDAAAACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0A" +
                        "AAAAENvcHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc" +
                        "1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogA" +
                        "AAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogA" +
                        "AAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAF" +
                        "klFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAt";
                    resourceString += "IHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR" +
                        "0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0a" +
                        "W9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpb" +
                        "iBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UA" +
                        "APtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3A" +
                        "DsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLA" +
                        "NAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDA" +
                        "YsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEA" +
                        "o4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA" +
                        "+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3B" +
                        "YYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B" +
                        "4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPC" +
                        "eUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyOD" +
                        "KcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD" +
                        "88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE" +
                        "2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF" +
                        "2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG" +
                        "9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYI" +
                        "MQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3J" +
                        "icmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRL" +
                        "AUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqM" +
                        "mMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFO" +
                        "UI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQ" +
                        "KZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLS" +
                        "JFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7U" +
                        "QZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4W" +
                        "gdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY" +
                        "5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gb" +
                        "bluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gRe" +
                        "G54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg" +
                        "7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j" +
                        "56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvn" +
                        "ByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEq" +
                        "Tepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5t" +
                        "vC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOx" +
                        "UvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1" +
                        "EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4" +
                        "+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9" +
                        "DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////2wBDAAEBAQEBAQEBAQECA" +
                        "QEBAgIBAQEBAgICAgICAgIDAgMDAwMCAwMEBAQEBAMFBQUFBQUHBwcHBwgICAgICAgICAj/2wBDAQEBA" +
                        "QICAgQDAwQHBQQFBwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC" +
                        "Aj/wAARCACBAWIDAREAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAA" +
                        "gEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJ" +
                        "icoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZm" +
                        "qKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAH" +
                        "wEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExB" +
                        "hJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVV" +
                        "ldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPEx" +
                        "cbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/igAoAKACgAoAKAGu" +
                        "6Ro8kjiOOMF5JHICqoGSST0AoA/Fbxl/wAF0P2VvC/xJu/Bul+EvE3jLwjpl0+lX/xJ8Pw6d9jlKOUM9" +
                        "nb3FzHLNBnkO2wkZKqRjMc6NFSZ+wfgnxp4X+I/hDw1498E6xF4g8JeL7K38Q+HdasifLuLS6jEsbgMA" +
                        "ynB5VgCpyCAQRVmbR1FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAYPirQYfFXhjxH4XuLl7O38SWF5oM93a482JLy3e3Z03c" +
                        "blD5Ge9AH8RPjP/AIJcftveFPiTe/Dmy+Bmq+L9l0bHSPGnhlYpdBvYGkKxXAvpHSGBHUbis7IyZw4U1" +
                        "jys6lUR/YJ+yF8FdU/Z2/Zp+D3wY13U49X13wNpKWWvX1mS0BvrmeS+uEhZlQtFHLOyRsVBKgEgHitUj" +
                        "nk7s+kKZIUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFA" +
                        "BQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAH+ev8A8FEP2sfGf7VP7UfxP8W3Xi+91" +
                        "T4d+HNbvtA+EGiG4lFjYaNp9wbS2mt4AxSOS4WITSuOSzHnAGP9oPBXw6wvD3D+Hoqko15wUqrtq5SV2" +
                        "m92o35Utkkf4peN3iPiuIuIcRWdVyoQm40lfSMIuyaWycrcze92f1P/APBDj4ufFP4vfsR/bPipr154o" +
                        "u/BHizVvh/4O1/xBLNcXk+h2mnabeQrJPOzPKIZruaFCT8qIqDha/z5+llw3l+W8V8uEgoKpSjOSjZJT" +
                        "cpp2S0V1FN922+p/od9EjiXMcz4T5sXNzdOrKEJSu24KMGrt6uzk0uySXQ/Ymv5lP6fCgAoAKACgAoAK" +
                        "ACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACg" +
                        "CC6uraytri9vbhLSztEe6u7u6dY4ooo1Ls7s5AVVAJJJwBQB8sftdfGzT/hj+xt8cvjh4a1iG5h07wVq" +
                        "Ov+CNdspVaCe71KwMGlyxyKcMsk1xEVI6g8V974W8PLNuI8FhGrxnVjzf4U7y/8lTPgPFXiJ5Tw3jsWn" +
                        "aVOlLl/xNWj/wCTNH+crX+4J/hif3b/AAP1Wz/4J8f8EkPCPjt9GhuNZ+HvgBfiddaNqG+NLrxJ4mP9q" +
                        "x21y64fH23UUgYg5CjC8AV/kXxZh5cZ+JFXD8zUatf2d10p0/dbXT4YuS89z/X/AISxEOCvDWliOROdK" +
                        "h7Sz61KnvJPr8c1F+Wx9PfsVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1j" +
                        "BOFCyKDwrq6L8D4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf6B4U+K2W8W5asThnaaspwb96Euz7p/" +
                        "Zls12aaX2HX5mfpwUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFAEF1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+Uj/gpz/" +
                        "wAFOtS/aA1XUP2a/wBm/V3h+ErXA0Pxf400+TyZfFtyZBF9mgcldunBuCSR555P7v7+UpG8IW1Z+kn/A" +
                        "AWu1WH4Z/8ABNXxB4G0uYwWWv6l4P8AhrbDB3Pb2N7FqYXO1sZXTBnkZHGTnB/pz6JOWLEcaUZtfwoVJ" +
                        "f8AkvJ/7d/W5/Lv0u80eH4KrQTt7WdOP/k3P/7b/Wx/Fp8OPCUvj74h+A/AsLOs3jXWdL8JRNBjeG1K+" +
                        "iswVyCM5k44r/VPPMyWDwVbEPanCUv/AAFN/of5Q5HlrxuNo4db1Jxj/wCBNL9T+0H/AILt61qPhT/gn" +
                        "vqXh7QNPuDo/ifxP4X8Ia0NNjleC1062km1WNpygYJF59hCgZiBvZBnJAP+XP0RcLDEcaRqVJLmhTqSV" +
                        "93J2i7d3aUnp0Tex/qh9L/F1MNwVKnTi+WdWnF22UVeSv2V4xWvVpb2P5Ef2Yf2nviz+yP8WdD+L/wg1" +
                        "w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP9JuPuAcu4ky6eDxkLweqa+KMukovo19zWj" +
                        "um0f5o+H/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARP" +
                        "h3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT" +
                        "4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAFAHKeOPHPg/4aeE9c8d+PvEdp4S8H+Gof7" +
                        "Q13xFrkqwW1tFuEYLM3dmYKqjlmIABJAoBI8j+A37V/7PP7TkGuTfAz4oWXj1/DbImu2FvDe2N7bLIzI" +
                        "kj2upwW03lsVIWQJtOODSTuNxaPoemIKACgAoAKAPgbxH/wVC/YQ8H/ABV1z4K+LP2gbTw18RvDWqTeD" +
                        "Nf0nXtG8S2lpaajbzGCSOXUZ9OWyVVcYMhn2d92K/YsD4A8X4nLoY6jgnOhOKnFqVNtxaumoqfPt05b+" +
                        "R+NY76QXB+FzGeBrY1Qrwk4SThUSUk7NObhyb9ea3mfesUsU8UU8EqzQTKssM0TBkdGGQykcEEdDX4/K" +
                        "LTs9z9jjJNXWqZJUlBQAUAFABQB8U/8FGPir4y+Cf7En7RPxK+H2qPofjPQNDW10DW7YlZrKbUr+30o3" +
                        "ELD7ssS3JeNuzAHtX6p4I8PYXNeK8FhcTHmpSneS6NRTlZ+TtZ+R+U+OPEWKynhPHYrDS5asYWi+qcpK" +
                        "N15q915n8hP/BK34hePvFn/AAUe/ZwuvFPjjWPEtzqurapLqlx4g1O9vJLlv+Ec1A5la5kcueBy2a/0o" +
                        "+kJk2Dw3A+OVKlCCjGNuWKVvfjtZaH+Z30d86xmJ46wLrVpzcpyvzSbv+7lvd6n93Gt63o3hrRtV8ReI" +
                        "tVttC0DQrabWNb1vWJo7a0s7S2jM0s00sxVEjRFLMzEAAZNf5Bn+w588fBH9sv9mP8AaO1/W/CvwW+L2" +
                        "neOPEnh6NrzU9Et4r6zufIR1jaaFNRgtzPErMoaSLcoJGTyKSaZTi0fTdMkKACgAoAKAPl34zftqfst/" +
                        "s9+LNI8DfGL4y6Z4L8W60kdzaaFcR3t3PFDLnZJc/2fBOLaNtp2vOUU9jSbRSi2fS+n6hYatYWWq6Vew" +
                        "6npepwx6hpupafIk0FxBMgkjkjkjJV0dSCrAkEHIpklugAoAKACgAoAKACgAoAgurq2sra4vb24S0s7R" +
                        "Huru7unWOKKKNS7O7OQFVQCSScAUAfyf/8ABUb/AIKjXPxwudb/AGe/2e9be0+DVo7af458c6ezRy+K5" +
                        "Y2w0EDDBXTlI5PWc8n93gPlKR0U6dj8mv2bvAHif4nfHj4TeC/CPhqfxbrGq69pbnRdPi80vawXkc9w8" +
                        "mcKsUcSM8jsQqqCSQBUouT0P6SP+Dh6eeH9if4bxxTPFHdfE/RILlI2KiRB4W8RShWA6jcitg9wD2r+x" +
                        "PoVwT4qr3W2Gn/6cpH8Y/Tam1wpQSe+Jh/6bqn8tH7E1tBeftmfsj2l1Ctxa3XxO8BW1zBKAyPG/iqxV" +
                        "lYHqCDg1/oJ4qzceF8yadmsNW/9NyP89PCeClxTliauniaP/pyJ/or+MPB/hb4geFtf8E+NtAtfFPhHx" +
                        "TazaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmv8TMszPEYLEQr0JuFSDTjJOzTWzTP9wMzyzD43DzoV4KdKa" +
                        "alFq6ae6aP4if8AgqH/AMEvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+" +
                        "4/7zBf/AFb8AfH7D8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suu" +
                        "z13+B/2Yf2nviz+yP8AFnQ/i/8ACDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePu" +
                        "Acu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7av" +
                        "wm/be+E1p8Rfh1djTdf00Raf8RPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiV" +
                        "eDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAfl9/wV3" +
                        "8DeNviX+yFP4D+Hnhy98XeLvE/inw7p+k+HPD8Lz3N0wnkmICJ/CoQuzHhQCxIAzUz2LpvU+AP+CTn7C" +
                        "X7XP7NP7TGqfEL4yfC6TwL4H1Twnqnhp9SGveHb7zbq5vrC6hhe30rULmbnyC3zJgFeSDipjFpl1Jpo/" +
                        "pArQxCgAoAKACgD/O0/4KJf8n1/taf9j74j/wDTjJX+13gp/wAkjlv/AF4p/wDpKP8AETxu/wCSvzL/A" +
                        "K/1P/Smf3XfsTXNxefsZfsj3l5O91d3Xwx8A3N1dXLs8kkj+FbFmZmYkliTkk9a/wAjvFWEY8UZkkrJY" +
                        "mt/6ckf6+eFFSUuFsslJ3bw1H/03E+na+CPvwoAKACgAoA/OL/grj/yjo/ae/7BWl/+pHp1fuH0bv8Ak" +
                        "t8B/il/6bmfhn0lf+SHzD/DH/05A/kh/wCCR3/KRf8AZh/7Cuqf+o5qNf6PfSR/5IjH/wCGP/pyB/mx9" +
                        "Gr/AJLjL/8AFL/03M/sU/4KV6J4h8S/sQfHnw54T0u71vxJr9npOiaLouhRSz3l5PdeIbCBYIo4AXdpN" +
                        "23aBznFf43y2P8AZyG5+Jn/AATV/wCCen7Z3wO/bA+DXxf+Jnwfm8G/DjR4tfPiPWZ9d8NyyRRah4X1G" +
                        "yt1ls7PUZbk7riaIFfKJU4LAAEiIxdzWc00f1NVqYBQAUAFABQB/I/+29+w1+1r+01+23+0t4y+Dvwfv" +
                        "/GPhe11bTdMXxJf32laTZzPb+HtPiMdvNrt3ZrN5eArCIttxg4xispRbZ0Rkkj+j/8AYq+H/jn4U/sp/" +
                        "Av4cfErTG0Xxz4M0G30HxFpEt1bXptpYHdVi86zlnicKm0DY5AHA6VpHYxk9T6hpkhQAUAFABQAUAFAE" +
                        "F1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+T//AIKjf8FRrn44XOt/s9/s9629p8GrR" +
                        "20/xz4509mjl8VyxthoIGGCunKRyes55P7vAfKUjop07H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0" +
                        "fR9PAyxxueSR2wscUagvJI5CooLMQBUJGjdj+1H9gH9gHwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6" +
                        "f5gDR2kbAZOA0rAO4GERNoxsc053Pj3/g4L0ObVv2GvDF/Fu2eGPiHoGuXOxQRsk0bWdNG4kjA3XY59c" +
                        "Cv62+hni1T4tqRf26E1/wCTU5f+2n8h/TTwjqcI05L7GIg//JKkf/bj+S79lTxHF4P/AGof2bvFs7pFB" +
                        "4W8feD/ABHNJchmjVLHxDaXJLhCCVATnBzX+jXiHgXieH8dRW86FWP3wkj/ADd8OscsLxBgKz2hXpS+6" +
                        "cWf6Tlf4Yn+7ZzfjDwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8R" +
                        "gsRCvQm4VINOMk7NNbNM4czyzD43DzoV4KdKaalFq6ae6aP4if+Cof/AAS88U/sWeKbj4kfDe3uvFP7N" +
                        "Him68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/9W/AHx+w/FOHWGxLUMfBarZVEvtR8/wCaPTdab" +
                        "f5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307" +
                        "WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/4gZlw1mUMb" +
                        "gp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+" +
                        "ZBJtYwThQsig8K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb9" +
                        "6Euz7p/Zls12aaX2HX5mfpwUAfnt/wVB/ac8f8A7JX7IHjf4r/C1baLx9Le6X4P8OatqsKXMOnS6nc+W" +
                        "915EoZJXjjVvLVwU3kFgygq37R4A8BYPiPiWlhMXf2NpSkk7OXKvhutUm7Xa1tezT1X4p9IHj/G8N8M1" +
                        "sZhLe2vGMW1dR5n8Vno2leyel7XTWj/ABr/AOCN37eX7W/7SP7XGo/Dz43fGi+8feDYfB+s+IotC1Cy0" +
                        "i3jF7bXunxRS7rG0gfKrM4xuxz0r+nfpO+EHDeRcNxxOBwqpVXVjG6cno1K61k10R/Lv0XfGLiXPeJZY" +
                        "bH4qVWkqM5WaitU4pPSKfVngH/BSH/gpD+218Fv22vj58MPhh8fNQ8JeA/CWoafZ+HfDtnp+hzR2sc2h" +
                        "2V06q91ZSyHMkrN8zHrX2Xgd4HcKZrwpg8VisHGpWqRk5Scpq9pyXSSWyXQ+M8dPHTizKuLMZhMJjJU6" +
                        "NOUVGKjB2vCL6xb3b6nxB/w9x/4KL/9HPar/wCCvw5/8rq/V/8AiW7gj/oAj/4FU/8Akz8l/wCJleOP+" +
                        "hhL/wABp/8AyB6B8P8A/gtb/wAFD/A2rQ3+ofGG0+I2nI/nT+G/iB4f0Wa0mPAw0umW9jdKOOiTr+deP" +
                        "nP0V+CsXTcY4Z0pfzQnNNfKTlH74s9nJfpW8b4OopSxSrR/lnCDT+cVGX3SR+7H7Mv/AAVU8C/8FBPCt" +
                        "18BLzxxqP7Gf7UWtxhfAvifw7LYahpmo6jGhCCybVoHjkLt9+xnQOynEUzONy/yNx59HrF8GYhZhGlHM" +
                        "Mvj8cZJxlGPXm5XdW6Ti7J6yilo/wCv+AfpE4PjTDvLpVpZfmEl7kouMoyl05eZWd+tOSu1pGTeq/G79" +
                        "qP9tX/grN+yN8Y/EnwY+K37Rmp22taMReaPrVlpXh42Gs6XK7Lb39m76aC0MoQ9QGVgyMAysB/Tvh/4V" +
                        "+HPEmWU8bhMDFwlo05TvGS3jL3919zVmtGj+XfELxW8SOGs0qYHGY6SnHVNRhaUXtKPubP707p6pn5Ee" +
                        "PPHXiz4neM/E/xD8d6y/iHxl4zvbjxH4n125SGOS7vbqQyyyssCRoCzEnCqB7V/SWUZRhsBhaeGw8eSl" +
                        "TSjFa6JbLW7P5ozjN8TmGKqYnES56tSTlJ6at6t6WX3H2b4O/4Kh/t6fD/wh4V8B+D/ANorUtE8I+CdN" +
                        "sfCPhbRYNN0CRLPTtNtUs7aBWmsHdhHFGqgsxJxySa/L8z8AOD8biamIrYGMqlSTlJ809ZSd29JW1bvo" +
                        "fqWV/SC4xwWGp4ehjpRpU4qMVyw0jFWS1jfRK2p/W5/wSO/aq+LP7W/7JR+IXxsMd34z8J+I9T+Hc3iy" +
                        "G1jshrdrY2NjfJfPFAkcIfN40LmJQhaMnAORX+cP0kPDzLuG+I/q2BuqU6cZ8t78jbkuW7u7e7dX1s/Q" +
                        "/0n+jV4i5lxLw39Zx9nVp1JQ5rW50lF81lZX95xdla8e9z89v28/wDgvBp/w88Q658KP2O9I0/xprejv" +
                        "Jpev/GnxOr3Ojw3CqUdNKtInT7S0bH/AI+JWEW5SFjlQh6/aPCD6Ic8bRhi86lKnCWsaUdJNf35a8t/5" +
                        "V71nrKL0PxTxi+mDDA154PJYxqTjpKrLWKf9yOnNb+Z+7daRktT8JfFX/BT/wDb+8Y6nLq2q/tUeKrG5" +
                        "lLOYPCt1DodqN2OFt9GitYgBjj5f61/XOXeAfBuFp8kMvpNf3k5v75Nv8T+QMx+kBxniqnPPMaqf91qC" +
                        "+6CivwPfvgN/wAFr/26Pg5q1ifFXj2H45+EYnQX3hf4oWsEs7xfdfytSs0hu0kI+60jyKCASh5B+O4w+" +
                        "itwlmdN+yovDVOkqbdvnB3jb0Sfmj7Tg76V3F+V1F7assTS6xqJX+U1aSfq2vJn9Y37Dv7e/wAGf26vA" +
                        "Fz4m+H0r+HPGvhwRQ+P/hfrk0b6lpMso+WRWQKLi1kIIjnVQDghlRgVH+dPix4PZpwjjFSxPv0p/BUS9" +
                        "2Xl5SXWL+Ta1P8AR3wk8ZMr4vwTq4b3KsLc9Nv3ovv/AHovpJL1Sehwf/BXH/lHR+09/wBgrS//AFI9O" +
                        "r2Po3f8lvgP8Uv/AE3M8f6Sv/JD5h/hj/6cgfyQ/wDBI7/lIv8Asw/9hXVP/Uc1Gv8AR76SP/JEY/8Aw" +
                        "x/9OQP82Po1f8lxl/8Ail/6bmf2m/tyfHTxJ+zV+yb8b/jd4OsbfUPFfgXSVufDkGrKz2y3t7ewabDLK" +
                        "ikF1ia4EhTI3bcZGc1/lr4TcJUM94jwmBrNqnVl71t7JOTS7Xta/S9z/VTxc4vr5Dw3i8fRSdSlD3b7X" +
                        "bUU33s3e3W1j+bb/gmB/wAFGv20vj9+3l8Evhj8W/jpe+L/AAB4wfxRN4h8Lzabodrbzmz8IatqcAzY2" +
                        "ULoI54EcBWH3QOnFf3L4++CHC2TcIYvFYPCKnWp+z5Zc021erCL3k07pta9z+E/o/eOXFWc8Y4TCYzGO" +
                        "pRqe05o8sEnalOS2imrNJ6dj+j79sz9s/4RfsR/CmT4l/FG5kv77UpG0nwN4F0Zo/7T13UFUOYoBIQqR" +
                        "xqQ00zfKi46syK38PeF/hdmXFeY/VcIrJazm/hhHu+7eyS1b8k2v7o8UvFPLOE8u+tYtttu0IL4py7Ls" +
                        "lvJvRLu2k/5Kfj1/wAFwv24fi7qd6ngbxVZfAXwjI7Cy8P/AA7s7ea9EXIXz9S1KOadpADy0Pkqf7or/" +
                        "R3g/wCifwnltNe3pvFVesptpX8oRaVvJ8z8z/NrjH6WvFuZ1H9XqLC0ukYJN285yTd/Ncq8j44h/wCCg" +
                        "37c0GpHVU/a3+ITXRQQ+VN4r1iS2wrBv+PeScw545OzJHGcE1+my8GeEnT5P7NoW/69xv8Afa/4n5fHx" +
                        "q4uVTn/ALSxF/8Ar5K33Xt+B96fs7f8F3v2xPhVqenWfxen079oTwTG6RX9n4ktbbStbjtx1+zajpUMa" +
                        "l++64hmz046j8g42+iJwzmNOUsGpYWr0cW5Qv5xk3p/hlE/YuCPpg8UZdUjHGuOLpdVJKM7eU4pa/4oy" +
                        "P6yP2Tv2tPhD+2X8J7P4tfB/Up5dME7aJ4j8O63EsGp6NqccSTPaXUaM67gsisrozIykEMeQP8AOjxF8" +
                        "Ocy4XzF4PGRXNa8ZLWMo7KUX8mrNJp7o/0f8OPEjLOKctWMwUny3tKL0lGW7jJarZp3Taa2Z/Nn/wAFS" +
                        "f8AgqT+2F8Mv2wviR8GPgx8SD8K/AnwrOn6FaWmhafpdzcajcXOl22ozXV1NqNtcNu3XBREQqoVRwWJJ" +
                        "/ub6P30fuGcfwzQxuNoe3rV+ZtuUkopScUkotdrtu7bfayP4S+kL9IXifL+J6+BwNf2FGhypJRi3JuKk" +
                        "23JPvZJWSS73Z/RH+wT8S/F/wAVP2Mf2f8A4ofEzxE3iHxh4q8Ox654q8S3628DXE3nShpXECRRr8qjO" +
                        "FA4r+KfGDIsNl/FGMwuFhyUoVLRiruystNbs/tzwcz7FZjwrgsXip89WdO8pOyu7vXSyPxA/bh/4L4al" +
                        "oPirXPht+xjo+m6pYaJLJpmofG/xZC17BeTRkq7aRZ7kRolYfLcT7hJyVj27Xb+r/Cf6HtOth4YrO5Si" +
                        "5K6pRdml/flvfvGNmusr3S/kzxb+mRUo4ieFyOMZRi7OtJXTf8AcjtbtKV0+kbWb/Enxj/wUq/b28c3V" +
                        "1ea1+1f4zspbzb5yeDtWk8OxDawYbIvD4skj5HOxRkcHiv6ryzwL4PwkVGGXUWl/NHn/GfM38z+Ts08e" +
                        "OMsZJyqZlWTf8suRfJQ5Uvkdn8NP+CsH/BQH4X6hBeaZ+0hrPiu1Rle60j4li28R29wigDYzatHNMgO3" +
                        "kxSI3XnJNeXnv0deDcwg4ywMIPvTvBr/wABaT+aa8j1ch+kdxpl81KOOnUXapaon/4Em18mn5n9Fv8Aw" +
                        "T0/4LVeC/2o/FPh74KfHXwvb/Cz40+I5F0zwnrPh1ppPDev3ZUkQILp5JrK4cjEcUjyK54EgYqh/ibxp" +
                        "+ixiuH8PPHYCo62FgryUre0gu+llKK6tJNfy2TZ/cHgn9KzC8Q4iGBzCmqGLm7Rcb+zm+2t3CT6JuSf8" +
                        "12kfuxX8jH9fBQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/k/8A+Co3/BUa5+OFz" +
                        "rf7Pf7PetvafBq0dtP8c+OdPZo5fFcsbYaCBhgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz40ePPDfwz+" +
                        "GfhufxX408VzjT9H0fTwMscbnkkdsLHFGoLySOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiuCN" +
                        "fiD8QVjOFGRJ/Z+n+YA0dpGwGTgNKwDuBhETaMbHNOdz9Caog/N3/grl8OZviX/AME9P2jdMs4PO1Hwx" +
                        "ptl8RrNgCTGnh3VbbVrpsD/AKdYJh7ZzX7l9G7O1gONMDKT92cnB/8Ab8XFf+TNH4V9JXI3j+CcdGKvK" +
                        "EVNf9uSUn/5KmfwIW1zPZ3Fvd2szW91aulzbTxEq6SIwZWUjoQRkV/sTOClFpq6Z/jTTm4yTTs0f6Xvw" +
                        "M+JVj8ZPgv8J/izp0iSWnxI8O6N41TyeiNqWnxXTpjAwUZypBGQRg1/hLxbkU8rzTE4OW9GpKH/AIDJq" +
                        "/z3P96eEc+hmmVYbGR2rU4z/wDAop2+Wx6pXzx9Ec34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcK" +
                        "T2t5azoUeORHBBBB/DqOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gq" +
                        "H/wS88U/sWeKbj4kfDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/wDVvwB8fsPxT" +
                        "h1hsS1DHwWq2VRL7UfP+aPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/x" +
                        "Z0P4v8Awg1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijL" +
                        "pKL6Nfc1o7ptH434f8AiBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf32fsb/ALV/gT9s74D+Gfjd4Etpd" +
                        "ITUJJtB8WeFr91kuNG1qzCG5tHkQBZABIkkcgA3RujEKSVH+O3id4d4zhfN6mBxDUrWcZLaUHtK3TZpr" +
                        "o01drV/7KeF3iNg+Ksnp4/DpxveMoveM1vG/XdNPqmnZPRfU1fnx+hn4z/8F4v+Uf3iH/safDP/AKUyV" +
                        "/T/ANEP/ksof9eqn5I/lv6YX/JFz/6+0/zZ+H//AAb/AH/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+k" +
                        "zP5K+hh/wAlfL/rxP8A9KgfLn/BXH/lIv8AtPf9hXS//Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGY" +
                        "f4o/wDpuB/Q/wD8E0/2A/2Nvi3+w5+z/wDEX4k/s9+H/GHjfxPp2o3Wv+JNXhna5upItdvrZGcpKoyEj" +
                        "VRx0FfxX47eMXE+W8WY3DYXG1KdKEo8sU1ZXhF9u7P7a8BvBrhfMuEcFicVgqdStOMuaTTu7Tku/ZI9c" +
                        "+Pv/BEb9h/4u+Hb+DwH4Km+BHjUxt/ZPizwBd3ktsswA2C406/nlt5IwR8wjEbnP3xxXzfB30reLMtrp" +
                        "4iqsTS6xmle3lNJST9eZeR9Lxl9E3hLM6DWHpPC1ekoN2v5wk3Fr05X5n8ff7Tv7N3xX/Yx+Omt/CT4h" +
                        "A6d4p8LSQa94Y8U6G8sdvqVhJIXs9SsZflbYxjOCMMkishwyED/AEu4C45y7ijKIYzDa053Uou14v7UJ" +
                        "L5+jTTWjR/mRx/wJmXCubzweJ0qQs4yV7Sj9mcX209U009Uz+tT9hDXfgL/AMFVf2XfAfir9qL4YaL8V" +
                        "vjH8Cprn4Z+LNR8RwE3DSvHBPHeqYnRtt7AsbSfw+csm0AcV/nJ4u4POPDziCtSyrEToYXEpVIqL06px" +
                        "/7cd0uvK43P9JPB/GZN4i8PUa2bYeFfFYZunJyWvRqWn86s305lKx/J7+2/4N8L/Dv9r/8AaS8C+CdFh" +
                        "8N+EfCXjHXdB8N6DpwKwWdnbXzxxRRhiSFVRgZNf6KeFGaYjG8NYHEV5udWdGDk3u20rtn+cXi1leHwP" +
                        "E2Pw9CChSp1pxjFbJJuyR/Xz+yP/wAE5f2HvHH7KX7MfjXxb+zX4b13xV4v+HvgvxR4m1y+huDPeahqH" +
                        "huzu7ieQrMAXkkkZmwOpr/NXxI8buLMJxFj6FHHVI06derGKTVlGNSSSWnRKx/pn4a+BvCWL4cy+vWwF" +
                        "OVSph6UpNp3cpU4tt67tu54J/wWe+O+jfsc/sieCP2YvgFpFl8Mj8a2v/CsGleCoItPi0zwpYLHLqiwx" +
                        "2oUI15JdxxOxGXV5jksSR9j9F3hCrxPxLVzTMJOt9XtK825OVR35Lt78qi2l0aj0PjfpT8YUuF+GaOVZ" +
                        "dGNH6zzRtBKKjTjZzsltzOSTfVOXXU/nV/4J4fsI+Lv28fjRJ4IsdTk8KfDjwdDF4g+KvjuGETPY2Urs" +
                        "kFvbo5CNdXboyxBjhVV5CGCFW/tjxq8XcNwhlft5R569R8tOF7XfVvryx3dt20tL3X8QeCXg/ieMc19h" +
                        "GXJQprmqTtey6JdOaT0V9km9bWf9j/wu/4JcfsFfCjw5B4e0v8AZr8N+L2WH7Je6/8AFGxh8TajdOV2v" +
                        "K0usLOI3Y8/uVjVT91VHFf5j8QfSA4wzGu6k8dUp63UabdOK8rRtdf4m2+rZ/qFw99Hvg7LaCpQwFOpp" +
                        "ZyqJVJPzvK9n/hSS6JH58/t7/8ABD/4MfEHwN4j+IP7JPhpPhf8XdEhl1iD4e6bPKfD/iERKZHto4bhn" +
                        "FncuBiFoisRbCug3eYv7N4PfSvzTBYuGHzip7bDSdudr34eba+KK+1e8rapu1n+LeMf0S8qxuEqYnJ6f" +
                        "scTFX5E/cnbok/hk/s2tG+jSvzL+Yj9kr9o/wAa/sfftEeA/jN4ba5gn8JXy2HjXw2jGE6poksqxajp0" +
                        "ySYGZIwdm8fJKqPjcgx/e/iPwPheJskrYKrZqcbwlvyzXwyXo97bxbWzP4A8NuOsXwxndHHUrp05WnHb" +
                        "mg/ji/VbX2kk90f2j/8FUNf0nxX/wAEyP2gfFGgXi6joXiTw9oOv6LqEQIWe0vNd0y4hkG4A4ZHBGa/y" +
                        "3+j5g6mH49wVKorThUnFrs1Caa+8/1S+kRjKWJ4AxtWm7wnThJPunODT+4/k5/4JHf8pF/2Yf8AsK6p/" +
                        "wCo5qNf6K/SR/5IjH/4Y/8ApyB/nF9Gr/kuMv8A8Uv/AE3M/re/4K4/8o6P2nv+wVpf/qR6dX+cP0bv+" +
                        "S3wH+KX/puZ/pP9JX/kh8w/wx/9OQP5Sv8Agi7/AMpLf2bP+5x/9QHXK/0O+lH/AMkJjv8AuF/6epn+d" +
                        "H0V/wDkvcB/3F/9M1D6j/4OF9f8TXn7Yvw88OalPKPDOheAtO1DwxYuGEAkv9Z1MXU6Z4LyNbojEdo1H" +
                        "avgPoXYOhHhivVil7SVeSk+ukYcq+V216s/QvpsY2vLiihSk37ONCLiunvTnzP1dkn6I8w/4JWeEP8Ag" +
                        "l/r9zq91+2p4vEXxQW+VPB/hX4lSXWkeC1skVCszXtnKsUsxcsHS8kjjC4wj8sPf+kJmXH9GMVkdL/Z+" +
                        "X3pU7Sq37crV0rbOCbv1Wx8/wDR3yzw/rSk89q/7Rze7GpeNK3fmTs3fdTajbo9z+rDS/2Jf2AfGnhO2" +
                        "k8PfswfCzxB4X1WFVsPEHhjwt4al8+IHh4tQsYPMJ4++suT61/nliPFXjLC4lqpmGJhUi9YyqVNH5xbt" +
                        "8mj/RXD+E/BmLwydPL8LOnJaSjTp6ryklf5pn5Q/thf8EBPhp48C+J/2PfEFv8ACHxNLMW1PwD4+vNSu" +
                        "/DM8bksXt7lIr28tXUk/KRKhGAojxz/AET4Z/TGx+D/AHWcwdenbScFFVF6q8YyXn7r7tn85eJ30M8Bj" +
                        "P3uSzWHqX1hNydN+jtKUX5e8uyR9+/8Evf2DNZ/YM+C3ibwj4y8Y2njL4g/EHVl8VeK7jwws40mzEFql" +
                        "pBbWr3ccMsoUBmaV40yWxsG3Lfjnj94v0uMM0p1qNJ06NKPLHmtzO7u27NpdEkm9t9dP2b6Pvg7V4Oyq" +
                        "pRr1VUr1Zc0uW/KrKyUbpN9W20r3tbTX+TP/grj/wApF/2nv+wrpf8A6jmnV/ov9G7/AJIjAf4Zf+nJn" +
                        "+b/ANJX/kuMw/xR/wDTcD+hH+3vE3hr/g3/AIdU8I3M1nrB+GUWlvcWIJlWxv8AV1sL7G3kA2s0oZuwy" +
                        "e1fxj9ToV/GRwrJOP1m+vdRvH/yZI/tT65iKHgwp0W1L6tbTtKVpf8AkrZ/JB8F7H4Tal8VfAtj8dte1" +
                        "bwz8Ibi/iXx9rnge0ivdVgsACzfZ4pmVcswCs+GKKS4SQqEb/R/imtmVPLq0sBCM8So+4pu0W/Nr77aX" +
                        "ejaTuv82OFaOW1MxoxzCcoYZy99wV5KPkn919bLVKTVn/bD+yX+zv8A8EgPHvha0sf2dvAPwy+MYigEt" +
                        "3F4ut7PxP4iCgLulurbxUs97AWIzhokUchQBxX+VviNxr4l4PEOWZVsTh9dOVunD0Tp2g/vb7s/1c8Nu" +
                        "CPDLGYdRy2jhsRprzJVJ+slUvNfcl2R2fx5/wCCQ/7Cfxz0S/tIvgxYfCHxJMjLpfi/4MRR6BLaSEcN9" +
                        "itVFjKucZWSA8dCp5ry+EPpJ8XZTVUnipV4dY1ffT/7efvr5S9bnqcY/Rn4PzelKKwscPU6Spe41/26v" +
                        "cfzj6WPy6/Zd/4IL/FX4N/tV/Dz4q+PvjN4d1v4WfCTxDYfETw0PCiaouv6rc6Lex6hYx3Nrd2y29qjS" +
                        "xKZtlzMdoKr97cv7/4gfS/y7NOHq+Ew+FqRxFem4S5uXkippxk00+aWjdrxjrq9rP8An3w++h1mOV8RU" +
                        "MXiMVTlh6FRTjy83PJwalFNNcsVdK9pS00W91/T1X8Dn9/hQB4p+0V8EtH/AGjPgt4/+C+u+INR8Lab4" +
                        "7sjpcuveGJ3gurd1kWZCQrKJYiyASwsdsiEqcZyE0OLsz+Fv9qD9l/4pfsmfFLVPhd8UdL8m5h3Xvhvx" +
                        "JZK507WtOLlY7u0kYDKnGGU/MjZVgCKxasdUZXPb/8Agnh+2m37FPxom8Xap4Wg8U+BPGtvD4X8fxw20" +
                        "Daxa2Kz+aJ9PuJAGV42+Z4dwSYABsMqOji7CnG6P7bPh38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdL" +
                        "fdFNE2QQQQGR0YFXRgGRgVYBgRWxytHaUAc34x8KaL488IeKvA/iS2+2eHfGem33hTX7P5f3tlqNq9nO" +
                        "nzBh80chHINd2WZjVweJp16TtOnJST7OLuvxRw5pl1LGYaph6qvCpFxku6krP8ABn+ad8Wvht4g+DnxR" +
                        "+Ifwo8VRGLxF8OdZ1LwXq+5GjEk2nXb2pkQNn5JNm9DkgqQQSDmv91uHM9o5nl9DF0vgrQjNekle3qtn" +
                        "5n+DXEmRVsrzCvg6y9+jOUH6xbV/R7ryP7BP+CCH7Rdr8T/ANk3UvglqmoCXxd+z5qk2nW9rKcyP4e1y" +
                        "aXU7KXLHLbJzcw4Awqog7gV/mj9MLgmWA4jjjoR/d4qKd/78EoyXzXK/Ntn+nH0OOOI5hw3LATl+9wkm" +
                        "rf3Jtyi/lLmXkkj90a/kk/rsKAP5UP+Cw//AAVe0vxfY+Lv2Qf2btVt9X8MXW/QPjT8ULTy7iC+2PiTS" +
                        "tMc7lMQZcT3C/eI2Rnblm/0N+jN9Haphp085zOLjUWtKm9Gu05+f8sem71sl/nV9J36RtPFQq5LlklKm" +
                        "/dq1Fqn3hDy/ml12Wl2/wCbrwf4P8U/EDxToHgnwToF14p8XeKbqHRPD3h7RIXnury6ncIkcaICSST+H" +
                        "U8V/ceZ5nh8Fh51681CnBNyk3ZJLdtn8K5ZlmIxuIhQoQc6s2lGKV229kkf3xf8Evv2O9f/AGJ/2WtM+" +
                        "GPjPU4dQ8f+LNWu/if49g0x/NtLHUtRs7SxFpDIOJBDBZRK7j5WfcVyuCf8evH3xNo8VcQSxVCLVGEVT" +
                        "hfRuMXJ8zXS7k2lula+p/sj9H7wwrcJ8PRwteSdapN1J21SlJRXKn1sopN7N3tofolX4oftx+M//BeL/" +
                        "lH94h/7Gnwz/wClMlf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/YheIP/AE46X" +
                        "X9YfTJ/5JGP/X+H/pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy" +
                        "/8ATkz8++kr/wAlxmH+KP8A6bgf1vf8Ejv+UdH7MP8A2CtU/wDUj1Gv84fpI/8AJb4//FH/ANNwP9J/o" +
                        "1f8kPl/+GX/AKcmfo7X4efuZ/NV/wAHG/w60S4+HH7OXxaS1ji8R6Trep/Dqe9RQJp7LULD+040cgfMs" +
                        "Ulk5QE/KZGx941/dX0Ic7qxx2Owd3yShGduicXyt/NSV+9l2P4O+nJkdKWBwOMsvaRnKnfq1JcyXycXb" +
                        "td9zxT/AINwfEWpwfET9qDwksxOjanovh3xFPbsSQLmxvru2RlHQZS7YH1wPSvqfpw4Km8Fl9a3vKc4/" +
                        "JqL/wDbUfKfQYx1RY7MKN/dlCEvmnJL8JM/GX/goFqEGp/tyftcXNsGEcfxE8W6e3mgA+Zaa1cWj9CeN" +
                        "0Zx7V/UPg1RdPhPLU/+gem/vgn+p/LXjRWVTi7M2v8AoIqr7ptP8j+7f9h3/kyr9j//ALJd8P8A/wBRO" +
                        "wr/ACL8WP8Akqsz/wCwmt/6ckf6/wDhJ/ySmWf9g1H/ANNxP5pv+DjB7w/tJfAeNzJ/Z6+B5HtQ27yvO" +
                        "bXrwS7e27aE3Y7Y9q/uv6Eij/YWMf2vbfhyRt+v4n8G/Thcv7ewa+z7H8eeV/0/A/Dr4b/8Lx8jVv8Ah" +
                        "UP/AAlf2bfD/bv/AArf+19m/D+V5/8AZfGcbtu73x3r+sc8/sm8frnsr629py/O3N+Nj+SMi/te0vqXt" +
                        "baX9nzfK/L+Fz0z/jNX/qqP/l2V4P8Axiv/AFDf+Uz3/wDjK/8AqJ/8qB/xmr/1VH/y7KP+MV/6hv8Ay" +
                        "mH/ABlf/UT/AOVDzS5+C/xzvLie8vPhP4suru6d7m6urnQtYeSSR2LMzM0BJYk5JPWvehxTlMYpLE0kl" +
                        "/fj/meDU4VzeUnKWGqtv+5L/I/ru+Pket2//BBKzs/EdtcWetad8LfAml31lqsTwXMJtb7SLZY5I5FVl" +
                        "ZFQKQwzxzzX+bPB0qT8YHKk04PE1mmtU7qbun5n+l3GcasfBxRqpqaw1FNNWas6as15H863/BI7/lIv+" +
                        "zD/ANhXVP8A1HNRr+2PpI/8kRj/APDH/wBOQP4h+jV/yXGX/wCKX/puZ/W9/wAFcf8AlHR+09/2CtL/A" +
                        "PUj06v84fo3f8lvgP8AFL/03M/0n+kr/wAkPmH+GP8A6cgfylf8EXf+Ulv7Nn/c4/8AqA65X+h30o/+S" +
                        "Ex3/cL/ANPUz/Oj6K//ACXuA/7i/wDpmof1kf8ABQP/AIJ3/C/9vXwNpWn+INRfwR8UPBS3DfD74labA" +
                        "s72wuADJaXkBZPtFo7KrFdysjDKMMuH/wA6fBrxqzDg/FylTj7TD1Lc9Nu17bSi/syW17NNaNOyt/o/4" +
                        "0eCOX8Y4OMakvZ4infkqJXtfeMlpzRe9rpp6pq7T/kp/aE/4JDftzfs+zajeT/Ceb4r+ELEvJH4y+DTP" +
                        "rkTxINxd7KJFv4gq8sXtwo5wxAJr/Rzgv6SnCWcqMViVQqv7NX3Nf8AF8D8rSv5H+bXGv0Z+LslcpPDO" +
                        "vSX26Xv6f4V7687xt5nxR8O/jJ8dv2efEV5cfDL4jeJfhD4jt5RFrFt4a1DUNJkeSE48u7gjeMSAHgpK" +
                        "pHqK/VM74YyjOqCWKoU68GtOaMZb9YvW3qmflOR8UZxkldvC16mHmnryylHbpJaX9Gj9gf2dv8Agvz+1" +
                        "R8ObvTtL+O2haT8ffCaFIb7UWgh0DxEkY+XdHc6bGLVyo5IktSzkDLrkmv5p41+hzw9joyngJywtToru" +
                        "cPmpPmXylZdnsf03wR9MviLAyjDMIRxVPq7KE/k4rlfzjd91uf1L/snftefBf8AbN+GMPxP+DWtSXFrb" +
                        "yDTPFHhXXEjg1jRL4rv+z3sEbyKpZfmR0ZkcfdY4IH+ffiL4a5pwvj3hcbBJtXjJaxmu8XZfNNJrqtj/" +
                        "Qvw38TMq4py9YvBTbSdpRekoPtJXfyabT6Pc/ij/wCCuP8AykX/AGnv+wrpf/qOadX+qH0bv+SIwH+GX" +
                        "/pyZ/lL9JX/AJLjMP8AFH/03A/rs/4JxeG9B8Y/8E3P2c/CXinSYNe8M+J/BTeH/EOh6nGJba8srx7i3" +
                        "nhlRuGSRHKsPQ1/m344Y6theOcdWpScakK3NFrdNWaa80z/AEs8DMDRxXAmBo1oqVOdHlkns07pp+TR+" +
                        "FP7YP8AwQF+K/hjXdb8XfsgavbfETwRdySX1n8LfFd7DYa/pyu277Pb3d6UtruNOdrSyRSYwCJGyx/rj" +
                        "wz+mNl2Iowo5zF0qq0dSKbhLzcVeUW+yUl10Wh/IXid9DPMcPWnWyWSrUXqqcmozj5KTtGSXduL6avU/" +
                        "DH4mfBD48fs8eIILP4p/DTxH8J9ds5x/Zt54j0+904PNGSyva3LKqS42kq8TkcZBr+tch4syjOqLlhK9" +
                        "OvBrVRkpaf3luvRo/kXP+Es4ySuo4vD1KE09HKLjr/dez9U2fXfwM/4Kzft4fAZrC10f433vxB8OWOF/" +
                        "wCEU+MK/wDCSW0ka8LH9ovW+2xooGFWK5QAcDivzXi36OfCGcXc8IqU39ql7j9bL3G/WLP0zhH6SHGGT" +
                        "8qhi3Vpr7NX94vS799L0kj+iz9g/wD4LbfCv9pzxT4d+EHxo8LJ8F/i54kkTSvDep2t19o8M61eucJBF" +
                        "LcbZbSeUnbFFLvV2wolLsqH+JvF76KmYZBh54zA1PrGGgryVrVILu0tJJbtqzS15bJs/uDwe+ljl2f4i" +
                        "GCx1P6viZu0Xe9Ob6JN6xb2Sd03pzXaR+5lfyWf1yFABQB8x/tYfsn/AAt/a/8Ahbf/AA2+JNh5NzD5l" +
                        "94M8Z2MaHUdC1EptW4t2bGVOAJYidsi8HBCsqauVGVj+Iz9qD9l/wCKX7JnxS1T4XfFHS/JuYd174b8S" +
                        "WSudO1rTi5WO7tJGAypxhlPzI2VYAisWrHTGVz6Y/4J5/8ABQzxr+xd41GkaubnxX8B/FdyknjfwRG+6" +
                        "WzlbEZ1HThIQqXCKBvTIWZQFYghHRxlYmcLn9ofw7+Ingr4seCvDnxF+HXiO28V+DPFdsmqaFrulvuim" +
                        "ibIIIIDI6MCrowDIwKsAwIrY5mjtKAP49/+C/37Ktx8P/jl4X/ag8NaWV8IfGu3j8PeNrm2T91beKNJt" +
                        "liRn2qAv2uzjQr1LPDKx61/ph9DjxCjjMpqZVVl+9w75oedOTv/AOSybv2Uoo/zG+mb4dywWb081pR/d" +
                        "Ylcs/KpFW/8milbu4yZ+cH/AATg/a6uP2Mv2pPBfxOv5pm+HmthvA3xY0603MZdB1CRPMmVB96S1lSO4" +
                        "QDltmzIDGv3Dxw8No8UcP1cLFL28ffpt/zx2XpJXi+179D8M8DPEuXC3ENLFSb9hL3KiX8kt3bvF2ku9" +
                        "rdT/QY0rVdM13S9N1vRdQh1bRtZt4dV0nVdNlSa3uba4jE0UsUkZKujowZWBwQciv8AGXEYepRqSpzi4" +
                        "yi2mno01o010aZ/tNh8RTrU41KclKMkmmtU09U0+qa2P5bv+Cuf/BXP+1P+En/ZV/ZV8T/8Sv8AfaB8Y" +
                        "PjBoE3/AB9dYptK0qaI/wCq6rcXCn5+UQ7NzP8A6A/Ru+jd7P2ebZtT97R0qTW3ac136xi9t3rZL/Pb6" +
                        "S30lvae0yjKKnu6xq1YvfvCD7dJSW+y0u3/ADV+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891e" +
                        "XU7hEjjRASSSfw6niv7pzPM8PgsPOvXmoU4JuUm7JJbts/g/LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5" +
                        "/wS88LfsWeFrf4kfEi3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/wC4n7vJf/KTx+8fsRxTi" +
                        "HhsM3DAQei2dRr7UvL+WPTd67f6y/R9+j7h+FMOsVikp4+a1e6pp/Yh5/zS67LTf9fq/mo/poKAPxn/A" +
                        "OC8X/KP7xD/ANjT4Z/9KZK/p/6If/JZQ/69VPyR/Lf0wv8Aki5/9faf5s/D/wD4N/v+T69W/wCxC8Qf+" +
                        "nHS6/rD6ZP/ACSMf+v8P/SZn8lfQw/5K+X/AF4n/wClQPlz/grj/wApF/2nv+wrpf8A6jmnV9/9G7/ki" +
                        "MB/hl/6cmfn30lf+S4zD/FH/wBNwP63v+CR3/KOj9mH/sFap/6keo1/nD9JH/kt8f8A4o/+m4H+k/0av" +
                        "+SHy/8Awy/9OTP0dr8PP3M/nt/4OLf+TYPgf/2Pq/8AqPajX9n/AEJf+R/i/wDrx/7fA/ir6cH/ACT+E" +
                        "/6//wDtkz40/wCDcf8A5LX+0f8A9itpX/p2NfqH03v+RVgf+vsv/ST8s+g1/wAjbHf9eo/+lH5pf8FWv" +
                        "hzrnw1/b+/aRsNatpIo/FWuN8RtDupVKpc2OvwpqaPGSAGVGleIkdGRh1Br91+jxndHHcG4GUH8EORrs" +
                        "4Pl19bJ+jTPwb6ReR1sBxnj41F8c/aJ91Nc2no216po/o1/4Jc/8FRv2aPGP7P3wc+AnxN8f2Pwm+Lnw" +
                        "t0PTPhnFp/jmVNP0zV7TRraPTbOezv5ttuXeGOMNDI6yb921WX5q/iL6QH0f8+wuc4rMMLRlXw1acql4" +
                        "e9KLk3KSlFe9ZNuzSata7T0P7k+j59IPIcVkuFy/FVo0MTQhGnab5YyUUoxcZP3btJXTad72TWpzX/Be" +
                        "z9mPUfjN+zv4G/aK8CWx1zUvgNJd3XiNNKAm+0eFNbSBprsGLcXW1lt4pMjgRvI5OBXf9D/AI9hled1s" +
                        "txD5Y4m3LfS1SF7R8uZNrzkorqcH0xuAJ5rklHMsOuaWFbcra3pzteXnytJ+UXJ9D+ff/gmp+3jq37CP" +
                        "xwn8U3+nTeI/hR8QIbfw38VvDGnlBctbQzGS3vrXfgG4tDI5RGIV1d0JUsHX+y/HXwhp8X5SqUZKGJpN" +
                        "ypye12tYv8AuysrvdNJ62s/4u8BvGGpwfm7rSi54aqlGpFb2T0kv70buy2abWl7r+2D4U/trfsnfGrw1" +
                        "Z+Kvh3+0D4W1awu41uZdPv9Ys9O1O03/wAN1Y6g8NzA2e0ka57ZHNf5W8ReFfEeVV3SxOCqxa6qLlF+k" +
                        "opxfybP9XOHPFfhvNcOq2GxtKUWtnJRkv8AFGTUl80j1D/hePwU/wCiweFv/Cg0n/4/Xgf6p5r/ANA1X" +
                        "/wCX+R9B/rdlP8A0FUv/A4/5noel6rpeuafaatoupW+saVfp59jqelzR3FvMhON0ckRZWHHUGvFxGHqU" +
                        "puE4uMlumrNeqZ7eHxNOtBTpyUovZp3T9Gj4M/4KpaFe+Iv+Ce/7Uun2Cl57fw6uuyBQW/c6XqVrqcxw" +
                        "PSO3Y57V+v/AEe8ZChxpl8pbOpb5yi4r8Wfjv0iMHOvwVmMY7qnf5RlGT/BM/je/wCCYPxQ8M/Bz9vP9" +
                        "nDx94y12Hwz4ZstXvNA1bXtSKJbWqa7ot7oKvM8hCxx7rwB5GICLliQBmv9OfHzIK+Z8H47D0YOdRwUk" +
                        "lu+SUZ6d37ui6vQ/wAvPo/8QYfK+McDiK81CmpuLk9lzwlDV9F72r6LXof2Bf8ABWyWKf8A4Jx/tNTwS" +
                        "rNBNpOkywzRMGR0bxFpxDKRwQR0Nf5pfRwi1xxgE9+aX/pEz/Tb6Sck+Bse1qnCP/pyB/Kd/wAEXf8Al" +
                        "Jb+zZ/3OP8A6gOuV/ob9KP/AJITHf8AcL/09TP86vor/wDJe4D/ALi/+mah++X/AAVq/wCCqHxX/Ym+I" +
                        "/w++DPwW8IaLfeJvEmgx/EnxF4q8eQXV7BFZXWpXmmW9va29pc2uJN9hK0juzDaVAXOSP49+jl9HvLuK" +
                        "8DWxuOqzVOE/ZxjBpO6jGTbbT0tJWStre76H9k/SS+kRmXCeOoYHA0oOpOHtJSmm1ZylFJJOOt4u7d9L" +
                        "WXU9D/YX/4LM/s//tI+GdL8PfHLxHo/wE+OMR+xalpOvXLWPhzVXyAs2nX2oOUj8wkD7PPL5gbhTIPmr" +
                        "xPFv6L+c5HXlUwEJ4rCbppXnHynGKu7fzRVratR2Pb8IfpS5LnuHjTx9SGFxezUnaEvOEpOyv8Ayyd76" +
                        "Jy3P0O+L/wM/ZX/AGhfDB1j4y/D3wh8SvDixZt/F/iK30+ZreJsR7oNTUrJCDkDdHKvbmvxbhri3iHJc" +
                        "RyYKvVozv8ADFyV35w2fzTP23ibhHh3O8Pz46hSrQt8UlF2XlPdfJo/jx/4KlfAT/gnf8Edb0Sz/Y9+L" +
                        "Vx4k8eXd60XjL4a6FqUfibw5pOniGQ701Ys8iXCyhUNu007YJLGMqA/+mX0fuMONc2pTlnOGUKKXu1HH" +
                        "2c5SuvsbONteZRitrc19P8AMP6QvBvBGU1YRyXEudZy9+mpe0pxjZ7T1aley5XKT3vy21+lv+DdK78UJ" +
                        "+1D8brG0af/AIQq58Avd+IFjB+zHVIfEOmpp5kP9/ypbvZ7bq+E+m1Tw74fwknb2qr2j35XCfNbyuoX+" +
                        "R979B+piFxBi4xv7J0Ly7cynDlv52c7fM+C/wDgrj/ykX/ae/7Cul/+o5p1fr/0bv8AkiMB/hl/6cmfj" +
                        "v0lf+S4zD/FH/03A/qU/ZW+NVt+zn/wSA+GHxxutFfxGvwz+HknieDQIZRB9suIp5lghaUhtiPIyh32k" +
                        "quSASMH/P7xC4WlnfiXiMAp8ntsRy829k0ru3WyvZdX1R/oT4d8VxyPwyw+PcOf2OH5uXa7Tdlfom7Xe" +
                        "tl0Z+Vv7M//AAcJeP7j4pR6d+1d4E0K0+E+vO0H/CRfCnT9Si1DQHc/JK8F1e3Zu7dekiqBKBll3keW3" +
                        "9B8efQwwccv5sorTeJj9mpKPLPyuox5Zdm/d6O26/njgH6auNlmPLm9GCw0vtU4y5odm05S5o90ve6q+" +
                        "z/pB+H/AMaf2cf2nPChb4f/ABB8LfGTwvrUW290ayurDUtyMu4x3VjNukjYDlo5oww7iv4eznhbPMhxH" +
                        "+0UauHqRejacfnGS0fqnY/ujJeKsiz/AA3+zV6WIpyWqTUvlKL1Xo0mfk3+3l+w5/wSH0Hw34g8UfFjU" +
                        "9E/Zi8VxxS3drc/CPUrfT9UnlUEiO38OQi4huMt95YbQNj+NRyP6L8IPFnxJrV4UsJGeMp3S/eRcorzd" +
                        "V2cfVzt5PY/m/xi8I/DOjQnVxkoYKpZteykoyfkqSupeihfzW5/GxdNbWWt3LeG765ns7S6dtB1OeIWl" +
                        "48ccx8iVo4ZZRHIQAxVZG2ngMcZr/TympSpL2qSbWq3W2qu0rr5K/Y/y6qOMKr9k20n7r2e+jsm7P0bt" +
                        "3P9NH4dSeIJfh94El8WLInimXRtLk8SpeLtmGoNZRG4Eg7N5m7I9a/wcztUVjayo29nzy5bbct3a3yP9" +
                        "8cjlWeCoutf2nJHmvvzWV7/ADOyrzD1AoAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6F" +
                        "qJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd" +
                        "3aSMBlTjDKfmRsqwBFYtWOmMrn0x/wTz/4KGeNf2LvGo0jVzc+K/gP4ruUk8b+CI33S2crYjOo6cJCFS" +
                        "4RQN6ZCzKArEEI6OMrEzhc/tD+HfxE8FfFjwV4c+Ivw68R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdG" +
                        "AZGBVgGBFbHM0eVftXfs3+Df2svgL8QPgX42/0aw8X2udH1yNA82latbMJ7K9iGVJMMyqWUEb03IThjX" +
                        "23h3xxiuHM4o4+hq6b1XSUXpKL9V16Oz3R8R4jcC4XiTJq2X19FUWj6xktYyXo+nVXWzP8AO/8AjR8H/" +
                        "HfwC+KXjb4PfEvR30Pxr4CvpNE1mycHY+0B4p4WIG+GeNlliccMjKw4Nf7U8LcS4POMvpY3Cy5qVWN0/" +
                        "wA0+zTumujTR/iTxVwxjMmzGrgsVHlq0pWa/JrumrNPqmmfYvh3/gp5+0/4V/Y+n/Y60HxL/Z/haSaWw" +
                        "tvHcMkw1228NzxkSaLBMD8luzk/OPnCExAhOK/Msb4CZBiOJlnVSnepa/JpyOa2qNdZW6bX956n6fgfH" +
                        "/iDDcMPJadS1O7XPrzqm96afSN+u9vdWh8H+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7" +
                        "hEjjRASSSfw6niv17M8zw+Cw869eahTgm5Sbsklu2z8eyzLMRjcRChQg51ZtKMUrtt7JI/t2/4Jef8AB" +
                        "Lzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/uJ+7yX/yk8fvH7EcU4h4bD" +
                        "NwwEHotnUa+1Ly/lj03eu3+sv0ffo+4fhTDrFYpKePmtXuqaf2Ief8ANLrstN/1+r+aj+mgoAKAPzB/4" +
                        "LAfBD4l/Hz9h/x34P8AhN4YuPGfi/R9S0fxnH4V0dDLf3trptyXuEtYl+aaZUcusS5Z8FUDMQp/ffo08" +
                        "V4DJ+LKNbGVFTpSjKHM9k5LS76K+l3ot3ZXZ/P/ANJvhLH5zwlWo4Om6lWMoz5VrJqL15V1dtbLV2sru" +
                        "yPxs/4IPfsp/tAeC/2mfGvxj+IHwq1z4d+A9D8Kah4Pj1Tx3pl5pL3up6lf2MscNtFfxxPKFjt5HkdVK" +
                        "rgAkFhX9O/S88Q8mxWQ0sFh8RCrWlVjK0JKVoxUk22m0tWkk9XrbZn8u/Q98Os6wmf1cbicNOlRjSlG8" +
                        "4uN5SlFpJSSb0Tba0Wl90fPX/BXr9jL9pO6/br+J3j3wd8G/EnxD8F/F1tJ8QeD/EHgPRdR1eF5I9Hs9" +
                        "OuLaY6fDKIpo7iBwEYglCrDrx9p9GvxQyKPCOHw9bFU6VWhzRlGc4xfxSkmuZq6aa1XW66HxP0mPCzPp" +
                        "cX4jEUMLUq0q/LKMoQlJfDGLT5U7NST0e6s+p/UT/wTz+EXjL4EfsW/s9/Cz4hWI0vxr4a0Mz+I9IyGe" +
                        "yudSvrjVTbSFSR5kIuRHJgkblOCRzX8A+NPEuFzfinG4vDPmpTn7r7qKUbrydrryZ/oL4J8M4rJ+FcFh" +
                        "MSuWrCHvLs5Nys/NXs/NH2bX5efqZ+Kf/BdL9n/AOLPx2/ZV8HS/CPwbe+PtT+G/iu38X+IvDfhmCW81" +
                        "NtNk0u8095re2gVpJvLknTeqAsFJbG1WI/qf6JPGWW5RxDVWMqqlGtScYyk7R5uaMrNvRXSdm9L6btH8" +
                        "p/S84MzLOOHaTwdJ1ZUaqlKMVeXLyyjdJauzaulrbXZM+Ev+Dfz4QfFr4a/GH9oK++Ivwu8ReAbLU/DW" +
                        "mWmnXnjXRNT0qK4lTVC7JG99DEHYDkgEnFfrv0yeJctx2WYKOGxFOq1Uk2oTjK3u9bN2Px/6GHDGZYD";
                    resourceString += "NMbLE4epSUqcUnOEopvm6XSufrz/AMFC/wDgm78Lv29fCemz6lqJ8BfGPwbby2fgT4mWUAuAIHfzjY38G" +
                        "5DPas5LKAwaJiWQ4Z0f+bPBbxyzDg/EyUY+1wtR3nTbtrtzRfSVt9LSSs9k1/THjZ4FZfxjhouUvZYqm" +
                        "rQqJX035ZLrG+2t4t3W7T/kW/aF/wCCWP7bf7Omtz2OufBfUviJ4eMnkab45+DttdeI9MuVJwHZbGI3N" +
                        "vk8YuYYznpnIz/pHwX9IPhTO6SlTxUaU7awqtQkvvfLL/t2TP8ANPjb6PHFmR1XGphJVoX0nSTqRf3Lm" +
                        "j/29FH9TH/BGf4SfG34cfsPQ+C/2jPD9/pT63r2s6j4K8C+PYmF1YeFL2ys4UtZ7O7XfCklyl1KIZFB2" +
                        "yZIAbFf59/Sg4kyrHcWOvls4y5YRU5w2dROT5lJaNqPKuZdV5H+hf0WuGs2wPCSoZnCUeapJwhPdU2or" +
                        "lcXqk5c75X0e2p+Yv7dn/BBfxTHr+tfEr9iiS31fQtUll1K++BfiG8is7qwkkbeU0m8vGSGSDk7YriRG" +
                        "QDAeTOB+9+Ef0v8O6MMLnl4zjZKtFXT/wAcVqn5xTT7Lr+AeL/0O8Qq08VkVpQk23Rk0mv8Eno15Saa7" +
                        "vp+FfiT9i79r3wjqk+jeIf2YPH2n39uSpUeEtcmikAO3dFNBbPHImRwyMQfWv63wPilw1iaanTzCg0/+" +
                        "nkE/mm7r0aufyHjvCvibDVHCpl9dNf9OptfJpWa807GB/wyt+0//wBG4ePf/CP8Q/8AyJXZ/wARCyD/A" +
                        "KDqH/g2H/yRx/8AEO+IP+gCv/4Kn/8AIn9Uv/BAv4N/tG/Cb4RfG+b4y+Gda8DeA/FWraPdfC3wf44t7" +
                        "nT7lLq2t7xNVvI7O8SOWOK4ElqocgBzGSOhJ/z3+mJxPkeY5lhFgqkKlaEZe0lBqSs3Hki5K6bVpu3S+" +
                        "p/oh9DXhfPMtyzFvHU50qM5xdOM04u6UueSi7NKV4K/Xl0P3e8S+HND8Y+HPEHhHxPpketeGvFVld+HP" +
                        "EOj3gJhu7G+ga1nhcAg7ZI3ZTz0NfyHgMdVwteFalLlqQalFrdNO6a9Gf2Dj8DRxVCdGrFSpzi4yT2aa" +
                        "s0/VaH8Lf7b3/BJv9pD9l/4kalH4A8A618Zfgzrt3PJ4A8ZeBtPudXvILZmLx2mqW+nxPJBcxJhTIUEU" +
                        "v3kOdyJ/rb4UfSLyPP8DF4itDD4qKXPGclFN9ZQcnZxfa/NHZ9G/wDIjxZ+jhnvD+PksNRniMLJvknCL" +
                        "k0ukZqKupJdbcst090v26+Dv7MH7VXiP/giV48+AfjfQ7+T4veIbG+1H4bfDvxWzw6rZaLaaxa6lZ6ZI" +
                        "t2QYpXW1kMELkbBIkZ2YIX+UuJuPuHqHitRzChOP1aEkqk46xc3FxlNW3S5lzNb2bV93/WXC/h/xFX8J" +
                        "62XV4S+szi3ThLSSgpRlGDvs3yvlT2uk7bL8yv+CNX7Hn7Suhft2/D74n+Mvgx4j+H/AIJ+EVv4ivPFe" +
                        "uePtHv9Gi87UfDmoaDBbQHUYofNmMt4rFEyVVSTgYr95+k94mZFW4RrYWjiqdWrXcFFQkpO0Zxm2+Vuy" +
                        "tHd7tpI/AvoueGOfUeMKGLr4WpSpUFNyc4ygryhKCS5kru8tlsk2z+ir/goL/wTq+F37engjTrbWr4+B" +
                        "/ix4OjmT4f/ABNsIBO8CS/O9new7k8+0d8Nt3Bkb5kYZdX/AIn8GfGzMOD8XJwXtMNUtz027X/vRfSSX" +
                        "ya0a2a/t/xp8D8v4xwkVUfssTTvyVEr2v8AZkusW9e6eqe6f8hH7Q//AASv/bb/AGctT1CPXvgzqPxA8" +
                        "LWZZrfx/wDCGC48Q6XNCM/vXWzi+0268c/aYY/yIJ/0o4K+kHwpnlOLp4qNKo/sVWoST7avll/27Jn+Z" +
                        "3G30eOLMjqSVTCyq019uknOLXfRc0f+3oo+H/8AhXfxA+1fYf8AhBtY+2+Z9k+x/wBmXvm+bu2bNnl53" +
                        "Z4xjOa/WP7awfLze2hbe/Mv8z8k/sTG83L7Gd9rcrvf7j7S/Z9/4Je/ts/tG6lp0fhf4J6p4M8M3zKZf" +
                        "H3xWt7jw9pEULf8tla+jWe4Tt/o0Upz24OPy3jPx+4UySEnVxcalRfYptTlfto7Rf8AicT9V4L+j7xZn" +
                        "lSKpYSVOm/t1E4Rt31V5L/CpH9kn/BP/wDYO+H/AOwb8JbrwX4d1E+LfHni6aHWvib8Q7m3S3k1K6hjM" +
                        "cMMMYLGO0tw7eVGzMcs7E5Ygf5ieMni9jeL8yVepH2dGmmqcL35U9231lLS7stkuh/qJ4MeD2C4Oy10K" +
                        "UvaVqjTqTtbma2SXSMdbK73b6n8yX/BW39jT9p7Uv27/in428KfBLxJ4+8I/FufSta8EeIfAOjahrNtc" +
                        "Y0mz06SCRtPilEU6TQspjkwSMMMqwNf3n9HDxPyCnwhh6FbF06VSgpKcZyjFr3pSTXM1dNPdea3R/Av0" +
                        "k/C3iCpxhiK9HCVKtKu4uEoRlJP3YxafKnZpp6PyezP6kf2QfgJeeC/2G/g1+z18bPDVrf3MXg2Lwd8S" +
                        "fBuo+XdWxXUYJDd2M2wsj7VnMT7SVJBwSMGv8/vErjCOK4txWY4Go0vbOVOS0futcsl1W1117n+hHhlw" +
                        "bLC8I4XLcdTTfsVGpB6r3k+aL6Peztp2P5z/wBtT/ggx8XvAet6343/AGRJV+Knw7upHvoPhjqt1FbeJ" +
                        "tJR2LGGCW7ZIb6GMfdYyJNjC7JGBc/234WfS+y3GUoUM4/cV1p7RK9OXm0ruDfXRx63itF/D3it9DvM8" +
                        "HWnXyb9/Qbv7NtKpHyTdlNLo7qXS0nq/wAPvGfwE+OXw61N9F8ffBzxT4L1aMlDp/ijQNVsZTjuouYE3" +
                        "DuCMgjkV/WGV8YZTjqfPh8VSqR7xnF/kz+Ss14OzfA1OTEYWrTl2lCS/NGp8P8A9mn9ob4rajDpXw3+B" +
                        "/ivxrezP5OPD2gancRxnIBMsqQ+XGoyMs7ADua58546yXLoOeJxdKmv704r7le7+R0ZLwHneYzUMLhKt" +
                        "R/3YSf3u1l8z+ir/gm9/wAEQ/F/g7x34U+O/wC2FFZ6fJ4RuLfxH4O+B9hNb6i8l/Awlhm1ieEyW/lxO" +
                        "A628TPvOPMYKGjf+J/HH6V2GxWEqZfk137ROMqrTjo9GqadndrTmaVuibs1/b/gX9EzE4XGU8wzqy9m1" +
                        "KNFNS95ap1Grxsnrypu/VpXT/qAr+BD/QIKACgAoAKAPmP9rD9k/wCFv7X/AMLb/wCG3xJsPJuYfMvvB" +
                        "njOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxGftQfsv8AxS/ZM+KWqfC74o6X5NzDuvfDfiSyV" +
                        "zp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6YyufU3/AATl/wCChfif9jDxxJoXiU3Xib4C+MplPjDwpC5eT" +
                        "TLltqDU7BG4EqqAJYxgSoMH5lQq4ysTOFz+0DwR438JfEnwl4f8eeA/EFt4p8H+KbaPV9A1/SJBJb3Nv" +
                        "IOGU8EEEFWVgGVgVYAgitjmaPyM/wCCpX/BO3wz+3f8MbH4z/BG60+8+O/gnT5W8KaxpM8Etn4u0mAyS" +
                        "/2W9zE/leYHLG1mJ2q5KOQrFk/pr6OnjrPhfGfVcU28DVev/TuT050u38yW6V1qrP8AmH6R/gNDinB/W" +
                        "sKksdRjp/08iteRvo/5G9E3Z2Tuv4yNP+EPxT1T4kw/Byx+HeszfFae+Hhpfh02nXSayt/naYHtJEWRH" +
                        "HVgyjA5OBzX+pNbiXL6eBeNlXh9XUebn5ly2782z+R/lXR4ZzGpj1go0J/WXLl5OV8/N25d0/XY/tV/4" +
                        "Jef8EvPC37Fnha3+JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgff+4n7vJf8Ayx8fvH7Ec" +
                        "U4h4bDNwwEHotnUa+1Ly/lj03eu3+rH0ffo+4fhTDrFYpKePmtXuqaf2Ief80uuy03/AF+r+aj+mgoAK" +
                        "ACgDwn9pn476T+zJ8DvH3x21/wxqPjHQvh3BbaprOgeE/s51CS2nvoLJ5IhdyRRkQibzX3OPkVsZOAfr" +
                        "uA+EKmfZtRwFOpGnOq2lKV+W6TdnZN62stN2j4/j7jClkGUVswqU5VIUkm4xtzWbSurtLS93rsmaPhH4" +
                        "5+B/F3wA0D9pCCeTTvh3rnhOD4xSS3oTz7TSpNKGryCVUYqJIo8hwDgMCM1hmXCWLw2czyxq9eNV0tNn" +
                        "Lm5Vbyb28joyzi7CYnJoZmm1QlSVXXdR5eZ380t/M8W/Yg/bd+G37dnw08S/Er4b6BqnhW18Ka3L4I1b" +
                        "QPGQsxerLHZW18kwFjPOnlSLc7VJYHcrDHHP1Xiv4U47hHH08LiZxm5w5043ta7VtUndW18mj5Twl8Wc" +
                        "BxhgKmKwsJQUJuDjO172Tvo2rO+nmmbPwY/a+8E/HT4/wD7RXwE8F+GdUN1+zTcWGieN/HN59jGkz6jf" +
                        "eYotbbypnlLo9vOr70XBjPqK5eKPDXF5Rk2CzCvUjbGJuEFfmUVbV6Ws04tWb3OrhbxNwmb51jsuoU5X" +
                        "wbSnN25XJ30Wt7pqSd0tmfWtfnB+khQAUAFABQAUAfCP/BRH9sfUv2G/gFZ/GjSvAcHxFurrxBp3gk+H" +
                        "9Qv5NNjVL62u7gy+bHBcHK/ZsbdvOevFfrvgp4Y0+Lc4eBnWdJKnKfMo82zirWuu/c/H/G7xQqcI5Msd" +
                        "CiqzdSMOVy5d1J3vZ9ux93V+RH7AFABQB89ftVftF+F/wBk34C+PP2gfGeh3/iTw14A/sv+0tF8MC3N9" +
                        "N/aus2miR+V9rkij+WS8Vmyw+UHHOBX2nh7wTiOI84o5dQnGFSrzWcr2XLGU3eyb2jbbc+K8ROOMPw3k" +
                        "1bMa8JTp0uW6ja75pxgrXaW8k99j5W+If8AwUY1bwbceDn8LfsSfGj4xaD418N6D8SdM8XfCbwjLrGlL" +
                        "Dr2npqCWrXNu5QzwrIFlVSQD3NfoWS+CVPFKr7XNcHh506k6bjUqcsrwk43s9bO2h+dZ3441MK6Xsspx" +
                        "mIhUpwqKVKlzRtOKla60ur2fmeDfD//AILM6Z8WdCfxT8K/2Evjl8S/DMdxJpUniP4f+E49ZsFuoVV5I" +
                        "TcadPNGJFDqWXdkAjI5FfX5z9F+pl1b2WLzfBUalr8s6nK7PZ2kk7abnx+S/Slp5lR9rhMnxtane3NCl" +
                        "zq63V4tq+q0P2b0+6a+sLG+a1ksmvIYrprK8XZNCZED7JF7MucEetfy9Wp8k3G97O11s/Q/qWjU54KVm" +
                        "rq9nuvU+Mv+Cf8A+1rqP7a37O2m/HLVPBEPw+u7/VtU8Nnw7YXz6jGq6dKsYk86SGAkvu6beK/UfGTw4" +
                        "hwrncsBCq6qUYy5muX4ulrv8z8t8GPEmfFeSRx86KpNzlHlT5vh63st/Q+2a/Kj9XCgAoAKACgAoAKAC" +
                        "gAoAKACgAoAKACgAoAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE" +
                        "7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqw" +
                        "BFYtWOmMrl34bftgftDfCP4QfED4F+APiNd6D8OfiRj+3NJgOZbff8ALcfYpj89t9pT5J/LI3rwaLg4o" +
                        "+1P+CZn/BQv4t/s1eKNM+CVt4K1D41/Dbx9qUUOk/DvQGL61p+pXbiNpNJEmUbzfvSW7lUZhuDRkuzOM" +
                        "rEzhc/sds4YLg2+szaT/Z+q3NtHDMLtbc3cMZ/e+RJJA0inYxOQrsuckE9a6fay5eW7tvbpfucXso83N" +
                        "Zc1rX627GjUGgUAFABQAUAeZ/Gn4baf8Y/g/wDFL4S6qUXT/iX4e1jwLczTAkRDVdPlshJwCQUMgYEcg" +
                        "gEc173C2eTyzM8PjIfFRqRn/wCAyTt87WPA4qyKGaZZiMHP4a1OUP8AwKLV/le5/NZ4F/aM8Sab/wAEM" +
                        "/FfwmDSR/F6y8U3v7EVnolwQt295retC9ezZSeSNMu5oVx/cx2Jr+6c34IoVPFqnjP+YZ0li2+loQtzf" +
                        "+DIqXz9D+EMo44r0/CKpg9frSqvCJdbzndx/wDBcnH5eTPpP9i6w8Pf8E+f20f2zf2dtUuhZ/Dey+F3h" +
                        "T9oXQJmHlpPB4P0CGy1aeMvjLyyzzs5PLeXuPQ18L4pVq3GfC2V5lBXrvE1KMvJ1ZtwT8klFLtex934V" +
                        "0aHBXFWa5ZN2oLDU68fNUoJTa823Jvva54b+z5+0J4t/Y0/4JseMv2uV02yvv2h/wBvD4narqfgk+J38" +
                        "u1hvNVu7q3iubvzWTNvb/Yru6VmIVjKgYhWr6zjPgvDcUcdUsn5msFlmGip8u7UUm1H+9LmhHTVcrsro" +
                        "+R4K41xPC3AdXOeWLx2Z4mThzbJybScv7seWctdHzK7szt/jT8bP2iv2Q/hvov7TGif8FOPDP7V3irw5" +
                        "e6TJ8ZP2ep5PCJ0vVbLUr2G0nj0aLSZmuIjA8yjdGitsDSnaFMZ8rhbhXJOJcdPK6mQVMDTmpeyr/vea" +
                        "Lim06jkuV3SejbV7R1bUj1uKuLM84ZwMM0p8QU8dUg4+1ofuuWSk0mqai+ZWbWqSdry0ScX/RH4O8U6X" +
                        "458IeFfGuhuZNF8YabY+KdHkkxua11C1S7iJ2kjJSQdDX8U5nl9TCYmpQqfHTk4v1i7P8Uf27leY08Xh" +
                        "qden8FSKkvSSuvwZ+Dnw38Zft+ftdftR/tv/AfwL+06/wAD/hF8D/Gl/Yn4gWvh/TdW1qCC5nubXTdG0" +
                        "9ZBaqsKi0lmnmMhlGEXcA3P9e55lfB3DfD+U5hiMB9ZxOJop8nPKMG0k51Jb6+8lFW5d3bQ/jzIs04z4" +
                        "m4hzfL8PmH1bDYas1zqEZTSbahTjtp7rcnfm2V9Tl/2dviB/wAFJP2iviN8cf2G9Z/ab074dX/7Luq3V" +
                        "t8QP2m9E0Czv/FOv2FzOYNJtILV3ggiDiGSaW4BEwXYjEsGL+hxtk3A2SYHCZ9DASqrGxXJh3NxpwaV5" +
                        "yb1btdJR1je7WlrefwRnXHeeY7F5BPMI0XgpPnxCgpVJpu0IqOiV7NuWkrWT1vf65/4Jx/tAftAXvxl/" +
                        "aq/Yx/aZ8bw/FXx7+zRe6dc+FfirDaR2d1rOi6krlftUduNgdEMDrktJ+8ZWZtm4/m3jfwbk0Mry7O8r" +
                        "pOhRxilzU73UZx/lb11fMui91NJXsfpXgZxpnU80zHI81rKvWwbjy1LWc4S/mS0ulyvq/eabdrnyx+1d" +
                        "4n+P/7O/h/x7471b/gsTok37QngW2u/F2k/s+T6P4N02xv4bONrgaV/Zcc803nTRrshkliJkfjAJ3L+h" +
                        "eHeAybO61HDw4Zn9SqtRdbmqyab05+eyVk9Wk9F6Wf554jZhnWSUa2InxRD67STkqHLSipJa8nJdu7Wi" +
                        "bWr063XD/8ABT347XX7TX/BHf4BfHTUdMh0bV/iF4k8Nalr2mad5n2aLUbez1ixuxCJiWERngcoGJIXA" +
                        "JbqfW8A+EY5D4m4zARk5RpU6iTe7i3Tcb262av59EeR9IDjCWf+GGCzCUVGVWpTbS2Ukqila+trp28ur" +
                        "3PsXS/2hvjt+3l+1JP4P/ZT+IV18Lv2Ov2fr6TSvjJ8ePDltp1xdeM9eQK7aTpEmoxXKeSqFf3yJwrGQ" +
                        "khoA/5jiOC8o4Q4fVbNqKrZnio3pUZOSVKH881Fp3v9lvdculptfqGH42zjjHiF0MoruhleFlarWiot1" +
                        "Z/yU3JNWt9pLZ82t4J8V8dP2p/iN8df2yviT+y34D/as0T9jT4Mfs/WNifif8UdQm0KPxD4i1/UoROun" +
                        "6a2vSoscUAJEjxgMrI24sHQV6vCPh7gco4YoZriMunmGKxUn7OmlPkhCLtzT5Fq30T0aatazPJ4v8RMd" +
                        "nHFNfKcPmMMvwuFivaVG4c85yV+WHO9EurWqad73R137Dn7T/xOsP2tfif+xP8AEz4/aV+1h4e0zw1F8" +
                        "Xvg38ffDf8AZJu5LBbmCzudM1I6LJLC80bT5DM2/wCQliVkRU83xZ4BwE+HMPnmFwcsDN1PZVaMua17N" +
                        "qcOdJpO2y01VtU2/T8I/EDMIcSYjIsVjYY6EaftaVaPLfluk4T5G02r7vXRtu0kl6j/AMFov+UaX7Sf/" +
                        "cnf+p9odfP/AEXP+S7wP/cX/wBM1D6H6VH/ACQWP/7hf+nqZ9mfsrf8mwfs4f8AYheD/wD1HrSvzDxC/" +
                        "wCR/jv+v9X/ANLkfqXh3/yT+A/68Uv/AEiJ+XP/AAb/AH/Jimrf9j74g/8ATdpdfv8A9Mn/AJK6P/XiH" +
                        "/pUz+e/oYf8khL/AK/z/wDSYH7gV/KB/Wp/K5/wSx+Cn7bfx0/Y1ay+EX7UkX7Lfwv8La3rcHg+Pw34f" +
                        "t9X1bxHrcjx3M899dXE0bW1pEWSFEhyWO8spAXP+hH0g+KuFMo4n5sZl7xuInCHNzTcYwhqkopJ80nq2" +
                        "3tok97f53/R44U4szfhflweYLBYeE58vLBSlUno25NtcsVoklvq2tr/AKhf8E4f2mfj7+1B+zt8c/A/x" +
                        "O8QWWlftNfAvW9d+Cl/8QrawgltJNShtGSy1Ka1iSKCRorjeJI0VVcRg7RvNfgPjhwHk+QZ3hK+Fg5YD" +
                        "EwhVULu/K370E3dq8bWbbavvof0F4GcfZzxBkeMw+KnGOYYac6TnZW5kvdm0rJ2le6SSdtlc+Af2pvjt" +
                        "8c/2O9Euvit4a/4K0aD+0T8Y/A+o2H/AAn/AOzXq2neEobXVra51CG0uLa30/SJ55LR4fM3yIAkgiDOr" +
                        "oVG79k8PuEcp4mqrCVeHJ4TC1Iy5K6lUbi1FtNykkpJ2snquayad9PxjxD4vzfhik8XS4khi8VSlHnoO" +
                        "NJKSckmlGLbi1e7Wj5btNW1+nf+CjH7Yn7RHgew/wCCePin9lnUxpmsftK6miweBtWjtprPWpdZtNHfT" +
                        "LK8eaISCMS34DmNo2IJ5HBHwPgj4ZZJi551SzaPNHBx+NXTgoupzyjZ2vaOl7ryZ9/44+J+d4SGSVcpl" +
                        "yyxkvgdmpuSp8kZXV7Xlraz80cV+03oH/BTD9ij4bj9r1v2y4/2hIfBNxp+qfGz4I614W07S9AfTry6i" +
                        "tZU05rUtIIoZJlUuqwybMyZGCh9XgPGcCcVY7+xv7L+quopKlVVSUp8yTa576XaV7NyV/d7M8rj7Bce8" +
                        "KYD+2f7VWLVNxdWi6cYw5W0nyW1sm7XSi7e90sdP+2/+2R+0Ra+MP8Agmfr/wCx/r628X7Yljrctn4I8" +
                        "WQ2z6TdSappuhPpU+oMIHnRbFtYaaYRuMiPBHWvP8KPDHJJYbPqecwu8BKF5xb5lyyqc6jrZ8/JZXT3u" +
                        "eh4teKOdxxWQVMlnZZhGdoSS5XzRp8jlpdcntHKVmtrHF/tOv8A8FGv+CeXhfRf2r9Q/a5b9qr4eaPqW" +
                        "l2Hx4+Fnizwzpui2cdpqN0lmJdPazMxgjM0qxK0ZjZHZCyyKWQerwEuCONcRPKI5b9SryjJ0akakpu8V" +
                        "e0r2u7Jtp3TSaTi7M8rj98c8E4eGcSzP69QjKKrU5U4wVpO142vZXaStZptNqSuj2X9rr9tvxd4p+NXw" +
                        "B/Zd/Z/+Nmh/s5WHxd8KQfHv4iftH/EAaU39keF79JPsVrp8WrSpbteXHlkkMcjchVgN7D5fw28KcNh8" +
                        "qxma5jhJ4uVCq6MKEOb3qitzOTiubljf8HdPRH1PiX4sYnEZrgspy7FwwkcRSVadefL7tN35VFSfLzSt" +
                        "+Ks1qzz/wCE37SnxN/Z2/bV+CP7PWu/tiab+218Cv2lbbU9L0PxIJdAuvEPhPxHp0PnKk8ugyyl4LgtG" +
                        "q+aQCHYqB5TF/Z4j4FwGd8K4vMaeWSy7F4Nxbj76hUhJ20U0rOOr07K7fMreLw3x5j8k4rwmW1M0jmWD" +
                        "xiklL3HOnOKvq4N3UtFr3dkuV34/wCGXxE/b8/a1/az/bh/Z28B/tKx/Br4Q/BXxlcRX3xCg0LTdU8Q6" +
                        "dY3F1e2enaNpiSCBFjl+xyySTs3mL5YAb5irenn2ScHcOcOZTmWIwH1jE4iirQ55RhJpRc6k93dcySiv" +
                        "dd9tLrzMgzzjPiTiTN8tw+P+r4bDVnefJGU4puShTgtFZ8rbk/eVlrrZ/Rn7AHxx/aX0P8Aab/aW/YW/" +
                        "ai8dr8Y/E3wSsdM8deAvi8tlb6fPqGiX627BbmOAfMzLfQMpZmZGEiM7gKR8R4ycJ5FVyHAZ9lVH6vTx" +
                        "MpQnSu5KM1fZv8AwyXRNcrSWp9x4McXZ9Rz/H5Bm1b6xUw0YzhVsouUHbdLf4ovq0+ZNvQ/YOv5oP6cC" +
                        "gAoAKACgAoAKAPmP9rD9k/4W/tf/C2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVl" +
                        "TVyoysfxWfHT9jT47/Ab472/wCz7r/g+51/xlr9ylp8PJvDUEtxb+Jbe4l8qCewIGWDHh1PzRtkPgg1i" +
                        "0dKkmj+pb/gm3/wTb8NfsgeGoPiD8QYLbxL+0R4ltvL1XVY9s9t4ctp1+awsG5Bcg4nnH3/ALq/JkvpG" +
                        "NjCc7n6s1ZmFABQAUAFABQAUAfzD6V+yd8XU/4K66t8MX8DaqP2Xl+Jkf7bh8WDTr1dDGsQ+H5dVjRLg" +
                        "p9nLf2hdC3MecgKcDFf3viPEXLX4bRxXto/2h9W+qcvMuflc1F6X5vgXNfzP4Bw/hxma8S5YX2Mv7P+s" +
                        "/W+blfJzKDktfh+OXLbfQ9N/wCC23wb+Ndz8Sfgf8YPgB4I1fxp4i8eeFfF/wCzH8RLbwlp15fuujavF" +
                        "i2Wf7HG+yNjqV0dz4UMB1yceD9FTifKo4HF4PMasKcKVWliIc0kvei9bXau/chotbHvfSx4WzWWPwmNy" +
                        "6jOpOrSq4efLFy92S0vZOy9+er0ukfRf/BQT9hLxh4r/YI+BXwl+B3hu18deL/2T7rwt4j0XwNdpG8Xi" +
                        "W10LSpNJvbfyptiSvOJfPZWIMm1lGWcA/E+DPi7hsPxhi8Zj6jpUscqkXNb03OSlF3WyVuVNbXT2R9x4" +
                        "0+D+KxPBuDweApqrVwLpyUHtUUIuMlZ2u3fmae9mt2fMvg/4z/8ExPEFrouhav/AMEt/Eml/F66Ntp+v" +
                        "/CXSvhCl/f2V9L+7kVXCw+ZCkiuA5VXKqT5YOVH3mZ8LcfUZTqQ4gpywyu1UeJsmunezatpdq7+LqfBZ" +
                        "XxV4f14wpz4eqRxTspUlheaSfXtdJ31sm0vhT0P6KNG0fSvD2kaVoGhadDo+h6HbQaPo2k6bGsNva2lt" +
                        "EsEMMUaAKqIihVUDAAxX8T4rE1K9WVSpJynJttvVtvVtvu2f29hcLToUo06cVGEUkktEktEkuyWx+UH/" +
                        "BOvwV4y8L/tSf8ABULWPEvhLU/Duk+LviVbar4U1TXbC6tLfVLUS6sTNaSXCIs8Y3r80ZI5HPNf0V42Z" +
                        "rhcRw/w/ClUjOVPDtSSabi7Q0kk9H5M/nHwPyrFYfiHiCdWlKEamITi3FpSV56xbWq80cz+wt4F8b+Hv" +
                        "+CjX/BTjxR4g8HarofhnxbqXh2Xwr4i1jT7u2sdTSJr3e1pcTxrHMF3DJRjjNd3i3m+Er8EZBSp1YyqU" +
                        "4z5oqSbj8PxJO6+ZweEOT4uhxxn9WpSlGnUlDlk4tKXxfC2rP5Hmfw1+HXx0tf2+v8AgrX4j8B+F9V8O" +
                        "+IPGnga3074J+NtTsbi00278Qjw9BFZNbXlykcEhjuQu7a+Bg5xivez3O8olwdw5SxFSM4U6zdWCaclD" +
                        "nfNeKu1eN+h4OQ5Hm8eMuJKuHpyhOpQSpTaai58i5bSdk7St10Pz/8AgVrHwk8MfsTfE/8AZut/2GPGP" +
                        "jb/AIKDeMNH8aeD/HGs674FN1qlrqOtR6hbR6rNrWqJ5lrBbW0oKou1jKhABLmU/snF2GzLEcVYfM3m9" +
                        "KnktOdKUEq1ouMeVuCpx0k5SW7uuV+XKfi/CGKy3D8J4jK1lFapnVSFWM26N5KU+ZKbqS1ioxeys+Zba" +
                        "8z9K/aB+EXxY1X/AIIWfsufD3S/hh4i1Lx9o/iW1udW8D2Gi6lNrFrGmo+IizTWccJmRQJFyWQfeHqK8" +
                        "Pg3iXLqfi3mGJniKaoypu03OKi/dpbSvZ7Pr0Pe404ZzKp4Q5fhoYeo60aivBQk5L3qu8bXW66dT6m8Z" +
                        "fBXxl/wSz/al8JfGr9mP4c634x/Y4+Of2LwD8e/gp8P7PUdbvPDl/ZwFLfV7S3hE87gKGlBIbJ82JmXz" +
                        "Yiv57lnFWF8QeH6mBzSvCnmeGvOjVm4wU03rCTdktbLp9mST5ZX/Q804UxXh5xDSx2VUJ1MrxNoVqUFK" +
                        "bhJLScUrt6XfX7UW1zRt5F8bPhL4C/Zs/bl+Nvx2/aP/ZKuv2pf2Uv2oYNK8YeGviPovheLxNeeDtZit" +
                        "ws0M9tKqtBFKZHLZ2l0ERXe6Oo+l4V4jxme8JYTAZZmSwWY4JyjKDqezVWN9Gmt2rK29nzXsmmfM8V8N" +
                        "4PIeLsXmGZ5a8bl2NUZRqKn7R0pJapp7J3d9rrltdpo/Qf9hfXv2J/H3xB8V6/+y/8Ashal8Gr/AMO6T" +
                        "FHJ8WdY8ADwrY6jb6hMjSWVpdt80jjy0eRCFyMEbgMj8Y8W8HxVg8FTp5rmUcQpy/hqt7RxcVpKUem7S" +
                        "evZ2P2vwixnCmNxtSplWWSw7hH+I6Ps1JSesYy6vRNrTurnRf8ABXvwr4o8bf8ABO79oXwx4M8N3/i7x" +
                        "Lqf/CJ/2b4e8MWdxf31x5PjnRriTyoLRJJH2Rxs7YU4UEngGuL6NeY4fCca4KrXqRp017S8pNRSvRqJX" +
                        "bsldu3qdv0mMuxGL4IxtKhTlUqS9naMU5N2rU27JXbsk36H1z+zNp9/pP7N/wCz7pWq2U2manpngjwpp" +
                        "+pabqEbwz288Og2sckckcgDI6MCGUgEEYNfm3HlaFTPMbODTi61RprVNObs0+qZ+lcA0Z08iwUJpxlGj" +
                        "TTT0aahG6a6NH5r/wDBC7wL43+Hn7FWqaD4/wDB2q+B9dfxvruoJovjDT7vTLswSafpqpIIb2ON9jFCA" +
                        "2MHB9K/dPpbZvhMbxVGph6sakPYwV4yUlfmnpdNq5+EfRDyfF4LhSVPEUpUp+2m7Si4u3LDWzSdj9lq/" +
                        "mA/qQ/I7/giV4K8ZeAf2FtB8PeO/CWp+Ctfj8S+IruTQ/FthdabeLFLcRlHMN5HG4VgODjBr+kPpV5rh" +
                        "cZxdOph6kakPZwV4tSWz6ptH81fRPyrFYLhCFPEUpU5+0m7Si4u110aTPg74QfCP9piD9lz/gsVoXw18" +
                        "Fa/4a+Jnjzx/rOofD+G407ULG81nSZNWle/GmeYkbztcWBmjhMWdzMoGSRX6/xLxJkL4g4YqYqrCdClQ" +
                        "ip+9FqMuVcvPvblnyt32Sdz8e4Z4az9cP8AFFPC0qkMRVrzcPdknOPM+bk2vzQ5krbtqx82+ONX+CHjj" +
                        "/gnFP8As3fsufsL+Lbj9omHRPD0fxo8at4DaO/0a+0bU9P1bV57nWJomubmS6mtdkMEZyY5AAqBBHX3O" +
                        "U4bNsJxwszzXN6SwXPP2UPbaSUoyjBKCfLFRTu5Pqt3fmPhM2xOU4vgZ5ZlOUVXjlCHtZ+x96DhKMpt1" +
                        "GuaTk1aMV0eyS5T6L/4KJX/AI38EeAf+CJup+FfBs/iP4keENR8LX/hz4fXgazub/W9PsvC8lvpzi4Cm" +
                        "J5Z41iO8DaTz0r4nwUo4TF4ziqNWqoUKkailNapQk615K26Sd9Nz7jxurYvCYPhOdGk516cqbjB6Nziq" +
                        "NoO+zclbXY9b/a9/bl8Rfts/BXXf2Qf2Xv2b/iK3xp+MTWPhTxza/ErwzNoll4QsBexT3h1G4mkeONv3" +
                        "flF2wihi27cFU/N+GvhLQ4VzWGc5rjsP9Vw95Q9nUU3Vdmo8qSu9723drWtdr6XxM8Xa/FmVTyXKcBiP" +
                        "reItGftKbgqSunLnbdlta+yu3e9k+H/AOCgvhvxd+yr49/4IveEvhZ4Vn+LPiv4CR+INB0vwppAWK78R" +
                        "/2BpvhWC8jgDA4nuooZSgCk72GFJwD63gzjsNxDg+Ka2LqKhTxTg3J7Q55VnFvyi2r+S1a3PJ8acBieH" +
                        "cZwrRwlN16mF50orepyRoqSXnJJ283onsb/AO2f+114h/4KLfCeH9i79lX4A+O28X/FfVNDg+K/iD4pe" +
                        "G7jQ9N8H6dpup2+sN9undpVSRZ7aMuc7dgYIXdlU8fhd4bUeCcxed5tjKHsqEZ+zjTmpyqylFx91aXVm" +
                        "7db2bsk2dnin4l1+OMtWR5Rgq/ta8oe0lUpuEaUYyUveetndK/S10rtpEf7av7J1n+z7+0h+z5+0rq/7" +
                        "N0v7XH7MvhbwFpn7Pnxj8C6fo8euavph0K2ktrPWY7OQkH90sQ3t8q7HR3TzEYPws8RZZ1keNyyGOWBx" +
                        "868q1KblyRlztOVNy9b6bu6aT5WifFXw4jkue4LNJ4B4/AQoRoVYKPPKPImo1FH0trsrNNrmTPoz9k3x" +
                        "j/wTp+Kfxt8G2X7O/7D2p+E/F2lx3fiez+Ld58M00PS9AmsYpBtl1F+Yp3YGOPapBbK7s4B+I8Rss42y" +
                        "/KqssyzaM6UrRdNV+eU07bR6pbvrbWx9z4b5pwPmObUo5blEqdWN5Kq8PyRg1fefRt6LpfS5Z/4JweBf" +
                        "G/hb9tX/gq/r3ifwdqvhzQvGXjfQNQ8Ia1r2n3dnaarBHqHidnks5riNEnRRMhLRkgbl9RUeOGb4TEcK" +
                        "8O06VWM506M1JKSbi+WjpJJ3T0e/Zl+BeT4vD8V8R1KtKUIVK0HFuLSkuatrFtWa1W190dL8HvBXjKx/" +
                        "wCCxv7W3jm98JanZ+Cta+GvhrStG8YXVhdR6Xd3US6Lvhhu3QQySL5bblViRg5HBrh4mzXCz8MctoRqR" +
                        "dWOIqNxuuZJ+01cb3S1Wtjv4YyrFQ8UMyxEqUlSlh6aUnF8ra9ndKVrN6PRM+k/2Gv2wNf/AGxvBHj7x" +
                        "hr/AMBdb+As3grxDceB7bR/GU0lw1+kEEcpmV5bOyKyIX2SxBWCNgb2zx8L4s+GlHhjF0aNPGQxSqU1O" +
                        "8Va121b4paPdO6uuiPvPCPxNrcUYStWqYOeFdOo4Wk73sk7/DHVbNWdn1Z9vV+UH6yFABQAUAFABQAUA" +
                        "ZF54f0HUdV0bXdQ0S0vtc8O/aP+Ef1m8toZbuw+2RiGf7PM6l4vNQBX2EbhwcigDXoAKACgAoAKACgAo" +
                        "AKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoA/PX9tL9kDxv8AtL/F79iX4ieFPE2la" +
                        "Dpn7MXj20+K/i2x8Qm7E+oWdvqmlXzQ2n2aGVfNK2DgeYVGSOeuP2jwt8S8JkOWZrhq1OUpYyg6cXG1o" +
                        "txmryu1p7y2uz8U8VfDLF59meU4mjUjGOCrqpJSveSUoO0bJ6+697LY/Qqvxc/az4N/ag/ZR8ZfHP8Aa" +
                        "Y/Yg+N3h7xHpmkaB+y9rHiXxH4u0nWTdC81CLWotLjiWz8iKRNyGxbd5jKORjPNfr/APiJhcpyHNsDUh" +
                        "KU8bCnGLVrR5HO/Ndp68ytZM/HfEDw5xWb5/lGPp1Ixhgp1JSTveSmoW5bJrTld7tH3lX5AfsQUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQB//2Qs=";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.SideBySideBarSeriesLabel sideBySideBarSeriesLabel1 = new DevExpress.XtraCharts.SideBySideBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.ChartTitle chartTitle1 = new DevExpress.XtraCharts.ChartTitle();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary10 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary11 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary12 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary13 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary14 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary15 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary16 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary17 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.pageFooterBand1 = new DevExpress.XtraReports.UI.PageFooterBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupFooter3 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupHeader2 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label78 = new DevExpress.XtraReports.UI.XRLabel();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label55 = new DevExpress.XtraReports.UI.XRLabel();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label36 = new DevExpress.XtraReports.UI.XRLabel();
            this.label37 = new DevExpress.XtraReports.UI.XRLabel();
            this.label56 = new DevExpress.XtraReports.UI.XRLabel();
            this.label39 = new DevExpress.XtraReports.UI.XRLabel();
            this.label38 = new DevExpress.XtraReports.UI.XRLabel();
            this.label26 = new DevExpress.XtraReports.UI.XRLabel();
            this.label25 = new DevExpress.XtraReports.UI.XRLabel();
            this.label24 = new DevExpress.XtraReports.UI.XRLabel();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo4 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label33 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.pageBreak1 = new DevExpress.XtraReports.UI.XRPageBreak();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.RepVentaNeta = new XtraReportSerialization.RepVentaNetaDataSet();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.label53 = new DevExpress.XtraReports.UI.XRLabel();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.label47 = new DevExpress.XtraReports.UI.XRLabel();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.label50 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label48 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label51 = new DevExpress.XtraReports.UI.XRLabel();
            this.label57 = new DevExpress.XtraReports.UI.XRLabel();
            this.pageInfo5 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox3 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.line12 = new DevExpress.XtraReports.UI.XRLine();
            this.line11 = new DevExpress.XtraReports.UI.XRLine();
            this.label92 = new DevExpress.XtraReports.UI.XRLabel();
            this.label91 = new DevExpress.XtraReports.UI.XRLabel();
            this.label90 = new DevExpress.XtraReports.UI.XRLabel();
            this.label87 = new DevExpress.XtraReports.UI.XRLabel();
            this.label86 = new DevExpress.XtraReports.UI.XRLabel();
            this.label89 = new DevExpress.XtraReports.UI.XRLabel();
            this.label88 = new DevExpress.XtraReports.UI.XRLabel();
            this.TableTableAdapter = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand1 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection1 = new System.Data.OleDb.OleDbConnection();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.Total = new DevExpress.XtraReports.UI.CalculatedField();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(sideBySideBarSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label3,
                        this.label17,
                        this.label78,
                        this.label45,
                        this.label46,
                        this.label55,
                        this.label42});
            this.Detail.HeightF = 18.00003F;
            this.Detail.Name = "Detail";
            this.Detail.Scripts.OnBeforePrint = "Detail_BeforePrint_1";
            // 
            // pageFooterBand1
            // 
            this.pageFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line7,
                        this.pageInfo2,
                        this.pageInfo1});
            this.pageFooterBand1.HeightF = 24.25003F;
            this.pageFooterBand1.Name = "pageFooterBand1";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 38F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 63F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label36,
                        this.label37,
                        this.label56,
                        this.label39,
                        this.label38,
                        this.label26,
                        this.label25,
                        this.label24,
                        this.line1,
                        this.pageInfo4,
                        this.label33,
                        this.pictureBox1,
                        this.pageBreak1,
                        this.chart1});
            this.ReportFooter.HeightF = 661.6673F;
            this.ReportFooter.Name = "ReportFooter";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label9,
                        this.label4});
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Orden1", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("Articulo", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 18.00003F;
            this.GroupHeader1.KeepTogether = true;
            this.GroupHeader1.Name = "GroupHeader1";
            this.GroupHeader1.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label20,
                        this.line3,
                        this.label14,
                        this.label12,
                        this.label13});
            this.GroupFooter1.HeightF = 20.08336F;
            this.GroupFooter1.KeepTogether = true;
            this.GroupFooter1.Level = 1;
            this.GroupFooter1.Name = "GroupFooter1";
            this.GroupFooter1.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            // 
            // GroupFooter3
            // 
            this.GroupFooter3.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label19,
                        this.label40,
                        this.label53,
                        this.line8,
                        this.label47,
                        this.label49,
                        this.label50});
            this.GroupFooter3.HeightF = 21.12503F;
            this.GroupFooter3.KeepTogether = true;
            this.GroupFooter3.Name = "GroupFooter3";
            this.GroupFooter3.Scripts.OnBeforePrint = "Detail_BeforePrint_1";
            // 
            // GroupHeader2
            // 
            this.GroupHeader2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label2,
                        this.label10,
                        this.label48,
                        this.label43,
                        this.label18,
                        this.label51,
                        this.label57,
                        this.pageInfo5,
                        this.label1,
                        this.pictureBox3,
                        this.line5,
                        this.label16,
                        this.label11,
                        this.label7,
                        this.line12,
                        this.line11,
                        this.label92,
                        this.label91,
                        this.label90,
                        this.label87,
                        this.label86,
                        this.label89,
                        this.label88});
            this.GroupHeader2.HeightF = 195.8333F;
            this.GroupHeader2.KeepTogether = true;
            this.GroupHeader2.Level = 1;
            this.GroupHeader2.Name = "GroupHeader2";
            this.GroupHeader2.RepeatEveryPage = true;
            // 
            // label3
            // 
            this.label3.CanGrow = false;
            this.label3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Sistema")});
            this.label3.Font = new System.Drawing.Font("Arial", 6F);
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(1012.542F, 0F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(62.79108F, 18F);
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:$#,#.00}";
            this.label3.Summary = summary1;
            this.label3.Text = "label3";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label3.WordWrap = false;
            // 
            // label17
            // 
            this.label17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.OtraMonedaCostoTotal", "{0:$#,#.00}")});
            this.label17.Font = new System.Drawing.Font("Arial", 6F);
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(648.1377F, 0F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.Scripts.OnBeforePrint = "label10_BeforePrint";
            this.label17.SizeF = new System.Drawing.SizeF(111.8745F, 18F);
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:$#,#.00}";
            this.label17.Summary = summary2;
            this.label17.Text = "label17";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label78
            // 
            this.label78.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Fecha", "{0:d\' de \'MMMM\' de \'yyyy}")});
            this.label78.Font = new System.Drawing.Font("Arial", 6F);
            this.label78.LocationFloat = new DevExpress.Utils.PointFloat(902.4163F, 0F);
            this.label78.Name = "label78";
            this.label78.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label78.SizeF = new System.Drawing.SizeF(110.1252F, 18.00003F);
            this.label78.StylePriority.UseFont = false;
            this.label78.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:$#,#.00}";
            this.label78.Summary = summary3;
            this.label78.Text = "label78";
            this.label78.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label45
            // 
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotal", "{0:$#,#.00}")});
            this.label45.Font = new System.Drawing.Font("Arial", 6F);
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(548.1377F, 0F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label45.StylePriority.UseFont = false;
            this.label45.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:$#,#.00}";
            this.label45.Summary = summary4;
            this.label45.Text = "label45";
            this.label45.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label46
            // 
            this.label46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Costo", "{0:$#,#.00}")});
            this.label46.Font = new System.Drawing.Font("Arial", 6F);
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(448.1377F, 0F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label46.StylePriority.UseFont = false;
            this.label46.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:$#,#.00}";
            this.label46.Summary = summary5;
            this.label46.Text = "label46";
            this.label46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label55
            // 
            this.label55.CanGrow = false;
            this.label55.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Movimiento")});
            this.label55.Font = new System.Drawing.Font("Arial", 6F);
            this.label55.LocationFloat = new DevExpress.Utils.PointFloat(760.0121F, 0F);
            this.label55.Name = "label55";
            this.label55.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label55.SizeF = new System.Drawing.SizeF(142.4042F, 18F);
            this.label55.StylePriority.UseFont = false;
            this.label55.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:$#,#.00}";
            this.label55.Summary = summary6;
            this.label55.Text = "label55";
            this.label55.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label55.WordWrap = false;
            // 
            // label42
            // 
            this.label42.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Existencia", "{0:#,#.00}")});
            this.label42.Font = new System.Drawing.Font("Arial", 6F);
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(378.1377F, 0F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label42.StylePriority.UseFont = false;
            this.label42.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:$#,#.00}";
            this.label42.Summary = summary7;
            this.label42.Text = "label42";
            this.label42.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line7
            // 
            this.line7.BorderColor = System.Drawing.Color.Gray;
            this.line7.ForeColor = System.Drawing.Color.Gray;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(1075.333F, 2.249908F);
            this.line7.StylePriority.UseBorderColor = false;
            this.line7.StylePriority.UseForeColor = false;
            // 
            // pageInfo2
            // 
            this.pageInfo2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo2.Format = "Página {0} de {1}";
            this.pageInfo2.LocationFloat = new DevExpress.Utils.PointFloat(550.5F, 2.333196F);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo2.SizeF = new System.Drawing.SizeF(523.1788F, 18.00003F);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.StylePriority.UseFont = false;
            this.pageInfo2.StylePriority.UseTextAlignment = false;
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.249908F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(550.5F, 18F);
            this.pageInfo1.StyleName = "PageInfo";
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label36
            // 
            this.label36.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label36.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label36.LocationFloat = new DevExpress.Utils.PointFloat(888.1666F, 139.5F);
            this.label36.Name = "label36";
            this.label36.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label36.SizeF = new System.Drawing.SizeF(62.17908F, 18.00003F);
            this.label36.StyleName = "Title";
            this.label36.StylePriority.UseFont = false;
            this.label36.StylePriority.UseForeColor = false;
            this.label36.StylePriority.UseTextAlignment = false;
            this.label36.Text = "A la Fecha ";
            this.label36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label37
            // 
            this.label37.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaA", "{0:d\' de \'MMMM\' de \'yyyy}")});
            this.label37.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label37.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label37.LocationFloat = new DevExpress.Utils.PointFloat(950.3456F, 140F);
            this.label37.Name = "label37";
            this.label37.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label37.SizeF = new System.Drawing.SizeF(123.3332F, 17.99997F);
            this.label37.StyleName = "Title";
            this.label37.StylePriority.UseFont = false;
            this.label37.StylePriority.UseForeColor = false;
            this.label37.StylePriority.UseTextAlignment = false;
            this.label37.Text = "label10";
            this.label37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label56
            // 
            this.label56.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label56.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label56.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label56.LocationFloat = new DevExpress.Utils.PointFloat(760.33F, 14F);
            this.label56.Name = "label56";
            this.label56.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label56.SizeF = new System.Drawing.SizeF(313.6666F, 18.00001F);
            this.label56.StyleName = "Title";
            this.label56.StylePriority.UseFont = false;
            this.label56.StylePriority.UseForeColor = false;
            this.label56.StylePriority.UseTextAlignment = false;
            this.label56.Text = "label41";
            this.label56.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label39
            // 
            this.label39.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion4")});
            this.label39.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label39.LocationFloat = new DevExpress.Utils.PointFloat(760.0121F, 68F);
            this.label39.Name = "label39";
            this.label39.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label39.SizeF = new System.Drawing.SizeF(313.6667F, 18F);
            this.label39.StylePriority.UseFont = false;
            this.label39.StylePriority.UseTextAlignment = false;
            this.label39.Text = "label31";
            this.label39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label38
            // 
            this.label38.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label38.LocationFloat = new DevExpress.Utils.PointFloat(760.33F, 50F);
            this.label38.Name = "label38";
            this.label38.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label38.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label38.StylePriority.UseFont = false;
            this.label38.StylePriority.UseTextAlignment = false;
            this.label38.Text = "[Direccion3]";
            this.label38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label26
            // 
            this.label26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion2")});
            this.label26.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label26.LocationFloat = new DevExpress.Utils.PointFloat(760.33F, 32F);
            this.label26.Name = "label26";
            this.label26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label26.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label26.StylePriority.UseFont = false;
            this.label26.StylePriority.UseTextAlignment = false;
            this.label26.Text = "[Direccion2]";
            this.label26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label25
            // 
            this.label25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label25.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label25.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label25.LocationFloat = new DevExpress.Utils.PointFloat(0.6666183F, 140F);
            this.label25.Name = "label25";
            this.label25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label25.SizeF = new System.Drawing.SizeF(887.4999F, 17.99997F);
            this.label25.StyleName = "Title";
            this.label25.StylePriority.UseFont = false;
            this.label25.StylePriority.UseForeColor = false;
            this.label25.StylePriority.UseTextAlignment = false;
            this.label25.Text = "label198";
            this.label25.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label24
            // 
            this.label24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label24.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label24.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label24.LocationFloat = new DevExpress.Utils.PointFloat(272.0033F, 112.5F);
            this.label24.Name = "label24";
            this.label24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label24.SizeF = new System.Drawing.SizeF(580.3454F, 18.00003F);
            this.label24.StyleName = "Title";
            this.label24.StylePriority.UseFont = false;
            this.label24.StylePriority.UseForeColor = false;
            this.label24.StylePriority.UseTextAlignment = false;
            this.label24.Text = "label41";
            this.label24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.label24.Visible = false;
            // 
            // line1
            // 
            this.line1.BorderColor = System.Drawing.Color.Gray;
            this.line1.ForeColor = System.Drawing.Color.Gray;
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(2.000109F, 130.5F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(1073.333F, 2F);
            this.line1.StylePriority.UseBorderColor = false;
            this.line1.StylePriority.UseForeColor = false;
            // 
            // pageInfo4
            // 
            this.pageInfo4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo4.LocationFloat = new DevExpress.Utils.PointFloat(853.68F, 112.5F);
            this.pageInfo4.Name = "pageInfo4";
            this.pageInfo4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo4.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo4.SizeF = new System.Drawing.SizeF(219.9999F, 17.99999F);
            this.pageInfo4.StyleName = "PageInfo";
            this.pageInfo4.StylePriority.UseFont = false;
            this.pageInfo4.StylePriority.UseTextAlignment = false;
            this.pageInfo4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label33
            // 
            this.label33.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label33.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label33.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label33.LocationFloat = new DevExpress.Utils.PointFloat(0.67F, 112.5F);
            this.label33.Name = "label33";
            this.label33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label33.SizeF = new System.Drawing.SizeF(271.3333F, 17.99999F);
            this.label33.StyleName = "Title";
            this.label33.StylePriority.UseFont = false;
            this.label33.StylePriority.UseForeColor = false;
            this.label33.StylePriority.UseTextAlignment = false;
            this.label33.Text = "label198";
            this.label33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.LocationFloat = new DevExpress.Utils.PointFloat(2.000109F, 0F);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // pageBreak1
            // 
            this.pageBreak1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.pageBreak1.Name = "pageBreak1";
            // 
            // chart1
            // 
            this.chart1.AppearanceName = "Pastel Kit";
            this.chart1.AutoBindingSettingsEnabled = false;
            this.chart1.AutoLayoutSettingsEnabled = false;
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart1.DataMember = "Table";
            this.chart1.DataSource = this.RepVentaNeta;
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            this.chart1.Diagram = xYDiagram1;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart1.Legend.HorizontalIndent = 0;
            this.chart1.Legend.TextOffset = 0;
            this.chart1.Legend.VerticalIndent = 0;
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(2.000109F, 184.0432F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart1.SeriesDataMember = "GraficaSerie";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "GraficaArgumento";
            this.chart1.SeriesTemplate.DataFilters.ClearAndAddRange(new DevExpress.XtraCharts.DataFilter[] {
                        new DevExpress.XtraCharts.DataFilter("Grafica1", "System.Int32", DevExpress.XtraCharts.DataFilterCondition.Equal, 1)});
            sideBySideBarSeriesLabel1.LineVisible = true;
            sideBySideBarSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart1.SeriesTemplate.Label = sideBySideBarSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions1;
            this.chart1.SeriesTemplate.SeriesPointsSortingKey = DevExpress.XtraCharts.SeriesPointKey.Value_1;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "GraficaValor";
            this.chart1.SizeF = new System.Drawing.SizeF(1066F, 467.6241F);
            chartTitle1.Text = "Capas de Costos";
            this.chart1.Titles.AddRange(new DevExpress.XtraCharts.ChartTitle[] {
                        chartTitle1});
            // 
            // RepVentaNeta
            // 
            this.RepVentaNeta.DataSetName = "RepVentaNetaDataSet";
            this.RepVentaNeta.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // label9
            // 
            this.label9.CanGrow = false;
            this.label9.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Articulo")});
            this.label9.Font = new System.Drawing.Font("Arial", 6F);
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(0.6666183F, 0F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(139.9996F, 18F);
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:$#,#.00}";
            this.label9.Summary = summary8;
            this.label9.Text = "label9";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label9.WordWrap = false;
            // 
            // label4
            // 
            this.label4.CanGrow = false;
            this.label4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Descripcion")});
            this.label4.Font = new System.Drawing.Font("Arial", 6F);
            this.label4.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(140.6662F, 0F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(237.4715F, 18F);
            this.label4.StyleName = "Title";
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseForeColor = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "label4";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label4.WordWrap = false;
            // 
            // label20
            // 
            this.label20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.OtraMonedaCostoTotal")});
            this.label20.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(648.1377F, 2.083333F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.Scripts.OnBeforePrint = "label10_BeforePrint";
            this.label20.SizeF = new System.Drawing.SizeF(111.8745F, 18F);
            this.label20.StylePriority.UseFont = false;
            this.label20.StylePriority.UseTextAlignment = false;
            summary9.FormatString = "{0:$#,#.00}";
            summary9.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label20.Summary = summary9;
            this.label20.Text = "label20";
            this.label20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line3
            // 
            this.line3.BorderColor = System.Drawing.Color.Gray;
            this.line3.ForeColor = System.Drawing.Color.Gray;
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(0.6669922F, 0F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(1074.666F, 2.083333F);
            this.line3.StylePriority.UseBorderColor = false;
            this.line3.StylePriority.UseForeColor = false;
            // 
            // label14
            // 
            this.label14.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotal")});
            this.label14.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(548.1377F, 2.083333F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseTextAlignment = false;
            summary10.FormatString = "{0:$#,#.00}";
            summary10.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label14.Summary = summary10;
            this.label14.Text = "label14";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label12
            // 
            this.label12.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Existencia")});
            this.label12.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(378.1377F, 2.083333F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(69.99994F, 18F);
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseTextAlignment = false;
            summary11.FormatString = "{0:#,#.00}";
            summary11.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label12.Summary = summary11;
            this.label12.Text = "label12";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label13
            // 
            this.label13.CanGrow = false;
            this.label13.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(2.000125F, 2.083333F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(60.625F, 18F);
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            summary12.FormatString = "{0:$#,#.00}";
            this.label13.Summary = summary12;
            this.label13.Text = "Total General";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label13.WordWrap = false;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.OtraMonedaCostoTotal")});
            this.label19.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(648.1377F, 2.083333F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.Scripts.OnBeforePrint = "label10_BeforePrint";
            this.label19.SizeF = new System.Drawing.SizeF(111.8745F, 18F);
            this.label19.StylePriority.UseFont = false;
            this.label19.StylePriority.UseTextAlignment = false;
            summary13.FormatString = "{0:$#,#.00}";
            summary13.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label19.Summary = summary13;
            this.label19.Text = "label19";
            this.label19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label40
            // 
            this.label40.CanGrow = false;
            this.label40.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Articulo")});
            this.label40.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(29.99967F, 2.083333F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.SizeF = new System.Drawing.SizeF(110F, 18F);
            this.label40.StylePriority.UseFont = false;
            this.label40.StylePriority.UseTextAlignment = false;
            summary14.FormatString = "{0:$#,#.00}";
            this.label40.Summary = summary14;
            this.label40.Text = "label40";
            this.label40.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label40.WordWrap = false;
            // 
            // label53
            // 
            this.label53.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotal")});
            this.label53.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label53.LocationFloat = new DevExpress.Utils.PointFloat(548.1377F, 2.083333F);
            this.label53.Name = "label53";
            this.label53.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label53.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label53.StylePriority.UseFont = false;
            this.label53.StylePriority.UseTextAlignment = false;
            summary15.FormatString = "{0:$#,#.00}";
            summary15.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label53.Summary = summary15;
            this.label53.Text = "label53";
            this.label53.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line8
            // 
            this.line8.BorderColor = System.Drawing.Color.Gray;
            this.line8.ForeColor = System.Drawing.Color.Gray;
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(2.000109F, 0F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(1073.333F, 2.083333F);
            this.line8.StylePriority.UseBorderColor = false;
            this.line8.StylePriority.UseForeColor = false;
            // 
            // label47
            // 
            this.label47.CanGrow = false;
            this.label47.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label47.LocationFloat = new DevExpress.Utils.PointFloat(2.000125F, 2.083333F);
            this.label47.Name = "label47";
            this.label47.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label47.SizeF = new System.Drawing.SizeF(27.99957F, 18F);
            this.label47.StylePriority.UseFont = false;
            this.label47.StylePriority.UseTextAlignment = false;
            summary16.FormatString = "{0:$#,#.00}";
            this.label47.Summary = summary16;
            this.label47.Text = "Total";
            this.label47.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label47.WordWrap = false;
            // 
            // label49
            // 
            this.label49.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Existencia")});
            this.label49.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(378.1377F, 2.083333F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(69.99997F, 18F);
            this.label49.StylePriority.UseFont = false;
            this.label49.StylePriority.UseTextAlignment = false;
            summary17.FormatString = "{0:#,#.00}";
            summary17.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label49.Summary = summary17;
            this.label49.Text = "label49";
            this.label49.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label50
            // 
            this.label50.CanGrow = false;
            this.label50.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Descripcion")});
            this.label50.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label50.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label50.LocationFloat = new DevExpress.Utils.PointFloat(139.9997F, 2.083333F);
            this.label50.Name = "label50";
            this.label50.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label50.SizeF = new System.Drawing.SizeF(238.138F, 18F);
            this.label50.StyleName = "Title";
            this.label50.StylePriority.UseFont = false;
            this.label50.StylePriority.UseForeColor = false;
            this.label50.StylePriority.UseTextAlignment = false;
            this.label50.Text = "label50";
            this.label50.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label50.WordWrap = false;
            // 
            // label2
            // 
            this.label2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label2.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(1013.875F, 169.0416F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(60.12189F, 18F);
            this.label2.StyleName = "Title";
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseForeColor = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.Text = "Sistema";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label10
            // 
            this.label10.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label10.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(648.4588F, 169.0416F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.Scripts.OnBeforePrint = "label10_BeforePrint";
            this.label10.SizeF = new System.Drawing.SizeF(111.8745F, 18F);
            this.label10.StyleName = "Title";
            this.label10.StylePriority.UseFont = false;
            this.label10.StylePriority.UseForeColor = false;
            this.label10.StylePriority.UseTextAlignment = false;
            this.label10.Text = "Costo Otra Mon.";
            this.label10.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label48
            // 
            this.label48.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label48.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label48.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label48.LocationFloat = new DevExpress.Utils.PointFloat(760.3333F, 13.99999F);
            this.label48.Name = "label48";
            this.label48.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label48.SizeF = new System.Drawing.SizeF(313.6666F, 18.00001F);
            this.label48.StyleName = "Title";
            this.label48.StylePriority.UseFont = false;
            this.label48.StylePriority.UseForeColor = false;
            this.label48.StylePriority.UseTextAlignment = false;
            this.label48.Text = "label41";
            this.label48.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label43
            // 
            this.label43.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion4")});
            this.label43.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(760.0121F, 68F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.SizeF = new System.Drawing.SizeF(313.6667F, 18F);
            this.label43.StylePriority.UseFont = false;
            this.label43.StylePriority.UseTextAlignment = false;
            this.label43.Text = "label31";
            this.label43.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label18
            // 
            this.label18.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(760.3333F, 50F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            this.label18.Text = "[Direccion3]";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label51
            // 
            this.label51.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaA", "{0:d\' de \'MMMM\' de \'yyyy}")});
            this.label51.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label51.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label51.LocationFloat = new DevExpress.Utils.PointFloat(950.3456F, 139.9999F);
            this.label51.Name = "label51";
            this.label51.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label51.SizeF = new System.Drawing.SizeF(123.3332F, 17.99997F);
            this.label51.StyleName = "Title";
            this.label51.StylePriority.UseFont = false;
            this.label51.StylePriority.UseForeColor = false;
            this.label51.StylePriority.UseTextAlignment = false;
            this.label51.Text = "label10";
            this.label51.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label57
            // 
            this.label57.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label57.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label57.LocationFloat = new DevExpress.Utils.PointFloat(888.1666F, 139.9999F);
            this.label57.Name = "label57";
            this.label57.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label57.SizeF = new System.Drawing.SizeF(62.17908F, 18F);
            this.label57.StyleName = "Title";
            this.label57.StylePriority.UseFont = false;
            this.label57.StylePriority.UseForeColor = false;
            this.label57.StylePriority.UseTextAlignment = false;
            this.label57.Text = "A la Fecha ";
            this.label57.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pageInfo5
            // 
            this.pageInfo5.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo5.LocationFloat = new DevExpress.Utils.PointFloat(853.679F, 112.5F);
            this.pageInfo5.Name = "pageInfo5";
            this.pageInfo5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo5.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo5.SizeF = new System.Drawing.SizeF(219.9999F, 17.99999F);
            this.pageInfo5.StyleName = "PageInfo";
            this.pageInfo5.StylePriority.UseFont = false;
            this.pageInfo5.StylePriority.UseTextAlignment = false;
            this.pageInfo5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label1
            // 
            this.label1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label1.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(0.6666183F, 112.5F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(271.3333F, 17.99999F);
            this.label1.StyleName = "Title";
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseForeColor = false;
            this.label1.StylePriority.UseTextAlignment = false;
            this.label1.Text = "label198";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox3
            // 
            this.pictureBox3.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox3.Image")));
            this.pictureBox3.LocationFloat = new DevExpress.Utils.PointFloat(2.000109F, 0F);
            this.pictureBox3.Name = "pictureBox3";
            this.pictureBox3.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // line5
            // 
            this.line5.BorderColor = System.Drawing.Color.Gray;
            this.line5.ForeColor = System.Drawing.Color.Gray;
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(0.6666183F, 130.5F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(1074.666F, 2F);
            this.line5.StylePriority.UseBorderColor = false;
            this.line5.StylePriority.UseForeColor = false;
            // 
            // label16
            // 
            this.label16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion2")});
            this.label16.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(760.3333F, 32F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseTextAlignment = false;
            this.label16.Text = "[Direccion2]";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label11
            // 
            this.label11.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label11.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label11.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(0.6666183F, 140F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(885.8332F, 17.99995F);
            this.label11.StyleName = "Title";
            this.label11.StylePriority.UseFont = false;
            this.label11.StylePriority.UseForeColor = false;
            this.label11.StylePriority.UseTextAlignment = false;
            this.label11.Text = "label198";
            this.label11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label7.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label7.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(271.9999F, 112.5F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(581.679F, 18F);
            this.label7.StyleName = "Title";
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseForeColor = false;
            this.label7.StylePriority.UseTextAlignment = false;
            this.label7.Text = "label41";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.label7.Visible = false;
            // 
            // line12
            // 
            this.line12.BorderColor = System.Drawing.Color.Gray;
            this.line12.ForeColor = System.Drawing.Color.Gray;
            this.line12.LocationFloat = new DevExpress.Utils.PointFloat(0F, 187.0416F);
            this.line12.Name = "line12";
            this.line12.SizeF = new System.Drawing.SizeF(1075.333F, 2F);
            this.line12.StylePriority.UseBorderColor = false;
            this.line12.StylePriority.UseForeColor = false;
            // 
            // line11
            // 
            this.line11.BorderColor = System.Drawing.Color.Gray;
            this.line11.ForeColor = System.Drawing.Color.Gray;
            this.line11.LocationFloat = new DevExpress.Utils.PointFloat(6.357829E-05F, 166.9583F);
            this.line11.Name = "line11";
            this.line11.SizeF = new System.Drawing.SizeF(1075.333F, 2.083333F);
            this.line11.StylePriority.UseBorderColor = false;
            this.line11.StylePriority.UseForeColor = false;
            // 
            // label92
            // 
            this.label92.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label92.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label92.LocationFloat = new DevExpress.Utils.PointFloat(902.4164F, 169.0416F);
            this.label92.Name = "label92";
            this.label92.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label92.SizeF = new System.Drawing.SizeF(111.4583F, 18F);
            this.label92.StyleName = "Title";
            this.label92.StylePriority.UseFont = false;
            this.label92.StylePriority.UseForeColor = false;
            this.label92.StylePriority.UseTextAlignment = false;
            this.label92.Text = "Fecha";
            this.label92.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label91
            // 
            this.label91.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label91.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label91.LocationFloat = new DevExpress.Utils.PointFloat(760.3333F, 169.0416F);
            this.label91.Name = "label91";
            this.label91.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label91.SizeF = new System.Drawing.SizeF(142.0831F, 18F);
            this.label91.StyleName = "Title";
            this.label91.StylePriority.UseFont = false;
            this.label91.StylePriority.UseForeColor = false;
            this.label91.StylePriority.UseTextAlignment = false;
            this.label91.Text = "Movimiento";
            this.label91.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label90
            // 
            this.label90.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label90.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label90.LocationFloat = new DevExpress.Utils.PointFloat(548.1377F, 169.0416F);
            this.label90.Name = "label90";
            this.label90.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label90.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label90.StyleName = "Title";
            this.label90.StylePriority.UseFont = false;
            this.label90.StylePriority.UseForeColor = false;
            this.label90.StylePriority.UseTextAlignment = false;
            this.label90.Text = "Costo Total";
            this.label90.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label87
            // 
            this.label87.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label87.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label87.LocationFloat = new DevExpress.Utils.PointFloat(0F, 169.0416F);
            this.label87.Name = "label87";
            this.label87.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label87.SizeF = new System.Drawing.SizeF(139.9997F, 18F);
            this.label87.StyleName = "Title";
            this.label87.StylePriority.UseFont = false;
            this.label87.StylePriority.UseForeColor = false;
            this.label87.StylePriority.UseTextAlignment = false;
            this.label87.Text = "Artículo";
            this.label87.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label86
            // 
            this.label86.CanGrow = false;
            this.label86.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label86.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label86.LocationFloat = new DevExpress.Utils.PointFloat(139.9997F, 169.0416F);
            this.label86.Name = "label86";
            this.label86.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label86.SizeF = new System.Drawing.SizeF(238.138F, 18F);
            this.label86.StyleName = "Title";
            this.label86.StylePriority.UseFont = false;
            this.label86.StylePriority.UseForeColor = false;
            this.label86.StylePriority.UseTextAlignment = false;
            this.label86.Text = "Descripción";
            this.label86.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label86.WordWrap = false;
            // 
            // label89
            // 
            this.label89.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label89.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label89.LocationFloat = new DevExpress.Utils.PointFloat(378.1377F, 169.0416F);
            this.label89.Name = "label89";
            this.label89.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label89.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label89.StyleName = "Title";
            this.label89.StylePriority.UseFont = false;
            this.label89.StylePriority.UseForeColor = false;
            this.label89.StylePriority.UseTextAlignment = false;
            this.label89.Text = "Existencia";
            this.label89.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label88
            // 
            this.label88.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label88.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label88.LocationFloat = new DevExpress.Utils.PointFloat(448.1377F, 169.0416F);
            this.label88.Name = "label88";
            this.label88.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label88.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label88.StyleName = "Title";
            this.label88.StylePriority.UseFont = false;
            this.label88.StylePriority.UseForeColor = false;
            this.label88.StylePriority.UseTextAlignment = false;
            this.label88.Text = "Costo Unitario";
            this.label88.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.SelectCommand = this.oleDbCommand1;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand1
            // 
            this.oleDbCommand1.CommandText = "SPINFORMEINVCAPAPORFECHA 1";
            this.oleDbCommand1.CommandTimeout = 0;
            this.oleDbCommand1.Connection = this.oleDbConnection1;
            // 
            // oleDbConnection1
            // 
            this.oleDbConnection1.ConnectionString = "Provider=SQLOLEDB;Data Source=.;Initial Catalog=INFORMES11;User ID=SA;";
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Maroon;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Maroon;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // Total
            // 
            this.Total.DataMember = "Table";
            this.Total.DataSource = this.RepVentaNeta;
            this.Total.Expression = "[Existencias]  *  [CostoPromedio]";
            this.Total.Name = "Total";
            // 
            // InformeInvCapa
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.pageFooterBand1,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.ReportFooter,
                        this.GroupHeader1,
                        this.GroupFooter1,
                        this.GroupFooter3,
                        this.GroupHeader2});
            this.Bookmark = "InformeInvCapa";
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.Total});
            this.DataAdapter = this.TableTableAdapter;
            this.DataMember = "Table";
            this.DataSource = this.RepVentaNeta;
            this.DisplayName = "InformeInvCapa";
            this.Landscape = true;
            this.Margins = new System.Drawing.Printing.Margins(12, 12, 38, 63);
            this.Name = "InformeInvCapa";
            this.PageHeight = 850;
            this.PageWidth = 1100;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "EXEC spInformeInvCapaPorFecha [EstacionTrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(sideBySideBarSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepVentaNetaDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepVentaNetaDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepVentaNetaDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepVentaNetaDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepVentaNetaDataSet cln = ((RepVentaNetaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepVentaNetaDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnArticulo;
            private global::System.Data.DataColumn columnFecha;
            private global::System.Data.DataColumn columnExistencia;
            private global::System.Data.DataColumn columnCosto;
            private global::System.Data.DataColumn columnMovimiento;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnCostoTotal;
            private global::System.Data.DataColumn columnFechaD;
            private global::System.Data.DataColumn columnFechaA;
            private global::System.Data.DataColumn columnOrden1;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor;
            private global::System.Data.DataColumn columnGrafica1;
            private global::System.Data.DataColumn columnGrafica2;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnReporte;
            private global::System.Data.DataColumn columnDireccion2;
            private global::System.Data.DataColumn columnDireccion3;
            private global::System.Data.DataColumn columnDireccion4;
            private global::System.Data.DataColumn columnGraficaSerie;
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnNombre;
            private global::System.Data.DataColumn columnInvValuacionOtraMoneda;
            private global::System.Data.DataColumn columnOtraMonedaTipoCambio;
            private global::System.Data.DataColumn columnOtraMonedaCostoTotal;
            private global::System.Data.DataColumn columnSistema;
            private global::System.Data.DataColumn columnEtiqueta;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArticuloColumn {
                get {
                    return this.columnArticulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExistenciaColumn {
                get {
                    return this.columnExistencia;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoColumn {
                get {
                    return this.columnCosto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovimientoColumn {
                get {
                    return this.columnMovimiento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoTotalColumn {
                get {
                    return this.columnCostoTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaDColumn {
                get {
                    return this.columnFechaD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaAColumn {
                get {
                    return this.columnFechaA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Orden1Column {
                get {
                    return this.columnOrden1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValorColumn {
                get {
                    return this.columnGraficaValor;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica1Column {
                get {
                    return this.columnGrafica1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica2Column {
                get {
                    return this.columnGrafica2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporteColumn {
                get {
                    return this.columnReporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion2Column {
                get {
                    return this.columnDireccion2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion3Column {
                get {
                    return this.columnDireccion3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion4Column {
                get {
                    return this.columnDireccion4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaSerieColumn {
                get {
                    return this.columnGraficaSerie;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvValuacionOtraMonedaColumn {
                get {
                    return this.columnInvValuacionOtraMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtraMonedaTipoCambioColumn {
                get {
                    return this.columnOtraMonedaTipoCambio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtraMonedaCostoTotalColumn {
                get {
                    return this.columnOtraMonedaCostoTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SistemaColumn {
                get {
                    return this.columnSistema;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtiquetaColumn {
                get {
                    return this.columnEtiqueta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        string Articulo, 
                        System.DateTime Fecha, 
                        float Existencia, 
                        float Costo, 
                        string Movimiento, 
                        string Descripcion, 
                        float CostoTotal, 
                        System.DateTime FechaD, 
                        System.DateTime FechaA, 
                        int Orden1, 
                        string GraficaArgumento, 
                        double GraficaValor, 
                        int Grafica1, 
                        int Grafica2, 
                        string Titulo, 
                        string Reporte, 
                        string Direccion2, 
                        string Direccion3, 
                        string Direccion4, 
                        string GraficaSerie, 
                        string EmpresaNombre, 
                        string Nombre, 
                        string InvValuacionOtraMoneda, 
                        float OtraMonedaTipoCambio, 
                        float OtraMonedaCostoTotal, 
                        string Sistema, 
                        bool Etiqueta, 
                        bool VerGraficaDetalle) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Articulo,
                        Fecha,
                        Existencia,
                        Costo,
                        Movimiento,
                        Descripcion,
                        CostoTotal,
                        FechaD,
                        FechaA,
                        Orden1,
                        GraficaArgumento,
                        GraficaValor,
                        Grafica1,
                        Grafica2,
                        Titulo,
                        Reporte,
                        Direccion2,
                        Direccion3,
                        Direccion4,
                        GraficaSerie,
                        EmpresaNombre,
                        Nombre,
                        InvValuacionOtraMoneda,
                        OtraMonedaTipoCambio,
                        OtraMonedaCostoTotal,
                        Sistema,
                        Etiqueta,
                        VerGraficaDetalle};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnArticulo = base.Columns["Articulo"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnExistencia = base.Columns["Existencia"];
                this.columnCosto = base.Columns["Costo"];
                this.columnMovimiento = base.Columns["Movimiento"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnCostoTotal = base.Columns["CostoTotal"];
                this.columnFechaD = base.Columns["FechaD"];
                this.columnFechaA = base.Columns["FechaA"];
                this.columnOrden1 = base.Columns["Orden1"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor = base.Columns["GraficaValor"];
                this.columnGrafica1 = base.Columns["Grafica1"];
                this.columnGrafica2 = base.Columns["Grafica2"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnReporte = base.Columns["Reporte"];
                this.columnDireccion2 = base.Columns["Direccion2"];
                this.columnDireccion3 = base.Columns["Direccion3"];
                this.columnDireccion4 = base.Columns["Direccion4"];
                this.columnGraficaSerie = base.Columns["GraficaSerie"];
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnInvValuacionOtraMoneda = base.Columns["InvValuacionOtraMoneda"];
                this.columnOtraMonedaTipoCambio = base.Columns["OtraMonedaTipoCambio"];
                this.columnOtraMonedaCostoTotal = base.Columns["OtraMonedaCostoTotal"];
                this.columnSistema = base.Columns["Sistema"];
                this.columnEtiqueta = base.Columns["Etiqueta"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnArticulo = new global::System.Data.DataColumn("Articulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticulo);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnExistencia = new global::System.Data.DataColumn("Existencia", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExistencia);
                this.columnCosto = new global::System.Data.DataColumn("Costo", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCosto);
                this.columnMovimiento = new global::System.Data.DataColumn("Movimiento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovimiento);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnCostoTotal = new global::System.Data.DataColumn("CostoTotal", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoTotal);
                this.columnFechaD = new global::System.Data.DataColumn("FechaD", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaD);
                this.columnFechaA = new global::System.Data.DataColumn("FechaA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaA);
                this.columnOrden1 = new global::System.Data.DataColumn("Orden1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrden1);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor = new global::System.Data.DataColumn("GraficaValor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor);
                this.columnGrafica1 = new global::System.Data.DataColumn("Grafica1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica1);
                this.columnGrafica2 = new global::System.Data.DataColumn("Grafica2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica2);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnReporte = new global::System.Data.DataColumn("Reporte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporte);
                this.columnDireccion2 = new global::System.Data.DataColumn("Direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion2);
                this.columnDireccion3 = new global::System.Data.DataColumn("Direccion3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion3);
                this.columnDireccion4 = new global::System.Data.DataColumn("Direccion4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion4);
                this.columnGraficaSerie = new global::System.Data.DataColumn("GraficaSerie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaSerie);
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnInvValuacionOtraMoneda = new global::System.Data.DataColumn("InvValuacionOtraMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvValuacionOtraMoneda);
                this.columnOtraMonedaTipoCambio = new global::System.Data.DataColumn("OtraMonedaTipoCambio", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtraMonedaTipoCambio);
                this.columnOtraMonedaCostoTotal = new global::System.Data.DataColumn("OtraMonedaCostoTotal", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtraMonedaCostoTotal);
                this.columnSistema = new global::System.Data.DataColumn("Sistema", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSistema);
                this.columnEtiqueta = new global::System.Data.DataColumn("Etiqueta", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtiqueta);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Articulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.ArticuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Articulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ArticuloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fecha\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Existencia {
                get {
                    try {
                        return ((float)(this[this.table_Table.ExistenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Existencia\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ExistenciaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Costo {
                get {
                    try {
                        return ((float)(this[this.table_Table.CostoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Costo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Movimiento {
                get {
                    try {
                        return ((string)(this[this.table_Table.MovimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Movimiento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MovimientoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float CostoTotal {
                get {
                    try {
                        return ((float)(this[this.table_Table.CostoTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoTotal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoTotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaD {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaA\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Orden1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Orden1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Orden1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Orden1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor {
                get {
                    try {
                        return ((double)(this[this.table_Table.GraficaValorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaValorColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Grafica1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica2 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Grafica2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reporte {
                get {
                    try {
                        return ((string)(this[this.table_Table.ReporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Reporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ReporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion3 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion4 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaSerie {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaSerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaSerie\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaSerieColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Nombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvValuacionOtraMoneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.InvValuacionOtraMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'InvValuacionOtraMoneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.InvValuacionOtraMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float OtraMonedaTipoCambio {
                get {
                    try {
                        return ((float)(this[this.table_Table.OtraMonedaTipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'OtraMonedaTipoCambio\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.OtraMonedaTipoCambioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float OtraMonedaCostoTotal {
                get {
                    try {
                        return ((float)(this[this.table_Table.OtraMonedaCostoTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'OtraMonedaCostoTotal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.OtraMonedaCostoTotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sistema {
                get {
                    try {
                        return ((string)(this[this.table_Table.SistemaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Sistema\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SistemaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Etiqueta {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EtiquetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Etiqueta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EtiquetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.table_Table.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArticuloNull() {
                return this.IsNull(this.table_Table.ArticuloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArticuloNull() {
                this[this.table_Table.ArticuloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.table_Table.FechaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.table_Table.FechaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExistenciaNull() {
                return this.IsNull(this.table_Table.ExistenciaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExistenciaNull() {
                this[this.table_Table.ExistenciaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoNull() {
                return this.IsNull(this.table_Table.CostoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoNull() {
                this[this.table_Table.CostoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovimientoNull() {
                return this.IsNull(this.table_Table.MovimientoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovimientoNull() {
                this[this.table_Table.MovimientoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.table_Table.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.table_Table.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoTotalNull() {
                return this.IsNull(this.table_Table.CostoTotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoTotalNull() {
                this[this.table_Table.CostoTotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaDNull() {
                return this.IsNull(this.table_Table.FechaDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaDNull() {
                this[this.table_Table.FechaDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaANull() {
                return this.IsNull(this.table_Table.FechaAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaANull() {
                this[this.table_Table.FechaAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrden1Null() {
                return this.IsNull(this.table_Table.Orden1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrden1Null() {
                this[this.table_Table.Orden1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.table_Table.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.table_Table.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValorNull() {
                return this.IsNull(this.table_Table.GraficaValorColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValorNull() {
                this[this.table_Table.GraficaValorColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica1Null() {
                return this.IsNull(this.table_Table.Grafica1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica1Null() {
                this[this.table_Table.Grafica1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica2Null() {
                return this.IsNull(this.table_Table.Grafica2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica2Null() {
                this[this.table_Table.Grafica2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.table_Table.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.table_Table.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporteNull() {
                return this.IsNull(this.table_Table.ReporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporteNull() {
                this[this.table_Table.ReporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion2Null() {
                return this.IsNull(this.table_Table.Direccion2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion2Null() {
                this[this.table_Table.Direccion2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion3Null() {
                return this.IsNull(this.table_Table.Direccion3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion3Null() {
                this[this.table_Table.Direccion3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion4Null() {
                return this.IsNull(this.table_Table.Direccion4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion4Null() {
                this[this.table_Table.Direccion4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaSerieNull() {
                return this.IsNull(this.table_Table.GraficaSerieColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaSerieNull() {
                this[this.table_Table.GraficaSerieColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.table_Table.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.table_Table.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.table_Table.NombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.table_Table.NombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvValuacionOtraMonedaNull() {
                return this.IsNull(this.table_Table.InvValuacionOtraMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvValuacionOtraMonedaNull() {
                this[this.table_Table.InvValuacionOtraMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtraMonedaTipoCambioNull() {
                return this.IsNull(this.table_Table.OtraMonedaTipoCambioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtraMonedaTipoCambioNull() {
                this[this.table_Table.OtraMonedaTipoCambioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtraMonedaCostoTotalNull() {
                return this.IsNull(this.table_Table.OtraMonedaCostoTotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtraMonedaCostoTotalNull() {
                this[this.table_Table.OtraMonedaCostoTotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSistemaNull() {
                return this.IsNull(this.table_Table.SistemaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSistemaNull() {
                this[this.table_Table.SistemaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEtiquetaNull() {
                return this.IsNull(this.table_Table.EtiquetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEtiquetaNull() {
                this[this.table_Table.EtiquetaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.table_Table.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.table_Table.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
