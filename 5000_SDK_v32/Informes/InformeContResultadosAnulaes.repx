/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformeContResultadosAnuales : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label68;
        private DevExpress.XtraReports.UI.XRLabel label67;
        private DevExpress.XtraReports.UI.XRLabel label63;
        private DevExpress.XtraReports.UI.XRLabel label62;
        private DevExpress.XtraReports.UI.XRLabel label61;
        private DevExpress.XtraReports.UI.XRLabel label60;
        private DevExpress.XtraReports.UI.XRLabel label59;
        private DevExpress.XtraReports.UI.XRLabel label58;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.PageFooterBand pageFooterBand1;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.ReportHeaderBand reportHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label32;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.XRLabel label44;
        private DevExpress.XtraReports.UI.XRLabel label41;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo3;
        private DevExpress.XtraReports.UI.XRLabel label198;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRLabel label36;
        private DevExpress.XtraReports.UI.XRLabel label35;
        private DevExpress.XtraReports.UI.XRLabel label37;
        private DevExpress.XtraReports.UI.XRLabel label39;
        private DevExpress.XtraReports.UI.XRLabel label38;
        private DevExpress.XtraReports.UI.XRLabel label33;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox1;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo4;
        private DevExpress.XtraReports.UI.XRLabel label34;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRPageBreak pageBreak1;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private XtraReportSerialization.RepVentaNetaDataSet RepVentaNeta;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader2;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLabel label70;
        private DevExpress.XtraReports.UI.XRLabel label69;
        private DevExpress.XtraReports.UI.XRLabel label66;
        private DevExpress.XtraReports.UI.XRLabel label65;
        private DevExpress.XtraReports.UI.XRLabel label64;
        private DevExpress.XtraReports.UI.XRLabel label47;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter2;
        private DevExpress.XtraReports.UI.XRLabel label72;
        private DevExpress.XtraReports.UI.XRLabel label71;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private DevExpress.XtraReports.UI.XRLabel label48;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader3;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter3;
        private DevExpress.XtraReports.UI.XRLabel label74;
        private DevExpress.XtraReports.UI.XRLabel label73;
        private DevExpress.XtraReports.UI.XRLabel label56;
        private DevExpress.XtraReports.UI.XRLabel label57;
        private DevExpress.XtraReports.UI.XRLabel label54;
        private DevExpress.XtraReports.UI.XRLabel label55;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLabel label26;
        private DevExpress.XtraReports.UI.XRLabel label25;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label24;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader4;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRLabel label27;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader5;
        private DevExpress.XtraReports.UI.XRLabel label78;
        private DevExpress.XtraReports.UI.XRLabel label79;
        private DevExpress.XtraReports.UI.XRLabel label77;
        private DevExpress.XtraReports.UI.XRLabel label28;
        private DevExpress.XtraReports.UI.XRLabel label76;
        private System.Data.OleDb.OleDbDataAdapter TableTableAdapter;
        private System.Data.OleDb.OleDbCommand oleDbCommand1;
        private System.Data.OleDb.OleDbConnection oleDbConnection1;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField Saldo1c;
        private DevExpress.XtraReports.UI.CalculatedField Saldo2c;
        private DevExpress.XtraReports.UI.CalculatedField Saldo3c;
        private DevExpress.XtraReports.UI.CalculatedField Saldo4c;
        private DevExpress.XtraReports.UI.CalculatedField Saldo5c;
        private DevExpress.XtraReports.UI.CalculatedField Porcentaje1c;
        private DevExpress.XtraReports.UI.CalculatedField Porcentaje2c;
        private DevExpress.XtraReports.UI.CalculatedField Porcentaje3c;
        private DevExpress.XtraReports.UI.CalculatedField Porcentaje4c;
        private DevExpress.XtraReports.UI.CalculatedField Porcentaje5c;
        private DevExpress.XtraReports.UI.CalculatedField Resultado1;
        private DevExpress.XtraReports.UI.CalculatedField Resultado2;
        private DevExpress.XtraReports.UI.CalculatedField Resultado3;
        private DevExpress.XtraReports.UI.CalculatedField Resultado4;
        private DevExpress.XtraReports.UI.CalculatedField Resultado5;
        private DevExpress.XtraReports.UI.CalculatedField Resultado6;
        private DevExpress.XtraReports.UI.CalculatedField Resultado7;
        private DevExpress.XtraReports.UI.CalculatedField Resultado8;
        private DevExpress.XtraReports.UI.CalculatedField Resultado9;
        private DevExpress.XtraReports.UI.CalculatedField Resultado10;
        private System.Resources.ResourceManager _resources;
        public InformeContResultadosAnuales() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAADAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsHnWR035IbpXQAAAABSAAAAK" +
                        "wAAAK0BAAAmJAB0AGgAaQBzAC4AUwBjAHIAaQBwAHQAcwBTAG8AdQByAGMAZQAAAAAAInAAaQBjAHQAd" +
                        "QByAGUAQgBvAHgAMQAuAEkAbQBhAGcAZQDLIgAAInAAaQBjAHQAdQByAGUAQgBvAHgAMgAuAEkAbQBhA" +
                        "GcAZQDI5AAAAchFRGltIFJlczEgYXMgZG91YmxlID0gMA0KRGltIFJlczIgYXMgZG91YmxlID0gMA0KR" +
                        "GltIFJlczMgYXMgZG91YmxlID0gMA0KRGltIFJlczQgYXMgZG91YmxlID0gMA0KRGltIFJlczUgYXMgZ" +
                        "G91YmxlID0gMA0KRGltIFJlczYgYXMgZG91YmxlID0gMA0KRGltIFJlczcgYXMgZG91YmxlID0gMA0KR" +
                        "GltIFJlczggYXMgZG91YmxlID0gMA0KRGltIFJlczkgYXMgZG91YmxlID0gMA0KRGltIFJlczEwIGFzI" +
                        "GRvdWJsZSA9IDANCg0KDQpQcml2YXRlIFN1YiBHcm91cEZvb3RlcjFfQmVmb3JlUHJpbnQoQnlWYWwgc" +
                        "2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2Z" +
                        "W50QXJncykNCg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlK" +
                        "CJHcmFmaWNhMSIpID0gMSBUSEVODQogICAgIGUuQ2FuY2VsID0gVHJ1ZQ0KICcgRUxTRQ0KJyAgICAgU" +
                        "mVzMSA9IFJlczEgLSBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlNhbGRvMSIpDQonICAgICBSZXMyID0gU" +
                        "mVzMiAtIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiU2FsZG8yIikNCicgICAgIFJlczMgPSBSZXMzIC0gR" +
                        "2V0Q3VycmVudENvbHVtblZhbHVlKCJQb3JjZW50YWplMSIpDQonICAgICBSZXM0ID0gUmVzNCAtIEdld" +
                        "EN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY2VudGFqZTIiKQ0KJyAgICAgUmVzNSA9IFJlczUgLSBHZXRDd" +
                        "XJyZW50Q29sdW1uVmFsdWUoIlNhbGRvMyIpDQonICAgICBSZXM2ID0gUmVzNiAtIEdldEN1cnJlbnRDb" +
                        "2x1bW5WYWx1ZSgiU2FsZG80IikNCicgICAgIFJlczcgPSBSZXM3IC0gR2V0Q3VycmVudENvbHVtblZhb" +
                        "HVlKCJQb3JjZW50YWplMyIpDQonICAgICBSZXM4ID0gUmVzOCAtIEdldEN1cnJlbnRDb2x1bW5WYWx1Z" +
                        "SgiUG9yY2VudGFqZTQiKQ0KJyAgICAgUmVzOSA9IFJlczkgLSBHZXRDdXJyZW50Q29sdW1uVmFsdWUoI" +
                        "lNhbGRvNSIpDQonICAgICBSZXMxMCA9IFJlczEwIC0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJQb3JjZ" +
                        "W50YWplNSIpDQoNCmVuZCBpZg0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViIFJlc3VsdGFkbzFfR2V0V" +
                        "mFsdWUoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCxCeVZhbCBlIEFzIEdldFZhbHVlRXZlbnRBcmdzKSANC" +
                        "g0KICBlLlZhbHVlID3CoFJlczEgDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgUmVzdWx0YWRvMl9HZ" +
                        "XRWYWx1ZShCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIERldkV4cHJlc3MuWHRyYVJlc" +
                        "G9ydHMuVUkuR2V0VmFsdWVFdmVudEFyZ3MpDQoNCiAgZS5WYWx1ZSA9wqBSZXMyDQoNCkVuZCBTdWINC" +
                        "g0KDQpQcml2YXRlIFN1YiBSZXN1bHRhZG8zX0dldFZhbHVlKEJ5VmFsIHNlbmRlciBBcyBPYmplY3QsI" +
                        "EJ5VmFsIGUgQXMgRGV2RXhwcmVzcy5YdHJhUmVwb3J0cy5VSS5HZXRWYWx1ZUV2ZW50QXJncykNCg0KI" +
                        "CBlLlZhbHVlID3CoC1SZXMzLzEwMA0KDQpFbmQgU3ViDQoNCg0KUHJpdmF0ZSBTdWIgUmVzdWx0YWRvN" +
                        "F9HZXRWYWx1ZShCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIERldkV4cHJlc3MuWHRyY" +
                        "VJlcG9ydHMuVUkuR2V0VmFsdWVFdmVudEFyZ3MpDQoNCiAgZS5WYWx1ZSA9wqAtUmVzNC8xMDANCg0KR" +
                        "W5kIFN1Yg0KDQoNClByaXZhdGUgU3ViIFJlc3VsdGFkbzVfR2V0VmFsdWUoQnlWYWwgc2VuZGVyIEFzI" +
                        "E9iamVjdCxCeVZhbCBlIEFzIEdldFZhbHVlRXZlbnRBcmdzKSANCg0KICBlLlZhbHVlID3CoFJlczUNC" +
                        "g0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBSZXN1bHRhZG82X0dldFZhbHVlKEJ5VmFsIHNlbmRlciBBc" +
                        "yBPYmplY3QsIEJ5VmFsIGUgQXMgRGV2RXhwcmVzcy5YdHJhUmVwb3J0cy5VSS5HZXRWYWx1ZUV2ZW50Q" +
                        "XJncykNCg0KICBlLlZhbHVlID3CoFJlczYNCg0KRW5kIFN1Yg0KDQoNClByaXZhdGUgU3ViIFJlc3Vsd" +
                        "GFkbzdfR2V0VmFsdWUoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBEZXZFeHByZXNzL" +
                        "lh0cmFSZXBvcnRzLlVJLkdldFZhbHVlRXZlbnRBcmdzKQ0KDQogIGUuVmFsdWUgPcKgLVJlczcvMTAwD" +
                        "QoNCkVuZCBTdWINCg0KDQpQcml2YXRlIFN1YiBSZXN1bHRhZG84X0dldFZhbHVlKEJ5VmFsIHNlbmRlc" +
                        "iBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgRGV2RXhwcmVzcy5YdHJhUmVwb3J0cy5VSS5HZXRWYWx1ZUV2Z" +
                        "W50QXJncykNCg0KICBlLlZhbHVlID3CoC1SZXM4LzEwMA0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViI" +
                        "FJlc3VsdGFkbzlfR2V0VmFsdWUoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBEZXZFe" +
                        "HByZXNzLlh0cmFSZXBvcnRzLlVJLkdldFZhbHVlRXZlbnRBcmdzKQ0KDQogIGUuVmFsdWUgPcKgUmVzO" +
                        "Q0KDQpFbmQgU3ViDQoNCg0KUHJpdmF0ZSBTdWIgUmVzdWx0YWRvMTBfR2V0VmFsdWUoQnlWYWwgc2VuZ" +
                        "GVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBEZXZFeHByZXNzLlh0cmFSZXBvcnRzLlVJLkdldFZhbHVlR" +
                        "XZlbnRBcmdzKQ0KDQogIGUuVmFsdWUgPcKgLVJlczEwLzEwMA0KDQpFbmQgU3ViDQoNCg0KUHJpdmF0Z" +
                        "SBTdWIgRGV0YWlsX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU" +
                        "3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpDQoNCiAgICAgUmVzMSA9IFJlczEgL" +
                        "SBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlNhbGRvMSIpDQogICAgIFJlczIgPSBSZXMyIC0gR2V0Q3Vyc" +
                        "mVudENvbHVtblZhbHVlKCJTYWxkbzIiKQ0KICAgICBSZXMzID0gUmVzMyAtIEdldEN1cnJlbnRDb2x1b" +
                        "W5WYWx1ZSgiUG9yY2VudGFqZTEiKQ0KICAgICBSZXM0ID0gUmVzNCAtIEdldEN1cnJlbnRDb2x1bW5WY" +
                        "Wx1ZSgiUG9yY2VudGFqZTIiKQ0KICAgICBSZXM1ID0gUmVzNSAtIEdldEN1cnJlbnRDb2x1bW5WYWx1Z" +
                        "SgiU2FsZG8zIikNCiAgICAgUmVzNiA9IFJlczYgLSBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlNhbGRvN" +
                        "CIpDQogICAgIFJlczcgPSBSZXM3IC0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJQb3JjZW50YWplMyIpD" +
                        "QogICAgIFJlczggPSBSZXM4IC0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJQb3JjZW50YWplNCIpDQogI" +
                        "CAgIFJlczkgPSBSZXM5IC0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJTYWxkbzUiKQ0KICAgICBSZXMxM" +
                        "CA9IFJlczEwIC0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJQb3JjZW50YWplNSIpDQoNCiAgSUYgR2V0Q" +
                        "3VycmVudENvbHVtblZhbHVlKCJHcmFmaWNhMSIpID0gMSBUSEVODQogICAgIGUuQ2FuY2VsID0gVHJ1Z" +
                        "Q0KICBFTFNFDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiRGVzZ2xvc2FyIikgPSAiU2kiIFRIR" +
                        "U4NCiAgICAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTFNFDQogICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANC" +
                        "iAgRU5EIElGIA0KRU5EIElGIA0KDQpFbmQgU3ViDQoNCg0KUHJpdmF0ZSBTdWIgbGFiZWwxMl9CZWZvc" +
                        "mVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlBya" +
                        "W50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljY" +
                        "TEiKSA9IDEgVEhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRQ0KICAgIElGIEdldEN1cnJlb" +
                        "nRDb2x1bW5WYWx1ZSgiRGVzZ2xvc2FyIikgPSAiTm8iIFRIRU4NCiAgICAgICBlLkNhbmNlbCA9IEZhb" +
                        "HNlDQogICAgRUxTRQ0KICAgICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgICBFTkQgSUYgDQogIEVOR" +
                        "CBJRiANCg0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBHcm91cEZvb3RlcjJfQmVmb3JlUHJpbnQoQnlWY" +
                        "Wwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5Qcmlud" +
                        "EV2ZW50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkdyYWZpY2ExIikgPSAxIFRIR" +
                        "U4NCiAgICAgZS5DYW5jZWwgPSBUcnVlDQogIEVMU0UNCiAgICBlLkNhbmNlbCA9IEZhbHNlDQogIEVOR" +
                        "CBJRg0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViIFBhZ2VIZWFkZXJfQmVmb3JlUHJpbnQoQnlWYWwgc" +
                        "2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2Z" +
                        "W50QXJncykNCg0KICBJRiBHZXROZXh0Q29sdW1uVmFsdWUoIkdyYWZpY2ExIikgPSAxIFRIRU4NCiAgI" +
                        "CAgZS5DYW5jZWwgPSBUcnVlDQogIEVMU0UNCiAgICBlLkNhbmNlbCA9IEZhbHNlDQogIEVORCBJRg0KD" +
                        "QpFbmQgU3ViDQoNCg0KUHJpdmF0ZSBTdWIgbGFiZWw0NV9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQ" +
                        "XMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzK" +
                        "Q0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY2VudGFqZTEiKSBJUyBEQk51bGwuVkFMV" +
                        "UUgVEhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRUlGIEdldEN1cnJlbnRDb2x1bW5WYWx1Z" +
                        "SgiUG9yY2VudGFqZTEiKSA9IDAgVEhFTg0KICAgICBlLkNhbmNlbCA9VHJ1ZQ0KICBFTFNFDQogICAgI" +
                        "GUuQ2FuY2VsID0gRmFsc2UNCiAgRU5EIElGDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgbGFiZWw1O" +
                        "V9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3a" +
                        "W5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiU" +
                        "G9yY2VudGFqZTIiKSBJUyBEQk51bGwuVkFMVUUgVEhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgR" +
                        "UxTRUlGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY2VudGFqZTIiKSA9IDAgVEhFTg0KICAgICBlL" +
                        "kNhbmNlbCA9VHJ1ZQ0KICBFTFNFDQogICAgIGUuQ2FuY2VsID0gRmFsc2UNCiAgRU5EIElGDQoNCkVuZ" +
                        "CBTdWINCg0KUHJpdmF0ZSBTdWIgbGFiZWw2MV9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZ" +
                        "WN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogI" +
                        "ElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY2VudGFqZTMiKSBJUyBEQk51bGwuVkFMVUUgVEhFT" +
                        "g0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRUlGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY" +
                        "2VudGFqZTMiKSA9IDAgVEhFTg0KICAgICBlLkNhbmNlbCA9VHJ1ZQ0KICBFTFNFDQogICAgIGUuQ2FuY" +
                        "2VsID0gRmFsc2UNCiAgRU5EIElGDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgbGFiZWw2M19CZWZvc" +
                        "mVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlBya" +
                        "W50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY2Vud" +
                        "GFqZTQiKSBJUyBEQk51bGwuVkFMVUUgVEhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRUlGI" +
                        "EdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY2VudGFqZTQiKSA9IDAgVEhFTg0KICAgICBlLkNhbmNlb" +
                        "CA9VHJ1ZQ0KICBFTFNFDQogICAgIGUuQ2FuY2VsID0gRmFsc2UNCiAgRU5EIElGDQoNCkVuZCBTdWINC" +
                        "g0KUHJpdmF0ZSBTdWIgbGFiZWw2OF9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCe" +
                        "VZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdld" +
                        "EN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY2VudGFqZTUiKSBJUyBEQk51bGwuVkFMVUUgVEhFTg0KICAgI" +
                        "CBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRUlGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY2VudGFqZ" +
                        "TUiKSA9IDAgVEhFTg0KICAgICBlLkNhbmNlbCA9VHJ1ZQ0KICBFTFNFDQogICAgIGUuQ2FuY2VsID0gR" +
                        "mFsc2UNCiAgRU5EIElGDQoNCkVuZCBTdWINCg0KDQpQcml2YXRlIFN1YiBsYWJlbDQzX0JlZm9yZVBya" +
                        "W50KEJ5VmFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpb" +
                        "mcuUHJpbnRFdmVudEFyZ3MpDQoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJTYWxkbzEiKSBJU" +
                        "yBEQk51bGwuVkFMVUUgVEhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRUlGIEdldEN1cnJlb" +
                        "nRDb2x1bW5WYWx1ZSgiU2FsZG8xIikgPSAwIFRIRU4NCiAgICAgZS5DYW5jZWwgPVRydWUNCiAgRUxTR" +
                        "Q0KICAgICBlLkNhbmNlbCA9IEZhbHNlDQogIEVORCBJRg0KDQpFbmQgU3ViDQoNCg0KUHJpdmF0ZSBTd" +
                        "WIgbGFiZWw1OF9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c" +
                        "3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1b" +
                        "W5WYWx1ZSgiU2FsZG8yIikgSVMgREJOdWxsLlZBTFVFIFRIRU4NCiAgICAgZS5DYW5jZWwgPSBUcnVlD" +
                        "QogIEVMU0VJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlNhbGRvMiIpID0gMCBUSEVODQogICAgIGUuQ" +
                        "2FuY2VsID1UcnVlDQogIEVMU0UNCiAgICAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTkQgSUYNCg0KRW5kI" +
                        "FN1Yg0KDQpQcml2YXRlIFN1YiBsYWJlbDYwX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBcyBPYmplY" +
                        "3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpDQoNCiAgS" +
                        "UYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJTYWxkbzMiKSBJUyBEQk51bGwuVkFMVUUgVEhFTg0KICAgI" +
                        "CBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRUlGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiU2FsZG8zIikgP" +
                        "SAwIFRIRU4NCiAgICAgZS5DYW5jZWwgPVRydWUNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IEZhbHNlD" +
                        "QogIEVORCBJRg0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViIGxhYmVsNjJfQmVmb3JlUHJpbnQoQnlWY" +
                        "Wwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5Qcmlud" +
                        "EV2ZW50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlNhbGRvNCIpIElTIERCTnVsb" +
                        "C5WQUxVRSBUSEVODQogICAgIGUuQ2FuY2VsID0gVHJ1ZQ0KICBFTFNFSUYgR2V0Q3VycmVudENvbHVtb" +
                        "lZhbHVlKCJTYWxkbzQiKSA9IDAgVEhFTg0KICAgICBlLkNhbmNlbCA9VHJ1ZQ0KICBFTFNFDQogICAgI" +
                        "GUuQ2FuY2VsID0gRmFsc2UNCiAgRU5EIElGDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgbGFiZWw2N" +
                        "19CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3a" +
                        "W5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiU" +
                        "2FsZG81IikgSVMgREJOdWxsLlZBTFVFIFRIRU4NCiAgICAgZS5DYW5jZWwgPSBUcnVlDQogIEVMU0VJR" +
                        "iBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlNhbGRvNSIpID0gMCBUSEVODQogICAgIGUuQ2FuY2VsID1Uc" +
                        "nVlDQogIEVMU0UNCiAgICAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTkQgSUYNCg0KRW5kIFN1Yg0KDQoNC" +
                        "lByaXZhdGUgU3ViIEdyb3VwSGVhZGVyNF9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0L" +
                        "CBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGI" +
                        "EdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYTEiKSA9IDEgVEhFTg0KICAgICBlLkNhbmNlbCA9I" +
                        "FRydWUNCiAgRUxTRQ0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkRlc2dsb3NhciIpID0gIlNpI" +
                        "iBUSEVODQogICAgIGUuQ2FuY2VsID0gRmFsc2UNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IFRydWUgI" +
                        "CAgDQogIEVORCBJRiANCkVORCBJRiANCg0KRW5kIFN1Yg0KDQoNClByaXZhdGUgU3ViIEdyb3VwSGVhZ" +
                        "GVyNV9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5Ec" +
                        "mF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1Z" +
                        "SgiR3JhZmljYTEiKSA9IDEgVEhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRQ0KICBJRiBHZ" +
                        "XRDdXJyZW50Q29sdW1uVmFsdWUoIkRlc2dsb3NhciIpID0gIk5vIiBUSEVODQogICAgIGUuQ2FuY2VsI" +
                        "D0gRmFsc2UNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogIEVORCBJRiANCkVORCBJR" +
                        "iANCg0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBjaGFydDFfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyI" +
                        "EFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJnc" +
                        "ykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIk9yZGVuIikgSVMgTk9USElORyBUSEVODQogI" +
                        "CAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0dlbmVyYSB1b" +
                        "iBvYmpldG8gcXVlIHJlcHJlc2VudGEgYSBsYSBncsOhZmljYQ0KICBEaW0gR3JhZmljYTEgQXMgWFJDa" +
                        "GFydCA9IENUeXBlKHNlbmRlcixYUkNoYXJ0KQ0KDQogICdHdWFyZGEgZWwgdmFsb3IgZGUgbGEgY29sd" +
                        "W1uYSBDb250TW9uZWRhDQogIERpbSBDb250TW9uZWRhIEFzIFN0cmluZyA9IEdldEN1cnJlbnRDb2x1b" +
                        "W5WYWx1ZSgiQ3VlbnRhIikuVG9TdHJpbmcNCg0KICAnR2VuZXJhIHVuIG9iamV0byBxdWUgcmVwcmVzZ" +
                        "W50YSBhIGxhIHBsYW50aWxsYSBzZSBzZXJpZXMgYXV0b2NyZWFkYXMNCiAgRGltIFBsYW50aWxsYSBBc" +
                        "yBTZXJpZXNCYXNlID0gR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUNCg0KICAnT2N1bHRhIG8gbXVlc3RyY" +
                        "SBsYXMgZXRpcXVldGFzIGRlIGxhIGdyYWZpY2ENCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJFd" +
                        "GlxdWV0YSIpID0gRmFsc2UgVEhFTg0KICAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5Wa" +
                        "XNpYmxlID0gRmFsc2UNCiAgRUxTRQ0KICAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5Wa" +
                        "XNpYmxlID0gVHJ1ZQ0KICBFTkQgSUYNCg0KRW5kIFN1Yg0KQAABAAAA/////wEAAAAAAAAADAIAAABRU" +
                        "3lzdGVtLkRyYXdpbmcsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb" +
                        "2tlbj1iMDNmNWY3ZjExZDUwYTNhBQEAAAAVU3lzdGVtLkRyYXdpbmcuQml0bWFwAQAAAAREYXRhBwICA" +
                        "AAACQMAAAAPAwAAAFrBAAAC/9j/4AAQSkZJRgABAQEAlgCWAAD/7gAOQWRvYmUAZAAAAAAB/+ERlkV4a" +
                        "WYAAE1NACoAAAAIAAcBEgADAAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACA" +
                        "AABMQACAAAAHAAAAHIBMgACAAAAFAAAAI6HaQAEAAAAAQAAAKIAAADCAJYAAAABAAAAlgAAAAEAAEFkb" +
                        "2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cwAyMDExOjAxOjE4IDA5OjUxOjA2AAACoAIABAAAAAEAAAFio" +
                        "AMABAAAAAEAAACBAAAAAAAAAAYBAwADAAAAAQAGAAABGgAFAAAAAQAAARABGwAFAAAAAQAAARgBKAADA" +
                        "AAAAQACAAACAQAEAAAAAQAAASACAgAEAAAAAQAAEG4AAAAAAAAASAAAAAEAAABIAAAAAf/Y/+0ADEFkb" +
                        "2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMVExMYEQwMD" +
                        "AwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMD" +
                        "BERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA6AKADASIAAhEBAxEB/90AB" +
                        "AAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGB" +
                        "wgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclk" +
                        "lPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1" +
                        "ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8" +
                        "DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5" +
                        "fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1VJJJJSlgYWR9Z3fWTIqyqg3pLd/pu" +
                        "2tDdoj0HVWA+q+2z/DMf/4H+jV36w9WPSOk3ZrGtfa3a2ljpgveQxu7b+a2fUch/VjquX1bpDMzLrbXY" +
                        "572gskNcGu2eo1ri9zP3Ppp/tS9v3f0OLg/wlnux9z2/wBKuL/BdZJJJMXqSSSSUpJJJJSkkkklKSSSS" +
                        "UpJJJJSkkkklKSSSSU//9D1VZ/WutYnR8T17/fY+W0UNPusd+6391jf8JZ/g03W+t4nRsT17/fY+W0UN" +
                        "Pusd4D91jf8JZ/g1xvTOmdR+tfUX5+e8txWnbZY2QIB/oeH+6xv+Ft/9H/zaUr6x9Tys36r9OuynB12X" +
                        "k23ODRDWis3VV1M/kMY5n0kXqw6l0von1f6h08FlWJTuttGoD7xU+Miv/Q2u9Rv9f8A0dnpK1/jBwaqO" +
                        "ldPGOwVUY9ppZW0QAHMcW/+el0PQHU5f1dwQQLKn4tdb2OALTDBVaxzT9L6LmLQjkGPlsE+HiAnPjidj" +
                        "xcUf+g0ZYzk5nNG+EmEOGQ3Fer/AKbD6vfWHF63i72fo8muBkY5OrT+839+p/5j1rLzvrvQs76sZrerd" +
                        "Ic4YgdodXGouP8AMX/6XFs+ix7v+Ls/S+lbZ131e+sON1vF3sHp5NUDIoJktJ/Ob+/U/wDMeoeY5eIj7" +
                        "2E8WGX+Njl+7JlwZ5GRxZRw5Y/4uSP78UvXeuYnQ8H7blte+svFYbXtmSC7/COrZ9FjvzleqtZdUy6sy" +
                        "yxoe0+ThuasH68dRy+m9IryMNzWX+u1rbHMa8tllpLqxaHsa/27Po/QWT1PrP1lf1fC6d03KFb8rFqsD" +
                        "XMr2l5bZZa4vfU/b7a03Hys8kRISjEHi+Y/5v5rXZOZhCRiRKUhw6RH7/yvbrK679YMXoddFmVXZYy95" +
                        "ZNYadsDcXOD3M/6K5vI6x9dOhOFvV2Ny8Oz2uewMG0n/R20sZ6dv7nr0+k9Zf1of1e7Fx8rKzG53S73F" +
                        "+DZtYyyC3d+mZTXXtsY39FZ/L/0amw8leSPHKEscusJfP8A1Y/1mLNzlY5GMZCceko/L/Wl/VfTUlytX" +
                        "U/rD0LDys36x215LPYzEpr2h7rTu9u+uuprK9v09/qfQ/7co49v+MLqmP8AtDHtrx6njfTRDGbm9vSbd" +
                        "Xc/a78z7Taz/MUQ5SRs+5jEAeH3DL0Sl2iyHmQKHBMzI4uAD1xj3k9wuV+qH1hz+oY3UsvqVgezGIe1r" +
                        "GBoYza+x7W7fe/6P56P9V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa+WGdlrNzd35j/5ypYv1FsNfSOtWBrXlj" +
                        "Nwa8S0xXYdr2/nMT44DHFnjMDjHtcMt/nlvGX9ZZLOJZMBiTwEZOIf3I/pR/qvWdC63idcwftuI17GB5" +
                        "rc2zbuDmwf8G6xn0XN/PWiuI6f9beoY31Uf1HJIyst2UcaiWtYwfo22N9RlAq9jGts/l/mJY7P8YWbit" +
                        "6hTmVBrxurpBqkg8bQKbKf+3L037nMXxzhACXBxSOkpf1V33uBrhjOZI46iNYx8Xr8/NpwMK/Nvn0sdj" +
                        "rHhokw0bvbMIfSep0dW6fT1DHDm1XTDXRILXOqe07C9n02fvLCr6v1236t9Tt6phjHysNjhXZYz2WED+" +
                        "c9Czex3pu/P/o9n+DVSz63Z+F9VsHKfGR1HOdc0WvaA0Cux7XWOrq9NrnbPTYxn/XE0cpkJocJ9ft6G9" +
                        "eH3OL+7wrjzWMCzY9PuajpxcH+NxPaJLim4/wDjGdQ3MZl1WFwBFDTSSQf+s/Zv/ZhdD9Xc/qWf071up" +
                        "4pxMlr3MLS1zN4ERaKrPfX9LZ/YTcnLmEeIThMA0eCWoTjz8Z4TCcLFjjGhf//R7P61/Vk9VaM3EMZ9L" +
                        "NgY4+2ysEv9H3e2qzc79FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY9rhsLXA7PsmS327LGu9ldn/AFu39L/O9" +
                        "qub+tX1VZ1RjszDa1ue1sPYYDb2gR6dk+1tzW/zVv8A1q39H/MpTe+tHTHdT6Jk49bd17QLaByd9Z3hr" +
                        "f8AjG7qv+uLE/xedXZbi2dJsd+kpJuxwe9bzNjR/wAVc7/wZR+qn1oex7ekdVc4ODvSx7rJDg4HZ9kyd" +
                        "3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf1X6ul2RU+x7Lm4jpfTfrXkNb6Z37LdzvU/0f/Eq5y0oZMcuXmeHi" +
                        "PHjkf0ZtTmYzx5I54Di4RwZIj9KH/oLc+t31rNzn9F6TNjrD6ORawbi4u9hxcdo+m9/0LH/APW6/f8Az" +
                        "ep9UPquej1Oy8szn5DQ1zAZbUyd3ogj6dm7+ds/7a/0lsPqn9UmdJY3NzWtf1BzYa0QW0tI/m6/3rXf4" +
                        "W3/AK1V+j/numQz5oRh7GD5P059csv+9ThwylP383z/AKEOmKP/AHzyn+Mj/kGr/wAMt/8APdyzx/4tO" +
                        "jf+FKv/AD1kLpfrLhdOzsGrG6iLfRsyKmMfToW2PPo1Ocf9G51npfR/wiouZ9Xj1M9UYLTk9IfX08VMM" +
                        "tLn7aKNrHe6za7KdTv3/mWf6NPw5QMIjUiayx0Gl5eGMFmXETmMrG+OXj+r9UnS+sdbLOgdRbY0OAxrX" +
                        "AHxa02Md/Ze3cuAz22u+pXTH8sZk3s+BcbXMH4PXpNzcTPoycMvbYx7XU5DWOG5u8bXNdt/m37XKhi9L" +
                        "6JgdKf0iyxl2I0Ofa3Iewna5xJfZ9Da1tv0H/vpnL5xiiAQTIZBPh/q8MoFfzGH3JEggAwML/rcXE4n1" +
                        "2vx+q9AqzenXNyace5r7thna17X17rWfTr2vez2Pas/pnScTqGIy9v1jtpdtAsosftdWQI9Pa69vtb+Y" +
                        "76C6fpv1f6D0jJu9A+/qDdgotsDwWDc411Vv91jPd7t/qrLZ9UPqv1Kyy2oXYm263HFLXtDS+lzmWGll" +
                        "nrez2bv6n+DU2PPjjAwjKcYRPFHJwRlpP8ARlGX/SYsmGcp8ZEZSkOGUOOUfl/SjKKbof1Trxep19XZ1" +
                        "Q55Zva4wHbiW+l7rvUs+gsf6lvY3pHXKS4C30i70zztDLGF3+f7V1n1e6R0vpWLbX02w3V2WF1jy8P9w" +
                        "Ar2/ow1jdm1Yoq6CepV9Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67H13ei79Jucxn+j/AEv6RNjmM/djIynpD" +
                        "hlwxh/NH3OGUfT/AFkywiAxSiBD5+KNymP1w4OLi9TmdDv6NT9TLf2xW63GszSxjawS/wBQsrcx1TgW7" +
                        "HMa17t2/wD9Jqbfq3jU1Oz/AKvdebTWQCfUs9OPzv091JZt/wCLuxV0ON0zoXTMb/m/Ywvxslj8ix+Q5" +
                        "paYfTTD3+zbbvtp9H02f4P/AEqo2/UH6tOyvT9e6u18uZji1hO0fuerXZfs/tp45iHFM8U4CcjP5Rkxz" +
                        "h/c/RWnl5cMBwwmYxEfm9vJCX99z8Tr3UOp/V/reJnObe/EoJbksAAcHb2w7YG1u/m/0T2s/SVp8e7oD" +
                        "fqb0ynrTXll1twpfUCX1uFt2+8Ob+bW13v/AJzf/obF0tHRug09Pv6RjhjKr6ybw182Frhs9d7yXWdva" +
                        "/6CVHROiO6WOi7W5WNjH3Me7c9rnE2+o57Nr6rXeo53s9NRnmMWvDGcI+4MlQ9BEeDg4h+7614wZNLlG" +
                        "cvbOP1eocXHx1/ivLO+r32Co53Qev1V45M/pLRW3/rllRdRa7/jMZbv1L67m9YwrvtoDrcZ4b6zRtDw4" +
                        "bvc0ez1Gfn7P5CpD6ifVdzftTcq00au3C2sshs7/wBL6e7azb7v0q6Xp2DgYGK2jp9basf6Tdhndu/wh" +
                        "eS51m799zkuYzY5YzGzknek5QGOUK6GX6SeXw5I5AdMcK1hGZnGd9h+i//S9VSSSSU859afqs3qbHZuE" +
                        "0N6g1vuZoG3tA/m3z7W3N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/bMloFlTXH062j6Ne1p9O25v59//AFun9" +
                        "H/O9AkkpSSSSSmn1jEszOm30VfzxbvokwPVrIux/d/x9dax6OgZwzMG6ws2ms3Z/BjKab76TW389n2nq" +
                        "WRb/wCg1K6RJWMXu+2eGuG5Xffh/l/hsGX2uMcV8VDbtxPPfVvo+Tg2VnKqsZbj4/2Y2bqDS/3Nfuq+z" +
                        "11ZVm5zPVa/N/Ss9a78+yyxNX9XpycO23FpdszM2/JcQ0ksudkOxi7T9J9PG9v+D/60uiSUkve457XR4" +
                        "uHi/dybf8//AA1kfa4I3fDYrir96Dx7+hda+wY2GKvdTTS2t7XVQx9V773NtvsacrZXS3H+xNxfz/V9Z" +
                        "Gf0DqxdnbdjhnjNqrc92uOLn2XU20bR/NZstZm/4f1PQ/wdXps6pJSH39f5v5pXX7ywezp8/wAsd/3XH" +
                        "6BgWYzr7rabcey1tTCyw4+39EHAek3p7Kq9rN/pepa31X1sq/0aDh9KzqmfV8WMAPTqnMyvcDtJo9D2/" +
                        "v8A6RbySgPucU/l21q6r2p/L/1NlHBwQviqxV1xX7sPm/w3K6j0r7b1FlttNd+OzEvqAsAcBZY6nb7Hf" +
                        "vVss96yW9H605+A26oE4pwXG1rqoikMbl+va5js27K3euyv07Psv2d/+k9Su3q0k7F7vCK4ar08d9/0U" +
                        "ZPb4jfFd68NPGdHw3W4OLkV4bK6sazNvtzpZusa4ZWP6DWt/TOc99jHXer+h2Y1f857PSWH0XMzelY/2" +
                        "XFrwQOmCg2hzR9oNpx79n6Nr3+h6dFvqPyW7/Uy3/oLa/V9Xs0lMfd4jQjxcWms/wB7J+96f32KPt8Is" +
                        "y4eHXSP7sP3fV/3bzmL0N77Me27Hs2/bftGRVlGhwhuLbjV3V1YTW4388+ln+l/ReqtDpFGVhMbhHGbX" +
                        "jB2TY2xr27WB2Q9+LjtpH5rsa3f/wAF6fpLTSVfN7lHj4eHSq4uH9Ph4WfFwacPFeu/Df6PFb//2f/tG" +
                        "NBQaG90b3Nob3AgMy4wADhCSU0EJQAAAAAAEAAAAAAAAAAAAAAAAAAAAAA4QklNBDoAAAAAAJMAAAAQA" +
                        "AAAAQAAAAAAC3ByaW50T3V0cHV0AAAABQAAAABDbHJTZW51bQAAAABDbHJTAAAAAFJHQkMAAAAASW50Z" +
                        "WVudW0AAAAASW50ZQAAAABDbHJtAAAAAE1wQmxib29sAQAAAA9wcmludFNpeHRlZW5CaXRib29sAAAAA" +
                        "AtwcmludGVyTmFtZVRFWFQAAAABAAAAOEJJTQQ7AAAAAAGyAAAAEAAAAAEAAAAAABJwcmludE91dHB1d" +
                        "E9wdGlvbnMAAAASAAAAAENwdG5ib29sAAAAAABDbGJyYm9vbAAAAAAAUmdzTWJvb2wAAAAAAENybkNib" +
                        "29sAAAAAABDbnRDYm9vbAAAAAAATGJsc2Jvb2wAAAAAAE5ndHZib29sAAAAAABFbWxEYm9vbAAAAAAAS" +
                        "W50cmJvb2wAAAAAAEJja2dPYmpjAAAAAQAAAAAAAFJHQkMAAAADAAAAAFJkICBkb3ViQG/gAAAAAAAAA" +
                        "AAAR3JuIGRvdWJAb+AAAAAAAAAAAABCbCAgZG91YkBv4AAAAAAAAAAAAEJyZFRVbnRGI1JsdAAAAAAAA" +
                        "AAAAAAAAEJsZCBVbnRGI1JsdAAAAAAAAAAAAAAAAFJzbHRVbnRGI1B4bEBiwAAAAAAAAAAACnZlY3Rvc" +
                        "kRhdGFib29sAQAAAABQZ1BzZW51bQAAAABQZ1BzAAAAAFBnUEMAAAAATGVmdFVudEYjUmx0AAAAAAAAA" +
                        "AAAAAAAVG9wIFVudEYjUmx0AAAAAAAAAAAAAAAAU2NsIFVudEYjUHJjQFkAAAAAAAA4QklNA+0AAAAAA" +
                        "BAAlgAAAAEAAgCWAAAAAQACOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNBA0AAAAAAAQAAAB4O" +
                        "EJJTQQZAAAAAAAEAAAAHjhCSU0D8wAAAAAACQAAAAAAAAAAAQA4QklNJxAAAAAAAAoAAQAAAAAAAAACO" +
                        "EJJTQP1AAAAAABIAC9mZgABAGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABADIAAAABAFoAAAAGA" +
                        "AAAAAABADUAAAABAC0AAAAGAAAAAAABOEJJTQP4AAAAAABwAAD/////////////////////////////A" +
                        "+gAAAAA/////////////////////////////wPoAAAAAP////////////////////////////8D6AAAA" +
                        "AD/////////////////////////////A+gAADhCSU0EAAAAAAAAAgABOEJJTQQCAAAAAAAEAAAAADhCS" +
                        "U0EMAAAAAAAAgEBOEJJTQQtAAAAAAAGAAEAAAADOEJJTQQIAAAAAAAQAAAAAQAAAkAAAAJAAAAAADhCS" +
                        "U0EHgAAAAAABAAAAAA4QklNBBoAAAAAA0kAAAAGAAAAAAAAAAAAAACBAAABYgAAAAoAVQBuAHQAaQB0A" +
                        "GwAZQBkAC0AMQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABYgAAAIEAAAAAAAAAAAAAA" +
                        "AAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5kc09iamMAA" +
                        "AABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tbG9uZ" +
                        "wAAAIEAAAAAUmdodGxvbmcAAAFiAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVzbGljZQAAA" +
                        "BIAAAAHc2xpY2VJRGxvbmcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlnaW5lbnVtAAAADEVTb" +
                        "GljZU9yaWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZVR5cGUAAAAASW1nI" +
                        "AAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0bG9uZ" +
                        "wAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJnaHRsb25nAAABYgAAAAN1cmxURVhUAAAAAQAAAAAAAG51b" +
                        "GxURVhUAAAAAQAAAAAAAE1zZ2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABAAAAAAAOY2VsbFRle" +
                        "HRJc0hUTUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWduZW51bQAAAA9FU2xpY" +
                        "2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VTbGljZVZlcnRBbGlnbgAAA" +
                        "AdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51bQAAABFFU2xpY2VCR0NvbG9yVHlwZQAAAABOb25lAAAAC" +
                        "XRvcE91dHNldGxvbmcAAAAAAAAACmxlZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b21PdXRzZXRsb25nA" +
                        "AAAAAAAAAtyaWdodE91dHNldGxvbmcAAAAAADhCSU0EKAAAAAAADAAAAAI/8AAAAAAAADhCSU0EFAAAA" +
                        "AAABAAAAAQ4QklNBAwAAAAAEIoAAAABAAAAoAAAADoAAAHgAABswAAAEG4AGAAB/9j/7QAMQWRvYmVfQ" +
                        "00AAf/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwME" +
                        "QwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMD" +
                        "AwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACEQEDEQH/3QAEAAr/x" +
                        "AE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKC" +
                        "xAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh8" +
                        "WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3R" +
                        "1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4" +
                        "XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmd" +
                        "oaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMirKqDekt3+m7a0N2i" +
                        "PQdVYD6r7bP8Mx//gf6NXfrD1Y9I6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5fVukMzMuttdjnvaCy" +
                        "Q1wa7Z6jWuL3M/c+mn+1L2/d/Q4uD/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkklKSSSSUpJJJJSkkkk" +
                        "lKSSSSUpJJJJT//0PVVn9a61idHxPXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGxPXv99j5bRQ0+6x3g" +
                        "P3WN/wln+DXG9M6Z1H619Rfn57y3FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzfqv067KcHXZeTbc4N" +
                        "ENaKzdVXUz+QxjmfSRerDqXS+ifV/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2ekrX+MHBqo6V08Y7" +
                        "BVRj2mllbRAAcxxb/56XQ9AdTl/V3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+WwT4eICc+OJ2PFxR/6" +
                        "DRljOTmc0b4SYQ4ZDcV6v8ApsPq99YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u9Czvqxmt6t0hzhiB" +
                        "2h1cai4/wAxf/pcWz6LHu/4uz9L6VtnXfV76w43W8Xewenk1QMigmS0n85v79T/AMx6h5jl4iPvYTxYZ" +
                        "f42OX7smXBnkZHFlHDlj/i5I/vxS9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/OV6q1l1TLqzLLGh7T" +
                        "5OG5qwfrx1HL6b0ivIw3NZf67Wtscxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3TcoVvysWqwNcyvaX" +
                        "ltllri99T9vtrTcfKzyREhKMQeL5j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh10WZVdljL3lk1hp2" +
                        "wNxc4Pcz/orm8jrH106E4W9XY3Lw7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXHysrMbndLvcX4Nm1j" +
                        "LILd36ZlNde2xjf0Vn8v/RqbDyV5I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9aX9V9NSXK1dT+sPQ" +
                        "sPKzfrHbXks9jMSmvaHutO727666msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9NEMZub29Jt1dz9rv" +
                        "zPtNrP8xRDlJGz7mMQB4fcMvRKXaLIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy+pWB7MYh7WsYGhjN" +
                        "r7Htbt97/o/no/1X+suT1G63pnU6vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw19I61YGteWM3BrxL" +
                        "TFdh2vb+cxPjgMcWeMwOMe1wy3+eW8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1zB+24jXsYHmtzbNu" +
                        "4ObB/wbrGfRc389aK4jp/1t6hjfVR/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+Yljs/xhZuK3qFOZU" +
                        "GvG6ukGqSDxtApsp/7cvTfucxfHOEAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82nAwr82+fSx2OseGiT" +
                        "DRu9swh9J6nR1bp9PUMcObVdMNdEgtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2OFdljPZYQP5z0LN7" +
                        "Hem78/+j2f4NVLPrdn4X1Wwcp8ZHUc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRymQmhwn1+3ob14fc4v" +
                        "7vCuPNYwLNj0+5qOnFwf43E9okuKbj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1dz+pZ/TvW6ninEyW" +
                        "vcwtLXM3gRFoqs99f0tn9hNycuYR4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9WT1VozcQxn0s2Bjj7" +
                        "bKwS/0fd7arNzv0Vn9i7/SU5n1T+s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2f8AW7f0v872q5v61" +
                        "fVVnVGOzMNrW57Ww9hgNvaBHp2T7W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3XtAtoHJ31neGt/wCMb" +
                        "uq/64sT/F51dluLZ0mx36Skm7HB71vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHuskODgdn2TJ3e71d3" +
                        "sqe/wD4qz9J/O5/1h6DcM5/Vfq6XZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnLShkxy5eZ4eI8eOR/" +
                        "Rm1OZjPHkjngOLhHBkiP0of+gtz63fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qsf8A9br9/wDN6n1Q+" +
                        "q56PU7LyzOfkNDXMBltTJ3eiCPp2bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS0j+br/etd/hbf8Ar" +
                        "VX6P+e6ZDPmhGHsYPk/Tn1yy/71OHDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/wA93LPH/i06N/4Uq" +
                        "/8APWQul+suF07OwasbqIt9GzIqYx9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1RgtOT0h9fTxUwy0ufto" +
                        "o2sd7rNrsp1O/f+ZZ/o0/DlAwiNSJrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6B1FtjQ4DGtcAfFrT" +
                        "Yx39l7dy4DPba76ldMfyxmTez4Fxtcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc123+bftcqGL0vomB0p" +
                        "/SLLGXYjQ59rch7CdrnEl9n0NrW2/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCADAwv+txcTifXa/H6r" +
                        "0CrN6dc3Jpx7mvu2GdrXtfXutZ9Ova97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZAj09rr2+1v5jvoLp+" +
                        "m/V/oPSMm70D7+oN2Ci2wPBYNzjXVW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte0NL6XOZYaWWet7PZ" +
                        "u/qf4NTY8+OMDCMpxhE8UcnBGWk/wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/VOvF6nX1dnVDnlm9" +
                        "rjAduJb6Xuu9Sz6Cx/qW9jekdcpLgLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDdXZYXWPLw/3ACvb+j" +
                        "DWN2bViiroJ6lX1Srp2ZZZ1Wl5pYzYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2OYz92MjKekOGXDGH" +
                        "80fc4ZR9P8AWTLCIDFKIEPn4o3KY/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/AFCytzHVOBbscxrXu" +
                        "3b/AP0mpt+reNTU7P8Aq915tNZAJ9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC/GyWPyLH5Dmlph9N" +
                        "MPf7Ntu+2n0fTZ/g/8ASqjb9Qfq07K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzxTgJyM/lGTHOH9z9F" +
                        "aeXlwwHDCZjER+b28kJf33PxOvdQ6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RPaz9JWnx7ugN+pvTK" +
                        "etNeWXW3Cl9QJfW4W3b7w5v5tbXe/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWuGz13vJdZ29r/oJUd" +
                        "E6I7pY6LtblY2Mfcx7tz2ucTb6jns2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH7vrXjBk0uUZy9s4/" +
                        "V6hxcfHX+K8s76vfYKjndB6/VXjkz+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOtxnhvrNG0PDhu9zR7" +
                        "PUZ+fs/kKkPqJ9V3N+1NyrTRq7cLayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx/pN2Gd27/CF5LnWb" +
                        "v33OS5jNjljMbOSd6TlAY5QroZfpJ5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1p+qzepsdm4TQ3qDW" +
                        "+5mgbe0D+bfPtbc3/A3f9at/R/zM/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07bm/n3/8AW6f0f870C" +
                        "SSlJJJJKafWMSzM6bfRV/PFu+iTA9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppvvpNbfz2faepZFv/A" +
                        "KDUrpElYxe77Z4a4bld9+H+X+GwZfa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZuoNL/c1+6r7PXVlWb" +
                        "nM9Vr839Kz1rvz7LLE1f1enJw7bcWl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6JJSS97jntdHi4eL93" +
                        "Jt/z/8ADWR9rgjd8NiuKv3oPHv6F1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLcf7E3F/P9X1kZ/QOr" +
                        "F2dt2OGeM2qtz3a44ufZdTbRtH81my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7Onz/ACx3/dcfoGBZj" +
                        "Ovutptx7LW1MLLDj7f0QcB6Tensqr2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9OqczK9wO0mj0Pb+/wDpF" +
                        "vJKA+5xT+XbWrqvan8v/U2UcHBC+KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCwBwFljqdvsd+9Wyz3" +
                        "rJb0frTn4DbqgTinBcbWuqiKQxuX69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8IrhqvTx33/RRk9viN" +
                        "8V3rw08Z0fDdbg4uRXhsrqxrM2+3Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9JYfRczN6Vj/ZcWvBA" +
                        "6YKDaHNH2g2nHv2fo2vf6Hp0W+o/Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn73p/fYo+3wizLh4dd" +
                        "I/uw/d9X/dvOYvQ3vsx7bsezb9t+0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0OkUZWExuEcZteMHZNj" +
                        "bGvbtYHZD34uO2kfmuxrd//AAXp+ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/o8Vv//ZOEJJTQQhA" +
                        "AAAAABVAAAAAQEAAAAPAEEAZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwAAAAEwBBAGQAbwBiAGUAI" +
                        "ABQAGgAbwB0AG8AcwBoAG8AcAAgAEMAUwA1AAAAAQA4QklNBAYAAAAAAAcABwAAAAEBAP/hDdBodHRwO" +
                        "i8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2Voa" +
                        "Uh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4Onhtc" +
                        "HRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTItMTc6MzI6MDAgI" +
                        "CAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyL" +
                        "XJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wP" +
                        "SJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlL" +
                        "mNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zV" +
                        "HlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xL" +
                        "jEvIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8iIHhtc" +
                        "DpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXA6Q3JlYXRlRGF0ZT0iM" +
                        "jAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxMS0wMS0xOFQwOTo1M" +
                        "TowNi0wNjowMCIgeG1wOk1vZGlmeURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcE1NO" +
                        "kluc3RhbmNlSUQ9InhtcC5paWQ6MzQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHhtcE1NO" +
                        "kRvY3VtZW50SUQ9InhtcC5kaWQ6MzM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHhtcE1NO" +
                        "k9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5O" +
                        "CIgZGM6Zm9ybWF0PSJpbWFnZS9qcGVnIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b3Nob3A6S" +
                        "UNDUHJvZmlsZT0ic1JHQiBJRUM2MTk2Ni0yLjEiPg0KCQkJPHhtcE1NOkhpc3Rvcnk+DQoJCQkJPHJkZ" +
                        "jpTZXE+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEP" +
                        "SJ4bXAuaWlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3aGVuPSIyMDExL" +
                        "TAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ" +
                        "1M1IFdpbmRvd3MiLz4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0Y" +
                        "W5jZUlEPSJ4bXAuaWlkOjM0NEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3aGVuP" +
                        "SIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b" +
                        "3Nob3AgQ1M1IFdpbmRvd3MiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4NCgkJCQk8L3JkZjpTZXE+DQoJCQk8L" +
                        "3htcE1NOkhpc3Rvcnk+DQoJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJERj4NCjwveDp4bXBtZ" +
                        "XRhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg";
                    resourceString += "ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/eHBhY2tldCBlbmQ9J3cnPz7/4gxYSUNDX1BST" +
                        "0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJRUMgc" +
                        "1JHQgAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia3B0A" +
                        "AACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkA" +
                        "AACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoA" +
                        "AAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdod" +
                        "CAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2MTk2N" +
                        "i0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAAA" +
                        "AAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EA" +
                        "AC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBodHRwOi8vd" +
                        "3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjA" +
                        "AAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAA" +
                        "AAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxO" +
                        "TY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yL" +
                        "jEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAEEwsAA1yeA" +
                        "AAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AAAACc" +
                        "2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUA" +
                        "FkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrA" +
                        "PAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxA" +
                        "bkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBA" +
                        "ssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgB" +
                        "C0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVB" +
                        "eUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB" +
                        "/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUC" +
                        "moKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mD" +
                        "UANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhE" +
                        "H4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGF" +
                        "CcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF9IX9xgbG" +
                        "EAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9ocAhwqHFIcexyjH" +
                        "Mwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYIMQg8CEcIUghdSGhI" +
                        "c4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ" +
                        "0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRLAUsOSxuLKIs1y0ML" +
                        "UEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M" +
                        "7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0O" +
                        "rI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQ" +
                        "jBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwS" +
                        "jdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8U" +
                        "sdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW" +
                        "+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9Z" +
                        "ZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b" +
                        "9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGe" +
                        "qV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrh" +
                        "g6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5Gok" +
                        "hGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5An" +
                        "q6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1q" +
                        "+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm40blKu" +
                        "cK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGxsPHQce/y" +
                        "D3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY1" +
                        "1zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmDeaW5" +
                        "x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb79" +
                        "4r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////2wBDAAEBAQEBAQEBAQECAQEBAgIBAQEBAgICA" +
                        "gICAgIDAgMDAwMCAwMEBAQEBAMFBQUFBQUHBwcHBwgICAgICAgICAj/2wBDAQEBAQICAgQDAwQHBQQFB" +
                        "wgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAj/wAARCACBAWIDA" +
                        "REAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAA" +
                        "AF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q" +
                        "0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKzt" +
                        "LW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBA" +
                        "QAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIF" +
                        "EKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpa" +
                        "nN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2" +
                        "Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/igAoAKACgAoAKAGu6Ro8kjiOOMF5JHIC" +
                        "qoGSST0AoA/Fbxl/wAF0P2VvC/xJu/Bul+EvE3jLwjpl0+lX/xJ8Pw6d9jlKOUM9nb3FzHLNBnkO2wkZ" +
                        "KqRjMc6NFSZ+wfgnxp4X+I/hDw1498E6xF4g8JeL7K38Q+HdasifLuLS6jEsbgMAynB5VgCpyCAQRVmb" +
                        "R1FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAYPirQYfFXhjxH4XuLl7O38SWF5oM93a482JLy3e3Z03cblD5Ge9AH8RPjP/A" +
                        "IJcftveFPiTe/Dmy+Bmq+L9l0bHSPGnhlYpdBvYGkKxXAvpHSGBHUbis7IyZw4U1jys6lUR/YJ+yF8Fd" +
                        "U/Z2/Zp+D3wY13U49X13wNpKWWvX1mS0BvrmeS+uEhZlQtFHLOyRsVBKgEgHitUjnk7s+kKZIUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFAH+ev8A8FEP2sfGf7VP7UfxP8W3Xi+91T4d+HNbvtA+EGiG4" +
                        "lFjYaNp9wbS2mt4AxSOS4WITSuOSzHnAGP9oPBXw6wvD3D+Hoqko15wUqrtq5SV2m92o35Utkkf4peN3" +
                        "iPiuIuIcRWdVyoQm40lfSMIuyaWycrcze92f1P/APBDj4ufFP4vfsR/bPipr154ou/BHizVvh/4O1/xB" +
                        "LNcXk+h2mnabeQrJPOzPKIZruaFCT8qIqDha/z5+llw3l+W8V8uEgoKpSjOSjZJTcpp2S0V1FN922+p/" +
                        "od9EjiXMcz4T5sXNzdOrKEJSu24KMGrt6uzk0uySXQ/Ymv5lP6fCgAoAKACgAoAKACgAoAKACgAoAKAC" +
                        "gAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgCC6uraytri9vbhLS" +
                        "ztEe6u7u6dY4ooo1Ls7s5AVVAJJJwBQB8sftdfGzT/hj+xt8cvjh4a1iG5h07wVqOv+CNdspVaCe71Kw" +
                        "MGlyxyKcMsk1xEVI6g8V974W8PLNuI8FhGrxnVjzf4U7y/8lTPgPFXiJ5Tw3jsWnaVOlLl/xNWj/wCTN" +
                        "H+crX+4J/hif3b/AAP1Wz/4J8f8EkPCPjt9GhuNZ+HvgBfiddaNqG+NLrxJ4mP9qx21y64fH23UUgYg5" +
                        "CjC8AV/kXxZh5cZ+JFXD8zUatf2d10p0/dbXT4YuS89z/X/AISxEOCvDWliOROdKh7Sz61KnvJPr8c1F" +
                        "+Wx9PfsVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L8D4p" +
                        "+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf6B4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpw" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFAEF1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+Uj/gpz/wAFOtS/aA1XUP2a/" +
                        "wBm/V3h+ErXA0Pxf400+TyZfFtyZBF9mgcldunBuCSR555P7v7+UpG8IW1Z+kn/AAWu1WH4Z/8ABNXxB" +
                        "4G0uYwWWv6l4P8AhrbDB3Pb2N7FqYXO1sZXTBnkZHGTnB/pz6JOWLEcaUZtfwoVJf8AkvJ/7d/W5/Lv0" +
                        "u80eH4KrQTt7WdOP/k3P/7b/Wx/Fp8OPCUvj74h+A/AsLOs3jXWdL8JRNBjeG1K+iswVyCM5k44r/VPP" +
                        "MyWDwVbEPanCUv/AAFN/of5Q5HlrxuNo4db1Jxj/wCBNL9T+0H/AILt61qPhT/gnvqXh7QNPuDo/ifxP" +
                        "4X8Ia0NNjleC1062km1WNpygYJF59hCgZiBvZBnJAP+XP0RcLDEcaRqVJLmhTqSV93J2i7d3aUnp0Tex" +
                        "/qh9L/F1MNwVKnTi+WdWnF22UVeSv2V4xWvVpb2P5Ef2Yf2nviz+yP8WdD+L/wg1w6bremn7JrOjXe99" +
                        "O1nTndWmsb6FWXzIZNo7hlYB0KuqsP9JuPuAcu4ky6eDxkLweqa+KMukovo19zWjum0f5o+H/iBmXDWZ" +
                        "QxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJ" +
                        "gL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqyn" +
                        "Bv3oS7Pun9mWzXZppfYdfmZ+nBQAUAFAHKeOPHPg/4aeE9c8d+PvEdp4S8H+Gof7Q13xFrkqwW1tFuEY" +
                        "LM3dmYKqjlmIABJAoBI8j+A37V/7PP7TkGuTfAz4oWXj1/DbImu2FvDe2N7bLIzIkj2upwW03lsVIWQJ" +
                        "tOODSTuNxaPoemIKACgAoAKAPgbxH/wVC/YQ8H/ABV1z4K+LP2gbTw18RvDWqTeDNf0nXtG8S2lpaajb" +
                        "zGCSOXUZ9OWyVVcYMhn2d92K/YsD4A8X4nLoY6jgnOhOKnFqVNtxaumoqfPt05b+R+NY76QXB+FzGeBr" +
                        "Y1Qrwk4SThUSUk7NObhyb9ea3mfesUsU8UU8EqzQTKssM0TBkdGGQykcEEdDX4/KLTs9z9jjJNXWqZJU" +
                        "lBQAUAFABQB8U/8FGPir4y+Cf7En7RPxK+H2qPofjPQNDW10DW7YlZrKbUr+30o3ELD7ssS3JeNuzAHt" +
                        "X6p4I8PYXNeK8FhcTHmpSneS6NRTlZ+TtZ+R+U+OPEWKynhPHYrDS5asYWi+qcpKN15q915n8hP/BK34" +
                        "hePvFn/AAUe/ZwuvFPjjWPEtzqurapLqlx4g1O9vJLlv+Ec1A5la5kcueBy2a/0o+kJk2Dw3A+OVKlCC" +
                        "jGNuWKVvfjtZaH+Z30d86xmJ46wLrVpzcpyvzSbv+7lvd6n93Gt63o3hrRtV8ReItVttC0DQrabWNb1v" +
                        "WJo7a0s7S2jM0s00sxVEjRFLMzEAAZNf5Bn+w588fBH9sv9mP8AaO1/W/CvwW+L2neOPEnh6NrzU9Et4" +
                        "r6zufIR1jaaFNRgtzPErMoaSLcoJGTyKSaZTi0fTdMkKACgAoAKAPl34zftqfst/s9+LNI8DfGL4y6Z4" +
                        "L8W60kdzaaFcR3t3PFDLnZJc/2fBOLaNtp2vOUU9jSbRSi2fS+n6hYatYWWq6Vew6npepwx6hpupafIk" +
                        "0FxBMgkjkjkjJV0dSCrAkEHIpklugAoAKACgAoAKACgAoAgurq2sra4vb24S0s7RHuru7unWOKKKNS7O" +
                        "7OQFVQCSScAUAfyf/8ABUb/AIKjXPxwudb/AGe/2e9be0+DVo7af458c6ezRy+K5Y2w0EDDBXTlI5PWc" +
                        "8n93gPlKR0U6dj8mv2bvAHif4nfHj4TeC/CPhqfxbrGq69pbnRdPi80vawXkc9w8mcKsUcSM8jsQqqCS" +
                        "QBUouT0P6SP+Dh6eeH9if4bxxTPFHdfE/RILlI2KiRB4W8RShWA6jcitg9wD2r+xPoVwT4qr3W2Gn/6c" +
                        "pH8Y/Tam1wpQSe+Jh/6bqn8tH7E1tBeftmfsj2l1Ctxa3XxO8BW1zBKAyPG/iqxVlYHqCDg1/oJ4qzce" +
                        "F8yadmsNW/9NyP89PCeClxTliauniaP/pyJ/or+MPB/hb4geFtf8E+NtAtfFPhHxTazaJ4h8Pa3Ck9re" +
                        "Ws6FHjkRwQQQfw6jmv8TMszPEYLEQr0JuFSDTjJOzTWzTP9wMzyzD43DzoV4KdKaalFq6ae6aP4if8Ag" +
                        "qH/AMEvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf/AFb8AfH7D" +
                        "8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf2nviz+y" +
                        "P8AFnQ/i/8ACDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa" +
                        "+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1p8Rfh1dj" +
                        "Tdf00Raf8RPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfaj" +
                        "un3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAfl9/wV38DeNviX+yFP4D+Hn" +
                        "hy98XeLvE/inw7p+k+HPD8Lz3N0wnkmICJ/CoQuzHhQCxIAzUz2LpvU+AP+CTn7CX7XP7NP7TGqfEL4y" +
                        "fC6TwL4H1Twnqnhp9SGveHb7zbq5vrC6hhe30rULmbnyC3zJgFeSDipjFpl1Jpo/pArQxCgAoAKACgD/" +
                        "O0/4KJf8n1/taf9j74j/wDTjJX+13gp/wAkjlv/AF4p/wDpKP8AETxu/wCSvzL/AK/1P/Smf3XfsTXNx" +
                        "efsZfsj3l5O91d3Xwx8A3N1dXLs8kkj+FbFmZmYkliTkk9a/wAjvFWEY8UZkkrJYmt/6ckf6+eFFSUuF" +
                        "sslJ3bw1H/03E+na+CPvwoAKACgAoA/OL/grj/yjo/ae/7BWl/+pHp1fuH0bv8Akt8B/il/6bmfhn0lf" +
                        "+SHzD/DH/05A/kh/wCCR3/KRf8AZh/7Cuqf+o5qNf6PfSR/5IjH/wCGP/pyB/mx9Gr/AJLjL/8AFL/03" +
                        "M/sU/4KV6J4h8S/sQfHnw54T0u71vxJr9npOiaLouhRSz3l5PdeIbCBYIo4AXdpN23aBznFf43y2P8AZ" +
                        "yG5+Jn/AATV/wCCen7Z3wO/bA+DXxf+Jnwfm8G/DjR4tfPiPWZ9d8NyyRRah4X1Gyt1ls7PUZbk7riaI" +
                        "FfKJU4LAAEiIxdzWc00f1NVqYBQAUAFABQB/I/+29+w1+1r+01+23+0t4y+Dvwfv/GPhe11bTdMXxJf3" +
                        "2laTZzPb+HtPiMdvNrt3ZrN5eArCIttxg4xispRbZ0Rkkj+j/8AYq+H/jn4U/sp/Av4cfErTG0Xxz4M0" +
                        "G30HxFpEt1bXptpYHdVi86zlnicKm0DY5AHA6VpHYxk9T6hpkhQAUAFABQAUAFAEF1dW1lbXF7e3CWln" +
                        "aI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+T//AIKjf8FRrn44XOt/s9/s9629p8GrR20/xz4509mjl8Vyx" +
                        "thoIGGCunKRyes55P7vAfKUjop07H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0fR9PAyxxueSR2wsc" +
                        "UagvJI5CooLMQBUJGjdj+1H9gH9gHwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6f5gDR2kbAZOA0rAO" +
                        "4GERNoxsc053Pj3/g4L0ObVv2GvDF/Fu2eGPiHoGuXOxQRsk0bWdNG4kjA3XY59cCv62+hni1T4tqRf2" +
                        "6E1/wCTU5f+2n8h/TTwjqcI05L7GIg//JKkf/bj+S79lTxHF4P/AGof2bvFs7pFB4W8feD/ABHNJchmj" +
                        "VLHxDaXJLhCCVATnBzX+jXiHgXieH8dRW86FWP3wkj/ADd8OscsLxBgKz2hXpS+6cWf6Tlf4Yn+7Zzfj" +
                        "Dwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8RgsRCvQm4VINOMk7N" +
                        "NbNM4czyzD43DzoV4KdKaalFq6ae6aP4if+Cof/AAS88U/sWeKbj4kfDe3uvFP7NHim68vR9Yk3z3Xhi" +
                        "6nf5NO1F+SYyTi3uD9/7j/vMF/9W/AHx+w/FOHWGxLUMfBarZVEvtR8/wCaPTdabf5NfSC+j7iOFMQ8V" +
                        "hU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk" +
                        "2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49YyXVP" +
                        "707NNNJn95/7FX7avwm/be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6u" +
                        "i/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2" +
                        "HX5mfpwUAfnt/wVB/ac8f8A7JX7IHjf4r/C1baLx9Le6X4P8OatqsKXMOnS6nc+W915EoZJXjjVvLVwU" +
                        "3kFgygq37R4A8BYPiPiWlhMXf2NpSkk7OXKvhutUm7Xa1tezT1X4p9IHj/G8N8M1sZhLe2vGMW1dR5n8" +
                        "Vno2leyel7XTWj/ABr/AOCN37eX7W/7SP7XGo/Dz43fGi+8feDYfB+s+IotC1Cy0i3jF7bXunxRS7rG0" +
                        "gfKrM4xuxz0r+nfpO+EHDeRcNxxOBwqpVXVjG6cno1K61k10R/Lv0XfGLiXPeJZYbH4qVWkqM5WaitU4" +
                        "pPSKfVngH/BSH/gpD+218Fv22vj58MPhh8fNQ8JeA/CWoafZ+HfDtnp+hzR2sc2h2V06q91ZSyHMkrN8" +
                        "zHrX2Xgd4HcKZrwpg8VisHGpWqRk5Scpq9pyXSSWyXQ+M8dPHTizKuLMZhMJjJU6NOUVGKjB2vCL6xb3" +
                        "b6nxB/w9x/4KL/9HPar/wCCvw5/8rq/V/8AiW7gj/oAj/4FU/8Akz8l/wCJleOP+hhL/wABp/8AyB6B8" +
                        "P8A/gtb/wAFD/A2rQ3+ofGG0+I2nI/nT+G/iB4f0Wa0mPAw0umW9jdKOOiTr+dePnP0V+CsXTcY4Z0pf" +
                        "zQnNNfKTlH74s9nJfpW8b4OopSxSrR/lnCDT+cVGX3SR+7H7Mv/AAVU8C/8FBPCt18BLzxxqP7Gf7UWt" +
                        "xhfAvifw7LYahpmo6jGhCCybVoHjkLt9+xnQOynEUzONy/yNx59HrF8GYhZhGlHMMvj8cZJxlGPXm5Xd" +
                        "W6Ti7J6yilo/wCv+AfpE4PjTDvLpVpZfmEl7kouMoyl05eZWd+tOSu1pGTeq/G79qP9tX/grN+yN8Y/E" +
                        "nwY+K37Rmp22taMReaPrVlpXh42Gs6XK7Lb39m76aC0MoQ9QGVgyMAysB/Tvh/4V+HPEmWU8bhMDFwlo" +
                        "05TvGS3jL3919zVmtGj+XfELxW8SOGs0qYHGY6SnHVNRhaUXtKPubP707p6pn5EePPHXiz4neM/E/xD8" +
                        "d6y/iHxl4zvbjxH4n125SGOS7vbqQyyyssCRoCzEnCqB7V/SWUZRhsBhaeGw8eSlTSjFa6JbLW7P5ozj" +
                        "N8TmGKqYnES56tSTlJ6at6t6WX3H2b4O/4Kh/t6fD/wh4V8B+D/ANorUtE8I+CdNsfCPhbRYNN0CRLPT" +
                        "tNtUs7aBWmsHdhHFGqgsxJxySa/L8z8AOD8biamIrYGMqlSTlJ809ZSd29JW1bvofqWV/SC4xwWGp4eh" +
                        "jpRpU4qMVyw0jFWS1jfRK2p/W5/wSO/aq+LP7W/7JR+IXxsMd34z8J+I9T+Hc3iyG1jshrdrY2NjfJfP" +
                        "FAkcIfN40LmJQhaMnAORX+cP0kPDzLuG+I/q2BuqU6cZ8t78jbkuW7u7e7dX1s/Q/0n+jV4i5lxLw39Z" +
                        "x9nVp1JQ5rW50lF81lZX95xdla8e9z89v28/wDgvBp/w88Q658KP2O9I0/xprejvJpev/GnxOr3Ojw3C" +
                        "qUdNKtInT7S0bH/AI+JWEW5SFjlQh6/aPCD6Ic8bRhi86lKnCWsaUdJNf35a8t/5V71nrKL0PxTxi+mD" +
                        "DA154PJYxqTjpKrLWKf9yOnNb+Z+7daRktT8JfFX/BT/wDb+8Y6nLq2q/tUeKrG5lLOYPCt1DodqN2OF" +
                        "t9GitYgBjj5f61/XOXeAfBuFp8kMvpNf3k5v75Nv8T+QMx+kBxniqnPPMaqf91qC+6CivwPfvgN/wAFr" +
                        "/26Pg5q1ifFXj2H45+EYnQX3hf4oWsEs7xfdfytSs0hu0kI+60jyKCASh5B+O4w+itwlmdN+yovDVOkq" +
                        "bdvnB3jb0Sfmj7Tg76V3F+V1F7assTS6xqJX+U1aSfq2vJn9Y37Dv7e/wAGf26vAFz4m+H0r+HPGvhwR" +
                        "Q+P/hfrk0b6lpMso+WRWQKLi1kIIjnVQDghlRgVH+dPix4PZpwjjFSxPv0p/BUS92Xl5SXWL+Ta1P8AR" +
                        "3wk8ZMr4vwTq4b3KsLc9Nv3ovv/AHovpJL1Sehwf/BXH/lHR+09/wBgrS//AFI9Or2Po3f8lvgP8Uv/A" +
                        "E3M8f6Sv/JD5h/hj/6cgfyQ/wDBI7/lIv8Asw/9hXVP/Uc1Gv8AR76SP/JEY/8Awx/9OQP82Po1f8lxl" +
                        "/8Ail/6bmf2m/tyfHTxJ+zV+yb8b/jd4OsbfUPFfgXSVufDkGrKz2y3t7ewabDLKikF1ia4EhTI3bcZG" +
                        "c1/lr4TcJUM94jwmBrNqnVl71t7JOTS7Xta/S9z/VTxc4vr5Dw3i8fRSdSlD3b7XbUU33s3e3W1j+bb/" +
                        "gmB/wAFGv20vj9+3l8Evhj8W/jpe+L/AAB4wfxRN4h8Lzabodrbzmz8IatqcAzY2ULoI54EcBWH3QOnF" +
                        "f3L4++CHC2TcIYvFYPCKnWp+z5Zc021erCL3k07pta9z+E/o/eOXFWc8Y4TCYzGOpRqe05o8sEnalOS2" +
                        "imrNJ6dj+j79sz9s/4RfsR/CmT4l/FG5kv77UpG0nwN4F0Zo/7T13UFUOYoBIQqRxqQ00zfKi46syK38" +
                        "PeF/hdmXFeY/VcIrJazm/hhHu+7eyS1b8k2v7o8UvFPLOE8u+tYtttu0IL4py7LslvJvRLu2k/5Kfj1/" +
                        "wAFwv24fi7qd6ngbxVZfAXwjI7Cy8P/AA7s7ea9EXIXz9S1KOadpADy0Pkqf7or/R3g/wCifwnltNe3p" +
                        "vFVesptpX8oRaVvJ8z8z/NrjH6WvFuZ1H9XqLC0ukYJN285yTd/Ncq8j44h/wCCg37c0GpHVU/a3+ITX" +
                        "RQQ+VN4r1iS2wrBv+PeScw545OzJHGcE1+my8GeEnT5P7NoW/69xv8Afa/4n5fHxq4uVTn/ALSxF/8Ar" +
                        "5K33Xt+B96fs7f8F3v2xPhVqenWfxen079oTwTG6RX9n4ktbbStbjtx1+zajpUMal++64hmz046j8g42" +
                        "+iJwzmNOUsGpYWr0cW5Qv5xk3p/hlE/YuCPpg8UZdUjHGuOLpdVJKM7eU4pa/4oyP6yP2Tv2tPhD+2X8" +
                        "J7P4tfB/Up5dME7aJ4j8O63EsGp6NqccSTPaXUaM67gsisrozIykEMeQP8AOjxF8Ocy4XzF4PGRXNa8Z" +
                        "LWMo7KUX8mrNJp7o/0f8OPEjLOKctWMwUny3tKL0lGW7jJarZp3Taa2Z/Nn/wAFSf8AgqT+2F8Mv2wvi" +
                        "R8GPgx8SD8K/AnwrOn6FaWmhafpdzcajcXOl22ozXV1NqNtcNu3XBREQqoVRwWJJ/ub6P30fuGcfwzQx" +
                        "uNoe3rV+ZtuUkopScUkotdrtu7bfayP4S+kL9IXifL+J6+BwNf2FGhypJRi3JuKk23JPvZJWSS73Z/RH" +
                        "+wT8S/F/wAVP2Mf2f8A4ofEzxE3iHxh4q8Ox654q8S3628DXE3nShpXECRRr8qjOFA4r+KfGDIsNl/FG" +
                        "MwuFhyUoVLRiruystNbs/tzwcz7FZjwrgsXip89WdO8pOyu7vXSyPxA/bh/4L4aloPirXPht+xjo+m6p" +
                        "YaJLJpmofG/xZC17BeTRkq7aRZ7kRolYfLcT7hJyVj27Xb+r/Cf6HtOth4YrO5Si5K6pRdml/flvfvGN" +
                        "musr3S/kzxb+mRUo4ieFyOMZRi7OtJXTf8AcjtbtKV0+kbWb/Enxj/wUq/b28c3V1ea1+1f4zspbzb5y" +
                        "eDtWk8OxDawYbIvD4skj5HOxRkcHiv6ryzwL4PwkVGGXUWl/NHn/GfM38z+Ts08eOMsZJyqZlWTf8suR" +
                        "fJQ5Uvkdn8NP+CsH/BQH4X6hBeaZ+0hrPiu1Rle60j4li28R29wigDYzatHNMgO3kxSI3XnJNeXnv0de" +
                        "Dcwg4ywMIPvTvBr/wABaT+aa8j1ch+kdxpl81KOOnUXapaon/4Em18mn5n9Fv8AwT0/4LVeC/2o/FPh7" +
                        "4KfHXwvb/Cz40+I5F0zwnrPh1ppPDev3ZUkQILp5JrK4cjEcUjyK54EgYqh/ibxp+ixiuH8PPHYCo62F" +
                        "gryUre0gu+llKK6tJNfy2TZ/cHgn9KzC8Q4iGBzCmqGLm7Rcb+zm+2t3CT6JuSf812kfuxX8jH9fBQBB" +
                        "dXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/k/8A+Co3/BUa5+OFzrf7Pf7PetvafBq0d" +
                        "tP8c+OdPZo5fFcsbYaCBhgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz40ePPDfwz+GfhufxX408VzjT9H" +
                        "0fTwMscbnkkdsLHFGoLySOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiuCNfiD8QVjOFGRJ/Z+n" +
                        "+YA0dpGwGTgNKwDuBhETaMbHNOdz9Caog/N3/grl8OZviX/AME9P2jdMs4PO1Hwxptl8RrNgCTGnh3Vb" +
                        "bVrpsD/AKdYJh7ZzX7l9G7O1gONMDKT92cnB/8Ab8XFf+TNH4V9JXI3j+CcdGKvKEVNf9uSUn/5KmfwI" +
                        "W1zPZ3Fvd2szW91aulzbTxEq6SIwZWUjoQRkV/sTOClFpq6Z/jTTm4yTTs0f6XvwM+JVj8ZPgv8J/izp" +
                        "0iSWnxI8O6N41TyeiNqWnxXTpjAwUZypBGQRg1/hLxbkU8rzTE4OW9GpKH/AIDJq/z3P96eEc+hmmVYb" +
                        "GR2rU4z/wDAop2+Wx6pXzx9Ec34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoUeORHBBBB" +
                        "/DqOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gqH/wS88U/sWeKbj4k" +
                        "fDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/wDVvwB8fsPxTh1hsS1DHwWq2VRL7" +
                        "UfP+aPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v8Awg1w6brem" +
                        "n7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH434" +
                        "f8AiBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf32fsb/ALV/gT9s74D+Gfjd4EtpdITUJJtB8WeFr91ku" +
                        "NG1qzCG5tHkQBZABIkkcgA3RujEKSVH+O3id4d4zhfN6mBxDUrWcZLaUHtK3TZpro01drV/7KeF3iNg+" +
                        "Ksnp4/DpxveMoveM1vG/XdNPqmnZPRfU1fnx+hn4z/8F4v+Uf3iH/safDP/AKUyV/T/ANEP/ksof9eqn" +
                        "5I/lv6YX/JFz/6+0/zZ+H//AAb/AH/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+kzP5K+hh/wAlfL/rx" +
                        "P8A9KgfLn/BXH/lIv8AtPf9hXS//Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGYf4o/wDpuB/Q/wD8E" +
                        "0/2A/2Nvi3+w5+z/wDEX4k/s9+H/GHjfxPp2o3Wv+JNXhna5upItdvrZGcpKoyEjVRx0FfxX47eMXE+W" +
                        "8WY3DYXG1KdKEo8sU1ZXhF9u7P7a8BvBrhfMuEcFicVgqdStOMuaTTu7Tku/ZI9c+Pv/BEb9h/4u+Hb+" +
                        "DwH4Km+BHjUxt/ZPizwBd3ktsswA2C406/nlt5IwR8wjEbnP3xxXzfB30reLMtrp4iqsTS6xmle3lNJS" +
                        "T9eZeR9Lxl9E3hLM6DWHpPC1ekoN2v5wk3Fr05X5n8ff7Tv7N3xX/Yx+Omt/CT4hA6d4p8LSQa94Y8U6" +
                        "G8sdvqVhJIXs9SsZflbYxjOCMMkishwyED/AEu4C45y7ijKIYzDa053Uou14v7UJL5+jTTWjR/mRx/wJ" +
                        "mXCubzweJ0qQs4yV7Sj9mcX209U009Uz+tT9hDXfgL/AMFVf2XfAfir9qL4YaL8VvjH8Cprn4Z+LNR8R" +
                        "wE3DSvHBPHeqYnRtt7AsbSfw+csm0AcV/nJ4u4POPDziCtSyrEToYXEpVIqL06px/7cd0uvK43P9JPB/" +
                        "GZN4i8PUa2bYeFfFYZunJyWvRqWn86s305lKx/J7+2/4N8L/Dv9r/8AaS8C+CdFh8N+EfCXjHXdB8N6D" +
                        "pwKwWdnbXzxxRRhiSFVRgZNf6KeFGaYjG8NYHEV5udWdGDk3u20rtn+cXi1leHwPE2Pw9CChSp1pxjFb" +
                        "JJuyR/Xz+yP/wAE5f2HvHH7KX7MfjXxb+zX4b13xV4v+HvgvxR4m1y+huDPeahqHhuzu7ieQrMAXkkkZ" +
                        "mwOpr/NXxI8buLMJxFj6FHHVI06derGKTVlGNSSSWnRKx/pn4a+BvCWL4cy+vWwFOVSph6UpNp3cpU4t" +
                        "t67tu54J/wWe+O+jfsc/sieCP2YvgFpFl8Mj8a2v/CsGleCoItPi0zwpYLHLqiwx2oUI15JdxxOxGXV5" +
                        "jksSR9j9F3hCrxPxLVzTMJOt9XtK825OVR35Lt78qi2l0aj0PjfpT8YUuF+GaOVZdGNH6zzRtBKKjTjZ" +
                        "zsltzOSTfVOXXU/nV/4J4fsI+Lv28fjRJ4IsdTk8KfDjwdDF4g+KvjuGETPY2UrskFvbo5CNdXboyxBj" +
                        "hVV5CGCFW/tjxq8XcNwhlft5R569R8tOF7XfVvryx3dt20tL3X8QeCXg/ieMc19hGXJQprmqTtey6JdO" +
                        "aT0V9km9bWf9j/wu/4JcfsFfCjw5B4e0v8AZr8N+L2WH7Je6/8AFGxh8TajdOV2vK0usLOI3Y8/uVjVT" +
                        "91VHFf5j8QfSA4wzGu6k8dUp63UabdOK8rRtdf4m2+rZ/qFw99Hvg7LaCpQwFOppZyqJVJPzvK9n/hSS" +
                        "6JH58/t7/8ABD/4MfEHwN4j+IP7JPhpPhf8XdEhl1iD4e6bPKfD/iERKZHto4bhnFncuBiFoisRbCug3" +
                        "eYv7N4PfSvzTBYuGHzip7bDSdudr34eba+KK+1e8rapu1n+LeMf0S8qxuEqYnJ6fscTFX5E/cnbok/hk" +
                        "/s2tG+jSvzL+Yj9kr9o/wAa/sfftEeA/jN4ba5gn8JXy2HjXw2jGE6poksqxajp0ySYGZIwdm8fJKqPj" +
                        "cgx/e/iPwPheJskrYKrZqcbwlvyzXwyXo97bxbWzP4A8NuOsXwxndHHUrp05WnHbmg/ji/VbX2kk90f2" +
                        "j/8FUNf0nxX/wAEyP2gfFGgXi6joXiTw9oOv6LqEQIWe0vNd0y4hkG4A4ZHBGa/y3+j5g6mH49wVKorT" +
                        "hUnFrs1Caa+8/1S+kRjKWJ4AxtWm7wnThJPunODT+4/k5/4JHf8pF/2Yf8AsK6p/wCo5qNf6K/SR/5Ij" +
                        "H/4Y/8ApyB/nF9Gr/kuMv8A8Uv/AE3M/re/4K4/8o6P2nv+wVpf/qR6dX+cP0bv+S3wH+KX/puZ/pP9J" +
                        "X/kh8w/wx/9OQP5Sv8Agi7/AMpLf2bP+5x/9QHXK/0O+lH/AMkJjv8AuF/6epn+dH0V/wDkvcB/3F/9M" +
                        "1D6j/4OF9f8TXn7Yvw88OalPKPDOheAtO1DwxYuGEAkv9Z1MXU6Z4LyNbojEdo1HavgPoXYOhHhivVil" +
                        "7SVeSk+ukYcq+V216s/QvpsY2vLiihSk37ONCLiunvTnzP1dkn6I8w/4JWeEP8Agl/r9zq91+2p4vEXx" +
                        "QW+VPB/hX4lSXWkeC1skVCszXtnKsUsxcsHS8kjjC4wj8sPf+kJmXH9GMVkdL/Z+X3pU7Sq37crV0rbO" +
                        "Cbv1Wx8/wDR3yzw/rSk89q/7Rze7GpeNK3fmTs3fdTajbo9z+rDS/2Jf2AfGnhO2k8PfswfCzxB4X1WF" +
                        "VsPEHhjwt4al8+IHh4tQsYPMJ4++suT61/nliPFXjLC4lqpmGJhUi9YyqVNH5xbt8mj/RXD+E/BmLwyd" +
                        "PL8LOnJaSjTp6ryklf5pn5Q/thf8EBPhp48C+J/2PfEFv8ACHxNLMW1PwD4+vNSu/DM8bksXt7lIr28t" +
                        "XUk/KRKhGAojxz/AET4Z/TGx+D/AHWcwdenbScFFVF6q8YyXn7r7tn85eJ30M8BjP3uSzWHqX1hNydN+" +
                        "jtKUX5e8uyR9+/8Evf2DNZ/YM+C3ibwj4y8Y2njL4g/EHVl8VeK7jwws40mzEFqlpBbWr3ccMsoUBmaV" +
                        "40yWxsG3Lfjnj94v0uMM0p1qNJ06NKPLHmtzO7u27NpdEkm9t9dP2b6Pvg7V4OyqpRr1VUr1Zc0uW/Kr" +
                        "KyUbpN9W20r3tbTX+TP/grj/wApF/2nv+wrpf8A6jmnV/ov9G7/AJIjAf4Zf+nJn+b/ANJX/kuMw/xR/" +
                        "wDTcD+hH+3vE3hr/g3/AIdU8I3M1nrB+GUWlvcWIJlWxv8AV1sL7G3kA2s0oZuwye1fxj9ToV/GRwrJO" +
                        "P1m+vdRvH/yZI/tT65iKHgwp0W1L6tbTtKVpf8AkrZ/JB8F7H4Tal8VfAtj8dte1bwz8Ibi/iXx9rnge" +
                        "0ivdVgsACzfZ4pmVcswCs+GKKS4SQqEb/R/imtmVPLq0sBCM8So+4pu0W/Nr77aXejaTuv82OFaOW1Mx" +
                        "oxzCcoYZy99wV5KPkn919bLVKTVn/bD+yX+zv8A8EgPHvha0sf2dvAPwy+MYigEt3F4ut7PxP4iCgLul" +
                        "urbxUs97AWIzhokUchQBxX+VviNxr4l4PEOWZVsTh9dOVunD0Tp2g/vb7s/1c8NuCPDLGYdRy2jhsRpr" +
                        "zJVJ+slUvNfcl2R2fx5/wCCQ/7Cfxz0S/tIvgxYfCHxJMjLpfi/4MRR6BLaSEcN9itVFjKucZWSA8dCp" +
                        "5ry+EPpJ8XZTVUnipV4dY1ffT/7efvr5S9bnqcY/Rn4PzelKKwscPU6Spe41/26vcfzj6WPy6/Zd/4IL" +
                        "/FX4N/tV/Dz4q+PvjN4d1v4WfCTxDYfETw0PCiaouv6rc6Lex6hYx3Nrd2y29qjSxKZtlzMdoKr97cv7" +
                        "/4gfS/y7NOHq+Ew+FqRxFem4S5uXkippxk00+aWjdrxjrq9rP8An3w++h1mOV8RUMXiMVTlh6FRTjy83" +
                        "PJwalFNNcsVdK9pS00W91/T1X8Dn9/hQB4p+0V8EtH/AGjPgt4/+C+u+INR8Lab47sjpcuveGJ3gurd1" +
                        "kWZCQrKJYiyASwsdsiEqcZyE0OLsz+Fv9qD9l/4pfsmfFLVPhd8UdL8m5h3XvhvxJZK507WtOLlY7u0k" +
                        "YDKnGGU/MjZVgCKxasdUZXPb/8Agnh+2m37FPxom8Xap4Wg8U+BPGtvD4X8fxw20Daxa2Kz+aJ9PuJAG" +
                        "V42+Z4dwSYABsMqOji7CnG6P7bPh38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdLfdFNE2QQQQGR0YFX" +
                        "RgGRgVYBgRWxytHaUAc34x8KaL488IeKvA/iS2+2eHfGem33hTX7P5f3tlqNq9nOnzBh80chHINd2WZj" +
                        "VweJp16TtOnJST7OLuvxRw5pl1LGYaph6qvCpFxku6krP8ABn+ad8Wvht4g+DnxR+Ifwo8VRGLxF8OdZ" +
                        "1LwXq+5GjEk2nXb2pkQNn5JNm9DkgqQQSDmv91uHM9o5nl9DF0vgrQjNekle3qtn5n+DXEmRVsrzCvg6" +
                        "y9+jOUH6xbV/R7ryP7BP+CCH7Rdr8T/ANk3UvglqmoCXxd+z5qk2nW9rKcyP4e1yaXU7KXLHLbJzcw4A" +
                        "wqog7gV/mj9MLgmWA4jjjoR/d4qKd/78EoyXzXK/Ntn+nH0OOOI5hw3LATl+9wkmrf3Jtyi/lLmXkkj9" +
                        "0a/kk/rsKAP5UP+Cw//AAVe0vxfY+Lv2Qf2btVt9X8MXW/QPjT8ULTy7iC+2PiTStMc7lMQZcT3C/eI2" +
                        "Rnblm/0N+jN9Haphp085zOLjUWtKm9Gu05+f8sem71sl/nV9J36RtPFQq5LlklKm/dq1Fqn3hDy/ml12" +
                        "Wl2/wCbrwf4P8U/EDxToHgnwToF14p8XeKbqHRPD3h7RIXnury6ncIkcaICSST+HU8V/ceZ5nh8Fh516" +
                        "81CnBNyk3ZJLdtn8K5ZlmIxuIhQoQc6s2lGKV229kkf3xf8Evv2O9f/AGJ/2WtM+GPjPU4dQ8f+LNWu/" +
                        "if49g0x/NtLHUtRs7SxFpDIOJBDBZRK7j5WfcVyuCf8evH3xNo8VcQSxVCLVGEVThfRuMXJ8zXS7k2lu" +
                        "la+p/sj9H7wwrcJ8PRwteSdapN1J21SlJRXKn1sopN7N3tofolX4oftx+M//BeL/lH94h/7Gnwz/wClM" +
                        "lf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/YheIP/AE46XX9YfTJ/5JGP/X+H/" +
                        "pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy/8ATkz8++kr/wAlx" +
                        "mH+KP8A6bgf1vf8Ejv+UdH7MP8A2CtU/wDUj1Gv84fpI/8AJb4//FH/ANNwP9J/o1f8kPl/+GX/AKcmf" +
                        "o7X4efuZ/NV/wAHG/w60S4+HH7OXxaS1ji8R6Trep/Dqe9RQJp7LULD+040cgfMsUlk5QE/KZGx941/d" +
                        "X0Ic7qxx2Owd3yShGduicXyt/NSV+9l2P4O+nJkdKWBwOMsvaRnKnfq1JcyXycXbtd9zxT/AINwfEWpw" +
                        "fET9qDwksxOjanovh3xFPbsSQLmxvru2RlHQZS7YH1wPSvqfpw4Km8Fl9a3vKc4/JqL/wDbUfKfQYx1R" +
                        "Y7MKN/dlCEvmnJL8JM/GX/goFqEGp/tyftcXNsGEcfxE8W6e3mgA+Zaa1cWj9CeN0Zx7V/UPg1RdPhPL" +
                        "U/+gem/vgn+p/LXjRWVTi7M2v8AoIqr7ptP8j+7f9h3/kyr9j//ALJd8P8A/wBROwr/ACL8WP8Akqsz/" +
                        "wCwmt/6ckf6/wDhJ/ySmWf9g1H/ANNxP5pv+DjB7w/tJfAeNzJ/Z6+B5HtQ27yvObXrwS7e27aE3Y7Y9" +
                        "q/uv6Eij/YWMf2vbfhyRt+v4n8G/Thcv7ewa+z7H8eeV/0/A/Dr4b/8Lx8jVv8AhUP/AAlf2bfD/bv/A" +
                        "Arf+19m/D+V5/8AZfGcbtu73x3r+sc8/sm8frnsr629py/O3N+Nj+SMi/te0vqXtbaX9nzfK/L+Fz0z/" +
                        "jNX/qqP/l2V4P8Axiv/AFDf+Uz3/wDjK/8AqJ/8qB/xmr/1VH/y7KP+MV/6hv8AymH/ABlf/UT/AOVDz" +
                        "S5+C/xzvLie8vPhP4suru6d7m6urnQtYeSSR2LMzM0BJYk5JPWvehxTlMYpLE0kl/fj/meDU4VzeUnKW" +
                        "Gqtv+5L/I/ru+Pket2//BBKzs/EdtcWetad8LfAml31lqsTwXMJtb7SLZY5I5FVlZFQKQwzxzzX+bPB0" +
                        "qT8YHKk04PE1mmtU7qbun5n+l3GcasfBxRqpqaw1FNNWas6as15H863/BI7/lIv+zD/ANhXVP8A1HNRr" +
                        "+2PpI/8kRj/APDH/wBOQP4h+jV/yXGX/wCKX/puZ/W9/wAFcf8AlHR+09/2CtL/APUj06v84fo3f8lvg" +
                        "P8AFL/03M/0n+kr/wAkPmH+GP8A6cgfylf8EXf+Ulv7Nn/c4/8AqA65X+h30o/+SEx3/cL/ANPUz/Oj6" +
                        "K//ACXuA/7i/wDpmof1kf8ABQP/AIJ3/C/9vXwNpWn+INRfwR8UPBS3DfD74labAs72wuADJaXkBZPtF" +
                        "o7KrFdysjDKMMuH/wA6fBrxqzDg/FylTj7TD1Lc9Nu17bSi/syW17NNaNOyt/o/40eCOX8Y4OMakvZ4i" +
                        "nfkqJXtfeMlpzRe9rpp6pq7T/kp/aE/4JDftzfs+zajeT/Ceb4r+ELEvJH4y+DTPrkTxINxd7KJFv4gq" +
                        "8sXtwo5wxAJr/Rzgv6SnCWcqMViVQqv7NX3Nf8AF8D8rSv5H+bXGv0Z+LslcpPDOvSX26Xv6f4V7687x" +
                        "t5nxR8O/jJ8dv2efEV5cfDL4jeJfhD4jt5RFrFt4a1DUNJkeSE48u7gjeMSAHgpKpHqK/VM74YyjOqCW" +
                        "KoU68GtOaMZb9YvW3qmflOR8UZxkldvC16mHmnryylHbpJaX9Gj9gf2dv8Agvz+1R8ObvTtL+O2haT8f" +
                        "fCaFIb7UWgh0DxEkY+XdHc6bGLVyo5IktSzkDLrkmv5p41+hzw9joyngJywtTorucPmpPmXylZdnsf03" +
                        "wR9MviLAyjDMIRxVPq7KE/k4rlfzjd91uf1L/snftefBf8AbN+GMPxP+DWtSXFrbyDTPFHhXXEjg1jRL" +
                        "4rv+z3sEbyKpZfmR0ZkcfdY4IH+ffiL4a5pwvj3hcbBJtXjJaxmu8XZfNNJrqtj/Qvw38TMq4py9YvBT" +
                        "bSdpRekoPtJXfyabT6Pc/ij/wCCuP8AykX/AGnv+wrpf/qOadX+qH0bv+SIwH+GX/pyZ/lL9JX/AJLjM" +
                        "P8AFH/03A/rs/4JxeG9B8Y/8E3P2c/CXinSYNe8M+J/BTeH/EOh6nGJba8srx7i3nhlRuGSRHKsPQ1/m" +
                        "344Y6theOcdWpScakK3NFrdNWaa80z/AEs8DMDRxXAmBo1oqVOdHlkns07pp+TR+FP7YP8AwQF+K/hjX" +
                        "db8XfsgavbfETwRdySX1n8LfFd7DYa/pyu277Pb3d6UtruNOdrSyRSYwCJGyx/rjwz+mNl2Iowo5zF0q" +
                        "q0dSKbhLzcVeUW+yUl10Wh/IXid9DPMcPWnWyWSrUXqqcmozj5KTtGSXduL6avU/DH4mfBD48fs8eIIL" +
                        "P4p/DTxH8J9ds5x/Zt54j0+904PNGSyva3LKqS42kq8TkcZBr+tch4syjOqLlhK9OvBrVRkpaf3luvRo" +
                        "/kXP+Es4ySuo4vD1KE09HKLjr/dez9U2fXfwM/4Kzft4fAZrC10f433vxB8OWOF/wCEU+MK/wDCSW0ka" +
                        "8LH9ovW+2xooGFWK5QAcDivzXi36OfCGcXc8IqU39ql7j9bL3G/WLP0zhH6SHGGT8qhi3Vpr7NX94vS7" +
                        "99L0kj+iz9g/wD4LbfCv9pzxT4d+EHxo8LJ8F/i54kkTSvDep2t19o8M61eucJBFLcbZbSeUnbFFLvV2" +
                        "wolLsqH+JvF76KmYZBh54zA1PrGGgryVrVILu0tJJbtqzS15bJs/uDwe+ljl2f4iGCx1P6viZu0Xe9Ob" +
                        "6JN6xb2Sd03pzXaR+5lfyWf1yFABQB8x/tYfsn/AAt/a/8Ahbf/AA2+JNh5NzD5l94M8Z2MaHUdC1Ept" +
                        "W4t2bGVOAJYidsi8HBCsqauVGVj+Iz9qD9l/wCKX7JnxS1T4XfFHS/JuYd174b8SWSudO1rTi5WO7tJG" +
                        "AypxhlPzI2VYAisWrHTGVz6Y/4J5/8ABQzxr+xd41GkaubnxX8B/FdyknjfwRG+6WzlbEZ1HThIQqXCK" +
                        "BvTIWZQFYghHRxlYmcLn9ofw7+Ingr4seCvDnxF+HXiO28V+DPFdsmqaFrulvuimibIIIIDI6MCrowDI" +
                        "wKsAwIrY5mjtKAP49/+C/37Ktx8P/jl4X/ag8NaWV8IfGu3j8PeNrm2T91beKNJtliRn2qAv2uzjQr1L" +
                        "PDKx61/ph9DjxCjjMpqZVVl+9w75oedOTv/AOSybv2Uoo/zG+mb4dywWb081pR/dYlcs/KpFW/8milbu" +
                        "4yZ+cH/AATg/a6uP2Mv2pPBfxOv5pm+HmthvA3xY0603MZdB1CRPMmVB96S1lSO4QDltmzIDGv3Dxw8N" +
                        "o8UcP1cLFL28ffpt/zx2XpJXi+179D8M8DPEuXC3ENLFSb9hL3KiX8kt3bvF2ku9rdT/QY0rVdM13S9N" +
                        "1vRdQh1bRtZt4dV0nVdNlSa3uba4jE0UsUkZKujowZWBwQciv8AGXEYepRqSpzi4yi2mno01o010aZ/t" +
                        "Nh8RTrU41KclKMkmmtU09U0+qa2P5bv+Cuf/BXP+1P+En/ZV/ZV8T/8Sv8AfaB8YPjBoE3/AB9dYptK0" +
                        "qaI/wCq6rcXCn5+UQ7NzP8A6A/Ru+jd7P2ebZtT97R0qTW3ac136xi9t3rZL/Pb6S30lvae0yjKKnu6x" +
                        "q1YvfvCD7dJSW+y0u3/ADV+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASSSfw6n" +
                        "iv7pzPM8PgsPOvXmoU4JuUm7JJbts/g/LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5/wS88LfsWeFrf4kf" +
                        "Ei3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/wC4n7vJf/KTx+8fsRxTiHhsM3DAQei2dRr7U" +
                        "vL+WPTd67f6y/R9+j7h+FMOsVikp4+a1e6pp/Yh5/zS67LTf9fq/mo/poKAPxn/AOC8X/KP7xD/ANjT4" +
                        "Z/9KZK/p/6If/JZQ/69VPyR/Lf0wv8Aki5/9faf5s/D/wD4N/v+T69W/wCxC8Qf+nHS6/rD6ZP/ACSMf" +
                        "+v8P/SZn8lfQw/5K+X/AF4n/wClQPlz/grj/wApF/2nv+wrpf8A6jmnV9/9G7/kiMB/hl/6cmfn30lf+" +
                        "S4zD/FH/wBNwP63v+CR3/KOj9mH/sFap/6keo1/nD9JH/kt8f8A4o/+m4H+k/0av+SHy/8Awy/9OTP0d" +
                        "r8PP3M/nt/4OLf+TYPgf/2Pq/8AqPajX9n/AEJf+R/i/wDrx/7fA/ir6cH/ACT+E/6//wDtkz40/wCDc" +
                        "f8A5LX+0f8A9itpX/p2NfqH03v+RVgf+vsv/ST8s+g1/wAjbHf9eo/+lH5pf8FWvhzrnw1/b+/aRsNat" +
                        "pIo/FWuN8RtDupVKpc2OvwpqaPGSAGVGleIkdGRh1Br91+jxndHHcG4GUH8EORrs4Pl19bJ+jTPwb6Re" +
                        "R1sBxnj41F8c/aJ91Nc2no216po/o1/4Jc/8FRv2aPGP7P3wc+AnxN8f2Pwm+Lnwt0PTPhnFp/jmVNP0" +
                        "zV7TRraPTbOezv5ttuXeGOMNDI6yb921WX5q/iL6QH0f8+wuc4rMMLRlXw1acql4e9KLk3KSlFe9ZNuz" +
                        "Sata7T0P7k+j59IPIcVkuFy/FVo0MTQhGnab5YyUUoxcZP3btJXTad72TWpzX/Bez9mPUfjN+zv4G/aK" +
                        "8CWx1zUvgNJd3XiNNKAm+0eFNbSBprsGLcXW1lt4pMjgRvI5OBXf9D/AI9hled1stxD5Y4m3LfS1SF7R" +
                        "8uZNrzkorqcH0xuAJ5rklHMsOuaWFbcra3pzteXnytJ+UXJ9D+ff/gmp+3jq37CPxwn8U3+nTeI/hR8Q" +
                        "Ibfw38VvDGnlBctbQzGS3vrXfgG4tDI5RGIV1d0JUsHX+y/HXwhp8X5SqUZKGJpNypye12tYv8Auysrv" +
                        "dNJ62s/4u8BvGGpwfm7rSi54aqlGpFb2T0kv70buy2abWl7r+2D4U/trfsnfGrw1Z+Kvh3+0D4W1awu4" +
                        "1uZdPv9Ys9O1O03/wAN1Y6g8NzA2e0ka57ZHNf5W8ReFfEeVV3SxOCqxa6qLlF+kopxfybP9XOHPFfhv" +
                        "NcOq2GxtKUWtnJRkv8AFGTUl80j1D/hePwU/wCiweFv/Cg0n/4/Xgf6p5r/ANA1X/wCX+R9B/rdlP8A0" +
                        "FUv/A4/5noel6rpeuafaatoupW+saVfp59jqelzR3FvMhON0ckRZWHHUGvFxGHqUpuE4uMlumrNeqZ7e" +
                        "HxNOtBTpyUovZp3T9Gj4M/4KpaFe+Iv+Ce/7Uun2Cl57fw6uuyBQW/c6XqVrqcxwPSO3Y57V+v/AEe8Z" +
                        "Chxpl8pbOpb5yi4r8Wfjv0iMHOvwVmMY7qnf5RlGT/BM/je/wCCYPxQ8M/Bz9vP9nDx94y12Hwz4ZstX" +
                        "vNA1bXtSKJbWqa7ot7oKvM8hCxx7rwB5GICLliQBmv9OfHzIK+Z8H47D0YOdRwUklu+SUZ6d37ui6vQ/" +
                        "wAvPo/8QYfK+McDiK81CmpuLk9lzwlDV9F72r6LXof2Bf8ABWyWKf8A4Jx/tNTwSrNBNpOkywzRMGR0b" +
                        "xFpxDKRwQR0Nf5pfRwi1xxgE9+aX/pEz/Tb6Sck+Bse1qnCP/pyB/Kd/wAEXf8AlJb+zZ/3OP8A6gOuV" +
                        "/ob9KP/AJITHf8AcL/09TP86vor/wDJe4D/ALi/+mah++X/AAVq/wCCqHxX/Ym+I/w++DPwW8IaLfeJv" +
                        "Emgx/EnxF4q8eQXV7BFZXWpXmmW9va29pc2uJN9hK0juzDaVAXOSP49+jl9HvLuK8DWxuOqzVOE/ZxjB" +
                        "pO6jGTbbT0tJWStre76H9k/SS+kRmXCeOoYHA0oOpOHtJSmm1ZylFJJOOt4u7d9LWXU9D/YX/4LM/s//" +
                        "tI+GdL8PfHLxHo/wE+OMR+xalpOvXLWPhzVXyAs2nX2oOUj8wkD7PPL5gbhTIPmrxPFv6L+c5HXlUwEJ" +
                        "4rCbppXnHynGKu7fzRVratR2Pb8IfpS5LnuHjTx9SGFxezUnaEvOEpOyv8Ayyd76Jy3P0O+L/wM/ZX/A" +
                        "GhfDB1j4y/D3wh8SvDixZt/F/iK30+ZreJsR7oNTUrJCDkDdHKvbmvxbhri3iHJcRyYKvVozv8ADFyV3" +
                        "5w2fzTP23ibhHh3O8Pz46hSrQt8UlF2XlPdfJo/jx/4KlfAT/gnf8Edb0Sz/Y9+LVx4k8eXd60XjL4a6" +
                        "FqUfibw5pOniGQ701Ys8iXCyhUNu007YJLGMqA/+mX0fuMONc2pTlnOGUKKXu1HH2c5SuvsbONteZRit" +
                        "rc19P8AMP6QvBvBGU1YRyXEudZy9+mpe0pxjZ7T1aley5XKT3vy21+lv+DdK78UJ+1D8brG0af/AIQq";
                    resourceString += "58Avd+IFjB+zHVIfEOmpp5kP9/ypbvZ7bq+E+m1Tw74fwknb2qr2j35XCfNbyuoX+R979B+piFxBi4xv7" +
                        "J0Ly7cynDlv52c7fM+C/wDgrj/ykX/ae/7Cul/+o5p1fr/0bv8AkiMB/hl/6cmfjv0lf+S4zD/FH/03A" +
                        "/qU/ZW+NVt+zn/wSA+GHxxutFfxGvwz+HknieDQIZRB9suIp5lghaUhtiPIyh32kquSASMH/P7xC4Wln" +
                        "fiXiMAp8ntsRy829k0ru3WyvZdX1R/oT4d8VxyPwyw+PcOf2OH5uXa7Tdlfom7Xetl0Z+Vv7M//AAcJe" +
                        "P7j4pR6d+1d4E0K0+E+vO0H/CRfCnT9Si1DQHc/JK8F1e3Zu7dekiqBKBll3keW39B8efQwwccv5sorT" +
                        "eJj9mpKPLPyuox5Zdm/d6O26/njgH6auNlmPLm9GCw0vtU4y5odm05S5o90ve6q+z/pB+H/AMaf2cf2n" +
                        "PChb4f/ABB8LfGTwvrUW290ayurDUtyMu4x3VjNukjYDlo5oww7iv4eznhbPMhxH+0UauHqRejacfnGS" +
                        "0fqnY/ujJeKsiz/AA3+zV6WIpyWqTUvlKL1Xo0mfk3+3l+w5/wSH0Hw34g8UfFjU9E/Zi8VxxS3drc/C" +
                        "PUrfT9UnlUEiO38OQi4huMt95YbQNj+NRyP6L8IPFnxJrV4UsJGeMp3S/eRcorzdV2cfVzt5PY/m/xi8" +
                        "I/DOjQnVxkoYKpZteykoyfkqSupeihfzW5/GxdNbWWt3LeG765ns7S6dtB1OeIWl48ccx8iVo4ZZRHIQ" +
                        "AxVZG2ngMcZr/TympSpL2qSbWq3W2qu0rr5K/Y/y6qOMKr9k20n7r2e+jsm7P0bt3P9NH4dSeIJfh94E" +
                        "l8WLInimXRtLk8SpeLtmGoNZRG4Eg7N5m7I9a/wcztUVjayo29nzy5bbct3a3yP98cjlWeCoutf2nJHm" +
                        "vvzWV7/ADOyrzD1AoAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE" +
                        "7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqw" +
                        "BFYtWOmMrn0x/wTz/4KGeNf2LvGo0jVzc+K/gP4ruUk8b+CI33S2crYjOo6cJCFS4RQN6ZCzKArEEI6O" +
                        "MrEzhc/tD+HfxE8FfFjwV4c+Ivw68R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdGAZGBVgGBFbHM0eVf" +
                        "tXfs3+Df2svgL8QPgX42/0aw8X2udH1yNA82latbMJ7K9iGVJMMyqWUEb03IThjX23h3xxiuHM4o4+hq" +
                        "6b1XSUXpKL9V16Oz3R8R4jcC4XiTJq2X19FUWj6xktYyXo+nVXWzP8AO/8AjR8H/HfwC+KXjb4PfEvR3" +
                        "0Pxr4CvpNE1mycHY+0B4p4WIG+GeNlliccMjKw4Nf7U8LcS4POMvpY3Cy5qVWN0/wA0+zTumujTR/iTx" +
                        "VwxjMmzGrgsVHlq0pWa/JrumrNPqmmfYvh3/gp5+0/4V/Y+n/Y60HxL/Z/haSaWwtvHcMkw1228NzxkS" +
                        "aLBMD8luzk/OPnCExAhOK/Msb4CZBiOJlnVSnepa/JpyOa2qNdZW6bX956n6fgfH/iDDcMPJadS1O7XP" +
                        "rzqm96afSN+u9vdWh8H+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASSSfw6niv1" +
                        "7M8zw+Cw869eahTgm5Sbsklu2z8eyzLMRjcRChQg51ZtKMUrtt7JI/t2/4Jef8ABLzwt+xZ4Wt/iR8SL" +
                        "e18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/uJ+7yX/yk8fvH7EcU4h4bDNwwEHotnUa+1Ly/l" +
                        "j03eu3+sv0ffo+4fhTDrFYpKePmtXuqaf2Ief8ANLrstN/1+r+aj+mgoAKAPzB/4LAfBD4l/Hz9h/x34" +
                        "P8AhN4YuPGfi/R9S0fxnH4V0dDLf3trptyXuEtYl+aaZUcusS5Z8FUDMQp/ffo08V4DJ+LKNbGVFTpSj" +
                        "KHM9k5LS76K+l3ot3ZXZ/P/ANJvhLH5zwlWo4Om6lWMoz5VrJqL15V1dtbLV2sruyPxs/4IPfsp/tAeC" +
                        "/2mfGvxj+IHwq1z4d+A9D8Kah4Pj1Tx3pl5pL3up6lf2MscNtFfxxPKFjt5HkdVKrgAkFhX9O/S88Q8m" +
                        "xWQ0sFh8RCrWlVjK0JKVoxUk22m0tWkk9XrbZn8u/Q98Os6wmf1cbicNOlRjSlG84uN5SlFpJSSb0Tba" +
                        "0Wl90fPX/BXr9jL9pO6/br+J3j3wd8G/EnxD8F/F1tJ8QeD/EHgPRdR1eF5I9Hs9OuLaY6fDKIpo7iBw" +
                        "EYglCrDrx9p9GvxQyKPCOHw9bFU6VWhzRlGc4xfxSkmuZq6aa1XW66HxP0mPCzPpcX4jEUMLUq0q/LKM" +
                        "oQlJfDGLT5U7NST0e6s+p/UT/wTz+EXjL4EfsW/s9/Cz4hWI0vxr4a0Mz+I9IyGeyudSvrjVTbSFSR5k" +
                        "IuRHJgkblOCRzX8A+NPEuFzfinG4vDPmpTn7r7qKUbrydrryZ/oL4J8M4rJ+FcFhMSuWrCHvLs5Nys/N" +
                        "Xs/NH2bX5efqZ+Kf/BdL9n/AOLPx2/ZV8HS/CPwbe+PtT+G/iu38X+IvDfhmCW81NtNk0u8095re2gVp" +
                        "JvLknTeqAsFJbG1WI/qf6JPGWW5RxDVWMqqlGtScYyk7R5uaMrNvRXSdm9L6btH8p/S84MzLOOHaTwdJ" +
                        "1ZUaqlKMVeXLyyjdJauzaulrbXZM+Ev+Dfz4QfFr4a/GH9oK++Ivwu8ReAbLU/DWmWmnXnjXRNT0qK4l" +
                        "TVC7JG99DEHYDkgEnFfrv0yeJctx2WYKOGxFOq1Uk2oTjK3u9bN2Px/6GHDGZYDNMbLE4epSUqcUnOEo" +
                        "pvm6XSufrz/AMFC/wDgm78Lv29fCemz6lqJ8BfGPwbby2fgT4mWUAuAIHfzjY38G5DPas5LKAwaJiWQ4" +
                        "Z0f+bPBbxyzDg/EyUY+1wtR3nTbtrtzRfSVt9LSSs9k1/THjZ4FZfxjhouUvZYqmrQqJX035ZLrG+2t4" +
                        "t3W7T/kW/aF/wCCWP7bf7Omtz2OufBfUviJ4eMnkab45+DttdeI9MuVJwHZbGI3Nvk8YuYYznpnIz/pH" +
                        "wX9IPhTO6SlTxUaU7awqtQkvvfLL/t2TP8ANPjb6PHFmR1XGphJVoX0nSTqRf3Lmj/29FH9TH/BGf4Sf" +
                        "G34cfsPQ+C/2jPD9/pT63r2s6j4K8C+PYmF1YeFL2ys4UtZ7O7XfCklyl1KIZFB2yZIAbFf59/Sg4kyr" +
                        "HcWOvls4y5YRU5w2dROT5lJaNqPKuZdV5H+hf0WuGs2wPCSoZnCUeapJwhPdU2orlcXqk5c75X0e2p+Y" +
                        "v7dn/BBfxTHr+tfEr9iiS31fQtUll1K++BfiG8is7qwkkbeU0m8vGSGSDk7YriRGQDAeTOB+9+Ef0v8O" +
                        "6MMLnl4zjZKtFXT/wAcVqn5xTT7Lr+AeL/0O8Qq08VkVpQk23Rk0mv8Eno15Saa7vp+FfiT9i79r3wjq" +
                        "k+jeIf2YPH2n39uSpUeEtcmikAO3dFNBbPHImRwyMQfWv63wPilw1iaanTzCg0/+nkE/mm7r0aufyHjv" +
                        "CvibDVHCpl9dNf9OptfJpWa807GB/wyt+0//wBG4ePf/CP8Q/8AyJXZ/wARCyD/AKDqH/g2H/yRx/8AE" +
                        "O+IP+gCv/4Kn/8AIn9Uv/BAv4N/tG/Cb4RfG+b4y+Gda8DeA/FWraPdfC3wf44t7nT7lLq2t7xNVvI7O" +
                        "8SOWOK4ElqocgBzGSOhJ/z3+mJxPkeY5lhFgqkKlaEZe0lBqSs3Hki5K6bVpu3S+p/oh9DXhfPMtyzFv" +
                        "HU50qM5xdOM04u6UueSi7NKV4K/Xl0P3e8S+HND8Y+HPEHhHxPpketeGvFVld+HPEOj3gJhu7G+ga1nh" +
                        "cAg7ZI3ZTz0NfyHgMdVwteFalLlqQalFrdNO6a9Gf2Dj8DRxVCdGrFSpzi4yT2aas0/VaH8Lf7b3/BJv" +
                        "9pD9l/4kalH4A8A618Zfgzrt3PJ4A8ZeBtPudXvILZmLx2mqW+nxPJBcxJhTIUEUv3kOdyJ/rb4UfSLy" +
                        "PP8DF4itDD4qKXPGclFN9ZQcnZxfa/NHZ9G/wDIjxZ+jhnvD+PksNRniMLJvknCLk0ukZqKupJdbcst0" +
                        "90v26+Dv7MH7VXiP/giV48+AfjfQ7+T4veIbG+1H4bfDvxWzw6rZaLaaxa6lZ6ZIt2QYpXW1kMELkbBI" +
                        "kZ2YIX+UuJuPuHqHitRzChOP1aEkqk46xc3FxlNW3S5lzNb2bV93/WXC/h/xFX8J62XV4S+szi3ThLSS" +
                        "gpRlGDvs3yvlT2uk7bL8yv+CNX7Hn7Suhft2/D74n+Mvgx4j+H/AIJ+EVv4ivPFeuePtHv9Gi87UfDmo" +
                        "aDBbQHUYofNmMt4rFEyVVSTgYr95+k94mZFW4RrYWjiqdWrXcFFQkpO0Zxm2+VuytHd7tpI/AvoueGOf" +
                        "UeMKGLr4WpSpUFNyc4ygryhKCS5kru8tlsk2z+ir/goL/wTq+F37engjTrbWr4+B/ix4OjmT4f/ABNsI" +
                        "BO8CS/O9new7k8+0d8Nt3Bkb5kYZdX/AIn8GfGzMOD8XJwXtMNUtz027X/vRfSSXya0a2a/t/xp8D8v4" +
                        "xwkVUfssTTvyVEr2v8AZkusW9e6eqe6f8hH7Q//AASv/bb/AGctT1CPXvgzqPxA8LWZZrfx/wDCGC48Q" +
                        "6XNCM/vXWzi+0268c/aYY/yIJ/0o4K+kHwpnlOLp4qNKo/sVWoST7avll/27Jn+Z3G30eOLMjqSVTCyq" +
                        "019uknOLXfRc0f+3oo+H/8AhXfxA+1fYf8AhBtY+2+Z9k+x/wBmXvm+bu2bNnl53Z4xjOa/WP7awfLze" +
                        "2hbe/Mv8z8k/sTG83L7Gd9rcrvf7j7S/Z9/4Je/ts/tG6lp0fhf4J6p4M8M3zKZfH3xWt7jw9pEULf8t" +
                        "la+jWe4Tt/o0Upz24OPy3jPx+4UySEnVxcalRfYptTlfto7Rf8AicT9V4L+j7xZnlSKpYSVOm/t1E4Rt" +
                        "31V5L/CpH9kn/BP/wDYO+H/AOwb8JbrwX4d1E+LfHni6aHWvib8Q7m3S3k1K6hjMcMMMYLGO0tw7eVGz" +
                        "Mcs7E5Ygf5ieMni9jeL8yVepH2dGmmqcL35U9231lLS7stkuh/qJ4MeD2C4Oy10KUvaVqjTqTtbma2SX" +
                        "SMdbK73b6n8yX/BW39jT9p7Uv27/in428KfBLxJ4+8I/FufSta8EeIfAOjahrNtcY0mz06SCRtPilEU6" +
                        "TQspjkwSMMMqwNf3n9HDxPyCnwhh6FbF06VSgpKcZyjFr3pSTXM1dNPdea3R/Av0k/C3iCpxhiK9HCVK" +
                        "tKu4uEoRlJP3YxafKnZpp6PyezP6kf2QfgJeeC/2G/g1+z18bPDVrf3MXg2Lwd8SfBuo+XdWxXUYJDd2" +
                        "M2wsj7VnMT7SVJBwSMGv8/vErjCOK4txWY4Go0vbOVOS0futcsl1W1117n+hHhlwbLC8I4XLcdTTfsVG" +
                        "pB6r3k+aL6Peztp2P5z/wBtT/ggx8XvAet6343/AGRJV+Knw7upHvoPhjqt1FbeJtJR2LGGCW7ZIb6GM" +
                        "fdYyJNjC7JGBc/234WfS+y3GUoUM4/cV1p7RK9OXm0ruDfXRx63itF/D3it9DvM8HWnXyb9/Qbv7NtKp" +
                        "HyTdlNLo7qXS0nq/wAPvGfwE+OXw61N9F8ffBzxT4L1aMlDp/ijQNVsZTjuouYE3DuCMgjkV/WGV8YZT" +
                        "jqfPh8VSqR7xnF/kz+Ss14OzfA1OTEYWrTl2lCS/NGp8P8A9mn9ob4rajDpXw3+B/ivxrezP5OPD2gan" +
                        "cRxnIBMsqQ+XGoyMs7ADua58546yXLoOeJxdKmv704r7le7+R0ZLwHneYzUMLhKtR/3YSf3u1l8z+ir/" +
                        "gm9/wAEQ/F/g7x34U+O/wC2FFZ6fJ4RuLfxH4O+B9hNb6i8l/Awlhm1ieEyW/lxOA628TPvOPMYKGjf+" +
                        "J/HH6V2GxWEqZfk137ROMqrTjo9GqadndrTmaVuibs1/b/gX9EzE4XGU8wzqy9m1KNFNS95ap1Grxsnr" +
                        "ypu/VpXT/qAr+BD/QIKACgAoAKAPmP9rD9k/wCFv7X/AMLb/wCG3xJsPJuYfMvvBnjOxjQ6joWolNq3F" +
                        "uzYypwBLETtkXg4IVlTVyoysfxGftQfsv8AxS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXKx3dpIwGV" +
                        "OMMp+ZGyrAEVi1Y6YyufU3/AATl/wCChfif9jDxxJoXiU3Xib4C+MplPjDwpC5eTTLltqDU7BG4EqqAJ" +
                        "YxgSoMH5lQq4ysTOFz+0DwR438JfEnwl4f8eeA/EFt4p8H+KbaPV9A1/SJBJb3NvIOGU8EEEFWVgGVgV" +
                        "YAgitjmaPyM/wCCpX/BO3wz+3f8MbH4z/BG60+8+O/gnT5W8KaxpM8Etn4u0mAyS/2W9zE/leYHLG1mJ" +
                        "2q5KOQrFk/pr6OnjrPhfGfVcU28DVev/TuT050u38yW6V1qrP8AmH6R/gNDinB/WsKksdRjp/08iteRv" +
                        "o/5G9E3Z2Tuv4yNP+EPxT1T4kw/Byx+HeszfFae+Hhpfh02nXSayt/naYHtJEWRHHVgyjA5OBzX+pNbi" +
                        "XL6eBeNlXh9XUebn5ly2782z+R/lXR4ZzGpj1go0J/WXLl5OV8/N25d0/XY/tV/4Jef8EvPC37Fnha3+" +
                        "JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgff+4n7vJf8Ayx8fvH7EcU4h4bDNwwEHotnUa" +
                        "+1Ly/lj03eu3+rH0ffo+4fhTDrFYpKePmtXuqaf2Ief80uuy03/AF+r+aj+mgoAKACgDwn9pn476T+zJ" +
                        "8DvH3x21/wxqPjHQvh3BbaprOgeE/s51CS2nvoLJ5IhdyRRkQibzX3OPkVsZOAfruA+EKmfZtRwFOpGn" +
                        "Oq2lKV+W6TdnZN62stN2j4/j7jClkGUVswqU5VIUkm4xtzWbSurtLS93rsmaPhH45+B/F3wA0D9pCCeT" +
                        "Tvh3rnhOD4xSS3oTz7TSpNKGryCVUYqJIo8hwDgMCM1hmXCWLw2czyxq9eNV0tNnLm5Vbyb28joyzi7C" +
                        "YnJoZmm1QlSVXXdR5eZ380t/M8W/Yg/bd+G37dnw08S/Er4b6BqnhW18Ka3L4I1bQPGQsxerLHZW18kw" +
                        "FjPOnlSLc7VJYHcrDHHP1Xiv4U47hHH08LiZxm5w5043ta7VtUndW18mj5Twl8WcBxhgKmKwsJQUJuDj" +
                        "O172Tvo2rO+nmmbPwY/a+8E/HT4/wD7RXwE8F+GdUN1+zTcWGieN/HN59jGkz6jfeYotbbypnlLo9vOr" +
                        "70XBjPqK5eKPDXF5Rk2CzCvUjbGJuEFfmUVbV6Ws04tWb3OrhbxNwmb51jsuoU5XwbSnN25XJ30Wt7pq" +
                        "Sd0tmfWtfnB+khQAUAFABQAUAfCP/BRH9sfUv2G/gFZ/GjSvAcHxFurrxBp3gk+H9Qv5NNjVL62u7gy+" +
                        "bHBcHK/ZsbdvOevFfrvgp4Y0+Lc4eBnWdJKnKfMo82zirWuu/c/H/G7xQqcI5MsdCiqzdSMOVy5d1J3v" +
                        "Z9ux93V+RH7AFABQB89ftVftF+F/wBk34C+PP2gfGeh3/iTw14A/sv+0tF8MC3N9N/aus2miR+V9rkij" +
                        "+WS8Vmyw+UHHOBX2nh7wTiOI84o5dQnGFSrzWcr2XLGU3eyb2jbbc+K8ROOMPw3k1bMa8JTp0uW6ja75" +
                        "pxgrXaW8k99j5W+If8AwUY1bwbceDn8LfsSfGj4xaD418N6D8SdM8XfCbwjLrGlLDr2npqCWrXNu5Qzw" +
                        "rIFlVSQD3NfoWS+CVPFKr7XNcHh506k6bjUqcsrwk43s9bO2h+dZ3441MK6XsspxmIhUpwqKVKlzRtOK" +
                        "la60ur2fmeDfD//AILM6Z8WdCfxT8K/2Evjl8S/DMdxJpUniP4f+E49ZsFuoVV5ITcadPNGJFDqWXdkA" +
                        "jI5FfX5z9F+pl1b2WLzfBUalr8s6nK7PZ2kk7abnx+S/Slp5lR9rhMnxtane3NClzq63V4tq+q0P2b0+" +
                        "6a+sLG+a1ksmvIYrprK8XZNCZED7JF7MucEetfy9Wp8k3G97O11s/Q/qWjU54KVmrq9nuvU+Mv+Cf8A+" +
                        "1rqP7a37O2m/HLVPBEPw+u7/VtU8Nnw7YXz6jGq6dKsYk86SGAkvu6beK/UfGTw4hwrncsBCq6qUYy5m" +
                        "uX4ulrv8z8t8GPEmfFeSRx86KpNzlHlT5vh63st/Q+2a/Kj9XCgAoAKACgAoAKACgAoAKACgAoAKACgA" +
                        "oAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8" +
                        "Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrl34bftg" +
                        "ftDfCP4QfED4F+APiNd6D8OfiRj+3NJgOZbff8ALcfYpj89t9pT5J/LI3rwaLg4o+1P+CZn/BQv4t/s1" +
                        "eKNM+CVt4K1D41/Dbx9qUUOk/DvQGL61p+pXbiNpNJEmUbzfvSW7lUZhuDRkuzOMrEzhc/sds4YLg2+s" +
                        "zaT/Z+q3NtHDMLtbc3cMZ/e+RJJA0inYxOQrsuckE9a6fay5eW7tvbpfucXso83NZc1rX627GjUGgUAF" +
                        "ABQAUAeZ/Gn4baf8Y/g/wDFL4S6qUXT/iX4e1jwLczTAkRDVdPlshJwCQUMgYEcggEc173C2eTyzM8Pj" +
                        "IfFRqRn/wCAyTt87WPA4qyKGaZZiMHP4a1OUP8AwKLV/le5/NZ4F/aM8Sab/wAEM/FfwmDSR/F6y8U3v" +
                        "7EVnolwQt295retC9ezZSeSNMu5oVx/cx2Jr+6c34IoVPFqnjP+YZ0li2+loQtzf+DIqXz9D+EMo44r0" +
                        "/CKpg9frSqvCJdbzndx/wDBcnH5eTPpP9i6w8Pf8E+f20f2zf2dtUuhZ/Dey+F3hT9oXQJmHlpPB4P0C" +
                        "Gy1aeMvjLyyzzs5PLeXuPQ18L4pVq3GfC2V5lBXrvE1KMvJ1ZtwT8klFLtex934V0aHBXFWa5ZN2oLDU" +
                        "68fNUoJTa823Jvva54b+z5+0J4t/Y0/4JseMv2uV02yvv2h/wBvD4narqfgk+J38u1hvNVu7q3iubvzW" +
                        "TNvb/Yru6VmIVjKgYhWr6zjPgvDcUcdUsn5msFlmGip8u7UUm1H+9LmhHTVcrsro+R4K41xPC3AdXOeW" +
                        "Lx2Z4mThzbJybScv7seWctdHzK7szt/jT8bP2iv2Q/hvov7TGif8FOPDP7V3irw5e6TJ8ZP2ep5PCJ0v" +
                        "VbLUr2G0nj0aLSZmuIjA8yjdGitsDSnaFMZ8rhbhXJOJcdPK6mQVMDTmpeyr/veaLim06jkuV3SejbV7" +
                        "R1bUj1uKuLM84ZwMM0p8QU8dUg4+1ofuuWSk0mqai+ZWbWqSdry0ScX/RH4O8U6X458IeFfGuhuZNF8Y" +
                        "abY+KdHkkxua11C1S7iJ2kjJSQdDX8U5nl9TCYmpQqfHTk4v1i7P8Uf27leY08Xhqden8FSKkvSSuvwZ" +
                        "+Dnw38Zft+ftdftR/tv/AfwL+06/wAD/hF8D/Gl/Yn4gWvh/TdW1qCC5nubXTdG09ZBaqsKi0lmnmMhl" +
                        "GEXcA3P9e55lfB3DfD+U5hiMB9ZxOJop8nPKMG0k51Jb6+8lFW5d3bQ/jzIs04z4m4hzfL8PmH1bDYas" +
                        "1zqEZTSbahTjtp7rcnfm2V9Tl/2dviB/wAFJP2iviN8cf2G9Z/ab074dX/7Luq3Vt8QP2m9E0Czv/FOv" +
                        "2FzOYNJtILV3ggiDiGSaW4BEwXYjEsGL+hxtk3A2SYHCZ9DASqrGxXJh3NxpwaV5yb1btdJR1je7Wlre" +
                        "fwRnXHeeY7F5BPMI0XgpPnxCgpVJpu0IqOiV7NuWkrWT1vf65/4Jx/tAftAXvxl/aq/Yx/aZ8bw/FXx7" +
                        "+zRe6dc+FfirDaR2d1rOi6krlftUduNgdEMDrktJ+8ZWZtm4/m3jfwbk0Mry7O8rpOhRxilzU73UZx/l" +
                        "b11fMui91NJXsfpXgZxpnU80zHI81rKvWwbjy1LWc4S/mS0ulyvq/eabdrnyx+1d4n+P/7O/h/x7471b" +
                        "/gsTok37QngW2u/F2k/s+T6P4N02xv4bONrgaV/Zcc803nTRrshkliJkfjAJ3L+heHeAybO61HDw4Zn9" +
                        "SqtRdbmqyab05+eyVk9Wk9F6Wf554jZhnWSUa2InxRD67STkqHLSipJa8nJdu7WibWr063XD/8ABT347" +
                        "XX7TX/BHf4BfHTUdMh0bV/iF4k8Nalr2mad5n2aLUbez1ixuxCJiWERngcoGJIXAJbqfW8A+EY5D4m4z" +
                        "ARk5RpU6iTe7i3Tcb262av59EeR9IDjCWf+GGCzCUVGVWpTbS2Ukqila+trp28ur3PsXS/2hvjt+3l+1" +
                        "JP4P/ZT+IV18Lv2Ov2fr6TSvjJ8ePDltp1xdeM9eQK7aTpEmoxXKeSqFf3yJwrGQkhoA/5jiOC8o4Q4f" +
                        "VbNqKrZnio3pUZOSVKH881Fp3v9lvdculptfqGH42zjjHiF0MoruhleFlarWiot1Z/yU3JNWt9pLZ82t" +
                        "4J8V8dP2p/iN8df2yviT+y34D/as0T9jT4Mfs/WNifif8UdQm0KPxD4i1/UoROun6a2vSoscUAJEjxgM" +
                        "rI24sHQV6vCPh7gco4YoZriMunmGKxUn7OmlPkhCLtzT5Fq30T0aatazPJ4v8RMdnHFNfKcPmMMvwuFi" +
                        "vaVG4c85yV+WHO9EurWqad73R137Dn7T/xOsP2tfif+xP8AEz4/aV+1h4e0zw1F8Xvg38ffDf8AZJu5L" +
                        "BbmCzudM1I6LJLC80bT5DM2/wCQliVkRU83xZ4BwE+HMPnmFwcsDN1PZVaMua17NqcOdJpO2y01VtU2/" +
                        "T8I/EDMIcSYjIsVjYY6EaftaVaPLfluk4T5G02r7vXRtu0kl6j/AMFov+UaX7Sf/cnf+p9odfP/AEXP+" +
                        "S7wP/cX/wBM1D6H6VH/ACQWP/7hf+nqZ9mfsrf8mwfs4f8AYheD/wD1HrSvzDxC/wCR/jv+v9X/ANLkf" +
                        "qXh3/yT+A/68Uv/AEiJ+XP/AAb/AH/Jimrf9j74g/8ATdpdfv8A9Mn/AJK6P/XiH/pUz+e/oYf8khL/A" +
                        "K/z/wDSYH7gV/KB/Wp/K5/wSx+Cn7bfx0/Y1ay+EX7UkX7Lfwv8La3rcHg+Pw34ft9X1bxHrcjx3M899" +
                        "dXE0bW1pEWSFEhyWO8spAXP+hH0g+KuFMo4n5sZl7xuInCHNzTcYwhqkopJ80nq23tok97f53/R44U4s" +
                        "zfhflweYLBYeE58vLBSlUno25NtcsVoklvq2tr/AKhf8E4f2mfj7+1B+zt8c/A/xO8QWWlftNfAvW9d+" +
                        "Cl/8QrawgltJNShtGSy1Ka1iSKCRorjeJI0VVcRg7RvNfgPjhwHk+QZ3hK+Fg5YDEwhVULu/K370E3dq" +
                        "8bWbbavvof0F4GcfZzxBkeMw+KnGOYYac6TnZW5kvdm0rJ2le6SSdtlc+Af2pvjt8c/2O9Euvit4a/4K" +
                        "0aD+0T8Y/A+o2H/AAn/AOzXq2neEobXVra51CG0uLa30/SJ55LR4fM3yIAkgiDOroVG79k8PuEcp4mqr" +
                        "CVeHJ4TC1Iy5K6lUbi1FtNykkpJ2snquayad9PxjxD4vzfhik8XS4khi8VSlHnoONJKSckmlGLbi1e7W" +
                        "j5btNW1+nf+CjH7Yn7RHgew/wCCePin9lnUxpmsftK6miweBtWjtprPWpdZtNHfTLK8eaISCMS34DmNo" +
                        "2IJ5HBHwPgj4ZZJi551SzaPNHBx+NXTgoupzyjZ2vaOl7ryZ9/44+J+d4SGSVcplyyxkvgdmpuSp8kZX" +
                        "V7Xlraz80cV+03oH/BTD9ij4bj9r1v2y4/2hIfBNxp+qfGz4I614W07S9AfTry6itZU05rUtIIoZJlUu" +
                        "qwybMyZGCh9XgPGcCcVY7+xv7L+quopKlVVSUp8yTa576XaV7NyV/d7M8rj7Bce8KYD+2f7VWLVNxdWi" +
                        "6cYw5W0nyW1sm7XSi7e90sdP+2/+2R+0Ra+MP8Agmfr/wCx/r628X7Yljrctn4I8WQ2z6TdSappuhPpU" +
                        "+oMIHnRbFtYaaYRuMiPBHWvP8KPDHJJYbPqecwu8BKF5xb5lyyqc6jrZ8/JZXT3ueh4teKOdxxWQVMln" +
                        "ZZhGdoSS5XzRp8jlpdcntHKVmtrHF/tOv8A8FGv+CeXhfRf2r9Q/a5b9qr4eaPqWl2Hx4+Fnizwzpui2" +
                        "cdpqN0lmJdPazMxgjM0qxK0ZjZHZCyyKWQerwEuCONcRPKI5b9SryjJ0akakpu8Ve0r2u7Jtp3TSaTi7" +
                        "M8rj98c8E4eGcSzP69QjKKrU5U4wVpO142vZXaStZptNqSuj2X9rr9tvxd4p+NXwB/Zd/Z/+Nmh/s5WH" +
                        "xd8KQfHv4iftH/EAaU39keF79JPsVrp8WrSpbteXHlkkMcjchVgN7D5fw28KcNh8qxma5jhJ4uVCq6MK" +
                        "EOb3qitzOTiubljf8HdPRH1PiX4sYnEZrgspy7FwwkcRSVadefL7tN35VFSfLzSt+Ks1qzz/wCE37Snx" +
                        "N/Z2/bV+CP7PWu/tiab+218Cv2lbbU9L0PxIJdAuvEPhPxHp0PnKk8ugyyl4LgtGq+aQCHYqB5TF/Z4j" +
                        "4FwGd8K4vMaeWSy7F4Nxbj76hUhJ20U0rOOr07K7fMreLw3x5j8k4rwmW1M0jmWDxiklL3HOnOKvq4N3" +
                        "UtFr3dkuV34/wCGXxE/b8/a1/az/bh/Z28B/tKx/Br4Q/BXxlcRX3xCg0LTdU8Q6dY3F1e2enaNpiSCB" +
                        "Fjl+xyySTs3mL5YAb5irenn2ScHcOcOZTmWIwH1jE4iirQ55RhJpRc6k93dcySivdd9tLrzMgzzjPiTi" +
                        "TN8tw+P+r4bDVnefJGU4puShTgtFZ8rbk/eVlrrZ/Rn7AHxx/aX0P8Aab/aW/YW/ai8dr8Y/E3wSsdM8" +
                        "deAvi8tlb6fPqGiX627BbmOAfMzLfQMpZmZGEiM7gKR8R4ycJ5FVyHAZ9lVH6vTxMpQnSu5KM1fZv8Aw" +
                        "yXRNcrSWp9x4McXZ9Rz/H5Bm1b6xUw0YzhVsouUHbdLf4ovq0+ZNvQ/YOv5oP6cCgAoAKACgAoAKAPmP" +
                        "9rD9k/4W/tf/C2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxWfHT9jT4" +
                        "7/Ab472/wCz7r/g+51/xlr9ylp8PJvDUEtxb+Jbe4l8qCewIGWDHh1PzRtkPgg1i0dKkmj+pb/gm3/wT" +
                        "b8NfsgeGoPiD8QYLbxL+0R4ltvL1XVY9s9t4ctp1+awsG5Bcg4nnH3/ALq/JkvpGNjCc7n6s1ZmFABQA" +
                        "UAFABQAUAfzD6V+yd8XU/4K66t8MX8DaqP2Xl+Jkf7bh8WDTr1dDGsQ+H5dVjRLgp9nLf2hdC3MecgKc" +
                        "DFf3viPEXLX4bRxXto/2h9W+qcvMuflc1F6X5vgXNfzP4Bw/hxma8S5YX2Mv7P+s/W+blfJzKDktfh+O" +
                        "XLbfQ9N/wCC23wb+Ndz8Sfgf8YPgB4I1fxp4i8eeFfF/wCzH8RLbwlp15fuujavFi2Wf7HG+yNjqV0dz" +
                        "4UMB1yceD9FTifKo4HF4PMasKcKVWliIc0kvei9bXau/chotbHvfSx4WzWWPwmNy6jOpOrSq4efLFy92" +
                        "S0vZOy9+er0ukfRf/BQT9hLxh4r/YI+BXwl+B3hu18deL/2T7rwt4j0XwNdpG8XiW10LSpNJvbfyptiS" +
                        "vOJfPZWIMm1lGWcA/E+DPi7hsPxhi8Zj6jpUscqkXNb03OSlF3WyVuVNbXT2R9x40+D+KxPBuDweApqr" +
                        "VwLpyUHtUUIuMlZ2u3fmae9mt2fMvg/4z/8ExPEFrouhav/AMEt/Eml/F66Ntp+v/CXSvhCl/f2V9L+7" +
                        "kVXCw+ZCkiuA5VXKqT5YOVH3mZ8LcfUZTqQ4gpywyu1UeJsmunezatpdq7+LqfBZXxV4f14wpz4eqRxT" +
                        "spUlheaSfXtdJ31sm0vhT0P6KNG0fSvD2kaVoGhadDo+h6HbQaPo2k6bGsNva2ltEsEMMUaAKqIihVUD" +
                        "AAxX8T4rE1K9WVSpJynJttvVtvVtvu2f29hcLToUo06cVGEUkktEktEkuyWx+UH/BOvwV4y8L/tSf8AB" +
                        "ULWPEvhLU/Duk+LviVbar4U1TXbC6tLfVLUS6sTNaSXCIs8Y3r80ZI5HPNf0V42ZrhcRw/w/ClUjOVPD" +
                        "tSSabi7Q0kk9H5M/nHwPyrFYfiHiCdWlKEamITi3FpSV56xbWq80cz+wt4F8b+Hv+CjX/BTjxR4g8Har" +
                        "ofhnxbqXh2Xwr4i1jT7u2sdTSJr3e1pcTxrHMF3DJRjjNd3i3m+Er8EZBSp1YyqU4z5oqSbj8PxJO6+Z" +
                        "weEOT4uhxxn9WpSlGnUlDlk4tKXxfC2rP5Hmfw1+HXx0tf2+v8AgrX4j8B+F9V8O+IPGnga3074J+NtT" +
                        "sbi00278Qjw9BFZNbXlykcEhjuQu7a+Bg5xivez3O8olwdw5SxFSM4U6zdWCaclDnfNeKu1eN+h4OQ5H" +
                        "m8eMuJKuHpyhOpQSpTaai58i5bSdk7St10Pz/8AgVrHwk8MfsTfE/8AZut/2GPGPjb/AIKDeMNH8aeD/" +
                        "HGs674FN1qlrqOtR6hbR6rNrWqJ5lrBbW0oKou1jKhABLmU/snF2GzLEcVYfM3m9KnktOdKUEq1ouMeV" +
                        "uCpx0k5SW7uuV+XKfi/CGKy3D8J4jK1lFapnVSFWM26N5KU+ZKbqS1ioxeys+Zba8z9K/aB+EXxY1X/A" +
                        "IIWfsufD3S/hh4i1Lx9o/iW1udW8D2Gi6lNrFrGmo+IizTWccJmRQJFyWQfeHqK8Pg3iXLqfi3mGJniK" +
                        "aoypu03OKi/dpbSvZ7Pr0Pe404ZzKp4Q5fhoYeo60aivBQk5L3qu8bXW66dT6m8ZfBXxl/wSz/al8JfG" +
                        "r9mP4c634x/Y4+Of2LwD8e/gp8P7PUdbvPDl/ZwFLfV7S3hE87gKGlBIbJ82JmXzYiv57lnFWF8QeH6m" +
                        "BzSvCnmeGvOjVm4wU03rCTdktbLp9mST5ZX/Q804UxXh5xDSx2VUJ1MrxNoVqUFKbhJLScUrt6XfX7UW" +
                        "1zRt5F8bPhL4C/Zs/bl+Nvx2/aP/ZKuv2pf2Uv2oYNK8YeGviPovheLxNeeDtZitws0M9tKqtBFKZHLZ" +
                        "2l0ERXe6Oo+l4V4jxme8JYTAZZmSwWY4JyjKDqezVWN9Gmt2rK29nzXsmmfM8V8N4PIeLsXmGZ5a8bl2" +
                        "NUZRqKn7R0pJapp7J3d9rrltdpo/Qf9hfXv2J/H3xB8V6/+y/8Ashal8Gr/AMO6TFHJ8WdY8ADwrY6jb" +
                        "6hMjSWVpdt80jjy0eRCFyMEbgMj8Y8W8HxVg8FTp5rmUcQpy/hqt7RxcVpKUem7SevZ2P2vwixnCmNxt" +
                        "SplWWSw7hH+I6Ps1JSesYy6vRNrTurnRf8ABXvwr4o8bf8ABO79oXwx4M8N3/i7xLqf/CJ/2b4e8MWdx" +
                        "f31x5PjnRriTyoLRJJH2Rxs7YU4UEngGuL6NeY4fCca4KrXqRp017S8pNRSvRqJXbsldu3qdv0mMuxGL" +
                        "4IxtKhTlUqS9naMU5N2rU27JXbsk36H1z+zNp9/pP7N/wCz7pWq2U2manpngjwpp+pabqEbwz288Og2s" +
                        "ckckcgDI6MCGUgEEYNfm3HlaFTPMbODTi61RprVNObs0+qZ+lcA0Z08iwUJpxlGjTTT0aahG6a6NH5r/" +
                        "wDBC7wL43+Hn7FWqaD4/wDB2q+B9dfxvruoJovjDT7vTLswSafpqpIIb2ON9jFCA2MHB9K/dPpbZvhMb" +
                        "xVGph6sakPYwV4yUlfmnpdNq5+EfRDyfF4LhSVPEUpUp+2m7Si4u3LDWzSdj9lq/mA/qQ/I7/giV4K8Z" +
                        "eAf2FtB8PeO/CWp+Ctfj8S+IruTQ/FthdabeLFLcRlHMN5HG4VgODjBr+kPpV5rhcZxdOph6kakPZwV4" +
                        "tSWz6ptH81fRPyrFYLhCFPEUpU5+0m7Si4u110aTPg74QfCP9piD9lz/gsVoXw18Fa/4a+Jnjzx/rOof" +
                        "D+G407ULG81nSZNWle/GmeYkbztcWBmjhMWdzMoGSRX6/xLxJkL4g4YqYqrCdClQip+9FqMuVcvPvbln" +
                        "yt32Sdz8e4Z4az9cP8AFFPC0qkMRVrzcPdknOPM+bk2vzQ5krbtqx82+ONX+CHjj/gnFP8As3fsufsL+" +
                        "Lbj9omHRPD0fxo8at4DaO/0a+0bU9P1bV57nWJomubmS6mtdkMEZyY5AAqBBHX3OU4bNsJxwszzXN6Sw" +
                        "XPP2UPbaSUoyjBKCfLFRTu5Pqt3fmPhM2xOU4vgZ5ZlOUVXjlCHtZ+x96DhKMpt1GuaTk1aMV0eyS5T6" +
                        "L/4KJX/AI38EeAf+CJup+FfBs/iP4keENR8LX/hz4fXgazub/W9PsvC8lvpzi4CmJ5Z41iO8DaTz0r4n" +
                        "wUo4TF4ziqNWqoUKkailNapQk615K26Sd9Nz7jxurYvCYPhOdGk516cqbjB6NziqNoO+zclbXY9b/a9/" +
                        "bl8Rfts/BXXf2Qf2Xv2b/iK3xp+MTWPhTxza/ErwzNoll4QsBexT3h1G4mkeONv3flF2wihi27cFU/N+" +
                        "GvhLQ4VzWGc5rjsP9Vw95Q9nUU3Vdmo8qSu9723drWtdr6XxM8Xa/FmVTyXKcBiPreItGftKbgqSunLn" +
                        "bdlta+yu3e9k+H/AOCgvhvxd+yr49/4IveEvhZ4Vn+LPiv4CR+INB0vwppAWK78R/2BpvhWC8jgDA4nu" +
                        "ooZSgCk72GFJwD63gzjsNxDg+Ka2LqKhTxTg3J7Q55VnFvyi2r+S1a3PJ8acBieHcZwrRwlN16mF50or" +
                        "epyRoqSXnJJ283onsb/AO2f+114h/4KLfCeH9i79lX4A+O28X/FfVNDg+K/iD4peG7jQ9N8H6dpup2+s" +
                        "N9undpVSRZ7aMuc7dgYIXdlU8fhd4bUeCcxed5tjKHsqEZ+zjTmpyqylFx91aXVm7db2bsk2dnin4l1+" +
                        "OMtWR5Rgq/ta8oe0lUpuEaUYyUveetndK/S10rtpEf7av7J1n+z7+0h+z5+0rq/7N0v7XH7MvhbwFpn7" +
                        "Pnxj8C6fo8euavph0K2ktrPWY7OQkH90sQ3t8q7HR3TzEYPws8RZZ1keNyyGOWBx868q1KblyRlztOVN" +
                        "y9b6bu6aT5WifFXw4jkue4LNJ4B4/AQoRoVYKPPKPImo1FH0trsrNNrmTPoz9k3xj/wTp+Kfxt8G2X7O" +
                        "/7D2p+E/F2lx3fiez+Ld58M00PS9AmsYpBtl1F+Yp3YGOPapBbK7s4B+I8Rss42y/KqssyzaM6UrRdNV" +
                        "+eU07bR6pbvrbWx9z4b5pwPmObUo5blEqdWN5Kq8PyRg1fefRt6LpfS5Z/4JweBfG/hb9tX/gq/r3ifw" +
                        "dqvhzQvGXjfQNQ8Ia1r2n3dnaarBHqHidnks5riNEnRRMhLRkgbl9RUeOGb4TEcK8O06VWM506M1JKSb" +
                        "i+WjpJJ3T0e/Zl+BeT4vD8V8R1KtKUIVK0HFuLSkuatrFtWa1W190dL8HvBXjKx/wCCxv7W3jm98JanZ" +
                        "+Cta+GvhrStG8YXVhdR6Xd3US6Lvhhu3QQySL5bblViRg5HBrh4mzXCz8MctoRqRdWOIqNxuuZJ+01cb" +
                        "3S1Wtjv4YyrFQ8UMyxEqUlSlh6aUnF8ra9ndKVrN6PRM+k/2Gv2wNf/AGxvBHj7xhr/AMBdb+As3grxD" +
                        "ceB7bR/GU0lw1+kEEcpmV5bOyKyIX2SxBWCNgb2zx8L4s+GlHhjF0aNPGQxSqU1O8Va121b4paPdO6uu" +
                        "iPvPCPxNrcUYStWqYOeFdOo4Wk73sk7/DHVbNWdn1Z9vV+UH6yFABQAUAFABQAUAZF54f0HUdV0bXdQ0" +
                        "S0vtc8O/aP+Ef1m8toZbuw+2RiGf7PM6l4vNQBX2EbhwcigDXoAKACgAoAKACgAoAKACgAoAKACgAoAK" +
                        "ACgAoAKACgAoAKACgAoAKACgAoAKACgAoA/PX9tL9kDxv8AtL/F79iX4ieFPE2laDpn7MXj20+K/i2x8" +
                        "Qm7E+oWdvqmlXzQ2n2aGVfNK2DgeYVGSOeuP2jwt8S8JkOWZrhq1OUpYyg6cXG1otxmryu1p7y2uz8U8" +
                        "VfDLF59meU4mjUjGOCrqpJSveSUoO0bJ6+697LY/Qqvxc/az4N/ag/ZR8ZfHP8AaY/Yg+N3h7xHpmkaB" +
                        "+y9rHiXxH4u0nWTdC81CLWotLjiWz8iKRNyGxbd5jKORjPNfr/APiJhcpyHNsDUhKU8bCnGLVrR5HO/N" +
                        "dp68ytZM/HfEDw5xWb5/lGPp1Ixhgp1JSTveSmoW5bJrTld7tH3lX5AfsQUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFA" +
                        "BQAUAFABQAUAFABQB//2QtAAAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc" +
                        "2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM" +
                        "2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAWsEAAAL/2" +
                        "P/gABBKRklGAAEBAQCWAJYAAP/uAA5BZG9iZQBkAAAAAAH/4RGWRXhpZgAATU0AKgAAAAgABwESAAMAA" +
                        "AABAAEAAAEaAAUAAAABAAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAAcAAAAcgEyAAIAA" +
                        "AAUAAAAjodpAAQAAAABAAAAogAAAMIAlgAAAAEAAACWAAAAAQAAQWRvYmUgUGhvdG9zaG9wIENTNSBXa" +
                        "W5kb3dzADIwMTE6MDE6MTggMDk6NTE6MDYAAAKgAgAEAAAAAQAAAWKgAwAEAAAAAQAAAIEAAAAAAAAAB" +
                        "gEDAAMAAAABAAYAAAEaAAUAAAABAAABEAEbAAUAAAABAAABGAEoAAMAAAABAAIAAAIBAAQAAAABAAABI" +
                        "AICAAQAAAABAAAQbgAAAAAAAABIAAAAAQAAAEgAAAAB/9j/7QAMQWRvYmVfQ00AAf/uAA5BZG9iZQBkg" +
                        "AAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMDAwMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACEQEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAA" +
                        "AAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFA" +
                        "wwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo" +
                        "3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACA" +
                        "gECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhais" +
                        "oMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h" +
                        "5ent8f/2gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMirKqDekt3+m7a0N2iPQdVYD6r7bP8Mx//gf6N" +
                        "XfrD1Y9I6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5fVukMzMuttdjnvaCyQ1wa7Z6jWuL3M/c+mn+1" +
                        "L2/d/Q4uD/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJT//0PVVn" +
                        "9a61idHxPXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGxPXv99j5bRQ0+6x3gP3WN/wln+DXG9M6Z1H61" +
                        "9Rfn57y3FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzfqv067KcHXZeTbc4NENaKzdVXUz+QxjmfSRer" +
                        "DqXS+ifV/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2ekrX+MHBqo6V08Y7BVRj2mllbRAAcxxb/56X" +
                        "Q9AdTl/V3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+WwT4eICc+OJ2PFxR/6DRljOTmc0b4SYQ4ZDcV6" +
                        "v8ApsPq99YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u9Czvqxmt6t0hzhiB2h1cai4/wAxf/pcWz6LH" +
                        "u/4uz9L6VtnXfV76w43W8Xewenk1QMigmS0n85v79T/AMx6h5jl4iPvYTxYZf42OX7smXBnkZHFlHDlj" +
                        "/i5I/vxS9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/OV6q1l1TLqzLLGh7T5OG5qwfrx1HL6b0ivIw3" +
                        "NZf67Wtscxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3TcoVvysWqwNcyvaXltllri99T9vtrTcfKzyR" +
                        "EhKMQeL5j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh10WZVdljL3lk1hp2wNxc4Pcz/orm8jrH106E" +
                        "4W9XY3Lw7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXHysrMbndLvcX4Nm1jLILd36ZlNde2xjf0Vn8v" +
                        "/RqbDyV5I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9aX9V9NSXK1dT+sPQsPKzfrHbXks9jMSmvaHu" +
                        "tO727666msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9NEMZub29Jt1dz9rvzPtNrP8xRDlJGz7mMQB4" +
                        "fcMvRKXaLIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy+pWB7MYh7WsYGhjNr7Htbt97/o/no/1X+suT" +
                        "1G63pnU6vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw19I61YGteWM3BrxLTFdh2vb+cxPjgMcWeMwO" +
                        "Me1wy3+eW8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1zB+24jXsYHmtzbNu4ObB/wbrGfRc389aK4jp" +
                        "/1t6hjfVR/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+Yljs/xhZuK3qFOZUGvG6ukGqSDxtApsp/7cv" +
                        "TfucxfHOEAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82nAwr82+fSx2OseGiTDRu9swh9J6nR1bp9PUMc" +
                        "ObVdMNdEgtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2OFdljPZYQP5z0LN7Hem78/+j2f4NVLPrdn4X" +
                        "1Wwcp8ZHUc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRymQmhwn1+3ob14fc4v7vCuPNYwLNj0+5qOnFwf" +
                        "43E9okuKbj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1dz+pZ/TvW6ninEyWvcwtLXM3gRFoqs99f0tn" +
                        "9hNycuYR4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9WT1VozcQxn0s2Bjj7bKwS/0fd7arNzv0Vn9i7" +
                        "/SU5n1T+s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2f8AW7f0v872q5v61fVVnVGOzMNrW57Ww9hgN" +
                        "vaBHp2T7W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3XtAtoHJ31neGt/wCMbuq/64sT/F51dluLZ0mx3" +
                        "6Skm7HB71vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHuskODgdn2TJ3e71d3sqe/wD4qz9J/O5/1h6Dc" +
                        "M5/Vfq6XZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnLShkxy5eZ4eI8eOR/Rm1OZjPHkjngOLhHBkiP" +
                        "0of+gtz63fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qsf8A9br9/wDN6n1Q+q56PU7LyzOfkNDXMBltT" +
                        "J3eiCPp2bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS0j+br/etd/hbf8ArVX6P+e6ZDPmhGHsYPk/T" +
                        "n1yy/71OHDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/wA93LPH/i06N/4Uq/8APWQul+suF07Owasbq" +
                        "It9GzIqYx9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1RgtOT0h9fTxUwy0uftoo2sd7rNrsp1O/f+ZZ/o0" +
                        "/DlAwiNSJrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6B1FtjQ4DGtcAfFrTYx39l7dy4DPba76ldMfy" +
                        "xmTez4Fxtcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc123+bftcqGL0vomB0p/SLLGXYjQ59rch7CdrnE" +
                        "l9n0NrW2/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCADAwv+txcTifXa/H6r0CrN6dc3Jpx7mvu2GdrX" +
                        "tfXutZ9Ova97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZAj09rr2+1v5jvoLp+m/V/oPSMm70D7+oN2Ci2" +
                        "wPBYNzjXVW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte0NL6XOZYaWWet7PZu/qf4NTY8+OMDCMpxhE8" +
                        "UcnBGWk/wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/VOvF6nX1dnVDnlm9rjAduJb6Xuu9Sz6Cx/qW" +
                        "9jekdcpLgLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDdXZYXWPLw/3ACvb+jDWN2bViiroJ6lX1Srp2Z" +
                        "ZZ1Wl5pYzYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2OYz92MjKekOGXDGH80fc4ZR9P8AWTLCIDFKI" +
                        "EPn4o3KY/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/AFCytzHVOBbscxrXu3b/AP0mpt+reNTU7P8Aq" +
                        "915tNZAJ9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC/GyWPyLH5Dmlph9NMPf7Ntu+2n0fTZ/g/8AS" +
                        "qjb9Qfq07K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzxTgJyM/lGTHOH9z9FaeXlwwHDCZjER+b28kJf" +
                        "33PxOvdQ6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RPaz9JWnx7ugN+pvTKetNeWXW3Cl9QJfW4W3b7" +
                        "w5v5tbXe/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWuGz13vJdZ29r/oJUdE6I7pY6LtblY2Mfcx7tz" +
                        "2ucTb6jns2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH7vrXjBk0uUZy9s4/V6hxcfHX+K8s76vfYKjn" +
                        "dB6/VXjkz+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOtxnhvrNG0PDhu9zR7PUZ+fs/kKkPqJ9V3N+1N" +
                        "yrTRq7cLayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx/pN2Gd27/CF5LnWbv33OS5jNjljMbOSd6TlA" +
                        "Y5QroZfpJ5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1p+qzepsdm4TQ3qDW+5mgbe0D+bfPtbc3/A3f" +
                        "9at/R/zM/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07bm/n3/8AW6f0f870CSSlJJJJKafWMSzM6bfRV" +
                        "/PFu+iTA9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppvvpNbfz2faepZFv/AKDUrpElYxe77Z4a4bld9" +
                        "+H+X+GwZfa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZuoNL/c1+6r7PXVlWbnM9Vr839Kz1rvz7LLE1f" +
                        "1enJw7bcWl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6JJSS97jntdHi4eL93Jt/z/8ADWR9rgjd8NiuK" +
                        "v3oPHv6F1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLcf7E3F/P9X1kZ/QOrF2dt2OGeM2qtz3a44ufZ" +
                        "dTbRtH81my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7Onz/ACx3/dcfoGBZjOvutptx7LW1MLLDj7f0Q" +
                        "cB6Tensqr2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9OqczK9wO0mj0Pb+/wDpFvJKA+5xT+XbWrqvan8v/" +
                        "U2UcHBC+KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCwBwFljqdvsd+9Wyz3rJb0frTn4DbqgTinBcbW" +
                        "uqiKQxuX69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8IrhqvTx33/RRk9viN8V3rw08Z0fDdbg4uRXhs" +
                        "rqxrM2+3Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9JYfRczN6Vj/ZcWvBA6YKDaHNH2g2nHv2fo2vf" +
                        "6Hp0W+o/Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn73p/fYo+3wizLh4ddI/uw/d9X/dvOYvQ3vsx7" +
                        "bsezb9t+0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0OkUZWExuEcZteMHZNjbGvbtYHZD34uO2kfmuxr" +
                        "d//AAXp+ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/o8Vv//Z/+0Y0FBob3Rvc2hvcCAzLjAAOEJJT" +
                        "QQlAAAAAAAQAAAAAAAAAAAAAAAAAAAAADhCSU0EOgAAAAAAkwAAABAAAAABAAAAAAALcHJpbnRPdXRwd" +
                        "XQAAAAFAAAAAENsclNlbnVtAAAAAENsclMAAAAAUkdCQwAAAABJbnRlZW51bQAAAABJbnRlAAAAAENsc" +
                        "m0AAAAATXBCbGJvb2wBAAAAD3ByaW50U2l4dGVlbkJpdGJvb2wAAAAAC3ByaW50ZXJOYW1lVEVYVAAAA" +
                        "AEAAAA4QklNBDsAAAAAAbIAAAAQAAAAAQAAAAAAEnByaW50T3V0cHV0T3B0aW9ucwAAABIAAAAAQ3B0b" +
                        "mJvb2wAAAAAAENsYnJib29sAAAAAABSZ3NNYm9vbAAAAAAAQ3JuQ2Jvb2wAAAAAAENudENib29sAAAAA" +
                        "ABMYmxzYm9vbAAAAAAATmd0dmJvb2wAAAAAAEVtbERib29sAAAAAABJbnRyYm9vbAAAAAAAQmNrZ09ia" +
                        "mMAAAABAAAAAAAAUkdCQwAAAAMAAAAAUmQgIGRvdWJAb+AAAAAAAAAAAABHcm4gZG91YkBv4AAAAAAAA" +
                        "AAAAEJsICBkb3ViQG/gAAAAAAAAAAAAQnJkVFVudEYjUmx0AAAAAAAAAAAAAAAAQmxkIFVudEYjUmx0A" +
                        "AAAAAAAAAAAAAAAUnNsdFVudEYjUHhsQGLAAAAAAAAAAAAKdmVjdG9yRGF0YWJvb2wBAAAAAFBnUHNlb" +
                        "nVtAAAAAFBnUHMAAAAAUGdQQwAAAABMZWZ0VW50RiNSbHQAAAAAAAAAAAAAAABUb3AgVW50RiNSbHQAA" +
                        "AAAAAAAAAAAAABTY2wgVW50RiNQcmNAWQAAAAAAADhCSU0D7QAAAAAAEACWAAAAAQACAJYAAAABAAI4Q" +
                        "klNBCYAAAAAAA4AAAAAAAAAAAAAP4AAADhCSU0EDQAAAAAABAAAAHg4QklNBBkAAAAAAAQAAAAeOEJJT" +
                        "QPzAAAAAAAJAAAAAAAAAAABADhCSU0nEAAAAAAACgABAAAAAAAAAAI4QklNA/UAAAAAAEgAL2ZmAAEAb" +
                        "GZmAAYAAAAAAAEAL2ZmAAEAoZmaAAYAAAAAAAEAMgAAAAEAWgAAAAYAAAAAAAEANQAAAAEALQAAAAYAA" +
                        "AAAAAE4QklNA/gAAAAAAHAAAP////////////////////////////8D6AAAAAD//////////////////" +
                        "///////////A+gAAAAA/////////////////////////////wPoAAAAAP///////////////////////" +
                        "/////8D6AAAOEJJTQQAAAAAAAACAAE4QklNBAIAAAAAAAQAAAAAOEJJTQQwAAAAAAACAQE4QklNBC0AA" +
                        "AAAAAYAAQAAAAM4QklNBAgAAAAAABAAAAABAAACQAAAAkAAAAAAOEJJTQQeAAAAAAAEAAAAADhCSU0EG" +
                        "gAAAAADSQAAAAYAAAAAAAAAAAAAAIEAAAFiAAAACgBVAG4AdABpAHQAbABlAGQALQAxAAAAAQAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAFiAAAAgQAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAABAAAAABAAAAAAAAbnVsbAAAAAIAAAAGYm91bmRzT2JqYwAAAAEAAAAAAABSY3QxAAAABAAAA" +
                        "ABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAAgQAAAABSZ2h0bG9uZwAAA" +
                        "WIAAAAGc2xpY2VzVmxMcwAAAAFPYmpjAAAAAQAAAAAABXNsaWNlAAAAEgAAAAdzbGljZUlEbG9uZwAAA" +
                        "AAAAAAHZ3JvdXBJRGxvbmcAAAAAAAAABm9yaWdpbmVudW0AAAAMRVNsaWNlT3JpZ2luAAAADWF1dG9HZ" +
                        "W5lcmF0ZWQAAAAAVHlwZWVudW0AAAAKRVNsaWNlVHlwZQAAAABJbWcgAAAABmJvdW5kc09iamMAAAABA" +
                        "AAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tbG9uZwAAA" +
                        "IEAAAAAUmdodGxvbmcAAAFiAAAAA3VybFRFWFQAAAABAAAAAAAAbnVsbFRFWFQAAAABAAAAAAAATXNnZ" +
                        "VRFWFQAAAABAAAAAAAGYWx0VGFnVEVYVAAAAAEAAAAAAA5jZWxsVGV4dElzSFRNTGJvb2wBAAAACGNlb" +
                        "GxUZXh0VEVYVAAAAAEAAAAAAAlob3J6QWxpZ25lbnVtAAAAD0VTbGljZUhvcnpBbGlnbgAAAAdkZWZhd" +
                        "Wx0AAAACXZlcnRBbGlnbmVudW0AAAAPRVNsaWNlVmVydEFsaWduAAAAB2RlZmF1bHQAAAALYmdDb2xvc" +
                        "lR5cGVlbnVtAAAAEUVTbGljZUJHQ29sb3JUeXBlAAAAAE5vbmUAAAAJdG9wT3V0c2V0bG9uZwAAAAAAA" +
                        "AAKbGVmdE91dHNldGxvbmcAAAAAAAAADGJvdHRvbU91dHNldGxvbmcAAAAAAAAAC3JpZ2h0T3V0c2V0b" +
                        "G9uZwAAAAAAOEJJTQQoAAAAAAAMAAAAAj/wAAAAAAAAOEJJTQQUAAAAAAAEAAAABDhCSU0EDAAAAAAQi" +
                        "gAAAAEAAACgAAAAOgAAAeAAAGzAAAAQbgAYAAH/2P/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlAGSAAAAAA" +
                        "f/bAIQADAgICAkIDAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAENCwsNDg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwM/8AAEQgAOgCgAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAA" +
                        "AMAAQIEBQYHCAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBA" +
                        "AIRAwQhEjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0" +
                        "lXiZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIEB" +
                        "AMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKygwcmN" +
                        "cLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dXZ3eHl6e3x" +
                        "//aAAwDAQACEQMRAD8A9VSSSSUpYGFkfWd31kyKsqoN6S3f6btrQ3aI9B1VgPqvts/wzH/+B/o1d+sPV" +
                        "j0jpN2axrX2t2tpY6YL3kMbu2/mtn1HIf1Y6rl9W6QzMy6212Oe9oLJDXBrtnqNa4vcz9z6af7Uvb939" +
                        "Di4P8JZ7sfc9v8ASri/wXWSSSTF6kkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklP//Q9VWf1rrWJ" +
                        "0fE9e/32PltFDT7rHfut/dY3/CWf4NN1vreJ0bE9e/32PltFDT7rHeA/dY3/CWf4Ncb0zpnUfrX1F+fn" +
                        "vLcVp22WNkCAf6Hh/usb/hbf/R/82lK+sfU8rN+q/Trspwddl5Ntzg0Q1orN1VdTP5DGOZ9JF6sOpdL6" +
                        "J9X+odPBZViU7rbRqA+8VPjIr/0NrvUb/X/ANHZ6Stf4wcGqjpXTxjsFVGPaaWVtEABzHFv/npdD0B1O" +
                        "X9XcEECyp+LXW9jgC0wwVWsc0/S+i5i0I5Bj5bBPh4gJz44nY8XFH/oNGWM5OZzRvhJhDhkNxXq/wCmw" +
                        "+r31hxet4u9n6PJrgZGOTq0/vN/fqf+Y9ay87670LO+rGa3q3SHOGIHaHVxqLj/ADF/+lxbPose7/i7P" +
                        "0vpW2dd9XvrDjdbxd7B6eTVAyKCZLSfzm/v1P8AzHqHmOXiI+9hPFhl/jY5fuyZcGeRkcWUcOWP+Lkj+" +
                        "/FL13rmJ0PB+25bXvrLxWG17Zkgu/wjq2fRY785XqrWXVMurMssaHtPk4bmrB+vHUcvpvSK8jDc1l/rt" +
                        "a2xzGvLZZaS6sWh7Gv9uz6P0Fk9T6z9ZX9XwundNyhW/KxarA1zK9peW2WWuL31P2+2tNx8rPJESEoxB" +
                        "4vmP+b+a12TmYQkYkSlIcOkR+/8r26yuu/WDF6HXRZlV2WMveWTWGnbA3Fzg9zP+iubyOsfXToThb1dj" +
                        "cvDs9rnsDBtJ/0dtLGenb+569PpPWX9aH9XuxcfKysxud0u9xfg2bWMsgt3fpmU117bGN/RWfy/9GpsP" +
                        "JXkjxyhLHLrCXz/ANWP9Zizc5WORjGQnHpKPy/1pf1X01JcrV1P6w9Cw8rN+sdteSz2MxKa9oe607vbv" +
                        "rrqayvb9Pf6n0P+3KOPb/jC6pj/ALQx7a8ep4300Qxm5vb0m3V3P2u/M+02s/zFEOUkbPuYxAHh9wy9E" +
                        "pdosh5kChwTMyOLgA9cY95PcLlfqh9Yc/qGN1LL6lYHsxiHtaxgaGM2vse1u33v+j+ej/Vf6y5PUbrem" +
                        "dTq9DqOMJIALQ9rSGvlhnZazc3d+Y/+cqWL9RbDX0jrVga15YzcGvEtMV2Ha9v5zE+OAxxZ4zA4x7XDL" +
                        "f55bxl/WWSziWTAYk8BGTiH9yP6Uf6r1nQut4nXMH7biNexgea3Ns27g5sH/BusZ9Fzfz1oriOn/W3qG" +
                        "N9VH9RySMrLdlHGolrWMH6NtjfUZQKvYxrbP5f5iWOz/GFm4reoU5lQa8bq6QapIPG0Cmyn/ty9N+5zF" +
                        "8c4QAlwcUjpKX9Vd97ga4YzmSOOojWMfF6/PzacDCvzb59LHY6x4aJMNG72zCH0nqdHVun09Qxw5tV0w" +
                        "10SC1zqntOwvZ9Nn7ywq+r9dt+rfU7eqYYx8rDY4V2WM9lhA/nPQs3sd6bvz/6PZ/g1Us+t2fhfVbBy";
                    resourceString += "nxkdRznXNFr2gNArse11jq6vTa52z02MZ/1xNHKZCaHCfX7ehvXh9zi/u8K481jAs2PT7mo6cXB/jcT2i" +
                        "S4puP8A4xnUNzGZdVhcARQ00kkH/rP2b/2YXQ/V3P6ln9O9bqeKcTJa9zC0tczeBEWiqz31/S2f2E3Jy" +
                        "5hHiE4TANHglqE48/GeEwnCxY4xoX//0ez+tf1ZPVWjNxDGfSzYGOPtsrBL/R93tqs3O/RWf2Lv9JTmf" +
                        "VP6z+gWdH6l+iDD6WPa4bC1wOz7Jkt9uyxrvZXZ/wBbt/S/zvarm/rV9VWdUY7Mw2tbntbD2GA29oEen" +
                        "ZPtbc1v81b/ANat/R/zKU3vrR0x3U+iZOPW3de0C2gcnfWd4a3/AIxu6r/rixP8XnV2W4tnSbHfpKSbs" +
                        "cHvW8zY0f8AFXO/8GUfqp9aHse3pHVXODg70se6yQ4OB2fZMnd7vV3eyp7/APirP0n87n/WHoNwzn9V+" +
                        "rpdkVPsey5uI6X03615DW+md+y3c71P9H/xKuctKGTHLl5nh4jx45H9GbU5mM8eSOeA4uEcGSI/Sh/6C" +
                        "3Prd9azc5/RekzY6w+jkWsG4uLvYcXHaPpvf9Cx/wD1uv3/AM3qfVD6rno9TsvLM5+Q0NcwGW1Mnd6II" +
                        "+nZu/nbP+2v9JbD6p/VJnSWNzc1rX9Qc2GtEFtLSP5uv9613+Ft/wCtVfo/57pkM+aEYexg+T9OfXLL/" +
                        "vU4cMpT9/N8/wChDpij/wB88p/jI/5Bq/8ADLf/AD3cs8f+LTo3/hSr/wA9ZC6X6y4XTs7Bqxuoi30bM" +
                        "ipjH06Ftjz6NTnH/RudZ6X0f8IqLmfV49TPVGC05PSH19PFTDLS5+2ijax3us2uynU79/5ln+jT8OUDC" +
                        "I1ImssdBpeXhjBZlxE5jKxvjl4/q/VJ0vrHWyzoHUW2NDgMa1wB8WtNjHf2Xt3LgM9trvqV0x/LGZN7P" +
                        "gXG1zB+D16Tc3Ez6MnDL22Me11OQ1jhubvG1zXbf5t+1yoYvS+iYHSn9IssZdiNDn2tyHsJ2ucSX2fQ2" +
                        "tbb9B/76Zy+cYogEEyGQT4f6vDKBX8xh9yRIIAMDC/63FxOJ9dr8fqvQKs3p1zcmnHua+7YZ2te19e61" +
                        "n069r3s9j2rP6Z0nE6hiMvb9Y7aXbQLKLH7XVkCPT2uvb7W/mO+gun6b9X+g9IybvQPv6g3YKLbA8Fg3" +
                        "ONdVb/dYz3e7f6qy2fVD6r9SsstqF2JtutxxS17Q0vpc5lhpZZ63s9m7+p/g1Njz44wMIynGETxRycEZ" +
                        "aT/AEZRl/0mLJhnKfGRGUpDhlDjlH5f0oyim6H9U68XqdfV2dUOeWb2uMB24lvpe671LPoLH+pb2N6R1" +
                        "ykuAt9Iu9M87Qyxhd/n+1dZ9XukdL6Vi219NsN1dlhdY8vD/cAK9v6MNY3ZtWKKugnqVfVKunZllnVaX" +
                        "mljNgrs9av1sl7Weux9d3ou/SbnMZ/o/wBL+kTY5jP3YyMp6Q4ZcMYfzR9zhlH0/wBZMsIgMUogQ+fij" +
                        "cpj9cODi4vU5nQ7+jU/Uy39sVutxrM0sY2sEv8AULK3MdU4FuxzGte7dv8A/Sam36t41NTs/wCr3Xm01" +
                        "kAn1LPTj879PdSWbf8Ai7sVdDjdM6F0zG/5v2ML8bJY/IsfkOaWmH00w9/s2277afR9Nn+D/wBKqNv1B" +
                        "+rTsr0/XurtfLmY4tYTtH7nq12X7P7aeOYhxTPFOAnIz+UZMc4f3P0Vp5eXDAcMJmMRH5vbyQl/fc/E6" +
                        "91Dqf1f63iZzm3vxKCW5LAAHB29sO2Btbv5v9E9rP0lafHu6A36m9Mp6015ZdbcKX1Al9bhbdvvDm/m1" +
                        "td7/wCc3/6GxdLR0boNPT7+kY4Yyq+sm8NfNha4bPXe8l1nb2v+glR0Tojuljou1uVjYx9zHu3Pa5xNv" +
                        "qOeza+q13qOd7PTUZ5jFrwxnCPuDJUPQRHg4OIfu+teMGTS5RnL2zj9XqHFx8df4ryzvq99gqOd0Hr9V" +
                        "eOTP6S0Vt/65ZUXUWu/4zGW79S+u5vWMK77aA63GeG+s0bQ8OG73NHs9Rn5+z+QqQ+on1Xc37U3KtNGr" +
                        "twtrLIbO/8AS+nu2s2+79Kul6dg4GBito6fW2rH+k3YZ3bv8IXkudZu/fc5LmM2OWMxs5J3pOUBjlCuh" +
                        "l+knl8OSOQHTHCtYRmZxnfYfov/0vVUkkklPOfWn6rN6mx2bhNDeoNb7maBt7QP5t8+1tzf8Dd/1q39H" +
                        "/Mz+qf1cf0il2RkuP2zJaBZU1x9Oto+jXtafTtub+ff/wBbp/R/zvQJJKUkkkkpp9YxLMzpt9FX88W76" +
                        "JMD1ayLsf3f8fXWsejoGcMzBusLNprN2fwYymm++k1t/PZ9p6lkW/8AoNSukSVjF7vtnhrhuV334f5f4" +
                        "bBl9rjHFfFQ27cTz31b6Pk4NlZyqrGW4+P9mNm6g0v9zX7qvs9dWVZucz1Wvzf0rPWu/PsssTV/V6cnD" +
                        "ttxaXbMzNvyXENJLLnZDsYu0/SfTxvb/g/+tLoklJL3uOe10eLh4v3cm3/P/wANZH2uCN3w2K4q/eg8e" +
                        "/oXWvsGNhir3U00tre11UMfVe+9zbb7GnK2V0tx/sTcX8/1fWRn9A6sXZ23Y4Z4zaq3Pdrji59l1NtG0" +
                        "fzWbLWZv+H9T0P8HV6bOqSUh9/X+b+aV1+8sHs6fP8ALHf91x+gYFmM6+62m3HstbUwssOPt/RBwHpN6" +
                        "eyqvazf6XqWt9V9bKv9Gg4fSs6pn1fFjAD06pzMr3A7SaPQ9v7/AOkW8koD7nFP5dtauq9qfy/9TZRwc" +
                        "EL4qsVdcV+7D5v8Nyuo9K+29RZbbTXfjsxL6gLAHAWWOp2+x371bLPeslvR+tOfgNuqBOKcFxta6qIpD" +
                        "G5fr2uY7Nuyt3rsr9Oz7L9nf/pPUrt6tJOxe7wiuGq9PHff9FGT2+I3xXevDTxnR8N1uDi5FeGyurGsz" +
                        "b7c6WbrGuGVj+g1rf0znPfYx13q/odmNX/Oez0lh9FzM3pWP9lxa8EDpgoNoc0faDace/Z+ja9/oenRb" +
                        "6j8lu/1Mt/6C2v1fV7NJTH3eI0I8XFprP8Aeyfven99ij7fCLMuHh10j+7D931f9285i9De+zHtux7Nv" +
                        "237RkVZRocIbi241d1dWE1uN/PPpZ/pf0XqrQ6RRlYTG4Rxm14wdk2Nsa9u1gdkPfi47aR+a7Gt3/8AB" +
                        "en6S00lXze5R4+Hh0quLh/T4eFnxcGnDxXrvw3+jxW//9k4QklNBCEAAAAAAFUAAAABAQAAAA8AQQBkA" +
                        "G8AYgBlACAAUABoAG8AdABvAHMAaABvAHAAAAATAEEAZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwA" +
                        "CAAQwBTADUAAAABADhCSU0EBgAAAAAABwAHAAAAAQEA/+EN0Gh0dHA6Ly9ucy5hZG9iZS5jb20veGFwL" +
                        "zEuMC8APD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4NC" +
                        "jx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlI" +
                        "DUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4NCgk8cmRmOlJER" +
                        "iB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPg0KC" +
                        "Qk8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb" +
                        "20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4b" +
                        "WxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjI" +
                        "iB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnBob3Rvc2hvc" +
                        "D0iaHR0cDovL25zLmFkb2JlLmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZ" +
                        "SBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHhtcDpDcmVhdGVEYXRlPSIyMDExLTAxLTE4VDA5OjUxOjA2L" +
                        "TA2OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiB4bXA6TW9ka" +
                        "WZ5RGF0ZT0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZ" +
                        "DozNDRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5OCIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZ" +
                        "DozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5OCIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEP" +
                        "SJ4bXAuZGlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBkYzpmb3JtYXQ9ImltYWdlL" +
                        "2pwZWciIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJzUkdCIElFQ" +
                        "zYxOTY2LTIuMSI+DQoJCQk8eG1wTU06SGlzdG9yeT4NCgkJCQk8cmRmOlNlcT4NCgkJCQkJPHJkZjpsa" +
                        "SBzdEV2dDphY3Rpb249ImNyZWF0ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6MzM0QzA5QUIxQ" +
                        "TIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHN0RXZ0OndoZW49IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6M" +
                        "DAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyIvPg0KCQkJC" +
                        "Qk8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6MzQ0Q" +
                        "zA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHN0RXZ0OndoZW49IjIwMTEtMDEtMThUMDk6NTE6M" +
                        "DYtMDY6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyIgc" +
                        "3RFdnQ6Y2hhbmdlZD0iLyIvPg0KCQkJCTwvcmRmOlNlcT4NCgkJCTwveG1wTU06SGlzdG9yeT4NCgkJP" +
                        "C9yZGY6RGVzY3JpcHRpb24+DQoJPC9yZGY6UkRGPg0KPC94OnhtcG1ldGE+DQogICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgPD94cGFja2V0IGVuZD0ndyc/Pv/iDFhJQ0NfUFJPRklMRQABAQAADEhMaW5vAhAAA" +
                        "G1udHJSR0IgWFlaIAfOAAIACQAGADEAAGFjc3BNU0ZUAAAAAElFQyBzUkdCAAAAAAAAAAAAAAABAAD21" +
                        "gABAAAAANMtSFAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE" +
                        "WNwcnQAAAFQAAAAM2Rlc2MAAAGEAAAAbHd0cHQAAAHwAAAAFGJrcHQAAAIEAAAAFHJYWVoAAAIYAAAAF" +
                        "GdYWVoAAAIsAAAAFGJYWVoAAAJAAAAAFGRtbmQAAAJUAAAAcGRtZGQAAALEAAAAiHZ1ZWQAAANMAAAAh" +
                        "nZpZXcAAAPUAAAAJGx1bWkAAAP4AAAAFG1lYXMAAAQMAAAAJHRlY2gAAAQwAAAADHJUUkMAAAQ8AAAID" +
                        "GdUUkMAAAQ8AAAIDGJUUkMAAAQ8AAAIDHRleHQAAAAAQ29weXJpZ2h0IChjKSAxOTk4IEhld2xldHQtU" +
                        "GFja2FyZCBDb21wYW55AABkZXNjAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAEnNSR" +
                        "0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAABYWVogAAAAAAAA81EAAQAAAAEWzFhZWiAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAG+iAAA49" +
                        "QAAA5BYWVogAAAAAAAAYpkAALeFAAAY2lhZWiAAAAAAAAAkoAAAD4QAALbPZGVzYwAAAAAAAAAWSUVDI" +
                        "Gh0dHA6Ly93d3cuaWVjLmNoAAAAAAAAAAAAAAAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALklFQyA2MTk2Ni0yL" +
                        "jEgRGVmYXVsdCBSR0IgY29sb3VyIHNwYWNlIC0gc1JHQgAAAAAAAAAAAAAALklFQyA2MTk2Ni0yLjEgR" +
                        "GVmYXVsdCBSR0IgY29sb3VyIHNwYWNlIC0gc1JHQgAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjAAAAA" +
                        "AAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAsU" +
                        "mVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAdmlldwAAAAAAE6T+ABRfLgAQzxQAA+3MAAQTCwADXJ4AAAABWFlaIAAAAAAATAlWAFAAA" +
                        "ABXH+dtZWFzAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAACjwAAAAJzaWcgAAAAAENSVCBjdXJ2AAAAA" +
                        "AAABAAAAAAFAAoADwAUABkAHgAjACgALQAyADcAOwBAAEUASgBPAFQAWQBeAGMAaABtAHIAdwB8AIEAh" +
                        "gCLAJAAlQCaAJ8ApACpAK4AsgC3ALwAwQDGAMsA0ADVANsA4ADlAOsA8AD2APsBAQEHAQ0BEwEZAR8BJ" +
                        "QErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGpAbEBuQHBAckB0QHZAeEB6QHyAfoCA" +
                        "wIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2AsECywLVAuAC6wL1AwADCwMWAyEDL" +
                        "QM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kEBgQTBCAELQQ7BEgEVQRjBHEEfgSMBJoEq" +
                        "AS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWWBaYFtQXFBdUF5QX2BgYGFgYnBjcGSAZZBmoGe" +
                        "waMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdhB3QHhgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIbgiCCJYIq" +
                        "gi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK8wsLCyILO" +
                        "QtRC2kLgAuYC7ALyAvhC/kMEgwqDEMMXAx1DI4MpwzADNkM8w0NDSYNQA1aDXQNjg2pDcMN3g34DhMOL" +
                        "g5JDmQOfw6bDrYO0g7uDwkPJQ9BD14Peg+WD7MPzw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0Rj" +
                        "BGqEckR6BIHEiYSRRJkEoQSoxLDEuMTAxMjE0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVV" +
                        "hV4FZsVvRXgFgMWJhZJFmwWjxayFtYW+hcdF0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZIBlFGWsZk" +
                        "Rm3Gd0aBBoqGlEadxqeGsUa7BsUGzsbYxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQ" +
                        "B5qHpQevh7pHxMfPh9pH5Qfvx/qIBUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZ" +
                        "iOUI8Ij8CQfJE0kfCSrJNolCSU4JWgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpB" +
                        "ik4KWspnSnQKgIqNSpoKpsqzysCKzYraSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4vJ" +
                        "C9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1EzVNNYc1w" +
                        "jX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8JzxlPKQ84" +
                        "z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6Q31DwEQDREdEi" +
                        "kTORRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRLDEtTS5pL4kwqTHJMu" +
                        "k0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIxUnxSx1MTU19TqlP2VEJUj1TbVShVd" +
                        "VXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbhaB1pWWqZa9VtFW5Vb5Vw1XIZc1l0nXXhdyV4aXmxev" +
                        "V8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTpZT1lkmXnZj1mkmboZz1nk2fpaD9ol" +
                        "mjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4SbmtuxG8eb3hv0XArcIZw4HE6cZVx8HJLcqZzA" +
                        "XNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjMeSp5iXnnekZ6pXsEe2N7wnwhfIF84X1BfaF+A" +
                        "X5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eDuoQdhICE44VHhauGDoZyhteHO4efiASIaYjOiTOJm" +
                        "Yn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7OjzaPnpAGkG6Q1pE/kaiSEZJ6kuOTTZO2lCCUipT0lV+Vy" +
                        "ZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR6G2oiail" +
                        "qMGo3aj5qRWpMelOKWpphqmi6b9p26n4KhSqMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwA" +
                        "LB1sOqxYLHWskuywrM4s660JbSctRO1irYBtnm28Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++C" +
                        "r6Evv+/er/1wHDA7MFnwePCX8Lbw1jD1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMt" +
                        "c01zbXONs62zzfPuNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcB" +
                        "dyK3RDdlt4c3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr+" +
                        "+yG7RHtnO4o7rTvQO/M8Fjw5fFy8f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8m" +
                        "P0p/br+S/7c/23////bAEMAAQEBAQEBAQEBAQIBAQECAgEBAQECAgICAgICAgMCAwMDAwIDAwQEBAQEA" +
                        "wUFBQUFBQcHBwcHCAgICAgICAgICP/bAEMBAQEBAgICBAMDBAcFBAUHCAgICAgICAgICAgICAgICAgIC" +
                        "AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICP/AABEIAIEBYgMBEQACEQEDEQH/xAAfAAABBQEBA" +
                        "QEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHI" +
                        "nEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZ" +
                        "mdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1" +
                        "dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/x" +
                        "AC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04" +
                        "SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk" +
                        "5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+" +
                        "fr/2gAMAwEAAhEDEQA/AP7+KACgAoAKACgAoAa7pGjySOI44wXkkcgKqgZJJPQCgD8VvGX/AAXQ/ZW8L" +
                        "/Em78G6X4S8TeMvCOmXT6Vf/Enw/Dp32OUo5Qz2dvcXMcs0GeQ7bCRkqpGMxzo0VJn7B+CfGnhf4j+EP" +
                        "DXj3wTrEXiDwl4vsrfxD4d1qyJ8u4tLqMSxuAwDKcHlWAKnIIBBFWZtHUUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQBg+KtB" +
                        "h8VeGPEfhe4uXs7fxJYXmgz3drjzYkvLd7dnTdxuUPkZ70AfxE+M/8Aglx+294U+JN78ObL4Gar4v2XR" +
                        "sdI8aeGVil0G9gaQrFcC+kdIYEdRuKzsjJnDhTWPKzqVRH9gn7IXwV1T9nb9mn4PfBjXdTj1fXfA2kpZ" +
                        "a9fWZLQG+uZ5L64SFmVC0Ucs7JGxUEqASAeK1SOeTuz6QpkhQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAB" +
                        "QAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAf56/wDwUQ/ax8Z/tU/tR/E/xbdeL73VPh34c1u+0D4QaIbiUWNho2n3BtLaa3gDFI5LhYhNK" +
                        "45LMecAY/2g8FfDrC8PcP4eiqSjXnBSqu2rlJXab3ajflS2SR/il43eI+K4i4hxFZ1XKhCbjSV9Iwi7J" +
                        "pbJytzN73Z/U/8A8EOPi58U/i9+xH9s+KmvXnii78EeLNW+H/g7X/EEs1xeT6Haadpt5Csk87M8ohmu5" +
                        "oUJPyoioOFr/Pn6WXDeX5bxXy4SCgqlKM5KNklNymnZLRXUU33bb6n+h30SOJcxzPhPmxc3N06soQlK7" +
                        "bgowau3q7OTS7JJdD9ia/mU/p8KACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgA" +
                        "oAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAILq6trK2uL29uEtLO0R7q7u7p1jiiijUuzuzkBVUA" +
                        "kknAFAHyx+118bNP+GP7G3xy+OHhrWIbmHTvBWo6/4I12ylVoJ7vUrAwaXLHIpwyyTXERUjqDxX3vhbw" +
                        "8s24jwWEavGdWPN/hTvL/yVM+A8VeInlPDeOxadpU6UuX/E1aP/AJM0f5ytf7gn+GJ/dv8AA/VbP/gnx" +
                        "/wSQ8I+O30aG41n4e+AF+J11o2ob40uvEniY/2rHbXLrh8fbdRSBiDkKMLwBX+RfFmHlxn4kVcPzNRq1" +
                        "/Z3XSnT91tdPhi5Lz3P9f8AhLEQ4K8NaWI5E50qHtLPrUqe8k+vxzUX5bH09+xV+2r8Jv23vhNafEX4d" +
                        "XY03X9NEWn/ABE+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurovwPin4WZjwpmLw2JV4O7hNL3Zx7rs1" +
                        "9qO6fdNN/oHhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAQXV1bWVtcXt7cJaWd" +
                        "oj3V3d3TrHFFFGpdndnICqoBJJOAKAP5SP+CnP/AAU61L9oDVdQ/Zr/AGb9XeH4StcDQ/F/jTT5PJl8W" +
                        "3JkEX2aByV26cG4JJHnnk/u/v5SkbwhbVn6Sf8ABa7VYfhn/wAE1fEHgbS5jBZa/qXg/wCGtsMHc9vY3" +
                        "sWphc7WxldMGeRkcZOcH+nPok5YsRxpRm1/ChUl/wCS8n/t39bn8u/S7zR4fgqtBO3tZ04/+Tc//tv9b" +
                        "H8Wnw48JS+PviH4D8Cws6zeNdZ0vwlE0GN4bUr6KzBXIIzmTjiv9U88zJYPBVsQ9qcJS/8AAU3+h/lDk" +
                        "eWvG42jh1vUnGP/AIE0v1P7Qf8Agu3rWo+FP+Ce+peHtA0+4Oj+J/E/hfwhrQ02OV4LXTraSbVY2nKBg" +
                        "kXn2EKBmIG9kGckA/5c/RFwsMRxpGpUkuaFOpJX3cnaLt3dpSenRN7H+qH0v8XUw3BUqdOL5Z1acXbZR" +
                        "V5K/ZXjFa9WlvY/kR/Zh/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQ" +
                        "q6qw/0m4+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR/mj4f+IGZcNZlDG4KdprRp/DOPWMl1T+9OzTTS" +
                        "Z/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ABE+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurov+QPin" +
                        "4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/7E+FPitlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6c" +
                        "FABQAUAcp448c+D/hp4T1zx34+8R2nhLwf4ah/tDXfEWuSrBbW0W4Rgszd2ZgqqOWYgAEkCgEjyP4Dft" +
                        "X/s8/tOQa5N8DPihZePX8Nsia7YW8N7Y3tssjMiSPa6nBbTeWxUhZAm044NJO43Fo+h6YgoAKACgAoA+" +
                        "BvEf/BUL9hDwf8AFXXPgr4s/aBtPDXxG8NapN4M1/Sde0bxLaWlpqNvMYJI5dRn05bJVVxgyGfZ33Yr9" +
                        "iwPgDxficuhjqOCc6E4qcWpU23Fq6aip8+3Tlv5H41jvpBcH4XMZ4GtjVCvCThJOFRJSTs05uHJv15re" +
                        "Z96xSxTxRTwSrNBMqywzRMGR0YZDKRwQR0Nfj8otOz3P2OMk1dapklSUFABQAUAFAHxT/wUY+KvjL4J/" +
                        "sSftE/Er4fao+h+M9A0NbXQNbtiVmsptSv7fSjcQsPuyxLcl427MAe1fqngjw9hc14rwWFxMealKd5Lo" +
                        "1FOVn5O1n5H5T448RYrKeE8disNLlqxhaL6pyko3Xmr3XmfyE/8ErfiF4+8Wf8ABR79nC68U+ONY8S3O" +
                        "q6tqkuqXHiDU728kuW/4RzUDmVrmRy54HLZr/Sj6QmTYPDcD45UqUIKMY25YpW9+O1lof5nfR3zrGYnj" +
                        "rAutWnNynK/NJu/7uW93qf3ca3rejeGtG1XxF4i1W20LQNCtptY1vW9YmjtrSztLaMzSzTSzFUSNEUsz" +
                        "MQABk1/kGf7Dnzx8Ef2y/2Y/wBo7X9b8K/Bb4vad448SeHo2vNT0S3ivrO58hHWNpoU1GC3M8SsyhpIt" +
                        "ygkZPIpJplOLR9N0yQoAKACgAoA+XfjN+2p+y3+z34s0jwN8YvjLpngvxbrSR3NpoVxHe3c8UMudklz/" +
                        "Z8E4to22na85RT2NJtFKLZ9L6fqFhq1hZarpV7Dqel6nDHqGm6lp8iTQXEEyCSOSOSMlXR1IKsCQQcim" +
                        "SW6ACgAoAKACgAoAKACgCC6uraytri9vbhLSztEe6u7u6dY4ooo1Ls7s5AVVAJJJwBQB/J//wAFRv8Ag" +
                        "qNc/HC51v8AZ7/Z71t7T4NWjtp/jnxzp7NHL4rljbDQQMMFdOUjk9Zzyf3eA+UpHRTp2Pya/Zu8AeJ/i" +
                        "d8ePhN4L8I+Gp/Fusarr2ludF0+LzS9rBeRz3DyZwqxRxIzyOxCqoJJAFSi5PQ/pI/4OHp54f2J/hvHF" +
                        "M8Ud18T9EguUjYqJEHhbxFKFYDqNyK2D3APav7E+hXBPiqvdbYaf/pykfxj9NqbXClBJ74mH/puqfy0f" +
                        "sTW0F5+2Z+yPaXUK3FrdfE7wFbXMEoDI8b+KrFWVgeoIODX+gnirNx4XzJp2aw1b/03I/z08J4KXFOWJ" +
                        "q6eJo/+nIn+iv4w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoUeORHBBBB/DqOa/xMyzM8R" +
                        "gsRCvQm4VINOMk7NNbNM/3AzPLMPjcPOhXgp0ppqUWrpp7po/iJ/wCCof8AwS88U/sWeKbj4kfDe3uvF" +
                        "P7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/8AVvwB8fsPxTh1hsS1DHwWq2VRL7UfP+aPT" +
                        "dabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/wAWdD+L/wAINcOm63pp+yazo" +
                        "13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD9h4+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR+N+H/iBmX" +
                        "DWZQxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/xE+HeoSo+o6BqLoT5" +
                        "cmAvmQSbWME4ULIoPCurov+QPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/7E+FPitlvFuWrE4Z2mr" +
                        "KcG/ehLs+6f2ZbNdmml9h1+Zn6cFABQB+X3/BXfwN42+Jf7IU/gP4eeHL3xd4u8T+KfDun6T4c8PwvPc" +
                        "3TCeSYgIn8KhC7MeFALEgDNTPYum9T4A/4JOfsJftc/s0/tMap8QvjJ8LpPAvgfVPCeqeGn1Ia94dvvN" +
                        "urm+sLqGF7fStQuZufILfMmAV5IOKmMWmXUmmj+kCtDEKACgAoAKAP87T/gol/yfX+1p/2PviP/ANOMl" +
                        "f7XeCn/ACSOW/8AXin/AOko/wARPG7/AJK/Mv8Ar/U/9KZ/dd+xNc3F5+xl+yPeXk73V3dfDHwDc3V1c" +
                        "uzySSP4VsWZmZiSWJOST1r/ACO8VYRjxRmSSslia3/pyR/r54UVJS4WyyUndvDUf/TcT6dr4I+/CgAoA" +
                        "KACgD84v+CuP/KOj9p7/sFaX/6kenV+4fRu/wCS3wH+KX/puZ+GfSV/5IfMP8Mf/TkD+SH/AIJHf8pF/" +
                        "wBmH/sK6p/6jmo1/o99JH/kiMf/AIY/+nIH+bH0av8AkuMv/wAUv/Tcz+xT/gpXoniHxL+xB8efDnhPS" +
                        "7vW/Emv2ek6Joui6FFLPeXk914hsIFgijgBd2k3bdoHOcV/jfLY/wBnIbn4mf8ABNX/AIJ6ftnfA79sD" +
                        "4NfF/4mfB+bwb8ONHi18+I9Zn13w3LJFFqHhfUbK3WWzs9RluTuuJogV8olTgsAASIjF3NZzTR/U1Wpg" +
                        "FABQAUAFAH8j/7b37DX7Wv7TX7bf7S3jL4O/B+/8Y+F7XVtN0xfEl/faVpNnM9v4e0+Ix282u3dms3l4" +
                        "CsIi23GDjGKylFtnRGSSP6P/wBir4f+OfhT+yn8C/hx8StMbRfHPgzQbfQfEWkS3Vtem2lgd1WLzrOWe" +
                        "JwqbQNjkAcDpWkdjGT1PqGmSFABQAUAFABQAUAQXV1bWVtcXt7cJaWdoj3V3d3TrHFFFGpdndnICqoBJ" +
                        "JOAKAP5P/8AgqN/wVGufjhc63+z3+z3rb2nwatHbT/HPjnT2aOXxXLG2GggYYK6cpHJ6znk/u8B8pSOi" +
                        "nTsfjZ8Lvhd48+NHjzw38M/hn4bn8V+NPFc40/R9H08DLHG55JHbCxxRqC8kjkKigsxAFQkaN2P7Uf2A" +
                        "f2AfAf7FPgPe/keK/jV4rgjX4g/EFYzhRkSf2fp/mANHaRsBk4DSsA7gYRE2jGxzTnc+Pf+DgvQ5tW/Y" +
                        "a8MX8W7Z4Y+Iega5c7FBGyTRtZ00biSMDddjn1wK/rb6GeLVPi2pF/boTX/AJNTl/7afyH9NPCOpwjTk" +
                        "vsYiD/8kqR/9uP5Lv2VPEcXg/8Aah/Zu8WzukUHhbx94P8AEc0lyGaNUsfENpckuEIJUBOcHNf6NeIeB" +
                        "eJ4fx1FbzoVY/fCSP8AN3w6xywvEGArPaFelL7pxZ/pOV/hif7tnN+MPB/hb4geFtf8E+NtAtfFPhHxT" +
                        "azaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmu7LMzxGCxEK9CbhUg04yTs01s0zhzPLMPjcPOhXgp0ppqUWr" +
                        "pp7po/iJ/4Kh/8ABLzxT+xZ4puPiR8N7e68U/s0eKbry9H1iTfPdeGLqd/k07UX5JjJOLe4P3/uP+8wX" +
                        "/1b8AfH7D8U4dYbEtQx8FqtlUS+1Hz/AJo9N1pt/k19IL6PuI4UxDxWFTngJvR7um39ifl/LLrs9d/gf" +
                        "9mH9p74s/sj/FnQ/i/8INcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD9h4+4By7iTLp4" +
                        "PGQvB6pr4oy6Si+jX3NaO6bR+N+H/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TW" +
                        "nxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS9" +
                        "2ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQB+e3/BUH9pzx/wDsl" +
                        "fsgeN/iv8LVtovH0t7pfg/w5q2qwpcw6dLqdz5b3XkShkleONW8tXBTeQWDKCrftHgDwFg+I+JaWExd/" +
                        "Y2lKSTs5cq+G61SbtdrW17NPVfin0geP8bw3wzWxmEt7a8YxbV1HmfxWejaV7J6XtdNaP8AGv8A4I3ft" +
                        "5ftb/tI/tcaj8PPjd8aL7x94Nh8H6z4ii0LULLSLeMXtte6fFFLusbSB8qszjG7HPSv6d+k74QcN5Fw3" +
                        "HE4HCqlVdWMbpyejUrrWTXRH8u/Rd8YuJc94llhsfipVaSozlZqK1Tik9Ip9WeAf8FIf+CkP7bXwW/ba" +
                        "+Pnww+GHx81Dwl4D8Jahp9n4d8O2en6HNHaxzaHZXTqr3VlLIcySs3zMetfZeB3gdwpmvCmDxWKwcala" +
                        "pGTlJymr2nJdJJbJdD4zx08dOLMq4sxmEwmMlTo05RUYqMHa8IvrFvdvqfEH/D3H/gov/0c9qv/AIK/D" +
                        "n/yur9X/wCJbuCP+gCP/gVT/wCTPyX/AImV44/6GEv/AAGn/wDIHoHw/wD+C1v/AAUP8DatDf6h8YbT4" +
                        "jacj+dP4b+IHh/RZrSY8DDS6Zb2N0o46JOv514+c/RX4KxdNxjhnSl/NCc018pOUfviz2cl+lbxvg6il" +
                        "LFKtH+WcINP5xUZfdJH7sfsy/8ABVTwL/wUE8K3XwEvPHGo/sZ/tRa3GF8C+J/DsthqGmajqMaEILJtW" +
                        "geOQu337GdA7KcRTM43L/I3Hn0esXwZiFmEaUcwy+PxxknGUY9ebld1bpOLsnrKKWj/AK/4B+kTg+NMO" +
                        "8ulWll+YSXuSi4yjKXTl5lZ3605K7WkZN6r8bv2o/21f+Cs37I3xj8SfBj4rftGanba1oxF5o+tWWleH" +
                        "jYazpcrstvf2bvpoLQyhD1AZWDIwDKwH9O+H/hX4c8SZZTxuEwMXCWjTlO8ZLeMvf3X3NWa0aP5d8QvF" +
                        "bxI4azSpgcZjpKcdU1GFpRe0o+5s/vTunqmfkR488deLPid4z8T/EPx3rL+IfGXjO9uPEfifXblIY5Lu" +
                        "9upDLLKywJGgLMScKoHtX9JZRlGGwGFp4bDx5KVNKMVrolstbs/mjOM3xOYYqpicRLnq1JOUnpq3q3pZ" +
                        "fcfZvg7/gqH+3p8P/CHhXwH4P8A2itS0Twj4J02x8I+FtFg03QJEs9O021SztoFaawd2EcUaqCzEnHJJ" +
                        "r8vzPwA4PxuJqYitgYyqVJOUnzT1lJ3b0lbVu+h+pZX9ILjHBYanh6GOlGlTioxXLDSMVZLWN9Eran9b" +
                        "n/BI79qr4s/tb/slH4hfGwx3fjPwn4j1P4dzeLIbWOyGt2tjY2N8l88UCRwh83jQuYlCFoycA5Ff5w/S" +
                        "Q8PMu4b4j+rYG6pTpxny3vyNuS5bu7t7t1fWz9D/Sf6NXiLmXEvDf1nH2dWnUlDmtbnSUXzWVlf3nF2V" +
                        "rx73Pz2/bz/AOC8Gn/DzxDrnwo/Y70jT/Gmt6O8ml6/8afE6vc6PDcKpR00q0idPtLRsf8Aj4lYRblIW" +
                        "OVCHr9o8IPohzxtGGLzqUqcJaxpR0k1/flry3/lXvWesovQ/FPGL6YMMDXng8ljGpOOkqstYp/3I6c1v" +
                        "5n7t1pGS1Pwl8Vf8FP/ANv7xjqcurar+1R4qsbmUs5g8K3UOh2o3Y4W30aK1iAGOPl/rX9c5d4B8G4Wn" +
                        "yQy+k1/eTm/vk2/xP5AzH6QHGeKqc88xqp/3WoL7oKK/A9++A3/AAWv/bo+DmrWJ8VePYfjn4RidBfeF" +
                        "/ihawSzvF91/K1KzSG7SQj7rSPIoIBKHkH47jD6K3CWZ037Ki8NU6Spt2+cHeNvRJ+aPtODvpXcX5XUX" +
                        "tqyxNLrGolf5TVpJ+ra8mf1jfsO/t7/AAZ/bq8AXPib4fSv4c8a+HBFD4/+F+uTRvqWkyyj5ZFZAouLW" +
                        "QgiOdVAOCGVGBUf50+LHg9mnCOMVLE+/Sn8FRL3ZeXlJdYv5NrU/wBHfCTxkyvi/BOrhvcqwtz02/ei+" +
                        "/8Aei+kkvVJ6HB/8Fcf+UdH7T3/AGCtL/8AUj06vY+jd/yW+A/xS/8ATczx/pK/8kPmH+GP/pyB/JD/A" +
                        "MEjv+Ui/wCzD/2FdU/9RzUa/wBHvpI/8kRj/wDDH/05A/zY+jV/yXGX/wCKX/puZ/ab+3J8dPEn7NX7J" +
                        "vxv+N3g6xt9Q8V+BdJW58OQasrPbLe3t7BpsMsqKQXWJrgSFMjdtxkZzX+WvhNwlQz3iPCYGs2qdWXvW" +
                        "3sk5NLte1r9L3P9VPFzi+vkPDeLx9FJ1KUPdvtdtRTfezd7dbWP5tv+CYH/AAUa/bS+P37eXwS+GPxb+" +
                        "Ol74v8AAHjB/FE3iHwvNpuh2tvObPwhq2pwDNjZQugjngRwFYfdA6cV/cvj74IcLZNwhi8Vg8Iqdan7P" +
                        "llzTbV6sIveTTum1r3P4T+j945cVZzxjhMJjMY6lGp7TmjywSdqU5LaKas0np2P6Pv2zP2z/hF+xH8KZ" +
                        "PiX8UbmS/vtSkbSfA3gXRmj/tPXdQVQ5igEhCpHGpDTTN8qLjqzIrfw94X+F2ZcV5j9VwislrOb+GEe7" +
                        "7t7JLVvyTa/ujxS8U8s4Ty761i2227QgvinLsuyW8m9Eu7aT/kp+PX/AAXC/bh+Lup3qeBvFVl8BfCMj" +
                        "sLLw/8ADuzt5r0RchfP1LUo5p2kAPLQ+Sp/uiv9HeD/AKJ/CeW017em8VV6ym2lfyhFpW8nzPzP82uMf" +
                        "pa8W5nUf1eosLS6Rgk3bznJN381yryPjiH/AIKDftzQakdVT9rf4hNdFBD5U3ivWJLbCsG/495JzDnjk" +
                        "7MkcZwTX6bLwZ4SdPk/s2hb/r3G/wB9r/ifl8fGri5VOf8AtLEX/wCvkrfde34H3p+zt/wXe/bE+FWp6" +
                        "dZ/F6fTv2hPBMbpFf2fiS1ttK1uO3HX7NqOlQxqX77riGbPTjqPyDjb6InDOY05SwalhavRxblC/nGTe" +
                        "n+GUT9i4I+mDxRl1SMca44ul1Ukozt5Tilr/ijI/rI/ZO/a0+EP7Zfwns/i18H9Snl0wTtoniPw7rcSw" +
                        "ano2pxxJM9pdRozruCyKyujMjKQQx5A/wA6PEXw5zLhfMXg8ZFc1rxktYyjspRfyas0mnuj/R/w48SMs" +
                        "4py1YzBSfLe0ovSUZbuMlqtmndNprZn82f/AAVJ/wCCpP7YXwy/bC+JHwY+DHxIPwr8CfCs6foVpaaFp" +
                        "+l3NxqNxc6XbajNdXU2o21w27dcFERCqhVHBYkn+5vo/fR+4Zx/DNDG42h7etX5m25SSilJxSSi12u27" +
                        "tt9rI/hL6Qv0heJ8v4nr4HA1/YUaHKklGLcm4qTbck+9klZJLvdn9Ef7BPxL8X/ABU/Yx/Z/wDih8TPE" +
                        "TeIfGHirw7HrnirxLfrbwNcTedKGlcQJFGvyqM4UDiv4p8YMiw2X8UYzC4WHJShUtGKu7Ky01uz+3PBz" +
                        "PsVmPCuCxeKnz1Z07yk7K7u9dLI/ED9uH/gvhqWg+Ktc+G37GOj6bqlhoksmmah8b/FkLXsF5NGSrtpF" +
                        "nuRGiVh8txPuEnJWPbtdv6v8J/oe062Hhis7lKLkrqlF2aX9+W9+8Y2a6yvdL+TPFv6ZFSjiJ4XI4xlG" +
                        "Ls60ldN/wByO1u0pXT6RtZv8SfGP/BSr9vbxzdXV5rX7V/jOylvNvnJ4O1aTw7ENrBhsi8PiySPkc7FG" +
                        "RweK/qvLPAvg/CRUYZdRaX80ef8Z8zfzP5OzTx44yxknKpmVZN/yy5F8lDlS+R2fw0/4Kwf8FAfhfqEF" +
                        "5pn7SGs+K7VGV7rSPiWLbxHb3CKANjNq0c0yA7eTFIjdeck15ee/R14NzCDjLAwg+9O8Gv/AAFpP5pry" +
                        "PVyH6R3GmXzUo46dRdqlqif/gSbXyafmf0W/wDBPT/gtV4L/aj8U+Hvgp8dfC9v8LPjT4jkXTPCes+HW" +
                        "mk8N6/dlSRAgunkmsrhyMRxSPIrngSBiqH+JvGn6LGK4fw88dgKjrYWCvJSt7SC76WUorq0k1/LZNn9w" +
                        "eCf0rMLxDiIYHMKaoYubtFxv7Ob7a3cJPom5J/zXaR+7FfyMf18FAEF1dW1lbXF7e3CWlnaI91d3d06x" +
                        "xRRRqXZ3ZyAqqASSTgCgD+T/wD4Kjf8FRrn44XOt/s9/s9629p8GrR20/xz4509mjl8VyxthoIGGCunK" +
                        "Ryes55P7vAfKUjop07H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0fR9PAyxxueSR2wscUagvJI5Coo" +
                        "LMQBUJGjdj+1H9gH9gHwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6f5gDR2kbAZOA0rAO4GERNoxsc0" +
                        "53P0JqiD83f+CuXw5m+Jf8AwT0/aN0yzg87UfDGm2XxGs2AJMaeHdVttWumwP8Ap1gmHtnNfuX0bs7WA" +
                        "40wMpP3ZycH/wBvxcV/5M0fhX0lcjeP4Jx0Yq8oRU1/25JSf/kqZ/AhbXM9ncW93azNb3Vq6XNtPESrp" +
                        "IjBlZSOhBGRX+xM4KUWmrpn+NNObjJNOzR/pe/Az4lWPxk+C/wn+LOnSJJafEjw7o3jVPJ6I2pafFdOm" +
                        "MDBRnKkEZBGDX+EvFuRTyvNMTg5b0akof8AgMmr/Pc/3p4Rz6GaZVhsZHatTjP/AMCinb5bHqlfPH0Rz" +
                        "fjDwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8RgsRCvQm4VINOMk" +
                        "7NNbNM4czyzD43DzoV4KdKaalFq6ae6aP4if+Cof/BLzxT+xZ4puPiR8N7e68U/s0eKbry9H1iTfPdeG" +
                        "Lqd/k07UX5JjJOLe4P3/uP+8wX/ANW/AHx+w/FOHWGxLUMfBarZVEvtR8/5o9N1pt/k19IL6PuI4UxDx" +
                        "WFTngJvR7um39ifl/LLrs9d/gf9mH9p74s/sj/FnQ/i/wDCDXDput6afsms6Nd7307WdOd1aaxvoVZfM" +
                        "hk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/wCIGZcNZlDG4KdprRp/DOPWM" +
                        "l1T+9OzTTSZ/fZ+xv8AtX+BP2zvgP4Z+N3gS2l0hNQkm0HxZ4Wv3WS40bWrMIbm0eRAFkAEiSRyADdG6" +
                        "MQpJUf47eJ3h3jOF83qYHENStZxktpQe0rdNmmujTV2tX/sp4XeI2D4qyenj8OnG94yi94zW8b9d00+q" +
                        "adk9F9TV+fH6GfjP/wXi/5R/eIf+xp8M/8ApTJX9P8A0Q/+Syh/16qfkj+W/phf8kXP/r7T/Nn4f/8AB" +
                        "v8Af8n16t/2IXiD/wBOOl1/WH0yf+SRj/1/h/6TM/kr6GH/ACV8v+vE/wD0qB8uf8Fcf+Ui/wC09/2Fd" +
                        "L/9RzTq+/8Ao3f8kRgP8Mv/AE5M/PvpK/8AJcZh/ij/AOm4H9D/APwTT/YD/Y2+Lf7Dn7P/AMRfiT+z3" +
                        "4f8YeN/E+najda/4k1eGdrm6ki12+tkZykqjISNVHHQV/Ffjt4xcT5bxZjcNhcbUp0oSjyxTVleEX27s" +
                        "/trwG8GuF8y4RwWJxWCp1K04y5pNO7tOS79kj1z4+/8ERv2H/i74dv4PAfgqb4EeNTG39k+LPAF3eS2y" +
                        "zADYLjTr+eW3kjBHzCMRuc/fHFfN8HfSt4sy2uniKqxNLrGaV7eU0lJP15l5H0vGX0TeEszoNYek8LV6" +
                        "Sg3a/nCTcWvTlfmfx9/tO/s3fFf9jH46a38JPiEDp3inwtJBr3hjxTobyx2+pWEkhez1Kxl+VtjGM4Iw" +
                        "ySKyHDIQP8AS7gLjnLuKMohjMNrTndSi7Xi/tQkvn6NNNaNH+ZHH/AmZcK5vPB4nSpCzjJXtKP2ZxfbT" +
                        "1TTT1TP61P2ENd+Av8AwVV/Zd8B+Kv2ovhhovxW+MfwKmufhn4s1HxHATcNK8cE8d6pidG23sCxtJ/D5" +
                        "yybQBxX+cni7g848POIK1LKsROhhcSlUiovTqnH/tx3S68rjc/0k8H8Zk3iLw9RrZth4V8Vhm6cnJa9G" +
                        "pafzqzfTmUrH8nv7b/g3wv8O/2v/wBpLwL4J0WHw34R8JeMdd0Hw3oOnArBZ2dtfPHFFGGJIVVGBk1/o" +
                        "p4UZpiMbw1gcRXm51Z0YOTe7bSu2f5xeLWV4fA8TY/D0IKFKnWnGMVskm7JH9fP7I//AATl/Ye8cfspf" +
                        "sx+NfFv7NfhvXfFXi/4e+C/FHibXL6G4M95qGoeG7O7uJ5CswBeSSRmbA6mv81fEjxu4swnEWPoUcdUj" +
                        "Tp16sYpNWUY1JJJadErH+mfhr4G8JYvhzL69bAU5VKmHpSk2ndylTi23ru27ngn/BZ7476N+xz+yJ4I/" +
                        "Zi+AWkWXwyPxra/8KwaV4Kgi0+LTPClgscuqLDHahQjXkl3HE7EZdXmOSxJH2P0XeEKvE/EtXNMwk631" +
                        "e0rzbk5VHfku3vyqLaXRqPQ+N+lPxhS4X4Zo5Vl0Y0frPNG0EoqNONnOyW3M5JN9U5ddT+dX/gnh+wj4" +
                        "u/bx+NEngix1OTwp8OPB0MXiD4q+O4YRM9jZSuyQW9ujkI11dujLEGOFVXkIYIVb+2PGrxdw3CGV+3lH" +
                        "nr1Hy04Xtd9W+vLHd23bS0vdfxB4JeD+J4xzX2EZclCmuapO17Lol05pPRX2Sb1tZ/2P/C7/glx+wV8K" +
                        "PDkHh7S/wBmvw34vZYfsl7r/wAUbGHxNqN05Xa8rS6ws4jdjz+5WNVP3VUcV/mPxB9IDjDMa7qTx1Snr" +
                        "dRpt04rytG11/ibb6tn+oXD30e+DstoKlDAU6mlnKolUk/O8r2f+FJLokfnz+3v/wAEP/gx8QfA3iP4g" +
                        "/sk+Gk+F/xd0SGXWIPh7ps8p8P+IREpke2jhuGcWdy4GIWiKxFsK6Dd5i/s3g99K/NMFi4YfOKntsNJ2" +
                        "52vfh5tr4or7V7ytqm7Wf4t4x/RLyrG4Spicnp+xxMVfkT9yduiT+GT+za0b6NK/Mv5iP2Sv2j/ABr+x" +
                        "9+0R4D+M3htrmCfwlfLYeNfDaMYTqmiSyrFqOnTJJgZkjB2bx8kqo+NyDH97+I/A+F4myStgqtmpxvCW" +
                        "/LNfDJej3tvFtbM/gDw246xfDGd0cdSunTlacduaD+OL9VtfaST3R/aP/wVQ1/SfFf/AATI/aB8UaBeL" +
                        "qOheJPD2g6/ouoRAhZ7S813TLiGQbgDhkcEZr/Lf6PmDqYfj3BUqitOFScWuzUJpr7z/VL6RGMpYngDG" +
                        "1abvCdOEk+6c4NP7j+Tn/gkd/ykX/Zh/wCwrqn/AKjmo1/or9JH/kiMf/hj/wCnIH+cX0av+S4y/wDxS" +
                        "/8ATcz+t7/grj/yjo/ae/7BWl/+pHp1f5w/Ru/5LfAf4pf+m5n+k/0lf+SHzD/DH/05A/lK/wCCLv8Ay" +
                        "kt/Zs/7nH/1Adcr/Q76Uf8AyQmO/wC4X/p6mf50fRX/AOS9wH/cX/0zUPqP/g4X1/xNefti/Dzw5qU8o" +
                        "8M6F4C07UPDFi4YQCS/1nUxdTpngvI1uiMR2jUdq+A+hdg6EeGK9WKXtJV5KT66Rhyr5XbXqz9C+mxja" +
                        "8uKKFKTfs40IuK6e9OfM/V2SfojzD/glZ4Q/wCCX+v3Or3X7ani8RfFBb5U8H+FfiVJdaR4LWyRUKzNe" +
                        "2cqxSzFywdLySOMLjCPyw9/6QmZcf0YxWR0v9n5felTtKrftytXSts4Ju/VbHz/ANHfLPD+tKTz2r/tH" +
                        "N7sal40rd+ZOzd91NqNuj3P6sNL/Yl/YB8aeE7aTw9+zB8LPEHhfVYVWw8QeGPC3hqXz4geHi1Cxg8wn" +
                        "j76y5PrX+eWI8VeMsLiWqmYYmFSL1jKpU0fnFu3yaP9FcP4T8GYvDJ08vws6clpKNOnqvKSV/mmflD+2" +
                        "F/wQE+GnjwL4n/Y98QW/wAIfE0sxbU/APj681K78MzxuSxe3uUivby1dST8pEqEYCiPHP8ARPhn9MbH4" +
                        "P8AdZzB16dtJwUVUXqrxjJefuvu2fzl4nfQzwGM/e5LNYepfWE3J036O0pRfl7y7JH37/wS9/YM1n9gz" +
                        "4LeJvCPjLxjaeMviD8QdWXxV4ruPDCzjSbMQWqWkFtavdxwyyhQGZpXjTJbGwbct+OeP3i/S4wzSnWo0" +
                        "nTo0o8sea3M7u7bs2l0SSb2310/Zvo++DtXg7KqlGvVVSvVlzS5b8qsrJRuk31bbSve1tNf5M/+CuP/A" +
                        "CkX/ae/7Cul/wDqOadX+i/0bv8AkiMB/hl/6cmf5v8A0lf+S4zD/FH/ANNwP6Ef7e8TeGv+Df8Ah1Twj" +
                        "czWesH4ZRaW9xYgmVbG/wBXWwvsbeQDazShm7DJ7V/GP1OhX8ZHCsk4/Wb691G8f/Jkj+1PrmIoeDCnR" +
                        "bUvq1tO0pWl/wCStn8kHwXsfhNqXxV8C2Px217VvDPwhuL+JfH2ueB7SK91WCwALN9nimZVyzAKz4Yop" +
                        "LhJCoRv9H+Ka2ZU8urSwEIzxKj7im7Rb82vvtpd6NpO6/zY4Vo5bUzGjHMJyhhnL33BXko+Sf3X1stUp" +
                        "NWf9sP7Jf7O/wDwSA8e+FrSx/Z28A/DL4xiKAS3cXi63s/E/iIKAu6W6tvFSz3sBYjOGiRRyFAHFf5W+" +
                        "I3GviXg8Q5ZlWxOH105W6cPROnaD+9vuz/Vzw24I8MsZh1HLaOGxGmvMlUn6yVS819yXZHZ/Hn/AIJD/" +
                        "sJ/HPRL+0i+DFh8IfEkyMul+L/gxFHoEtpIRw32K1UWMq5xlZIDx0KnmvL4Q+knxdlNVSeKlXh1jV99P" +
                        "/t5++vlL1uepxj9Gfg/N6UorCxw9TpKl7jX/bq9x/OPpY/Lr9l3/ggv8Vfg3+1X8PPir4++M3h3W/hZ8" +
                        "JPENh8RPDQ8KJqi6/qtzot7HqFjHc2t3bLb2qNLEpm2XMx2gqv3ty/v/iB9L/Ls04er4TD4WpHEV6bhL" +
                        "m5eSKmnGTTT5paN2vGOur2s/wCffD76HWY5XxFQxeIxVOWHoVFOPLzc8nBqUU01yxV0r2lLTRb3X9PVf" +
                        "wOf3+FAHin7RXwS0f8AaM+C3j/4L674g1HwtpvjuyOly694YneC6t3WRZkJCsoliLIBLCx2yISpxnITQ" +
                        "4uzP4W/2oP2X/il+yZ8UtU+F3xR0vybmHde+G/ElkrnTta04uVju7SRgMqcYZT8yNlWAIrFqx1Rlc9v/" +
                        "wCCeH7abfsU/GibxdqnhaDxT4E8a28Phfx/HDbQNrFrYrP5on0+4kAZXjb5nh3BJgAGwyo6OLsKcbo/t" +
                        "s+HfxE8FfFjwV4c+Ivw68R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdGAZGBVgGBFbHK0dpQBzfjHwpo" +
                        "vjzwh4q8D+JLb7Z4d8Z6bfeFNfs/l/e2Wo2r2c6fMGHzRyEcg13ZZmNXB4mnXpO06clJPs4u6/FHDmmX" +
                        "UsZhqmHqq8KkXGS7qSs/wAGf5p3xa+G3iD4OfFH4h/CjxVEYvEXw51nUvBer7kaMSTaddvamRA2fkk2b" +
                        "0OSCpBBIOa/3W4cz2jmeX0MXS+CtCM16SV7eq2fmf4NcSZFWyvMK+DrL36M5QfrFtX9HuvI/sE/4IIft" +
                        "F2vxP8A2TdS+CWqagJfF37PmqTadb2spzI/h7XJpdTspcsctsnNzDgDCqiDuBX+aP0wuCZYDiOOOhH93" +
                        "iop3/vwSjJfNcr822f6cfQ444jmHDcsBOX73CSat/cm3KL+UuZeSSP3Rr+ST+uwoA/lQ/4LD/8ABV7S/" +
                        "F9j4u/ZB/Zu1W31fwxdb9A+NPxQtPLuIL7Y+JNK0xzuUxBlxPcL94jZGduWb/Q36M30dqmGnTznM4uNR" +
                        "a0qb0a7Tn5/yx6bvWyX+dX0nfpG08VCrkuWSUqb92rUWqfeEPL+aXXZaXb/AJuvB/g/xT8QPFOgeCfBO" +
                        "gXXinxd4puodE8PeHtEhee6vLqdwiRxogJJJP4dTxX9x5nmeHwWHnXrzUKcE3KTdkkt22fwrlmWYjG4i" +
                        "FChBzqzaUYpXbb2SR/fF/wS+/Y71/8AYn/Za0z4Y+M9Th1Dx/4s1a7+J/j2DTH820sdS1GztLEWkMg4k" +
                        "EMFlEruPlZ9xXK4J/x68ffE2jxVxBLFUItUYRVOF9G4xcnzNdLuTaW6Vr6n+yP0fvDCtwnw9HC15J1qk" +
                        "3UnbVKUlFcqfWyik3s3e2h+iVfih+3H4z/8F4v+Uf3iH/safDP/AKUyV/T/ANEP/ksof9eqn5I/lv6YX" +
                        "/JFz/6+0/zZ+H//AAb/AH/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+kzP5K+hh/wAlfL/rxP8A9KgfL" +
                        "n/BXH/lIv8AtPf9hXS//Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGYf4o/wDpuB/W9/wSO/5R0fsw/" +
                        "wDYK1T/ANSPUa/zh+kj/wAlvj/8Uf8A03A/0n+jV/yQ+X/4Zf8ApyZ+jtfh5+5n81X/AAcb/DrRLj4c";
                    resourceString += "fs5fFpLWOLxHpOt6n8Op71FAmnstQsP7TjRyB8yxSWTlAT8pkbH3jX91fQhzurHHY7B3fJKEZ26JxfK38" +
                        "1JX72XY/g76cmR0pYHA4yy9pGcqd+rUlzJfJxdu133PFP8Ag3B8RanB8RP2oPCSzE6Nqei+HfEU9uxJA" +
                        "ubG+u7ZGUdBlLtgfXA9K+p+nDgqbwWX1re8pzj8mov/ANtR8p9BjHVFjswo392UIS+ackvwkz8Zf+CgW" +
                        "oQan+3J+1xc2wYRx/ETxbp7eaAD5lprVxaP0J43RnHtX9Q+DVF0+E8tT/6B6b++Cf6n8teNFZVOLsza/" +
                        "wCgiqvum0/yP7t/2Hf+TKv2P/8Asl3w/wD/AFE7Cv8AIvxY/wCSqzP/ALCa3/pyR/r/AOEn/JKZZ/2DU" +
                        "f8A03E/mm/4OMHvD+0l8B43Mn9nr4Hke1DbvK85tevBLt7btoTdjtj2r+6/oSKP9hYx/a9t+HJG36/if" +
                        "wb9OFy/t7Br7Psfx55X/T8D8Ovhv/wvHyNW/wCFQ/8ACV/Zt8P9u/8ACt/7X2b8P5Xn/wBl8Zxu27vfH" +
                        "ev6xzz+ybx+ueyvrb2nL87c342P5IyL+17S+pe1tpf2fN8r8v4XPTP+M1f+qo/+XZXg/wDGK/8AUN/5T" +
                        "Pf/AOMr/wCon/yoH/Gav/VUf/Lso/4xX/qG/wDKYf8AGV/9RP8A5UPNLn4L/HO8uJ7y8+E/iy6u7p3ub" +
                        "q6udC1h5JJHYszMzQEliTkk9a96HFOUxiksTSSX9+P+Z4NThXN5ScpYaq2/7kv8j+u74+R63b/8EErOz" +
                        "8R21xZ61p3wt8CaXfWWqxPBcwm1vtItljkjkVWVkVApDDPHPNf5s8HSpPxgcqTTg8TWaa1Tupu6fmf6X" +
                        "cZxqx8HFGqmprDUU01ZqzpqzXkfzrf8Ejv+Ui/7MP8A2FdU/wDUc1Gv7Y+kj/yRGP8A8Mf/AE5A/iH6N" +
                        "X/JcZf/AIpf+m5n9b3/AAVx/wCUdH7T3/YK0v8A9SPTq/zh+jd/yW+A/wAUv/Tcz/Sf6Sv/ACQ+Yf4Y/" +
                        "wDpyB/KV/wRd/5SW/s2f9zj/wCoDrlf6HfSj/5ITHf9wv8A09TP86Por/8AJe4D/uL/AOmah/WR/wAFA" +
                        "/8Agnf8L/29fA2laf4g1F/BHxQ8FLcN8PviVpsCzvbC4AMlpeQFk+0WjsqsV3KyMMowy4f/ADp8GvGrM" +
                        "OD8XKVOPtMPUtz027XttKL+zJbXs01o07K3+j/jR4I5fxjg4xqS9niKd+Sole194yWnNF72umnqmrtP+" +
                        "Sn9oT/gkN+3N+z7NqN5P8J5viv4QsS8kfjL4NM+uRPEg3F3sokW/iCryxe3CjnDEAmv9HOC/pKcJZyox" +
                        "WJVCq/s1fc1/wAXwPytK/kf5tca/Rn4uyVyk8M69Jfbpe/p/hXvrzvG3mfFHw7+Mnx2/Z58RXlx8MviN" +
                        "4l+EPiO3lEWsW3hrUNQ0mR5ITjy7uCN4xIAeCkqkeor9UzvhjKM6oJYqhTrwa05oxlv1i9beqZ+U5HxR" +
                        "nGSV28LXqYeaevLKUduklpf0aP2B/Z2/wCC/P7VHw5u9O0v47aFpPx98JoUhvtRaCHQPESRj5d0dzpsY" +
                        "tXKjkiS1LOQMuuSa/mnjX6HPD2OjKeAnLC1Oiu5w+ak+ZfKVl2ex/TfBH0y+IsDKMMwhHFU+rsoT+Tiu" +
                        "V/ON33W5/Uv+yd+158F/wBs34Yw/E/4Na1JcWtvINM8UeFdcSODWNEviu/7PewRvIqll+ZHRmRx91jgg" +
                        "f59+IvhrmnC+PeFxsEm1eMlrGa7xdl800muq2P9C/DfxMyrinL1i8FNtJ2lF6Sg+0ld/JptPo9z+KP/A" +
                        "IK4/wDKRf8Aae/7Cul/+o5p1f6ofRu/5IjAf4Zf+nJn+Uv0lf8AkuMw/wAUf/TcD+uz/gnF4b0Hxj/wT" +
                        "c/Zz8JeKdJg17wz4n8FN4f8Q6HqcYltryyvHuLeeGVG4ZJEcqw9DX+bfjhjq2F45x1alJxqQrc0Wt01Z" +
                        "przTP8ASzwMwNHFcCYGjWipU50eWSezTumn5NH4U/tg/wDBAX4r+GNd1vxd+yBq9t8RPBF3JJfWfwt8V" +
                        "3sNhr+nK7bvs9vd3pS2u4052tLJFJjAIkbLH+uPDP6Y2XYijCjnMXSqrR1IpuEvNxV5Rb7JSXXRaH8he" +
                        "J30M8xw9adbJZKtReqpyajOPkpO0ZJd24vpq9T8MfiZ8EPjx+zx4ggs/in8NPEfwn12znH9m3niPT73T" +
                        "g80ZLK9rcsqpLjaSrxORxkGv61yHizKM6ouWEr068GtVGSlp/eW69Gj+Rc/4SzjJK6ji8PUoTT0couOv" +
                        "917P1TZ9d/Az/grN+3h8BmsLXR/jfe/EHw5Y4X/AIRT4wr/AMJJbSRrwsf2i9b7bGigYVYrlABwOK/Ne" +
                        "Lfo58IZxdzwipTf2qXuP1svcb9Ys/TOEfpIcYZPyqGLdWmvs1f3i9Lv30vSSP6LP2D/APgtt8K/2nPFP" +
                        "h34QfGjwsnwX+LniSRNK8N6na3X2jwzrV65wkEUtxtltJ5SdsUUu9XbCiUuyof4m8XvoqZhkGHnjMDU+" +
                        "sYaCvJWtUgu7S0klu2rNLXlsmz+4PB76WOXZ/iIYLHU/q+Jm7Rd705vok3rFvZJ3TenNdpH7mV/JZ/XI" +
                        "UAFAHzH+1h+yf8AC39r/wCFt/8ADb4k2Hk3MPmX3gzxnYxodR0LUSm1bi3ZsZU4AliJ2yLwcEKypq5UZ" +
                        "WP4jP2oP2X/AIpfsmfFLVPhd8UdL8m5h3XvhvxJZK507WtOLlY7u0kYDKnGGU/MjZVgCKxasdMZXPpj/" +
                        "gnn/wAFDPGv7F3jUaRq5ufFfwH8V3KSeN/BEb7pbOVsRnUdOEhCpcIoG9MhZlAViCEdHGViZwuf2h/Dv" +
                        "4ieCvix4K8OfEX4deI7bxX4M8V2yapoWu6W+6KaJsggggMjowKujAMjAqwDAitjmaO0oA/j3/4L/fsq3" +
                        "Hw/+OXhf9qDw1pZXwh8a7ePw942ubZP3Vt4o0m2WJGfaoC/a7ONCvUs8MrHrX+mH0OPEKOMymplVWX73" +
                        "Dvmh505O/8A5LJu/ZSij/Mb6Zvh3LBZvTzWlH91iVyz8qkVb/yaKVu7jJn5wf8ABOD9rq4/Yy/ak8F/E" +
                        "6/mmb4ea2G8DfFjTrTcxl0HUJE8yZUH3pLWVI7hAOW2bMgMa/cPHDw2jxRw/VwsUvbx9+m3/PHZekleL" +
                        "7Xv0PwzwM8S5cLcQ0sVJv2EvcqJfyS3du8XaS72t1P9BjStV0zXdL03W9F1CHVtG1m3h1XSdV02VJre5" +
                        "triMTRSxSRkq6OjBlYHBByK/wAZcRh6lGpKnOLjKLaaejTWjTXRpn+02HxFOtTjUpyUoySaa1TT1TT6p" +
                        "rY/lu/4K5/8Fc/7U/4Sf9lX9lXxP/xK/wB9oHxg+MGgTf8AH11im0rSpoj/AKrqtxcKfn5RDs3M/wDoD" +
                        "9G76N3s/Z5tm1P3tHSpNbdpzXfrGL23etkv89vpLfSW9p7TKMoqe7rGrVi9+8IPt0lJb7LS7f8ANX4P8" +
                        "H+KfiB4p0DwT4J0C68U+LvFN1Donh7w9okLz3V5dTuESONEBJJJ/DqeK/unM8zw+Cw869eahTgm5Sbsk" +
                        "lu2z+D8syzEY3EQoUIOdWbSjFK7beySP7dv+CXn/BLzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1iPZPa+GL" +
                        "WdPn07Tn5BkIOLi4H3/ALifu8l/8pPH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/rL9H36PuH4Uw6xW" +
                        "KSnj5rV7qmn9iHn/NLrstN/1+r+aj+mgoA/Gf8A4Lxf8o/vEP8A2NPhn/0pkr+n/oh/8llD/r1U/JH8t" +
                        "/TC/wCSLn/19p/mz8P/APg3+/5Pr1b/ALELxB/6cdLr+sPpk/8AJIx/6/w/9JmfyV9DD/kr5f8AXif/A" +
                        "KVA+XP+CuP/ACkX/ae/7Cul/wDqOadX3/0bv+SIwH+GX/pyZ+ffSV/5LjMP8Uf/AE3A/re/4JHf8o6P2" +
                        "Yf+wVqn/qR6jX+cP0kf+S3x/wDij/6bgf6T/Rq/5IfL/wDDL/05M/R2vw8/cz+e3/g4t/5Ng+B//Y+r/" +
                        "wCo9qNf2f8AQl/5H+L/AOvH/t8D+Kvpwf8AJP4T/r//AO2TPjT/AINx/wDktf7R/wD2K2lf+nY1+ofTe" +
                        "/5FWB/6+y/9JPyz6DX/ACNsd/16j/6Ufml/wVa+HOufDX9v79pGw1q2kij8Va43xG0O6lUqlzY6/Cmpo" +
                        "8ZIAZUaV4iR0ZGHUGv3X6PGd0cdwbgZQfwQ5Guzg+XX1sn6NM/BvpF5HWwHGePjUXxz9on3U1zaejbXq" +
                        "mj+jX/glz/wVG/Zo8Y/s/fBz4CfE3x/Y/Cb4ufC3Q9M+GcWn+OZU0/TNXtNGto9Ns57O/m225d4Y4w0M" +
                        "jrJv3bVZfmr+IvpAfR/z7C5ziswwtGVfDVpyqXh70ouTcpKUV71k27NJq1rtPQ/uT6Pn0g8hxWS4XL8V" +
                        "WjQxNCEadpvljJRSjFxk/du0ldNp3vZNanNf8F7P2Y9R+M37O/gb9orwJbHXNS+A0l3deI00oCb7R4U1" +
                        "tIGmuwYtxdbWW3ikyOBG8jk4Fd/0P8Aj2GV53Wy3EPljibct9LVIXtHy5k2vOSiupwfTG4AnmuSUcyw6" +
                        "5pYVtytrenO15efK0n5Rcn0P59/+Can7eOrfsI/HCfxTf6dN4j+FHxAht/DfxW8MaeUFy1tDMZLe+td+" +
                        "Abi0MjlEYhXV3QlSwdf7L8dfCGnxflKpRkoYmk3KnJ7Xa1i/wC7Kyu900nraz/i7wG8YanB+butKLnhq" +
                        "qUakVvZPSS/vRu7LZptaXuv7YPhT+2t+yd8avDVn4q+Hf7QPhbVrC7jW5l0+/1iz07U7Tf/AA3VjqDw3" +
                        "MDZ7SRrntkc1/lbxF4V8R5VXdLE4KrFrqouUX6SinF/Js/1c4c8V+G81w6rYbG0pRa2clGS/wAUZNSXz" +
                        "SPUP+F4/BT/AKLB4W/8KDSf/j9eB/qnmv8A0DVf/AJf5H0H+t2U/wDQVS/8Dj/meh6Xqul65p9pq2i6l" +
                        "b6xpV+nn2Op6XNHcW8yE43RyRFlYcdQa8XEYepSm4Ti4yW6as16pnt4fE060FOnJSi9mndP0aPgz/gql" +
                        "oV74i/4J7/tS6fYKXnt/Dq67IFBb9zpepWupzHA9I7djntX6/8AR7xkKHGmXyls6lvnKLivxZ+O/SIwc" +
                        "6/BWYxjuqd/lGUZP8Ez+N7/AIJg/FDwz8HP28/2cPH3jLXYfDPhmy1e80DVte1Ioltaprui3ugq8zyEL" +
                        "HHuvAHkYgIuWJAGa/058fMgr5nwfjsPRg51HBSSW75JRnp3fu6Lq9D/AC8+j/xBh8r4xwOIrzUKam4uT" +
                        "2XPCUNX0Xvavoteh/YF/wAFbJYp/wDgnH+01PBKs0E2k6TLDNEwZHRvEWnEMpHBBHQ1/ml9HCLXHGAT3" +
                        "5pf+kTP9NvpJyT4Gx7WqcI/+nIH8p3/AARd/wCUlv7Nn/c4/wDqA65X+hv0o/8AkhMd/wBwv/T1M/zq+" +
                        "iv/AMl7gP8AuL/6ZqH75f8ABWr/AIKofFf9ib4j/D74M/Bbwhot94m8SaDH8SfEXirx5BdXsEVldalea" +
                        "Zb29rb2lza4k32ErSO7MNpUBc5I/j36OX0e8u4rwNbG46rNU4T9nGMGk7qMZNttPS0lZK2t7vof2T9JL" +
                        "6RGZcJ46hgcDSg6k4e0lKabVnKUUkk463i7t30tZdT0P9hf/gsz+z/+0j4Z0vw98cvEej/AT44xH7FqW" +
                        "k69ctY+HNVfICzadfag5SPzCQPs88vmBuFMg+avE8W/ov5zkdeVTAQnisJumlecfKcYq7t/NFWtq1HY9" +
                        "vwh+lLkue4eNPH1IYXF7NSdoS84Sk7K/wDLJ3vonLc/Q74v/Az9lf8AaF8MHWPjL8PfCHxK8OLFm38X+" +
                        "IrfT5mt4mxHug1NSskIOQN0cq9ua/FuGuLeIclxHJgq9WjO/wAMXJXfnDZ/NM/beJuEeHc7w/PjqFKtC" +
                        "3xSUXZeU918mj+PH/gqV8BP+Cd/wR1vRLP9j34tXHiTx5d3rReMvhroWpR+JvDmk6eIZDvTVizyJcLKF" +
                        "Q27TTtgksYyoD/6ZfR+4w41zalOWc4ZQope7UcfZzlK6+xs4215lGK2tzX0/wAw/pC8G8EZTVhHJcS51" +
                        "nL36al7SnGNntPVqV7LlcpPe/LbX6W/4N0rvxQn7UPxusbRp/8AhCrnwC934gWMH7MdUh8Q6amnmQ/3/" +
                        "Klu9ntur4T6bVPDvh/CSdvaqvaPflcJ81vK6hf5H3v0H6mIXEGLjG/snQvLtzKcOW/nZzt8z4L/AOCuP" +
                        "/KRf9p7/sK6X/6jmnV+v/Ru/wCSIwH+GX/pyZ+O/SV/5LjMP8Uf/TcD+pT9lb41W37Of/BID4YfHG60V" +
                        "/Ea/DP4eSeJ4NAhlEH2y4inmWCFpSG2I8jKHfaSq5IBIwf8/vELhaWd+JeIwCnye2xHLzb2TSu7dbK9l" +
                        "1fVH+hPh3xXHI/DLD49w5/Y4fm5drtN2V+ibtd62XRn5W/sz/8ABwl4/uPilHp37V3gTQrT4T687Qf8J" +
                        "F8KdP1KLUNAdz8krwXV7dm7t16SKoEoGWXeR5bf0Hx59DDBxy/myitN4mP2ako8s/K6jHll2b93o7br+" +
                        "eOAfpq42WY8ub0YLDS+1TjLmh2bTlLmj3S97qr7P+kH4f8Axp/Zx/ac8KFvh/8AEHwt8ZPC+tRbb3RrK" +
                        "6sNS3Iy7jHdWM26SNgOWjmjDDuK/h7OeFs8yHEf7RRq4epF6Npx+cZLR+qdj+6Ml4qyLP8ADf7NXpYin" +
                        "JapNS+UovVejSZ+Tf7eX7Dn/BIfQfDfiDxR8WNT0T9mLxXHFLd2tz8I9St9P1SeVQSI7fw5CLiG4y33l" +
                        "htA2P41HI/ovwg8WfEmtXhSwkZ4yndL95FyivN1XZx9XO3k9j+b/GLwj8M6NCdXGShgqlm17KSjJ+SpK" +
                        "6l6KF/Nbn8bF01tZa3ct4bvrmeztLp20HU54haXjxxzHyJWjhllEchADFVkbaeAxxmv9PKalKkvapJta" +
                        "rdbaq7Suvkr9j/Lqo4wqv2TbSfuvZ76Oybs/Ru3c/00fh1J4gl+H3gSXxYsieKZdG0uTxKl4u2Yag1lE" +
                        "bgSDs3mbsj1r/BzO1RWNrKjb2fPLltty3drfI/3xyOVZ4Ki61/ackea+/NZXv8AM7KvMPUCgAoA+Y/2s" +
                        "P2T/hb+1/8AC2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxGftQfsv/A" +
                        "BS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6YyufTH/BPP/goZ41/Yu" +
                        "8ajSNXNz4r+A/iu5STxv4IjfdLZytiM6jpwkIVLhFA3pkLMoCsQQjo4ysTOFz+0P4d/ETwV8WPBXhz4i" +
                        "/DrxHbeK/Bniu2TVNC13S33RTRNkEEEBkdGBV0YBkYFWAYEVsczR5V+1d+zf4N/ay+AvxA+Bfjb/RrDx" +
                        "fa50fXI0DzaVq1swnsr2IZUkwzKpZQRvTchOGNfbeHfHGK4czijj6GrpvVdJRekov1XXo7PdHxHiNwLh" +
                        "eJMmrZfX0VRaPrGS1jJej6dVdbM/wA7/wCNHwf8d/AL4peNvg98S9HfQ/GvgK+k0TWbJwdj7QHinhYgb" +
                        "4Z42WWJxwyMrDg1/tTwtxLg84y+ljcLLmpVY3T/ADT7NO6a6NNH+JPFXDGMybMauCxUeWrSlZr8mu6as" +
                        "0+qaZ9i+Hf+Cnn7T/hX9j6f9jrQfEv9n+FpJpbC28dwyTDXbbw3PGRJosEwPyW7OT84+cITECE4r8yxv" +
                        "gJkGI4mWdVKd6lr8mnI5rao11lbptf3nqfp+B8f+IMNww8lp1LU7tc+vOqb3pp9I367291aHwf4P8H+K" +
                        "fiB4p0DwT4J0C68U+LvFN1Donh7w9okLz3V5dTuESONEBJJJ/DqeK/XszzPD4LDzr15qFOCblJuySW7b" +
                        "Px7LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5/wAEvPC37Fnha3+JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0" +
                        "+fTtOfkGQg4uLgff+4n7vJf/KTx+8fsRxTiHhsM3DAQei2dRr7UvL+WPTd67f6y/R9+j7h+FMOsVikp4" +
                        "+a1e6pp/Yh5/wA0uuy03/X6v5qP6aCgAoA/MH/gsB8EPiX8fP2H/Hfg/wCE3hi48Z+L9H1LR/GcfhXR0" +
                        "Mt/e2um3Je4S1iX5pplRy6xLlnwVQMxCn99+jTxXgMn4so1sZUVOlKMocz2TktLvor6Xei3dldn8/8A0" +
                        "m+EsfnPCVajg6bqVYyjPlWsmovXlXV21stXayu7I/Gz/gg9+yn+0B4L/aZ8a/GP4gfCrXPh34D0PwpqH" +
                        "g+PVPHemXmkve6nqV/Yyxw20V/HE8oWO3keR1UquACQWFf079LzxDybFZDSwWHxEKtaVWMrQkpWjFSTb" +
                        "abS1aST1ettmfy79D3w6zrCZ/VxuJw06VGNKUbzi43lKUWklJJvRNtrRaX3R89f8Fev2Mv2k7r9uv4ne" +
                        "PfB3wb8SfEPwX8XW0nxB4P8QeA9F1HV4Xkj0ez064tpjp8MoimjuIHARiCUKsOvH2n0a/FDIo8I4fD1s" +
                        "VTpVaHNGUZzjF/FKSa5mrpprVdbrofE/SY8LM+lxfiMRQwtSrSr8soyhCUl8MYtPlTs1JPR7qz6n9RP/" +
                        "BPP4ReMvgR+xb+z38LPiFYjS/GvhrQzP4j0jIZ7K51K+uNVNtIVJHmQi5EcmCRuU4JHNfwD408S4XN+K" +
                        "cbi8M+alOfuvuopRuvJ2uvJn+gvgnwzisn4VwWExK5asIe8uzk3Kz81ez80fZtfl5+pn4p/8F0v2f8A4" +
                        "s/Hb9lXwdL8I/Bt74+1P4b+K7fxf4i8N+GYJbzU202TS7zT3mt7aBWkm8uSdN6oCwUlsbVYj+p/ok8ZZ" +
                        "blHENVYyqqUa1JxjKTtHm5oys29FdJ2b0vpu0fyn9LzgzMs44dpPB0nVlRqqUoxV5cvLKN0lq7Nq6Wtt" +
                        "dkz4S/4N/PhB8Wvhr8Yf2gr74i/C7xF4BstT8NaZaadeeNdE1PSoriVNULskb30MQdgOSAScV+u/TJ4l" +
                        "y3HZZgo4bEU6rVSTahOMre71s3Y/H/oYcMZlgM0xssTh6lJSpxSc4Sim+bpdK5+vP8AwUL/AOCbvwu/b" +
                        "18J6bPqWonwF8Y/BtvLZ+BPiZZQC4Agd/ONjfwbkM9qzksoDBomJZDhnR/5s8FvHLMOD8TJRj7XC1Hed" +
                        "Nu2u3NF9JW30tJKz2TX9MeNngVl/GOGi5S9liqatColfTflkusb7a3i3dbtP+Rb9oX/AIJY/tt/s6a3P" +
                        "Y658F9S+Inh4yeRpvjn4O2114j0y5UnAdlsYjc2+Txi5hjOemcjP+kfBf0g+FM7pKVPFRpTtrCq1CS+9" +
                        "8sv+3ZM/wA0+Nvo8cWZHVcamElWhfSdJOpF/cuaP/b0Uf1Mf8EZ/hJ8bfhx+w9D4L/aM8P3+lPrevazq" +
                        "PgrwL49iYXVh4UvbKzhS1ns7td8KSXKXUohkUHbJkgBsV/n39KDiTKsdxY6+WzjLlhFTnDZ1E5PmUlo2" +
                        "o8q5l1Xkf6F/Ra4azbA8JKhmcJR5qknCE91TaiuVxeqTlzvlfR7an5i/t2f8EF/FMev618Sv2KJLfV9C" +
                        "1SWXUr74F+IbyKzurCSRt5TSby8ZIZIOTtiuJEZAMB5M4H734R/S/w7owwueXjONkq0VdP/ABxWqfnFN" +
                        "Psuv4B4v/Q7xCrTxWRWlCTbdGTSa/wSejXlJpru+n4V+JP2Lv2vfCOqT6N4h/Zg8faff25KlR4S1yaKQ" +
                        "A7d0U0Fs8ciZHDIxB9a/rfA+KXDWJpqdPMKDT/6eQT+abuvRq5/IeO8K+JsNUcKmX101/06m18mlZrzT" +
                        "sYH/DK37T//AEbh49/8I/xD/wDIldn/ABELIP8AoOof+DYf/JHH/wAQ74g/6AK//gqf/wAif1S/8EC/g" +
                        "3+0b8JvhF8b5vjL4Z1rwN4D8Vato918LfB/ji3udPuUura3vE1W8js7xI5Y4rgSWqhyAHMZI6En/Pf6Y" +
                        "nE+R5jmWEWCqQqVoRl7SUGpKzceSLkrptWm7dL6n+iH0NeF88y3LMW8dTnSoznF04zTi7pS55KLs0pXg" +
                        "r9eXQ/d7xL4c0Pxj4c8QeEfE+mR614a8VWV34c8Q6PeAmG7sb6BrWeFwCDtkjdlPPQ1/IeAx1XC14VqU" +
                        "uWpBqUWt007pr0Z/YOPwNHFUJ0asVKnOLjJPZpqzT9Vofwt/tvf8Em/2kP2X/iRqUfgDwDrXxl+DOu3c" +
                        "8ngDxl4G0+51e8gtmYvHaapb6fE8kFzEmFMhQRS/eQ53In+tvhR9IvI8/wMXiK0MPiopc8ZyUU31lByd" +
                        "nF9r80dn0b/AMiPFn6OGe8P4+Sw1GeIwsm+ScIuTS6Rmoq6kl1tyy3T3S/br4O/swftVeI/+CJXjz4B+" +
                        "N9Dv5Pi94hsb7Ufht8O/FbPDqtlotprFrqVnpki3ZBildbWQwQuRsEiRnZghf5S4m4+4eoeK1HMKE4/V" +
                        "oSSqTjrFzcXGU1bdLmXM1vZtX3f9ZcL+H/EVfwnrZdXhL6zOLdOEtJKClGUYO+zfK+VPa6TtsvzK/4I1" +
                        "fseftK6F+3b8Pvif4y+DHiP4f8Agn4RW/iK88V654+0e/0aLztR8OahoMFtAdRih82Yy3isUTJVVJOBi" +
                        "v3n6T3iZkVbhGthaOKp1atdwUVCSk7RnGbb5W7K0d3u2kj8C+i54Y59R4woYuvhalKlQU3JzjKCvKEoJ" +
                        "LmSu7y2WyTbP6Kv+Cgv/BOr4Xft6eCNOttavj4H+LHg6OZPh/8AE2wgE7wJL872d7DuTz7R3w23cGRvm" +
                        "Rhl1f8AifwZ8bMw4PxcnBe0w1S3PTbtf+9F9JJfJrRrZr+3/GnwPy/jHCRVR+yxNO/JUSva/wBmS6xb1" +
                        "7p6p7p/yEftD/8ABK/9tv8AZy1PUI9e+DOo/EDwtZlmt/H/AMIYLjxDpc0Iz+9dbOL7Tbrxz9phj/Ign" +
                        "/Sjgr6QfCmeU4unio0qj+xVahJPtq+WX/bsmf5ncbfR44syOpJVMLKrTX26Sc4td9FzR/7eij4f/wCFd" +
                        "/ED7V9h/wCEG1j7b5n2T7H/AGZe+b5u7Zs2eXndnjGM5r9Y/trB8vN7aFt78y/zPyT+xMbzcvsZ32tyu" +
                        "9/uPtL9n3/gl7+2z+0bqWnR+F/gnqngzwzfMpl8ffFa3uPD2kRQt/y2Vr6NZ7hO3+jRSnPbg4/LeM/H7" +
                        "hTJISdXFxqVF9im1OV+2jtF/wCJxP1Xgv6PvFmeVIqlhJU6b+3UThG3fVXkv8Kkf2Sf8E//ANg74f8A7" +
                        "BvwluvBfh3UT4t8eeLpoda+JvxDubdLeTUrqGMxwwwxgsY7S3Dt5UbMxyzsTliB/mJ4yeL2N4vzJV6kf" +
                        "Z0aaapwvflT3bfWUtLuy2S6H+ongx4PYLg7LXQpS9pWqNOpO1uZrZJdIx1srvdvqfzJf8Fbf2NP2ntS/" +
                        "bv+Kfjbwp8EvEnj7wj8W59K1rwR4h8A6NqGs21xjSbPTpIJG0+KURTpNCymOTBIwwyrA1/ef0cPE/IKf" +
                        "CGHoVsXTpVKCkpxnKMWvelJNczV00915rdH8C/ST8LeIKnGGIr0cJUq0q7i4ShGUk/djFp8qdmmno/J7" +
                        "M/qR/ZB+Al54L/Yb+DX7PXxs8NWt/cxeDYvB3xJ8G6j5d1bFdRgkN3YzbCyPtWcxPtJUkHBIwa/z+8Su" +
                        "MI4ri3FZjgajS9s5U5LR+61yyXVbXXXuf6EeGXBssLwjhctx1NN+xUakHqveT5ovo97O2nY/nP/AG1P+" +
                        "CDHxe8B63rfjf8AZElX4qfDu6ke+g+GOq3UVt4m0lHYsYYJbtkhvoYx91jIk2MLskYFz/bfhZ9L7LcZS" +
                        "hQzj9xXWntEr05ebSu4N9dHHreK0X8PeK30O8zwdadfJv39Bu/s20qkfJN2U0ujupdLSer/AA+8Z/AT4" +
                        "5fDrU30Xx98HPFPgvVoyUOn+KNA1WxlOO6i5gTcO4IyCORX9YZXxhlOOp8+HxVKpHvGcX+TP5KzXg7N8" +
                        "DU5MRhatOXaUJL80anw/wD2af2hvitqMOlfDf4H+K/Gt7M/k48PaBqdxHGcgEyypD5cajIyzsAO5rnzn" +
                        "jrJcug54nF0qa/vTivuV7v5HRkvAed5jNQwuEq1H/dhJ/e7WXzP6Kv+Cb3/AARD8X+DvHfhT47/ALYUV" +
                        "np8nhG4t/Efg74H2E1vqLyX8DCWGbWJ4TJb+XE4DrbxM+848xgoaN/4n8cfpXYbFYSpl+TXftE4yqtOO" +
                        "j0app2d2tOZpW6JuzX9v+Bf0TMThcZTzDOrL2bUo0U1L3lqnUavGyevKm79WldP+oCv4EP9AgoAKACgA" +
                        "oA+Y/2sP2T/AIW/tf8Awtv/AIbfEmw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/" +
                        "EZ+1B+y/wDFL9kz4pap8Lvijpfk3MO698N+JLJXOna1pxcrHd2kjAZU4wyn5kbKsARWLVjpjK59Tf8AB" +
                        "OX/AIKF+J/2MPHEmheJTdeJvgL4ymU+MPCkLl5NMuW2oNTsEbgSqoAljGBKgwfmVCrjKxM4XP7QPBHjf" +
                        "wl8SfCXh/x54D8QW3inwf4pto9X0DX9IkElvc28g4ZTwQQQVZWAZWBVgCCK2OZo/Iz/AIKlf8E7fDP7d" +
                        "/wxsfjP8EbrT7z47+CdPlbwprGkzwS2fi7SYDJL/Zb3MT+V5gcsbWYnarko5CsWT+mvo6eOs+F8Z9VxT" +
                        "bwNV6/9O5PTnS7fzJbpXWqs/wCYfpH+A0OKcH9awqSx1GOn/TyK15G+j/kb0TdnZO6/jI0/4Q/FPVPiT" +
                        "D8HLH4d6zN8Vp74eGl+HTaddJrK3+dpge0kRZEcdWDKMDk4HNf6k1uJcvp4F42VeH1dR5ufmXLbvzbP5" +
                        "H+VdHhnMamPWCjQn9ZcuXk5Xz83bl3T9dj+1X/gl5/wS88LfsWeFrf4kfEi3tfFP7S/im18vWNYj2T2v" +
                        "hi1nT59O05+QZCDi4uB9/7ifu8l/wDLHx+8fsRxTiHhsM3DAQei2dRr7UvL+WPTd67f6sfR9+j7h+FMO" +
                        "sVikp4+a1e6pp/Yh5/zS67LTf8AX6v5qP6aCgAoAKAPCf2mfjvpP7MnwO8ffHbX/DGo+MdC+HcFtqms6" +
                        "B4T+znUJLae+gsnkiF3JFGRCJvNfc4+RWxk4B+u4D4QqZ9m1HAU6kac6raUpX5bpN2dk3ray03aPj+Pu" +
                        "MKWQZRWzCpTlUhSSbjG3NZtK6u0tL3euyZo+Efjn4H8XfADQP2kIJ5NO+HeueE4PjFJLehPPtNKk0oav" +
                        "IJVRiokijyHAOAwIzWGZcJYvDZzPLGr141XS02cublVvJvbyOjLOLsJicmhmabVCVJVdd1Hl5nfzS38z" +
                        "xb9iD9t34bft2fDTxL8SvhvoGqeFbXwprcvgjVtA8ZCzF6ssdlbXyTAWM86eVItztUlgdysMcc/VeK/h" +
                        "TjuEcfTwuJnGbnDnTje1rtW1Sd1bXyaPlPCXxZwHGGAqYrCwlBQm4OM7XvZO+jas76eaZs/Bj9r7wT8d" +
                        "Pj/APtFfATwX4Z1Q3X7NNxYaJ438c3n2MaTPqN95ii1tvKmeUuj286vvRcGM+orl4o8NcXlGTYLMK9SN" +
                        "sYm4QV+ZRVtXpazTi1Zvc6uFvE3CZvnWOy6hTlfBtKc3blcnfRa3umpJ3S2Z9a1+cH6SFABQAUAFABQB" +
                        "8I/8FEf2x9S/Yb+AVn8aNK8BwfEW6uvEGneCT4f1C/k02NUvra7uDL5scFwcr9mxt28568V+u+CnhjT4" +
                        "tzh4GdZ0kqcp8yjzbOKta679z8f8bvFCpwjkyx0KKrN1Iw5XLl3Une9n27H3dX5EfsAUAFAHz1+1V+0X" +
                        "4X/AGTfgL48/aB8Z6Hf+JPDXgD+y/7S0XwwLc3039q6zaaJH5X2uSKP5ZLxWbLD5Qcc4FfaeHvBOI4jz" +
                        "ijl1CcYVKvNZyvZcsZTd7JvaNttz4rxE44w/DeTVsxrwlOnS5bqNrvmnGCtdpbyT32Plb4h/wDBRjVvB" +
                        "tx4Ofwt+xJ8aPjFoPjXw3oPxJ0zxd8JvCMusaUsOvaemoJatc27lDPCsgWVVJAPc1+hZL4JU8Uqvtc1w" +
                        "eHnTqTpuNSpyyvCTjez1s7aH51nfjjUwrpeyynGYiFSnCopUqXNG04qVrrS6vZ+Z4N8P/8AgszpnxZ0J" +
                        "/FPwr/YS+OXxL8Mx3EmlSeI/h/4Tj1mwW6hVXkhNxp080YkUOpZd2QCMjkV9fnP0X6mXVvZYvN8FRqWv" +
                        "yzqcrs9naSTtpufH5L9KWnmVH2uEyfG1qd7c0KXOrrdXi2r6rQ/ZvT7pr6wsb5rWSya8hiumsrxdk0Jk" +
                        "QPskXsy5wR61/L1anyTcb3s7XWz9D+paNTngpWaur2e69T4y/4J/wD7Wuo/trfs7ab8ctU8EQ/D67v9W" +
                        "1Tw2fDthfPqMarp0qxiTzpIYCS+7pt4r9R8ZPDiHCudywEKrqpRjLma5fi6Wu/zPy3wY8SZ8V5JHHzoq" +
                        "k3OUeVPm+Hrey39D7Zr8qP1cKACgAoAKACgAoAKACgAoAKACgAoAKACgAoA+Y/2sP2T/hb+1/8AC2/+G" +
                        "3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxGftQfsv/ABS/ZM+KWqfC74o6X" +
                        "5NzDuvfDfiSyVzp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6YyuXfht+2B+0N8I/hB8QPgX4A+I13oPw5+J" +
                        "GP7c0mA5lt9/wAtx9imPz232lPkn8sjevBouDij7U/4Jmf8FC/i3+zV4o0z4JW3grUPjX8NvH2pRQ6T8" +
                        "O9AYvrWn6lduI2k0kSZRvN+9JbuVRmG4NGS7M4ysTOFz+x2zhguDb6zNpP9n6rc20cMwu1tzdwxn975E" +
                        "kkDSKdjE5Cuy5yQT1rp9rLl5bu29ul+5xeyjzc1lzWtfrbsaNQaBQAUAFABQB5n8afhtp/xj+D/AMUvh" +
                        "LqpRdP+Jfh7WPAtzNMCRENV0+WyEnAJBQyBgRyCARzXvcLZ5PLMzw+Mh8VGpGf/AIDJO3ztY8DirIoZp" +
                        "lmIwc/hrU5Q/wDAotX+V7n81ngX9ozxJpv/AAQz8V/CYNJH8XrLxTe/sRWeiXBC3b3mt60L17NlJ5I0y" +
                        "7mhXH9zHYmv7pzfgihU8WqeM/5hnSWLb6WhC3N/4MipfP0P4QyjjivT8IqmD1+tKq8Il1vOd3H/AMFyc" +
                        "fl5M+k/2LrDw9/wT5/bR/bN/Z21S6Fn8N7L4XeFP2hdAmYeWk8Hg/QIbLVp4y+MvLLPOzk8t5e49DXwv" +
                        "ilWrcZ8LZXmUFeu8TUoy8nVm3BPySUUu17H3fhXRocFcVZrlk3agsNTrx81SglNrzbcm+9rnhv7Pn7Qn" +
                        "i39jT/gmx4y/a5XTbK+/aH/AG8Pidqup+CT4nfy7WG81W7ureK5u/NZM29v9iu7pWYhWMqBiFavrOM+C" +
                        "8NxRx1SyfmawWWYaKny7tRSbUf70uaEdNVyuyuj5HgrjXE8LcB1c55YvHZniZOHNsnJtJy/ux5Zy10fM" +
                        "ruzO3+NPxs/aK/ZD+G+i/tMaJ/wU48M/tXeKvDl7pMnxk/Z6nk8InS9VstSvYbSePRotJma4iMDzKN0a" +
                        "K2wNKdoUxnyuFuFck4lx08rqZBUwNOal7Kv+95ouKbTqOS5XdJ6NtXtHVtSPW4q4szzhnAwzSnxBTx1S" +
                        "Dj7Wh+65ZKTSapqL5lZtapJ2vLRJxf9Efg7xTpfjnwh4V8a6G5k0Xxhptj4p0eSTG5rXULVLuInaSMlJ" +
                        "B0NfxTmeX1MJialCp8dOTi/WLs/xR/buV5jTxeGp16fwVIqS9JK6/Bn4OfDfxl+35+11+1H+2/8B/Av7" +
                        "Tr/AAP+EXwP8aX9ifiBa+H9N1bWoILme5tdN0bT1kFqqwqLSWaeYyGUYRdwDc/17nmV8HcN8P5TmGIwH" +
                        "1nE4minyc8owbSTnUlvr7yUVbl3dtD+PMizTjPibiHN8vw+YfVsNhqzXOoRlNJtqFOO2nutyd+bZX1OX" +
                        "/Z2+IH/AAUk/aK+I3xx/Yb1n9pvTvh1f/su6rdW3xA/ab0TQLO/8U6/YXM5g0m0gtXeCCIOIZJpbgETB" +
                        "diMSwYv6HG2TcDZJgcJn0MBKqsbFcmHc3GnBpXnJvVu10lHWN7taWt5/BGdcd55jsXkE8wjReCk+fEKC" +
                        "lUmm7Qio6JXs25aStZPW9/rn/gnH+0B+0Be/GX9qr9jH9pnxvD8VfHv7NF7p1z4V+KsNpHZ3Ws6LqSuV" +
                        "+1R242B0QwOuS0n7xlZm2bj+beN/BuTQyvLs7yuk6FHGKXNTvdRnH+VvXV8y6L3U0lex+leBnGmdTzTM" +
                        "cjzWsq9bBuPLUtZzhL+ZLS6XK+r95pt2ufLH7V3if4//s7+H/HvjvVv+CxOiTftCeBba78XaT+z5Po/g" +
                        "3TbG/hs42uBpX9lxzzTedNGuyGSWImR+MAncv6F4d4DJs7rUcPDhmf1Kq1F1uarJpvTn57JWT1aT0XpZ" +
                        "/nniNmGdZJRrYifFEPrtJOSoctKKklrycl27taJtavTrdcP/wAFPfjtdftNf8Ed/gF8dNR0yHRtX+IXi" +
                        "Tw1qWvaZp3mfZotRt7PWLG7EImJYRGeBygYkhcAlup9bwD4RjkPibjMBGTlGlTqJN7uLdNxvbrZq/n0R" +
                        "5H0gOMJZ/4YYLMJRUZValNtLZSSqKVr62unby6vc+xdL/aG+O37eX7Uk/g/9lP4hXXwu/Y6/Z+vpNK+M" +
                        "nx48OW2nXF14z15ArtpOkSajFcp5KoV/fInCsZCSGgD/mOI4LyjhDh9Vs2oqtmeKjelRk5JUofzzUWne" +
                        "/2W91y6Wm1+oYfjbOOMeIXQyiu6GV4WVqtaKi3Vn/JTck1a32ktnza3gnxXx0/an+I3x1/bK+JP7LfgP" +
                        "9qzRP2NPgx+z9Y2J+J/xR1CbQo/EPiLX9ShE66fpra9KixxQAkSPGAysjbiwdBXq8I+HuByjhihmuIy6" +
                        "eYYrFSfs6aU+SEIu3NPkWrfRPRpq1rM8ni/xEx2ccU18pw+Ywy/C4WK9pUbhzznJX5Yc70S6tapp3vdH" +
                        "XfsOftP/E6w/a1+J/7E/wATPj9pX7WHh7TPDUXxe+Dfx98N/wBkm7ksFuYLO50zUjosksLzRtPkMzb/A" +
                        "JCWJWRFTzfFngHAT4cw+eYXBywM3U9lVoy5rXs2pw50mk7bLTVW1Tb9Pwj8QMwhxJiMixWNhjoRp+1pV" +
                        "o8t+W6ThPkbTavu9dG27SSXqP8AwWi/5RpftJ/9yd/6n2h18/8ARc/5LvA/9xf/AEzUPofpUf8AJBY//" +
                        "uF/6epn2Z+yt/ybB+zh/wBiF4P/APUetK/MPEL/AJH+O/6/1f8A0uR+peHf/JP4D/rxS/8ASIn5c/8AB" +
                        "v8Af8mKat/2PviD/wBN2l1+/wD0yf8Akro/9eIf+lTP57+hh/ySEv8Ar/P/ANJgfuBX8oH9an8rn/BLH" +
                        "4Kftt/HT9jVrL4RftSRfst/C/wtretweD4/Dfh+31fVvEetyPHczz311cTRtbWkRZIUSHJY7yykBc/6E" +
                        "fSD4q4UyjifmxmXvG4icIc3NNxjCGqSiknzSerbe2iT3t/nf9HjhTizN+F+XB5gsFh4Tny8sFKVSejbk" +
                        "21yxWiSW+ra2v8AqF/wTh/aZ+Pv7UH7O3xz8D/E7xBZaV+018C9b134KX/xCtrCCW0k1KG0ZLLUprWJI" +
                        "oJGiuN4kjRVVxGDtG81+A+OHAeT5BneEr4WDlgMTCFVQu78rfvQTd2rxtZttq++h/QXgZx9nPEGR4zD4" +
                        "qcY5hhpzpOdlbmS92bSsnaV7pJJ22Vz4B/am+O3xz/Y70S6+K3hr/grRoP7RPxj8D6jYf8ACf8A7Nera" +
                        "d4ShtdWtrnUIbS4trfT9InnktHh8zfIgCSCIM6uhUbv2Tw+4RyniaqsJV4cnhMLUjLkrqVRuLUW03KSS" +
                        "knayeq5rJp30/GPEPi/N+GKTxdLiSGLxVKUeeg40kpJySaUYtuLV7taPlu01bX6d/4KMftiftEeB7D/A" +
                        "IJ4+Kf2WdTGmax+0rqaLB4G1aO2ms9al1m00d9Msrx5ohIIxLfgOY2jYgnkcEfA+CPhlkmLnnVLNo80c" +
                        "HH41dOCi6nPKNna9o6XuvJn3/jj4n53hIZJVymXLLGS+B2am5KnyRldXteWtrPzRxX7Tegf8FMP2KPhu" +
                        "P2vW/bLj/aEh8E3Gn6p8bPgjrXhbTtL0B9OvLqK1lTTmtS0gihkmVS6rDJszJkYKH1eA8ZwJxVjv7G/s" +
                        "v6q6ikqVVVJSnzJNrnvpdpXs3JX93szyuPsFx7wpgP7Z/tVYtU3F1aLpxjDlbSfJbWybtdKLt73Sx0/7" +
                        "b/7ZH7RFr4w/wCCZ+v/ALH+vrbxftiWOty2fgjxZDbPpN1Jqmm6E+lT6gwgedFsW1hpphG4yI8Eda8/w" +
                        "o8Mcklhs+p5zC7wEoXnFvmXLKpzqOtnz8lldPe56Hi14o53HFZBUyWdlmEZ2hJLlfNGnyOWl1ye0cpWa" +
                        "2scX+06/wDwUa/4J5eF9F/av1D9rlv2qvh5o+paXYfHj4WeLPDOm6LZx2mo3SWYl09rMzGCMzSrErRmN" +
                        "kdkLLIpZB6vAS4I41xE8ojlv1KvKMnRqRqSm7xV7Sva7sm2ndNJpOLszyuP3xzwTh4ZxLM/r1CMoqtTl" +
                        "TjBWk7Xja9ldpK1mm02pK6PZf2uv22/F3in41fAH9l39n/42aH+zlYfF3wpB8e/iJ+0f8QBpTf2R4Xv0" +
                        "k+xWunxatKlu15ceWSQxyNyFWA3sPl/Dbwpw2HyrGZrmOEni5UKrowoQ5veqK3M5OK5uWN/wd09EfU+J" +
                        "fixicRmuCynLsXDCRxFJVp158vu03flUVJ8vNK34qzWrPP/AITftKfE39nb9tX4I/s9a7+2Jpv7bXwK/" +
                        "aVttT0vQ/Egl0C68Q+E/EenQ+cqTy6DLKXguC0ar5pAIdioHlMX9niPgXAZ3wri8xp5ZLLsXg3FuPvqF" +
                        "SEnbRTSs46vTsrt8yt4vDfHmPyTivCZbUzSOZYPGKSUvcc6c4q+rg3dS0Wvd2S5Xfj/AIZfET9vz9rX9" +
                        "rP9uH9nbwH+0rH8GvhD8FfGVxFffEKDQtN1TxDp1jcXV7Z6do2mJIIEWOX7HLJJOzeYvlgBvmKt6efZJ" +
                        "wdw5w5lOZYjAfWMTiKKtDnlGEmlFzqT3d1zJKK91320uvMyDPOM+JOJM3y3D4/6vhsNWd58kZTim5KFO" +
                        "C0VnytuT95WWutn9GfsAfHH9pfQ/wBpv9pb9hb9qLx2vxj8TfBKx0zx14C+Ly2Vvp8+oaJfrbsFuY4B8" +
                        "zMt9AylmZkYSIzuApHxHjJwnkVXIcBn2VUfq9PEylCdK7kozV9m/wDDJdE1ytJan3Hgxxdn1HP8fkGbV" +
                        "vrFTDRjOFWyi5Qdt0t/ii+rT5k29D9g6/mg/pwKACgAoAKACgAoA+Y/2sP2T/hb+1/8Lb/4bfEmw8m5h" +
                        "8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/FZ8dP2NPjv8Bvjvb/ALPuv+D7nX/GWv3KW" +
                        "nw8m8NQS3Fv4lt7iXyoJ7AgZYMeHU/NG2Q+CDWLR0qSaP6lv+Cbf/BNvw1+yB4ag+IPxBgtvEv7RHiW2" +
                        "8vVdVj2z23hy2nX5rCwbkFyDiecff8Aur8mS+kY2MJzufqzVmYUAFABQAUAFABQB/MPpX7J3xdT/grrq" +
                        "3wxfwNqo/ZeX4mR/tuHxYNOvV0MaxD4fl1WNEuCn2ct/aF0Lcx5yApwMV/e+I8RctfhtHFe2j/aH1b6p" +
                        "y8y5+VzUXpfm+Bc1/M/gHD+HGZrxLlhfYy/s/6z9b5uV8nMoOS1+H45ctt9D03/AILbfBv413PxJ+B/x" +
                        "g+AHgjV/GniLx54V8X/ALMfxEtvCWnXl+66Nq8WLZZ/scb7I2OpXR3PhQwHXJx4P0VOJ8qjgcXg8xqwp" +
                        "wpVaWIhzSS96L1tdq79yGi1se99LHhbNZY/CY3LqM6k6tKrh58sXL3ZLS9k7L356vS6R9F/8FBP2EvGH" +
                        "iv9gj4FfCX4HeG7Xx14v/ZPuvC3iPRfA12kbxeJbXQtKk0m9t/Km2JK84l89lYgybWUZZwD8T4M+LuGw" +
                        "/GGLxmPqOlSxyqRc1vTc5KUXdbJW5U1tdPZH3HjT4P4rE8G4PB4CmqtXAunJQe1RQi4yVna7d+Zp72a3" +
                        "Z8y+D/jP/wTE8QWui6Fq/8AwS38SaX8Xro22n6/8JdK+EKX9/ZX0v7uRVcLD5kKSK4DlVcqpPlg5UfeZ" +
                        "nwtx9RlOpDiCnLDK7VR4mya6d7Nq2l2rv4up8FlfFXh/XjCnPh6pHFOylSWF5pJ9e10nfWybS+FPQ/oo" +
                        "0bR9K8PaRpWgaFp0Oj6HodtBo+jaTpsaw29raW0SwQwxRoAqoiKFVQMADFfxPisTUr1ZVKknKcm229W2" +
                        "9W2+7Z/b2FwtOhSjTpxUYRSSS0SS0SS7JbH5Qf8E6/BXjLwv+1J/wAFQtY8S+EtT8O6T4u+JVtqvhTVN" +
                        "dsLq0t9UtRLqxM1pJcIizxjevzRkjkc81/RXjZmuFxHD/D8KVSM5U8O1JJpuLtDSST0fkz+cfA/KsVh+" +
                        "IeIJ1aUoRqYhOLcWlJXnrFtarzRzP7C3gXxv4e/4KNf8FOPFHiDwdquh+GfFupeHZfCviLWNPu7ax1NI" +
                        "mvd7WlxPGscwXcMlGOM13eLeb4SvwRkFKnVjKpTjPmipJuPw/Ek7r5nB4Q5Pi6HHGf1alKUadSUOWTi0" +
                        "pfF8Las/keZ/DX4dfHS1/b6/wCCtfiPwH4X1Xw74g8aeBrfTvgn421OxuLTTbvxCPD0EVk1teXKRwSGO" +
                        "5C7tr4GDnGK97Pc7yiXB3DlLEVIzhTrN1YJpyUOd814q7V436Hg5Dkebx4y4kq4enKE6lBKlNpqLnyLl" +
                        "tJ2TtK3XQ/P/wCBWsfCTwx+xN8T/wBm63/YY8Y+Nv8AgoN4w0fxp4P8cazrvgU3WqWuo61HqFtHqs2ta" +
                        "onmWsFtbSgqi7WMqEAEuZT+ycXYbMsRxVh8zeb0qeS050pQSrWi4x5W4KnHSTlJbu65X5cp+L8IYrLcP" +
                        "wniMrWUVqmdVIVYzbo3kpT5kpupLWKjF7Kz5ltrzP0r9oH4RfFjVf8AghZ+y58PdL+GHiLUvH2j+JbW5" +
                        "1bwPYaLqU2sWsaaj4iLNNZxwmZFAkXJZB94eorw+DeJcup+LeYYmeIpqjKm7Tc4qL92ltK9ns+vQ97jT" +
                        "hnMqnhDl+Ghh6jrRqK8FCTkveq7xtdbrp1Pqbxl8FfGX/BLP9qXwl8av2Y/hzrfjH9jj45/YvAPx7+Cn" +
                        "w/s9R1u88OX9nAUt9XtLeETzuAoaUEhsnzYmZfNiK/nuWcVYXxB4fqYHNK8KeZ4a86NWbjBTTesJN2S1" +
                        "sun2ZJPllf9DzThTFeHnENLHZVQnUyvE2hWpQUpuEktJxSu3pd9ftRbXNG3kXxs+EvgL9mz9uX42/Hb9" +
                        "o/9kq6/al/ZS/ahg0rxh4a+I+i+F4vE154O1mK3CzQz20qq0EUpkctnaXQRFd7o6j6XhXiPGZ7wlhMBl" +
                        "mZLBZjgnKMoOp7NVY30aa3asrb2fNeyaZ8zxXw3g8h4uxeYZnlrxuXY1RlGoqftHSklqmnsnd32uuW12" +
                        "mj9B/2F9e/Yn8ffEHxXr/7L/wCyFqXwav8Aw7pMUcnxZ1jwAPCtjqNvqEyNJZWl23zSOPLR5EIXIwRuA" +
                        "yPxjxbwfFWDwVOnmuZRxCnL+Gq3tHFxWkpR6btJ69nY/a/CLGcKY3G1KmVZZLDuEf4jo+zUlJ6xjLq9E" +
                        "2tO6udF/wAFe/Cvijxt/wAE7v2hfDHgzw3f+LvEup/8In/Zvh7wxZ3F/fXHk+OdGuJPKgtEkkfZHGzth" +
                        "ThQSeAa4vo15jh8JxrgqtepGnTXtLyk1FK9GolduyV27ep2/SYy7EYvgjG0qFOVSpL2doxTk3atTbsld" +
                        "uyTfofXP7M2n3+k/s3/ALPularZTaZqemeCPCmn6lpuoRvDPbzw6DaxyRyRyAMjowIZSAQRg1+bceVoV" +
                        "M8xs4NOLrVGmtU05uzT6pn6VwDRnTyLBQmnGUaNNNPRpqEbpro0fmv/AMELvAvjf4efsVapoPj/AMHar" +
                        "4H11/G+u6gmi+MNPu9MuzBJp+mqkghvY432MUIDYwcH0r90+ltm+ExvFUamHqxqQ9jBXjJSV+ael02rn" +
                        "4R9EPJ8XguFJU8RSlSn7abtKLi7csNbNJ2P2Wr+YD+pD8jv+CJXgrxl4B/YW0Hw9478Jan4K1+PxL4iu" +
                        "5ND8W2F1pt4sUtxGUcw3kcbhWA4OMGv6Q+lXmuFxnF06mHqRqQ9nBXi1JbPqm0fzV9E/KsVguEIU8RSl" +
                        "Tn7SbtKLi7XXRpM+DvhB8I/2mIP2XP+CxWhfDXwVr/hr4mePPH+s6h8P4bjTtQsbzWdJk1aV78aZ5iRv" +
                        "O1xYGaOExZ3MygZJFfr/EvEmQviDhipiqsJ0KVCKn70Woy5Vy8+9uWfK3fZJ3Px7hnhrP1w/wAUU8LSq" +
                        "QxFWvNw92Sc48z5uTa/NDmStu2rHzb441f4IeOP+CcU/wCzd+y5+wv4tuP2iYdE8PR/Gjxq3gNo7/Rr7" +
                        "RtT0/VtXnudYmia5uZLqa12QwRnJjkACoEEdfc5Ths2wnHCzPNc3pLBc8/ZQ9tpJSjKMEoJ8sVFO7k+q" +
                        "3d+Y+EzbE5Ti+BnlmU5RVeOUIe1n7H3oOEoym3Ua5pOTVoxXR7JLlPov/golf8AjfwR4B/4Im6n4V8Gz" +
                        "+I/iR4Q1Hwtf+HPh9eBrO5v9b0+y8LyW+nOLgKYnlnjWI7wNpPPSvifBSjhMXjOKo1aqhQqRqKU1qlCT" +
                        "rXkrbpJ303PuPG6ti8Jg+E50aTnXpypuMHo3OKo2g77NyVtdj1v9r39uXxF+2z8Fdd/ZB/Ze/Zv+IrfG" +
                        "n4xNY+FPHNr8SvDM2iWXhCwF7FPeHUbiaR442/d+UXbCKGLbtwVT834a+EtDhXNYZzmuOw/1XD3lD2dR" +
                        "TdV2ajypK73vbd2ta12vpfEzxdr8WZVPJcpwGI+t4i0Z+0puCpK6cudt2W1r7K7d72T4f8A4KC+G/F37" +
                        "Kvj3/gi94S+FnhWf4s+K/gJH4g0HS/CmkBYrvxH/YGm+FYLyOAMDie6ihlKAKTvYYUnAPreDOOw3EOD4" +
                        "prYuoqFPFODcntDnlWcW/KLav5LVrc8nxpwGJ4dxnCtHCU3XqYXnSit6nJGipJecknbzeiexv8A7Z/7X" +
                        "XiH/got8J4f2Lv2VfgD47bxf8V9U0OD4r+IPil4buND03wfp2m6nb6w326d2lVJFntoy5zt2Bghd2VTx" +
                        "+F3htR4JzF53m2MoeyoRn7ONOanKrKUXH3VpdWbt1vZuyTZ2eKfiXX44y1ZHlGCr+1ryh7SVSm4RpRjJ" +
                        "S9562d0r9LXSu2kR/tq/snWf7Pv7SH7Pn7Sur/s3S/tcfsy+FvAWmfs+fGPwLp+jx65q+mHQraS2s9Zj" +
                        "s5CQf3SxDe3yrsdHdPMRg/CzxFlnWR43LIY5YHHzryrUpuXJGXO05U3L1vpu7ppPlaJ8VfDiOS57gs0n" +
                        "gHj8BChGhVgo88o8iajUUfS2uys02uZM+jP2TfGP/BOn4p/G3wbZfs7/sPan4T8XaXHd+J7P4t3nwzTQ" +
                        "9L0CaxikG2XUX5indgY49qkFsruzgH4jxGyzjbL8qqyzLNozpStF01X55TTttHqlu+ttbH3PhvmnA+Y5" +
                        "tSjluUSp1Y3kqrw/JGDV959G3oul9Lln/gnB4F8b+Fv21f+Cr+veJ/B2q+HNC8ZeN9A1DwhrWvafd2dp" +
                        "qsEeoeJ2eSzmuI0SdFEyEtGSBuX1FR44ZvhMRwrw7TpVYznTozUkpJuL5aOkkndPR79mX4F5Pi8PxXxH" +
                        "Uq0pQhUrQcW4tKS5q2sW1ZrVbX3R0vwe8FeMrH/AILG/tbeOb3wlqdn4K1r4a+GtK0bxhdWF1Hpd3dRL" +
                        "ou+GG7dBDJIvltuVWJGDkcGuHibNcLPwxy2hGpF1Y4io3G65kn7TVxvdLVa2O/hjKsVDxQzLESpSVKWH" +
                        "ppScXytr2d0pWs3o9Ez6T/Ya/bA1/8AbG8EePvGGv8AwF1v4CzeCvENx4HttH8ZTSXDX6QQRymZXls7I" +
                        "rIhfZLEFYI2BvbPHwviz4aUeGMXRo08ZDFKpTU7xVrXbVvilo907q66I+88I/E2txRhK1apg54V06jha" +
                        "TveyTv8MdVs1Z2fVn29X5QfrIUAFABQAUAFABQBkXnh/QdR1XRtd1DRLS+1zw79o/4R/Wby2hlu7D7ZG" +
                        "IZ/s8zqXi81AFfYRuHByKANegAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAC" +
                        "gAoAKACgD89f20v2QPG/wC0v8Xv2JfiJ4U8TaVoOmfsxePbT4r+LbHxCbsT6hZ2+qaVfNDafZoZV80rY" +
                        "OB5hUZI564/aPC3xLwmQ5ZmuGrU5SljKDpxcbWi3GavK7WnvLa7PxTxV8MsXn2Z5TiaNSMY4KuqklK95" +
                        "JSg7Rsnr7r3stj9Cq/Fz9rPg39qD9lHxl8c/wBpj9iD43eHvEemaRoH7L2seJfEfi7SdZN0LzUItai0u" +
                        "OJbPyIpE3IbFt3mMo5GM81+v8A+ImFynIc2wNSEpTxsKcYtWtHkc7812nrzK1kz8d8QPDnFZvn+UY+nU" +
                        "jGGCnUlJO95KahblsmtOV3u0feVfkB+xBQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAH//ZCw==";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.StackedBarSeriesLabel stackedBarSeriesLabel1 = new DevExpress.XtraCharts.StackedBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.StackedBarSeriesView stackedBarSeriesView1 = new DevExpress.XtraCharts.StackedBarSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary10 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary11 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary12 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary13 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary14 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary15 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary16 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary17 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary18 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary19 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary20 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary21 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary22 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary23 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary24 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary25 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary26 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary27 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary28 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary29 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary30 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary31 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary32 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary33 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary34 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary35 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary36 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary37 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary38 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary39 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary40 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary41 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary42 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary43 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary44 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary45 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary46 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary47 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.pageFooterBand1 = new DevExpress.XtraReports.UI.PageFooterBand();
            this.reportHeaderBand1 = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupHeader2 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupFooter2 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupHeader3 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter3 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupHeader4 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupHeader5 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.label68 = new DevExpress.XtraReports.UI.XRLabel();
            this.label67 = new DevExpress.XtraReports.UI.XRLabel();
            this.label63 = new DevExpress.XtraReports.UI.XRLabel();
            this.label62 = new DevExpress.XtraReports.UI.XRLabel();
            this.label61 = new DevExpress.XtraReports.UI.XRLabel();
            this.label60 = new DevExpress.XtraReports.UI.XRLabel();
            this.label59 = new DevExpress.XtraReports.UI.XRLabel();
            this.label58 = new DevExpress.XtraReports.UI.XRLabel();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label32 = new DevExpress.XtraReports.UI.XRLabel();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label44 = new DevExpress.XtraReports.UI.XRLabel();
            this.label41 = new DevExpress.XtraReports.UI.XRLabel();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo3 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label198 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.label36 = new DevExpress.XtraReports.UI.XRLabel();
            this.label35 = new DevExpress.XtraReports.UI.XRLabel();
            this.label37 = new DevExpress.XtraReports.UI.XRLabel();
            this.label39 = new DevExpress.XtraReports.UI.XRLabel();
            this.label38 = new DevExpress.XtraReports.UI.XRLabel();
            this.label33 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.pageInfo4 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label34 = new DevExpress.XtraReports.UI.XRLabel();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.pageBreak1 = new DevExpress.XtraReports.UI.XRPageBreak();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.RepVentaNeta = new XtraReportSerialization.RepVentaNetaDataSet();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label70 = new DevExpress.XtraReports.UI.XRLabel();
            this.label69 = new DevExpress.XtraReports.UI.XRLabel();
            this.label66 = new DevExpress.XtraReports.UI.XRLabel();
            this.label65 = new DevExpress.XtraReports.UI.XRLabel();
            this.label64 = new DevExpress.XtraReports.UI.XRLabel();
            this.label47 = new DevExpress.XtraReports.UI.XRLabel();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label72 = new DevExpress.XtraReports.UI.XRLabel();
            this.label71 = new DevExpress.XtraReports.UI.XRLabel();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.label48 = new DevExpress.XtraReports.UI.XRLabel();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label74 = new DevExpress.XtraReports.UI.XRLabel();
            this.label73 = new DevExpress.XtraReports.UI.XRLabel();
            this.label56 = new DevExpress.XtraReports.UI.XRLabel();
            this.label57 = new DevExpress.XtraReports.UI.XRLabel();
            this.label54 = new DevExpress.XtraReports.UI.XRLabel();
            this.label55 = new DevExpress.XtraReports.UI.XRLabel();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.label26 = new DevExpress.XtraReports.UI.XRLabel();
            this.label25 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label24 = new DevExpress.XtraReports.UI.XRLabel();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.label27 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.label78 = new DevExpress.XtraReports.UI.XRLabel();
            this.label79 = new DevExpress.XtraReports.UI.XRLabel();
            this.label77 = new DevExpress.XtraReports.UI.XRLabel();
            this.label28 = new DevExpress.XtraReports.UI.XRLabel();
            this.label76 = new DevExpress.XtraReports.UI.XRLabel();
            this.TableTableAdapter = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand1 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection1 = new System.Data.OleDb.OleDbConnection();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.Saldo1c = new DevExpress.XtraReports.UI.CalculatedField();
            this.Saldo2c = new DevExpress.XtraReports.UI.CalculatedField();
            this.Saldo3c = new DevExpress.XtraReports.UI.CalculatedField();
            this.Saldo4c = new DevExpress.XtraReports.UI.CalculatedField();
            this.Saldo5c = new DevExpress.XtraReports.UI.CalculatedField();
            this.Porcentaje1c = new DevExpress.XtraReports.UI.CalculatedField();
            this.Porcentaje2c = new DevExpress.XtraReports.UI.CalculatedField();
            this.Porcentaje3c = new DevExpress.XtraReports.UI.CalculatedField();
            this.Porcentaje4c = new DevExpress.XtraReports.UI.CalculatedField();
            this.Porcentaje5c = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado1 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado2 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado3 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado4 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado5 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado6 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado7 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado8 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado9 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado10 = new DevExpress.XtraReports.UI.CalculatedField();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label68,
                        this.label67,
                        this.label63,
                        this.label62,
                        this.label61,
                        this.label60,
                        this.label59,
                        this.label58,
                        this.label45,
                        this.label43,
                        this.label40});
            this.Detail.HeightF = 18F;
            this.Detail.Name = "Detail";
            this.Detail.Scripts.OnBeforePrint = "Detail_BeforePrint";
            // 
            // pageFooterBand1
            // 
            this.pageFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line7,
                        this.pageInfo2,
                        this.pageInfo1});
            this.pageFooterBand1.HeightF = 24.25003F;
            this.pageFooterBand1.Name = "pageFooterBand1";
            // 
            // reportHeaderBand1
            // 
            this.reportHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label32,
                        this.label30,
                        this.label31,
                        this.label29,
                        this.label44,
                        this.label41,
                        this.line6,
                        this.pageInfo3,
                        this.label198,
                        this.pictureBox2});
            this.reportHeaderBand1.HeightF = 168.2916F;
            this.reportHeaderBand1.Name = "reportHeaderBand1";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 38F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 40F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label36,
                        this.label35,
                        this.label37,
                        this.label39,
                        this.label38,
                        this.label33,
                        this.pictureBox1,
                        this.pageInfo4,
                        this.label34,
                        this.line1,
                        this.pageBreak1,
                        this.chart1});
            this.ReportFooter.HeightF = 750.209F;
            this.ReportFooter.Name = "ReportFooter";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label4});
            this.GroupHeader1.Expanded = false;
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Rama", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 18.00001F;
            this.GroupHeader1.KeepTogether = true;
            this.GroupHeader1.Level = 1;
            this.GroupHeader1.Name = "GroupHeader1";
            this.GroupHeader1.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            this.GroupHeader1.Visible = false;
            // 
            // GroupHeader2
            // 
            this.GroupHeader2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label10,
                        this.label9});
            this.GroupHeader2.Expanded = false;
            this.GroupHeader2.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Cuenta", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader2.HeightF = 23.00002F;
            this.GroupHeader2.KeepTogether = true;
            this.GroupHeader2.Name = "GroupHeader2";
            this.GroupHeader2.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            this.GroupHeader2.Visible = false;
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label70,
                        this.label69,
                        this.label66,
                        this.label65,
                        this.label64,
                        this.label47,
                        this.label14,
                        this.label7,
                        this.label13,
                        this.label18,
                        this.label12});
            this.GroupFooter1.HeightF = 18F;
            this.GroupFooter1.Name = "GroupFooter1";
            this.GroupFooter1.Scripts.OnBeforePrint = "GroupFooter1_BeforePrint";
            // 
            // GroupFooter2
            // 
            this.GroupFooter2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label72,
                        this.label71,
                        this.label49,
                        this.label48,
                        this.label46,
                        this.label42,
                        this.label20,
                        this.label17,
                        this.label11,
                        this.line3,
                        this.label19});
            this.GroupFooter2.HeightF = 24.00001F;
            this.GroupFooter2.Level = 1;
            this.GroupFooter2.Name = "GroupFooter2";
            this.GroupFooter2.Scripts.OnBeforePrint = "GroupFooter2_BeforePrint";
            this.GroupFooter2.Visible = false;
            // 
            // GroupHeader3
            // 
            this.GroupHeader3.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Orden1", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader3.HeightF = 0F;
            this.GroupHeader3.KeepTogether = true;
            this.GroupHeader3.Level = 2;
            this.GroupHeader3.Name = "GroupHeader3";
            this.GroupHeader3.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            this.GroupHeader3.Visible = false;
            // 
            // GroupFooter3
            // 
            this.GroupFooter3.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label74,
                        this.label73,
                        this.label56,
                        this.label57,
                        this.label54,
                        this.label55,
                        this.line5,
                        this.label26,
                        this.label25,
                        this.label1,
                        this.label16,
                        this.label24});
            this.GroupFooter3.HeightF = 24.00004F;
            this.GroupFooter3.Level = 2;
            this.GroupFooter3.Name = "GroupFooter3";
            this.GroupFooter3.Scripts.OnBeforePrint = "GroupFooter2_BeforePrint";
            // 
            // GroupHeader4
            // 
            this.GroupHeader4.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label23,
                        this.label27,
                        this.label22,
                        this.label15,
                        this.label21});
            this.GroupHeader4.HeightF = 18.75F;
            this.GroupHeader4.KeepTogether = true;
            this.GroupHeader4.Level = 3;
            this.GroupHeader4.Name = "GroupHeader4";
            this.GroupHeader4.RepeatEveryPage = true;
            this.GroupHeader4.Scripts.OnBeforePrint = "GroupHeader4_BeforePrint";
            // 
            // GroupHeader5
            // 
            this.GroupHeader5.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label78,
                        this.label79,
                        this.label77,
                        this.label28,
                        this.label76});
            this.GroupHeader5.HeightF = 18F;
            this.GroupHeader5.KeepTogether = true;
            this.GroupHeader5.Level = 4;
            this.GroupHeader5.Name = "GroupHeader5";
            this.GroupHeader5.RepeatEveryPage = true;
            this.GroupHeader5.Scripts.OnBeforePrint = "GroupHeader5_BeforePrint";
            // 
            // label68
            // 
            this.label68.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje5c", "{0:0.0%;(0.0%)}")});
            this.label68.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label68.LocationFloat = new DevExpress.Utils.PointFloat(1000F, 0F);
            this.label68.Name = "label68";
            this.label68.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label68.Scripts.OnBeforePrint = "label68_BeforePrint";
            this.label68.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label68.StylePriority.UseFont = false;
            this.label68.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:0.0%;(0.0%)}";
            this.label68.Summary = summary1;
            this.label68.Text = "label68";
            this.label68.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label67
            // 
            this.label67.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo5c", "{0:$#,#.00}")});
            this.label67.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label67.LocationFloat = new DevExpress.Utils.PointFloat(900F, 0F);
            this.label67.Name = "label67";
            this.label67.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label67.Scripts.OnBeforePrint = "label67_BeforePrint";
            this.label67.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label67.StylePriority.UseFont = false;
            this.label67.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:$#,#.00}";
            this.label67.Summary = summary2;
            this.label67.Text = "label67";
            this.label67.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label63
            // 
            this.label63.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje4c", "{0:0.0%;(0.0%)}")});
            this.label63.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label63.LocationFloat = new DevExpress.Utils.PointFloat(850F, 0F);
            this.label63.Name = "label63";
            this.label63.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label63.Scripts.OnBeforePrint = "label63_BeforePrint";
            this.label63.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label63.StylePriority.UseFont = false;
            this.label63.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:0.0%;(0.0%)}";
            this.label63.Summary = summary3;
            this.label63.Text = "label63";
            this.label63.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label62
            // 
            this.label62.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo4c", "{0:$#,#.00}")});
            this.label62.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label62.LocationFloat = new DevExpress.Utils.PointFloat(750F, 0F);
            this.label62.Name = "label62";
            this.label62.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label62.Scripts.OnBeforePrint = "label62_BeforePrint";
            this.label62.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label62.StylePriority.UseFont = false;
            this.label62.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:$#,#.00}";
            summary4.IgnoreNullValues = true;
            this.label62.Summary = summary4;
            this.label62.Text = "label62";
            this.label62.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label61
            // 
            this.label61.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje3c", "{0:0.0%;(0.0%)}")});
            this.label61.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label61.LocationFloat = new DevExpress.Utils.PointFloat(700F, 0F);
            this.label61.Name = "label61";
            this.label61.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label61.Scripts.OnBeforePrint = "label61_BeforePrint";
            this.label61.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label61.StylePriority.UseFont = false;
            this.label61.StylePriority.UseTextAlignment = false;
            this.label61.Text = "label61";
            this.label61.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label60
            // 
            this.label60.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo3c", "{0:$#,#.00}")});
            this.label60.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label60.LocationFloat = new DevExpress.Utils.PointFloat(600F, 0F);
            this.label60.Name = "label60";
            this.label60.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label60.Scripts.OnBeforePrint = "label60_BeforePrint";
            this.label60.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label60.StylePriority.UseFont = false;
            this.label60.StylePriority.UseTextAlignment = false;
            summary5.IgnoreNullValues = true;
            this.label60.Summary = summary5;
            this.label60.Text = "label60";
            this.label60.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label59
            // 
            this.label59.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje2c", "{0:0.0%;(0.0%)}")});
            this.label59.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label59.LocationFloat = new DevExpress.Utils.PointFloat(550F, 0F);
            this.label59.Name = "label59";
            this.label59.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label59.Scripts.OnBeforePrint = "label59_BeforePrint";
            this.label59.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label59.StylePriority.UseFont = false;
            this.label59.StylePriority.UseTextAlignment = false;
            this.label59.Text = "label59";
            this.label59.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label58
            // 
            this.label58.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo2c", "{0:$#,#.00}")});
            this.label58.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label58.LocationFloat = new DevExpress.Utils.PointFloat(450F, 0F);
            this.label58.Name = "label58";
            this.label58.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label58.Scripts.OnBeforePrint = "label58_BeforePrint";
            this.label58.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label58.StylePriority.UseFont = false;
            this.label58.StylePriority.UseTextAlignment = false;
            this.label58.Text = "label58";
            this.label58.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label45
            // 
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje1c", "{0:0.0%;(0.0%)}")});
            this.label45.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(400F, 0F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.Scripts.OnBeforePrint = "label45_BeforePrint";
            this.label45.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label45.StylePriority.UseFont = false;
            this.label45.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:0.0%;(0.0%)}";
            this.label45.Summary = summary6;
            this.label45.Text = "label45";
            this.label45.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label43
            // 
            this.label43.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo1c", "{0:$#,#.00}")});
            this.label43.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(300F, 0F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.Scripts.OnBeforePrint = "label43_BeforePrint";
            this.label43.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label43.StylePriority.UseFont = false;
            this.label43.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:$#,#.00}";
            this.label43.Summary = summary7;
            this.label43.Text = "label43";
            this.label43.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label40
            // 
            this.label40.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label40.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(20F, 0F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.Scripts.OnBeforePrint = "label12_BeforePrint";
            this.label40.SizeF = new System.Drawing.SizeF(270F, 18F);
            this.label40.StyleName = "Title";
            this.label40.StylePriority.UseFont = false;
            this.label40.StylePriority.UseForeColor = false;
            this.label40.StylePriority.UseTextAlignment = false;
            this.label40.Text = "[CentroCostos]";
            this.label40.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line7
            // 
            this.line7.BorderColor = System.Drawing.Color.Gray;
            this.line7.ForeColor = System.Drawing.Color.Gray;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(1067F, 2.249908F);
            this.line7.StylePriority.UseBorderColor = false;
            this.line7.StylePriority.UseForeColor = false;
            // 
            // pageInfo2
            // 
            this.pageInfo2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo2.Format = "Página {0} de {1}";
            this.pageInfo2.LocationFloat = new DevExpress.Utils.PointFloat(685.6541F, 2.249909F);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo2.SizeF = new System.Drawing.SizeF(381.3455F, 18F);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.StylePriority.UseFont = false;
            this.pageInfo2.StylePriority.UseTextAlignment = false;
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.249908F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo1.StyleName = "PageInfo";
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label32
            // 
            this.label32.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label32.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label32.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label32.LocationFloat = new DevExpress.Utils.PointFloat(753.3334F, 23.66664F);
            this.label32.Name = "label32";
            this.label32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label32.SizeF = new System.Drawing.SizeF(313.6666F, 18.00001F);
            this.label32.StyleName = "Title";
            this.label32.StylePriority.UseFont = false;
            this.label32.StylePriority.UseForeColor = false;
            this.label32.StylePriority.UseTextAlignment = false;
            this.label32.Text = "label41";
            this.label32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label30
            // 
            this.label30.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion4")});
            this.label30.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(753.3334F, 77.66666F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(313.6667F, 18F);
            this.label30.StylePriority.UseFont = false;
            this.label30.StylePriority.UseTextAlignment = false;
            this.label30.Text = "label31";
            this.label30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label31
            // 
            this.label31.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(753.3334F, 59.66666F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseTextAlignment = false;
            this.label31.Text = "[Direccion3]";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label29
            // 
            this.label29.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion2")});
            this.label29.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(753.3334F, 41.66667F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseTextAlignment = false;
            this.label29.Text = "[Direccion2]";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label44
            // 
            this.label44.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label44.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label44.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label44.LocationFloat = new DevExpress.Utils.PointFloat(0F, 137.7916F);
            this.label44.Name = "label44";
            this.label44.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label44.SizeF = new System.Drawing.SizeF(350.0001F, 17.99998F);
            this.label44.StyleName = "Title";
            this.label44.StylePriority.UseFont = false;
            this.label44.StylePriority.UseForeColor = false;
            this.label44.StylePriority.UseTextAlignment = false;
            this.label44.Text = "label198";
            this.label44.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label41
            // 
            this.label41.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label41.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label41.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label41.LocationFloat = new DevExpress.Utils.PointFloat(350F, 117.7916F);
            this.label41.Name = "label41";
            this.label41.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label41.SizeF = new System.Drawing.SizeF(403.3334F, 18.00001F);
            this.label41.StyleName = "Title";
            this.label41.StylePriority.UseFont = false;
            this.label41.StylePriority.UseForeColor = false;
            this.label41.StylePriority.UseTextAlignment = false;
            this.label41.Text = "label41";
            this.label41.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.label41.Visible = false;
            // 
            // line6
            // 
            this.line6.BorderColor = System.Drawing.Color.Gray;
            this.line6.ForeColor = System.Drawing.Color.Gray;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 135.7916F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(1067F, 2F);
            this.line6.StylePriority.UseBorderColor = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // pageInfo3
            // 
            this.pageInfo3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo3.LocationFloat = new DevExpress.Utils.PointFloat(753.3334F, 117.7916F);
            this.pageInfo3.Name = "pageInfo3";
            this.pageInfo3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo3.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo3.SizeF = new System.Drawing.SizeF(313.6664F, 17.99999F);
            this.pageInfo3.StyleName = "PageInfo";
            this.pageInfo3.StylePriority.UseFont = false;
            this.pageInfo3.StylePriority.UseTextAlignment = false;
            this.pageInfo3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label198
            // 
            this.label198.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label198.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label198.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label198.LocationFloat = new DevExpress.Utils.PointFloat(0F, 117.7916F);
            this.label198.Name = "label198";
            this.label198.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label198.SizeF = new System.Drawing.SizeF(350F, 17.99999F);
            this.label198.StyleName = "Title";
            this.label198.StylePriority.UseFont = false;
            this.label198.StylePriority.UseForeColor = false;
            this.label198.StylePriority.UseTextAlignment = false;
            this.label198.Text = "label198";
            this.label198.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // label36
            // 
            this.label36.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion2")});
            this.label36.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label36.LocationFloat = new DevExpress.Utils.PointFloat(753.3334F, 54.16667F);
            this.label36.Name = "label36";
            this.label36.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label36.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label36.StylePriority.UseFont = false;
            this.label36.StylePriority.UseTextAlignment = false;
            this.label36.Text = "[Direccion2]";
            this.label36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label35
            // 
            this.label35.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label35.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label35.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label35.LocationFloat = new DevExpress.Utils.PointFloat(0F, 147.1667F);
            this.label35.Name = "label35";
            this.label35.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label35.SizeF = new System.Drawing.SizeF(350F, 18.00003F);
            this.label35.StyleName = "Title";
            this.label35.StylePriority.UseFont = false;
            this.label35.StylePriority.UseForeColor = false;
            this.label35.StylePriority.UseTextAlignment = false;
            this.label35.Text = "label198";
            this.label35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label37
            // 
            this.label37.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label37.LocationFloat = new DevExpress.Utils.PointFloat(753.3334F, 73.66666F);
            this.label37.Name = "label37";
            this.label37.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label37.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label37.StylePriority.UseFont = false;
            this.label37.StylePriority.UseTextAlignment = false;
            this.label37.Text = "[Direccion3]";
            this.label37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label39
            // 
            this.label39.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label39.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label39.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label39.LocationFloat = new DevExpress.Utils.PointFloat(753.3331F, 36.16666F);
            this.label39.Name = "label39";
            this.label39.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label39.SizeF = new System.Drawing.SizeF(313.6666F, 18.00001F);
            this.label39.StyleName = "Title";
            this.label39.StylePriority.UseFont = false;
            this.label39.StylePriority.UseForeColor = false;
            this.label39.StylePriority.UseTextAlignment = false;
            this.label39.Text = "label41";
            this.label39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label38
            // 
            this.label38.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion4")});
            this.label38.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label38.LocationFloat = new DevExpress.Utils.PointFloat(753.3331F, 91.66666F);
            this.label38.Name = "label38";
            this.label38.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label38.SizeF = new System.Drawing.SizeF(313.6667F, 18F);
            this.label38.StylePriority.UseFont = false;
            this.label38.StylePriority.UseTextAlignment = false;
            this.label38.Text = "label31";
            this.label38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label33
            // 
            this.label33.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label33.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label33.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label33.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 127.1667F);
            this.label33.Name = "label33";
            this.label33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label33.SizeF = new System.Drawing.SizeF(349.9999F, 17.99997F);
            this.label33.StyleName = "Title";
            this.label33.StylePriority.UseFont = false;
            this.label33.StylePriority.UseForeColor = false;
            this.label33.StylePriority.UseTextAlignment = false;
            this.label33.Text = "label198";
            this.label33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 12.00002F);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // pageInfo4
            // 
            this.pageInfo4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo4.LocationFloat = new DevExpress.Utils.PointFloat(753.3334F, 127.1667F);
            this.pageInfo4.Name = "pageInfo4";
            this.pageInfo4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo4.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo4.SizeF = new System.Drawing.SizeF(313.6663F, 17.99997F);
            this.pageInfo4.StyleName = "PageInfo";
            this.pageInfo4.StylePriority.UseFont = false;
            this.pageInfo4.StylePriority.UseTextAlignment = false;
            this.pageInfo4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label34
            // 
            this.label34.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label34.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label34.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label34.LocationFloat = new DevExpress.Utils.PointFloat(350F, 127.1667F);
            this.label34.Name = "label34";
            this.label34.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label34.SizeF = new System.Drawing.SizeF(403.3334F, 18.00003F);
            this.label34.StyleName = "Title";
            this.label34.StylePriority.UseFont = false;
            this.label34.StylePriority.UseForeColor = false;
            this.label34.StylePriority.UseTextAlignment = false;
            this.label34.Text = "label41";
            this.label34.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.label34.Visible = false;
            // 
            // line1
            // 
            this.line1.BorderColor = System.Drawing.Color.Gray;
            this.line1.ForeColor = System.Drawing.Color.Gray;
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 145.1667F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(1067F, 2F);
            this.line1.StylePriority.UseBorderColor = false;
            this.line1.StylePriority.UseForeColor = false;
            // 
            // pageBreak1
            // 
            this.pageBreak1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10.00001F);
            this.pageBreak1.Name = "pageBreak1";
            // 
            // chart1
            // 
            this.chart1.AppearanceName = "Pastel Kit";
            this.chart1.AutoBindingSettingsEnabled = false;
            this.chart1.AutoLayoutSettingsEnabled = false;
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart1.DataMember = "Table";
            this.chart1.DataSource = this.RepVentaNeta;
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            this.chart1.Diagram = xYDiagram1;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart1.Legend.HorizontalIndent = 0;
            this.chart1.Legend.TextOffset = 0;
            this.chart1.Legend.VerticalIndent = 0;
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 228.8349F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart1.SeriesDataMember = "GraficaSerie";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "GraficaArgumento";
            this.chart1.SeriesTemplate.DataFilters.ClearAndAddRange(new DevExpress.XtraCharts.DataFilter[] {
                        new DevExpress.XtraCharts.DataFilter("Grafica1", "System.Int32", DevExpress.XtraCharts.DataFilterCondition.Equal, 1)});
            stackedBarSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart1.SeriesTemplate.Label = stackedBarSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions1;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "GraficaValor";
            this.chart1.SeriesTemplate.View = stackedBarSeriesView1;
            this.chart1.SizeF = new System.Drawing.SizeF(1066.999F, 479.7901F);
            // 
            // RepVentaNeta
            // 
            this.RepVentaNeta.DataSetName = "RepVentaNetaDataSet";
            this.RepVentaNeta.EnforceConstraints = false;
            this.RepVentaNeta.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // label4
            // 
            this.label4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label4.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 0F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(350F, 18F);
            this.label4.StyleName = "Title";
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseForeColor = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "[RamaDesc]";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // label10
            // 
            this.label10.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Utilidad", "{0:$#,#.00}")});
            this.label10.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(400F, 0F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(100F, 23F);
            this.label10.StylePriority.UseFont = false;
            this.label10.Text = "label10";
            // 
            // label9
            // 
            this.label9.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label9.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(20F, 0F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(350F, 18F);
            this.label9.StyleName = "Title";
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseForeColor = false;
            this.label9.StylePriority.UseTextAlignment = false;
            this.label9.Text = "[Descripcion]";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // label70
            // 
            this.label70.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje5c")});
            this.label70.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label70.LocationFloat = new DevExpress.Utils.PointFloat(1000F, 0F);
            this.label70.Name = "label70";
            this.label70.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label70.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label70.StylePriority.UseFont = false;
            this.label70.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:0.0%;(0.0%)}";
            summary8.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label70.Summary = summary8;
            this.label70.Text = "label70";
            this.label70.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label69
            // 
            this.label69.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo5c")});
            this.label69.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label69.LocationFloat = new DevExpress.Utils.PointFloat(900F, 0F);
            this.label69.Name = "label69";
            this.label69.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label69.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label69.StylePriority.UseFont = false;
            this.label69.StylePriority.UseTextAlignment = false;
            summary9.FormatString = "{0:$#,#.00}";
            summary9.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label69.Summary = summary9;
            this.label69.Text = "label69";
            this.label69.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label66
            // 
            this.label66.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje4c")});
            this.label66.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label66.LocationFloat = new DevExpress.Utils.PointFloat(850F, 0F);
            this.label66.Name = "label66";
            this.label66.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label66.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label66.StylePriority.UseFont = false;
            this.label66.StylePriority.UseTextAlignment = false;
            summary10.FormatString = "{0:0.0%;(0.0%)}";
            summary10.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label66.Summary = summary10;
            this.label66.Text = "label66";
            this.label66.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label65
            // 
            this.label65.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo4c")});
            this.label65.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label65.LocationFloat = new DevExpress.Utils.PointFloat(750F, 0F);
            this.label65.Name = "label65";
            this.label65.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label65.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label65.StylePriority.UseFont = false;
            this.label65.StylePriority.UseTextAlignment = false;
            summary11.FormatString = "{0:$#,#.00}";
            summary11.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label65.Summary = summary11;
            this.label65.Text = "label65";
            this.label65.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label64
            // 
            this.label64.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorsentajeAcum")});
            this.label64.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label64.LocationFloat = new DevExpress.Utils.PointFloat(700F, 0F);
            this.label64.Name = "label64";
            this.label64.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label64.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label64.StylePriority.UseFont = false;
            this.label64.StylePriority.UseTextAlignment = false;
            summary12.FormatString = "{0:0.0%;(0.0%)}";
            summary12.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label64.Summary = summary12;
            this.label64.Text = "label14";
            this.label64.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label47
            // 
            this.label47.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo3c")});
            this.label47.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label47.LocationFloat = new DevExpress.Utils.PointFloat(600F, 0F);
            this.label47.Name = "label47";
            this.label47.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label47.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label47.StylePriority.UseFont = false;
            this.label47.StylePriority.UseTextAlignment = false;
            summary13.FormatString = "{0:$#,#.00}";
            summary13.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label47.Summary = summary13;
            this.label47.Text = "label47";
            this.label47.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label14
            // 
            this.label14.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorsentajeAcum")});
            this.label14.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(550F, 0F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseTextAlignment = false;
            summary14.FormatString = "{0:0.0%;(0.0%)}";
            summary14.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label14.Summary = summary14;
            this.label14.Text = "label14";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorsentajeMes")});
            this.label7.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(400F, 0F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseTextAlignment = false;
            summary15.FormatString = "{0:0.0%;(0.0%)}";
            summary15.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label7.Summary = summary15;
            this.label7.Text = "label7";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label13
            // 
            this.label13.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo1c")});
            this.label13.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(300F, 0F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            summary16.FormatString = "{0:$#,#.00}";
            summary16.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label13.Summary = summary16;
            this.label13.Text = "label13";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo2c")});
            this.label18.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(450F, 0F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            summary17.FormatString = "{0:$#,#.00}";
            summary17.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label18.Summary = summary17;
            this.label18.Text = "label18";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label12
            // 
            this.label12.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label12.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(20F, 0F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(270F, 18F);
            this.label12.StyleName = "Title";
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseForeColor = false;
            this.label12.StylePriority.UseTextAlignment = false;
            this.label12.Text = "[Descripcion]";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label72
            // 
            this.label72.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje5c")});
            this.label72.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label72.LocationFloat = new DevExpress.Utils.PointFloat(1000F, 6F);
            this.label72.Name = "label72";
            this.label72.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label72.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label72.StylePriority.UseFont = false;
            this.label72.StylePriority.UseTextAlignment = false;
            summary18.FormatString = "{0:0.0%;(0.0%)}";
            summary18.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label72.Summary = summary18;
            this.label72.Text = "label72";
            this.label72.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label71
            // 
            this.label71.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo5c")});
            this.label71.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label71.LocationFloat = new DevExpress.Utils.PointFloat(900F, 6F);
            this.label71.Name = "label71";
            this.label71.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label71.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label71.StylePriority.UseFont = false;
            this.label71.StylePriority.UseTextAlignment = false;
            summary19.FormatString = "{0:$#,#.00}";
            summary19.IgnoreNullValues = true;
            summary19.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label71.Summary = summary19;
            this.label71.Text = "label71";
            this.label71.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label49
            // 
            this.label49.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje4c")});
            this.label49.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(850F, 6.00001F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label49.StylePriority.UseFont = false;
            this.label49.StylePriority.UseTextAlignment = false;
            summary20.FormatString = "{0:0.0%;(0.0%)}";
            summary20.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label49.Summary = summary20;
            this.label49.Text = "label49";
            this.label49.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label48
            // 
            this.label48.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo4c")});
            this.label48.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label48.LocationFloat = new DevExpress.Utils.PointFloat(750F, 6.00001F);
            this.label48.Name = "label48";
            this.label48.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label48.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label48.StylePriority.UseFont = false;
            this.label48.StylePriority.UseTextAlignment = false;
            summary21.FormatString = "{0:$#,#.00}";
            summary21.IgnoreNullValues = true;
            summary21.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label48.Summary = summary21;
            this.label48.Text = "label48";
            this.label48.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label46
            // 
            this.label46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje3c")});
            this.label46.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(700F, 6.00001F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label46.StylePriority.UseFont = false;
            this.label46.StylePriority.UseTextAlignment = false;
            summary22.FormatString = "{0:0.0%;(0.0%)}";
            summary22.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label46.Summary = summary22;
            this.label46.Text = "label46";
            this.label46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label42
            // 
            this.label42.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo3c")});
            this.label42.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(600F, 6.00001F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label42.StylePriority.UseFont = false;
            this.label42.StylePriority.UseTextAlignment = false;
            summary23.FormatString = "{0:$#,#.00}";
            summary23.IgnoreNullValues = true;
            summary23.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label42.Summary = summary23;
            this.label42.Text = "label42";
            this.label42.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label20
            // 
            this.label20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje2c")});
            this.label20.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(550F, 6.00001F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label20.StylePriority.UseFont = false;
            this.label20.StylePriority.UseTextAlignment = false;
            summary24.FormatString = "{0:0.0%;(0.0%)}";
            summary24.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label20.Summary = summary24;
            this.label20.Text = "label20";
            this.label20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label17
            // 
            this.label17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo2c")});
            this.label17.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(450F, 6F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseTextAlignment = false;
            summary25.FormatString = "{0:$#,#.00}";
            summary25.IgnoreNullValues = true;
            summary25.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label17.Summary = summary25;
            this.label17.Text = "[Saldo2c]";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label11
            // 
            this.label11.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Porcentaje1c")});
            this.label11.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(400F, 6F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label11.StylePriority.UseFont = false;
            this.label11.StylePriority.UseTextAlignment = false;
            summary26.FormatString = "{0:0.0%;(0.0%)}";
            summary26.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label11.Summary = summary26;
            this.label11.Text = "label11";
            this.label11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line3
            // 
            this.line3.BorderColor = System.Drawing.Color.Silver;
            this.line3.ForeColor = System.Drawing.Color.Silver;
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 4.00001F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(1067F, 2F);
            this.line3.StylePriority.UseBorderColor = false;
            this.line3.StylePriority.UseForeColor = false;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo1c")});
            this.label19.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(300F, 6F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label19.StylePriority.UseFont = false;
            this.label19.StylePriority.UseTextAlignment = false;
            summary27.FormatString = "{0:$#,#.00}";
            summary27.IgnoreNullValues = true;
            summary27.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label19.Summary = summary27;
            this.label19.Text = "label19";
            this.label19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label74
            // 
            this.label74.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado10", "{0:0.0%;(0.0%)}")});
            this.label74.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label74.LocationFloat = new DevExpress.Utils.PointFloat(1000F, 6.00004F);
            this.label74.Name = "label74";
            this.label74.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label74.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label74.StylePriority.UseFont = false;
            this.label74.StylePriority.UseTextAlignment = false;
            summary28.FormatString = "{0:$#,#.00}";
            summary28.IgnoreNullValues = true;
            this.label74.Summary = summary28;
            this.label74.Text = "label74";
            this.label74.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label73
            // 
            this.label73.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado9", "{0:$#,#.00}")});
            this.label73.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label73.LocationFloat = new DevExpress.Utils.PointFloat(900F, 6.00004F);
            this.label73.Name = "label73";
            this.label73.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label73.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label73.StylePriority.UseFont = false;
            this.label73.StylePriority.UseTextAlignment = false;
            summary29.FormatString = "{0:$#,#.00}";
            summary29.IgnoreNullValues = true;
            this.label73.Summary = summary29;
            this.label73.Text = "label73";
            this.label73.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label56
            // 
            this.label56.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado6", "{0:$#,#.00}")});
            this.label56.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label56.LocationFloat = new DevExpress.Utils.PointFloat(750F, 6.00001F);
            this.label56.Name = "label56";
            this.label56.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label56.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label56.StylePriority.UseFont = false;
            this.label56.StylePriority.UseTextAlignment = false;
            summary30.FormatString = "{0:$#,#.00}";
            summary30.IgnoreNullValues = true;
            this.label56.Summary = summary30;
            this.label56.Text = "label56";
            this.label56.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label57
            // 
            this.label57.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado8", "{0:0.0%;(0.0%)}")});
            this.label57.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label57.LocationFloat = new DevExpress.Utils.PointFloat(850F, 6.00001F);
            this.label57.Name = "label57";
            this.label57.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label57.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label57.StylePriority.UseFont = false;
            this.label57.StylePriority.UseTextAlignment = false;
            summary31.FormatString = "{0:$#,#.00}";
            summary31.IgnoreNullValues = true;
            this.label57.Summary = summary31;
            this.label57.Text = "label57";
            this.label57.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label54
            // 
            this.label54.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado5", "{0:$#,#.00}")});
            this.label54.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label54.LocationFloat = new DevExpress.Utils.PointFloat(600F, 6.00001F);
            this.label54.Name = "label54";
            this.label54.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label54.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label54.StylePriority.UseFont = false;
            this.label54.StylePriority.UseTextAlignment = false;
            summary32.FormatString = "{0:$#,#.00}";
            summary32.IgnoreNullValues = true;
            this.label54.Summary = summary32;
            this.label54.Text = "label54";
            this.label54.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label55
            // 
            this.label55.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado7", "{0:0.0%;(0.0%)}")});
            this.label55.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label55.LocationFloat = new DevExpress.Utils.PointFloat(700F, 6.00001F);
            this.label55.Name = "label55";
            this.label55.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label55.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label55.StylePriority.UseFont = false;
            this.label55.StylePriority.UseTextAlignment = false;
            summary33.FormatString = "{0:$#,#.00}";
            summary33.IgnoreNullValues = true;
            this.label55.Summary = summary33;
            this.label55.Text = "label55";
            this.label55.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line5
            // 
            this.line5.BorderColor = System.Drawing.Color.Silver;
            this.line5.ForeColor = System.Drawing.Color.Silver;
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 4.00004F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(1067F, 2F);
            this.line5.StylePriority.UseBorderColor = false;
            this.line5.StylePriority.UseForeColor = false;
            // 
            // label26
            // 
            this.label26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado4", "{0:0.0%;(0.0%)}")});
            this.label26.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label26.LocationFloat = new DevExpress.Utils.PointFloat(550F, 5.999947F);
            this.label26.Name = "label26";
            this.label26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label26.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label26.StylePriority.UseFont = false;
            this.label26.StylePriority.UseTextAlignment = false;
            summary34.FormatString = "{0:$#,#.00}";
            summary34.IgnoreNullValues = true;
            this.label26.Summary = summary34;
            this.label26.Text = "label26";
            this.label26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label25
            // 
            this.label25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado3", "{0:0.0%;(0.0%)}")});
            this.label25.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label25.LocationFloat = new DevExpress.Utils.PointFloat(400F, 6F);
            this.label25.Name = "label25";
            this.label25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label25.SizeF = new System.Drawing.SizeF(50F, 18F);
            this.label25.StylePriority.UseFont = false;
            this.label25.StylePriority.UseTextAlignment = false;
            summary35.FormatString = "{0:$#,#.00}";
            summary35.IgnoreNullValues = true;
            this.label25.Summary = summary35;
            this.label25.Text = "label25";
            this.label25.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label1
            // 
            this.label1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado2", "{0:$#,#.00}")});
            this.label1.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(450F, 6F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseTextAlignment = false;
            summary36.FormatString = "{0:$#,#.00}";
            summary36.IgnoreNullValues = true;
            this.label1.Summary = summary36;
            this.label1.Text = "label1";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label16
            // 
            this.label16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado1", "{0:$#,#.00}")});
            this.label16.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(300F, 6F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseTextAlignment = false;
            summary37.FormatString = "{0:$#,#.00}";
            summary37.IgnoreNullValues = true;
            this.label16.Summary = summary37;
            this.label16.Text = "label16";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label24
            // 
            this.label24.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label24.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label24.LocationFloat = new DevExpress.Utils.PointFloat(0F, 6.00001F);
            this.label24.Name = "label24";
            this.label24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label24.SizeF = new System.Drawing.SizeF(290F, 18.00003F);
            this.label24.StyleName = "Title";
            this.label24.StylePriority.UseFont = false;
            this.label24.StylePriority.UseForeColor = false;
            this.label24.StylePriority.UseTextAlignment = false;
            this.label24.Text = "[Clase]";
            this.label24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label23
            // 
            this.label23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Ejercicio5")});
            this.label23.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(900F, 0F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(150F, 18F);
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseTextAlignment = false;
            summary38.FormatString = "{0:$#,#.00}";
            this.label23.Summary = summary38;
            this.label23.Text = "label75";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label27
            // 
            this.label27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Ejercicio4")});
            this.label27.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label27.LocationFloat = new DevExpress.Utils.PointFloat(750F, 0F);
            this.label27.Name = "label27";
            this.label27.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label27.SizeF = new System.Drawing.SizeF(150F, 18F);
            this.label27.StylePriority.UseFont = false;
            this.label27.StylePriority.UseTextAlignment = false;
            summary39.FormatString = "{0:$#,#.00}";
            this.label27.Summary = summary39;
            this.label27.Text = "label53";
            this.label27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label22
            // 
            this.label22.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Ejercicio3")});
            this.label22.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(600F, 0F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.SizeF = new System.Drawing.SizeF(150F, 18F);
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            summary40.FormatString = "{0:$#,#.00}";
            this.label22.Summary = summary40;
            this.label22.Text = "label52";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label15
            // 
            this.label15.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Ejercicio2")});
            this.label15.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(450F, 0F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(150F, 18F);
            this.label15.StylePriority.UseFont = false;
            this.label15.StylePriority.UseTextAlignment = false;
            summary41.FormatString = "{0:$#,#.00}";
            this.label15.Summary = summary41;
            this.label15.Text = "label51";
            this.label15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label21
            // 
            this.label21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Ejercicio1")});
            this.label21.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(300F, 0F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(150F, 18F);
            this.label21.StylePriority.UseFont = false;
            this.label21.StylePriority.UseTextAlignment = false;
            summary42.FormatString = "{0:$#,#.00}";
            this.label21.Summary = summary42;
            this.label21.Text = "label50";
            this.label21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label78
            // 
            this.label78.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Ejercicio4")});
            this.label78.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label78.LocationFloat = new DevExpress.Utils.PointFloat(750F, 0F);
            this.label78.Name = "label78";
            this.label78.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label78.SizeF = new System.Drawing.SizeF(150F, 18F);
            this.label78.StylePriority.UseFont = false;
            this.label78.StylePriority.UseTextAlignment = false;
            summary43.FormatString = "{0:$#,#.00}";
            this.label78.Summary = summary43;
            this.label78.Text = "label53";
            this.label78.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label79
            // 
            this.label79.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Ejercicio5")});
            this.label79.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label79.LocationFloat = new DevExpress.Utils.PointFloat(900F, 0F);
            this.label79.Name = "label79";
            this.label79.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label79.SizeF = new System.Drawing.SizeF(150F, 18F);
            this.label79.StylePriority.UseFont = false;
            this.label79.StylePriority.UseTextAlignment = false;
            summary44.FormatString = "{0:$#,#.00}";
            this.label79.Summary = summary44;
            this.label79.Text = "label75";
            this.label79.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label77
            // 
            this.label77.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Ejercicio3")});
            this.label77.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label77.LocationFloat = new DevExpress.Utils.PointFloat(600F, 0F);
            this.label77.Name = "label77";
            this.label77.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label77.SizeF = new System.Drawing.SizeF(150F, 18F);
            this.label77.StylePriority.UseFont = false;
            this.label77.StylePriority.UseTextAlignment = false;
            summary45.FormatString = "{0:$#,#.00}";
            this.label77.Summary = summary45;
            this.label77.Text = "label52";
            this.label77.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label28
            // 
            this.label28.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Ejercicio1")});
            this.label28.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label28.LocationFloat = new DevExpress.Utils.PointFloat(300F, 0F);
            this.label28.Name = "label28";
            this.label28.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label28.SizeF = new System.Drawing.SizeF(150F, 18F);
            this.label28.StylePriority.UseFont = false;
            this.label28.StylePriority.UseTextAlignment = false;
            summary46.FormatString = "{0:$#,#.00}";
            this.label28.Summary = summary46;
            this.label28.Text = "label50";
            this.label28.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label76
            // 
            this.label76.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Ejercicio2")});
            this.label76.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label76.LocationFloat = new DevExpress.Utils.PointFloat(450F, 0F);
            this.label76.Name = "label76";
            this.label76.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label76.SizeF = new System.Drawing.SizeF(150F, 18F);
            this.label76.StylePriority.UseFont = false;
            this.label76.StylePriority.UseTextAlignment = false;
            summary47.FormatString = "{0:$#,#.00}";
            this.label76.Summary = summary47;
            this.label76.Text = "label51";
            this.label76.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.SelectCommand = this.oleDbCommand1;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand1
            // 
            this.oleDbCommand1.CommandText = "SPINFORMECONTRESULTADOSANUALES 1";
            this.oleDbCommand1.CommandTimeout = 0;
            this.oleDbCommand1.Connection = this.oleDbConnection1;
            // 
            // oleDbConnection1
            // 
            this.oleDbConnection1.ConnectionString = "Provider=SQLOLEDB;Data Source=.;Initial Catalog=INFORMES;User ID=SA;";
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Maroon;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Maroon;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // Saldo1c
            // 
            this.Saldo1c.DataMember = "Table";
            this.Saldo1c.DataSource = this.RepVentaNeta;
            this.Saldo1c.Expression = "Iif([RamaEsAcreedora]  == True, 0.0-[Saldo1] ,[Saldo1] )";
            this.Saldo1c.Name = "Saldo1c";
            // 
            // Saldo2c
            // 
            this.Saldo2c.DataMember = "Table";
            this.Saldo2c.DataSource = this.RepVentaNeta;
            this.Saldo2c.Expression = "Iif([RamaEsAcreedora]  == True, 0.0-[Saldo2] ,[Saldo2] )";
            this.Saldo2c.Name = "Saldo2c";
            // 
            // Saldo3c
            // 
            this.Saldo3c.DataMember = "Table";
            this.Saldo3c.DataSource = this.RepVentaNeta;
            this.Saldo3c.Expression = "Iif([RamaEsAcreedora]  == True, 0.0-[Saldo3] ,[Saldo3] )";
            this.Saldo3c.Name = "Saldo3c";
            // 
            // Saldo4c
            // 
            this.Saldo4c.DataMember = "Table";
            this.Saldo4c.DataSource = this.RepVentaNeta;
            this.Saldo4c.Expression = "Iif([RamaEsAcreedora]  == True, 0.0-[Saldo4] ,[Saldo4] )";
            this.Saldo4c.Name = "Saldo4c";
            // 
            // Saldo5c
            // 
            this.Saldo5c.DataMember = "Table";
            this.Saldo5c.DataSource = this.RepVentaNeta;
            this.Saldo5c.Expression = "Iif([RamaEsAcreedora]  == True, 0.0-[Saldo5] ,[Saldo5] )";
            this.Saldo5c.Name = "Saldo5c";
            // 
            // Porcentaje1c
            // 
            this.Porcentaje1c.DataMember = "Table";
            this.Porcentaje1c.DataSource = this.RepVentaNeta;
            this.Porcentaje1c.Expression = "Iif([RamaEsAcreedora]  == True, [Saldo1] / [Ingresos1] ,0.0-[Saldo1] / [Ingresos1" +
                "])";
            this.Porcentaje1c.Name = "Porcentaje1c";
            // 
            // Porcentaje2c
            // 
            this.Porcentaje2c.DataMember = "Table";
            this.Porcentaje2c.DataSource = this.RepVentaNeta;
            this.Porcentaje2c.Expression = "Iif([RamaEsAcreedora]  == True, [Saldo2] / [Ingresos2] ,0.0-[Saldo2] / [Ingresos2" +
                "])";
            this.Porcentaje2c.Name = "Porcentaje2c";
            // 
            // Porcentaje3c
            // 
            this.Porcentaje3c.DataMember = "Table";
            this.Porcentaje3c.DataSource = this.RepVentaNeta;
            this.Porcentaje3c.Expression = "Iif([RamaEsAcreedora]  == True, [Saldo3] / [Ingresos3] ,0.0-[Saldo3] / [Ingresos3" +
                "])";
            this.Porcentaje3c.Name = "Porcentaje3c";
            // 
            // Porcentaje4c
            // 
            this.Porcentaje4c.DataMember = "Table";
            this.Porcentaje4c.DataSource = this.RepVentaNeta;
            this.Porcentaje4c.Expression = "Iif([RamaEsAcreedora]  == True, [Saldo4] / [Ingresos4] ,0.0-[Saldo4] / [Ingresos4" +
                "])";
            this.Porcentaje4c.Name = "Porcentaje4c";
            // 
            // Porcentaje5c
            // 
            this.Porcentaje5c.DataMember = "Table";
            this.Porcentaje5c.DataSource = this.RepVentaNeta;
            this.Porcentaje5c.Expression = "Iif([RamaEsAcreedora]  == True, [Saldo5] / [Ingresos5] ,0.0-[Saldo5] / [Ingresos5" +
                "])";
            this.Porcentaje5c.Name = "Porcentaje5c";
            // 
            // Resultado1
            // 
            this.Resultado1.DataMember = "Table";
            this.Resultado1.DataSource = this.RepVentaNeta;
            this.Resultado1.Name = "Resultado1";
            this.Resultado1.Scripts.OnGetValue = "Resultado1_GetValue";
            // 
            // Resultado2
            // 
            this.Resultado2.DataMember = "Table";
            this.Resultado2.DataSource = this.RepVentaNeta;
            this.Resultado2.Name = "Resultado2";
            this.Resultado2.Scripts.OnGetValue = "Resultado2_GetValue";
            // 
            // Resultado3
            // 
            this.Resultado3.DataMember = "Table";
            this.Resultado3.DataSource = this.RepVentaNeta;
            this.Resultado3.Name = "Resultado3";
            this.Resultado3.Scripts.OnGetValue = "Resultado3_GetValue";
            // 
            // Resultado4
            // 
            this.Resultado4.DataMember = "Table";
            this.Resultado4.DataSource = this.RepVentaNeta;
            this.Resultado4.Name = "Resultado4";
            this.Resultado4.Scripts.OnGetValue = "Resultado4_GetValue";
            // 
            // Resultado5
            // 
            this.Resultado5.DataMember = "Table";
            this.Resultado5.DataSource = this.RepVentaNeta;
            this.Resultado5.Name = "Resultado5";
            this.Resultado5.Scripts.OnGetValue = "Resultado5_GetValue";
            // 
            // Resultado6
            // 
            this.Resultado6.DataMember = "Table";
            this.Resultado6.DataSource = this.RepVentaNeta;
            this.Resultado6.Name = "Resultado6";
            this.Resultado6.Scripts.OnGetValue = "Resultado6_GetValue";
            // 
            // Resultado7
            // 
            this.Resultado7.DataMember = "Table";
            this.Resultado7.DataSource = this.RepVentaNeta;
            this.Resultado7.Name = "Resultado7";
            this.Resultado7.Scripts.OnGetValue = "Resultado7_GetValue";
            // 
            // Resultado8
            // 
            this.Resultado8.DataMember = "Table";
            this.Resultado8.DataSource = this.RepVentaNeta;
            this.Resultado8.Name = "Resultado8";
            this.Resultado8.Scripts.OnGetValue = "Resultado8_GetValue";
            // 
            // Resultado9
            // 
            this.Resultado9.DataMember = "Table";
            this.Resultado9.DataSource = this.RepVentaNeta;
            this.Resultado9.Name = "Resultado9";
            this.Resultado9.Scripts.OnGetValue = "Resultado9_GetValue";
            // 
            // Resultado10
            // 
            this.Resultado10.DataMember = "Table";
            this.Resultado10.DataSource = this.RepVentaNeta;
            this.Resultado10.Name = "Resultado10";
            this.Resultado10.Scripts.OnGetValue = "Resultado10_GetValue";
            // 
            // InformeContResultadosAnuales
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.pageFooterBand1,
                        this.reportHeaderBand1,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.ReportFooter,
                        this.GroupHeader1,
                        this.GroupHeader2,
                        this.GroupFooter1,
                        this.GroupFooter2,
                        this.GroupHeader3,
                        this.GroupFooter3,
                        this.GroupHeader4,
                        this.GroupHeader5});
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.Saldo1c,
                        this.Saldo2c,
                        this.Saldo3c,
                        this.Saldo4c,
                        this.Saldo5c,
                        this.Porcentaje1c,
                        this.Porcentaje2c,
                        this.Porcentaje3c,
                        this.Porcentaje4c,
                        this.Porcentaje5c,
                        this.Resultado1,
                        this.Resultado2,
                        this.Resultado3,
                        this.Resultado4,
                        this.Resultado5,
                        this.Resultado6,
                        this.Resultado7,
                        this.Resultado8,
                        this.Resultado9,
                        this.Resultado10});
            this.DataAdapter = this.TableTableAdapter;
            this.DataMember = "Table";
            this.DataSource = this.RepVentaNeta;
            this.DisplayName = "InformeContResultadosAnuales";
            this.Landscape = true;
            this.Margins = new System.Drawing.Printing.Margins(12, 21, 38, 40);
            this.Name = "InformeContResultadosAnuales";
            this.PageHeight = 850;
            this.PageWidth = 1100;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "EXEC spInformeContResultadosAnuales [EstacionTrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepVentaNetaDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepVentaNetaDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepVentaNetaDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepVentaNetaDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepVentaNetaDataSet cln = ((RepVentaNetaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepVentaNetaDataSet";
            this.Prefix = "";
            this.EnforceConstraints = false;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnOrden;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnClase;
            private global::System.Data.DataColumn columnSubClase;
            private global::System.Data.DataColumn columnRama;
            private global::System.Data.DataColumn columnRamaDesc;
            private global::System.Data.DataColumn columnRamaEsAcreedora;
            private global::System.Data.DataColumn columnCuenta;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnEsAcreedora;
            private global::System.Data.DataColumn columnSubCuenta;
            private global::System.Data.DataColumn columnCentroCostos;
            private global::System.Data.DataColumn columnEjercicio1;
            private global::System.Data.DataColumn columnSaldo1;
            private global::System.Data.DataColumn columnIngresos1;
            private global::System.Data.DataColumn columnPorcentaje1;
            private global::System.Data.DataColumn columnEjercicio2;
            private global::System.Data.DataColumn columnSaldo2;
            private global::System.Data.DataColumn columnIngresos2;
            private global::System.Data.DataColumn columnPorcentaje2;
            private global::System.Data.DataColumn columnEjercicio3;
            private global::System.Data.DataColumn columnSaldo3;
            private global::System.Data.DataColumn columnIngresos3;
            private global::System.Data.DataColumn columnPorcentaje3;
            private global::System.Data.DataColumn columnEjercicio4;
            private global::System.Data.DataColumn columnSaldo4;
            private global::System.Data.DataColumn columnIngresos4;
            private global::System.Data.DataColumn columnPorcentaje4;
            private global::System.Data.DataColumn columnEjercicio5;
            private global::System.Data.DataColumn columnSaldo5;
            private global::System.Data.DataColumn columnIngresos5;
            private global::System.Data.DataColumn columnPorcentaje5;
            private global::System.Data.DataColumn columnGrupo;
            private global::System.Data.DataColumn columnSubGrupo;
            private global::System.Data.DataColumn columnSubSubGrupo;
            private global::System.Data.DataColumn columnDesglosar;
            private global::System.Data.DataColumn columnOrden1;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor;
            private global::System.Data.DataColumn columnGrafica1;
            private global::System.Data.DataColumn columnGrafica2;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnReporte;
            private global::System.Data.DataColumn columnDireccion2;
            private global::System.Data.DataColumn columnDireccion3;
            private global::System.Data.DataColumn columnDireccion4;
            private global::System.Data.DataColumn columnGraficaSerie;
            private global::System.Data.DataColumn columnEtiqueta;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrdenColumn {
                get {
                    return this.columnOrden;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClaseColumn {
                get {
                    return this.columnClase;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubClaseColumn {
                get {
                    return this.columnSubClase;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RamaColumn {
                get {
                    return this.columnRama;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RamaDescColumn {
                get {
                    return this.columnRamaDesc;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RamaEsAcreedoraColumn {
                get {
                    return this.columnRamaEsAcreedora;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CuentaColumn {
                get {
                    return this.columnCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EsAcreedoraColumn {
                get {
                    return this.columnEsAcreedora;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubCuentaColumn {
                get {
                    return this.columnSubCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CentroCostosColumn {
                get {
                    return this.columnCentroCostos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ejercicio1Column {
                get {
                    return this.columnEjercicio1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Saldo1Column {
                get {
                    return this.columnSaldo1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ingresos1Column {
                get {
                    return this.columnIngresos1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Porcentaje1Column {
                get {
                    return this.columnPorcentaje1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ejercicio2Column {
                get {
                    return this.columnEjercicio2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Saldo2Column {
                get {
                    return this.columnSaldo2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ingresos2Column {
                get {
                    return this.columnIngresos2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Porcentaje2Column {
                get {
                    return this.columnPorcentaje2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ejercicio3Column {
                get {
                    return this.columnEjercicio3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Saldo3Column {
                get {
                    return this.columnSaldo3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ingresos3Column {
                get {
                    return this.columnIngresos3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Porcentaje3Column {
                get {
                    return this.columnPorcentaje3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ejercicio4Column {
                get {
                    return this.columnEjercicio4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Saldo4Column {
                get {
                    return this.columnSaldo4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ingresos4Column {
                get {
                    return this.columnIngresos4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Porcentaje4Column {
                get {
                    return this.columnPorcentaje4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ejercicio5Column {
                get {
                    return this.columnEjercicio5;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Saldo5Column {
                get {
                    return this.columnSaldo5;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ingresos5Column {
                get {
                    return this.columnIngresos5;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Porcentaje5Column {
                get {
                    return this.columnPorcentaje5;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrupoColumn {
                get {
                    return this.columnGrupo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubGrupoColumn {
                get {
                    return this.columnSubGrupo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubSubGrupoColumn {
                get {
                    return this.columnSubSubGrupo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesglosarColumn {
                get {
                    return this.columnDesglosar;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Orden1Column {
                get {
                    return this.columnOrden1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValorColumn {
                get {
                    return this.columnGraficaValor;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica1Column {
                get {
                    return this.columnGrafica1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica2Column {
                get {
                    return this.columnGrafica2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporteColumn {
                get {
                    return this.columnReporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion2Column {
                get {
                    return this.columnDireccion2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion3Column {
                get {
                    return this.columnDireccion3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion4Column {
                get {
                    return this.columnDireccion4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaSerieColumn {
                get {
                    return this.columnGraficaSerie;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtiquetaColumn {
                get {
                    return this.columnEtiqueta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        int Orden, 
                        int ID, 
                        string Clase, 
                        string SubClase, 
                        string Rama, 
                        string RamaDesc, 
                        bool RamaEsAcreedora, 
                        string Cuenta, 
                        string Descripcion, 
                        bool EsAcreedora, 
                        string SubCuenta, 
                        string CentroCostos, 
                        int Ejercicio1, 
                        decimal Saldo1, 
                        decimal Ingresos1, 
                        double Porcentaje1, 
                        int Ejercicio2, 
                        decimal Saldo2, 
                        decimal Ingresos2, 
                        double Porcentaje2, 
                        int Ejercicio3, 
                        decimal Saldo3, 
                        decimal Ingresos3, 
                        double Porcentaje3, 
                        int Ejercicio4, 
                        decimal Saldo4, 
                        decimal Ingresos4, 
                        double Porcentaje4, 
                        int Ejercicio5, 
                        decimal Saldo5, 
                        decimal Ingresos5, 
                        double Porcentaje5, 
                        string Grupo, 
                        string SubGrupo, 
                        string SubSubGrupo, 
                        string Desglosar, 
                        int Orden1, 
                        string GraficaArgumento, 
                        double GraficaValor, 
                        int Grafica1, 
                        int Grafica2, 
                        string Titulo, 
                        string Reporte, 
                        string Direccion2, 
                        string Direccion3, 
                        string Direccion4, 
                        string GraficaSerie, 
                        bool Etiqueta) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Orden,
                        ID,
                        Clase,
                        SubClase,
                        Rama,
                        RamaDesc,
                        RamaEsAcreedora,
                        Cuenta,
                        Descripcion,
                        EsAcreedora,
                        SubCuenta,
                        CentroCostos,
                        Ejercicio1,
                        Saldo1,
                        Ingresos1,
                        Porcentaje1,
                        Ejercicio2,
                        Saldo2,
                        Ingresos2,
                        Porcentaje2,
                        Ejercicio3,
                        Saldo3,
                        Ingresos3,
                        Porcentaje3,
                        Ejercicio4,
                        Saldo4,
                        Ingresos4,
                        Porcentaje4,
                        Ejercicio5,
                        Saldo5,
                        Ingresos5,
                        Porcentaje5,
                        Grupo,
                        SubGrupo,
                        SubSubGrupo,
                        Desglosar,
                        Orden1,
                        GraficaArgumento,
                        GraficaValor,
                        Grafica1,
                        Grafica2,
                        Titulo,
                        Reporte,
                        Direccion2,
                        Direccion3,
                        Direccion4,
                        GraficaSerie,
                        Etiqueta};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrden = base.Columns["Orden"];
                this.columnID = base.Columns["ID"];
                this.columnClase = base.Columns["Clase"];
                this.columnSubClase = base.Columns["SubClase"];
                this.columnRama = base.Columns["Rama"];
                this.columnRamaDesc = base.Columns["RamaDesc"];
                this.columnRamaEsAcreedora = base.Columns["RamaEsAcreedora"];
                this.columnCuenta = base.Columns["Cuenta"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnEsAcreedora = base.Columns["EsAcreedora"];
                this.columnSubCuenta = base.Columns["SubCuenta"];
                this.columnCentroCostos = base.Columns["CentroCostos"];
                this.columnEjercicio1 = base.Columns["Ejercicio1"];
                this.columnSaldo1 = base.Columns["Saldo1"];
                this.columnIngresos1 = base.Columns["Ingresos1"];
                this.columnPorcentaje1 = base.Columns["Porcentaje1"];
                this.columnEjercicio2 = base.Columns["Ejercicio2"];
                this.columnSaldo2 = base.Columns["Saldo2"];
                this.columnIngresos2 = base.Columns["Ingresos2"];
                this.columnPorcentaje2 = base.Columns["Porcentaje2"];
                this.columnEjercicio3 = base.Columns["Ejercicio3"];
                this.columnSaldo3 = base.Columns["Saldo3"];
                this.columnIngresos3 = base.Columns["Ingresos3"];
                this.columnPorcentaje3 = base.Columns["Porcentaje3"];
                this.columnEjercicio4 = base.Columns["Ejercicio4"];
                this.columnSaldo4 = base.Columns["Saldo4"];
                this.columnIngresos4 = base.Columns["Ingresos4"];
                this.columnPorcentaje4 = base.Columns["Porcentaje4"];
                this.columnEjercicio5 = base.Columns["Ejercicio5"];
                this.columnSaldo5 = base.Columns["Saldo5"];
                this.columnIngresos5 = base.Columns["Ingresos5"];
                this.columnPorcentaje5 = base.Columns["Porcentaje5"];
                this.columnGrupo = base.Columns["Grupo"];
                this.columnSubGrupo = base.Columns["SubGrupo"];
                this.columnSubSubGrupo = base.Columns["SubSubGrupo"];
                this.columnDesglosar = base.Columns["Desglosar"];
                this.columnOrden1 = base.Columns["Orden1"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor = base.Columns["GraficaValor"];
                this.columnGrafica1 = base.Columns["Grafica1"];
                this.columnGrafica2 = base.Columns["Grafica2"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnReporte = base.Columns["Reporte"];
                this.columnDireccion2 = base.Columns["Direccion2"];
                this.columnDireccion3 = base.Columns["Direccion3"];
                this.columnDireccion4 = base.Columns["Direccion4"];
                this.columnGraficaSerie = base.Columns["GraficaSerie"];
                this.columnEtiqueta = base.Columns["Etiqueta"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrden = new global::System.Data.DataColumn("Orden", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrden);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnClase = new global::System.Data.DataColumn("Clase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClase);
                this.columnSubClase = new global::System.Data.DataColumn("SubClase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubClase);
                this.columnRama = new global::System.Data.DataColumn("Rama", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRama);
                this.columnRamaDesc = new global::System.Data.DataColumn("RamaDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRamaDesc);
                this.columnRamaEsAcreedora = new global::System.Data.DataColumn("RamaEsAcreedora", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRamaEsAcreedora);
                this.columnCuenta = new global::System.Data.DataColumn("Cuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnEsAcreedora = new global::System.Data.DataColumn("EsAcreedora", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEsAcreedora);
                this.columnSubCuenta = new global::System.Data.DataColumn("SubCuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCuenta);
                this.columnCentroCostos = new global::System.Data.DataColumn("CentroCostos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentroCostos);
                this.columnEjercicio1 = new global::System.Data.DataColumn("Ejercicio1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio1);
                this.columnSaldo1 = new global::System.Data.DataColumn("Saldo1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo1);
                this.columnIngresos1 = new global::System.Data.DataColumn("Ingresos1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIngresos1);
                this.columnPorcentaje1 = new global::System.Data.DataColumn("Porcentaje1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentaje1);
                this.columnEjercicio2 = new global::System.Data.DataColumn("Ejercicio2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio2);
                this.columnSaldo2 = new global::System.Data.DataColumn("Saldo2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo2);
                this.columnIngresos2 = new global::System.Data.DataColumn("Ingresos2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIngresos2);
                this.columnPorcentaje2 = new global::System.Data.DataColumn("Porcentaje2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentaje2);
                this.columnEjercicio3 = new global::System.Data.DataColumn("Ejercicio3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio3);
                this.columnSaldo3 = new global::System.Data.DataColumn("Saldo3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo3);
                this.columnIngresos3 = new global::System.Data.DataColumn("Ingresos3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIngresos3);
                this.columnPorcentaje3 = new global::System.Data.DataColumn("Porcentaje3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentaje3);
                this.columnEjercicio4 = new global::System.Data.DataColumn("Ejercicio4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio4);
                this.columnSaldo4 = new global::System.Data.DataColumn("Saldo4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo4);
                this.columnIngresos4 = new global::System.Data.DataColumn("Ingresos4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIngresos4);
                this.columnPorcentaje4 = new global::System.Data.DataColumn("Porcentaje4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentaje4);
                this.columnEjercicio5 = new global::System.Data.DataColumn("Ejercicio5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio5);
                this.columnSaldo5 = new global::System.Data.DataColumn("Saldo5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo5);
                this.columnIngresos5 = new global::System.Data.DataColumn("Ingresos5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIngresos5);
                this.columnPorcentaje5 = new global::System.Data.DataColumn("Porcentaje5", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentaje5);
                this.columnGrupo = new global::System.Data.DataColumn("Grupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrupo);
                this.columnSubGrupo = new global::System.Data.DataColumn("SubGrupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubGrupo);
                this.columnSubSubGrupo = new global::System.Data.DataColumn("SubSubGrupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSubGrupo);
                this.columnDesglosar = new global::System.Data.DataColumn("Desglosar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesglosar);
                this.columnOrden1 = new global::System.Data.DataColumn("Orden1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrden1);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor = new global::System.Data.DataColumn("GraficaValor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor);
                this.columnGrafica1 = new global::System.Data.DataColumn("Grafica1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica1);
                this.columnGrafica2 = new global::System.Data.DataColumn("Grafica2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica2);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnReporte = new global::System.Data.DataColumn("Reporte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporte);
                this.columnDireccion2 = new global::System.Data.DataColumn("Direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion2);
                this.columnDireccion3 = new global::System.Data.DataColumn("Direccion3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion3);
                this.columnDireccion4 = new global::System.Data.DataColumn("Direccion4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion4);
                this.columnGraficaSerie = new global::System.Data.DataColumn("GraficaSerie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaSerie);
                this.columnEtiqueta = new global::System.Data.DataColumn("Etiqueta", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtiqueta);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Orden {
                get {
                    try {
                        return ((int)(this[this.table_Table.OrdenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Orden\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.OrdenColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clase {
                get {
                    try {
                        return ((string)(this[this.table_Table.ClaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Clase\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ClaseColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubClase {
                get {
                    try {
                        return ((string)(this[this.table_Table.SubClaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubClase\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubClaseColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rama {
                get {
                    try {
                        return ((string)(this[this.table_Table.RamaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Rama\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RamaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RamaDesc {
                get {
                    try {
                        return ((string)(this[this.table_Table.RamaDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'RamaDesc\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RamaDescColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RamaEsAcreedora {
                get {
                    try {
                        return ((bool)(this[this.table_Table.RamaEsAcreedoraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'RamaEsAcreedora\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RamaEsAcreedoraColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta {
                get {
                    try {
                        return ((string)(this[this.table_Table.CuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cuenta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EsAcreedora {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EsAcreedoraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EsAcreedora\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EsAcreedoraColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubCuenta {
                get {
                    try {
                        return ((string)(this[this.table_Table.SubCuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubCuenta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubCuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CentroCostos {
                get {
                    try {
                        return ((string)(this[this.table_Table.CentroCostosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CentroCostos\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CentroCostosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Ejercicio1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Ejercicio1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Saldo1 {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.Saldo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Saldo1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ingresos1 {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.Ingresos1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ingresos1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Ingresos1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Porcentaje1 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Porcentaje1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Porcentaje1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Porcentaje1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio2 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Ejercicio2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Ejercicio2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Saldo2 {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.Saldo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Saldo2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ingresos2 {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.Ingresos2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ingresos2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Ingresos2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Porcentaje2 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Porcentaje2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Porcentaje2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Porcentaje2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio3 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Ejercicio3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Ejercicio3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Saldo3 {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.Saldo3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Saldo3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ingresos3 {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.Ingresos3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ingresos3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Ingresos3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Porcentaje3 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Porcentaje3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Porcentaje3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Porcentaje3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio4 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Ejercicio4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Ejercicio4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Saldo4 {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.Saldo4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Saldo4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ingresos4 {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.Ingresos4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ingresos4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Ingresos4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Porcentaje4 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Porcentaje4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Porcentaje4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Porcentaje4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio5 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Ejercicio5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio5\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Ejercicio5Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Saldo5 {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.Saldo5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo5\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Saldo5Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ingresos5 {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.Ingresos5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ingresos5\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Ingresos5Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Porcentaje5 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Porcentaje5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Porcentaje5\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Porcentaje5Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grupo {
                get {
                    try {
                        return ((string)(this[this.table_Table.GrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grupo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GrupoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubGrupo {
                get {
                    try {
                        return ((string)(this[this.table_Table.SubGrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubGrupo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubGrupoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubSubGrupo {
                get {
                    try {
                        return ((string)(this[this.table_Table.SubSubGrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubSubGrupo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubSubGrupoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desglosar {
                get {
                    try {
                        return ((string)(this[this.table_Table.DesglosarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Desglosar\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DesglosarColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Orden1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Orden1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Orden1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Orden1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor {
                get {
                    try {
                        return ((double)(this[this.table_Table.GraficaValorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaValorColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Grafica1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica2 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Grafica2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reporte {
                get {
                    try {
                        return ((string)(this[this.table_Table.ReporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Reporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ReporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion3 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion4 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaSerie {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaSerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaSerie\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaSerieColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Etiqueta {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EtiquetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Etiqueta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EtiquetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrdenNull() {
                return this.IsNull(this.table_Table.OrdenColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrdenNull() {
                this[this.table_Table.OrdenColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table_Table.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table_Table.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClaseNull() {
                return this.IsNull(this.table_Table.ClaseColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClaseNull() {
                this[this.table_Table.ClaseColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubClaseNull() {
                return this.IsNull(this.table_Table.SubClaseColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubClaseNull() {
                this[this.table_Table.SubClaseColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRamaNull() {
                return this.IsNull(this.table_Table.RamaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRamaNull() {
                this[this.table_Table.RamaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRamaDescNull() {
                return this.IsNull(this.table_Table.RamaDescColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRamaDescNull() {
                this[this.table_Table.RamaDescColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRamaEsAcreedoraNull() {
                return this.IsNull(this.table_Table.RamaEsAcreedoraColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRamaEsAcreedoraNull() {
                this[this.table_Table.RamaEsAcreedoraColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuentaNull() {
                return this.IsNull(this.table_Table.CuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuentaNull() {
                this[this.table_Table.CuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.table_Table.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.table_Table.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEsAcreedoraNull() {
                return this.IsNull(this.table_Table.EsAcreedoraColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEsAcreedoraNull() {
                this[this.table_Table.EsAcreedoraColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubCuentaNull() {
                return this.IsNull(this.table_Table.SubCuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubCuentaNull() {
                this[this.table_Table.SubCuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCentroCostosNull() {
                return this.IsNull(this.table_Table.CentroCostosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCentroCostosNull() {
                this[this.table_Table.CentroCostosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicio1Null() {
                return this.IsNull(this.table_Table.Ejercicio1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicio1Null() {
                this[this.table_Table.Ejercicio1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldo1Null() {
                return this.IsNull(this.table_Table.Saldo1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldo1Null() {
                this[this.table_Table.Saldo1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIngresos1Null() {
                return this.IsNull(this.table_Table.Ingresos1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIngresos1Null() {
                this[this.table_Table.Ingresos1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorcentaje1Null() {
                return this.IsNull(this.table_Table.Porcentaje1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorcentaje1Null() {
                this[this.table_Table.Porcentaje1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicio2Null() {
                return this.IsNull(this.table_Table.Ejercicio2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicio2Null() {
                this[this.table_Table.Ejercicio2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldo2Null() {
                return this.IsNull(this.table_Table.Saldo2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldo2Null() {
                this[this.table_Table.Saldo2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIngresos2Null() {
                return this.IsNull(this.table_Table.Ingresos2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIngresos2Null() {
                this[this.table_Table.Ingresos2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorcentaje2Null() {
                return this.IsNull(this.table_Table.Porcentaje2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorcentaje2Null() {
                this[this.table_Table.Porcentaje2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicio3Null() {
                return this.IsNull(this.table_Table.Ejercicio3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicio3Null() {
                this[this.table_Table.Ejercicio3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldo3Null() {
                return this.IsNull(this.table_Table.Saldo3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldo3Null() {
                this[this.table_Table.Saldo3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIngresos3Null() {
                return this.IsNull(this.table_Table.Ingresos3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIngresos3Null() {
                this[this.table_Table.Ingresos3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorcentaje3Null() {
                return this.IsNull(this.table_Table.Porcentaje3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorcentaje3Null() {
                this[this.table_Table.Porcentaje3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicio4Null() {
                return this.IsNull(this.table_Table.Ejercicio4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicio4Null() {
                this[this.table_Table.Ejercicio4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldo4Null() {
                return this.IsNull(this.table_Table.Saldo4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldo4Null() {
                this[this.table_Table.Saldo4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIngresos4Null() {
                return this.IsNull(this.table_Table.Ingresos4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIngresos4Null() {
                this[this.table_Table.Ingresos4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorcentaje4Null() {
                return this.IsNull(this.table_Table.Porcentaje4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorcentaje4Null() {
                this[this.table_Table.Porcentaje4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicio5Null() {
                return this.IsNull(this.table_Table.Ejercicio5Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicio5Null() {
                this[this.table_Table.Ejercicio5Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldo5Null() {
                return this.IsNull(this.table_Table.Saldo5Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldo5Null() {
                this[this.table_Table.Saldo5Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIngresos5Null() {
                return this.IsNull(this.table_Table.Ingresos5Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIngresos5Null() {
                this[this.table_Table.Ingresos5Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorcentaje5Null() {
                return this.IsNull(this.table_Table.Porcentaje5Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorcentaje5Null() {
                this[this.table_Table.Porcentaje5Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrupoNull() {
                return this.IsNull(this.table_Table.GrupoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrupoNull() {
                this[this.table_Table.GrupoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubGrupoNull() {
                return this.IsNull(this.table_Table.SubGrupoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubGrupoNull() {
                this[this.table_Table.SubGrupoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubSubGrupoNull() {
                return this.IsNull(this.table_Table.SubSubGrupoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubSubGrupoNull() {
                this[this.table_Table.SubSubGrupoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesglosarNull() {
                return this.IsNull(this.table_Table.DesglosarColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesglosarNull() {
                this[this.table_Table.DesglosarColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrden1Null() {
                return this.IsNull(this.table_Table.Orden1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrden1Null() {
                this[this.table_Table.Orden1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.table_Table.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.table_Table.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValorNull() {
                return this.IsNull(this.table_Table.GraficaValorColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValorNull() {
                this[this.table_Table.GraficaValorColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica1Null() {
                return this.IsNull(this.table_Table.Grafica1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica1Null() {
                this[this.table_Table.Grafica1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica2Null() {
                return this.IsNull(this.table_Table.Grafica2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica2Null() {
                this[this.table_Table.Grafica2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.table_Table.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.table_Table.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporteNull() {
                return this.IsNull(this.table_Table.ReporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporteNull() {
                this[this.table_Table.ReporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion2Null() {
                return this.IsNull(this.table_Table.Direccion2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion2Null() {
                this[this.table_Table.Direccion2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion3Null() {
                return this.IsNull(this.table_Table.Direccion3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion3Null() {
                this[this.table_Table.Direccion3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion4Null() {
                return this.IsNull(this.table_Table.Direccion4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion4Null() {
                this[this.table_Table.Direccion4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaSerieNull() {
                return this.IsNull(this.table_Table.GraficaSerieColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaSerieNull() {
                this[this.table_Table.GraficaSerieColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEtiquetaNull() {
                return this.IsNull(this.table_Table.EtiquetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEtiquetaNull() {
                this[this.table_Table.EtiquetaColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
