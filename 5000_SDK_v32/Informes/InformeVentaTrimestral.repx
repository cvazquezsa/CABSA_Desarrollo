/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformeVentaTrimetral : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label51;
        private DevExpress.XtraReports.UI.XRLabel label52;
        private DevExpress.XtraReports.UI.XRLabel label28;
        private DevExpress.XtraReports.UI.XRLabel label25;
        private DevExpress.XtraReports.UI.XRLabel label24;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.PageFooterBand pageFooterBand1;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.ReportHeaderBand reportHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label47;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo3;
        private DevExpress.XtraReports.UI.XRLabel label198;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRChart chart4;
        private DevExpress.XtraReports.UI.XRChart chart3;
        private DevExpress.XtraReports.UI.XRChart chart2;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLabel label74;
        private DevExpress.XtraReports.UI.XRLabel label73;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRLabel label35;
        private DevExpress.XtraReports.UI.XRLabel label34;
        private DevExpress.XtraReports.UI.XRLabel label36;
        private DevExpress.XtraReports.UI.XRLabel label38;
        private DevExpress.XtraReports.UI.XRLabel label37;
        private DevExpress.XtraReports.UI.XRLabel label33;
        private DevExpress.XtraReports.UI.XRLabel label27;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRLabel label32;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private XtraReportSerialization.RepVentaNetaDataSet RepVentaNeta;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo4;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox1;
        private DevExpress.XtraReports.UI.XRLabel label48;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLabel label44;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.XRLabel label39;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.XRLabel label41;
        private DevExpress.XtraReports.UI.XRLine line4;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLine line2;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRPageBreak pageBreak1;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader2;
        private DevExpress.XtraReports.UI.XRLabel label50;
        private DevExpress.XtraReports.UI.XRLabel label81;
        private DevExpress.XtraReports.UI.XRLabel label80;
        private DevExpress.XtraReports.UI.XRLabel label79;
        private DevExpress.XtraReports.UI.XRLabel label82;
        private DevExpress.XtraReports.UI.XRLine line13;
        private DevExpress.XtraReports.UI.XRLine line12;
        private DevExpress.XtraReports.UI.XRLabel label78;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.XRLabel label26;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRLabel label77;
        private DevExpress.XtraReports.UI.XRLabel label76;
        private DevExpress.XtraReports.UI.XRLabel label75;
        private System.Data.OleDb.OleDbDataAdapter TableTableAdapter;
        private System.Data.OleDb.OleDbCommand oleDbCommand1;
        private System.Data.OleDb.OleDbConnection oleDbConnection1;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField VentaNeta1;
        private DevExpress.XtraReports.UI.CalculatedField VentaNeta2;
        private DevExpress.XtraReports.UI.CalculatedField VentaNeta3;
        private DevExpress.XtraReports.UI.CalculatedField CantidadNeta1;
        private DevExpress.XtraReports.UI.CalculatedField CantidadNeta2;
        private DevExpress.XtraReports.UI.CalculatedField CantidadNeta3;
        private System.Resources.ResourceManager _resources;
        public InformeVentaTrimetral() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAADAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsHnWR035IbpXQAAAABSAAAAK" +
                        "wAAAK0BAAAmJAB0AGgAaQBzAC4AUwBjAHIAaQBwAHQAcwBTAG8AdQByAGMAZQAAAAAAInAAaQBjAHQAd" +
                        "QByAGUAQgBvAHgAMQAuAEkAbQBhAGcAZQAmKwAAInAAaQBjAHQAdQByAGUAQgBvAHgAMgAuAEkAbQBhA" +
                        "GcAZQAj7QAAAaNWUHJpdmF0ZSBTdWIgY2hhcnQxX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBcyBPY" +
                        "mplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpDQoNC" +
                        "iAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJFbXByZXNhTm9tYnJlIikuVG9TdHJpbmcgPSBOT1RIS" +
                        "U5HIFRIRU4NCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgIFJFVFVSTg0KICBFTkQgSUYNCg0KI" +
                        "CBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkNhdGVnb3JpYSIpIElTIE5PVEhJTkcgVEhFTg0KICAgI" +
                        "CBlLkNhbmNlbCA9IFRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQogICdHZW5lcmEgdW4gb" +
                        "2JqZXRvIHF1ZSByZXByZXNlbnRhIGEgbGEgZ3LDoWZpY2ENCiAgRGltIEdyYWZpY2ExIEFzIFhSQ2hhc" +
                        "nQgPSBDVHlwZShzZW5kZXIsWFJDaGFydCkNCg0KICdTaSBlbCB2YWxvciBkZWwgY2FtcG8gVmVyR3JhZ" +
                        "mljYURldGFsbGUgZXMgMCBubyBzZSBtdWVzdHJhIA0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoI" +
                        "lZlckdyYWZpY2FEZXRhbGxlIikgPSAwIFRIRU4NCiAgICBHcmFmaWNhMS52aXNpYmxlID0gRmFsc2UNC" +
                        "iAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQogICdHdWFyZGEgZ" +
                        "WwgdmFsb3IgZGUgbGEgY29sdW1uYSBDYXRlZ29yaWEgDQogIERpbSBDYXRlZ29yaWEgQXMgU3RyaW5nI" +
                        "D0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJDYXRlZ29yaWEiKS5Ub1N0cmluZw0KDQogICdHZW5lcmEgd" +
                        "W4gb2JqZXRvIHF1ZSByZXByZXNlbnRhIGEgbGEgcGxhbnRpbGxhIHNlIHNlcmllcyBhdXRvY3JlYWRhc" +
                        "w0KICBEaW0gUGxhbnRpbGxhIEFzIFNlcmllc0Jhc2UgPSBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZQ0KD" +
                        "QogICdHZW5lcmEgdW4gb2JqZXRvIHRpcG8gVMOtdHVsbw0KICBEaW0gVGl0dWxvMSBBcyBOZXcgQ2hhc" +
                        "nRUaXRsZSgpDQogIFRpdHVsbzEuVGV4dCA9ICJSZXN1bWVuIEZhYnJpY2FudGVzIGRlIGxhIENhdGVnb" +
                        "3LDrWEgIiArIENhdGVnb3JpYQ0KICBUaXR1bG8xLkZvbnQgPSBOZXcgRm9udChUaXR1bG8xLkZvbnQuU" +
                        "2l6ZSwxMCkNCg0KICAnTGltcGlhIGxvcyB0w610dWxvcyBkZSBsYSBncsOhZmljYQ0KICBHcmFmaWNhM" +
                        "S5UaXRsZXMuQ2xlYXIoKQ0KDQogICdBZ3JlZ2EgZWwgVMOtdHVsbyBhIGxhIGdyw6FmaWNhDQogIEdyY" +
                        "WZpY2ExLlRpdGxlcy5BZGRSYW5nZShOZXcgQ2hhcnRUaXRsZSgpIHtUaXR1bG8xfSkNCg0KICAnQ3JlY" +
                        "SBkb3Mgb2JqZXRvcyB0aXBvIGZpbHRybyB5IGxvcyBpbmljaWFsaXphIGNvbiBsb3MgZmlsdHJvcyBuZ" +
                        "WNlc2FyaW9zDQogIERpbSBGaWx0cm8xIEFzIE5ldyBEYXRhRmlsdGVyKCJDYXRlZ29yaWEyIiwiU3lzd" +
                        "GVtLlN0cmluZyIsRGF0YUZpbHRlckNvbmRpdGlvbi5FcXVhbCxDYXRlZ29yaWEpDQogIERpbSBGaWx0c" +
                        "m8yIEFzIE5ldyBEYXRhRmlsdGVyKCJHcmFmaWNhMSIsIlN5c3RlbS5Cb29sZWFuIixEYXRhRmlsdGVyQ" +
                        "29uZGl0aW9uLkVxdWFsLFRydWUpDQogIERpbSBGaWx0cm8zIEFzIE5ldyBEYXRhRmlsdGVyKCJHcmFma" +
                        "WNhMiIsIlN5c3RlbS5Cb29sZWFuIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLEZhbHNlKQ0KICBEa" +
                        "W0gRmlsdHJvNCBBcyBOZXcgRGF0YUZpbHRlcigiR3JhZmljYTMiLCJTeXN0ZW0uQm9vbGVhbiIsRGF0Y" +
                        "UZpbHRlckNvbmRpdGlvbi5FcXVhbCxGYWxzZSkNCiAgRGltIEZpbHRybzUgQXMgTmV3IERhdGFGaWx0Z" +
                        "XIoIkdyYWZpY2E0IiwiU3lzdGVtLkJvb2xlYW4iLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsRmFsc" +
                        "2UpDQoNCiAgJ0xpbXBpYSBsb3MgZmlsdHJvcyBkZSBsYSBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhd" +
                        "GFGaWx0ZXJzLkNsZWFyKCkNCg0KICAnUG9uZSBlbCBDb25qdWN0aW9uTW9kZSBhIEFuZA0KICBQbGFud" +
                        "GlsbGEuRGF0YUZpbHRlcnNDb25qdW5jdGlvbk1vZGUgPSBDb25qdW5jdGlvblR5cGVzLkFuZA0KDQogI" +
                        "CdBZ3JlZ2EgbG9zIGZpbHRyb3MgYSBsYSBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzL" +
                        "kFkZChGaWx0cm8xKQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzIpDQogIFBsYW50a" +
                        "WxsYS5EYXRhRmlsdGVycy5BZGQoRmlsdHJvMykNCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGa" +
                        "Wx0cm80KQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzUpDQoNCiAgJ09jdWx0YSBvI" +
                        "G11ZXN0cmEgbGFzIGV0aXF1ZXRhcyBkZSBsYSBncmFmaWNhDQogIElGIEdldEN1cnJlbnRDb2x1bW5WY" +
                        "Wx1ZSgiRXRpcXVldGEiKSA9IEZhbHNlIFRIRU4NCiAgICAgR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUuT" +
                        "GFiZWwuVmlzaWJsZSA9IEZhbHNlDQogIEVMU0UNCiAgICAgR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUuT" +
                        "GFiZWwuVmlzaWJsZSA9IFRydWUNCiAgRU5EIElGDQoNCkVuZCBTdWINCg0KDQpQcml2YXRlIFN1YiBja" +
                        "GFydDJfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uR" +
                        "HJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsd" +
                        "WUoIkVtcHJlc2FOb21icmUiKS5Ub1N0cmluZyA9IE5PVEhJTkcgVEhFTg0KICAgICBlLkNhbmNlbCA9I" +
                        "FRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1Z" +
                        "SgiQ2F0ZWdvcmlhIikgSVMgTk9USElORyBUSEVODQogICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgI" +
                        "CBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0dlbmVyYSB1biBvYmpldG8gcXVlIHJlcHJlc2VudGEgYSBsY" +
                        "SBncsOhZmljYQ0KICBEaW0gR3JhZmljYTEgQXMgWFJDaGFydCA9IENUeXBlKHNlbmRlcixYUkNoYXJ0K" +
                        "Q0KDQogJ1NpIGVsIHZhbG9yIGRlbCBjYW1wbyBWZXJHcmFmaWNhRGV0YWxsZSBlcyAwIG5vIHNlIG11Z" +
                        "XN0cmEgDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiVmVyR3JhZmljYURldGFsbGUiKSA9IDAgV" +
                        "EhFTg0KICAgIEdyYWZpY2ExLnZpc2libGUgPSBGYWxzZQ0KICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANC" +
                        "iAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0d1YXJkYSBlbCB2YWxvciBkZSBsYSBjb2x1bW5hIENhd" +
                        "GVnb3JpYSANCiAgRGltIENhdGVnb3JpYSBBcyBTdHJpbmcgPSBHZXRDdXJyZW50Q29sdW1uVmFsdWUoI" +
                        "kNhdGVnb3JpYSIpLlRvU3RyaW5nDQoNCiAgJ0dlbmVyYSB1biBvYmpldG8gcXVlIHJlcHJlc2VudGEgY" +
                        "SBsYSBwbGFudGlsbGEgc2Ugc2VyaWVzIGF1dG9jcmVhZGFzDQogIERpbSBQbGFudGlsbGEgQXMgU2Vya" +
                        "WVzQmFzZSA9IEdyYWZpY2ExLlNlcmllc1RlbXBsYXRlDQoNCiAgJ0dlbmVyYSB1biBvYmpldG8gdGlwb" +
                        "yBUw610dWxvDQogIERpbSBUaXR1bG8xIEFzIE5ldyBDaGFydFRpdGxlKCkNCiAgVGl0dWxvMS5UZXh0I" +
                        "D0gIlJlc3VtZW4gR3J1cG9zIGRlIGxhIENhdGVnb3LDrWEgIiArIENhdGVnb3JpYQ0KICBUaXR1bG8xL" +
                        "kZvbnQgPSBOZXcgRm9udChUaXR1bG8xLkZvbnQuU2l6ZSwxMCkNCg0KICAnTGltcGlhIGxvcyB0w610d" +
                        "WxvcyBkZSBsYSBncsOhZmljYQ0KICBHcmFmaWNhMS5UaXRsZXMuQ2xlYXIoKQ0KDQogICdBZ3JlZ2EgZ" +
                        "WwgVMOtdHVsbyBhIGxhIGdyw6FmaWNhDQogIEdyYWZpY2ExLlRpdGxlcy5BZGRSYW5nZShOZXcgQ2hhc" +
                        "nRUaXRsZSgpIHtUaXR1bG8xfSkNCg0KICAnQ3JlYSBkb3Mgb2JqZXRvcyB0aXBvIGZpbHRybyB5IGxvc" +
                        "yBpbmljaWFsaXphIGNvbiBsb3MgZmlsdHJvcyBuZWNlc2FyaW9zDQogIERpbSBGaWx0cm8xIEFzIE5ld" +
                        "yBEYXRhRmlsdGVyKCJDYXRlZ29yaWEyIiwiU3lzdGVtLlN0cmluZyIsRGF0YUZpbHRlckNvbmRpdGlvb" +
                        "i5FcXVhbCxDYXRlZ29yaWEpDQogIERpbSBGaWx0cm8yIEFzIE5ldyBEYXRhRmlsdGVyKCJHcmFmaWNhM" +
                        "SIsIlN5c3RlbS5Cb29sZWFuIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLFRydWUpDQogIERpbSBGa" +
                        "Wx0cm8zIEFzIE5ldyBEYXRhRmlsdGVyKCJHcmFmaWNhMiIsIlN5c3RlbS5Cb29sZWFuIixEYXRhRmlsd" +
                        "GVyQ29uZGl0aW9uLkVxdWFsLFRydWUpDQogIERpbSBGaWx0cm80IEFzIE5ldyBEYXRhRmlsdGVyKCJHc" +
                        "mFmaWNhMyIsIlN5c3RlbS5Cb29sZWFuIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLEZhbHNlKQ0KI" +
                        "CBEaW0gRmlsdHJvNSBBcyBOZXcgRGF0YUZpbHRlcigiR3JhZmljYTQiLCJTeXN0ZW0uQm9vbGVhbiIsR" +
                        "GF0YUZpbHRlckNvbmRpdGlvbi5FcXVhbCxGYWxzZSkNCg0KICAnTGltcGlhIGxvcyBmaWx0cm9zIGRlI" +
                        "GxhIHBsYW50aWxsYQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQ2xlYXIoKQ0KDQogICdQb25lIGVsI" +
                        "ENvbmp1Y3Rpb25Nb2RlIGEgQW5kDQogIFBsYW50aWxsYS5EYXRhRmlsdGVyc0Nvbmp1bmN0aW9uTW9kZ" +
                        "SA9IENvbmp1bmN0aW9uVHlwZXMuQW5kDQoNCiAgJ0FncmVnYSBsb3MgZmlsdHJvcyBhIGxhIHBsYW50a" +
                        "WxsYQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzEpDQogIFBsYW50aWxsYS5EYXRhR" +
                        "mlsdGVycy5BZGQoRmlsdHJvMikNCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0cm8zKQ0KI" +
                        "CBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzQpDQogIFBsYW50aWxsYS5EYXRhRmlsdGVyc" +
                        "y5BZGQoRmlsdHJvNSkNCg0KICAnT2N1bHRhIG8gbXVlc3RyYSBsYXMgZXRpcXVldGFzIGRlIGxhIGdyY" +
                        "WZpY2ENCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJFdGlxdWV0YSIpID0gRmFsc2UgVEhFTg0KI" +
                        "CAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gRmFsc2UNCiAgRUxTRQ0KI" +
                        "CAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gVHJ1ZQ0KICBFTkQgSUYNC" +
                        "g0KRW5kIFN1Yg0KDQoNClByaXZhdGUgU3ViIGNoYXJ0M19CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQ" +
                        "XMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzK" +
                        "Q0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiRW1wcmVzYU5vbWJyZSIpLlRvU3RyaW5nID0gT" +
                        "k9USElORyBUSEVODQogICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgICBSRVRVUk4NCiAgRU5EIElGD" +
                        "QoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJDYXRlZ29yaWEiKSBJUyBOT1RISU5HIFRIRU4NC" +
                        "iAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgIFJFVFVSTg0KICBFTkQgSUYNCg0KICAnR2VuZXJhI" +
                        "HVuIG9iamV0byBxdWUgcmVwcmVzZW50YSBhIGxhIGdyw6FmaWNhDQogIERpbSBHcmFmaWNhMSBBcyBYU" +
                        "kNoYXJ0ID0gQ1R5cGUoc2VuZGVyLFhSQ2hhcnQpDQoNCiAnU2kgZWwgdmFsb3IgZGVsIGNhbXBvIFZlc" +
                        "kdyYWZpY2FEZXRhbGxlIGVzIDAgbm8gc2UgbXVlc3RyYSANCiAgSUYgR2V0Q3VycmVudENvbHVtblZhb" +
                        "HVlKCJWZXJHcmFmaWNhRGV0YWxsZSIpID0gMCBUSEVODQogICAgR3JhZmljYTEudmlzaWJsZSA9IEZhb" +
                        "HNlDQogICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgIFJFVFVSTg0KICBFTkQgSUYNCg0KICAnR3Vhc" +
                        "mRhIGVsIHZhbG9yIGRlIGxhIGNvbHVtbmEgQ2F0ZWdvcmlhIA0KICBEaW0gQ2F0ZWdvcmlhIEFzIFN0c" +
                        "mluZyA9IEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiQ2F0ZWdvcmlhIikuVG9TdHJpbmcNCg0KICAnR2VuZ" +
                        "XJhIHVuIG9iamV0byBxdWUgcmVwcmVzZW50YSBhIGxhIHBsYW50aWxsYSBzZSBzZXJpZXMgYXV0b2NyZ" +
                        "WFkYXMNCiAgRGltIFBsYW50aWxsYSBBcyBTZXJpZXNCYXNlID0gR3JhZmljYTEuU2VyaWVzVGVtcGxhd" +
                        "GUNCg0KICAnR2VuZXJhIHVuIG9iamV0byB0aXBvIFTDrXR1bG8NCiAgRGltIFRpdHVsbzEgQXMgTmV3I" +
                        "ENoYXJ0VGl0bGUoKQ0KICBUaXR1bG8xLlRleHQgPSAiUmVzdW1lbiBGYW1pbGlhcyBkZSBsYSBDYXRlZ" +
                        "29yw61hICIgKyBDYXRlZ29yaWENCiAgVGl0dWxvMS5Gb250ID0gTmV3IEZvbnQoVGl0dWxvMS5Gb250L" +
                        "lNpemUsMTApDQoNCiAgJ0xpbXBpYSBsb3MgdMOtdHVsb3MgZGUgbGEgZ3LDoWZpY2ENCiAgR3JhZmljY" +
                        "TEuVGl0bGVzLkNsZWFyKCkNCg0KICAnQWdyZWdhIGVsIFTDrXR1bG8gYSBsYSBncsOhZmljYQ0KICBHc" +
                        "mFmaWNhMS5UaXRsZXMuQWRkUmFuZ2UoTmV3IENoYXJ0VGl0bGUoKSB7VGl0dWxvMX0pDQoNCiAgJ0NyZ" +
                        "WEgZG9zIG9iamV0b3MgdGlwbyBmaWx0cm8geSBsb3MgaW5pY2lhbGl6YSBjb24gbG9zIGZpbHRyb3Mgb" +
                        "mVjZXNhcmlvcw0KICBEaW0gRmlsdHJvMSBBcyBOZXcgRGF0YUZpbHRlcigiQ2F0ZWdvcmlhMiIsIlN5c" +
                        "3RlbS5TdHJpbmciLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsQ2F0ZWdvcmlhKQ0KICBEaW0gRmlsd" +
                        "HJvMiBBcyBOZXcgRGF0YUZpbHRlcigiR3JhZmljYTEiLCJTeXN0ZW0uQm9vbGVhbiIsRGF0YUZpbHRlc" +
                        "kNvbmRpdGlvbi5FcXVhbCxUcnVlKQ0KICBEaW0gRmlsdHJvMyBBcyBOZXcgRGF0YUZpbHRlcigiR3JhZ" +
                        "mljYTIiLCJTeXN0ZW0uQm9vbGVhbiIsRGF0YUZpbHRlckNvbmRpdGlvbi5FcXVhbCxUcnVlKQ0KICBEa" +
                        "W0gRmlsdHJvNCBBcyBOZXcgRGF0YUZpbHRlcigiR3JhZmljYTMiLCJTeXN0ZW0uQm9vbGVhbiIsRGF0Y" +
                        "UZpbHRlckNvbmRpdGlvbi5FcXVhbCxUcnVlKQ0KICBEaW0gRmlsdHJvNSBBcyBOZXcgRGF0YUZpbHRlc" +
                        "igiR3JhZmljYTQiLCJTeXN0ZW0uQm9vbGVhbiIsRGF0YUZpbHRlckNvbmRpdGlvbi5FcXVhbCxGYWxzZ" +
                        "SkNCg0KICAnTGltcGlhIGxvcyBmaWx0cm9zIGRlIGxhIHBsYW50aWxsYQ0KICBQbGFudGlsbGEuRGF0Y" +
                        "UZpbHRlcnMuQ2xlYXIoKQ0KDQogICdQb25lIGVsIENvbmp1Y3Rpb25Nb2RlIGEgQW5kDQogIFBsYW50a" +
                        "WxsYS5EYXRhRmlsdGVyc0Nvbmp1bmN0aW9uTW9kZSA9IENvbmp1bmN0aW9uVHlwZXMuQW5kDQoNCiAgJ" +
                        "0FncmVnYSBsb3MgZmlsdHJvcyBhIGxhIHBsYW50aWxsYQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQ" +
                        "WRkKEZpbHRybzEpDQogIFBsYW50aWxsYS5EYXRhRmlsdGVycy5BZGQoRmlsdHJvMikNCiAgUGxhbnRpb" +
                        "GxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0cm8zKQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpb" +
                        "HRybzQpDQogIFBsYW50aWxsYS5EYXRhRmlsdGVycy5BZGQoRmlsdHJvNSkNCg0KICAnT2N1bHRhIG8gb" +
                        "XVlc3RyYSBsYXMgZXRpcXVldGFzIGRlIGxhIGdyYWZpY2ENCiAgSUYgR2V0Q3VycmVudENvbHVtblZhb" +
                        "HVlKCJFdGlxdWV0YSIpID0gRmFsc2UgVEhFTg0KICAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MY" +
                        "WJlbC5WaXNpYmxlID0gRmFsc2UNCiAgRUxTRQ0KICAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MY" +
                        "WJlbC5WaXNpYmxlID0gVHJ1ZQ0KICBFTkQgSUYNCg0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBHcmFuV" +
                        "G90YWxfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uR" +
                        "HJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsd" +
                        "WUoIkVtcHJlc2FOb21icmUiKS5Ub1N0cmluZyA9IE5PVEhJTkcgVEhFTg0KICAgICBlLkNhbmNlbCA9I" +
                        "FRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1Z" +
                        "SgiVG90YWwiKSA9IEZhbHNlIFRIRU4gICAgIA0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRQ0KI" +
                        "CAgICBlLkNhbmNlbCA9IEZhbHNlDQogIEVORCBJRiANCg0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBEZ" +
                        "XRhaWxfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uR" +
                        "HJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsd" +
                        "WUoIkVtcHJlc2FOb21icmUiKS5Ub1N0cmluZyA9IE5PVEhJTkcgVEhFTg0KICAgICBlLkNhbmNlbCA9I" +
                        "FRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1Z" +
                        "SgiR3JhZmljYTEiKSA9IEZhbHNlIFRIRU4gICAgIA0KICAgICBlLkNhbmNlbCA9IEZhbHNlICAgDQogI" +
                        "EVMU0UNCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICBFTkQgSUYgDQoNCg0KRW5kIFN1Yg0KDQpQc" +
                        "ml2YXRlIFN1YiBHcm91cEZvb3RlcjFfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQ" +
                        "nlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KICBJRiBHZ" +
                        "XRDdXJyZW50Q29sdW1uVmFsdWUoIkFydGljdWxvIikuVG9TdHJpbmcgPD4gTk9USElORyBUSEVODQogI" +
                        "CAgIGUuQ2FuY2VsID0gRmFsc2UNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRU5EIElGI" +
                        "A0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViIGNoYXJ0NF9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQ" +
                        "XMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzK" +
                        "Q0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiRW1wcmVzYU5vbWJyZSIpLlRvU3RyaW5nID0gT" +
                        "k9USElORyBUSEVODQogICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgICBSRVRVUk4NCiAgRU5EIElGD" +
                        "QoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJDYXRlZ29yaWEiKSBJUyBOT1RISU5HIFRIRU4NC" +
                        "iAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgIFJFVFVSTg0KICBFTkQgSUYNCg0KICAnR2VuZXJhI" +
                        "HVuIG9iamV0byBxdWUgcmVwcmVzZW50YSBhIGxhIGdyw6FmaWNhDQogIERpbSBHcmFmaWNhMSBBcyBYU" +
                        "kNoYXJ0ID0gQ1R5cGUoc2VuZGVyLFhSQ2hhcnQpDQoNCiAgJ0d1YXJkYSBlbCB2YWxvciBkZSBsYSBjb" +
                        "2x1bW5hIENhdGVnb3JpYSANCiAgRGltIENhdGVnb3JpYSBBcyBTdHJpbmcgPSBHZXRDdXJyZW50Q29sd" +
                        "W1uVmFsdWUoIkNhdGVnb3JpYSIpLlRvU3RyaW5nDQoNCiAgJ0dlbmVyYSB1biBvYmpldG8gcXVlIHJlc" +
                        "HJlc2VudGEgYSBsYSBwbGFudGlsbGEgc2Ugc2VyaWVzIGF1dG9jcmVhZGFzDQogIERpbSBQbGFudGlsb" +
                        "GEgQXMgU2VyaWVzQmFzZSA9IEdyYWZpY2ExLlNlcmllc1RlbXBsYXRlDQoNCiAgJ0dlbmVyYSB1biBvY" +
                        "mpldG8gdGlwbyBUw610dWxvDQogIERpbSBUaXR1bG8xIEFzIE5ldyBDaGFydFRpdGxlKCkNCiAgVGl0d" +
                        "WxvMS5UZXh0ID0gIlJlc3VtZW4gVG9kYXMgTGFzIENhdGVnb3JpYXMgIicgKyBDb250TW9uZWRhLlRya" +
                        "W0gKyAiKSINCiAgVGl0dWxvMS5Gb250ID0gTmV3IEZvbnQoVGl0dWxvMS5Gb250LlNpemUsMjApDQoNC" +
                        "iAgJ0xpbXBpYSBsb3MgdMOtdHVsb3MgZGUgbGEgZ3LDoWZpY2ENCiAgR3JhZmljYTEuVGl0bGVzLkNsZ" +
                        "WFyKCkNCg0KICAnQWdyZWdhIGVsIFTDrXR1bG8gYSBsYSBncsOhZmljYQ0KICBHcmFmaWNhMS5UaXRsZ" +
                        "XMuQWRkUmFuZ2UoTmV3IENoYXJ0VGl0bGUoKSB7VGl0dWxvMX0pDQoNCiAgJ0NyZWEgZG9zIG9iamV0b" +
                        "3MgdGlwbyBmaWx0cm8geSBsb3MgaW5pY2lhbGl6YSBjb24gbG9zIGZpbHRyb3MgbmVjZXNhcmlvcw0KJ" +
                        "yAgRGltIEZpbHRybzEgQXMgTmV3IERhdGFGaWx0ZXIoIkNhdGVnb3JpYTIiLCJTeXN0ZW0uU3RyaW5nI" +
                        "ixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLENhdGVnb3JpYSkNCiAgRGltIEZpbHRybzIgQXMgTmV3I" +
                        "ERhdGFGaWx0ZXIoIkdyYWZpY2ExIiwiU3lzdGVtLkJvb2xlYW4iLERhdGFGaWx0ZXJDb25kaXRpb24uR" +
                        "XF1YWwsVHJ1ZSkNCiAgRGltIEZpbHRybzMgQXMgTmV3IERhdGFGaWx0ZXIoIkdyYWZpY2EyIiwiU3lzd" +
                        "GVtLkJvb2xlYW4iLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsVHJ1ZSkNCiAgRGltIEZpbHRybzQgQ" +
                        "XMgTmV3IERhdGFGaWx0ZXIoIkdyYWZpY2EzIiwiU3lzdGVtLkJvb2xlYW4iLERhdGFGaWx0ZXJDb25ka" +
                        "XRpb24uRXF1YWwsVHJ1ZSkNCiAgRGltIEZpbHRybzUgQXMgTmV3IERhdGFGaWx0ZXIoIkdyYWZpY2E0I" +
                        "iwiU3lzdGVtLkJvb2xlYW4iLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsVHJ1ZSkNCg0KICAnTGltc" +
                        "GlhIGxvcyBmaWx0cm9zIGRlIGxhIHBsYW50aWxsYQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQ2xlY" +
                        "XIoKQ0KDQogICdQb25lIGVsIENvbmp1Y3Rpb25Nb2RlIGEgQW5kDQogIFBsYW50aWxsYS5EYXRhRmlsd" +
                        "GVyc0Nvbmp1bmN0aW9uTW9kZSA9IENvbmp1bmN0aW9uVHlwZXMuQW5kDQoNCiAgJ0FncmVnYSBsb3MgZ" +
                        "mlsdHJvcyBhIGxhIHBsYW50aWxsYQ0KJyAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0cm8xK" +
                        "Q0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzIpDQogIFBsYW50aWxsYS5EYXRhRmlsd" +
                        "GVycy5BZGQoRmlsdHJvMykNCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0cm80KQ0KICBQb" +
                        "GFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzUpDQoNCiAgJ09jdWx0YSBvIG11ZXN0cmEgbGFzI" +
                        "GV0aXF1ZXRhcyBkZSBsYSBncmFmaWNhDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiRXRpcXVld" +
                        "GEiKSA9IEZhbHNlIFRIRU4NCiAgICAgR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUuTGFiZWwuVmlzaWJsZ" +
                        "SA9IEZhbHNlDQogIEVMU0UNCiAgICAgR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUuTGFiZWwuVmlzaWJsZ" +
                        "SA9IFRydWUNCiAgRU5EIElGDQoNCkVuZCBTdWINCg0KDQoNClByaXZhdGUgU3ViIEdyb3VwSGVhZGVyM" +
                        "l9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3a" +
                        "W5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiQ" +
                        "XJ0aWN1bG8iKS5Ub1N0cmluZyA8PiBOT1RISU5HIFRIRU4NCiAgICAgZS5DYW5jZWwgPSBGYWxzZQ0KI" +
                        "CBFTFNFDQogICAgIGUuQ2FuY2VsID0gVHJ1ZQ0KICBFTkQgSUYgDQoNCkVuZCBTdWINCg0KDQoNClBya" +
                        "XZhdGUgU3ViIEdyb3VwSGVhZGVyMV9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCe" +
                        "VZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdld" +
                        "EN1cnJlbnRDb2x1bW5WYWx1ZSgiQXJ0aWN1bG8iKS5Ub1N0cmluZyA8PiBOT1RISU5HIFRIRU4NCiAgI" +
                        "CAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTFNFDQogICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgRU5EI" +
                        "ElGIA0KDQpFbmQgU3ViQAABAAAA/////wEAAAAAAAAADAIAAABRU3lzdGVtLkRyYXdpbmcsIFZlcnNpb" +
                        "249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhB" +
                        "QEAAAAVU3lzdGVtLkRyYXdpbmcuQml0bWFwAQAAAAREYXRhBwICAAAACQMAAAAPAwAAAFrBAAAC/9j/4" +
                        "AAQSkZJRgABAQEAlgCWAAD/7gAOQWRvYmUAZAAAAAAB/+ERlkV4aWYAAE1NACoAAAAIAAcBEgADAAAAA" +
                        "QABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAHAAAAHIBMgACAAAAF" +
                        "AAAAI6HaQAEAAAAAQAAAKIAAADCAJYAAAABAAAAlgAAAAEAAEFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZ" +
                        "G93cwAyMDExOjAxOjE4IDA5OjUxOjA2AAACoAIABAAAAAEAAAFioAMABAAAAAEAAACBAAAAAAAAAAYBA" +
                        "wADAAAAAQAGAAABGgAFAAAAAQAAARABGwAFAAAAAQAAARgBKAADAAAAAQACAAACAQAEAAAAAQAAASACA" +
                        "gAEAAAAAQAAEG4AAAAAAAAASAAAAAEAAABIAAAAAf/Y/+0ADEFkb2JlX0NNAAH/7gAOQWRvYmUAZIAAA" +
                        "AAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAz/wAARCAA6AKADASIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAA" +
                        "AAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMM" +
                        "wEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0N" +
                        "hfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBA" +
                        "gQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDB" +
                        "yY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp" +
                        "7fH/9oADAMBAAIRAxEAPwD1VJJJJSlgYWR9Z3fWTIqyqg3pLd/pu2tDdoj0HVWA+q+2z/DMf/4H+jV36" +
                        "w9WPSOk3ZrGtfa3a2ljpgveQxu7b+a2fUch/VjquX1bpDMzLrbXY572gskNcGu2eo1ri9zP3Ppp/tS9v" +
                        "3f0OLg/wlnux9z2/wBKuL/BdZJJJMXqSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//9D1VZ/Wu" +
                        "tYnR8T17/fY+W0UNPusd+6391jf8JZ/g03W+t4nRsT17/fY+W0UNPusd4D91jf8JZ/g1xvTOmdR+tfUX" +
                        "5+e8txWnbZY2QIB/oeH+6xv+Ft/9H/zaUr6x9Tys36r9OuynB12Xk23ODRDWis3VV1M/kMY5n0kXqw6l" +
                        "0von1f6h08FlWJTuttGoD7xU+Miv/Q2u9Rv9f8A0dnpK1/jBwaqOldPGOwVUY9ppZW0QAHMcW/+el0PQ" +
                        "HU5f1dwQQLKn4tdb2OALTDBVaxzT9L6LmLQjkGPlsE+HiAnPjidjxcUf+g0ZYzk5nNG+EmEOGQ3Fer/A" +
                        "KbD6vfWHF63i72fo8muBkY5OrT+839+p/5j1rLzvrvQs76sZrerdIc4YgdodXGouP8AMX/6XFs+ix7v+" +
                        "Ls/S+lbZ131e+sON1vF3sHp5NUDIoJktJ/Ob+/U/wDMeoeY5eIj72E8WGX+Njl+7JlwZ5GRxZRw5Y/4u" +
                        "SP78UvXeuYnQ8H7blte+svFYbXtmSC7/COrZ9FjvzleqtZdUy6syyxoe0+ThuasH68dRy+m9IryMNzWX" +
                        "+u1rbHMa8tllpLqxaHsa/27Po/QWT1PrP1lf1fC6d03KFb8rFqsDXMr2l5bZZa4vfU/b7a03Hys8kRIS" +
                        "jEHi+Y/5v5rXZOZhCRiRKUhw6RH7/yvbrK679YMXoddFmVXZYy95ZNYadsDcXOD3M/6K5vI6x9dOhOFv" +
                        "V2Ny8Oz2uewMG0n/R20sZ6dv7nr0+k9Zf1of1e7Fx8rKzG53S73F+DZtYyyC3d+mZTXXtsY39FZ/L/0a" +
                        "mw8leSPHKEscusJfP8A1Y/1mLNzlY5GMZCceko/L/Wl/VfTUlytXU/rD0LDys36x215LPYzEpr2h7rTu" +
                        "9u+uuprK9v09/qfQ/7co49v+MLqmP8AtDHtrx6njfTRDGbm9vSbdXc/a78z7Taz/MUQ5SRs+5jEAeH3D" +
                        "L0Sl2iyHmQKHBMzI4uAD1xj3k9wuV+qH1hz+oY3UsvqVgezGIe1rGBoYza+x7W7fe/6P56P9V/rLk9Ru" +
                        "t6Z1Or0Oo4wkgAtD2tIa+WGdlrNzd35j/5ypYv1FsNfSOtWBrXljNwa8S0xXYdr2/nMT44DHFnjMDjHt" +
                        "cMt/nlvGX9ZZLOJZMBiTwEZOIf3I/pR/qvWdC63idcwftuI17GB5rc2zbuDmwf8G6xn0XN/PWiuI6f9b" +
                        "eoY31Uf1HJIyst2UcaiWtYwfo22N9RlAq9jGts/l/mJY7P8YWbit6hTmVBrxurpBqkg8bQKbKf+3L037" +
                        "nMXxzhACXBxSOkpf1V33uBrhjOZI46iNYx8Xr8/NpwMK/Nvn0sdjrHhokw0bvbMIfSep0dW6fT1DHDm1" +
                        "XTDXRILXOqe07C9n02fvLCr6v1236t9Tt6phjHysNjhXZYz2WED+c9Czex3pu/P/o9n+DVSz63Z+F9Vs" +
                        "HKfGR1HOdc0WvaA0Cux7XWOrq9NrnbPTYxn/XE0cpkJocJ9ft6G9eH3OL+7wrjzWMCzY9PuajpxcH+Nx" +
                        "PaJLim4/wDjGdQ3MZl1WFwBFDTSSQf+s/Zv/ZhdD9Xc/qWf071up4pxMlr3MLS1zN4ERaKrPfX9LZ/YT" +
                        "cnLmEeIThMA0eCWoTjz8Z4TCcLFjjGhf//R7P61/Vk9VaM3EMZ9LNgY4+2ysEv9H3e2qzc79FZ/Yu/0l" +
                        "OZ9U/rP6BZ0fqX6IMPpY9rhsLXA7PsmS327LGu9ldn/AFu39L/O9qub+tX1VZ1RjszDa1ue1sPYYDb2g" +
                        "R6dk+1tzW/zVv8A1q39H/MpTe+tHTHdT6Jk49bd17QLaByd9Z3hrf8AjG7qv+uLE/xedXZbi2dJsd+kp" +
                        "Juxwe9bzNjR/wAVc7/wZR+qn1oex7ekdVc4ODvSx7rJDg4HZ9kyd3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf" +
                        "1X6ul2RU+x7Lm4jpfTfrXkNb6Z37LdzvU/0f/Eq5y0oZMcuXmeHiPHjkf0ZtTmYzx5I54Di4RwZIj9KH" +
                        "/oLc+t31rNzn9F6TNjrD6ORawbi4u9hxcdo+m9/0LH/APW6/f8Azep9UPquej1Oy8szn5DQ1zAZbUyd3" +
                        "ogj6dm7+ds/7a/0lsPqn9UmdJY3NzWtf1BzYa0QW0tI/m6/3rXf4W3/AK1V+j/numQz5oRh7GD5P059c" +
                        "sv+9ThwylP383z/AKEOmKP/AHzyn+Mj/kGr/wAMt/8APdyzx/4tOjf+FKv/AD1kLpfrLhdOzsGrG6iLf" +
                        "RsyKmMfToW2PPo1Ocf9G51npfR/wiouZ9Xj1M9UYLTk9IfX08VMMtLn7aKNrHe6za7KdTv3/mWf6NPw5" +
                        "QMIjUiayx0Gl5eGMFmXETmMrG+OXj+r9UnS+sdbLOgdRbY0OAxrXAHxa02Md/Ze3cuAz22u+pXTH8sZk" +
                        "3s+BcbXMH4PXpNzcTPoycMvbYx7XU5DWOG5u8bXNdt/m37XKhi9L6JgdKf0iyxl2I0Ofa3Iewna5xJfZ" +
                        "9Da1tv0H/vpnL5xiiAQTIZBPh/q8MoFfzGH3JEggAwML/rcXE4n12vx+q9AqzenXNyace5r7thna17X1" +
                        "7rWfTr2vez2Pas/pnScTqGIy9v1jtpdtAsosftdWQI9Pa69vtb+Y76C6fpv1f6D0jJu9A+/qDdgotsDw" +
                        "WDc411Vv91jPd7t/qrLZ9UPqv1Kyy2oXYm263HFLXtDS+lzmWGllnrez2bv6n+DU2PPjjAwjKcYRPFHJ" +
                        "wRlpP8ARlGX/SYsmGcp8ZEZSkOGUOOUfl/SjKKbof1Trxep19XZ1Q55Zva4wHbiW+l7rvUs+gsf6lvY3" +
                        "pHXKS4C30i70zztDLGF3+f7V1n1e6R0vpWLbX02w3V2WF1jy8P9wAr2/ow1jdm1Yoq6CepV9Uq6dmWWd" +
                        "VpeaWM2Cuz1q/WyXtZ67H13ei79Jucxn+j/AEv6RNjmM/djIynpDhlwxh/NH3OGUfT/AFkywiAxSiBD5" +
                        "+KNymP1w4OLi9TmdDv6NT9TLf2xW63GszSxjawS/wBQsrcx1TgW7HMa17t2/wD9Jqbfq3jU1Oz/AKvde" +
                        "bTWQCfUs9OPzv091JZt/wCLuxV0ON0zoXTMb/m/Ywvxslj8ix+Q5paYfTTD3+zbbvtp9H02f4P/AEqo2" +
                        "/UH6tOyvT9e6u18uZji1hO0fuerXZfs/tp45iHFM8U4CcjP5Rkxzh/c/RWnl5cMBwwmYxEfm9vJCX99z" +
                        "8Tr3UOp/V/reJnObe/EoJbksAAcHb2w7YG1u/m/0T2s/SVp8e7oDfqb0ynrTXll1twpfUCX1uFt2+8Ob" +
                        "+bW13v/AJzf/obF0tHRug09Pv6RjhjKr6ybw182Frhs9d7yXWdva/6CVHROiO6WOi7W5WNjH3Me7c9rn" +
                        "E2+o57Nr6rXeo53s9NRnmMWvDGcI+4MlQ9BEeDg4h+7614wZNLlGcvbOP1eocXHx1/ivLO+r32Co53Qe" +
                        "v1V45M/pLRW3/rllRdRa7/jMZbv1L67m9YwrvtoDrcZ4b6zRtDw4bvc0ez1Gfn7P5CpD6ifVdzftTcq0" +
                        "0au3C2sshs7/wBL6e7azb7v0q6Xp2DgYGK2jp9basf6Tdhndu/wheS51m799zkuYzY5YzGzknek5QGOU" +
                        "K6GX6SeXw5I5AdMcK1hGZnGd9h+i//S9VSSSSU859afqs3qbHZuE0N6g1vuZoG3tA/m3z7W3N/wN3/Wr" +
                        "f0f8zP6p/Vx/SKXZGS4/bMloFlTXH062j6Ne1p9O25v59//AFun9H/O9AkkpSSSSSmn1jEszOm30Vfzx" +
                        "bvokwPVrIux/d/x9dax6OgZwzMG6ws2ms3Z/BjKab76TW389n2nqWRb/wCg1K6RJWMXu+2eGuG5Xffh/" +
                        "l/hsGX2uMcV8VDbtxPPfVvo+Tg2VnKqsZbj4/2Y2bqDS/3Nfuq+z11ZVm5zPVa/N/Ss9a78+yyxNX9Xp" +
                        "ycO23FpdszM2/JcQ0ksudkOxi7T9J9PG9v+D/60uiSUkve457XR4uHi/dybf8//AA1kfa4I3fDYrir96" +
                        "Dx7+hda+wY2GKvdTTS2t7XVQx9V773NtvsacrZXS3H+xNxfz/V9ZGf0DqxdnbdjhnjNqrc92uOLn2XU2" +
                        "0bR/NZstZm/4f1PQ/wdXps6pJSH39f5v5pXX7ywezp8/wAsd/3XH6BgWYzr7rabcey1tTCyw4+39EHAe" +
                        "k3p7Kq9rN/pepa31X1sq/0aDh9KzqmfV8WMAPTqnMyvcDtJo9D2/v8A6RbySgPucU/l21q6r2p/L/1Nl" +
                        "HBwQviqxV1xX7sPm/w3K6j0r7b1FlttNd+OzEvqAsAcBZY6nb7HfvVss96yW9H605+A26oE4pwXG1rqo" +
                        "ikMbl+va5js27K3euyv07Psv2d/+k9Su3q0k7F7vCK4ar08d9/0UZPb4jfFd68NPGdHw3W4OLkV4bK6s" +
                        "azNvtzpZusa4ZWP6DWt/TOc99jHXer+h2Y1f857PSWH0XMzelY/2XFrwQOmCg2hzR9oNpx79n6Nr3+h6" +
                        "dFvqPyW7/Uy3/oLa/V9Xs0lMfd4jQjxcWms/wB7J+96f32KPt8Isy4eHXSP7sP3fV/3bzmL0N77Me27H" +
                        "s2/bftGRVlGhwhuLbjV3V1YTW4388+ln+l/ReqtDpFGVhMbhHGbXjB2TY2xr27WB2Q9+LjtpH5rsa3f/" +
                        "wAF6fpLTSVfN7lHj4eHSq4uH9Ph4WfFwacPFeu/Df6PFb//2f/tGNBQaG90b3Nob3AgMy4wADhCSU0EJ" +
                        "QAAAAAAEAAAAAAAAAAAAAAAAAAAAAA4QklNBDoAAAAAAJMAAAAQAAAAAQAAAAAAC3ByaW50T3V0cHV0A" +
                        "AAABQAAAABDbHJTZW51bQAAAABDbHJTAAAAAFJHQkMAAAAASW50ZWVudW0AAAAASW50ZQAAAABDbHJtA" +
                        "AAAAE1wQmxib29sAQAAAA9wcmludFNpeHRlZW5CaXRib29sAAAAAAtwcmludGVyTmFtZVRFWFQAAAABA" +
                        "AAAOEJJTQQ7AAAAAAGyAAAAEAAAAAEAAAAAABJwcmludE91dHB1dE9wdGlvbnMAAAASAAAAAENwdG5ib" +
                        "29sAAAAAABDbGJyYm9vbAAAAAAAUmdzTWJvb2wAAAAAAENybkNib29sAAAAAABDbnRDYm9vbAAAAAAAT" +
                        "GJsc2Jvb2wAAAAAAE5ndHZib29sAAAAAABFbWxEYm9vbAAAAAAASW50cmJvb2wAAAAAAEJja2dPYmpjA" +
                        "AAAAQAAAAAAAFJHQkMAAAADAAAAAFJkICBkb3ViQG/gAAAAAAAAAAAAR3JuIGRvdWJAb+AAAAAAAAAAA" +
                        "ABCbCAgZG91YkBv4AAAAAAAAAAAAEJyZFRVbnRGI1JsdAAAAAAAAAAAAAAAAEJsZCBVbnRGI1JsdAAAA" +
                        "AAAAAAAAAAAAFJzbHRVbnRGI1B4bEBiwAAAAAAAAAAACnZlY3RvckRhdGFib29sAQAAAABQZ1BzZW51b" +
                        "QAAAABQZ1BzAAAAAFBnUEMAAAAATGVmdFVudEYjUmx0AAAAAAAAAAAAAAAAVG9wIFVudEYjUmx0AAAAA" +
                        "AAAAAAAAAAAU2NsIFVudEYjUHJjQFkAAAAAAAA4QklNA+0AAAAAABAAlgAAAAEAAgCWAAAAAQACOEJJT" +
                        "QQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNBA0AAAAAAAQAAAB4OEJJTQQZAAAAAAAEAAAAHjhCSU0D8" +
                        "wAAAAAACQAAAAAAAAAAAQA4QklNJxAAAAAAAAoAAQAAAAAAAAACOEJJTQP1AAAAAABIAC9mZgABAGxmZ" +
                        "gAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABADIAAAABAFoAAAAGAAAAAAABADUAAAABAC0AAAAGAAAAA" +
                        "AABOEJJTQP4AAAAAABwAAD/////////////////////////////A+gAAAAA/////////////////////" +
                        "////////wPoAAAAAP////////////////////////////8D6AAAAAD//////////////////////////" +
                        "///A+gAADhCSU0EAAAAAAAAAgABOEJJTQQCAAAAAAAEAAAAADhCSU0EMAAAAAAAAgEBOEJJTQQtAAAAA" +
                        "AAGAAEAAAADOEJJTQQIAAAAAAAQAAAAAQAAAkAAAAJAAAAAADhCSU0EHgAAAAAABAAAAAA4QklNBBoAA" +
                        "AAAA0kAAAAGAAAAAAAAAAAAAACBAAABYgAAAAoAVQBuAHQAaQB0AGwAZQBkAC0AMQAAAAEAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAQAAAAAAAAAAAAABYgAAAIEAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5kc09iamMAAAABAAAAAAAAUmN0MQAAAAQAAAAAV" +
                        "G9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tbG9uZwAAAIEAAAAAUmdodGxvbmcAAAFiA" +
                        "AAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVzbGljZQAAABIAAAAHc2xpY2VJRGxvbmcAAAAAA" +
                        "AAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlnaW5lbnVtAAAADEVTbGljZU9yaWdpbgAAAA1hdXRvR2VuZ" +
                        "XJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZVR5cGUAAAAASW1nIAAAAAZib3VuZHNPYmpjAAAAAQAAA" +
                        "AAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAACBA" +
                        "AAAAFJnaHRsb25nAAABYgAAAAN1cmxURVhUAAAAAQAAAAAAAG51bGxURVhUAAAAAQAAAAAAAE1zZ2VUR" +
                        "VhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABAAAAAAAOY2VsbFRleHRJc0hUTUxib29sAQAAAAhjZWxsV" +
                        "GV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWduZW51bQAAAA9FU2xpY2VIb3J6QWxpZ24AAAAHZGVmYXVsd" +
                        "AAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VTbGljZVZlcnRBbGlnbgAAAAdkZWZhdWx0AAAAC2JnQ29sb3JUe" +
                        "XBlZW51bQAAABFFU2xpY2VCR0NvbG9yVHlwZQAAAABOb25lAAAACXRvcE91dHNldGxvbmcAAAAAAAAAC" +
                        "mxlZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b21PdXRzZXRsb25nAAAAAAAAAAtyaWdodE91dHNldGxvb" +
                        "mcAAAAAADhCSU0EKAAAAAAADAAAAAI/8AAAAAAAADhCSU0EFAAAAAAABAAAAAQ4QklNBAwAAAAAEIoAA" +
                        "AABAAAAoAAAADoAAAHgAABswAAAEG4AGAAB/9j/7QAMQWRvYmVfQ00AAf/uAA5BZG9iZQBkgAAAAAH/2" +
                        "wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACEQEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADA" +
                        "AECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFAwwzAQACE" +
                        "QMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4" +
                        "mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDB" +
                        "AUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0" +
                        "kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2" +
                        "gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMirKqDekt3+m7a0N2iPQdVYD6r7bP8Mx//gf6NXfrD1Y9I" +
                        "6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5fVukMzMuttdjnvaCyQ1wa7Z6jWuL3M/c+mn+1L2/d/Q4u" +
                        "D/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJT//0PVVn9a61idHx" +
                        "PXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGxPXv99j5bRQ0+6x3gP3WN/wln+DXG9M6Z1H619Rfn57y3" +
                        "FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzfqv067KcHXZeTbc4NENaKzdVXUz+QxjmfSRerDqXS+ifV" +
                        "/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2ekrX+MHBqo6V08Y7BVRj2mllbRAAcxxb/56XQ9AdTl/V" +
                        "3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+WwT4eICc+OJ2PFxR/6DRljOTmc0b4SYQ4ZDcV6v8ApsPq9" +
                        "9YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u9Czvqxmt6t0hzhiB2h1cai4/wAxf/pcWz6LHu/4uz9L6" +
                        "VtnXfV76w43W8Xewenk1QMigmS0n85v79T/AMx6h5jl4iPvYTxYZf42OX7smXBnkZHFlHDlj/i5I/vxS" +
                        "9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/OV6q1l1TLqzLLGh7T5OG5qwfrx1HL6b0ivIw3NZf67Wts" +
                        "cxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3TcoVvysWqwNcyvaXltllri99T9vtrTcfKzyREhKMQeL5" +
                        "j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh10WZVdljL3lk1hp2wNxc4Pcz/orm8jrH106E4W9XY3Lw" +
                        "7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXHysrMbndLvcX4Nm1jLILd36ZlNde2xjf0Vn8v/RqbDyV5" +
                        "I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9aX9V9NSXK1dT+sPQsPKzfrHbXks9jMSmvaHutO727666" +
                        "msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9NEMZub29Jt1dz9rvzPtNrP8xRDlJGz7mMQB4fcMvRKXa" +
                        "LIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy+pWB7MYh7WsYGhjNr7Htbt97/o/no/1X+suT1G63pnU6" +
                        "vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw19I61YGteWM3BrxLTFdh2vb+cxPjgMcWeMwOMe1wy3+e" +
                        "W8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1zB+24jXsYHmtzbNu4ObB/wbrGfRc389aK4jp/1t6hjfV" +
                        "R/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+Yljs/xhZuK3qFOZUGvG6ukGqSDxtApsp/7cvTfucxfHO" +
                        "EAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82nAwr82+fSx2OseGiTDRu9swh9J6nR1bp9PUMcObVdMNdE" +
                        "gtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2OFdljPZYQP5z0LN7Hem78/+j2f4NVLPrdn4X1Wwcp8ZH" +
                        "Uc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRymQmhwn1+3ob14fc4v7vCuPNYwLNj0+5qOnFwf43E9okuK" +
                        "bj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1dz+pZ/TvW6ninEyWvcwtLXM3gRFoqs99f0tn9hNycuYR" +
                        "4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9WT1VozcQxn0s2Bjj7bKwS/0fd7arNzv0Vn9i7/SU5n1T+" +
                        "s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2f8AW7f0v872q5v61fVVnVGOzMNrW57Ww9hgNvaBHp2T7" +
                        "W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3XtAtoHJ31neGt/wCMbuq/64sT/F51dluLZ0mx36Skm7HB7" +
                        "1vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHuskODgdn2TJ3e71d3sqe/wD4qz9J/O5/1h6DcM5/Vfq6X" +
                        "ZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnLShkxy5eZ4eI8eOR/Rm1OZjPHkjngOLhHBkiP0of+gtz6" +
                        "3fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qsf8A9br9/wDN6n1Q+q56PU7LyzOfkNDXMBltTJ3eiCPp2" +
                        "bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS0j+br/etd/hbf8ArVX6P+e6ZDPmhGHsYPk/Tn1yy/71O" +
                        "HDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/wA93LPH/i06N/4Uq/8APWQul+suF07OwasbqIt9GzIqY" +
                        "x9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1RgtOT0h9fTxUwy0uftoo2sd7rNrsp1O/f+ZZ/o0/DlAwiNS" +
                        "JrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6B1FtjQ4DGtcAfFrTYx39l7dy4DPba76ldMfyxmTez4Fx" +
                        "tcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc123+bftcqGL0vomB0p/SLLGXYjQ59rch7CdrnEl9n0NrW2" +
                        "/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCADAwv+txcTifXa/H6r0CrN6dc3Jpx7mvu2GdrXtfXutZ9O" +
                        "va97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZAj09rr2+1v5jvoLp+m/V/oPSMm70D7+oN2Ci2wPBYNzjX" +
                        "VW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte0NL6XOZYaWWet7PZu/qf4NTY8+OMDCMpxhE8UcnBGWk/" +
                        "wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/VOvF6nX1dnVDnlm9rjAduJb6Xuu9Sz6Cx/qW9jekdcpL" +
                        "gLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDdXZYXWPLw/3ACvb+jDWN2bViiroJ6lX1Srp2ZZZ1Wl5pY" +
                        "zYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2OYz92MjKekOGXDGH80fc4ZR9P8AWTLCIDFKIEPn4o3KY" +
                        "/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/AFCytzHVOBbscxrXu3b/AP0mpt+reNTU7P8Aq915tNZAJ" +
                        "9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC/GyWPyLH5Dmlph9NMPf7Ntu+2n0fTZ/g/8ASqjb9Qfq0" +
                        "7K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzxTgJyM/lGTHOH9z9FaeXlwwHDCZjER+b28kJf33PxOvdQ" +
                        "6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RPaz9JWnx7ugN+pvTKetNeWXW3Cl9QJfW4W3b7w5v5tbXe" +
                        "/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWuGz13vJdZ29r/oJUdE6I7pY6LtblY2Mfcx7tz2ucTb6jn" +
                        "s2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH7vrXjBk0uUZy9s4/V6hxcfHX+K8s76vfYKjndB6/VXjk" +
                        "z+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOtxnhvrNG0PDhu9zR7PUZ+fs/kKkPqJ9V3N+1NyrTRq7cL" +
                        "ayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx/pN2Gd27/CF5LnWbv33OS5jNjljMbOSd6TlAY5QroZfp" +
                        "J5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1p+qzepsdm4TQ3qDW+5mgbe0D+bfPtbc3/A3f9at/R/zM" +
                        "/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07bm/n3/8AW6f0f870CSSlJJJJKafWMSzM6bfRV/PFu+iTA" +
                        "9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppvvpNbfz2faepZFv/AKDUrpElYxe77Z4a4bld9+H+X+GwZ" +
                        "fa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZuoNL/c1+6r7PXVlWbnM9Vr839Kz1rvz7LLE1f1enJw7bc" +
                        "Wl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6JJSS97jntdHi4eL93Jt/z/8ADWR9rgjd8NiuKv3oPHv6F" +
                        "1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLcf7E3F/P9X1kZ/QOrF2dt2OGeM2qtz3a44ufZdTbRtH81" +
                        "my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7Onz/ACx3/dcfoGBZjOvutptx7LW1MLLDj7f0QcB6Tensq" +
                        "r2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9OqczK9wO0mj0Pb+/wDpFvJKA+5xT+XbWrqvan8v/U2UcHBC+" +
                        "KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCwBwFljqdvsd+9Wyz3rJb0frTn4DbqgTinBcbWuqiKQxuX" +
                        "69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8IrhqvTx33/RRk9viN8V3rw08Z0fDdbg4uRXhsrqxrM2+3" +
                        "Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9JYfRczN6Vj/ZcWvBA6YKDaHNH2g2nHv2fo2vf6Hp0W+o/" +
                        "Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn73p/fYo+3wizLh4ddI/uw/d9X/dvOYvQ3vsx7bsezb9t+" +
                        "0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0OkUZWExuEcZteMHZNjbGvbtYHZD34uO2kfmuxrd//AAXp+" +
                        "ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/o8Vv//ZOEJJTQQhAAAAAABVAAAAAQEAAAAPAEEAZABvA" +
                        "GIAZQAgAFAAaABvAHQAbwBzAGgAbwBwAAAAEwBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoAG8AcAAg";
                    resourceString += "AEMAUwA1AAAAAQA4QklNBAYAAAAAAAcABwAAAAEBAP/hDdBodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xL" +
                        "jAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8e" +
                        "Dp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1L" +
                        "jAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTItMTc6MzI6MDAgICAgICAgICI+DQoJPHJkZjpSREYge" +
                        "G1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJP" +
                        "HJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL" +
                        "3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sb" +
                        "nM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIge" +
                        "G1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczpwaG90b3Nob3A9I" +
                        "mh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8iIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgU" +
                        "GhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXA6Q3JlYXRlRGF0ZT0iMjAxMS0wMS0xOFQwOTo1MTowNi0wN" +
                        "jowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wOk1vZGlme" +
                        "URhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6M" +
                        "zQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6M" +
                        "zM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ie" +
                        "G1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5OCIgZGM6Zm9ybWF0PSJpbWFnZS9qc" +
                        "GVnIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b3Nob3A6SUNDUHJvZmlsZT0ic1JHQiBJRUM2M" +
                        "Tk2Ni0yLjEiPg0KCQkJPHhtcE1NOkhpc3Rvcnk+DQoJCQkJPHJkZjpTZXE+DQoJCQkJCTxyZGY6bGkgc" +
                        "3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjMzNEMwOUFCMUEyM" +
                        "0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3aGVuPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwI" +
                        "iBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiLz4NCgkJCQkJP" +
                        "HJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjM0NEMwO" +
                        "UFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3aGVuPSIyMDExLTAxLTE4VDA5OjUxOjA2L" +
                        "TA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHN0R" +
                        "XZ0OmNoYW5nZWQ9Ii8iLz4NCgkJCQk8L3JkZjpTZXE+DQoJCQk8L3htcE1NOkhpc3Rvcnk+DQoJCTwvc" +
                        "mRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJERj4NCjwveDp4bXBtZXRhPg0KICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgIDw/eHBhY2tldCBlbmQ9J3cnPz7/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtb" +
                        "nRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAQAA9tYAA" +
                        "QAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjc" +
                        "HJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnW" +
                        "FlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2a" +
                        "WV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnV" +
                        "FJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY" +
                        "2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCI" +
                        "ElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAA" +
                        "AOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBod" +
                        "HRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xI" +
                        "ERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZ" +
                        "mF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAA" +
                        "AAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZ" +
                        "mVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAV" +
                        "x/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAA" +
                        "AQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAi" +
                        "wCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBK" +
                        "wEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCD" +
                        "AIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DO" +
                        "ANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEt" +
                        "gTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGj" +
                        "AadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIv" +
                        "gjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLU" +
                        "QtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OS" +
                        "Q5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRq" +
                        "hHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVe" +
                        "BWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZt" +
                        "xndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAea" +
                        "h6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYIMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2Yjl" +
                        "CPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpO" +
                        "ClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvW" +
                        "i+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/" +
                        "TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9I" +
                        "j1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEz" +
                        "kUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNA" +
                        "k1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVw" +
                        "lYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD" +
                        "19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7" +
                        "GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzX" +
                        "XO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Y" +
                        "n7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/" +
                        "opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWN" +
                        "JaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajB" +
                        "qN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwd" +
                        "bDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+h" +
                        "L7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNN" +
                        "c21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXci" +
                        "t0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vsh" +
                        "u0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9K" +
                        "f26/kv+3P9t////2wBDAAEBAQEBAQEBAQECAQEBAgIBAQEBAgICAgICAgIDAgMDAwMCAwMEBAQEBAMFB" +
                        "QUFBQUHBwcHBwgICAgICAgICAj/2wBDAQEBAQICAgQDAwQHBQQFBwgICAgICAgICAgICAgICAgICAgIC" +
                        "AgICAgICAgICAgICAgICAgICAgICAgICAgICAj/wAARCACBAWIDAREAAhEBAxEB/8QAHwAAAQUBAQEBA" +
                        "QEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxF" +
                        "DKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZna" +
                        "Glqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW1" +
                        "9jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAt" +
                        "REAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8" +
                        "RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUl" +
                        "ZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/" +
                        "9oADAMBAAIRAxEAPwD+/igAoAKACgAoAKAGu6Ro8kjiOOMF5JHICqoGSST0AoA/Fbxl/wAF0P2VvC/xJ" +
                        "u/Bul+EvE3jLwjpl0+lX/xJ8Pw6d9jlKOUM9nb3FzHLNBnkO2wkZKqRjMc6NFSZ+wfgnxp4X+I/hDw14" +
                        "98E6xF4g8JeL7K38Q+HdasifLuLS6jEsbgMAynB5VgCpyCAQRVmbR1FABQAUAFABQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAYPirQYfF" +
                        "XhjxH4XuLl7O38SWF5oM93a482JLy3e3Z03cblD5Ge9AH8RPjP/AIJcftveFPiTe/Dmy+Bmq+L9l0bHS" +
                        "PGnhlYpdBvYGkKxXAvpHSGBHUbis7IyZw4U1jys6lUR/YJ+yF8FdU/Z2/Zp+D3wY13U49X13wNpKWWvX" +
                        "1mS0BvrmeS+uEhZlQtFHLOyRsVBKgEgHitUjnk7s+kKZIUAFABQAUAFABQAUAFABQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFAH+ev8A8FEP2sfGf7VP7UfxP8W3Xi+91T4d+HNbvtA+EGiG4lFjYaNp9wbS2mt4AxSOS4WITSuOS" +
                        "zHnAGP9oPBXw6wvD3D+Hoqko15wUqrtq5SV2m92o35Utkkf4peN3iPiuIuIcRWdVyoQm40lfSMIuyaWy" +
                        "crcze92f1P/APBDj4ufFP4vfsR/bPipr154ou/BHizVvh/4O1/xBLNcXk+h2mnabeQrJPOzPKIZruaFC" +
                        "T8qIqDha/z5+llw3l+W8V8uEgoKpSjOSjZJTcpp2S0V1FN922+p/od9EjiXMcz4T5sXNzdOrKEJSu24K" +
                        "MGrt6uzk0uySXQ/Ymv5lP6fCgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAC" +
                        "gAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgCC6uraytri9vbhLSztEe6u7u6dY4ooo1Ls7s5AVVAJJJ" +
                        "wBQB8sftdfGzT/hj+xt8cvjh4a1iG5h07wVqOv+CNdspVaCe71KwMGlyxyKcMsk1xEVI6g8V974W8PLN" +
                        "uI8FhGrxnVjzf4U7y/8lTPgPFXiJ5Tw3jsWnaVOlLl/xNWj/wCTNH+crX+4J/hif3b/AAP1Wz/4J8f8E" +
                        "kPCPjt9GhuNZ+HvgBfiddaNqG+NLrxJ4mP9qx21y64fH23UUgYg5CjC8AV/kXxZh5cZ+JFXD8zUatf2d" +
                        "10p0/dbXT4YuS89z/X/AISxEOCvDWliOROdKh7Sz61KnvJPr8c1F+Wx9PfsVftq/Cb9t74TWnxF+HV2N" +
                        "N1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L8D4p+FmY8KZi8NiVeDu4TS92ce67Nfaj" +
                        "un3TTf6B4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpwUAFABQAUAFABQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAEF1dW1lbXF7e3CWlnaI9" +
                        "1d3d06xxRRRqXZ3ZyAqqASSTgCgD+Uj/gpz/wAFOtS/aA1XUP2a/wBm/V3h+ErXA0Pxf400+TyZfFtyZ" +
                        "BF9mgcldunBuCSR555P7v7+UpG8IW1Z+kn/AAWu1WH4Z/8ABNXxB4G0uYwWWv6l4P8AhrbDB3Pb2N7Fq" +
                        "YXO1sZXTBnkZHGTnB/pz6JOWLEcaUZtfwoVJf8AkvJ/7d/W5/Lv0u80eH4KrQTt7WdOP/k3P/7b/Wx/F" +
                        "p8OPCUvj74h+A/AsLOs3jXWdL8JRNBjeG1K+iswVyCM5k44r/VPPMyWDwVbEPanCUv/AAFN/of5Q5Hlr" +
                        "xuNo4db1Jxj/wCBNL9T+0H/AILt61qPhT/gnvqXh7QNPuDo/ifxP4X8Ia0NNjleC1062km1WNpygYJF5" +
                        "9hCgZiBvZBnJAP+XP0RcLDEcaRqVJLmhTqSV93J2i7d3aUnp0Tex/qh9L/F1MNwVKnTi+WdWnF22UVeS" +
                        "v2V4xWvVpb2P5Ef2Yf2nviz+yP8WdD+L/wg1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0Kuq" +
                        "sP9JuPuAcu4ky6eDxkLweqa+KMukovo19zWjum0f5o+H/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf3" +
                        "n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+Fm" +
                        "Y8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQA" +
                        "UAFAHKeOPHPg/4aeE9c8d+PvEdp4S8H+Gof7Q13xFrkqwW1tFuEYLM3dmYKqjlmIABJAoBI8j+A37V/7" +
                        "PP7TkGuTfAz4oWXj1/DbImu2FvDe2N7bLIzIkj2upwW03lsVIWQJtOODSTuNxaPoemIKACgAoAKAPgbx" +
                        "H/wVC/YQ8H/ABV1z4K+LP2gbTw18RvDWqTeDNf0nXtG8S2lpaajbzGCSOXUZ9OWyVVcYMhn2d92K/YsD" +
                        "4A8X4nLoY6jgnOhOKnFqVNtxaumoqfPt05b+R+NY76QXB+FzGeBrY1Qrwk4SThUSUk7NObhyb9ea3mfe" +
                        "sUsU8UU8EqzQTKssM0TBkdGGQykcEEdDX4/KLTs9z9jjJNXWqZJUlBQAUAFABQB8U/8FGPir4y+Cf7En" +
                        "7RPxK+H2qPofjPQNDW10DW7YlZrKbUr+30o3ELD7ssS3JeNuzAHtX6p4I8PYXNeK8FhcTHmpSneS6NRT" +
                        "lZ+TtZ+R+U+OPEWKynhPHYrDS5asYWi+qcpKN15q915n8hP/BK34hePvFn/AAUe/ZwuvFPjjWPEtzqur" +
                        "apLqlx4g1O9vJLlv+Ec1A5la5kcueBy2a/0o+kJk2Dw3A+OVKlCCjGNuWKVvfjtZaH+Z30d86xmJ46wL" +
                        "rVpzcpyvzSbv+7lvd6n93Gt63o3hrRtV8ReItVttC0DQrabWNb1vWJo7a0s7S2jM0s00sxVEjRFLMzEA" +
                        "AZNf5Bn+w588fBH9sv9mP8AaO1/W/CvwW+L2neOPEnh6NrzU9Et4r6zufIR1jaaFNRgtzPErMoaSLcoJ" +
                        "GTyKSaZTi0fTdMkKACgAoAKAPl34zftqfst/s9+LNI8DfGL4y6Z4L8W60kdzaaFcR3t3PFDLnZJc/2fB" +
                        "OLaNtp2vOUU9jSbRSi2fS+n6hYatYWWq6Vew6npepwx6hpupafIk0FxBMgkjkjkjJV0dSCrAkEHIpklu" +
                        "gAoAKACgAoAKACgAoAgurq2sra4vb24S0s7RHuru7unWOKKKNS7O7OQFVQCSScAUAfyf/8ABUb/AIKjX" +
                        "Pxwudb/AGe/2e9be0+DVo7af458c6ezRy+K5Y2w0EDDBXTlI5PWc8n93gPlKR0U6dj8mv2bvAHif4nfH" +
                        "j4TeC/CPhqfxbrGq69pbnRdPi80vawXkc9w8mcKsUcSM8jsQqqCSQBUouT0P6SP+Dh6eeH9if4bxxTPF" +
                        "HdfE/RILlI2KiRB4W8RShWA6jcitg9wD2r+xPoVwT4qr3W2Gn/6cpH8Y/Tam1wpQSe+Jh/6bqn8tH7E1" +
                        "tBeftmfsj2l1Ctxa3XxO8BW1zBKAyPG/iqxVlYHqCDg1/oJ4qzceF8yadmsNW/9NyP89PCeClxTliaun" +
                        "iaP/pyJ/or+MPB/hb4geFtf8E+NtAtfFPhHxTazaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmv8TMszPEYLE" +
                        "Qr0JuFSDTjJOzTWzTP9wMzyzD43DzoV4KdKaalFq6ae6aP4if8AgqH/AMEvPFP7Fnim4+JHw3t7rxT+z" +
                        "R4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf/AFb8AfH7D8U4dYbEtQx8FqtlUS+1Hz/mj03Wm" +
                        "3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf2nviz+yP8AFnQ/i/8ACDXDput6afsms6Nd7" +
                        "307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/4gZlw1m" +
                        "UMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1p8Rfh1djTdf00Raf8RPh3qEqPqOgai6E+XJg" +
                        "L5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqynB" +
                        "v3oS7Pun9mWzXZppfYdfmZ+nBQAUAfl9/wV38DeNviX+yFP4D+Hnhy98XeLvE/inw7p+k+HPD8Lz3N0w" +
                        "nkmICJ/CoQuzHhQCxIAzUz2LpvU+AP+CTn7CX7XP7NP7TGqfEL4yfC6TwL4H1Twnqnhp9SGveHb7zbq5" +
                        "vrC6hhe30rULmbnyC3zJgFeSDipjFpl1Jpo/pArQxCgAoAKACgD/O0/4KJf8n1/taf9j74j/wDTjJX+1" +
                        "3gp/wAkjlv/AF4p/wDpKP8AETxu/wCSvzL/AK/1P/Smf3XfsTXNxefsZfsj3l5O91d3Xwx8A3N1dXLs8" +
                        "kkj+FbFmZmYkliTkk9a/wAjvFWEY8UZkkrJYmt/6ckf6+eFFSUuFsslJ3bw1H/03E+na+CPvwoAKACgA" +
                        "oA/OL/grj/yjo/ae/7BWl/+pHp1fuH0bv8Akt8B/il/6bmfhn0lf+SHzD/DH/05A/kh/wCCR3/KRf8AZ" +
                        "h/7Cuqf+o5qNf6PfSR/5IjH/wCGP/pyB/mx9Gr/AJLjL/8AFL/03M/sU/4KV6J4h8S/sQfHnw54T0u71" +
                        "vxJr9npOiaLouhRSz3l5PdeIbCBYIo4AXdpN23aBznFf43y2P8AZyG5+Jn/AATV/wCCen7Z3wO/bA+DX" +
                        "xf+Jnwfm8G/DjR4tfPiPWZ9d8NyyRRah4X1Gyt1ls7PUZbk7riaIFfKJU4LAAEiIxdzWc00f1NVqYBQA" +
                        "UAFABQB/I/+29+w1+1r+01+23+0t4y+Dvwfv/GPhe11bTdMXxJf32laTZzPb+HtPiMdvNrt3ZrN5eArC" +
                        "Ittxg4xispRbZ0Rkkj+j/8AYq+H/jn4U/sp/Av4cfErTG0Xxz4M0G30HxFpEt1bXptpYHdVi86zlnicK" +
                        "m0DY5AHA6VpHYxk9T6hpkhQAUAFABQAUAFAEF1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTg" +
                        "CgD+T//AIKjf8FRrn44XOt/s9/s9629p8GrR20/xz4509mjl8VyxthoIGGCunKRyes55P7vAfKUjop07" +
                        "H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0fR9PAyxxueSR2wscUagvJI5CooLMQBUJGjdj+1H9gH9g" +
                        "HwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6f5gDR2kbAZOA0rAO4GERNoxsc053Pj3/g4L0ObVv2GvD" +
                        "F/Fu2eGPiHoGuXOxQRsk0bWdNG4kjA3XY59cCv62+hni1T4tqRf26E1/wCTU5f+2n8h/TTwjqcI05L7G" +
                        "Ig//JKkf/bj+S79lTxHF4P/AGof2bvFs7pFB4W8feD/ABHNJchmjVLHxDaXJLhCCVATnBzX+jXiHgXie" +
                        "H8dRW86FWP3wkj/ADd8OscsLxBgKz2hXpS+6cWf6Tlf4Yn+7ZzfjDwf4W+IHhbX/BPjbQLXxT4R8U2s2" +
                        "ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8RgsRCvQm4VINOMk7NNbNM4czyzD43DzoV4KdKaalFq6ae" +
                        "6aP4if+Cof/AAS88U/sWeKbj4kfDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/9W" +
                        "/AHx+w/FOHWGxLUMfBarZVEvtR8/wCaPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh" +
                        "/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxk" +
                        "Lweqa+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1p8R" +
                        "fh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnH" +
                        "uuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpwUAfnt/wVB/ac8f8A7JX7I" +
                        "Hjf4r/C1baLx9Le6X4P8OatqsKXMOnS6nc+W915EoZJXjjVvLVwU3kFgygq37R4A8BYPiPiWlhMXf2Np" +
                        "Skk7OXKvhutUm7Xa1tezT1X4p9IHj/G8N8M1sZhLe2vGMW1dR5n8Vno2leyel7XTWj/ABr/AOCN37eX7" +
                        "W/7SP7XGo/Dz43fGi+8feDYfB+s+IotC1Cy0i3jF7bXunxRS7rG0gfKrM4xuxz0r+nfpO+EHDeRcNxxO" +
                        "BwqpVXVjG6cno1K61k10R/Lv0XfGLiXPeJZYbH4qVWkqM5WaitU4pPSKfVngH/BSH/gpD+218Fv22vj5" +
                        "8MPhh8fNQ8JeA/CWoafZ+HfDtnp+hzR2sc2h2V06q91ZSyHMkrN8zHrX2Xgd4HcKZrwpg8VisHGpWqRk" +
                        "5Scpq9pyXSSWyXQ+M8dPHTizKuLMZhMJjJU6NOUVGKjB2vCL6xb3b6nxB/w9x/4KL/9HPar/wCCvw5/8" +
                        "rq/V/8AiW7gj/oAj/4FU/8Akz8l/wCJleOP+hhL/wABp/8AyB6B8P8A/gtb/wAFD/A2rQ3+ofGG0+I2n" +
                        "I/nT+G/iB4f0Wa0mPAw0umW9jdKOOiTr+dePnP0V+CsXTcY4Z0pfzQnNNfKTlH74s9nJfpW8b4OopSxS" +
                        "rR/lnCDT+cVGX3SR+7H7Mv/AAVU8C/8FBPCt18BLzxxqP7Gf7UWtxhfAvifw7LYahpmo6jGhCCybVoHj" +
                        "kLt9+xnQOynEUzONy/yNx59HrF8GYhZhGlHMMvj8cZJxlGPXm5XdW6Ti7J6yilo/wCv+AfpE4PjTDvLp" +
                        "VpZfmEl7kouMoyl05eZWd+tOSu1pGTeq/G79qP9tX/grN+yN8Y/EnwY+K37Rmp22taMReaPrVlpXh42G" +
                        "s6XK7Lb39m76aC0MoQ9QGVgyMAysB/Tvh/4V+HPEmWU8bhMDFwlo05TvGS3jL3919zVmtGj+XfELxW8S" +
                        "OGs0qYHGY6SnHVNRhaUXtKPubP707p6pn5EePPHXiz4neM/E/xD8d6y/iHxl4zvbjxH4n125SGOS7vbq" +
                        "QyyyssCRoCzEnCqB7V/SWUZRhsBhaeGw8eSlTSjFa6JbLW7P5ozjN8TmGKqYnES56tSTlJ6at6t6WX3H" +
                        "2b4O/4Kh/t6fD/wh4V8B+D/ANorUtE8I+CdNsfCPhbRYNN0CRLPTtNtUs7aBWmsHdhHFGqgsxJxySa/L" +
                        "8z8AOD8biamIrYGMqlSTlJ809ZSd29JW1bvofqWV/SC4xwWGp4ehjpRpU4qMVyw0jFWS1jfRK2p/W5/w" +
                        "SO/aq+LP7W/7JR+IXxsMd34z8J+I9T+Hc3iyG1jshrdrY2NjfJfPFAkcIfN40LmJQhaMnAORX+cP0kPD" +
                        "zLuG+I/q2BuqU6cZ8t78jbkuW7u7e7dX1s/Q/0n+jV4i5lxLw39Zx9nVp1JQ5rW50lF81lZX95xdla8e" +
                        "9z89v28/wDgvBp/w88Q658KP2O9I0/xprejvJpev/GnxOr3Ojw3CqUdNKtInT7S0bH/AI+JWEW5SFjlQ" +
                        "h6/aPCD6Ic8bRhi86lKnCWsaUdJNf35a8t/5V71nrKL0PxTxi+mDDA154PJYxqTjpKrLWKf9yOnNb+Z+" +
                        "7daRktT8JfFX/BT/wDb+8Y6nLq2q/tUeKrG5lLOYPCt1DodqN2OFt9GitYgBjj5f61/XOXeAfBuFp8kM" +
                        "vpNf3k5v75Nv8T+QMx+kBxniqnPPMaqf91qC+6CivwPfvgN/wAFr/26Pg5q1ifFXj2H45+EYnQX3hf4o" +
                        "WsEs7xfdfytSs0hu0kI+60jyKCASh5B+O4w+itwlmdN+yovDVOkqbdvnB3jb0Sfmj7Tg76V3F+V1F7as" +
                        "sTS6xqJX+U1aSfq2vJn9Y37Dv7e/wAGf26vAFz4m+H0r+HPGvhwRQ+P/hfrk0b6lpMso+WRWQKLi1kII" +
                        "jnVQDghlRgVH+dPix4PZpwjjFSxPv0p/BUS92Xl5SXWL+Ta1P8AR3wk8ZMr4vwTq4b3KsLc9Nv3ovv/A" +
                        "HovpJL1Sehwf/BXH/lHR+09/wBgrS//AFI9Or2Po3f8lvgP8Uv/AE3M8f6Sv/JD5h/hj/6cgfyQ/wDBI" +
                        "7/lIv8Asw/9hXVP/Uc1Gv8AR76SP/JEY/8Awx/9OQP82Po1f8lxl/8Ail/6bmf2m/tyfHTxJ+zV+yb8b" +
                        "/jd4OsbfUPFfgXSVufDkGrKz2y3t7ewabDLKikF1ia4EhTI3bcZGc1/lr4TcJUM94jwmBrNqnVl71t7J" +
                        "OTS7Xta/S9z/VTxc4vr5Dw3i8fRSdSlD3b7XbUU33s3e3W1j+bb/gmB/wAFGv20vj9+3l8Evhj8W/jpe" +
                        "+L/AAB4wfxRN4h8Lzabodrbzmz8IatqcAzY2ULoI54EcBWH3QOnFf3L4++CHC2TcIYvFYPCKnWp+z5Zc" +
                        "021erCL3k07pta9z+E/o/eOXFWc8Y4TCYzGOpRqe05o8sEnalOS2imrNJ6dj+j79sz9s/4RfsR/CmT4l" +
                        "/FG5kv77UpG0nwN4F0Zo/7T13UFUOYoBIQqRxqQ00zfKi46syK38PeF/hdmXFeY/VcIrJazm/hhHu+7e" +
                        "yS1b8k2v7o8UvFPLOE8u+tYtttu0IL4py7LslvJvRLu2k/5Kfj1/wAFwv24fi7qd6ngbxVZfAXwjI7Cy" +
                        "8P/AA7s7ea9EXIXz9S1KOadpADy0Pkqf7or/R3g/wCifwnltNe3pvFVesptpX8oRaVvJ8z8z/NrjH6Wv" +
                        "FuZ1H9XqLC0ukYJN285yTd/Ncq8j44h/wCCg37c0GpHVU/a3+ITXRQQ+VN4r1iS2wrBv+PeScw545OzJ" +
                        "HGcE1+my8GeEnT5P7NoW/69xv8Afa/4n5fHxq4uVTn/ALSxF/8Ar5K33Xt+B96fs7f8F3v2xPhVqenWf" +
                        "xen079oTwTG6RX9n4ktbbStbjtx1+zajpUMal++64hmz046j8g42+iJwzmNOUsGpYWr0cW5Qv5xk3p/h" +
                        "lE/YuCPpg8UZdUjHGuOLpdVJKM7eU4pa/4oyP6yP2Tv2tPhD+2X8J7P4tfB/Up5dME7aJ4j8O63EsGp6" +
                        "NqccSTPaXUaM67gsisrozIykEMeQP8AOjxF8Ocy4XzF4PGRXNa8ZLWMo7KUX8mrNJp7o/0f8OPEjLOKc" +
                        "tWMwUny3tKL0lGW7jJarZp3Taa2Z/Nn/wAFSf8AgqT+2F8Mv2wviR8GPgx8SD8K/AnwrOn6FaWmhafpd" +
                        "zcajcXOl22ozXV1NqNtcNu3XBREQqoVRwWJJ/ub6P30fuGcfwzQxuNoe3rV+ZtuUkopScUkotdrtu7bf" +
                        "ayP4S+kL9IXifL+J6+BwNf2FGhypJRi3JuKk23JPvZJWSS73Z/RH+wT8S/F/wAVP2Mf2f8A4ofEzxE3i" +
                        "Hxh4q8Ox654q8S3628DXE3nShpXECRRr8qjOFA4r+KfGDIsNl/FGMwuFhyUoVLRiruystNbs/tzwcz7F" +
                        "ZjwrgsXip89WdO8pOyu7vXSyPxA/bh/4L4aloPirXPht+xjo+m6pYaJLJpmofG/xZC17BeTRkq7aRZ7k" +
                        "RolYfLcT7hJyVj27Xb+r/Cf6HtOth4YrO5Si5K6pRdml/flvfvGNmusr3S/kzxb+mRUo4ieFyOMZRi7O" +
                        "tJXTf8AcjtbtKV0+kbWb/Enxj/wUq/b28c3V1ea1+1f4zspbzb5yeDtWk8OxDawYbIvD4skj5HOxRkcH" +
                        "iv6ryzwL4PwkVGGXUWl/NHn/GfM38z+Ts08eOMsZJyqZlWTf8suRfJQ5Uvkdn8NP+CsH/BQH4X6hBeaZ" +
                        "+0hrPiu1Rle60j4li28R29wigDYzatHNMgO3kxSI3XnJNeXnv0deDcwg4ywMIPvTvBr/wABaT+aa8j1c" +
                        "h+kdxpl81KOOnUXapaon/4Em18mn5n9Fv8AwT0/4LVeC/2o/FPh74KfHXwvb/Cz40+I5F0zwnrPh1ppP" +
                        "Dev3ZUkQILp5JrK4cjEcUjyK54EgYqh/ibxp+ixiuH8PPHYCo62FgryUre0gu+llKK6tJNfy2TZ/cHgn" +
                        "9KzC8Q4iGBzCmqGLm7Rcb+zm+2t3CT6JuSf812kfuxX8jH9fBQBBdXVtZW1xe3twlpZ2iPdXd3dOscUU" +
                        "Ual2d2cgKqgEkk4AoA/k/8A+Co3/BUa5+OFzrf7Pf7PetvafBq0dtP8c+OdPZo5fFcsbYaCBhgrpykcn" +
                        "rOeT+7wHylI6KdOx+Nnwu+F3jz40ePPDfwz+GfhufxX408VzjT9H0fTwMscbnkkdsLHFGoLySOQqKCzE" +
                        "AVCRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiuCNfiD8QVjOFGRJ/Z+n+YA0dpGwGTgNKwDuBhETaMbHNOdz" +
                        "9Caog/N3/grl8OZviX/AME9P2jdMs4PO1Hwxptl8RrNgCTGnh3VbbVrpsD/AKdYJh7ZzX7l9G7O1gONM" +
                        "DKT92cnB/8Ab8XFf+TNH4V9JXI3j+CcdGKvKEVNf9uSUn/5KmfwIW1zPZ3Fvd2szW91aulzbTxEq6SIw" +
                        "ZWUjoQRkV/sTOClFpq6Z/jTTm4yTTs0f6XvwM+JVj8ZPgv8J/izp0iSWnxI8O6N41TyeiNqWnxXTpjAw" +
                        "UZypBGQRg1/hLxbkU8rzTE4OW9GpKH/AIDJq/z3P96eEc+hmmVYbGR2rU4z/wDAop2+Wx6pXzx9Ec34w" +
                        "8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoUeORHBBBB/DqOa7sszPEYLEQr0JuFSDTjJOzT" +
                        "WzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gqH/wS88U/sWeKbj4kfDe3uvFP7NHim68vR9Yk3z3Xhi6n" +
                        "f5NO1F+SYyTi3uD9/7j/vMF/wDVvwB8fsPxTh1hsS1DHwWq2VRL7UfP+aPTdabf5NfSC+j7iOFMQ8VhU" +
                        "54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v8Awg1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZN" +
                        "o7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH434f8AiBmXDWZQxuCnaa0afwzj1jJdU" +
                        "/vTs000mf32fsb/ALV/gT9s74D+Gfjd4EtpdITUJJtB8WeFr91kuNG1qzCG5tHkQBZABIkkcgA3RujEK" +
                        "SVH+O3id4d4zhfN6mBxDUrWcZLaUHtK3TZpro01drV/7KeF3iNg+Ksnp4/DpxveMoveM1vG/XdNPqmnZ" +
                        "PRfU1fnx+hn4z/8F4v+Uf3iH/safDP/AKUyV/T/ANEP/ksof9eqn5I/lv6YX/JFz/6+0/zZ+H//AAb/A" +
                        "H/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+kzP5K+hh/wAlfL/rxP8A9KgfLn/BXH/lIv8AtPf9hXS//" +
                        "Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGYf4o/wDpuB/Q/wD8E0/2A/2Nvi3+w5+z/wDEX4k/s9+H/" +
                        "GHjfxPp2o3Wv+JNXhna5upItdvrZGcpKoyEjVRx0FfxX47eMXE+W8WY3DYXG1KdKEo8sU1ZXhF9u7P7a" +
                        "8BvBrhfMuEcFicVgqdStOMuaTTu7Tku/ZI9c+Pv/BEb9h/4u+Hb+DwH4Km+BHjUxt/ZPizwBd3ktsswA" +
                        "2C406/nlt5IwR8wjEbnP3xxXzfB30reLMtrp4iqsTS6xmle3lNJST9eZeR9Lxl9E3hLM6DWHpPC1ekoN" +
                        "2v5wk3Fr05X5n8ff7Tv7N3xX/Yx+Omt/CT4hA6d4p8LSQa94Y8U6G8sdvqVhJIXs9SsZflbYxjOCMMki" +
                        "shwyED/AEu4C45y7ijKIYzDa053Uou14v7UJL5+jTTWjR/mRx/wJmXCubzweJ0qQs4yV7Sj9mcX209U0" +
                        "09Uz+tT9hDXfgL/AMFVf2XfAfir9qL4YaL8VvjH8Cprn4Z+LNR8RwE3DSvHBPHeqYnRtt7AsbSfw+csm" +
                        "0AcV/nJ4u4POPDziCtSyrEToYXEpVIqL06px/7cd0uvK43P9JPB/GZN4i8PUa2bYeFfFYZunJyWvRqWn" +
                        "86s305lKx/J7+2/4N8L/Dv9r/8AaS8C+CdFh8N+EfCXjHXdB8N6DpwKwWdnbXzxxRRhiSFVRgZNf6KeF" +
                        "GaYjG8NYHEV5udWdGDk3u20rtn+cXi1leHwPE2Pw9CChSp1pxjFbJJuyR/Xz+yP/wAE5f2HvHH7KX7Mf" +
                        "jXxb+zX4b13xV4v+HvgvxR4m1y+huDPeahqHhuzu7ieQrMAXkkkZmwOpr/NXxI8buLMJxFj6FHHVI06d" +
                        "erGKTVlGNSSSWnRKx/pn4a+BvCWL4cy+vWwFOVSph6UpNp3cpU4tt67tu54J/wWe+O+jfsc/sieCP2Yv" +
                        "gFpFl8Mj8a2v/CsGleCoItPi0zwpYLHLqiwx2oUI15JdxxOxGXV5jksSR9j9F3hCrxPxLVzTMJOt9XtK" +
                        "825OVR35Lt78qi2l0aj0PjfpT8YUuF+GaOVZdGNH6zzRtBKKjTjZzsltzOSTfVOXXU/nV/4J4fsI+Lv2" +
                        "8fjRJ4IsdTk8KfDjwdDF4g+KvjuGETPY2UrskFvbo5CNdXboyxBjhVV5CGCFW/tjxq8XcNwhlft5R569" +
                        "R8tOF7XfVvryx3dt20tL3X8QeCXg/ieMc19hGXJQprmqTtey6JdOaT0V9km9bWf9j/wu/4JcfsFfCjw5" +
                        "B4e0v8AZr8N+L2WH7Je6/8AFGxh8TajdOV2vK0usLOI3Y8/uVjVT91VHFf5j8QfSA4wzGu6k8dUp63Ua" +
                        "bdOK8rRtdf4m2+rZ/qFw99Hvg7LaCpQwFOppZyqJVJPzvK9n/hSS6JH58/t7/8ABD/4MfEHwN4j+IP7J" +
                        "PhpPhf8XdEhl1iD4e6bPKfD/iERKZHto4bhnFncuBiFoisRbCug3eYv7N4PfSvzTBYuGHzip7bDSdudr" +
                        "34eba+KK+1e8rapu1n+LeMf0S8qxuEqYnJ6fscTFX5E/cnbok/hk/s2tG+jSvzL+Yj9kr9o/wAa/sfft" +
                        "EeA/jN4ba5gn8JXy2HjXw2jGE6poksqxajp0ySYGZIwdm8fJKqPjcgx/e/iPwPheJskrYKrZqcbwlvyz" +
                        "XwyXo97bxbWzP4A8NuOsXwxndHHUrp05WnHbmg/ji/VbX2kk90f2j/8FUNf0nxX/wAEyP2gfFGgXi6jo" +
                        "XiTw9oOv6LqEQIWe0vNd0y4hkG4A4ZHBGa/y3+j5g6mH49wVKorThUnFrs1Caa+8/1S+kRjKWJ4AxtWm" +
                        "7wnThJPunODT+4/k5/4JHf8pF/2Yf8AsK6p/wCo5qNf6K/SR/5IjH/4Y/8ApyB/nF9Gr/kuMv8A8Uv/A" +
                        "E3M/re/4K4/8o6P2nv+wVpf/qR6dX+cP0bv+S3wH+KX/puZ/pP9JX/kh8w/wx/9OQP5Sv8Agi7/AMpLf" +
                        "2bP+5x/9QHXK/0O+lH/AMkJjv8AuF/6epn+dH0V/wDkvcB/3F/9M1D6j/4OF9f8TXn7Yvw88OalPKPDO" +
                        "heAtO1DwxYuGEAkv9Z1MXU6Z4LyNbojEdo1HavgPoXYOhHhivVil7SVeSk+ukYcq+V216s/QvpsY2vLi" +
                        "ihSk37ONCLiunvTnzP1dkn6I8w/4JWeEP8Agl/r9zq91+2p4vEXxQW+VPB/hX4lSXWkeC1skVCszXtnK" +
                        "sUsxcsHS8kjjC4wj8sPf+kJmXH9GMVkdL/Z+X3pU7Sq37crV0rbOCbv1Wx8/wDR3yzw/rSk89q/7Rze7" +
                        "GpeNK3fmTs3fdTajbo9z+rDS/2Jf2AfGnhO2k8PfswfCzxB4X1WFVsPEHhjwt4al8+IHh4tQsYPMJ4++" +
                        "suT61/nliPFXjLC4lqpmGJhUi9YyqVNH5xbt8mj/RXD+E/BmLwydPL8LOnJaSjTp6ryklf5pn5Q/thf8" +
                        "EBPhp48C+J/2PfEFv8ACHxNLMW1PwD4+vNSu/DM8bksXt7lIr28tXUk/KRKhGAojxz/AET4Z/TGx+D/A" +
                        "HWcwdenbScFFVF6q8YyXn7r7tn85eJ30M8BjP3uSzWHqX1hNydN+jtKUX5e8uyR9+/8Evf2DNZ/YM+C3" +
                        "ibwj4y8Y2njL4g/EHVl8VeK7jwws40mzEFqlpBbWr3ccMsoUBmaV40yWxsG3Lfjnj94v0uMM0p1qNJ06" +
                        "NKPLHmtzO7u27NpdEkm9t9dP2b6Pvg7V4OyqpRr1VUr1Zc0uW/KrKyUbpN9W20r3tbTX+TP/grj/wApF" +
                        "/2nv+wrpf8A6jmnV/ov9G7/AJIjAf4Zf+nJn+b/ANJX/kuMw/xR/wDTcD+hH+3vE3hr/g3/AIdU8I3M1" +
                        "nrB+GUWlvcWIJlWxv8AV1sL7G3kA2s0oZuwye1fxj9ToV/GRwrJOP1m+vdRvH/yZI/tT65iKHgwp0W1L" +
                        "6tbTtKVpf8AkrZ/JB8F7H4Tal8VfAtj8dte1bwz8Ibi/iXx9rnge0ivdVgsACzfZ4pmVcswCs+GKKS4S" +
                        "QqEb/R/imtmVPLq0sBCM8So+4pu0W/Nr77aXejaTuv82OFaOW1MxoxzCcoYZy99wV5KPkn919bLVKTVn" +
                        "/bD+yX+zv8A8EgPHvha0sf2dvAPwy+MYigEt3F4ut7PxP4iCgLulurbxUs97AWIzhokUchQBxX+VviNx" +
                        "r4l4PEOWZVsTh9dOVunD0Tp2g/vb7s/1c8NuCPDLGYdRy2jhsRprzJVJ+slUvNfcl2R2fx5/wCCQ/7Cf" +
                        "xz0S/tIvgxYfCHxJMjLpfi/4MRR6BLaSEcN9itVFjKucZWSA8dCp5ry+EPpJ8XZTVUnipV4dY1ffT/7e" +
                        "fvr5S9bnqcY/Rn4PzelKKwscPU6Spe41/26vcfzj6WPy6/Zd/4IL/FX4N/tV/Dz4q+PvjN4d1v4WfCTx" +
                        "DYfETw0PCiaouv6rc6Lex6hYx3Nrd2y29qjSxKZtlzMdoKr97cv7/4gfS/y7NOHq+Ew+FqRxFem4S5uX" +
                        "kippxk00+aWjdrxjrq9rP8An3w++h1mOV8RUMXiMVTlh6FRTjy83PJwalFNNcsVdK9pS00W91/T1X8Dn" +
                        "9/hQB4p+0V8EtH/AGjPgt4/+C+u+INR8Lab47sjpcuveGJ3gurd1kWZCQrKJYiyASwsdsiEqcZyE0OLs" +
                        "z+Fv9qD9l/4pfsmfFLVPhd8UdL8m5h3XvhvxJZK507WtOLlY7u0kYDKnGGU/MjZVgCKxasdUZXPb/8Ag" +
                        "nh+2m37FPxom8Xap4Wg8U+BPGtvD4X8fxw20Daxa2Kz+aJ9PuJAGV42+Z4dwSYABsMqOji7CnG6P7bPh" +
                        "38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdLfdFNE2QQQQGR0YFXRgGRgVYBgRWxytHaUAc34x8KaL48" +
                        "8IeKvA/iS2+2eHfGem33hTX7P5f3tlqNq9nOnzBh80chHINd2WZjVweJp16TtOnJST7OLuvxRw5pl1LG" +
                        "Yaph6qvCpFxku6krP8ABn+ad8Wvht4g+DnxR+Ifwo8VRGLxF8OdZ1LwXq+5GjEk2nXb2pkQNn5JNm9Dk" +
                        "gqQQSDmv91uHM9o5nl9DF0vgrQjNekle3qtn5n+DXEmRVsrzCvg6y9+jOUH6xbV/R7ryP7BP+CCH7Rdr" +
                        "8T/ANk3UvglqmoCXxd+z5qk2nW9rKcyP4e1yaXU7KXLHLbJzcw4Awqog7gV/mj9MLgmWA4jjjoR/d4qK" +
                        "d/78EoyXzXK/Ntn+nH0OOOI5hw3LATl+9wkmrf3Jtyi/lLmXkkj90a/kk/rsKAP5UP+Cw//AAVe0vxfY" +
                        "+Lv2Qf2btVt9X8MXW/QPjT8ULTy7iC+2PiTStMc7lMQZcT3C/eI2Rnblm/0N+jN9Haphp085zOLjUWtK" +
                        "m9Gu05+f8sem71sl/nV9J36RtPFQq5LlklKm/dq1Fqn3hDy/ml12Wl2/wCbrwf4P8U/EDxToHgnwToF1" +
                        "4p8XeKbqHRPD3h7RIXnury6ncIkcaICSST+HU8V/ceZ5nh8Fh51681CnBNyk3ZJLdtn8K5ZlmIxuIhQo" +
                        "Qc6s2lGKV229kkf3xf8Evv2O9f/AGJ/2WtM+GPjPU4dQ8f+LNWu/if49g0x/NtLHUtRs7SxFpDIOJBDB" +
                        "ZRK7j5WfcVyuCf8evH3xNo8VcQSxVCLVGEVThfRuMXJ8zXS7k2lula+p/sj9H7wwrcJ8PRwteSdapN1J" +
                        "21SlJRXKn1sopN7N3tofolX4oftx+M//BeL/lH94h/7Gnwz/wClMlf0/wDRD/5LKH/Xqp+SP5b+mF/yR" +
                        "c/+vtP82fh//wAG/wB/yfXq3/YheIP/AE46XX9YfTJ/5JGP/X+H/pMz+SvoYf8AJXy/68T/APSoHy5/w" +
                        "Vx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy/8ATkz8++kr/wAlxmH+KP8A6bgf1vf8Ejv+UdH7MP8A2" +
                        "CtU/wDUj1Gv84fpI/8AJb4//FH/ANNwP9J/o1f8kPl/+GX/AKcmfo7X4efuZ/NV/wAHG/w60S4+HH7OX" +
                        "xaS1ji8R6Trep/Dqe9RQJp7LULD+040cgfMsUlk5QE/KZGx941/dX0Ic7qxx2Owd3yShGduicXyt/NSV" +
                        "+9l2P4O+nJkdKWBwOMsvaRnKnfq1JcyXycXbtd9zxT/AINwfEWpwfET9qDwksxOjanovh3xFPbsSQLmx" +
                        "vru2RlHQZS7YH1wPSvqfpw4Km8Fl9a3vKc4/JqL/wDbUfKfQYx1RY7MKN/dlCEvmnJL8JM/GX/goFqEG" +
                        "p/tyftcXNsGEcfxE8W6e3mgA+Zaa1cWj9CeN0Zx7V/UPg1RdPhPLU/+gem/vgn+p/LXjRWVTi7M2v8Ao" +
                        "Iqr7ptP8j+7f9h3/kyr9j//ALJd8P8A/wBROwr/ACL8WP8Akqsz/wCwmt/6ckf6/wDhJ/ySmWf9g1H/A" +
                        "NNxP5pv+DjB7w/tJfAeNzJ/Z6+B5HtQ27yvObXrwS7e27aE3Y7Y9q/uv6Eij/YWMf2vbfhyRt+v4n8G/" +
                        "Thcv7ewa+z7H8eeV/0/A/Dr4b/8Lx8jVv8AhUP/AAlf2bfD/bv/AArf+19m/D+V5/8AZfGcbtu73x3r+" +
                        "sc8/sm8frnsr629py/O3N+Nj+SMi/te0vqXtbaX9nzfK/L+Fz0z/jNX/qqP/l2V4P8Axiv/AFDf+Uz3/" +
                        "wDjK/8AqJ/8qB/xmr/1VH/y7KP+MV/6hv8AymH/ABlf/UT/AOVDzS5+C/xzvLie8vPhP4suru6d7m6ur" +
                        "nQtYeSSR2LMzM0BJYk5JPWvehxTlMYpLE0kl/fj/meDU4VzeUnKWGqtv+5L/I/ru+Pket2//BBKzs/Ed" +
                        "tcWetad8LfAml31lqsTwXMJtb7SLZY5I5FVlZFQKQwzxzzX+bPB0qT8YHKk04PE1mmtU7qbun5n+l3Gc" +
                        "asfBxRqpqaw1FNNWas6as15H863/BI7/lIv+zD/ANhXVP8A1HNRr+2PpI/8kRj/APDH/wBOQP4h+jV/y" +
                        "XGX/wCKX/puZ/W9/wAFcf8AlHR+09/2CtL/APUj06v84fo3f8lvgP8AFL/03M/0n+kr/wAkPmH+GP8A6" +
                        "cgfylf8EXf+Ulv7Nn/c4/8AqA65X+h30o/+SEx3/cL/ANPUz/Oj6K//ACXuA/7i/wDpmof1kf8ABQP/A" +
                        "IJ3/C/9vXwNpWn+INRfwR8UPBS3DfD74labAs72wuADJaXkBZPtFo7KrFdysjDKMMuH/wA6fBrxqzDg/" +
                        "FylTj7TD1Lc9Nu17bSi/syW17NNaNOyt/o/40eCOX8Y4OMakvZ4infkqJXtfeMlpzRe9rpp6pq7T/kp/" +
                        "aE/4JDftzfs+zajeT/Ceb4r+ELEvJH4y+DTPrkTxINxd7KJFv4gq8sXtwo5wxAJr/Rzgv6SnCWcqMViV" +
                        "Qqv7NX3Nf8AF8D8rSv5H+bXGv0Z+LslcpPDOvSX26Xv6f4V7687xt5nxR8O/jJ8dv2efEV5cfDL4jeJf" +
                        "hD4jt5RFrFt4a1DUNJkeSE48u7gjeMSAHgpKpHqK/VM74YyjOqCWKoU68GtOaMZb9YvW3qmflOR8UZxk" +
                        "ldvC16mHmnryylHbpJaX9Gj9gf2dv8Agvz+1R8ObvTtL+O2haT8ffCaFIb7UWgh0DxEkY+XdHc6bGLVy" +
                        "o5IktSzkDLrkmv5p41+hzw9joyngJywtTorucPmpPmXylZdnsf03wR9MviLAyjDMIRxVPq7KE/k4rlfz" +
                        "jd91uf1L/snftefBf8AbN+GMPxP+DWtSXFrbyDTPFHhXXEjg1jRL4rv+z3sEbyKpZfmR0ZkcfdY4IH+f" +
                        "fiL4a5pwvj3hcbBJtXjJaxmu8XZfNNJrqtj/Qvw38TMq4py9YvBTbSdpRekoPtJXfyabT6Pc/ij/wCCu" +
                        "P8AykX/AGnv+wrpf/qOadX+qH0bv+SIwH+GX/pyZ/lL9JX/AJLjMP8AFH/03A/rs/4JxeG9B8Y/8E3P2" +
                        "c/CXinSYNe8M+J/BTeH/EOh6nGJba8srx7i3nhlRuGSRHKsPQ1/m344Y6theOcdWpScakK3NFrdNWaa8" +
                        "0z/AEs8DMDRxXAmBo1oqVOdHlkns07pp+TR+FP7YP8AwQF+K/hjXdb8XfsgavbfETwRdySX1n8LfFd7D" +
                        "Ya/pyu277Pb3d6UtruNOdrSyRSYwCJGyx/rjwz+mNl2Iowo5zF0qq0dSKbhLzcVeUW+yUl10Wh/IXid9" +
                        "DPMcPWnWyWSrUXqqcmozj5KTtGSXduL6avU/DH4mfBD48fs8eIILP4p/DTxH8J9ds5x/Zt54j0+904PN" +
                        "GSyva3LKqS42kq8TkcZBr+tch4syjOqLlhK9OvBrVRkpaf3luvRo/kXP+Es4ySuo4vD1KE09HKLjr/de" +
                        "z9U2fXfwM/4Kzft4fAZrC10f433vxB8OWOF/wCEU+MK/wDCSW0ka8LH9ovW+2xooGFWK5QAcDivzXi36" +
                        "OfCGcXc8IqU39ql7j9bL3G/WLP0zhH6SHGGT8qhi3Vpr7NX94vS799L0kj+iz9g/wD4LbfCv9pzxT4d+" +
                        "EHxo8LJ8F/i54kkTSvDep2t19o8M61eucJBFLcbZbSeUnbFFLvV2wolLsqH+JvF76KmYZBh54zA1PrGG" +
                        "gryVrVILu0tJJbtqzS15bJs/uDwe+ljl2f4iGCx1P6viZu0Xe9Ob6JN6xb2Sd03pzXaR+5lfyWf1yFAB" +
                        "QB8x/tYfsn/AAt/a/8Ahbf/AA2+JNh5NzD5l94M8Z2MaHUdC1EptW4t2bGVOAJYidsi8HBCsqauVGVj+" +
                        "Iz9qD9l/wCKX7JnxS1T4XfFHS/JuYd174b8SWSudO1rTi5WO7tJGAypxhlPzI2VYAisWrHTGVz6Y/4J5" +
                        "/8ABQzxr+xd41GkaubnxX8B/FdyknjfwRG+6WzlbEZ1HThIQqXCKBvTIWZQFYghHRxlYmcLn9ofw7+In" +
                        "gr4seCvDnxF+HXiO28V+DPFdsmqaFrulvuimibIIIIDI6MCrowDIwKsAwIrY5mjtKAP49/+C/37Ktx8P" +
                        "/jl4X/ag8NaWV8IfGu3j8PeNrm2T91beKNJtliRn2qAv2uzjQr1LPDKx61/ph9DjxCjjMpqZVVl+9w75" +
                        "oedOTv/AOSybv2Uoo/zG+mb4dywWb081pR/dYlcs/KpFW/8milbu4yZ+cH/AATg/a6uP2Mv2pPBfxOv5" +
                        "pm+HmthvA3xY0603MZdB1CRPMmVB96S1lSO4QDltmzIDGv3Dxw8No8UcP1cLFL28ffpt/zx2XpJXi+17" +
                        "9D8M8DPEuXC3ENLFSb9hL3KiX8kt3bvF2ku9rdT/QY0rVdM13S9N1vRdQh1bRtZt4dV0nVdNlSa3uba4" +
                        "jE0UsUkZKujowZWBwQciv8AGXEYepRqSpzi4yi2mno01o010aZ/tNh8RTrU41KclKMkmmtU09U0+qa2";
                    resourceString += "P5bv+Cuf/BXP+1P+En/ZV/ZV8T/8Sv8AfaB8YPjBoE3/AB9dYptK0qaI/wCq6rcXCn5+UQ7NzP8A6A/Ru" +
                        "+jd7P2ebZtT97R0qTW3ac136xi9t3rZL/Pb6S30lvae0yjKKnu6xq1YvfvCD7dJSW+y0u3/ADV+D/B/i" +
                        "n4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASSSfw6niv7pzPM8PgsPOvXmoU4JuUm7JJbt" +
                        "s/g/LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5/wS88LfsWeFrf4kfEi3tfFP7S/im18vWNYj2T2vhi1nT" +
                        "59O05+QZCDi4uB9/wC4n7vJf/KTx+8fsRxTiHhsM3DAQei2dRr7UvL+WPTd67f6y/R9+j7h+FMOsVikp" +
                        "4+a1e6pp/Yh5/zS67LTf9fq/mo/poKAPxn/AOC8X/KP7xD/ANjT4Z/9KZK/p/6If/JZQ/69VPyR/Lf0w" +
                        "v8Aki5/9faf5s/D/wD4N/v+T69W/wCxC8Qf+nHS6/rD6ZP/ACSMf+v8P/SZn8lfQw/5K+X/AF4n/wClQ" +
                        "Plz/grj/wApF/2nv+wrpf8A6jmnV9/9G7/kiMB/hl/6cmfn30lf+S4zD/FH/wBNwP63v+CR3/KOj9mH/" +
                        "sFap/6keo1/nD9JH/kt8f8A4o/+m4H+k/0av+SHy/8Awy/9OTP0dr8PP3M/nt/4OLf+TYPgf/2Pq/8Aq" +
                        "PajX9n/AEJf+R/i/wDrx/7fA/ir6cH/ACT+E/6//wDtkz40/wCDcf8A5LX+0f8A9itpX/p2NfqH03v+R" +
                        "Vgf+vsv/ST8s+g1/wAjbHf9eo/+lH5pf8FWvhzrnw1/b+/aRsNatpIo/FWuN8RtDupVKpc2OvwpqaPGS" +
                        "AGVGleIkdGRh1Br91+jxndHHcG4GUH8EORrs4Pl19bJ+jTPwb6ReR1sBxnj41F8c/aJ91Nc2no216po/" +
                        "o1/4Jc/8FRv2aPGP7P3wc+AnxN8f2Pwm+Lnwt0PTPhnFp/jmVNP0zV7TRraPTbOezv5ttuXeGOMNDI6y" +
                        "b921WX5q/iL6QH0f8+wuc4rMMLRlXw1acql4e9KLk3KSlFe9ZNuzSata7T0P7k+j59IPIcVkuFy/FVo0" +
                        "MTQhGnab5YyUUoxcZP3btJXTad72TWpzX/Bez9mPUfjN+zv4G/aK8CWx1zUvgNJd3XiNNKAm+0eFNbSB" +
                        "prsGLcXW1lt4pMjgRvI5OBXf9D/AI9hled1stxD5Y4m3LfS1SF7R8uZNrzkorqcH0xuAJ5rklHMsOuaW" +
                        "Fbcra3pzteXnytJ+UXJ9D+ff/gmp+3jq37CPxwn8U3+nTeI/hR8QIbfw38VvDGnlBctbQzGS3vrXfgG4" +
                        "tDI5RGIV1d0JUsHX+y/HXwhp8X5SqUZKGJpNypye12tYv8AuysrvdNJ62s/4u8BvGGpwfm7rSi54aqlG" +
                        "pFb2T0kv70buy2abWl7r+2D4U/trfsnfGrw1Z+Kvh3+0D4W1awu41uZdPv9Ys9O1O03/wAN1Y6g8NzA2" +
                        "e0ka57ZHNf5W8ReFfEeVV3SxOCqxa6qLlF+kopxfybP9XOHPFfhvNcOq2GxtKUWtnJRkv8AFGTUl80j1" +
                        "D/hePwU/wCiweFv/Cg0n/4/Xgf6p5r/ANA1X/wCX+R9B/rdlP8A0FUv/A4/5noel6rpeuafaatoupW+s" +
                        "aVfp59jqelzR3FvMhON0ckRZWHHUGvFxGHqUpuE4uMlumrNeqZ7eHxNOtBTpyUovZp3T9Gj4M/4KpaFe" +
                        "+Iv+Ce/7Uun2Cl57fw6uuyBQW/c6XqVrqcxwPSO3Y57V+v/AEe8ZChxpl8pbOpb5yi4r8Wfjv0iMHOvw" +
                        "VmMY7qnf5RlGT/BM/je/wCCYPxQ8M/Bz9vP9nDx94y12Hwz4ZstXvNA1bXtSKJbWqa7ot7oKvM8hCxx7" +
                        "rwB5GICLliQBmv9OfHzIK+Z8H47D0YOdRwUklu+SUZ6d37ui6vQ/wAvPo/8QYfK+McDiK81CmpuLk9lz" +
                        "wlDV9F72r6LXof2Bf8ABWyWKf8A4Jx/tNTwSrNBNpOkywzRMGR0bxFpxDKRwQR0Nf5pfRwi1xxgE9+aX" +
                        "/pEz/Tb6Sck+Bse1qnCP/pyB/Kd/wAEXf8AlJb+zZ/3OP8A6gOuV/ob9KP/AJITHf8AcL/09TP86vor/" +
                        "wDJe4D/ALi/+mah++X/AAVq/wCCqHxX/Ym+I/w++DPwW8IaLfeJvEmgx/EnxF4q8eQXV7BFZXWpXmmW9" +
                        "va29pc2uJN9hK0juzDaVAXOSP49+jl9HvLuK8DWxuOqzVOE/ZxjBpO6jGTbbT0tJWStre76H9k/SS+kR" +
                        "mXCeOoYHA0oOpOHtJSmm1ZylFJJOOt4u7d9LWXU9D/YX/4LM/s//tI+GdL8PfHLxHo/wE+OMR+xalpOv" +
                        "XLWPhzVXyAs2nX2oOUj8wkD7PPL5gbhTIPmrxPFv6L+c5HXlUwEJ4rCbppXnHynGKu7fzRVratR2Pb8I" +
                        "fpS5LnuHjTx9SGFxezUnaEvOEpOyv8Ayyd76Jy3P0O+L/wM/ZX/AGhfDB1j4y/D3wh8SvDixZt/F/iK3" +
                        "0+ZreJsR7oNTUrJCDkDdHKvbmvxbhri3iHJcRyYKvVozv8ADFyV35w2fzTP23ibhHh3O8Pz46hSrQt8U" +
                        "lF2XlPdfJo/jx/4KlfAT/gnf8Edb0Sz/Y9+LVx4k8eXd60XjL4a6FqUfibw5pOniGQ701Ys8iXCyhUNu" +
                        "007YJLGMqA/+mX0fuMONc2pTlnOGUKKXu1HH2c5SuvsbONteZRitrc19P8AMP6QvBvBGU1YRyXEudZy9" +
                        "+mpe0pxjZ7T1aley5XKT3vy21+lv+DdK78UJ+1D8brG0af/AIQq58Avd+IFjB+zHVIfEOmpp5kP9/ypb" +
                        "vZ7bq+E+m1Tw74fwknb2qr2j35XCfNbyuoX+R979B+piFxBi4xv7J0Ly7cynDlv52c7fM+C/wDgrj/yk" +
                        "X/ae/7Cul/+o5p1fr/0bv8AkiMB/hl/6cmfjv0lf+S4zD/FH/03A/qU/ZW+NVt+zn/wSA+GHxxutFfxG" +
                        "vwz+HknieDQIZRB9suIp5lghaUhtiPIyh32kquSASMH/P7xC4WlnfiXiMAp8ntsRy829k0ru3WyvZdX1" +
                        "R/oT4d8VxyPwyw+PcOf2OH5uXa7Tdlfom7Xetl0Z+Vv7M//AAcJeP7j4pR6d+1d4E0K0+E+vO0H/CRfC" +
                        "nT9Si1DQHc/JK8F1e3Zu7dekiqBKBll3keW39B8efQwwccv5sorTeJj9mpKPLPyuox5Zdm/d6O26/njg" +
                        "H6auNlmPLm9GCw0vtU4y5odm05S5o90ve6q+z/pB+H/AMaf2cf2nPChb4f/ABB8LfGTwvrUW290ayurD" +
                        "UtyMu4x3VjNukjYDlo5oww7iv4eznhbPMhxH+0UauHqRejacfnGS0fqnY/ujJeKsiz/AA3+zV6WIpyWq" +
                        "TUvlKL1Xo0mfk3+3l+w5/wSH0Hw34g8UfFjU9E/Zi8VxxS3drc/CPUrfT9UnlUEiO38OQi4huMt95YbQ" +
                        "Nj+NRyP6L8IPFnxJrV4UsJGeMp3S/eRcorzdV2cfVzt5PY/m/xi8I/DOjQnVxkoYKpZteykoyfkqSupe" +
                        "ihfzW5/GxdNbWWt3LeG765ns7S6dtB1OeIWl48ccx8iVo4ZZRHIQAxVZG2ngMcZr/TympSpL2qSbWq3W" +
                        "2qu0rr5K/Y/y6qOMKr9k20n7r2e+jsm7P0bt3P9NH4dSeIJfh94El8WLInimXRtLk8SpeLtmGoNZRG4E" +
                        "g7N5m7I9a/wcztUVjayo29nzy5bbct3a3yP98cjlWeCoutf2nJHmvvzWV7/ADOyrzD1AoAKAPmP9rD9k" +
                        "/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv" +
                        "2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrn0x/wTz/4KGeNf2LvGo" +
                        "0jVzc+K/gP4ruUk8b+CI33S2crYjOo6cJCFS4RQN6ZCzKArEEI6OMrEzhc/tD+HfxE8FfFjwV4c+Ivw6" +
                        "8R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdGAZGBVgGBFbHM0eVftXfs3+Df2svgL8QPgX42/0aw8X2u" +
                        "dH1yNA82latbMJ7K9iGVJMMyqWUEb03IThjX23h3xxiuHM4o4+hq6b1XSUXpKL9V16Oz3R8R4jcC4XiT" +
                        "Jq2X19FUWj6xktYyXo+nVXWzP8AO/8AjR8H/HfwC+KXjb4PfEvR30Pxr4CvpNE1mycHY+0B4p4WIG+Ge" +
                        "NlliccMjKw4Nf7U8LcS4POMvpY3Cy5qVWN0/wA0+zTumujTR/iTxVwxjMmzGrgsVHlq0pWa/JrumrNPq" +
                        "mmfYvh3/gp5+0/4V/Y+n/Y60HxL/Z/haSaWwtvHcMkw1228NzxkSaLBMD8luzk/OPnCExAhOK/Msb4CZ" +
                        "BiOJlnVSnepa/JpyOa2qNdZW6bX956n6fgfH/iDDcMPJadS1O7XPrzqm96afSN+u9vdWh8H+D/B/in4g" +
                        "eKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASSSfw6niv17M8zw+Cw869eahTgm5Sbsklu2z8e" +
                        "yzLMRjcRChQg51ZtKMUrtt7JI/t2/4Jef8ABLzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1iPZPa+GLWdPn0" +
                        "7Tn5BkIOLi4H3/uJ+7yX/yk8fvH7EcU4h4bDNwwEHotnUa+1Ly/lj03eu3+sv0ffo+4fhTDrFYpKePmt" +
                        "Xuqaf2Ief8ANLrstN/1+r+aj+mgoAKAPzB/4LAfBD4l/Hz9h/x34P8AhN4YuPGfi/R9S0fxnH4V0dDLf" +
                        "3trptyXuEtYl+aaZUcusS5Z8FUDMQp/ffo08V4DJ+LKNbGVFTpSjKHM9k5LS76K+l3ot3ZXZ/P/ANJvh" +
                        "LH5zwlWo4Om6lWMoz5VrJqL15V1dtbLV2sruyPxs/4IPfsp/tAeC/2mfGvxj+IHwq1z4d+A9D8Kah4Pj" +
                        "1Tx3pl5pL3up6lf2MscNtFfxxPKFjt5HkdVKrgAkFhX9O/S88Q8mxWQ0sFh8RCrWlVjK0JKVoxUk22m0" +
                        "tWkk9XrbZn8u/Q98Os6wmf1cbicNOlRjSlG84uN5SlFpJSSb0Tba0Wl90fPX/BXr9jL9pO6/br+J3j3w" +
                        "d8G/EnxD8F/F1tJ8QeD/EHgPRdR1eF5I9Hs9OuLaY6fDKIpo7iBwEYglCrDrx9p9GvxQyKPCOHw9bFU6" +
                        "VWhzRlGc4xfxSkmuZq6aa1XW66HxP0mPCzPpcX4jEUMLUq0q/LKMoQlJfDGLT5U7NST0e6s+p/UT/wTz" +
                        "+EXjL4EfsW/s9/Cz4hWI0vxr4a0Mz+I9IyGeyudSvrjVTbSFSR5kIuRHJgkblOCRzX8A+NPEuFzfinG4" +
                        "vDPmpTn7r7qKUbrydrryZ/oL4J8M4rJ+FcFhMSuWrCHvLs5Nys/NXs/NH2bX5efqZ+Kf/BdL9n/AOLPx" +
                        "2/ZV8HS/CPwbe+PtT+G/iu38X+IvDfhmCW81NtNk0u8095re2gVpJvLknTeqAsFJbG1WI/qf6JPGWW5R" +
                        "xDVWMqqlGtScYyk7R5uaMrNvRXSdm9L6btH8p/S84MzLOOHaTwdJ1ZUaqlKMVeXLyyjdJauzaulrbXZM" +
                        "+Ev+Dfz4QfFr4a/GH9oK++Ivwu8ReAbLU/DWmWmnXnjXRNT0qK4lTVC7JG99DEHYDkgEnFfrv0yeJctx" +
                        "2WYKOGxFOq1Uk2oTjK3u9bN2Px/6GHDGZYDNMbLE4epSUqcUnOEopvm6XSufrz/AMFC/wDgm78Lv29fC" +
                        "emz6lqJ8BfGPwbby2fgT4mWUAuAIHfzjY38G5DPas5LKAwaJiWQ4Z0f+bPBbxyzDg/EyUY+1wtR3nTbt" +
                        "rtzRfSVt9LSSs9k1/THjZ4FZfxjhouUvZYqmrQqJX035ZLrG+2t4t3W7T/kW/aF/wCCWP7bf7Omtz2Ou" +
                        "fBfUviJ4eMnkab45+DttdeI9MuVJwHZbGI3Nvk8YuYYznpnIz/pHwX9IPhTO6SlTxUaU7awqtQkvvfLL" +
                        "/t2TP8ANPjb6PHFmR1XGphJVoX0nSTqRf3Lmj/29FH9TH/BGf4SfG34cfsPQ+C/2jPD9/pT63r2s6j4K" +
                        "8C+PYmF1YeFL2ys4UtZ7O7XfCklyl1KIZFB2yZIAbFf59/Sg4kyrHcWOvls4y5YRU5w2dROT5lJaNqPK" +
                        "uZdV5H+hf0WuGs2wPCSoZnCUeapJwhPdU2orlcXqk5c75X0e2p+Yv7dn/BBfxTHr+tfEr9iiS31fQtUl" +
                        "l1K++BfiG8is7qwkkbeU0m8vGSGSDk7YriRGQDAeTOB+9+Ef0v8O6MMLnl4zjZKtFXT/wAcVqn5xTT7L" +
                        "r+AeL/0O8Qq08VkVpQk23Rk0mv8Eno15Saa7vp+FfiT9i79r3wjqk+jeIf2YPH2n39uSpUeEtcmikAO3" +
                        "dFNBbPHImRwyMQfWv63wPilw1iaanTzCg0/+nkE/mm7r0aufyHjvCvibDVHCpl9dNf9OptfJpWa807GB" +
                        "/wyt+0//wBG4ePf/CP8Q/8AyJXZ/wARCyD/AKDqH/g2H/yRx/8AEO+IP+gCv/4Kn/8AIn9Uv/BAv4N/t" +
                        "G/Cb4RfG+b4y+Gda8DeA/FWraPdfC3wf44t7nT7lLq2t7xNVvI7O8SOWOK4ElqocgBzGSOhJ/z3+mJxP" +
                        "keY5lhFgqkKlaEZe0lBqSs3Hki5K6bVpu3S+p/oh9DXhfPMtyzFvHU50qM5xdOM04u6UueSi7NKV4K/X" +
                        "l0P3e8S+HND8Y+HPEHhHxPpketeGvFVld+HPEOj3gJhu7G+ga1nhcAg7ZI3ZTz0NfyHgMdVwteFalLlq" +
                        "QalFrdNO6a9Gf2Dj8DRxVCdGrFSpzi4yT2aas0/VaH8Lf7b3/BJv9pD9l/4kalH4A8A618Zfgzrt3PJ4" +
                        "A8ZeBtPudXvILZmLx2mqW+nxPJBcxJhTIUEUv3kOdyJ/rb4UfSLyPP8DF4itDD4qKXPGclFN9ZQcnZxf" +
                        "a/NHZ9G/wDIjxZ+jhnvD+PksNRniMLJvknCLk0ukZqKupJdbcst090v26+Dv7MH7VXiP/giV48+AfjfQ" +
                        "7+T4veIbG+1H4bfDvxWzw6rZaLaaxa6lZ6ZIt2QYpXW1kMELkbBIkZ2YIX+UuJuPuHqHitRzChOP1aEk" +
                        "qk46xc3FxlNW3S5lzNb2bV93/WXC/h/xFX8J62XV4S+szi3ThLSSgpRlGDvs3yvlT2uk7bL8yv+CNX7H" +
                        "n7Suhft2/D74n+Mvgx4j+H/AIJ+EVv4ivPFeuePtHv9Gi87UfDmoaDBbQHUYofNmMt4rFEyVVSTgYr95" +
                        "+k94mZFW4RrYWjiqdWrXcFFQkpO0Zxm2+VuytHd7tpI/AvoueGOfUeMKGLr4WpSpUFNyc4ygryhKCS5k" +
                        "ru8tlsk2z+ir/goL/wTq+F37engjTrbWr4+B/ix4OjmT4f/ABNsIBO8CS/O9new7k8+0d8Nt3Bkb5kYZ" +
                        "dX/AIn8GfGzMOD8XJwXtMNUtz027X/vRfSSXya0a2a/t/xp8D8v4xwkVUfssTTvyVEr2v8AZkusW9e6e" +
                        "qe6f8hH7Q//AASv/bb/AGctT1CPXvgzqPxA8LWZZrfx/wDCGC48Q6XNCM/vXWzi+0268c/aYY/yIJ/0o" +
                        "4K+kHwpnlOLp4qNKo/sVWoST7avll/27Jn+Z3G30eOLMjqSVTCyq019uknOLXfRc0f+3oo+H/8AhXfxA" +
                        "+1fYf8AhBtY+2+Z9k+x/wBmXvm+bu2bNnl53Z4xjOa/WP7awfLze2hbe/Mv8z8k/sTG83L7Gd9rcrvf7" +
                        "j7S/Z9/4Je/ts/tG6lp0fhf4J6p4M8M3zKZfH3xWt7jw9pEULf8tla+jWe4Tt/o0Upz24OPy3jPx+4Uy" +
                        "SEnVxcalRfYptTlfto7Rf8AicT9V4L+j7xZnlSKpYSVOm/t1E4Rt31V5L/CpH9kn/BP/wDYO+H/AOwb8" +
                        "JbrwX4d1E+LfHni6aHWvib8Q7m3S3k1K6hjMcMMMYLGO0tw7eVGzMcs7E5Ygf5ieMni9jeL8yVepH2dG" +
                        "mmqcL35U9231lLS7stkuh/qJ4MeD2C4Oy10KUvaVqjTqTtbma2SXSMdbK73b6n8yX/BW39jT9p7Uv27/" +
                        "in428KfBLxJ4+8I/FufSta8EeIfAOjahrNtcY0mz06SCRtPilEU6TQspjkwSMMMqwNf3n9HDxPyCnwhh" +
                        "6FbF06VSgpKcZyjFr3pSTXM1dNPdea3R/Av0k/C3iCpxhiK9HCVKtKu4uEoRlJP3YxafKnZpp6PyezP6" +
                        "kf2QfgJeeC/2G/g1+z18bPDVrf3MXg2Lwd8SfBuo+XdWxXUYJDd2M2wsj7VnMT7SVJBwSMGv8/vErjCO" +
                        "K4txWY4Go0vbOVOS0futcsl1W1117n+hHhlwbLC8I4XLcdTTfsVGpB6r3k+aL6Peztp2P5z/wBtT/ggx" +
                        "8XvAet6343/AGRJV+Knw7upHvoPhjqt1FbeJtJR2LGGCW7ZIb6GMfdYyJNjC7JGBc/234WfS+y3GUoUM" +
                        "4/cV1p7RK9OXm0ruDfXRx63itF/D3it9DvM8HWnXyb9/Qbv7NtKpHyTdlNLo7qXS0nq/wAPvGfwE+OXw" +
                        "61N9F8ffBzxT4L1aMlDp/ijQNVsZTjuouYE3DuCMgjkV/WGV8YZTjqfPh8VSqR7xnF/kz+Ss14OzfA1O" +
                        "TEYWrTl2lCS/NGp8P8A9mn9ob4rajDpXw3+B/ivxrezP5OPD2gancRxnIBMsqQ+XGoyMs7ADua58546y" +
                        "XLoOeJxdKmv704r7le7+R0ZLwHneYzUMLhKtR/3YSf3u1l8z+ir/gm9/wAEQ/F/g7x34U+O/wC2FFZ6f" +
                        "J4RuLfxH4O+B9hNb6i8l/Awlhm1ieEyW/lxOA628TPvOPMYKGjf+J/HH6V2GxWEqZfk137ROMqrTjo9G" +
                        "qadndrTmaVuibs1/b/gX9EzE4XGU8wzqy9m1KNFNS95ap1Grxsnrypu/VpXT/qAr+BD/QIKACgAoAKAP" +
                        "mP9rD9k/wCFv7X/AMLb/wCG3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxGf" +
                        "tQfsv8AxS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6YyufU3/AATl/" +
                        "wCChfif9jDxxJoXiU3Xib4C+MplPjDwpC5eTTLltqDU7BG4EqqAJYxgSoMH5lQq4ysTOFz+0DwR438Jf" +
                        "Enwl4f8eeA/EFt4p8H+KbaPV9A1/SJBJb3NvIOGU8EEEFWVgGVgVYAgitjmaPyM/wCCpX/BO3wz+3f8M" +
                        "bH4z/BG60+8+O/gnT5W8KaxpM8Etn4u0mAyS/2W9zE/leYHLG1mJ2q5KOQrFk/pr6OnjrPhfGfVcU28D" +
                        "Vev/TuT050u38yW6V1qrP8AmH6R/gNDinB/WsKksdRjp/08iteRvo/5G9E3Z2Tuv4yNP+EPxT1T4kw/B" +
                        "yx+HeszfFae+Hhpfh02nXSayt/naYHtJEWRHHVgyjA5OBzX+pNbiXL6eBeNlXh9XUebn5ly2782z+R/l" +
                        "XR4ZzGpj1go0J/WXLl5OV8/N25d0/XY/tV/4Jef8EvPC37Fnha3+JHxIt7XxT+0v4ptfL1jWI9k9r4Yt" +
                        "Z0+fTtOfkGQg4uLgff+4n7vJf8Ayx8fvH7EcU4h4bDNwwEHotnUa+1Ly/lj03eu3+rH0ffo+4fhTDrFY" +
                        "pKePmtXuqaf2Ief80uuy03/AF+r+aj+mgoAKACgDwn9pn476T+zJ8DvH3x21/wxqPjHQvh3BbaprOgeE" +
                        "/s51CS2nvoLJ5IhdyRRkQibzX3OPkVsZOAfruA+EKmfZtRwFOpGnOq2lKV+W6TdnZN62stN2j4/j7jCl" +
                        "kGUVswqU5VIUkm4xtzWbSurtLS93rsmaPhH45+B/F3wA0D9pCCeTTvh3rnhOD4xSS3oTz7TSpNKGryCV" +
                        "UYqJIo8hwDgMCM1hmXCWLw2czyxq9eNV0tNnLm5Vbyb28joyzi7CYnJoZmm1QlSVXXdR5eZ380t/M8W/" +
                        "Yg/bd+G37dnw08S/Er4b6BqnhW18Ka3L4I1bQPGQsxerLHZW18kwFjPOnlSLc7VJYHcrDHHP1Xiv4U47" +
                        "hHH08LiZxm5w5043ta7VtUndW18mj5Twl8WcBxhgKmKwsJQUJuDjO172Tvo2rO+nmmbPwY/a+8E/HT4/" +
                        "wD7RXwE8F+GdUN1+zTcWGieN/HN59jGkz6jfeYotbbypnlLo9vOr70XBjPqK5eKPDXF5Rk2CzCvUjbGJ" +
                        "uEFfmUVbV6Ws04tWb3OrhbxNwmb51jsuoU5XwbSnN25XJ30Wt7pqSd0tmfWtfnB+khQAUAFABQAUAfCP" +
                        "/BRH9sfUv2G/gFZ/GjSvAcHxFurrxBp3gk+H9Qv5NNjVL62u7gy+bHBcHK/ZsbdvOevFfrvgp4Y0+Lc4" +
                        "eBnWdJKnKfMo82zirWuu/c/H/G7xQqcI5MsdCiqzdSMOVy5d1J3vZ9ux93V+RH7AFABQB89ftVftF+F/" +
                        "wBk34C+PP2gfGeh3/iTw14A/sv+0tF8MC3N9N/aus2miR+V9rkij+WS8Vmyw+UHHOBX2nh7wTiOI84o5" +
                        "dQnGFSrzWcr2XLGU3eyb2jbbc+K8ROOMPw3k1bMa8JTp0uW6ja75pxgrXaW8k99j5W+If8AwUY1bwbce" +
                        "Dn8LfsSfGj4xaD418N6D8SdM8XfCbwjLrGlLDr2npqCWrXNu5QzwrIFlVSQD3NfoWS+CVPFKr7XNcHh5" +
                        "06k6bjUqcsrwk43s9bO2h+dZ3441MK6XsspxmIhUpwqKVKlzRtOKla60ur2fmeDfD//AILM6Z8WdCfxT" +
                        "8K/2Evjl8S/DMdxJpUniP4f+E49ZsFuoVV5ITcadPNGJFDqWXdkAjI5FfX5z9F+pl1b2WLzfBUalr8s6" +
                        "nK7PZ2kk7abnx+S/Slp5lR9rhMnxtane3NClzq63V4tq+q0P2b0+6a+sLG+a1ksmvIYrprK8XZNCZED7" +
                        "JF7MucEetfy9Wp8k3G97O11s/Q/qWjU54KVmrq9nuvU+Mv+Cf8A+1rqP7a37O2m/HLVPBEPw+u7/VtU8" +
                        "Nnw7YXz6jGq6dKsYk86SGAkvu6beK/UfGTw4hwrncsBCq6qUYy5muX4ulrv8z8t8GPEmfFeSRx86KpNz" +
                        "lHlT5vh63st/Q+2a/Kj9XCgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAPmP9rD9k/4W/tf/AAtv/ht8S" +
                        "bDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tc" +
                        "w7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrl34bftgftDfCP4QfED4F+APiNd6D8OfiRj+" +
                        "3NJgOZbff8ALcfYpj89t9pT5J/LI3rwaLg4o+1P+CZn/BQv4t/s1eKNM+CVt4K1D41/Dbx9qUUOk/DvQ" +
                        "GL61p+pXbiNpNJEmUbzfvSW7lUZhuDRkuzOMrEzhc/sds4YLg2+szaT/Z+q3NtHDMLtbc3cMZ/e+RJJA" +
                        "0inYxOQrsuckE9a6fay5eW7tvbpfucXso83NZc1rX627GjUGgUAFABQAUAeZ/Gn4baf8Y/g/wDFL4S6q" +
                        "UXT/iX4e1jwLczTAkRDVdPlshJwCQUMgYEcggEc173C2eTyzM8PjIfFRqRn/wCAyTt87WPA4qyKGaZZi" +
                        "MHP4a1OUP8AwKLV/le5/NZ4F/aM8Sab/wAEM/FfwmDSR/F6y8U3v7EVnolwQt295retC9ezZSeSNMu5o" +
                        "Vx/cx2Jr+6c34IoVPFqnjP+YZ0li2+loQtzf+DIqXz9D+EMo44r0/CKpg9frSqvCJdbzndx/wDBcnH5e" +
                        "TPpP9i6w8Pf8E+f20f2zf2dtUuhZ/Dey+F3hT9oXQJmHlpPB4P0CGy1aeMvjLyyzzs5PLeXuPQ18L4pV" +
                        "q3GfC2V5lBXrvE1KMvJ1ZtwT8klFLtex934V0aHBXFWa5ZN2oLDU68fNUoJTa823Jvva54b+z5+0J4t/" +
                        "Y0/4JseMv2uV02yvv2h/wBvD4narqfgk+J38u1hvNVu7q3iubvzWTNvb/Yru6VmIVjKgYhWr6zjPgvDc" +
                        "UcdUsn5msFlmGip8u7UUm1H+9LmhHTVcrsro+R4K41xPC3AdXOeWLx2Z4mThzbJybScv7seWctdHzK7s" +
                        "zt/jT8bP2iv2Q/hvov7TGif8FOPDP7V3irw5e6TJ8ZP2ep5PCJ0vVbLUr2G0nj0aLSZmuIjA8yjdGits" +
                        "DSnaFMZ8rhbhXJOJcdPK6mQVMDTmpeyr/veaLim06jkuV3SejbV7R1bUj1uKuLM84ZwMM0p8QU8dUg4+" +
                        "1ofuuWSk0mqai+ZWbWqSdry0ScX/RH4O8U6X458IeFfGuhuZNF8YabY+KdHkkxua11C1S7iJ2kjJSQdD" +
                        "X8U5nl9TCYmpQqfHTk4v1i7P8Uf27leY08Xhqden8FSKkvSSuvwZ+Dnw38Zft+ftdftR/tv/AfwL+06/" +
                        "wAD/hF8D/Gl/Yn4gWvh/TdW1qCC5nubXTdG09ZBaqsKi0lmnmMhlGEXcA3P9e55lfB3DfD+U5hiMB9Zx" +
                        "OJop8nPKMG0k51Jb6+8lFW5d3bQ/jzIs04z4m4hzfL8PmH1bDYas1zqEZTSbahTjtp7rcnfm2V9Tl/2d" +
                        "viB/wAFJP2iviN8cf2G9Z/ab074dX/7Luq3Vt8QP2m9E0Czv/FOv2FzOYNJtILV3ggiDiGSaW4BEwXYj" +
                        "EsGL+hxtk3A2SYHCZ9DASqrGxXJh3NxpwaV5yb1btdJR1je7WlrefwRnXHeeY7F5BPMI0XgpPnxCgpVJ" +
                        "pu0IqOiV7NuWkrWT1vf65/4Jx/tAftAXvxl/aq/Yx/aZ8bw/FXx7+zRe6dc+FfirDaR2d1rOi6krlftU" +
                        "duNgdEMDrktJ+8ZWZtm4/m3jfwbk0Mry7O8rpOhRxilzU73UZx/lb11fMui91NJXsfpXgZxpnU80zHI8" +
                        "1rKvWwbjy1LWc4S/mS0ulyvq/eabdrnyx+1d4n+P/7O/h/x7471b/gsTok37QngW2u/F2k/s+T6P4N02" +
                        "xv4bONrgaV/Zcc803nTRrshkliJkfjAJ3L+heHeAybO61HDw4Zn9SqtRdbmqyab05+eyVk9Wk9F6Wf55" +
                        "4jZhnWSUa2InxRD67STkqHLSipJa8nJdu7WibWr063XD/8ABT347XX7TX/BHf4BfHTUdMh0bV/iF4k8N" +
                        "alr2mad5n2aLUbez1ixuxCJiWERngcoGJIXAJbqfW8A+EY5D4m4zARk5RpU6iTe7i3Tcb262av59EeR9" +
                        "IDjCWf+GGCzCUVGVWpTbS2Ukqila+trp28ur3PsXS/2hvjt+3l+1JP4P/ZT+IV18Lv2Ov2fr6TSvjJ8e" +
                        "PDltp1xdeM9eQK7aTpEmoxXKeSqFf3yJwrGQkhoA/5jiOC8o4Q4fVbNqKrZnio3pUZOSVKH881Fp3v9l" +
                        "vdculptfqGH42zjjHiF0MoruhleFlarWiot1Z/yU3JNWt9pLZ82t4J8V8dP2p/iN8df2yviT+y34D/as" +
                        "0T9jT4Mfs/WNifif8UdQm0KPxD4i1/UoROun6a2vSoscUAJEjxgMrI24sHQV6vCPh7gco4YoZriMunmG" +
                        "KxUn7OmlPkhCLtzT5Fq30T0aatazPJ4v8RMdnHFNfKcPmMMvwuFivaVG4c85yV+WHO9EurWqad73R137" +
                        "Dn7T/xOsP2tfif+xP8AEz4/aV+1h4e0zw1F8Xvg38ffDf8AZJu5LBbmCzudM1I6LJLC80bT5DM2/wCQl" +
                        "iVkRU83xZ4BwE+HMPnmFwcsDN1PZVaMua17NqcOdJpO2y01VtU2/T8I/EDMIcSYjIsVjYY6EaftaVaPL" +
                        "fluk4T5G02r7vXRtu0kl6j/AMFov+UaX7Sf/cnf+p9odfP/AEXP+S7wP/cX/wBM1D6H6VH/ACQWP/7hf" +
                        "+nqZ9mfsrf8mwfs4f8AYheD/wD1HrSvzDxC/wCR/jv+v9X/ANLkfqXh3/yT+A/68Uv/AEiJ+XP/AAb/A" +
                        "H/Jimrf9j74g/8ATdpdfv8A9Mn/AJK6P/XiH/pUz+e/oYf8khL/AK/z/wDSYH7gV/KB/Wp/K5/wSx+Cn" +
                        "7bfx0/Y1ay+EX7UkX7Lfwv8La3rcHg+Pw34ft9X1bxHrcjx3M899dXE0bW1pEWSFEhyWO8spAXP+hH0g" +
                        "+KuFMo4n5sZl7xuInCHNzTcYwhqkopJ80nq23tok97f53/R44U4szfhflweYLBYeE58vLBSlUno25Ntc" +
                        "sVoklvq2tr/AKhf8E4f2mfj7+1B+zt8c/A/xO8QWWlftNfAvW9d+Cl/8QrawgltJNShtGSy1Ka1iSKCR" +
                        "orjeJI0VVcRg7RvNfgPjhwHk+QZ3hK+Fg5YDEwhVULu/K370E3dq8bWbbavvof0F4GcfZzxBkeMw+KnG" +
                        "OYYac6TnZW5kvdm0rJ2le6SSdtlc+Af2pvjt8c/2O9Euvit4a/4K0aD+0T8Y/A+o2H/AAn/AOzXq2neE" +
                        "obXVra51CG0uLa30/SJ55LR4fM3yIAkgiDOroVG79k8PuEcp4mqrCVeHJ4TC1Iy5K6lUbi1FtNykkpJ2" +
                        "snquayad9PxjxD4vzfhik8XS4khi8VSlHnoONJKSckmlGLbi1e7Wj5btNW1+nf+CjH7Yn7RHgew/wCCe" +
                        "Pin9lnUxpmsftK6miweBtWjtprPWpdZtNHfTLK8eaISCMS34DmNo2IJ5HBHwPgj4ZZJi551SzaPNHBx+" +
                        "NXTgoupzyjZ2vaOl7ryZ9/44+J+d4SGSVcplyyxkvgdmpuSp8kZXV7Xlraz80cV+03oH/BTD9ij4bj9r" +
                        "1v2y4/2hIfBNxp+qfGz4I614W07S9AfTry6itZU05rUtIIoZJlUuqwybMyZGCh9XgPGcCcVY7+xv7L+q" +
                        "uopKlVVSUp8yTa576XaV7NyV/d7M8rj7Bce8KYD+2f7VWLVNxdWi6cYw5W0nyW1sm7XSi7e90sdP+2/+" +
                        "2R+0Ra+MP8Agmfr/wCx/r628X7Yljrctn4I8WQ2z6TdSappuhPpU+oMIHnRbFtYaaYRuMiPBHWvP8KPD" +
                        "HJJYbPqecwu8BKF5xb5lyyqc6jrZ8/JZXT3ueh4teKOdxxWQVMlnZZhGdoSS5XzRp8jlpdcntHKVmtrH" +
                        "F/tOv8A8FGv+CeXhfRf2r9Q/a5b9qr4eaPqWl2Hx4+Fnizwzpui2cdpqN0lmJdPazMxgjM0qxK0ZjZHZ" +
                        "CyyKWQerwEuCONcRPKI5b9SryjJ0akakpu8Ve0r2u7Jtp3TSaTi7M8rj98c8E4eGcSzP69QjKKrU5U4w" +
                        "VpO142vZXaStZptNqSuj2X9rr9tvxd4p+NXwB/Zd/Z/+Nmh/s5WHxd8KQfHv4iftH/EAaU39keF79JPs" +
                        "Vrp8WrSpbteXHlkkMcjchVgN7D5fw28KcNh8qxma5jhJ4uVCq6MKEOb3qitzOTiubljf8HdPRH1PiX4s" +
                        "YnEZrgspy7FwwkcRSVadefL7tN35VFSfLzSt+Ks1qzz/wCE37SnxN/Z2/bV+CP7PWu/tiab+218Cv2lb" +
                        "bU9L0PxIJdAuvEPhPxHp0PnKk8ugyyl4LgtGq+aQCHYqB5TF/Z4j4FwGd8K4vMaeWSy7F4Nxbj76hUhJ" +
                        "20U0rOOr07K7fMreLw3x5j8k4rwmW1M0jmWDxiklL3HOnOKvq4N3UtFr3dkuV34/wCGXxE/b8/a1/az/" +
                        "bh/Z28B/tKx/Br4Q/BXxlcRX3xCg0LTdU8Q6dY3F1e2enaNpiSCBFjl+xyySTs3mL5YAb5irenn2ScHc" +
                        "OcOZTmWIwH1jE4iirQ55RhJpRc6k93dcySivdd9tLrzMgzzjPiTiTN8tw+P+r4bDVnefJGU4puShTgtF" +
                        "Z8rbk/eVlrrZ/Rn7AHxx/aX0P8Aab/aW/YW/ai8dr8Y/E3wSsdM8deAvi8tlb6fPqGiX627BbmOAfMzL" +
                        "fQMpZmZGEiM7gKR8R4ycJ5FVyHAZ9lVH6vTxMpQnSu5KM1fZv8AwyXRNcrSWp9x4McXZ9Rz/H5Bm1b6x" +
                        "Uw0YzhVsouUHbdLf4ovq0+ZNvQ/YOv5oP6cCgAoAKACgAoAKAPmP9rD9k/4W/tf/C2/+G3xJsPJuYfMv" +
                        "vBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxWfHT9jT47/Ab472/wCz7r/g+51/xlr9ylp8P" +
                        "JvDUEtxb+Jbe4l8qCewIGWDHh1PzRtkPgg1i0dKkmj+pb/gm3/wTb8NfsgeGoPiD8QYLbxL+0R4ltvL1" +
                        "XVY9s9t4ctp1+awsG5Bcg4nnH3/ALq/JkvpGNjCc7n6s1ZmFABQAUAFABQAUAfzD6V+yd8XU/4K66t8M" +
                        "X8DaqP2Xl+Jkf7bh8WDTr1dDGsQ+H5dVjRLgp9nLf2hdC3MecgKcDFf3viPEXLX4bRxXto/2h9W+qcvM" +
                        "uflc1F6X5vgXNfzP4Bw/hxma8S5YX2Mv7P+s/W+blfJzKDktfh+OXLbfQ9N/wCC23wb+Ndz8Sfgf8YPg" +
                        "B4I1fxp4i8eeFfF/wCzH8RLbwlp15fuujavFi2Wf7HG+yNjqV0dz4UMB1yceD9FTifKo4HF4PMasKcKV" +
                        "WliIc0kvei9bXau/chotbHvfSx4WzWWPwmNy6jOpOrSq4efLFy92S0vZOy9+er0ukfRf/BQT9hLxh4r/" +
                        "YI+BXwl+B3hu18deL/2T7rwt4j0XwNdpG8XiW10LSpNJvbfyptiSvOJfPZWIMm1lGWcA/E+DPi7hsPxh" +
                        "i8Zj6jpUscqkXNb03OSlF3WyVuVNbXT2R9x40+D+KxPBuDweApqrVwLpyUHtUUIuMlZ2u3fmae9mt2fM" +
                        "vg/4z/8ExPEFrouhav/AMEt/Eml/F66Ntp+v/CXSvhCl/f2V9L+7kVXCw+ZCkiuA5VXKqT5YOVH3mZ8L" +
                        "cfUZTqQ4gpywyu1UeJsmunezatpdq7+LqfBZXxV4f14wpz4eqRxTspUlheaSfXtdJ31sm0vhT0P6KNG0" +
                        "fSvD2kaVoGhadDo+h6HbQaPo2k6bGsNva2ltEsEMMUaAKqIihVUDAAxX8T4rE1K9WVSpJynJttvVtvVt" +
                        "vu2f29hcLToUo06cVGEUkktEktEkuyWx+UH/BOvwV4y8L/tSf8ABULWPEvhLU/Duk+LviVbar4U1TXbC" +
                        "6tLfVLUS6sTNaSXCIs8Y3r80ZI5HPNf0V42ZrhcRw/w/ClUjOVPDtSSabi7Q0kk9H5M/nHwPyrFYfiHi" +
                        "CdWlKEamITi3FpSV56xbWq80cz+wt4F8b+Hv+CjX/BTjxR4g8HarofhnxbqXh2Xwr4i1jT7u2sdTSJr3" +
                        "e1pcTxrHMF3DJRjjNd3i3m+Er8EZBSp1YyqU4z5oqSbj8PxJO6+ZweEOT4uhxxn9WpSlGnUlDlk4tKXx" +
                        "fC2rP5Hmfw1+HXx0tf2+v8AgrX4j8B+F9V8O+IPGnga3074J+NtTsbi00278Qjw9BFZNbXlykcEhjuQu" +
                        "7a+Bg5xivez3O8olwdw5SxFSM4U6zdWCaclDnfNeKu1eN+h4OQ5Hm8eMuJKuHpyhOpQSpTaai58i5bSd" +
                        "k7St10Pz/8AgVrHwk8MfsTfE/8AZut/2GPGPjb/AIKDeMNH8aeD/HGs674FN1qlrqOtR6hbR6rNrWqJ5" +
                        "lrBbW0oKou1jKhABLmU/snF2GzLEcVYfM3m9KnktOdKUEq1ouMeVuCpx0k5SW7uuV+XKfi/CGKy3D8J4" +
                        "jK1lFapnVSFWM26N5KU+ZKbqS1ioxeys+Zba8z9K/aB+EXxY1X/AIIWfsufD3S/hh4i1Lx9o/iW1udW8" +
                        "D2Gi6lNrFrGmo+IizTWccJmRQJFyWQfeHqK8Pg3iXLqfi3mGJniKaoypu03OKi/dpbSvZ7Pr0Pe404Zz" +
                        "Kp4Q5fhoYeo60aivBQk5L3qu8bXW66dT6m8ZfBXxl/wSz/al8JfGr9mP4c634x/Y4+Of2LwD8e/gp8P7" +
                        "PUdbvPDl/ZwFLfV7S3hE87gKGlBIbJ82JmXzYiv57lnFWF8QeH6mBzSvCnmeGvOjVm4wU03rCTdktbLp" +
                        "9mST5ZX/Q804UxXh5xDSx2VUJ1MrxNoVqUFKbhJLScUrt6XfX7UW1zRt5F8bPhL4C/Zs/bl+Nvx2/aP/" +
                        "ZKuv2pf2Uv2oYNK8YeGviPovheLxNeeDtZitws0M9tKqtBFKZHLZ2l0ERXe6Oo+l4V4jxme8JYTAZZmS" +
                        "wWY4JyjKDqezVWN9Gmt2rK29nzXsmmfM8V8N4PIeLsXmGZ5a8bl2NUZRqKn7R0pJapp7J3d9rrltdpo/" +
                        "Qf9hfXv2J/H3xB8V6/+y/8Ashal8Gr/AMO6TFHJ8WdY8ADwrY6jb6hMjSWVpdt80jjy0eRCFyMEbgMj8" +
                        "Y8W8HxVg8FTp5rmUcQpy/hqt7RxcVpKUem7SevZ2P2vwixnCmNxtSplWWSw7hH+I6Ps1JSesYy6vRNrT" +
                        "urnRf8ABXvwr4o8bf8ABO79oXwx4M8N3/i7xLqf/CJ/2b4e8MWdxf31x5PjnRriTyoLRJJH2Rxs7YU4U" +
                        "EngGuL6NeY4fCca4KrXqRp017S8pNRSvRqJXbsldu3qdv0mMuxGL4IxtKhTlUqS9naMU5N2rU27JXbsk" +
                        "36H1z+zNp9/pP7N/wCz7pWq2U2manpngjwpp+pabqEbwz288Og2sckckcgDI6MCGUgEEYNfm3HlaFTPM" +
                        "bODTi61RprVNObs0+qZ+lcA0Z08iwUJpxlGjTTT0aahG6a6NH5r/wDBC7wL43+Hn7FWqaD4/wDB2q+B9" +
                        "dfxvruoJovjDT7vTLswSafpqpIIb2ON9jFCA2MHB9K/dPpbZvhMbxVGph6sakPYwV4yUlfmnpdNq5+Ef" +
                        "RDyfF4LhSVPEUpUp+2m7Si4u3LDWzSdj9lq/mA/qQ/I7/giV4K8ZeAf2FtB8PeO/CWp+Ctfj8S+IruTQ" +
                        "/FthdabeLFLcRlHMN5HG4VgODjBr+kPpV5rhcZxdOph6kakPZwV4tSWz6ptH81fRPyrFYLhCFPEUpU5+" +
                        "0m7Si4u110aTPg74QfCP9piD9lz/gsVoXw18Fa/4a+Jnjzx/rOofD+G407ULG81nSZNWle/GmeYkbztc" +
                        "WBmjhMWdzMoGSRX6/xLxJkL4g4YqYqrCdClQip+9FqMuVcvPvblnyt32Sdz8e4Z4az9cP8AFFPC0qkMR" +
                        "VrzcPdknOPM+bk2vzQ5krbtqx82+ONX+CHjj/gnFP8As3fsufsL+Lbj9omHRPD0fxo8at4DaO/0a+0bU" +
                        "9P1bV57nWJomubmS6mtdkMEZyY5AAqBBHX3OU4bNsJxwszzXN6SwXPP2UPbaSUoyjBKCfLFRTu5Pqt3f" +
                        "mPhM2xOU4vgZ5ZlOUVXjlCHtZ+x96DhKMpt1GuaTk1aMV0eyS5T6L/4KJX/AI38EeAf+CJup+FfBs/iP" +
                        "4keENR8LX/hz4fXgazub/W9PsvC8lvpzi4CmJ5Z41iO8DaTz0r4nwUo4TF4ziqNWqoUKkailNapQk615" +
                        "K26Sd9Nz7jxurYvCYPhOdGk516cqbjB6NziqNoO+zclbXY9b/a9/bl8Rfts/BXXf2Qf2Xv2b/iK3xp+M" +
                        "TWPhTxza/ErwzNoll4QsBexT3h1G4mkeONv3flF2wihi27cFU/N+GvhLQ4VzWGc5rjsP9Vw95Q9nUU3V" +
                        "dmo8qSu9723drWtdr6XxM8Xa/FmVTyXKcBiPreItGftKbgqSunLnbdlta+yu3e9k+H/AOCgvhvxd+yr4" +
                        "9/4IveEvhZ4Vn+LPiv4CR+INB0vwppAWK78R/2BpvhWC8jgDA4nuooZSgCk72GFJwD63gzjsNxDg+Ka2" +
                        "LqKhTxTg3J7Q55VnFvyi2r+S1a3PJ8acBieHcZwrRwlN16mF50orepyRoqSXnJJ283onsb/AO2f+114h" +
                        "/4KLfCeH9i79lX4A+O28X/FfVNDg+K/iD4peG7jQ9N8H6dpup2+sN9undpVSRZ7aMuc7dgYIXdlU8fhd" +
                        "4bUeCcxed5tjKHsqEZ+zjTmpyqylFx91aXVm7db2bsk2dnin4l1+OMtWR5Rgq/ta8oe0lUpuEaUYyUve" +
                        "etndK/S10rtpEf7av7J1n+z7+0h+z5+0rq/7N0v7XH7MvhbwFpn7Pnxj8C6fo8euavph0K2ktrPWY7OQ" +
                        "kH90sQ3t8q7HR3TzEYPws8RZZ1keNyyGOWBx868q1KblyRlztOVNy9b6bu6aT5WifFXw4jkue4LNJ4B4" +
                        "/AQoRoVYKPPKPImo1FH0trsrNNrmTPoz9k3xj/wTp+Kfxt8G2X7O/7D2p+E/F2lx3fiez+Ld58M00PS9" +
                        "AmsYpBtl1F+Yp3YGOPapBbK7s4B+I8Rss42y/KqssyzaM6UrRdNV+eU07bR6pbvrbWx9z4b5pwPmObUo" +
                        "5blEqdWN5Kq8PyRg1fefRt6LpfS5Z/4JweBfG/hb9tX/gq/r3ifwdqvhzQvGXjfQNQ8Ia1r2n3dnaarB" +
                        "HqHidnks5riNEnRRMhLRkgbl9RUeOGb4TEcK8O06VWM506M1JKSbi+WjpJJ3T0e/Zl+BeT4vD8V8R1Kt" +
                        "KUIVK0HFuLSkuatrFtWa1W190dL8HvBXjKx/wCCxv7W3jm98JanZ+Cta+GvhrStG8YXVhdR6Xd3US6Lv" +
                        "hhu3QQySL5bblViRg5HBrh4mzXCz8MctoRqRdWOIqNxuuZJ+01cb3S1Wtjv4YyrFQ8UMyxEqUlSlh6aU" +
                        "nF8ra9ndKVrN6PRM+k/2Gv2wNf/AGxvBHj7xhr/AMBdb+As3grxDceB7bR/GU0lw1+kEEcpmV5bOyKyI" +
                        "X2SxBWCNgb2zx8L4s+GlHhjF0aNPGQxSqU1O8Va121b4paPdO6uuiPvPCPxNrcUYStWqYOeFdOo4Wk73" +
                        "sk7/DHVbNWdn1Z9vV+UH6yFABQAUAFABQAUAZF54f0HUdV0bXdQ0S0vtc8O/aP+Ef1m8toZbuw+2RiGf" +
                        "7PM6l4vNQBX2EbhwcigDXoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAK" +
                        "ACgAoA/PX9tL9kDxv8AtL/F79iX4ieFPE2laDpn7MXj20+K/i2x8Qm7E+oWdvqmlXzQ2n2aGVfNK2Dge" +
                        "YVGSOeuP2jwt8S8JkOWZrhq1OUpYyg6cXG1otxmryu1p7y2uz8U8VfDLF59meU4mjUjGOCrqpJSveSUo" +
                        "O0bJ6+697LY/Qqvxc/az4N/ag/ZR8ZfHP8AaY/Yg+N3h7xHpmkaB+y9rHiXxH4u0nWTdC81CLWotLjiW" +
                        "z8iKRNyGxbd5jKORjPNfr/APiJhcpyHNsDUhKU8bCnGLVrR5HO/Ndp68ytZM/HfEDw5xWb5/lGPp1Ixh" +
                        "gp1JSTveSmoW5bJrTld7tH3lX5AfsQUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQB//2QtAAAEAA" +
                        "AD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJlP" +
                        "W5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZ" +
                        "y5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAWsEAAAL/2P/gABBKRklGAAEBAQCWAJYAAP/uA" +
                        "A5BZG9iZQBkAAAAAAH/4RGWRXhpZgAATU0AKgAAAAgABwESAAMAAAABAAEAAAEaAAUAAAABAAAAYgEbA" +
                        "AUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAAcAAAAcgEyAAIAAAAUAAAAjodpAAQAAAABAAAAogAAA" +
                        "MIAlgAAAAEAAACWAAAAAQAAQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzADIwMTE6MDE6MTggMDk6N" +
                        "TE6MDYAAAKgAgAEAAAAAQAAAWKgAwAEAAAAAQAAAIEAAAAAAAAABgEDAAMAAAABAAYAAAEaAAUAAAABA" +
                        "AABEAEbAAUAAAABAAABGAEoAAMAAAABAAIAAAIBAAQAAAABAAABIAICAAQAAAABAAAQbgAAAAAAAABIA" +
                        "AAAAQAAAEgAAAAB/9j/7QAMQWRvYmVfQ00AAf/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRC" +
                        "woLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NE" +
                        "A4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AA" +
                        "BEIADoAoAMBIgACEQEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFA" +
                        "QEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyB" +
                        "hSRobFCIyQVUsFiMzRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFt" +
                        "JXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExE" +
                        "gRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzh" +
                        "MPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUk" +
                        "kklKWBhZH1nd9ZMirKqDekt3+m7a0N2iPQdVYD6r7bP8Mx//gf6NXfrD1Y9I6Tdmsa19rdraWOmC95DG" +
                        "7tv5rZ9RyH9WOq5fVukMzMuttdjnvaCyQ1wa7Z6jWuL3M/c+mn+1L2/d/Q4uD/CWe7H3Pb/AEq4v8F1k" +
                        "kkkxepJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJT//0PVVn9a61idHxPXv99j5bRQ0+6x37rf3W" +
                        "N/wln+DTdb63idGxPXv99j5bRQ0+6x3gP3WN/wln+DXG9M6Z1H619Rfn57y3FadtljZAgH+h4f7rG/4W" +
                        "3/0f/NpSvrH1PKzfqv067KcHXZeTbc4NENaKzdVXUz+QxjmfSRerDqXS+ifV/qHTwWVYlO620agPvFT4" +
                        "yK/9Da71G/1/wDR2ekrX+MHBqo6V08Y7BVRj2mllbRAAcxxb/56XQ9AdTl/V3BBAsqfi11vY4AtMMFVr" +
                        "HNP0vouYtCOQY+WwT4eICc+OJ2PFxR/6DRljOTmc0b4SYQ4ZDcV6v8ApsPq99YcXreLvZ+jya4GRjk6t" +
                        "P7zf36n/mPWsvO+u9Czvqxmt6t0hzhiB2h1cai4/wAxf/pcWz6LHu/4uz9L6VtnXfV76w43W8Xewenk1" +
                        "QMigmS0n85v79T/AMx6h5jl4iPvYTxYZf42OX7smXBnkZHFlHDlj/i5I/vxS9d65idDwftuW176y8Vht" +
                        "e2ZILv8I6tn0WO/OV6q1l1TLqzLLGh7T5OG5qwfrx1HL6b0ivIw3NZf67Wtscxry2WWkurFoexr/bs+j" +
                        "9BZPU+s/WV/V8Lp3TcoVvysWqwNcyvaXltllri99T9vtrTcfKzyREhKMQeL5j/m/mtdk5mEJGJEpSHDp" +
                        "Efv/K9usrrv1gxeh10WZVdljL3lk1hp2wNxc4Pcz/orm8jrH106E4W9XY3Lw7Pa57AwbSf9HbSxnp2/u" +
                        "evT6T1l/Wh/V7sXHysrMbndLvcX4Nm1jLILd36ZlNde2xjf0Vn8v/RqbDyV5I8coSxy6wl8/wDVj/WYs" +
                        "3OVjkYxkJx6Sj8v9aX9V9NSXK1dT+sPQsPKzfrHbXks9jMSmvaHutO727666msr2/T3+p9D/tyjj2/4w" +
                        "uqY/wC0Me2vHqeN9NEMZub29Jt1dz9rvzPtNrP8xRDlJGz7mMQB4fcMvRKXaLIeZAocEzMji4APXGPeT" +
                        "3C5X6ofWHP6hjdSy+pWB7MYh7WsYGhjNr7Htbt97/o/no/1X+suT1G63pnU6vQ6jjCSAC0Pa0hr5YZ2W" +
                        "s3N3fmP/nKli/UWw19I61YGteWM3BrxLTFdh2vb+cxPjgMcWeMwOMe1wy3+eW8Zf1lks4lkwGJPARk4h" +
                        "/cj+lH+q9Z0LreJ1zB+24jXsYHmtzbNu4ObB/wbrGfRc389aK4jp/1t6hjfVR/UckjKy3ZRxqJa1jB+j" +
                        "bY31GUCr2Ma2z+X+Yljs/xhZuK3qFOZUGvG6ukGqSDxtApsp/7cvTfucxfHOEAJcHFI6Sl/VXfe4GuGM" +
                        "5kjjqI1jHxevz82nAwr82+fSx2OseGiTDRu9swh9J6nR1bp9PUMcObVdMNdEgtc6p7TsL2fTZ+8sKvq/" +
                        "Xbfq31O3qmGMfKw2OFdljPZYQP5z0LN7Hem78/+j2f4NVLPrdn4X1Wwcp8ZHUc51zRa9oDQK7HtdY6ur" +
                        "02uds9NjGf9cTRymQmhwn1+3ob14fc4v7vCuPNYwLNj0+5qOnFwf43E9okuKbj/AOMZ1DcxmXVYXAEUN" +
                        "NJJB/6z9m/9mF0P1dz+pZ/TvW6ninEyWvcwtLXM3gRFoqs99f0tn9hNycuYR4hOEwDR4JahOPPxnhMJw" +
                        "sWOMaF//9Hs/rX9WT1VozcQxn0s2Bjj7bKwS/0fd7arNzv0Vn9i7/SU5n1T+s/oFnR+pfogw+lj2uGwt" +
                        "cDs+yZLfbssa72V2f8AW7f0v872q5v61fVVnVGOzMNrW57Ww9hgNvaBHp2T7W3Nb/NW/wDWrf0f8ylN7" +
                        "60dMd1PomTj1t3XtAtoHJ31neGt/wCMbuq/64sT/F51dluLZ0mx36Skm7HB71vM2NH/ABVzv/BlH6qfW" +
                        "h7Ht6R1Vzg4O9LHuskODgdn2TJ3e71d3sqe/wD4qz9J/O5/1h6DcM5/Vfq6XZFT7HsubiOl9N+teQ1vp" +
                        "nfst3O9T/R/8SrnLShkxy5eZ4eI8eOR/Rm1OZjPHkjngOLhHBkiP0of+gtz63fWs3Of0XpM2OsPo5FrB" +
                        "uLi72HFx2j6b3/Qsf8A9br9/wDN6n1Q+q56PU7LyzOfkNDXMBltTJ3eiCPp2bv52z/tr/SWw+qf1SZ0l" +
                        "jc3Na1/UHNhrRBbS0j+br/etd/hbf8ArVX6P+e6ZDPmhGHsYPk/Tn1yy/71OHDKU/fzfP8AoQ6Yo/8Af" +
                        "PKf4yP+Qav/AAy3/wA93LPH/i06N/4Uq/8APWQul+suF07OwasbqIt9GzIqYx9OhbY8+jU5x/0bnWel9" +
                        "H/CKi5n1ePUz1RgtOT0h9fTxUwy0uftoo2sd7rNrsp1O/f+ZZ/o0/DlAwiNSJrLHQaXl4YwWZcROYysb" +
                        "45eP6v1SdL6x1ss6B1FtjQ4DGtcAfFrTYx39l7dy4DPba76ldMfyxmTez4Fxtcwfg9ek3NxM+jJwy9tj" +
                        "HtdTkNY4bm7xtc123+bftcqGL0vomB0p/SLLGXYjQ59rch7CdrnEl9n0NrW2/Qf++mcvnGKIBBMhkE+H" +
                        "+rwygV/MYfckSCADAwv+txcTifXa/H6r0CrN6dc3Jpx7mvu2GdrXtfXutZ9Ova97PY9qz+mdJxOoYjL2" +
                        "/WO2l20Cyix+11ZAj09rr2+1v5jvoLp+m/V/oPSMm70D7+oN2Ci2wPBYNzjXVW/3WM93u3+qstn1Q+q/" +
                        "UrLLahdibbrccUte0NL6XOZYaWWet7PZu/qf4NTY8+OMDCMpxhE8UcnBGWk/wBGUZf9JiyYZynxkRlKQ" +
                        "4ZQ45R+X9KMopuh/VOvF6nX1dnVDnlm9rjAduJb6Xuu9Sz6Cx/qW9jekdcpLgLfSLvTPO0MsYXf5/tXW" +
                        "fV7pHS+lYttfTbDdXZYXWPLw/3ACvb+jDWN2bViiroJ6lX1Srp2ZZZ1Wl5pYzYK7PWr9bJe1nrsfXd6L" +
                        "v0m5zGf6P8AS/pE2OYz92MjKekOGXDGH80fc4ZR9P8AWTLCIDFKIEPn4o3KY/XDg4uL1OZ0O/o1P1Mt/" +
                        "bFbrcazNLGNrBL/AFCytzHVOBbscxrXu3b/AP0mpt+reNTU7P8Aq915tNZAJ9Sz04/O/T3Ulm3/AIu7F" +
                        "XQ43TOhdMxv+b9jC/GyWPyLH5Dmlph9NMPf7Ntu+2n0fTZ/g/8ASqjb9Qfq07K9P17q7Xy5mOLWE7R+5" +
                        "6tdl+z+2njmIcUzxTgJyM/lGTHOH9z9FaeXlwwHDCZjER+b28kJf33PxOvdQ6n9X+t4mc5t78SgluSwA" +
                        "BwdvbDtgbW7+b/RPaz9JWnx7ugN+pvTKetNeWXW3Cl9QJfW4W3b7w5v5tbXe/8AnN/+hsXS0dG6DT0+/" +
                        "pGOGMqvrJvDXzYWuGz13vJdZ29r/oJUdE6I7pY6LtblY2Mfcx7tz2ucTb6jns2vqtd6jnez01GeYxa8M" +
                        "Zwj7gyVD0ER4ODiH7vrXjBk0uUZy9s4/V6hxcfHX+K8s76vfYKjndB6/VXjkz+ktFbf+uWVF1Frv+Mxl" +
                        "u/Uvrub1jCu+2gOtxnhvrNG0PDhu9zR7PUZ+fs/kKkPqJ9V3N+1NyrTRq7cLayyGzv/AEvp7trNvu/Sr" +
                        "penYOBgYraOn1tqx/pN2Gd27/CF5LnWbv33OS5jNjljMbOSd6TlAY5QroZfpJ5fDkjkB0xwrWEZmcZ32" +
                        "H6L/9L1VJJJJTzn1p+qzepsdm4TQ3qDW+5mgbe0D+bfPtbc3/A3f9at/R/zM/qn9XH9IpdkZLj9syWgW" +
                        "VNcfTraPo17Wn07bm/n3/8AW6f0f870CSSlJJJJKafWMSzM6bfRV/PFu+iTA9Wsi7H93/H11rHo6BnDM" +
                        "wbrCzaazdn8GMppvvpNbfz2faepZFv/AKDUrpElYxe77Z4a4bld9+H+X+GwZfa4xxXxUNu3E899W+j5O" +
                        "DZWcqqxluPj/ZjZuoNL/c1+6r7PXVlWbnM9Vr839Kz1rvz7LLE1f1enJw7bcWl2zMzb8lxDSSy52Q7GL" +
                        "tP0n08b2/4P/rS6JJSS97jntdHi4eL93Jt/z/8ADWR9rgjd8NiuKv3oPHv6F1r7BjYYq91NNLa3tdVDH" +
                        "1Xvvc22+xpytldLcf7E3F/P9X1kZ/QOrF2dt2OGeM2qtz3a44ufZdTbRtH81my1mb/h/U9D/B1emzqkl" +
                        "Iff1/m/mldfvLB7Onz/ACx3/dcfoGBZjOvutptx7LW1MLLDj7f0QcB6Tensqr2s3+l6lrfVfWyr/RoOH" +
                        "0rOqZ9XxYwA9OqczK9wO0mj0Pb+/wDpFvJKA+5xT+XbWrqvan8v/U2UcHBC+KrFXXFfuw+b/DcrqPSvt" +
                        "vUWW201347MS+oCwBwFljqdvsd+9Wyz3rJb0frTn4DbqgTinBcbWuqiKQxuX69rmOzbsrd67K/Ts+y/Z" +
                        "3/6T1K7erSTsXu8IrhqvTx33/RRk9viN8V3rw08Z0fDdbg4uRXhsrqxrM2+3Olm6xrhlY/oNa39M5z32" +
                        "Mdd6v6HZjV/zns9JYfRczN6Vj/ZcWvBA6YKDaHNH2g2nHv2fo2vf6Hp0W+o/Jbv9TLf+gtr9X1ezSUx9" +
                        "3iNCPFxaaz/AHsn73p/fYo+3wizLh4ddI/uw/d9X/dvOYvQ3vsx7bsezb9t+0ZFWUaHCG4tuNXdXVhNb" +
                        "jfzz6Wf6X9F6q0OkUZWExuEcZteMHZNjbGvbtYHZD34uO2kfmuxrd//AAXp+ktNJV83uUePh4dKri4f0" +
                        "+HhZ8XBpw8V678N/o8Vv//Z/+0Y0FBob3Rvc2hvcCAzLjAAOEJJTQQlAAAAAAAQAAAAAAAAAAAAAAAAA" +
                        "AAAADhCSU0EOgAAAAAAkwAAABAAAAABAAAAAAALcHJpbnRPdXRwdXQAAAAFAAAAAENsclNlbnVtAAAAA" +
                        "ENsclMAAAAAUkdCQwAAAABJbnRlZW51bQAAAABJbnRlAAAAAENscm0AAAAATXBCbGJvb2wBAAAAD3Bya" +
                        "W50U2l4dGVlbkJpdGJvb2wAAAAAC3ByaW50ZXJOYW1lVEVYVAAAAAEAAAA4QklNBDsAAAAAAbIAAAAQA" +
                        "AAAAQAAAAAAEnByaW50T3V0cHV0T3B0aW9ucwAAABIAAAAAQ3B0bmJvb2wAAAAAAENsYnJib29sAAAAA" +
                        "ABSZ3NNYm9vbAAAAAAAQ3JuQ2Jvb2wAAAAAAENudENib29sAAAAAABMYmxzYm9vbAAAAAAATmd0dmJvb" +
                        "2wAAAAAAEVtbERib29sAAAAAABJbnRyYm9vbAAAAAAAQmNrZ09iamMAAAABAAAAAAAAUkdCQwAAAAMAA" +
                        "AAAUmQgIGRvdWJAb+AAAAAAAAAAAABHcm4gZG91YkBv4AAAAAAAAAAAAEJsICBkb3ViQG/gAAAAAAAAA" +
                        "AAAQnJkVFVudEYjUmx0AAAAAAAAAAAAAAAAQmxkIFVudEYjUmx0AAAAAAAAAAAAAAAAUnNsdFVudEYjU" +
                        "HhsQGLAAAAAAAAAAAAKdmVjdG9yRGF0YWJvb2wBAAAAAFBnUHNlbnVtAAAAAFBnUHMAAAAAUGdQQwAAA" +
                        "ABMZWZ0VW50RiNSbHQAAAAAAAAAAAAAAABUb3AgVW50RiNSbHQAAAAAAAAAAAAAAABTY2wgVW50RiNQc" +
                        "mNAWQAAAAAAADhCSU0D7QAAAAAAEACWAAAAAQACAJYAAAABAAI4QklNBCYAAAAAAA4AAAAAAAAAAAAAP" +
                        "4AAADhCSU0EDQAAAAAABAAAAHg4QklNBBkAAAAAAAQAAAAeOEJJTQPzAAAAAAAJAAAAAAAAAAABADhCS" +
                        "U0nEAAAAAAACgABAAAAAAAAAAI4QklNA/UAAAAAAEgAL2ZmAAEAbGZmAAYAAAAAAAEAL2ZmAAEAoZmaA" +
                        "AYAAAAAAAEAMgAAAAEAWgAAAAYAAAAAAAEANQAAAAEALQAAAAYAAAAAAAE4QklNA/gAAAAAAHAAAP///" +
                        "/////////////////////////8D6AAAAAD/////////////////////////////A+gAAAAA/////////" +
                        "////////////////////wPoAAAAAP////////////////////////////8D6AAAOEJJTQQAAAAAAAACA" +
                        "AE4QklNBAIAAAAAAAQAAAAAOEJJTQQwAAAAAAACAQE4QklNBC0AAAAAAAYAAQAAAAM4QklNBAgAAAAAA" +
                        "BAAAAABAAACQAAAAkAAAAAAOEJJTQQeAAAAAAAEAAAAADhCSU0EGgAAAAADSQAAAAYAAAAAAAAAAAAAA" +
                        "IEAAAFiAAAACgBVAG4AdABpAHQAbABlAGQALQAxAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAA" +
                        "AAAAAFiAAAAgQAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAABAAAAABAAAAAAAAbnVsb" +
                        "AAAAAIAAAAGYm91bmRzT2JqYwAAAAEAAAAAAABSY3QxAAAABAAAAABUb3AgbG9uZwAAAAAAAAAATGVmd" +
                        "GxvbmcAAAAAAAAAAEJ0b21sb25nAAAAgQAAAABSZ2h0bG9uZwAAAWIAAAAGc2xpY2VzVmxMcwAAAAFPY" +
                        "mpjAAAAAQAAAAAABXNsaWNlAAAAEgAAAAdzbGljZUlEbG9uZwAAAAAAAAAHZ3JvdXBJRGxvbmcAAAAAA" +
                        "AAABm9yaWdpbmVudW0AAAAMRVNsaWNlT3JpZ2luAAAADWF1dG9HZW5lcmF0ZWQAAAAAVHlwZWVudW0AA" +
                        "AAKRVNsaWNlVHlwZQAAAABJbWcgAAAABmJvdW5kc09iamMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wI" +
                        "GxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tbG9uZwAAAIEAAAAAUmdodGxvbmcAAAFiAAAAA" +
                        "3VybFRFWFQAAAABAAAAAAAAbnVsbFRFWFQAAAABAAAAAAAATXNnZVRFWFQAAAABAAAAAAAGYWx0VGFn";
                    resourceString += "VEVYVAAAAAEAAAAAAA5jZWxsVGV4dElzSFRNTGJvb2wBAAAACGNlbGxUZXh0VEVYVAAAAAEAAAAAAAlob" +
                        "3J6QWxpZ25lbnVtAAAAD0VTbGljZUhvcnpBbGlnbgAAAAdkZWZhdWx0AAAACXZlcnRBbGlnbmVudW0AA" +
                        "AAPRVNsaWNlVmVydEFsaWduAAAAB2RlZmF1bHQAAAALYmdDb2xvclR5cGVlbnVtAAAAEUVTbGljZUJHQ" +
                        "29sb3JUeXBlAAAAAE5vbmUAAAAJdG9wT3V0c2V0bG9uZwAAAAAAAAAKbGVmdE91dHNldGxvbmcAAAAAA" +
                        "AAADGJvdHRvbU91dHNldGxvbmcAAAAAAAAAC3JpZ2h0T3V0c2V0bG9uZwAAAAAAOEJJTQQoAAAAAAAMA" +
                        "AAAAj/wAAAAAAAAOEJJTQQUAAAAAAAEAAAABDhCSU0EDAAAAAAQigAAAAEAAACgAAAAOgAAAeAAAGzAA" +
                        "AAQbgAYAAH/2P/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBELCgsRF" +
                        "Q8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsNDg0QDg4QF" +
                        "A4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAO" +
                        "gCgAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYHCAkKCwEAAQUBAQEBA" +
                        "QEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGFJGhs" +
                        "UIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXiZfKzhMPTdePzRieUpIW0lcTU5" +
                        "PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIEBAMEBQYHBwYFNQEAAhEDITESBEFRY" +
                        "XEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKygwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14" +
                        "/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dXZ3eHl6e3x//aAAwDAQACEQMRAD8A9VSSSSUpY" +
                        "GFkfWd31kyKsqoN6S3f6btrQ3aI9B1VgPqvts/wzH/+B/o1d+sPVj0jpN2axrX2t2tpY6YL3kMbu2/mt" +
                        "n1HIf1Y6rl9W6QzMy6212Oe9oLJDXBrtnqNa4vcz9z6af7Uvb939Di4P8JZ7sfc9v8ASri/wXWSSSTF6" +
                        "kkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklP//Q9VWf1rrWJ0fE9e/32PltFDT7rHfut/dY3/CWf" +
                        "4NN1vreJ0bE9e/32PltFDT7rHeA/dY3/CWf4Ncb0zpnUfrX1F+fnvLcVp22WNkCAf6Hh/usb/hbf/R/8" +
                        "2lK+sfU8rN+q/Trspwddl5Ntzg0Q1orN1VdTP5DGOZ9JF6sOpdL6J9X+odPBZViU7rbRqA+8VPjIr/0N" +
                        "rvUb/X/ANHZ6Stf4wcGqjpXTxjsFVGPaaWVtEABzHFv/npdD0B1OX9XcEECyp+LXW9jgC0wwVWsc0/S+" +
                        "i5i0I5Bj5bBPh4gJz44nY8XFH/oNGWM5OZzRvhJhDhkNxXq/wCmw+r31hxet4u9n6PJrgZGOTq0/vN/f" +
                        "qf+Y9ay87670LO+rGa3q3SHOGIHaHVxqLj/ADF/+lxbPose7/i7P0vpW2dd9XvrDjdbxd7B6eTVAyKCZ" +
                        "LSfzm/v1P8AzHqHmOXiI+9hPFhl/jY5fuyZcGeRkcWUcOWP+Lkj+/FL13rmJ0PB+25bXvrLxWG17Zkgu" +
                        "/wjq2fRY785XqrWXVMurMssaHtPk4bmrB+vHUcvpvSK8jDc1l/rta2xzGvLZZaS6sWh7Gv9uz6P0Fk9T" +
                        "6z9ZX9XwundNyhW/KxarA1zK9peW2WWuL31P2+2tNx8rPJESEoxB4vmP+b+a12TmYQkYkSlIcOkR+/8r" +
                        "26yuu/WDF6HXRZlV2WMveWTWGnbA3Fzg9zP+iubyOsfXToThb1djcvDs9rnsDBtJ/0dtLGenb+569PpP" +
                        "WX9aH9XuxcfKysxud0u9xfg2bWMsgt3fpmU117bGN/RWfy/9GpsPJXkjxyhLHLrCXz/ANWP9Zizc5WOR" +
                        "jGQnHpKPy/1pf1X01JcrV1P6w9Cw8rN+sdteSz2MxKa9oe607vbvrrqayvb9Pf6n0P+3KOPb/jC6pj/A" +
                        "LQx7a8ep4300Qxm5vb0m3V3P2u/M+02s/zFEOUkbPuYxAHh9wy9Epdosh5kChwTMyOLgA9cY95PcLlfq" +
                        "h9Yc/qGN1LL6lYHsxiHtaxgaGM2vse1u33v+j+ej/Vf6y5PUbremdTq9DqOMJIALQ9rSGvlhnZazc3d+" +
                        "Y/+cqWL9RbDX0jrVga15YzcGvEtMV2Ha9v5zE+OAxxZ4zA4x7XDLf55bxl/WWSziWTAYk8BGTiH9yP6U" +
                        "f6r1nQut4nXMH7biNexgea3Ns27g5sH/BusZ9Fzfz1oriOn/W3qGN9VH9RySMrLdlHGolrWMH6NtjfUZ" +
                        "QKvYxrbP5f5iWOz/GFm4reoU5lQa8bq6QapIPG0Cmyn/ty9N+5zF8c4QAlwcUjpKX9Vd97ga4YzmSOOo" +
                        "jWMfF6/PzacDCvzb59LHY6x4aJMNG72zCH0nqdHVun09Qxw5tV0w10SC1zqntOwvZ9Nn7ywq+r9dt+rf" +
                        "U7eqYYx8rDY4V2WM9lhA/nPQs3sd6bvz/6PZ/g1Us+t2fhfVbBynxkdRznXNFr2gNArse11jq6vTa52z" +
                        "02MZ/1xNHKZCaHCfX7ehvXh9zi/u8K481jAs2PT7mo6cXB/jcT2iS4puP8A4xnUNzGZdVhcARQ00kkH/" +
                        "rP2b/2YXQ/V3P6ln9O9bqeKcTJa9zC0tczeBEWiqz31/S2f2E3Jy5hHiE4TANHglqE48/GeEwnCxY4xo" +
                        "X//0ez+tf1ZPVWjNxDGfSzYGOPtsrBL/R93tqs3O/RWf2Lv9JTmfVP6z+gWdH6l+iDD6WPa4bC1wOz7J" +
                        "kt9uyxrvZXZ/wBbt/S/zvarm/rV9VWdUY7Mw2tbntbD2GA29oEenZPtbc1v81b/ANat/R/zKU3vrR0x3" +
                        "U+iZOPW3de0C2gcnfWd4a3/AIxu6r/rixP8XnV2W4tnSbHfpKSbscHvW8zY0f8AFXO/8GUfqp9aHse3p" +
                        "HVXODg70se6yQ4OB2fZMnd7vV3eyp7/APirP0n87n/WHoNwzn9V+rpdkVPsey5uI6X03615DW+md+y3c" +
                        "71P9H/xKuctKGTHLl5nh4jx45H9GbU5mM8eSOeA4uEcGSI/Sh/6C3Prd9azc5/RekzY6w+jkWsG4uLvY" +
                        "cXHaPpvf9Cx/wD1uv3/AM3qfVD6rno9TsvLM5+Q0NcwGW1Mnd6II+nZu/nbP+2v9JbD6p/VJnSWNzc1r" +
                        "X9Qc2GtEFtLSP5uv9613+Ft/wCtVfo/57pkM+aEYexg+T9OfXLL/vU4cMpT9/N8/wChDpij/wB88p/jI" +
                        "/5Bq/8ADLf/AD3cs8f+LTo3/hSr/wA9ZC6X6y4XTs7Bqxuoi30bMipjH06Ftjz6NTnH/RudZ6X0f8IqL" +
                        "mfV49TPVGC05PSH19PFTDLS5+2ijax3us2uynU79/5ln+jT8OUDCI1ImssdBpeXhjBZlxE5jKxvjl4/q" +
                        "/VJ0vrHWyzoHUW2NDgMa1wB8WtNjHf2Xt3LgM9trvqV0x/LGZN7PgXG1zB+D16Tc3Ez6MnDL22Me11OQ" +
                        "1jhubvG1zXbf5t+1yoYvS+iYHSn9IssZdiNDn2tyHsJ2ucSX2fQ2tbb9B/76Zy+cYogEEyGQT4f6vDKB" +
                        "X8xh9yRIIAMDC/63FxOJ9dr8fqvQKs3p1zcmnHua+7YZ2te19e61n069r3s9j2rP6Z0nE6hiMvb9Y7aX" +
                        "bQLKLH7XVkCPT2uvb7W/mO+gun6b9X+g9IybvQPv6g3YKLbA8Fg3ONdVb/dYz3e7f6qy2fVD6r9Ssstq" +
                        "F2JtutxxS17Q0vpc5lhpZZ63s9m7+p/g1Njz44wMIynGETxRycEZaT/AEZRl/0mLJhnKfGRGUpDhlDjl" +
                        "H5f0oyim6H9U68XqdfV2dUOeWb2uMB24lvpe671LPoLH+pb2N6R1ykuAt9Iu9M87Qyxhd/n+1dZ9Xukd" +
                        "L6Vi219NsN1dlhdY8vD/cAK9v6MNY3ZtWKKugnqVfVKunZllnVaXmljNgrs9av1sl7Weux9d3ou/SbnM" +
                        "Z/o/wBL+kTY5jP3YyMp6Q4ZcMYfzR9zhlH0/wBZMsIgMUogQ+fijcpj9cODi4vU5nQ7+jU/Uy39sVutx" +
                        "rM0sY2sEv8AULK3MdU4FuxzGte7dv8A/Sam36t41NTs/wCr3Xm01kAn1LPTj879PdSWbf8Ai7sVdDjdM" +
                        "6F0zG/5v2ML8bJY/IsfkOaWmH00w9/s2277afR9Nn+D/wBKqNv1B+rTsr0/XurtfLmY4tYTtH7nq12X7" +
                        "P7aeOYhxTPFOAnIz+UZMc4f3P0Vp5eXDAcMJmMRH5vbyQl/fc/E691Dqf1f63iZzm3vxKCW5LAAHB29s" +
                        "O2Btbv5v9E9rP0lafHu6A36m9Mp6015ZdbcKX1Al9bhbdvvDm/m1td7/wCc3/6GxdLR0boNPT7+kY4Yy" +
                        "q+sm8NfNha4bPXe8l1nb2v+glR0Tojuljou1uVjYx9zHu3Pa5xNvqOeza+q13qOd7PTUZ5jFrwxnCPuD" +
                        "JUPQRHg4OIfu+teMGTS5RnL2zj9XqHFx8df4ryzvq99gqOd0Hr9VeOTP6S0Vt/65ZUXUWu/4zGW79S+u" +
                        "5vWMK77aA63GeG+s0bQ8OG73NHs9Rn5+z+QqQ+on1Xc37U3KtNGrtwtrLIbO/8AS+nu2s2+79Kul6dg4" +
                        "GBito6fW2rH+k3YZ3bv8IXkudZu/fc5LmM2OWMxs5J3pOUBjlCuhl+knl8OSOQHTHCtYRmZxnfYfov/0" +
                        "vVUkkklPOfWn6rN6mx2bhNDeoNb7maBt7QP5t8+1tzf8Dd/1q39H/Mz+qf1cf0il2RkuP2zJaBZU1x9O" +
                        "to+jXtafTtub+ff/wBbp/R/zvQJJKUkkkkpp9YxLMzpt9FX88W76JMD1ayLsf3f8fXWsejoGcMzBusLN" +
                        "prN2fwYymm++k1t/PZ9p6lkW/8AoNSukSVjF7vtnhrhuV334f5f4bBl9rjHFfFQ27cTz31b6Pk4NlZyq" +
                        "rGW4+P9mNm6g0v9zX7qvs9dWVZucz1Wvzf0rPWu/PsssTV/V6cnDttxaXbMzNvyXENJLLnZDsYu0/SfT" +
                        "xvb/g/+tLoklJL3uOe10eLh4v3cm3/P/wANZH2uCN3w2K4q/eg8e/oXWvsGNhir3U00tre11UMfVe+9z" +
                        "bb7GnK2V0tx/sTcX8/1fWRn9A6sXZ23Y4Z4zaq3Pdrji59l1NtG0fzWbLWZv+H9T0P8HV6bOqSUh9/X+" +
                        "b+aV1+8sHs6fP8ALHf91x+gYFmM6+62m3HstbUwssOPt/RBwHpN6eyqvazf6XqWt9V9bKv9Gg4fSs6pn" +
                        "1fFjAD06pzMr3A7SaPQ9v7/AOkW8koD7nFP5dtauq9qfy/9TZRwcEL4qsVdcV+7D5v8Nyuo9K+29RZbb" +
                        "TXfjsxL6gLAHAWWOp2+x371bLPeslvR+tOfgNuqBOKcFxta6qIpDG5fr2uY7Nuyt3rsr9Oz7L9nf/pPU" +
                        "rt6tJOxe7wiuGq9PHff9FGT2+I3xXevDTxnR8N1uDi5FeGyurGszb7c6WbrGuGVj+g1rf0znPfYx13q/" +
                        "odmNX/Oez0lh9FzM3pWP9lxa8EDpgoNoc0faDace/Z+ja9/oenRb6j8lu/1Mt/6C2v1fV7NJTH3eI0I8" +
                        "XFprP8Aeyfven99ij7fCLMuHh10j+7D931f9285i9De+zHtux7Nv237RkVZRocIbi241d1dWE1uN/PPp" +
                        "Z/pf0XqrQ6RRlYTG4Rxm14wdk2Nsa9u1gdkPfi47aR+a7Gt3/8ABen6S00lXze5R4+Hh0quLh/T4eFnx" +
                        "cGnDxXrvw3+jxW//9k4QklNBCEAAAAAAFUAAAABAQAAAA8AQQBkAG8AYgBlACAAUABoAG8AdABvAHMAa" +
                        "ABvAHAAAAATAEEAZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwACAAQwBTADUAAAABADhCSU0EBgAAA" +
                        "AAABwAHAAAAAQEA/+EN0Gh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8APD94cGFja2V0IGJlZ2luP" +
                        "SLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4NCjx4OnhtcG1ldGEgeG1sbnM6eD0iY" +
                        "WRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgM" +
                        "jAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4NCgk8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d" +
                        "3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPg0KCQk8cmRmOkRlc2NyaXB0aW9uIHJkZ" +
                        "jphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtc" +
                        "E1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdEV2dD0iaHR0cDovL25zL" +
                        "mFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIiB4bWxuczpkYz0iaHR0cDovL3B1c" +
                        "mwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvb" +
                        "S9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd" +
                        "3MiIHhtcDpDcmVhdGVEYXRlPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiB4bXA6TWV0YWRhdGFEY" +
                        "XRlPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAxMS0wMS0xOFQwO" +
                        "To1MTowNi0wNjowMCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDozNDRDMDlBQjFBMjNFMDExODIwM" +
                        "UIyQTAyRTQ3QzE5OCIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwM" +
                        "UIyQTAyRTQ3QzE5OCIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjMzNEMwOUFCMUEyM" +
                        "0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBkYzpmb3JtYXQ9ImltYWdlL2pwZWciIHBob3Rvc2hvcDpDb2xvc" +
                        "k1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJzUkdCIElFQzYxOTY2LTIuMSI+DQoJCQk8eG1wT" +
                        "U06SGlzdG9yeT4NCgkJCQk8cmRmOlNlcT4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249ImNyZWF0Z" +
                        "WQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6MzM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxO" +
                        "TgiIHN0RXZ0OndoZW49IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlb" +
                        "nQ9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyIvPg0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjdGlvb" +
                        "j0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6MzQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwM" +
                        "kU0N0MxOTgiIHN0RXZ0OndoZW49IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHN0RXZ0OnNvZnR3Y" +
                        "XJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyIgc3RFdnQ6Y2hhbmdlZD0iLyIvPg0KC" +
                        "QkJCTwvcmRmOlNlcT4NCgkJCTwveG1wTU06SGlzdG9yeT4NCgkJPC9yZGY6RGVzY3JpcHRpb24+DQoJP" +
                        "C9yZGY6UkRGPg0KPC94OnhtcG1ldGE+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPD94cGFja2V0I" +
                        "GVuZD0ndyc/Pv/iDFhJQ0NfUFJPRklMRQABAQAADEhMaW5vAhAAAG1udHJSR0IgWFlaIAfOAAIACQAGA" +
                        "DEAAGFjc3BNU0ZUAAAAAElFQyBzUkdCAAAAAAAAAAAAAAABAAD21gABAAAAANMtSFAgIAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEWNwcnQAAAFQAAAAM2Rlc2MAAAGEA" +
                        "AAAbHd0cHQAAAHwAAAAFGJrcHQAAAIEAAAAFHJYWVoAAAIYAAAAFGdYWVoAAAIsAAAAFGJYWVoAAAJAA" +
                        "AAAFGRtbmQAAAJUAAAAcGRtZGQAAALEAAAAiHZ1ZWQAAANMAAAAhnZpZXcAAAPUAAAAJGx1bWkAAAP4A" +
                        "AAAFG1lYXMAAAQMAAAAJHRlY2gAAAQwAAAADHJUUkMAAAQ8AAAIDGdUUkMAAAQ8AAAIDGJUUkMAAAQ8A" +
                        "AAIDHRleHQAAAAAQ29weXJpZ2h0IChjKSAxOTk4IEhld2xldHQtUGFja2FyZCBDb21wYW55AABkZXNjA" +
                        "AAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAA81EAAQAAA" +
                        "AEWzFhZWiAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAG+iAAA49QAAA5BYWVogAAAAAAAAYpkAALeFA" +
                        "AAY2lhZWiAAAAAAAAAkoAAAD4QAALbPZGVzYwAAAAAAAAAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAAA" +
                        "AAAAAAAAAAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALklFQyA2MTk2Ni0yLjEgRGVmYXVsdCBSR0IgY29sb3VyI" +
                        "HNwYWNlIC0gc1JHQgAAAAAAAAAAAAAALklFQyA2MTk2Ni0yLjEgRGVmYXVsdCBSR0IgY29sb3VyIHNwY" +
                        "WNlIC0gc1JHQgAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZ" +
                        "yBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZ" +
                        "Gl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdmlldwAAAAAAE6T+A" +
                        "BRfLgAQzxQAA+3MAAQTCwADXJ4AAAABWFlaIAAAAAAATAlWAFAAAABXH+dtZWFzAAAAAAAAAAEAAAAAA" +
                        "AAAAAAAAAAAAAAAAAACjwAAAAJzaWcgAAAAAENSVCBjdXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjA" +
                        "CgALQAyADcAOwBAAEUASgBPAFQAWQBeAGMAaABtAHIAdwB8AIEAhgCLAJAAlQCaAJ8ApACpAK4AsgC3A" +
                        "LwAwQDGAMsA0ADVANsA4ADlAOsA8AD2APsBAQEHAQ0BEwEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnA" +
                        "W4BdQF8AYMBiwGSAZoBoQGpAbEBuQHBAckB0QHZAeEB6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdA" +
                        "mcCcQJ6AoQCjgKYAqICrAK2AsECywLVAuAC6wL1AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA" +
                        "64DugPHA9MD4APsA/kEBgQTBCAELQQ7BEgEVQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6B" +
                        "UkFWAVnBXcFhgWWBaYFtQXFBdUF5QX2BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrB" +
                        "z0HTwdhB3QHhgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5C" +
                        "Y8JpAm6Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqD" +
                        "EMMXAx1DI4MpwzADNkM8w0NDSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9BD" +
                        "14Peg+WD7MPzw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQSoxLDE" +
                        "uMTAxMjE0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJFmwWjxayF" +
                        "tYW+hcdF0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEadxqeGsUa7BsUG" +
                        "zsbYxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7pHxMfPh9pH5Qfvx/qI" +
                        "BUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij8CQfJE0kfCSrJNolCSU4J" +
                        "WgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4KWspnSnQKgIqNSpoKpsqzysCK" +
                        "zYraSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4vJC9aL5Evxy/+MDUwbDCkMNsxEjFKM" +
                        "YIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1EzVNNYc1wjX9Njc2cjauNuk3JDdgN5w31zgUO" +
                        "FA4jDjIOQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP" +
                        "6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6Q31DwEQDREdEikTORRJFVUWaRd5GIkZnRqtG8Ec1R" +
                        "3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRLDEtTS5pL4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT" +
                        "91QJ1BxULtRBlFQUZtR5lIxUnxSx1MTU19TqlP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9W" +
                        "MtZGllpWbhaB1pWWqZa9VtFW5Vb5Vw1XIZc1l0nXXhdyV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1Y" +
                        "klinGLwY0Njl2PrZEBklGTpZT1lkmXnZj1mkmboZz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/b" +
                        "Fdsr20IbWBtuW4SbmtuxG8eb3hv0XArcIZw4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabd" +
                        "vh3VnezeBF4bnjMeSp5iXnnekZ6pXsEe2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNg" +
                        "jCCkoL0g1eDuoQdhICE44VHhauGDoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yj" +
                        "f+OZo7OjzaPnpAGkG6Q1pE/kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8m" +
                        "mia1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9p" +
                        "26n4KhSqMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660JbSct" +
                        "RO1irYBtnm28Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFnwePCX8Lbw" +
                        "1jD1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfPuNA50LrRPNG+0" +
                        "j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE4" +
                        "cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw5fFy8" +
                        "f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p/br+S/7c/23////bAEMAAQEBA" +
                        "QEBAQEBAQIBAQECAgEBAQECAgICAgICAgMCAwMDAwIDAwQEBAQEAwUFBQUFBQcHBwcHCAgICAgICAgIC" +
                        "P/bAEMBAQEBAgICBAMDBAcFBAUHCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC" +
                        "AgICAgICAgICP/AABEIAIEBYgMBEQACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJC" +
                        "gv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCC" +
                        "QoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKk" +
                        "pOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19" +
                        "vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAA" +
                        "QIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFR" +
                        "kdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1t" +
                        "re4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP7+KACgA" +
                        "oAKACgAoAa7pGjySOI44wXkkcgKqgZJJPQCgD8VvGX/AAXQ/ZW8L/Em78G6X4S8TeMvCOmXT6Vf/Enw/" +
                        "Dp32OUo5Qz2dvcXMcs0GeQ7bCRkqpGMxzo0VJn7B+CfGnhf4j+EPDXj3wTrEXiDwl4vsrfxD4d1qyJ8u" +
                        "4tLqMSxuAwDKcHlWAKnIIBBFWZtHUUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQBg+KtBh8VeGPEfhe4uXs7fxJYXmgz3drjz" +
                        "YkvLd7dnTdxuUPkZ70AfxE+M/8Aglx+294U+JN78ObL4Gar4v2XRsdI8aeGVil0G9gaQrFcC+kdIYEdR" +
                        "uKzsjJnDhTWPKzqVRH9gn7IXwV1T9nb9mn4PfBjXdTj1fXfA2kpZa9fWZLQG+uZ5L64SFmVC0Ucs7JGx" +
                        "UEqASAeK1SOeTuz6QpkhQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAB" +
                        "QAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAf56/wDwUQ/ax8Z/tU/tR" +
                        "/E/xbdeL73VPh34c1u+0D4QaIbiUWNho2n3BtLaa3gDFI5LhYhNK45LMecAY/2g8FfDrC8PcP4eiqSjX" +
                        "nBSqu2rlJXab3ajflS2SR/il43eI+K4i4hxFZ1XKhCbjSV9Iwi7JpbJytzN73Z/U/8A8EOPi58U/i9+x" +
                        "H9s+KmvXnii78EeLNW+H/g7X/EEs1xeT6Haadpt5Csk87M8ohmu5oUJPyoioOFr/Pn6WXDeX5bxXy4SC" +
                        "gqlKM5KNklNymnZLRXUU33bb6n+h30SOJcxzPhPmxc3N06soQlK7bgowau3q7OTS7JJdD9ia/mU/p8KA" +
                        "CgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgA" +
                        "oAKACgAoAKAILq6trK2uL29uEtLO0R7q7u7p1jiiijUuzuzkBVUAkknAFAHyx+118bNP+GP7G3xy+OHh" +
                        "rWIbmHTvBWo6/4I12ylVoJ7vUrAwaXLHIpwyyTXERUjqDxX3vhbw8s24jwWEavGdWPN/hTvL/yVM+A8V" +
                        "eInlPDeOxadpU6UuX/E1aP/AJM0f5ytf7gn+GJ/dv8AA/VbP/gnx/wSQ8I+O30aG41n4e+AF+J11o2ob" +
                        "40uvEniY/2rHbXLrh8fbdRSBiDkKMLwBX+RfFmHlxn4kVcPzNRq1/Z3XSnT91tdPhi5Lz3P9f8AhLEQ4" +
                        "K8NaWI5E50qHtLPrUqe8k+vxzUX5bH09+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ABE+HeoSo+o6BqLoT" +
                        "5cmAvmQSbWME4ULIoPCurovwPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/oHhT4rZbxblqxOGdpqy" +
                        "nBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAQXV1bWVtcXt7cJaWdoj3V3d3TrHFFFGpdndnICqoBJJOA" +
                        "KAP5SP+CnP/AAU61L9oDVdQ/Zr/AGb9XeH4StcDQ/F/jTT5PJl8W3JkEX2aByV26cG4JJHnnk/u/v5Sk" +
                        "bwhbVn6Sf8ABa7VYfhn/wAE1fEHgbS5jBZa/qXg/wCGtsMHc9vY3sWphc7WxldMGeRkcZOcH+nPok5Ys" +
                        "RxpRm1/ChUl/wCS8n/t39bn8u/S7zR4fgqtBO3tZ04/+Tc//tv9bH8Wnw48JS+PviH4D8Cws6zeNdZ0v" +
                        "wlE0GN4bUr6KzBXIIzmTjiv9U88zJYPBVsQ9qcJS/8AAU3+h/lDkeWvG42jh1vUnGP/AIE0v1P7Qf8Ag" +
                        "u3rWo+FP+Ce+peHtA0+4Oj+J/E/hfwhrQ02OV4LXTraSbVY2nKBgkXn2EKBmIG9kGckA/5c/RFwsMRxp" +
                        "GpUkuaFOpJX3cnaLt3dpSenRN7H+qH0v8XUw3BUqdOL5Z1acXbZRV5K/ZXjFa9WlvY/kR/Zh/ae+LP7I" +
                        "/xZ0P4v/CDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/0m4+4By7iTLp4PGQvB6pr4o" +
                        "y6Si+jX3NaO6bR/mj4f+IGZcNZlDG4KdprRp/DOPWMl1T+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03" +
                        "X9NEWn/ABE+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurov+QPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO" +
                        "6fdNN/7E+FPitlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFABQAUAcp448c+D/hp4T1zx34+8R" +
                        "2nhLwf4ah/tDXfEWuSrBbW0W4Rgszd2ZgqqOWYgAEkCgEjyP4DftX/s8/tOQa5N8DPihZePX8Nsia7YW" +
                        "8N7Y3tssjMiSPa6nBbTeWxUhZAm044NJO43Fo+h6YgoAKACgAoA+BvEf/BUL9hDwf8AFXXPgr4s/aBtP" +
                        "DXxG8NapN4M1/Sde0bxLaWlpqNvMYJI5dRn05bJVVxgyGfZ33Yr9iwPgDxficuhjqOCc6E4qcWpU23Fq" +
                        "6aip8+3Tlv5H41jvpBcH4XMZ4GtjVCvCThJOFRJSTs05uHJv15reZ96xSxTxRTwSrNBMqywzRMGR0YZD" +
                        "KRwQR0Nfj8otOz3P2OMk1dapklSUFABQAUAFAHxT/wUY+KvjL4J/sSftE/Er4fao+h+M9A0NbXQNbtiV" +
                        "msptSv7fSjcQsPuyxLcl427MAe1fqngjw9hc14rwWFxMealKd5Lo1FOVn5O1n5H5T448RYrKeE8disNL" +
                        "lqxhaL6pyko3Xmr3XmfyE/8ErfiF4+8Wf8ABR79nC68U+ONY8S3Oq6tqkuqXHiDU728kuW/4RzUDmVrm" +
                        "Ry54HLZr/Sj6QmTYPDcD45UqUIKMY25YpW9+O1lof5nfR3zrGYnjrAutWnNynK/NJu/7uW93qf3ca3re" +
                        "jeGtG1XxF4i1W20LQNCtptY1vW9YmjtrSztLaMzSzTSzFUSNEUszMQABk1/kGf7Dnzx8Ef2y/2Y/wBo7" +
                        "X9b8K/Bb4vad448SeHo2vNT0S3ivrO58hHWNpoU1GC3M8SsyhpItygkZPIpJplOLR9N0yQoAKACgAoA+" +
                        "XfjN+2p+y3+z34s0jwN8YvjLpngvxbrSR3NpoVxHe3c8UMudklz/Z8E4to22na85RT2NJtFKLZ9L6fqF" +
                        "hq1hZarpV7Dqel6nDHqGm6lp8iTQXEEyCSOSOSMlXR1IKsCQQcimSW6ACgAoAKACgAoAKACgCC6urayt" +
                        "ri9vbhLSztEe6u7u6dY4ooo1Ls7s5AVVAJJJwBQB/J//wAFRv8AgqNc/HC51v8AZ7/Z71t7T4NWjtp/j" +
                        "nxzp7NHL4rljbDQQMMFdOUjk9Zzyf3eA+UpHRTp2Pya/Zu8AeJ/id8ePhN4L8I+Gp/Fusarr2ludF0+L" +
                        "zS9rBeRz3DyZwqxRxIzyOxCqoJJAFSi5PQ/pI/4OHp54f2J/hvHFM8Ud18T9EguUjYqJEHhbxFKFYDqN" +
                        "yK2D3APav7E+hXBPiqvdbYaf/pykfxj9NqbXClBJ74mH/puqfy0fsTW0F5+2Z+yPaXUK3FrdfE7wFbXM" +
                        "EoDI8b+KrFWVgeoIODX+gnirNx4XzJp2aw1b/03I/z08J4KXFOWJq6eJo/+nIn+iv4w8H+FviB4W1/wT" +
                        "420C18U+EfFNrNoniHw9rcKT2t5azoUeORHBBBB/DqOa/xMyzM8RgsRCvQm4VINOMk7NNbNM/3AzPLMP" +
                        "jcPOhXgp0ppqUWrpp7po/iJ/wCCof8AwS88U/sWeKbj4kfDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+" +
                        "SYyTi3uD9/7j/vMF/8AVvwB8fsPxTh1hsS1DHwWq2VRL7UfP+aPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7" +
                        "pt/Yn5fyy67PXf4H/Zh/ae+LP7I/wAWdD+L/wAINcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWA" +
                        "dCrqrD9h4+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR+N+H/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000" +
                        "mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/xE+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurov+QPin4" +
                        "WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/7E+FPitlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cF" +
                        "ABQB+X3/BXfwN42+Jf7IU/gP4eeHL3xd4u8T+KfDun6T4c8PwvPc3TCeSYgIn8KhC7MeFALEgDNTPYum" +
                        "9T4A/4JOfsJftc/s0/tMap8QvjJ8LpPAvgfVPCeqeGn1Ia94dvvNurm+sLqGF7fStQuZufILfMmAV5IO" +
                        "KmMWmXUmmj+kCtDEKACgAoAKAP87T/gol/yfX+1p/2PviP/ANOMlf7XeCn/ACSOW/8AXin/AOko/wARP" +
                        "G7/AJK/Mv8Ar/U/9KZ/dd+xNc3F5+xl+yPeXk73V3dfDHwDc3V1cuzySSP4VsWZmZiSWJOST1r/ACO8V" +
                        "YRjxRmSSslia3/pyR/r54UVJS4WyyUndvDUf/TcT6dr4I+/CgAoAKACgD84v+CuP/KOj9p7/sFaX/6ke" +
                        "nV+4fRu/wCS3wH+KX/puZ+GfSV/5IfMP8Mf/TkD+SH/AIJHf8pF/wBmH/sK6p/6jmo1/o99JH/kiMf/A" +
                        "IY/+nIH+bH0av8AkuMv/wAUv/Tcz+xT/gpXoniHxL+xB8efDnhPS7vW/Emv2ek6Joui6FFLPeXk914hs" +
                        "IFgijgBd2k3bdoHOcV/jfLY/wBnIbn4mf8ABNX/AIJ6ftnfA79sD4NfF/4mfB+bwb8ONHi18+I9Zn13w" +
                        "3LJFFqHhfUbK3WWzs9RluTuuJogV8olTgsAASIjF3NZzTR/U1WpgFABQAUAFAH8j/7b37DX7Wv7TX7bf" +
                        "7S3jL4O/B+/8Y+F7XVtN0xfEl/faVpNnM9v4e0+Ix282u3dms3l4CsIi23GDjGKylFtnRGSSP6P/wBir" +
                        "4f+OfhT+yn8C/hx8StMbRfHPgzQbfQfEWkS3Vtem2lgd1WLzrOWeJwqbQNjkAcDpWkdjGT1PqGmSFABQ" +
                        "AUAFABQAUAQXV1bWVtcXt7cJaWdoj3V3d3TrHFFFGpdndnICqoBJJOAKAP5P/8AgqN/wVGufjhc63+z3" +
                        "+z3rb2nwatHbT/HPjnT2aOXxXLG2GggYYK6cpHJ6znk/u8B8pSOinTsfjZ8Lvhd48+NHjzw38M/hn4bn" +
                        "8V+NPFc40/R9H08DLHG55JHbCxxRqC8kjkKigsxAFQkaN2P7Uf2Af2AfAf7FPgPe/keK/jV4rgjX4g/E" +
                        "FYzhRkSf2fp/mANHaRsBk4DSsA7gYRE2jGxzTnc+Pf+DgvQ5tW/Ya8MX8W7Z4Y+Iega5c7FBGyTRtZ00" +
                        "biSMDddjn1wK/rb6GeLVPi2pF/boTX/AJNTl/7afyH9NPCOpwjTkvsYiD/8kqR/9uP5Lv2VPEcXg/8Aa" +
                        "h/Zu8WzukUHhbx94P8AEc0lyGaNUsfENpckuEIJUBOcHNf6NeIeBeJ4fx1FbzoVY/fCSP8AN3w6xywvE" +
                        "GArPaFelL7pxZ/pOV/hif7tnN+MPB/hb4geFtf8E+NtAtfFPhHxTazaJ4h8Pa3Ck9reWs6FHjkRwQQQf" +
                        "w6jmu7LMzxGCxEK9CbhUg04yTs01s0zhzPLMPjcPOhXgp0ppqUWrpp7po/iJ/4Kh/8ABLzxT+xZ4puPi" +
                        "R8N7e68U/s0eKbry9H1iTfPdeGLqd/k07UX5JjJOLe4P3/uP+8wX/1b8AfH7D8U4dYbEtQx8FqtlUS+1" +
                        "Hz/AJo9N1pt/k19IL6PuI4UxDxWFTngJvR7um39ifl/LLrs9d/gf9mH9p74s/sj/FnQ/i/8INcOm63pp" +
                        "+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD9h4+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR+N+H" +
                        "/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqO" +
                        "gai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblq" +
                        "xOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQB+e3/BUH9pzx/wDslfsgeN/iv8LVtovH0t7pfg/w5q2qw" +
                        "pcw6dLqdz5b3XkShkleONW8tXBTeQWDKCrftHgDwFg+I+JaWExd/Y2lKSTs5cq+G61SbtdrW17NPVfin" +
                        "0geP8bw3wzWxmEt7a8YxbV1HmfxWejaV7J6XtdNaP8AGv8A4I3ft5ftb/tI/tcaj8PPjd8aL7x94Nh8H" +
                        "6z4ii0LULLSLeMXtte6fFFLusbSB8qszjG7HPSv6d+k74QcN5Fw3HE4HCqlVdWMbpyejUrrWTXRH8u/R" +
                        "d8YuJc94llhsfipVaSozlZqK1Tik9Ip9WeAf8FIf+CkP7bXwW/ba+Pnww+GHx81Dwl4D8Jahp9n4d8O2" +
                        "en6HNHaxzaHZXTqr3VlLIcySs3zMetfZeB3gdwpmvCmDxWKwcalapGTlJymr2nJdJJbJdD4zx08dOLMq" +
                        "4sxmEwmMlTo05RUYqMHa8IvrFvdvqfEH/D3H/gov/0c9qv/AIK/Dn/yur9X/wCJbuCP+gCP/gVT/wCTP" +
                        "yX/AImV44/6GEv/AAGn/wDIHoHw/wD+C1v/AAUP8DatDf6h8YbT4jacj+dP4b+IHh/RZrSY8DDS6Zb2N" +
                        "0o46JOv514+c/RX4KxdNxjhnSl/NCc018pOUfviz2cl+lbxvg6ilLFKtH+WcINP5xUZfdJH7sfsy/8AB" +
                        "VTwL/wUE8K3XwEvPHGo/sZ/tRa3GF8C+J/DsthqGmajqMaEILJtWgeOQu337GdA7KcRTM43L/I3Hn0es" +
                        "XwZiFmEaUcwy+PxxknGUY9ebld1bpOLsnrKKWj/AK/4B+kTg+NMO8ulWll+YSXuSi4yjKXTl5lZ3605K" +
                        "7WkZN6r8bv2o/21f+Cs37I3xj8SfBj4rftGanba1oxF5o+tWWleHjYazpcrstvf2bvpoLQyhD1AZWDIw" +
                        "DKwH9O+H/hX4c8SZZTxuEwMXCWjTlO8ZLeMvf3X3NWa0aP5d8QvFbxI4azSpgcZjpKcdU1GFpRe0o+5s" +
                        "/vTunqmfkR488deLPid4z8T/EPx3rL+IfGXjO9uPEfifXblIY5Lu9upDLLKywJGgLMScKoHtX9JZRlGG" +
                        "wGFp4bDx5KVNKMVrolstbs/mjOM3xOYYqpicRLnq1JOUnpq3q3pZfcfZvg7/gqH+3p8P/CHhXwH4P8A2" +
                        "itS0Twj4J02x8I+FtFg03QJEs9O021SztoFaawd2EcUaqCzEnHJJr8vzPwA4PxuJqYitgYyqVJOUnzT1" +
                        "lJ3b0lbVu+h+pZX9ILjHBYanh6GOlGlTioxXLDSMVZLWN9Eran9bn/BI79qr4s/tb/slH4hfGwx3fjPw" +
                        "n4j1P4dzeLIbWOyGt2tjY2N8l88UCRwh83jQuYlCFoycA5Ff5w/SQ8PMu4b4j+rYG6pTpxny3vyNuS5b" +
                        "u7t7t1fWz9D/Sf6NXiLmXEvDf1nH2dWnUlDmtbnSUXzWVlf3nF2Vrx73Pz2/bz/AOC8Gn/DzxDrnwo/Y" +
                        "70jT/Gmt6O8ml6/8afE6vc6PDcKpR00q0idPtLRsf8Aj4lYRblIWOVCHr9o8IPohzxtGGLzqUqcJaxpR" +
                        "0k1/flry3/lXvWesovQ/FPGL6YMMDXng8ljGpOOkqstYp/3I6c1v5n7t1pGS1Pwl8Vf8FP/ANv7xjqcu" +
                        "rar+1R4qsbmUs5g8K3UOh2o3Y4W30aK1iAGOPl/rX9c5d4B8G4WnyQy+k1/eTm/vk2/xP5AzH6QHGeKq" +
                        "c88xqp/3WoL7oKK/A9++A3/AAWv/bo+DmrWJ8VePYfjn4RidBfeF/ihawSzvF91/K1KzSG7SQj7rSPIo" +
                        "IBKHkH47jD6K3CWZ037Ki8NU6Spt2+cHeNvRJ+aPtODvpXcX5XUXtqyxNLrGolf5TVpJ+ra8mf1jfsO/" +
                        "t7/AAZ/bq8AXPib4fSv4c8a+HBFD4/+F+uTRvqWkyyj5ZFZAouLWQgiOdVAOCGVGBUf50+LHg9mnCOMV" +
                        "LE+/Sn8FRL3ZeXlJdYv5NrU/wBHfCTxkyvi/BOrhvcqwtz02/ei+/8Aei+kkvVJ6HB/8Fcf+UdH7T3/A" +
                        "GCtL/8AUj06vY+jd/yW+A/xS/8ATczx/pK/8kPmH+GP/pyB/JD/AMEjv+Ui/wCzD/2FdU/9RzUa/wBHv" +
                        "pI/8kRj/wDDH/05A/zY+jV/yXGX/wCKX/puZ/ab+3J8dPEn7NX7Jvxv+N3g6xt9Q8V+BdJW58OQasrPb" +
                        "Le3t7BpsMsqKQXWJrgSFMjdtxkZzX+WvhNwlQz3iPCYGs2qdWXvW3sk5NLte1r9L3P9VPFzi+vkPDeLx" +
                        "9FJ1KUPdvtdtRTfezd7dbWP5tv+CYH/AAUa/bS+P37eXwS+GPxb+Ol74v8AAHjB/FE3iHwvNpuh2tvOb" +
                        "Pwhq2pwDNjZQugjngRwFYfdA6cV/cvj74IcLZNwhi8Vg8Iqdan7PllzTbV6sIveTTum1r3P4T+j945cV" +
                        "ZzxjhMJjMY6lGp7TmjywSdqU5LaKas0np2P6Pv2zP2z/hF+xH8KZPiX8UbmS/vtSkbSfA3gXRmj/tPXd" +
                        "QVQ5igEhCpHGpDTTN8qLjqzIrfw94X+F2ZcV5j9VwislrOb+GEe77t7JLVvyTa/ujxS8U8s4Ty761i22" +
                        "27QgvinLsuyW8m9Eu7aT/kp+PX/AAXC/bh+Lup3qeBvFVl8BfCMjsLLw/8ADuzt5r0RchfP1LUo5p2kA" +
                        "PLQ+Sp/uiv9HeD/AKJ/CeW017em8VV6ym2lfyhFpW8nzPzP82uMfpa8W5nUf1eosLS6Rgk3bznJN381y" +
                        "ryPjiH/AIKDftzQakdVT9rf4hNdFBD5U3ivWJLbCsG/495JzDnjk7MkcZwTX6bLwZ4SdPk/s2hb/r3G/" +
                        "wB9r/ifl8fGri5VOf8AtLEX/wCvkrfde34H3p+zt/wXe/bE+FWp6dZ/F6fTv2hPBMbpFf2fiS1ttK1uO" +
                        "3HX7NqOlQxqX77riGbPTjqPyDjb6InDOY05SwalhavRxblC/nGTen+GUT9i4I+mDxRl1SMca44ul1Uko" +
                        "zt5Tilr/ijI/rI/ZO/a0+EP7Zfwns/i18H9Snl0wTtoniPw7rcSwano2pxxJM9pdRozruCyKyujMjKQQ" +
                        "x5A/wA6PEXw5zLhfMXg8ZFc1rxktYyjspRfyas0mnuj/R/w48SMs4py1YzBSfLe0ovSUZbuMlqtmndNp" +
                        "rZn82f/AAVJ/wCCpP7YXwy/bC+JHwY+DHxIPwr8CfCs6foVpaaFp+l3NxqNxc6XbajNdXU2o21w27dcF" +
                        "ERCqhVHBYkn+5vo/fR+4Zx/DNDG42h7etX5m25SSilJxSSi12u27tt9rI/hL6Qv0heJ8v4nr4HA1/YUa" +
                        "HKklGLcm4qTbck+9klZJLvdn9Ef7BPxL8X/ABU/Yx/Z/wDih8TPETeIfGHirw7HrnirxLfrbwNcTedKG" +
                        "lcQJFGvyqM4UDiv4p8YMiw2X8UYzC4WHJShUtGKu7Ky01uz+3PBzPsVmPCuCxeKnz1Z07yk7K7u9dLI/" +
                        "ED9uH/gvhqWg+Ktc+G37GOj6bqlhoksmmah8b/FkLXsF5NGSrtpFnuRGiVh8txPuEnJWPbtdv6v8J/oe" +
                        "062Hhis7lKLkrqlF2aX9+W9+8Y2a6yvdL+TPFv6ZFSjiJ4XI4xlGLs60ldN/wByO1u0pXT6RtZv8SfGP" +
                        "/BSr9vbxzdXV5rX7V/jOylvNvnJ4O1aTw7ENrBhsi8PiySPkc7FGRweK/qvLPAvg/CRUYZdRaX80ef8Z" +
                        "8zfzP5OzTx44yxknKpmVZN/yy5F8lDlS+R2fw0/4Kwf8FAfhfqEF5pn7SGs+K7VGV7rSPiWLbxHb3CKA" +
                        "NjNq0c0yA7eTFIjdeck15ee/R14NzCDjLAwg+9O8Gv/AAFpP5pryPVyH6R3GmXzUo46dRdqlqif/gSbX" +
                        "yafmf0W/wDBPT/gtV4L/aj8U+Hvgp8dfC9v8LPjT4jkXTPCes+HWmk8N6/dlSRAgunkmsrhyMRxSPIrn" +
                        "gSBiqH+JvGn6LGK4fw88dgKjrYWCvJSt7SC76WUorq0k1/LZNn9weCf0rMLxDiIYHMKaoYubtFxv7Ob7" +
                        "a3cJPom5J/zXaR+7FfyMf18FAEF1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+T/wD4K" +
                        "jf8FRrn44XOt/s9/s9629p8GrR20/xz4509mjl8VyxthoIGGCunKRyes55P7vAfKUjop07H42fC74XeP" +
                        "PjR488N/DP4Z+G5/FfjTxXONP0fR9PAyxxueSR2wscUagvJI5CooLMQBUJGjdj+1H9gH9gHwH+xT4D3v" +
                        "5Hiv41eK4I1+IPxBWM4UZEn9n6f5gDR2kbAZOA0rAO4GERNoxsc053P0JqiD83f+CuXw5m+Jf8AwT0/a" +
                        "N0yzg87UfDGm2XxGs2AJMaeHdVttWumwP8Ap1gmHtnNfuX0bs7WA40wMpP3ZycH/wBvxcV/5M0fhX0lc" +
                        "jeP4Jx0Yq8oRU1/25JSf/kqZ/AhbXM9ncW93azNb3Vq6XNtPESrpIjBlZSOhBGRX+xM4KUWmrpn+NNOb" +
                        "jJNOzR/pe/Az4lWPxk+C/wn+LOnSJJafEjw7o3jVPJ6I2pafFdOmMDBRnKkEZBGDX+EvFuRTyvNMTg5b" +
                        "0akof8AgMmr/Pc/3p4Rz6GaZVhsZHatTjP/AMCinb5bHqlfPH0RzfjDwf4W+IHhbX/BPjbQLXxT4R8U2" +
                        "s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8RgsRCvQm4VINOMk7NNbNM4czyzD43DzoV4KdKaalFq6" +
                        "ae6aP4if+Cof/BLzxT+xZ4puPiR8N7e68U/s0eKbry9H1iTfPdeGLqd/k07UX5JjJOLe4P3/uP+8wX/A" +
                        "NW/AHx+w/FOHWGxLUMfBarZVEvtR8/5o9N1pt/k19IL6PuI4UxDxWFTngJvR7um39ifl/LLrs9d/gf9m" +
                        "H9p74s/sj/FnQ/i/wDCDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eD" +
                        "xkLweqa+KMukovo19zWjum0fjfh/wCIGZcNZlDG4KdprRp/DOPWMl1T+9OzTTSZ/fZ+xv8AtX+BP2zvg" +
                        "P4Z+N3gS2l0hNQkm0HxZ4Wv3WS40bWrMIbm0eRAFkAEiSRyADdG6MQpJUf47eJ3h3jOF83qYHENStZxk" +
                        "tpQe0rdNmmujTV2tX/sp4XeI2D4qyenj8OnG94yi94zW8b9d00+qadk9F9TV+fH6GfjP/wXi/5R/eIf+" +
                        "xp8M/8ApTJX9P8A0Q/+Syh/16qfkj+W/phf8kXP/r7T/Nn4f/8ABv8Af8n16t/2IXiD/wBOOl1/WH0yf" +
                        "+SRj/1/h/6TM/kr6GH/ACV8v+vE/wD0qB8uf8Fcf+Ui/wC09/2FdL/9RzTq+/8Ao3f8kRgP8Mv/AE5M/" +
                        "PvpK/8AJcZh/ij/AOm4H9D/APwTT/YD/Y2+Lf7Dn7P/AMRfiT+z34f8YeN/E+najda/4k1eGdrm6ki12" +
                        "+tkZykqjISNVHHQV/Ffjt4xcT5bxZjcNhcbUp0oSjyxTVleEX27s/trwG8GuF8y4RwWJxWCp1K04y5pN" +
                        "O7tOS79kj1z4+/8ERv2H/i74dv4PAfgqb4EeNTG39k+LPAF3eS2yzADYLjTr+eW3kjBHzCMRuc/fHFfN" +
                        "8HfSt4sy2uniKqxNLrGaV7eU0lJP15l5H0vGX0TeEszoNYek8LV6Sg3a/nCTcWvTlfmfx9/tO/s3fFf9" +
                        "jH46a38JPiEDp3inwtJBr3hjxTobyx2+pWEkhez1Kxl+VtjGM4IwySKyHDIQP8AS7gLjnLuKMohjMNrT" +
                        "ndSi7Xi/tQkvn6NNNaNH+ZHH/AmZcK5vPB4nSpCzjJXtKP2ZxfbT1TTT1TP61P2ENd+Av8AwVV/Zd8B+" +
                        "Kv2ovhhovxW+MfwKmufhn4s1HxHATcNK8cE8d6pidG23sCxtJ/D5yybQBxX+cni7g848POIK1LKsROhh" +
                        "cSlUiovTqnH/tx3S68rjc/0k8H8Zk3iLw9RrZth4V8Vhm6cnJa9GpafzqzfTmUrH8nv7b/g3wv8O/2v/" +
                        "wBpLwL4J0WHw34R8JeMdd0Hw3oOnArBZ2dtfPHFFGGJIVVGBk1/op4UZpiMbw1gcRXm51Z0YOTe7bSu2" +
                        "f5xeLWV4fA8TY/D0IKFKnWnGMVskm7JH9fP7I//AATl/Ye8cfspfsx+NfFv7NfhvXfFXi/4e+C/FHibX" +
                        "L6G4M95qGoeG7O7uJ5CswBeSSRmbA6mv81fEjxu4swnEWPoUcdUjTp16sYpNWUY1JJJadErH+mfhr4G8" +
                        "JYvhzL69bAU5VKmHpSk2ndylTi23ru27ngn/BZ7476N+xz+yJ4I/Zi+AWkWXwyPxra/8KwaV4Kgi0+LT" +
                        "PClgscuqLDHahQjXkl3HE7EZdXmOSxJH2P0XeEKvE/EtXNMwk631e0rzbk5VHfku3vyqLaXRqPQ+N+lP" +
                        "xhS4X4Zo5Vl0Y0frPNG0EoqNONnOyW3M5JN9U5ddT+dX/gnh+wj4u/bx+NEngix1OTwp8OPB0MXiD4q+" +
                        "O4YRM9jZSuyQW9ujkI11dujLEGOFVXkIYIVb+2PGrxdw3CGV+3lHnr1Hy04Xtd9W+vLHd23bS0vdfxB4" +
                        "JeD+J4xzX2EZclCmuapO17Lol05pPRX2Sb1tZ/2P/C7/glx+wV8KPDkHh7S/wBmvw34vZYfsl7r/wAUb" +
                        "GHxNqN05Xa8rS6ws4jdjz+5WNVP3VUcV/mPxB9IDjDMa7qTx1SnrdRpt04rytG11/ibb6tn+oXD30e+D" +
                        "stoKlDAU6mlnKolUk/O8r2f+FJLokfnz+3v/wAEP/gx8QfA3iP4g/sk+Gk+F/xd0SGXWIPh7ps8p8P+I" +
                        "REpke2jhuGcWdy4GIWiKxFsK6Dd5i/s3g99K/NMFi4YfOKntsNJ252vfh5tr4or7V7ytqm7Wf4t4x/RL" +
                        "yrG4Spicnp+xxMVfkT9yduiT+GT+za0b6NK/Mv5iP2Sv2j/ABr+x9+0R4D+M3htrmCfwlfLYeNfDaMYT" +
                        "qmiSyrFqOnTJJgZkjB2bx8kqo+NyDH97+I/A+F4myStgqtmpxvCW/LNfDJej3tvFtbM/gDw246xfDGd0" +
                        "cdSunTlacduaD+OL9VtfaST3R/aP/wVQ1/SfFf/AATI/aB8UaBeLqOheJPD2g6/ouoRAhZ7S813TLiGQ" +
                        "bgDhkcEZr/Lf6PmDqYfj3BUqitOFScWuzUJpr7z/VL6RGMpYngDG1abvCdOEk+6c4NP7j+Tn/gkd/ykX" +
                        "/Zh/wCwrqn/AKjmo1/or9JH/kiMf/hj/wCnIH+cX0av+S4y/wDxS/8ATcz+t7/grj/yjo/ae/7BWl/+p" +
                        "Hp1f5w/Ru/5LfAf4pf+m5n+k/0lf+SHzD/DH/05A/lK/wCCLv8Aykt/Zs/7nH/1Adcr/Q76Uf8AyQmO/" +
                        "wC4X/p6mf50fRX/AOS9wH/cX/0zUPqP/g4X1/xNefti/Dzw5qU8o8M6F4C07UPDFi4YQCS/1nUxdTpng" +
                        "vI1uiMR2jUdq+A+hdg6EeGK9WKXtJV5KT66Rhyr5XbXqz9C+mxja8uKKFKTfs40IuK6e9OfM/V2Sfoj";
                    resourceString += "zD/glZ4Q/wCCX+v3Or3X7ani8RfFBb5U8H+FfiVJdaR4LWyRUKzNe2cqxSzFywdLySOMLjCPyw9/6QmZc" +
                        "f0YxWR0v9n5felTtKrftytXSts4Ju/VbHz/ANHfLPD+tKTz2r/tHN7sal40rd+ZOzd91NqNuj3P6sNL/" +
                        "Yl/YB8aeE7aTw9+zB8LPEHhfVYVWw8QeGPC3hqXz4geHi1Cxg8wnj76y5PrX+eWI8VeMsLiWqmYYmFSL" +
                        "1jKpU0fnFu3yaP9FcP4T8GYvDJ08vws6clpKNOnqvKSV/mmflD+2F/wQE+GnjwL4n/Y98QW/wAIfE0sx" +
                        "bU/APj681K78MzxuSxe3uUivby1dST8pEqEYCiPHP8ARPhn9MbH4P8AdZzB16dtJwUVUXqrxjJefuvu2" +
                        "fzl4nfQzwGM/e5LNYepfWE3J036O0pRfl7y7JH37/wS9/YM1n9gz4LeJvCPjLxjaeMviD8QdWXxV4ruP" +
                        "DCzjSbMQWqWkFtavdxwyyhQGZpXjTJbGwbct+OeP3i/S4wzSnWo0nTo0o8sea3M7u7bs2l0SSb2310/Z" +
                        "vo++DtXg7KqlGvVVSvVlzS5b8qsrJRuk31bbSve1tNf5M/+CuP/ACkX/ae/7Cul/wDqOadX+i/0bv8Ak" +
                        "iMB/hl/6cmf5v8A0lf+S4zD/FH/ANNwP6Ef7e8TeGv+Df8Ah1TwjczWesH4ZRaW9xYgmVbG/wBXWwvsb" +
                        "eQDazShm7DJ7V/GP1OhX8ZHCsk4/Wb691G8f/Jkj+1PrmIoeDCnRbUvq1tO0pWl/wCStn8kHwXsfhNqX" +
                        "xV8C2Px217VvDPwhuL+JfH2ueB7SK91WCwALN9nimZVyzAKz4YopLhJCoRv9H+Ka2ZU8urSwEIzxKj7i" +
                        "m7Rb82vvtpd6NpO6/zY4Vo5bUzGjHMJyhhnL33BXko+Sf3X1stUpNWf9sP7Jf7O/wDwSA8e+FrSx/Z28" +
                        "A/DL4xiKAS3cXi63s/E/iIKAu6W6tvFSz3sBYjOGiRRyFAHFf5W+I3GviXg8Q5ZlWxOH105W6cPROnaD" +
                        "+9vuz/Vzw24I8MsZh1HLaOGxGmvMlUn6yVS819yXZHZ/Hn/AIJD/sJ/HPRL+0i+DFh8IfEkyMul+L/gx" +
                        "FHoEtpIRw32K1UWMq5xlZIDx0KnmvL4Q+knxdlNVSeKlXh1jV99P/t5++vlL1uepxj9Gfg/N6UorCxw9" +
                        "TpKl7jX/bq9x/OPpY/Lr9l3/ggv8Vfg3+1X8PPir4++M3h3W/hZ8JPENh8RPDQ8KJqi6/qtzot7HqFjH" +
                        "c2t3bLb2qNLEpm2XMx2gqv3ty/v/iB9L/Ls04er4TD4WpHEV6bhLm5eSKmnGTTT5paN2vGOur2s/wCff" +
                        "D76HWY5XxFQxeIxVOWHoVFOPLzc8nBqUU01yxV0r2lLTRb3X9PVfwOf3+FAHin7RXwS0f8AaM+C3j/4L" +
                        "674g1HwtpvjuyOly694YneC6t3WRZkJCsoliLIBLCx2yISpxnITQ4uzP4W/2oP2X/il+yZ8UtU+F3xR0" +
                        "vybmHde+G/ElkrnTta04uVju7SRgMqcYZT8yNlWAIrFqx1Rlc9v/wCCeH7abfsU/GibxdqnhaDxT4E8a" +
                        "28Phfx/HDbQNrFrYrP5on0+4kAZXjb5nh3BJgAGwyo6OLsKcbo/ts+HfxE8FfFjwV4c+Ivw68R23ivwZ" +
                        "4rtk1TQtd0t90U0TZBBBAZHRgVdGAZGBVgGBFbHK0dpQBzfjHwpovjzwh4q8D+JLb7Z4d8Z6bfeFNfs/" +
                        "l/e2Wo2r2c6fMGHzRyEcg13ZZmNXB4mnXpO06clJPs4u6/FHDmmXUsZhqmHqq8KkXGS7qSs/wAGf5p3x" +
                        "a+G3iD4OfFH4h/CjxVEYvEXw51nUvBer7kaMSTaddvamRA2fkk2b0OSCpBBIOa/3W4cz2jmeX0MXS+Ct" +
                        "CM16SV7eq2fmf4NcSZFWyvMK+DrL36M5QfrFtX9HuvI/sE/4IIftF2vxP8A2TdS+CWqagJfF37PmqTad" +
                        "b2spzI/h7XJpdTspcsctsnNzDgDCqiDuBX+aP0wuCZYDiOOOhH93iop3/vwSjJfNcr822f6cfQ444jmH" +
                        "DcsBOX73CSat/cm3KL+UuZeSSP3Rr+ST+uwoA/lQ/4LD/8ABV7S/F9j4u/ZB/Zu1W31fwxdb9A+NPxQt" +
                        "PLuIL7Y+JNK0xzuUxBlxPcL94jZGduWb/Q36M30dqmGnTznM4uNRa0qb0a7Tn5/yx6bvWyX+dX0nfpG0" +
                        "8VCrkuWSUqb92rUWqfeEPL+aXXZaXb/AJuvB/g/xT8QPFOgeCfBOgXXinxd4puodE8PeHtEhee6vLqdw" +
                        "iRxogJJJP4dTxX9x5nmeHwWHnXrzUKcE3KTdkkt22fwrlmWYjG4iFChBzqzaUYpXbb2SR/fF/wS+/Y71" +
                        "/8AYn/Za0z4Y+M9Th1Dx/4s1a7+J/j2DTH820sdS1GztLEWkMg4kEMFlEruPlZ9xXK4J/x68ffE2jxVx" +
                        "BLFUItUYRVOF9G4xcnzNdLuTaW6Vr6n+yP0fvDCtwnw9HC15J1qk3UnbVKUlFcqfWyik3s3e2h+iVfih" +
                        "+3H4z/8F4v+Uf3iH/safDP/AKUyV/T/ANEP/ksof9eqn5I/lv6YX/JFz/6+0/zZ+H//AAb/AH/J9erf9" +
                        "iF4g/8ATjpdf1h9Mn/kkY/9f4f+kzP5K+hh/wAlfL/rxP8A9KgfLn/BXH/lIv8AtPf9hXS//Uc06vv/A" +
                        "KN3/JEYD/DL/wBOTPz76Sv/ACXGYf4o/wDpuB/W9/wSO/5R0fsw/wDYK1T/ANSPUa/zh+kj/wAlvj/8U" +
                        "f8A03A/0n+jV/yQ+X/4Zf8ApyZ+jtfh5+5n81X/AAcb/DrRLj4cfs5fFpLWOLxHpOt6n8Op71FAmnstQ" +
                        "sP7TjRyB8yxSWTlAT8pkbH3jX91fQhzurHHY7B3fJKEZ26JxfK381JX72XY/g76cmR0pYHA4yy9pGcqd" +
                        "+rUlzJfJxdu133PFP8Ag3B8RanB8RP2oPCSzE6Nqei+HfEU9uxJAubG+u7ZGUdBlLtgfXA9K+p+nDgqb" +
                        "wWX1re8pzj8mov/ANtR8p9BjHVFjswo392UIS+ackvwkz8Zf+CgWoQan+3J+1xc2wYRx/ETxbp7eaAD5" +
                        "lprVxaP0J43RnHtX9Q+DVF0+E8tT/6B6b++Cf6n8teNFZVOLsza/wCgiqvum0/yP7t/2Hf+TKv2P/8As" +
                        "l3w/wD/AFE7Cv8AIvxY/wCSqzP/ALCa3/pyR/r/AOEn/JKZZ/2DUf8A03E/mm/4OMHvD+0l8B43Mn9nr" +
                        "4Hke1DbvK85tevBLt7btoTdjtj2r+6/oSKP9hYx/a9t+HJG36/ifwb9OFy/t7Br7Psfx55X/T8D8Ovhv" +
                        "/wvHyNW/wCFQ/8ACV/Zt8P9u/8ACt/7X2b8P5Xn/wBl8Zxu27vfHev6xzz+ybx+ueyvrb2nL87c342P5" +
                        "IyL+17S+pe1tpf2fN8r8v4XPTP+M1f+qo/+XZXg/wDGK/8AUN/5TPf/AOMr/wCon/yoH/Gav/VUf/Lso" +
                        "/4xX/qG/wDKYf8AGV/9RP8A5UPNLn4L/HO8uJ7y8+E/iy6u7p3ubq6udC1h5JJHYszMzQEliTkk9a96H" +
                        "FOUxiksTSSX9+P+Z4NThXN5ScpYaq2/7kv8j+u74+R63b/8EErOz8R21xZ61p3wt8CaXfWWqxPBcwm1v" +
                        "tItljkjkVWVkVApDDPHPNf5s8HSpPxgcqTTg8TWaa1Tupu6fmf6XcZxqx8HFGqmprDUU01ZqzpqzXkfz" +
                        "rf8Ejv+Ui/7MP8A2FdU/wDUc1Gv7Y+kj/yRGP8A8Mf/AE5A/iH6NX/JcZf/AIpf+m5n9b3/AAVx/wCUd" +
                        "H7T3/YK0v8A9SPTq/zh+jd/yW+A/wAUv/Tcz/Sf6Sv/ACQ+Yf4Y/wDpyB/KV/wRd/5SW/s2f9zj/wCoD" +
                        "rlf6HfSj/5ITHf9wv8A09TP86Por/8AJe4D/uL/AOmah/WR/wAFA/8Agnf8L/29fA2laf4g1F/BHxQ8F" +
                        "LcN8PviVpsCzvbC4AMlpeQFk+0WjsqsV3KyMMowy4f/ADp8GvGrMOD8XKVOPtMPUtz027XttKL+zJbXs" +
                        "01o07K3+j/jR4I5fxjg4xqS9niKd+Sole194yWnNF72umnqmrtP+Sn9oT/gkN+3N+z7NqN5P8J5viv4Q" +
                        "sS8kfjL4NM+uRPEg3F3sokW/iCryxe3CjnDEAmv9HOC/pKcJZyoxWJVCq/s1fc1/wAXwPytK/kf5tca/" +
                        "Rn4uyVyk8M69Jfbpe/p/hXvrzvG3mfFHw7+Mnx2/Z58RXlx8MviN4l+EPiO3lEWsW3hrUNQ0mR5ITjy7" +
                        "uCN4xIAeCkqkeor9UzvhjKM6oJYqhTrwa05oxlv1i9beqZ+U5HxRnGSV28LXqYeaevLKUduklpf0aP2B" +
                        "/Z2/wCC/P7VHw5u9O0v47aFpPx98JoUhvtRaCHQPESRj5d0dzpsYtXKjkiS1LOQMuuSa/mnjX6HPD2Oj" +
                        "KeAnLC1Oiu5w+ak+ZfKVl2ex/TfBH0y+IsDKMMwhHFU+rsoT+TiuV/ON33W5/Uv+yd+158F/wBs34Yw/" +
                        "E/4Na1JcWtvINM8UeFdcSODWNEviu/7PewRvIqll+ZHRmRx91jggf59+IvhrmnC+PeFxsEm1eMlrGa7x" +
                        "dl800muq2P9C/DfxMyrinL1i8FNtJ2lF6Sg+0ld/JptPo9z+KP/AIK4/wDKRf8Aae/7Cul/+o5p1f6of" +
                        "Ru/5IjAf4Zf+nJn+Uv0lf8AkuMw/wAUf/TcD+uz/gnF4b0Hxj/wTc/Zz8JeKdJg17wz4n8FN4f8Q6Hqc" +
                        "YltryyvHuLeeGVG4ZJEcqw9DX+bfjhjq2F45x1alJxqQrc0Wt01ZprzTP8ASzwMwNHFcCYGjWipU50eW" +
                        "SezTumn5NH4U/tg/wDBAX4r+GNd1vxd+yBq9t8RPBF3JJfWfwt8V3sNhr+nK7bvs9vd3pS2u4052tLJF" +
                        "JjAIkbLH+uPDP6Y2XYijCjnMXSqrR1IpuEvNxV5Rb7JSXXRaH8heJ30M8xw9adbJZKtReqpyajOPkpO0" +
                        "ZJd24vpq9T8MfiZ8EPjx+zx4ggs/in8NPEfwn12znH9m3niPT73Tg80ZLK9rcsqpLjaSrxORxkGv61yH" +
                        "izKM6ouWEr068GtVGSlp/eW69Gj+Rc/4SzjJK6ji8PUoTT0couOv917P1TZ9d/Az/grN+3h8BmsLXR/j" +
                        "fe/EHw5Y4X/AIRT4wr/AMJJbSRrwsf2i9b7bGigYVYrlABwOK/NeLfo58IZxdzwipTf2qXuP1svcb9Ys" +
                        "/TOEfpIcYZPyqGLdWmvs1f3i9Lv30vSSP6LP2D/APgtt8K/2nPFPh34QfGjwsnwX+LniSRNK8N6na3X2" +
                        "jwzrV65wkEUtxtltJ5SdsUUu9XbCiUuyof4m8XvoqZhkGHnjMDU+sYaCvJWtUgu7S0klu2rNLXlsmz+4" +
                        "PB76WOXZ/iIYLHU/q+Jm7Rd705vok3rFvZJ3TenNdpH7mV/JZ/XIUAFAHzH+1h+yf8AC39r/wCFt/8AD" +
                        "b4k2Hk3MPmX3gzxnYxodR0LUSm1bi3ZsZU4AliJ2yLwcEKypq5UZWP4jP2oP2X/AIpfsmfFLVPhd8UdL" +
                        "8m5h3XvhvxJZK507WtOLlY7u0kYDKnGGU/MjZVgCKxasdMZXPpj/gnn/wAFDPGv7F3jUaRq5ufFfwH8V" +
                        "3KSeN/BEb7pbOVsRnUdOEhCpcIoG9MhZlAViCEdHGViZwuf2h/Dv4ieCvix4K8OfEX4deI7bxX4M8V2y" +
                        "apoWu6W+6KaJsggggMjowKujAMjAqwDAitjmaO0oA/j3/4L/fsq3Hw/+OXhf9qDw1pZXwh8a7ePw942u" +
                        "bZP3Vt4o0m2WJGfaoC/a7ONCvUs8MrHrX+mH0OPEKOMymplVWX73Dvmh505O/8A5LJu/ZSij/Mb6Zvh3" +
                        "LBZvTzWlH91iVyz8qkVb/yaKVu7jJn5wf8ABOD9rq4/Yy/ak8F/E6/mmb4ea2G8DfFjTrTcxl0HUJE8y" +
                        "ZUH3pLWVI7hAOW2bMgMa/cPHDw2jxRw/VwsUvbx9+m3/PHZekleL7Xv0PwzwM8S5cLcQ0sVJv2EvcqJf" +
                        "yS3du8XaS72t1P9BjStV0zXdL03W9F1CHVtG1m3h1XSdV02VJre5triMTRSxSRkq6OjBlYHBByK/wAZc" +
                        "Rh6lGpKnOLjKLaaejTWjTXRpn+02HxFOtTjUpyUoySaa1TT1TT6prY/lu/4K5/8Fc/7U/4Sf9lX9lXxP" +
                        "/xK/wB9oHxg+MGgTf8AH11im0rSpoj/AKrqtxcKfn5RDs3M/wDoD9G76N3s/Z5tm1P3tHSpNbdpzXfrG" +
                        "L23etkv89vpLfSW9p7TKMoqe7rGrVi9+8IPt0lJb7LS7f8ANX4P8H+KfiB4p0DwT4J0C68U+LvFN1Don" +
                        "h7w9okLz3V5dTuESONEBJJJ/DqeK/unM8zw+Cw869eahTgm5Sbsklu2z+D8syzEY3EQoUIOdWbSjFK7b" +
                        "eySP7dv+CXn/BLzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/ALifu8l/8" +
                        "pPH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/rL9H36PuH4Uw6xWKSnj5rV7qmn9iHn/NLrstN/1+r+a" +
                        "j+mgoA/Gf8A4Lxf8o/vEP8A2NPhn/0pkr+n/oh/8llD/r1U/JH8t/TC/wCSLn/19p/mz8P/APg3+/5Pr" +
                        "1b/ALELxB/6cdLr+sPpk/8AJIx/6/w/9JmfyV9DD/kr5f8AXif/AKVA+XP+CuP/ACkX/ae/7Cul/wDqO" +
                        "adX3/0bv+SIwH+GX/pyZ+ffSV/5LjMP8Uf/AE3A/re/4JHf8o6P2Yf+wVqn/qR6jX+cP0kf+S3x/wDij" +
                        "/6bgf6T/Rq/5IfL/wDDL/05M/R2vw8/cz+e3/g4t/5Ng+B//Y+r/wCo9qNf2f8AQl/5H+L/AOvH/t8D+" +
                        "Kvpwf8AJP4T/r//AO2TPjT/AINx/wDktf7R/wD2K2lf+nY1+ofTe/5FWB/6+y/9JPyz6DX/ACNsd/16j" +
                        "/6Ufml/wVa+HOufDX9v79pGw1q2kij8Va43xG0O6lUqlzY6/Cmpo8ZIAZUaV4iR0ZGHUGv3X6PGd0cdw" +
                        "bgZQfwQ5Guzg+XX1sn6NM/BvpF5HWwHGePjUXxz9on3U1zaejbXqmj+jX/glz/wVG/Zo8Y/s/fBz4CfE" +
                        "3x/Y/Cb4ufC3Q9M+GcWn+OZU0/TNXtNGto9Ns57O/m225d4Y4w0MjrJv3bVZfmr+IvpAfR/z7C5zisww" +
                        "tGVfDVpyqXh70ouTcpKUV71k27NJq1rtPQ/uT6Pn0g8hxWS4XL8VWjQxNCEadpvljJRSjFxk/du0ldNp" +
                        "3vZNanNf8F7P2Y9R+M37O/gb9orwJbHXNS+A0l3deI00oCb7R4U1tIGmuwYtxdbWW3ikyOBG8jk4Fd/0" +
                        "P8Aj2GV53Wy3EPljibct9LVIXtHy5k2vOSiupwfTG4AnmuSUcyw65pYVtytrenO15efK0n5Rcn0P59/+" +
                        "Can7eOrfsI/HCfxTf6dN4j+FHxAht/DfxW8MaeUFy1tDMZLe+td+Abi0MjlEYhXV3QlSwdf7L8dfCGnx" +
                        "flKpRkoYmk3KnJ7Xa1i/wC7Kyu900nraz/i7wG8YanB+butKLnhqqUakVvZPSS/vRu7LZptaXuv7YPhT" +
                        "+2t+yd8avDVn4q+Hf7QPhbVrC7jW5l0+/1iz07U7Tf/AA3VjqDw3MDZ7SRrntkc1/lbxF4V8R5VXdLE4" +
                        "KrFrqouUX6SinF/Js/1c4c8V+G81w6rYbG0pRa2clGS/wAUZNSXzSPUP+F4/BT/AKLB4W/8KDSf/j9eB" +
                        "/qnmv8A0DVf/AJf5H0H+t2U/wDQVS/8Dj/meh6Xqul65p9pq2i6lb6xpV+nn2Op6XNHcW8yE43RyRFlY" +
                        "cdQa8XEYepSm4Ti4yW6as16pnt4fE060FOnJSi9mndP0aPgz/gqloV74i/4J7/tS6fYKXnt/Dq67IFBb" +
                        "9zpepWupzHA9I7djntX6/8AR7xkKHGmXyls6lvnKLivxZ+O/SIwc6/BWYxjuqd/lGUZP8Ez+N7/AIJg/" +
                        "FDwz8HP28/2cPH3jLXYfDPhmy1e80DVte1Ioltaprui3ugq8zyELHHuvAHkYgIuWJAGa/058fMgr5nwf" +
                        "jsPRg51HBSSW75JRnp3fu6Lq9D/AC8+j/xBh8r4xwOIrzUKam4uT2XPCUNX0Xvavoteh/YF/wAFbJYp/" +
                        "wDgnH+01PBKs0E2k6TLDNEwZHRvEWnEMpHBBHQ1/ml9HCLXHGAT35pf+kTP9NvpJyT4Gx7WqcI/+nIH8" +
                        "p3/AARd/wCUlv7Nn/c4/wDqA65X+hv0o/8AkhMd/wBwv/T1M/zq+iv/AMl7gP8AuL/6ZqH75f8ABWr/A" +
                        "IKofFf9ib4j/D74M/Bbwhot94m8SaDH8SfEXirx5BdXsEVldaleaZb29rb2lza4k32ErSO7MNpUBc5I/" +
                        "j36OX0e8u4rwNbG46rNU4T9nGMGk7qMZNttPS0lZK2t7vof2T9JL6RGZcJ46hgcDSg6k4e0lKabVnKUU" +
                        "kk463i7t30tZdT0P9hf/gsz+z/+0j4Z0vw98cvEej/AT44xH7FqWk69ctY+HNVfICzadfag5SPzCQPs8" +
                        "8vmBuFMg+avE8W/ov5zkdeVTAQnisJumlecfKcYq7t/NFWtq1HY9vwh+lLkue4eNPH1IYXF7NSdoS84S" +
                        "k7K/wDLJ3vonLc/Q74v/Az9lf8AaF8MHWPjL8PfCHxK8OLFm38X+IrfT5mt4mxHug1NSskIOQN0cq9ua" +
                        "/FuGuLeIclxHJgq9WjO/wAMXJXfnDZ/NM/beJuEeHc7w/PjqFKtC3xSUXZeU918mj+PH/gqV8BP+Cd/w" +
                        "R1vRLP9j34tXHiTx5d3rReMvhroWpR+JvDmk6eIZDvTVizyJcLKFQ27TTtgksYyoD/6ZfR+4w41zalOW" +
                        "c4ZQope7UcfZzlK6+xs4215lGK2tzX0/wAw/pC8G8EZTVhHJcS51nL36al7SnGNntPVqV7LlcpPe/LbX" +
                        "6W/4N0rvxQn7UPxusbRp/8AhCrnwC934gWMH7MdUh8Q6amnmQ/3/Klu9ntur4T6bVPDvh/CSdvaqvaPf" +
                        "lcJ81vK6hf5H3v0H6mIXEGLjG/snQvLtzKcOW/nZzt8z4L/AOCuP/KRf9p7/sK6X/6jmnV+v/Ru/wCSI" +
                        "wH+GX/pyZ+O/SV/5LjMP8Uf/TcD+pT9lb41W37Of/BID4YfHG60V/Ea/DP4eSeJ4NAhlEH2y4inmWCFp" +
                        "SG2I8jKHfaSq5IBIwf8/vELhaWd+JeIwCnye2xHLzb2TSu7dbK9l1fVH+hPh3xXHI/DLD49w5/Y4fm5d" +
                        "rtN2V+ibtd62XRn5W/sz/8ABwl4/uPilHp37V3gTQrT4T687Qf8JF8KdP1KLUNAdz8krwXV7dm7t16SK" +
                        "oEoGWXeR5bf0Hx59DDBxy/myitN4mP2ako8s/K6jHll2b93o7br+eOAfpq42WY8ub0YLDS+1TjLmh2bT" +
                        "lLmj3S97qr7P+kH4f8Axp/Zx/ac8KFvh/8AEHwt8ZPC+tRbb3RrK6sNS3Iy7jHdWM26SNgOWjmjDDuK/" +
                        "h7OeFs8yHEf7RRq4epF6Npx+cZLR+qdj+6Ml4qyLP8ADf7NXpYinJapNS+UovVejSZ+Tf7eX7Dn/BIfQ" +
                        "fDfiDxR8WNT0T9mLxXHFLd2tz8I9St9P1SeVQSI7fw5CLiG4y33lhtA2P41HI/ovwg8WfEmtXhSwkZ4y" +
                        "ndL95FyivN1XZx9XO3k9j+b/GLwj8M6NCdXGShgqlm17KSjJ+SpK6l6KF/Nbn8bF01tZa3ct4bvrmezt" +
                        "Lp20HU54haXjxxzHyJWjhllEchADFVkbaeAxxmv9PKalKkvapJtardbaq7Suvkr9j/Lqo4wqv2TbSfuv" +
                        "Z76Oybs/Ru3c/00fh1J4gl+H3gSXxYsieKZdG0uTxKl4u2Yag1lEbgSDs3mbsj1r/BzO1RWNrKjb2fPL" +
                        "ltty3drfI/3xyOVZ4Ki61/ackea+/NZXv8AM7KvMPUCgAoA+Y/2sP2T/hb+1/8AC2/+G3xJsPJuYfMvv" +
                        "BnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxGftQfsv/ABS/ZM+KWqfC74o6X5NzDuvfDfiSy" +
                        "Vzp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6YyufTH/BPP/goZ41/Yu8ajSNXNz4r+A/iu5STxv4IjfdLZy" +
                        "tiM6jpwkIVLhFA3pkLMoCsQQjo4ysTOFz+0P4d/ETwV8WPBXhz4i/DrxHbeK/Bniu2TVNC13S33RTRNk" +
                        "EEEBkdGBV0YBkYFWAYEVsczR5V+1d+zf4N/ay+AvxA+Bfjb/RrDxfa50fXI0DzaVq1swnsr2IZUkwzKp" +
                        "ZQRvTchOGNfbeHfHGK4czijj6GrpvVdJRekov1XXo7PdHxHiNwLheJMmrZfX0VRaPrGS1jJej6dVdbM/" +
                        "wA7/wCNHwf8d/AL4peNvg98S9HfQ/GvgK+k0TWbJwdj7QHinhYgb4Z42WWJxwyMrDg1/tTwtxLg84y+l" +
                        "jcLLmpVY3T/ADT7NO6a6NNH+JPFXDGMybMauCxUeWrSlZr8mu6as0+qaZ9i+Hf+Cnn7T/hX9j6f9jrQf" +
                        "Ev9n+FpJpbC28dwyTDXbbw3PGRJosEwPyW7OT84+cITECE4r8yxvgJkGI4mWdVKd6lr8mnI5rao11lbp" +
                        "tf3nqfp+B8f+IMNww8lp1LU7tc+vOqb3pp9I367291aHwf4P8H+KfiB4p0DwT4J0C68U+LvFN1Donh7w" +
                        "9okLz3V5dTuESONEBJJJ/DqeK/XszzPD4LDzr15qFOCblJuySW7bPx7LMsxGNxEKFCDnVm0oxSu23skj" +
                        "+3b/gl5/wAEvPC37Fnha3+JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgff+4n7vJf/KTx+" +
                        "8fsRxTiHhsM3DAQei2dRr7UvL+WPTd67f6y/R9+j7h+FMOsVikp4+a1e6pp/Yh5/wA0uuy03/X6v5qP6" +
                        "aCgAoA/MH/gsB8EPiX8fP2H/Hfg/wCE3hi48Z+L9H1LR/GcfhXR0Mt/e2um3Je4S1iX5pplRy6xLlnwV" +
                        "QMxCn99+jTxXgMn4so1sZUVOlKMocz2TktLvor6Xei3dldn8/8A0m+EsfnPCVajg6bqVYyjPlWsmovXl" +
                        "XV21stXayu7I/Gz/gg9+yn+0B4L/aZ8a/GP4gfCrXPh34D0PwpqHg+PVPHemXmkve6nqV/Yyxw20V/HE" +
                        "8oWO3keR1UquACQWFf079LzxDybFZDSwWHxEKtaVWMrQkpWjFSTbabS1aST1ettmfy79D3w6zrCZ/Vxu" +
                        "Jw06VGNKUbzi43lKUWklJJvRNtrRaX3R89f8Fev2Mv2k7r9uv4nePfB3wb8SfEPwX8XW0nxB4P8QeA9F" +
                        "1HV4Xkj0ez064tpjp8MoimjuIHARiCUKsOvH2n0a/FDIo8I4fD1sVTpVaHNGUZzjF/FKSa5mrpprVdbr" +
                        "ofE/SY8LM+lxfiMRQwtSrSr8soyhCUl8MYtPlTs1JPR7qz6n9RP/BPP4ReMvgR+xb+z38LPiFYjS/Gvh" +
                        "rQzP4j0jIZ7K51K+uNVNtIVJHmQi5EcmCRuU4JHNfwD408S4XN+Kcbi8M+alOfuvuopRuvJ2uvJn+gvg" +
                        "nwzisn4VwWExK5asIe8uzk3Kz81ez80fZtfl5+pn4p/8F0v2f8A4s/Hb9lXwdL8I/Bt74+1P4b+K7fxf" +
                        "4i8N+GYJbzU202TS7zT3mt7aBWkm8uSdN6oCwUlsbVYj+p/ok8ZZblHENVYyqqUa1JxjKTtHm5oys29F" +
                        "dJ2b0vpu0fyn9LzgzMs44dpPB0nVlRqqUoxV5cvLKN0lq7Nq6Wttdkz4S/4N/PhB8Wvhr8Yf2gr74i/C" +
                        "7xF4BstT8NaZaadeeNdE1PSoriVNULskb30MQdgOSAScV+u/TJ4ly3HZZgo4bEU6rVSTahOMre71s3Y/" +
                        "H/oYcMZlgM0xssTh6lJSpxSc4Sim+bpdK5+vP8AwUL/AOCbvwu/b18J6bPqWonwF8Y/BtvLZ+BPiZZQC" +
                        "4Agd/ONjfwbkM9qzksoDBomJZDhnR/5s8FvHLMOD8TJRj7XC1HedNu2u3NF9JW30tJKz2TX9MeNngVl/" +
                        "GOGi5S9liqatColfTflkusb7a3i3dbtP+Rb9oX/AIJY/tt/s6a3PY658F9S+Inh4yeRpvjn4O2114j0y" +
                        "5UnAdlsYjc2+Txi5hjOemcjP+kfBf0g+FM7pKVPFRpTtrCq1CS+98sv+3ZM/wA0+Nvo8cWZHVcamElWh" +
                        "fSdJOpF/cuaP/b0Uf1Mf8EZ/hJ8bfhx+w9D4L/aM8P3+lPrevazqPgrwL49iYXVh4UvbKzhS1ns7td8K" +
                        "SXKXUohkUHbJkgBsV/n39KDiTKsdxY6+WzjLlhFTnDZ1E5PmUlo2o8q5l1Xkf6F/Ra4azbA8JKhmcJR5" +
                        "qknCE91TaiuVxeqTlzvlfR7an5i/t2f8EF/FMev618Sv2KJLfV9C1SWXUr74F+IbyKzurCSRt5TSby8Z" +
                        "IZIOTtiuJEZAMB5M4H734R/S/w7owwueXjONkq0VdP/ABxWqfnFNPsuv4B4v/Q7xCrTxWRWlCTbdGTSa" +
                        "/wSejXlJpru+n4V+JP2Lv2vfCOqT6N4h/Zg8faff25KlR4S1yaKQA7d0U0Fs8ciZHDIxB9a/rfA+KXDW" +
                        "JpqdPMKDT/6eQT+abuvRq5/IeO8K+JsNUcKmX101/06m18mlZrzTsYH/DK37T//AEbh49/8I/xD/wDIl" +
                        "dn/ABELIP8AoOof+DYf/JHH/wAQ74g/6AK//gqf/wAif1S/8EC/g3+0b8JvhF8b5vjL4Z1rwN4D8Vato" +
                        "918LfB/ji3udPuUura3vE1W8js7xI5Y4rgSWqhyAHMZI6En/Pf6YnE+R5jmWEWCqQqVoRl7SUGpKzceS" +
                        "LkrptWm7dL6n+iH0NeF88y3LMW8dTnSoznF04zTi7pS55KLs0pXgr9eXQ/d7xL4c0Pxj4c8QeEfE+mR6" +
                        "14a8VWV34c8Q6PeAmG7sb6BrWeFwCDtkjdlPPQ1/IeAx1XC14VqUuWpBqUWt007pr0Z/YOPwNHFUJ0as" +
                        "VKnOLjJPZpqzT9Vofwt/tvf8Em/2kP2X/iRqUfgDwDrXxl+DOu3c8ngDxl4G0+51e8gtmYvHaapb6fE8" +
                        "kFzEmFMhQRS/eQ53In+tvhR9IvI8/wMXiK0MPiopc8ZyUU31lBydnF9r80dn0b/AMiPFn6OGe8P4+Sw1" +
                        "GeIwsm+ScIuTS6Rmoq6kl1tyy3T3S/br4O/swftVeI/+CJXjz4B+N9Dv5Pi94hsb7Ufht8O/FbPDqtlo" +
                        "tprFrqVnpki3ZBildbWQwQuRsEiRnZghf5S4m4+4eoeK1HMKE4/VoSSqTjrFzcXGU1bdLmXM1vZtX3f9" +
                        "ZcL+H/EVfwnrZdXhL6zOLdOEtJKClGUYO+zfK+VPa6TtsvzK/4I1fseftK6F+3b8Pvif4y+DHiP4f8Ag" +
                        "n4RW/iK88V654+0e/0aLztR8OahoMFtAdRih82Yy3isUTJVVJOBiv3n6T3iZkVbhGthaOKp1atdwUVCS" +
                        "k7RnGbb5W7K0d3u2kj8C+i54Y59R4woYuvhalKlQU3JzjKCvKEoJLmSu7y2WyTbP6Kv+Cgv/BOr4Xft6" +
                        "eCNOttavj4H+LHg6OZPh/8AE2wgE7wJL872d7DuTz7R3w23cGRvmRhl1f8AifwZ8bMw4PxcnBe0w1S3P" +
                        "Tbtf+9F9JJfJrRrZr+3/GnwPy/jHCRVR+yxNO/JUSva/wBmS6xb17p6p7p/yEftD/8ABK/9tv8AZy1PU" +
                        "I9e+DOo/EDwtZlmt/H/AMIYLjxDpc0Iz+9dbOL7Tbrxz9phj/Ign/Sjgr6QfCmeU4unio0qj+xVahJPt" +
                        "q+WX/bsmf5ncbfR44syOpJVMLKrTX26Sc4td9FzR/7eij4f/wCFd/ED7V9h/wCEG1j7b5n2T7H/AGZe+" +
                        "b5u7Zs2eXndnjGM5r9Y/trB8vN7aFt78y/zPyT+xMbzcvsZ32tyu9/uPtL9n3/gl7+2z+0bqWnR+F/gn" +
                        "qngzwzfMpl8ffFa3uPD2kRQt/y2Vr6NZ7hO3+jRSnPbg4/LeM/H7hTJISdXFxqVF9im1OV+2jtF/wCJx" +
                        "P1Xgv6PvFmeVIqlhJU6b+3UThG3fVXkv8Kkf2Sf8E//ANg74f8A7BvwluvBfh3UT4t8eeLpoda+JvxDu" +
                        "bdLeTUrqGMxwwwxgsY7S3Dt5UbMxyzsTliB/mJ4yeL2N4vzJV6kfZ0aaapwvflT3bfWUtLuy2S6H+ong" +
                        "x4PYLg7LXQpS9pWqNOpO1uZrZJdIx1srvdvqfzJf8Fbf2NP2ntS/bv+Kfjbwp8EvEnj7wj8W59K1rwR4" +
                        "h8A6NqGs21xjSbPTpIJG0+KURTpNCymOTBIwwyrA1/ef0cPE/IKfCGHoVsXTpVKCkpxnKMWvelJNczV0" +
                        "0915rdH8C/ST8LeIKnGGIr0cJUq0q7i4ShGUk/djFp8qdmmno/J7M/qR/ZB+Al54L/Yb+DX7PXxs8NWt" +
                        "/cxeDYvB3xJ8G6j5d1bFdRgkN3YzbCyPtWcxPtJUkHBIwa/z+8SuMI4ri3FZjgajS9s5U5LR+61yyXVb" +
                        "XXXuf6EeGXBssLwjhctx1NN+xUakHqveT5ovo97O2nY/nP/AG1P+CDHxe8B63rfjf8AZElX4qfDu6ke+" +
                        "g+GOq3UVt4m0lHYsYYJbtkhvoYx91jIk2MLskYFz/bfhZ9L7LcZShQzj9xXWntEr05ebSu4N9dHHreK0" +
                        "X8PeK30O8zwdadfJv39Bu/s20qkfJN2U0ujupdLSer/AA+8Z/AT45fDrU30Xx98HPFPgvVoyUOn+KNA1" +
                        "WxlOO6i5gTcO4IyCORX9YZXxhlOOp8+HxVKpHvGcX+TP5KzXg7N8DU5MRhatOXaUJL80anw/wD2af2hv" +
                        "itqMOlfDf4H+K/Gt7M/k48PaBqdxHGcgEyypD5cajIyzsAO5rnznjrJcug54nF0qa/vTivuV7v5HRkvA" +
                        "ed5jNQwuEq1H/dhJ/e7WXzP6Kv+Cb3/AARD8X+DvHfhT47/ALYUVnp8nhG4t/Efg74H2E1vqLyX8DCWG" +
                        "bWJ4TJb+XE4DrbxM+848xgoaN/4n8cfpXYbFYSpl+TXftE4yqtOOj0app2d2tOZpW6JuzX9v+Bf0TMTh" +
                        "cZTzDOrL2bUo0U1L3lqnUavGyevKm79WldP+oCv4EP9AgoAKACgAoA+Y/2sP2T/AIW/tf8Awtv/AIbfE" +
                        "mw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/EZ+1B+y/wDFL9kz4pap8Lvijpfk3" +
                        "MO698N+JLJXOna1pxcrHd2kjAZU4wyn5kbKsARWLVjpjK59Tf8ABOX/AIKF+J/2MPHEmheJTdeJvgL4y" +
                        "mU+MPCkLl5NMuW2oNTsEbgSqoAljGBKgwfmVCrjKxM4XP7QPBHjfwl8SfCXh/x54D8QW3inwf4pto9X0" +
                        "DX9IkElvc28g4ZTwQQQVZWAZWBVgCCK2OZo/Iz/AIKlf8E7fDP7d/wxsfjP8EbrT7z47+CdPlbwprGkz" +
                        "wS2fi7SYDJL/Zb3MT+V5gcsbWYnarko5CsWT+mvo6eOs+F8Z9VxTbwNV6/9O5PTnS7fzJbpXWqs/wCYf" +
                        "pH+A0OKcH9awqSx1GOn/TyK15G+j/kb0TdnZO6/jI0/4Q/FPVPiTD8HLH4d6zN8Vp74eGl+HTaddJrK3" +
                        "+dpge0kRZEcdWDKMDk4HNf6k1uJcvp4F42VeH1dR5ufmXLbvzbP5H+VdHhnMamPWCjQn9ZcuXk5Xz83b" +
                        "l3T9dj+1X/gl5/wS88LfsWeFrf4kfEi3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/7ifu8l/" +
                        "wDLHx+8fsRxTiHhsM3DAQei2dRr7UvL+WPTd67f6sfR9+j7h+FMOsVikp4+a1e6pp/Yh5/zS67LTf8AX" +
                        "6v5qP6aCgAoAKAPCf2mfjvpP7MnwO8ffHbX/DGo+MdC+HcFtqms6B4T+znUJLae+gsnkiF3JFGRCJvNf" +
                        "c4+RWxk4B+u4D4QqZ9m1HAU6kac6raUpX5bpN2dk3ray03aPj+PuMKWQZRWzCpTlUhSSbjG3NZtK6u0t" +
                        "L3euyZo+Efjn4H8XfADQP2kIJ5NO+HeueE4PjFJLehPPtNKk0oavIJVRiokijyHAOAwIzWGZcJYvDZzP" +
                        "LGr141XS02cublVvJvbyOjLOLsJicmhmabVCVJVdd1Hl5nfzS38zxb9iD9t34bft2fDTxL8SvhvoGqeF" +
                        "bXwprcvgjVtA8ZCzF6ssdlbXyTAWM86eVItztUlgdysMcc/VeK/hTjuEcfTwuJnGbnDnTje1rtW1Sd1b" +
                        "XyaPlPCXxZwHGGAqYrCwlBQm4OM7XvZO+jas76eaZs/Bj9r7wT8dPj/APtFfATwX4Z1Q3X7NNxYaJ438" +
                        "c3n2MaTPqN95ii1tvKmeUuj286vvRcGM+orl4o8NcXlGTYLMK9SNsYm4QV+ZRVtXpazTi1Zvc6uFvE3C" +
                        "ZvnWOy6hTlfBtKc3blcnfRa3umpJ3S2Z9a1+cH6SFABQAUAFABQB8I/8FEf2x9S/Yb+AVn8aNK8BwfEW" +
                        "6uvEGneCT4f1C/k02NUvra7uDL5scFwcr9mxt28568V+u+CnhjT4tzh4GdZ0kqcp8yjzbOKta679z8f8" +
                        "bvFCpwjkyx0KKrN1Iw5XLl3Une9n27H3dX5EfsAUAFAHz1+1V+0X4X/AGTfgL48/aB8Z6Hf+JPDXgD+y" +
                        "/7S0XwwLc3039q6zaaJH5X2uSKP5ZLxWbLD5Qcc4FfaeHvBOI4jzijl1CcYVKvNZyvZcsZTd7JvaNttz" +
                        "4rxE44w/DeTVsxrwlOnS5bqNrvmnGCtdpbyT32Plb4h/wDBRjVvBtx4Ofwt+xJ8aPjFoPjXw3oPxJ0zx" +
                        "d8JvCMusaUsOvaemoJatc27lDPCsgWVVJAPc1+hZL4JU8Uqvtc1weHnTqTpuNSpyyvCTjez1s7aH51nf" +
                        "jjUwrpeyynGYiFSnCopUqXNG04qVrrS6vZ+Z4N8P/8AgszpnxZ0J/FPwr/YS+OXxL8Mx3EmlSeI/h/4T" +
                        "j1mwW6hVXkhNxp080YkUOpZd2QCMjkV9fnP0X6mXVvZYvN8FRqWvyzqcrs9naSTtpufH5L9KWnmVH2uE" +
                        "yfG1qd7c0KXOrrdXi2r6rQ/ZvT7pr6wsb5rWSya8hiumsrxdk0JkQPskXsy5wR61/L1anyTcb3s7XWz9" +
                        "D+paNTngpWaur2e69T4y/4J/wD7Wuo/trfs7ab8ctU8EQ/D67v9W1Tw2fDthfPqMarp0qxiTzpIYCS+7" +
                        "pt4r9R8ZPDiHCudywEKrqpRjLma5fi6Wu/zPy3wY8SZ8V5JHHzoqk3OUeVPm+Hrey39D7Zr8qP1cKACg" +
                        "AoAKACgAoAKACgAoAKACgAoAKACgAoA+Y/2sP2T/hb+1/8AC2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3" +
                        "FuzYypwBLETtkXg4IVlTVyoysfxGftQfsv/ABS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXKx3dpIwG" +
                        "VOMMp+ZGyrAEVi1Y6YyuXfht+2B+0N8I/hB8QPgX4A+I13oPw5+JGP7c0mA5lt9/wAtx9imPz232lPkn" +
                        "8sjevBouDij7U/4Jmf8FC/i3+zV4o0z4JW3grUPjX8NvH2pRQ6T8O9AYvrWn6lduI2k0kSZRvN+9JbuV" +
                        "RmG4NGS7M4ysTOFz+x2zhguDb6zNpP9n6rc20cMwu1tzdwxn975EkkDSKdjE5Cuy5yQT1rp9rLl5bu29" +
                        "ul+5xeyjzc1lzWtfrbsaNQaBQAUAFABQB5n8afhtp/xj+D/AMUvhLqpRdP+Jfh7WPAtzNMCRENV0+WyE" +
                        "nAJBQyBgRyCARzXvcLZ5PLMzw+Mh8VGpGf/AIDJO3ztY8DirIoZplmIwc/hrU5Q/wDAotX+V7n81ngX9" +
                        "ozxJpv/AAQz8V/CYNJH8XrLxTe/sRWeiXBC3b3mt60L17NlJ5I0y7mhXH9zHYmv7pzfgihU8WqeM/5hn" +
                        "SWLb6WhC3N/4MipfP0P4QyjjivT8IqmD1+tKq8Il1vOd3H/AMFycfl5M+k/2LrDw9/wT5/bR/bN/Z21S" +
                        "6Fn8N7L4XeFP2hdAmYeWk8Hg/QIbLVp4y+MvLLPOzk8t5e49DXwvilWrcZ8LZXmUFeu8TUoy8nVm3BPy" +
                        "SUUu17H3fhXRocFcVZrlk3agsNTrx81SglNrzbcm+9rnhv7Pn7Qni39jT/gmx4y/a5XTbK+/aH/AG8Pi" +
                        "dqup+CT4nfy7WG81W7ureK5u/NZM29v9iu7pWYhWMqBiFavrOM+C8NxRx1SyfmawWWYaKny7tRSbUf70" +
                        "uaEdNVyuyuj5HgrjXE8LcB1c55YvHZniZOHNsnJtJy/ux5Zy10fMruzO3+NPxs/aK/ZD+G+i/tMaJ/wU" +
                        "48M/tXeKvDl7pMnxk/Z6nk8InS9VstSvYbSePRotJma4iMDzKN0aK2wNKdoUxnyuFuFck4lx08rqZBUw" +
                        "NOal7Kv+95ouKbTqOS5XdJ6NtXtHVtSPW4q4szzhnAwzSnxBTx1SDj7Wh+65ZKTSapqL5lZtapJ2vLRJ" +
                        "xf9Efg7xTpfjnwh4V8a6G5k0Xxhptj4p0eSTG5rXULVLuInaSMlJB0NfxTmeX1MJialCp8dOTi/WLs/x" +
                        "R/buV5jTxeGp16fwVIqS9JK6/Bn4OfDfxl+35+11+1H+2/8B/Av7Tr/AAP+EXwP8aX9ifiBa+H9N1bWo" +
                        "ILme5tdN0bT1kFqqwqLSWaeYyGUYRdwDc/17nmV8HcN8P5TmGIwH1nE4minyc8owbSTnUlvr7yUVbl3d" +
                        "tD+PMizTjPibiHN8vw+YfVsNhqzXOoRlNJtqFOO2nutyd+bZX1OX/Z2+IH/AAUk/aK+I3xx/Yb1n9pvT" +
                        "vh1f/su6rdW3xA/ab0TQLO/8U6/YXM5g0m0gtXeCCIOIZJpbgETBdiMSwYv6HG2TcDZJgcJn0MBKqsbF" +
                        "cmHc3GnBpXnJvVu10lHWN7taWt5/BGdcd55jsXkE8wjReCk+fEKClUmm7Qio6JXs25aStZPW9/rn/gnH" +
                        "+0B+0Be/GX9qr9jH9pnxvD8VfHv7NF7p1z4V+KsNpHZ3Ws6LqSuV+1R242B0QwOuS0n7xlZm2bj+beN/" +
                        "BuTQyvLs7yuk6FHGKXNTvdRnH+VvXV8y6L3U0lex+leBnGmdTzTMcjzWsq9bBuPLUtZzhL+ZLS6XK+r9" +
                        "5pt2ufLH7V3if4//s7+H/HvjvVv+CxOiTftCeBba78XaT+z5Po/g3TbG/hs42uBpX9lxzzTedNGuyGSW" +
                        "ImR+MAncv6F4d4DJs7rUcPDhmf1Kq1F1uarJpvTn57JWT1aT0XpZ/nniNmGdZJRrYifFEPrtJOSoctKK" +
                        "klrycl27taJtavTrdcP/wAFPfjtdftNf8Ed/gF8dNR0yHRtX+IXiTw1qWvaZp3mfZotRt7PWLG7EImJY" +
                        "RGeBygYkhcAlup9bwD4RjkPibjMBGTlGlTqJN7uLdNxvbrZq/n0R5H0gOMJZ/4YYLMJRUZValNtLZSSq" +
                        "KVr62unby6vc+xdL/aG+O37eX7Uk/g/9lP4hXXwu/Y6/Z+vpNK+Mnx48OW2nXF14z15ArtpOkSajFcp5" +
                        "KoV/fInCsZCSGgD/mOI4LyjhDh9Vs2oqtmeKjelRk5JUofzzUWne/2W91y6Wm1+oYfjbOOMeIXQyiu6G" +
                        "V4WVqtaKi3Vn/JTck1a32ktnza3gnxXx0/an+I3x1/bK+JP7LfgP9qzRP2NPgx+z9Y2J+J/xR1CbQo/E" +
                        "PiLX9ShE66fpra9KixxQAkSPGAysjbiwdBXq8I+HuByjhihmuIy6eYYrFSfs6aU+SEIu3NPkWrfRPRpq" +
                        "1rM8ni/xEx2ccU18pw+Ywy/C4WK9pUbhzznJX5Yc70S6tapp3vdHXfsOftP/E6w/a1+J/7E/wATPj9pX" +
                        "7WHh7TPDUXxe+Dfx98N/wBkm7ksFuYLO50zUjosksLzRtPkMzb/AJCWJWRFTzfFngHAT4cw+eYXBywM3" +
                        "U9lVoy5rXs2pw50mk7bLTVW1Tb9Pwj8QMwhxJiMixWNhjoRp+1pVo8t+W6ThPkbTavu9dG27SSXqP8Aw" +
                        "Wi/5RpftJ/9yd/6n2h18/8ARc/5LvA/9xf/AEzUPofpUf8AJBY//uF/6epn2Z+yt/ybB+zh/wBiF4P/A" +
                        "PUetK/MPEL/AJH+O/6/1f8A0uR+peHf/JP4D/rxS/8ASIn5c/8ABv8Af8mKat/2PviD/wBN2l1+/wD0y" +
                        "f8Akro/9eIf+lTP57+hh/ySEv8Ar/P/ANJgfuBX8oH9an8rn/BLH4Kftt/HT9jVrL4RftSRfst/C/wtr" +
                        "etweD4/Dfh+31fVvEetyPHczz311cTRtbWkRZIUSHJY7yykBc/6EfSD4q4UyjifmxmXvG4icIc3NNxjC" +
                        "GqSiknzSerbe2iT3t/nf9HjhTizN+F+XB5gsFh4Tny8sFKVSejbk21yxWiSW+ra2v8AqF/wTh/aZ+Pv7" +
                        "UH7O3xz8D/E7xBZaV+018C9b134KX/xCtrCCW0k1KG0ZLLUprWJIoJGiuN4kjRVVxGDtG81+A+OHAeT5" +
                        "BneEr4WDlgMTCFVQu78rfvQTd2rxtZttq++h/QXgZx9nPEGR4zD4qcY5hhpzpOdlbmS92bSsnaV7pJJ2" +
                        "2Vz4B/am+O3xz/Y70S6+K3hr/grRoP7RPxj8D6jYf8ACf8A7Nerad4ShtdWtrnUIbS4trfT9InnktHh8" +
                        "zfIgCSCIM6uhUbv2Tw+4RyniaqsJV4cnhMLUjLkrqVRuLUW03KSSknayeq5rJp30/GPEPi/N+GKTxdLi" +
                        "SGLxVKUeeg40kpJySaUYtuLV7taPlu01bX6d/4KMftiftEeB7D/AIJ4+Kf2WdTGmax+0rqaLB4G1aO2m" +
                        "s9al1m00d9Msrx5ohIIxLfgOY2jYgnkcEfA+CPhlkmLnnVLNo80cHH41dOCi6nPKNna9o6XuvJn3/jj4" +
                        "n53hIZJVymXLLGS+B2am5KnyRldXteWtrPzRxX7Tegf8FMP2KPhuP2vW/bLj/aEh8E3Gn6p8bPgjrXhb" +
                        "TtL0B9OvLqK1lTTmtS0gihkmVS6rDJszJkYKH1eA8ZwJxVjv7G/sv6q6ikqVVVJSnzJNrnvpdpXs3JX9" +
                        "3szyuPsFx7wpgP7Z/tVYtU3F1aLpxjDlbSfJbWybtdKLt73Sx0/7b/7ZH7RFr4w/wCCZ+v/ALH+vrbxf" +
                        "tiWOty2fgjxZDbPpN1Jqmm6E+lT6gwgedFsW1hpphG4yI8Eda8/wo8Mcklhs+p5zC7wEoXnFvmXLKpzq" +
                        "Otnz8lldPe56Hi14o53HFZBUyWdlmEZ2hJLlfNGnyOWl1ye0cpWa2scX+06/wDwUa/4J5eF9F/av1D9r" +
                        "lv2qvh5o+paXYfHj4WeLPDOm6LZx2mo3SWYl09rMzGCMzSrErRmNkdkLLIpZB6vAS4I41xE8ojlv1KvK" +
                        "MnRqRqSm7xV7Sva7sm2ndNJpOLszyuP3xzwTh4ZxLM/r1CMoqtTlTjBWk7Xja9ldpK1mm02pK6PZf2uv" +
                        "22/F3in41fAH9l39n/42aH+zlYfF3wpB8e/iJ+0f8QBpTf2R4Xv0k+xWunxatKlu15ceWSQxyNyFWA3s" +
                        "Pl/Dbwpw2HyrGZrmOEni5UKrowoQ5veqK3M5OK5uWN/wd09EfU+JfixicRmuCynLsXDCRxFJVp158vu0" +
                        "3flUVJ8vNK34qzWrPP/AITftKfE39nb9tX4I/s9a7+2Jpv7bXwK/aVttT0vQ/Egl0C68Q+E/EenQ+cqT" +
                        "y6DLKXguC0ar5pAIdioHlMX9niPgXAZ3wri8xp5ZLLsXg3FuPvqFSEnbRTSs46vTsrt8yt4vDfHmPyTi" +
                        "vCZbUzSOZYPGKSUvcc6c4q+rg3dS0Wvd2S5Xfj/AIZfET9vz9rX9rP9uH9nbwH+0rH8GvhD8FfGVxFff" +
                        "EKDQtN1TxDp1jcXV7Z6do2mJIIEWOX7HLJJOzeYvlgBvmKt6efZJwdw5w5lOZYjAfWMTiKKtDnlGEmlF" +
                        "zqT3d1zJKK91320uvMyDPOM+JOJM3y3D4/6vhsNWd58kZTim5KFOC0VnytuT95WWutn9GfsAfHH9pfQ/" +
                        "wBpv9pb9hb9qLx2vxj8TfBKx0zx14C+Ly2Vvp8+oaJfrbsFuY4B8zMt9AylmZkYSIzuApHxHjJwnkVXI" +
                        "cBn2VUfq9PEylCdK7kozV9m/wDDJdE1ytJan3Hgxxdn1HP8fkGbVvrFTDRjOFWyi5Qdt0t/ii+rT5k29" +
                        "D9g6/mg/pwKACgAoAKACgAoA+Y/2sP2T/hb+1/8Lb/4bfEmw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAE" +
                        "sRO2ReDghWVNXKjKx/FZ8dP2NPjv8Bvjvb/ALPuv+D7nX/GWv3KWnw8m8NQS3Fv4lt7iXyoJ7AgZYMeH" +
                        "U/NG2Q+CDWLR0qSaP6lv+Cbf/BNvw1+yB4ag+IPxBgtvEv7RHiW28vVdVj2z23hy2nX5rCwbkFyDiecf" +
                        "f8Aur8mS+kY2MJzufqzVmYUAFABQAUAFABQB/MPpX7J3xdT/grrq3wxfwNqo/ZeX4mR/tuHxYNOvV0Ma" +
                        "xD4fl1WNEuCn2ct/aF0Lcx5yApwMV/e+I8RctfhtHFe2j/aH1b6py8y5+VzUXpfm+Bc1/M/gHD+HGZrx" +
                        "LlhfYy/s/6z9b5uV8nMoOS1+H45ctt9D03/AILbfBv413PxJ+B/xg+AHgjV/GniLx54V8X/ALMfxEtvC" +
                        "WnXl+66Nq8WLZZ/scb7I2OpXR3PhQwHXJx4P0VOJ8qjgcXg8xqwpwpVaWIhzSS96L1tdq79yGi1se99L" +
                        "HhbNZY/CY3LqM6k6tKrh58sXL3ZLS9k7L356vS6R9F/8FBP2EvGHiv9gj4FfCX4HeG7Xx14v/ZPuvC3i" +
                        "PRfA12kbxeJbXQtKk0m9t/Km2JK84l89lYgybWUZZwD8T4M+LuGw/GGLxmPqOlSxyqRc1vTc5KUXdbJW" +
                        "5U1tdPZH3HjT4P4rE8G4PB4CmqtXAunJQe1RQi4yVna7d+Zp72a3Z8y+D/jP/wTE8QWui6Fq/8AwS38S" +
                        "aX8Xro22n6/8JdK+EKX9/ZX0v7uRVcLD5kKSK4DlVcqpPlg5UfeZnwtx9RlOpDiCnLDK7VR4mya6d7Nq" +
                        "2l2rv4up8FlfFXh/XjCnPh6pHFOylSWF5pJ9e10nfWybS+FPQ/oo0bR9K8PaRpWgaFp0Oj6HodtBo+ja" +
                        "Tpsaw29raW0SwQwxRoAqoiKFVQMADFfxPisTUr1ZVKknKcm229W29W2+7Z/b2FwtOhSjTpxUYRSSS0SS" +
                        "0SS7JbH5Qf8E6/BXjLwv+1J/wAFQtY8S+EtT8O6T4u+JVtqvhTVNdsLq0t9UtRLqxM1pJcIizxjevzRk" +
                        "jkc81/RXjZmuFxHD/D8KVSM5U8O1JJpuLtDSST0fkz+cfA/KsVh+IeIJ1aUoRqYhOLcWlJXnrFtarzRz" +
                        "P7C3gXxv4e/4KNf8FOPFHiDwdquh+GfFupeHZfCviLWNPu7ax1NImvd7WlxPGscwXcMlGOM13eLeb4Sv" +
                        "wRkFKnVjKpTjPmipJuPw/Ek7r5nB4Q5Pi6HHGf1alKUadSUOWTi0pfF8Las/keZ/DX4dfHS1/b6/wCCt" +
                        "fiPwH4X1Xw74g8aeBrfTvgn421OxuLTTbvxCPD0EVk1teXKRwSGO5C7tr4GDnGK97Pc7yiXB3DlLEVIz" +
                        "hTrN1YJpyUOd814q7V436Hg5Dkebx4y4kq4enKE6lBKlNpqLnyLltJ2TtK3XQ/P/wCBWsfCTwx+xN8T/" +
                        "wBm63/YY8Y+Nv8AgoN4w0fxp4P8cazrvgU3WqWuo61HqFtHqs2taonmWsFtbSgqi7WMqEAEuZT+ycXYb" +
                        "MsRxVh8zeb0qeS050pQSrWi4x5W4KnHSTlJbu65X5cp+L8IYrLcPwniMrWUVqmdVIVYzbo3kpT5kpupL" +
                        "WKjF7Kz5ltrzP0r9oH4RfFjVf8AghZ+y58PdL+GHiLUvH2j+JbW51bwPYaLqU2sWsaaj4iLNNZxwmZFA" +
                        "kXJZB94eorw+DeJcup+LeYYmeIpqjKm7Tc4qL92ltK9ns+vQ97jThnMqnhDl+Ghh6jrRqK8FCTkveq7x" +
                        "tdbrp1Pqbxl8FfGX/BLP9qXwl8av2Y/hzrfjH9jj45/YvAPx7+Cnw/s9R1u88OX9nAUt9XtLeETzuAoa" +
                        "UEhsnzYmZfNiK/nuWcVYXxB4fqYHNK8KeZ4a86NWbjBTTesJN2S1sun2ZJPllf9DzThTFeHnENLHZVQn" +
                        "UyvE2hWpQUpuEktJxSu3pd9ftRbXNG3kXxs+EvgL9mz9uX42/Hb9o/9kq6/al/ZS/ahg0rxh4a+I+i+F" +
                        "4vE154O1mK3CzQz20qq0EUpkctnaXQRFd7o6j6XhXiPGZ7wlhMBlmZLBZjgnKMoOp7NVY30aa3asrb2f" +
                        "NeyaZ8zxXw3g8h4uxeYZnlrxuXY1RlGoqftHSklqmnsnd32uuW12mj9B/2F9e/Yn8ffEHxXr/7L/wCyF" +
                        "qXwav8Aw7pMUcnxZ1jwAPCtjqNvqEyNJZWl23zSOPLR5EIXIwRuAyPxjxbwfFWDwVOnmuZRxCnL+Gq3t" +
                        "HFxWkpR6btJ69nY/a/CLGcKY3G1KmVZZLDuEf4jo+zUlJ6xjLq9E2tO6udF/wAFe/Cvijxt/wAE7v2hf" +
                        "DHgzw3f+LvEup/8In/Zvh7wxZ3F/fXHk+OdGuJPKgtEkkfZHGzthThQSeAa4vo15jh8JxrgqtepGnTXt" +
                        "Lyk1FK9GolduyV27ep2/SYy7EYvgjG0qFOVSpL2doxTk3atTbslduyTfofXP7M2n3+k/s3/ALPularZT" +
                        "aZqemeCPCmn6lpuoRvDPbzw6DaxyRyRyAMjowIZSAQRg1+bceVoVM8xs4NOLrVGmtU05uzT6pn6VwDRn" +
                        "TyLBQmnGUaNNNPRpqEbpro0fmv/AMELvAvjf4efsVapoPj/AMHar4H11/G+u6gmi+MNPu9MuzBJp+mqk" +
                        "ghvY432MUIDYwcH0r90+ltm+ExvFUamHqxqQ9jBXjJSV+ael02rn4R9EPJ8XguFJU8RSlSn7abtKLi7c" +
                        "sNbNJ2P2Wr+YD+pD8jv+CJXgrxl4B/YW0Hw9478Jan4K1+PxL4iu5ND8W2F1pt4sUtxGUcw3kcbhWA4O" +
                        "MGv6Q+lXmuFxnF06mHqRqQ9nBXi1JbPqm0fzV9E/KsVguEIU8RSlTn7SbtKLi7XXRpM+DvhB8I/2mIP2" +
                        "XP+CxWhfDXwVr/hr4mePPH+s6h8P4bjTtQsbzWdJk1aV78aZ5iRvO1xYGaOExZ3MygZJFfr/EvEmQviD" +
                        "hipiqsJ0KVCKn70Woy5Vy8+9uWfK3fZJ3Px7hnhrP1w/wAUU8LSqQxFWvNw92Sc48z5uTa/NDmStu2rH" +
                        "zb441f4IeOP+CcU/wCzd+y5+wv4tuP2iYdE8PR/Gjxq3gNo7/Rr7RtT0/VtXnudYmia5uZLqa12QwRnJ" +
                        "jkACoEEdfc5Ths2wnHCzPNc3pLBc8/ZQ9tpJSjKMEoJ8sVFO7k+q3d+Y+EzbE5Ti+BnlmU5RVeOUIe1n" +
                        "7H3oOEoym3Ua5pOTVoxXR7JLlPov/golf8AjfwR4B/4Im6n4V8Gz+I/iR4Q1Hwtf+HPh9eBrO5v9b0+y" +
                        "8LyW+nOLgKYnlnjWI7wNpPPSvifBSjhMXjOKo1aqhQqRqKU1qlCTrXkrbpJ303PuPG6ti8Jg+E50aTnX" +
                        "pypuMHo3OKo2g77NyVtdj1v9r39uXxF+2z8Fdd/ZB/Ze/Zv+IrfGn4xNY+FPHNr8SvDM2iWXhCwF7FPe" +
                        "HUbiaR442/d+UXbCKGLbtwVT834a+EtDhXNYZzmuOw/1XD3lD2dRTdV2ajypK73vbd2ta12vpfEzxdr8" +
                        "WZVPJcpwGI+t4i0Z+0puCpK6cudt2W1r7K7d72T4f8A4KC+G/F37Kvj3/gi94S+FnhWf4s+K/gJH4g0H" +
                        "S/CmkBYrvxH/YGm+FYLyOAMDie6ihlKAKTvYYUnAPreDOOw3EOD4prYuoqFPFODcntDnlWcW/KLav5LV" +
                        "rc8nxpwGJ4dxnCtHCU3XqYXnSit6nJGipJecknbzeiexv8A7Z/7XXiH/got8J4f2Lv2VfgD47bxf8V9U" +
                        "0OD4r+IPil4buND03wfp2m6nb6w326d2lVJFntoy5zt2Bghd2VTx+F3htR4JzF53m2MoeyoRn7ONOanK" +
                        "rKUXH3VpdWbt1vZuyTZ2eKfiXX44y1ZHlGCr+1ryh7SVSm4RpRjJS9562d0r9LXSu2kR/tq/snWf7Pv7" +
                        "SH7Pn7Sur/s3S/tcfsy+FvAWmfs+fGPwLp+jx65q+mHQraS2s9Zjs5CQf3SxDe3yrsdHdPMRg/CzxFln" +
                        "WR43LIY5YHHzryrUpuXJGXO05U3L1vpu7ppPlaJ8VfDiOS57gs0ngHj8BChGhVgo88o8iajUUfS2uys0" +
                        "2uZM+jP2TfGP/BOn4p/G3wbZfs7/sPan4T8XaXHd+J7P4t3nwzTQ9L0CaxikG2XUX5indgY49qkFsruz" +
                        "gH4jxGyzjbL8qqyzLNozpStF01X55TTttHqlu+ttbH3PhvmnA+Y5tSjluUSp1Y3kqrw/JGDV959G3oul" +
                        "9Lln/gnB4F8b+Fv21f+Cr+veJ/B2q+HNC8ZeN9A1DwhrWvafd2dpqsEeoeJ2eSzmuI0SdFEyEtGSBuX1" +
                        "FR44ZvhMRwrw7TpVYznTozUkpJuL5aOkkndPR79mX4F5Pi8PxXxHUq0pQhUrQcW4tKS5q2sW1ZrVbX3R" +
                        "0vwe8FeMrH/AILG/tbeOb3wlqdn4K1r4a+GtK0bxhdWF1Hpd3dRLou+GG7dBDJIvltuVWJGDkcGuHibN" +
                        "cLPwxy2hGpF1Y4io3G65kn7TVxvdLVa2O/hjKsVDxQzLESpSVKWHppScXytr2d0pWs3o9Ez6T/Ya/bA1" +
                        "/8AbG8EePvGGv8AwF1v4CzeCvENx4HttH8ZTSXDX6QQRymZXls7IrIhfZLEFYI2BvbPHwviz4aUeGMXR" +
                        "o08ZDFKpTU7xVrXbVvilo907q66I+88I/E2txRhK1apg54V06jhaTveyTv8MdVs1Z2fVn29X5QfrIUAF" +
                        "ABQAUAFABQBkXnh/QdR1XRtd1DRLS+1zw79o/4R/Wby2hlu7D7ZGIZ/s8zqXi81AFfYRuHByKANegAoA" +
                        "KACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD89f20v2QPG/wC0v8Xv2" +
                        "JfiJ4U8TaVoOmfsxePbT4r+LbHxCbsT6hZ2+qaVfNDafZoZV80rYOB5hUZI564/aPC3xLwmQ5ZmuGrU5" +
                        "SljKDpxcbWi3GavK7WnvLa7PxTxV8MsXn2Z5TiaNSMY4KuqklK95JSg7Rsnr7r3stj9Cq/Fz9rPg39qD" +
                        "9lHxl8c/wBpj9iD43eHvEemaRoH7L2seJfEfi7SdZN0LzUItai0uOJbPyIpE3IbFt3mMo5GM81+v8A+I" +
                        "mFynIc2wNSEpTxsKcYtWtHkc7812nrzK1kz8d8QPDnFZvn+UY+nUjGGCnUlJO95KahblsmtOV3u0feVf" +
                        "kB+xBQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAH//ZCw==";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.StackedBarSeriesLabel stackedBarSeriesLabel1 = new DevExpress.XtraCharts.StackedBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.StackedBarSeriesView stackedBarSeriesView1 = new DevExpress.XtraCharts.StackedBarSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram2 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.StackedBarSeriesLabel stackedBarSeriesLabel2 = new DevExpress.XtraCharts.StackedBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions2 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.StackedBarSeriesView stackedBarSeriesView2 = new DevExpress.XtraCharts.StackedBarSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram3 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.StackedBarSeriesLabel stackedBarSeriesLabel3 = new DevExpress.XtraCharts.StackedBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions3 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.StackedBarSeriesView stackedBarSeriesView3 = new DevExpress.XtraCharts.StackedBarSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram4 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.StackedBarSeriesLabel stackedBarSeriesLabel4 = new DevExpress.XtraCharts.StackedBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions4 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.StackedBarSeriesView stackedBarSeriesView4 = new DevExpress.XtraCharts.StackedBarSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary10 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary11 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary12 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary13 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary14 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary15 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary16 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary17 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary18 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.pageFooterBand1 = new DevExpress.XtraReports.UI.PageFooterBand();
            this.reportHeaderBand1 = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.GroupHeader2 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.label51 = new DevExpress.XtraReports.UI.XRLabel();
            this.label52 = new DevExpress.XtraReports.UI.XRLabel();
            this.label28 = new DevExpress.XtraReports.UI.XRLabel();
            this.label25 = new DevExpress.XtraReports.UI.XRLabel();
            this.label24 = new DevExpress.XtraReports.UI.XRLabel();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label47 = new DevExpress.XtraReports.UI.XRLabel();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo3 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label198 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.chart4 = new DevExpress.XtraReports.UI.XRChart();
            this.chart3 = new DevExpress.XtraReports.UI.XRChart();
            this.chart2 = new DevExpress.XtraReports.UI.XRChart();
            this.label74 = new DevExpress.XtraReports.UI.XRLabel();
            this.label73 = new DevExpress.XtraReports.UI.XRLabel();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label35 = new DevExpress.XtraReports.UI.XRLabel();
            this.label34 = new DevExpress.XtraReports.UI.XRLabel();
            this.label36 = new DevExpress.XtraReports.UI.XRLabel();
            this.label38 = new DevExpress.XtraReports.UI.XRLabel();
            this.label37 = new DevExpress.XtraReports.UI.XRLabel();
            this.label33 = new DevExpress.XtraReports.UI.XRLabel();
            this.label27 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.label32 = new DevExpress.XtraReports.UI.XRLabel();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.pageInfo4 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.label48 = new DevExpress.XtraReports.UI.XRLabel();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.label44 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.label39 = new DevExpress.XtraReports.UI.XRLabel();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.label41 = new DevExpress.XtraReports.UI.XRLabel();
            this.line4 = new DevExpress.XtraReports.UI.XRLine();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.line2 = new DevExpress.XtraReports.UI.XRLine();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.pageBreak1 = new DevExpress.XtraReports.UI.XRPageBreak();
            this.RepVentaNeta = new XtraReportSerialization.RepVentaNetaDataSet();
            this.label50 = new DevExpress.XtraReports.UI.XRLabel();
            this.label81 = new DevExpress.XtraReports.UI.XRLabel();
            this.label80 = new DevExpress.XtraReports.UI.XRLabel();
            this.label79 = new DevExpress.XtraReports.UI.XRLabel();
            this.label82 = new DevExpress.XtraReports.UI.XRLabel();
            this.line13 = new DevExpress.XtraReports.UI.XRLine();
            this.line12 = new DevExpress.XtraReports.UI.XRLine();
            this.label78 = new DevExpress.XtraReports.UI.XRLabel();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label26 = new DevExpress.XtraReports.UI.XRLabel();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.label77 = new DevExpress.XtraReports.UI.XRLabel();
            this.label76 = new DevExpress.XtraReports.UI.XRLabel();
            this.label75 = new DevExpress.XtraReports.UI.XRLabel();
            this.TableTableAdapter = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand1 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection1 = new System.Data.OleDb.OleDbConnection();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.VentaNeta1 = new DevExpress.XtraReports.UI.CalculatedField();
            this.VentaNeta2 = new DevExpress.XtraReports.UI.CalculatedField();
            this.VentaNeta3 = new DevExpress.XtraReports.UI.CalculatedField();
            this.CantidadNeta1 = new DevExpress.XtraReports.UI.CalculatedField();
            this.CantidadNeta2 = new DevExpress.XtraReports.UI.CalculatedField();
            this.CantidadNeta3 = new DevExpress.XtraReports.UI.CalculatedField();
            ((System.ComponentModel.ISupportInitialize)(this.chart4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label51,
                        this.label52,
                        this.label28,
                        this.label25,
                        this.label24,
                        this.label23,
                        this.label2,
                        this.label19,
                        this.label18,
                        this.label4,
                        this.label3,
                        this.label1});
            this.Detail.HeightF = 18.00003F;
            this.Detail.Name = "Detail";
            this.Detail.Scripts.OnBeforePrint = "Detail_BeforePrint";
            // 
            // pageFooterBand1
            // 
            this.pageFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line7,
                        this.pageInfo2,
                        this.pageInfo1});
            this.pageFooterBand1.HeightF = 24.25003F;
            this.pageFooterBand1.Name = "pageFooterBand1";
            // 
            // reportHeaderBand1
            // 
            this.reportHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label47,
                        this.line6,
                        this.pageInfo3,
                        this.label198,
                        this.pictureBox2});
            this.reportHeaderBand1.HeightF = 168.2916F;
            this.reportHeaderBand1.Name = "reportHeaderBand1";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 25F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 22F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart4,
                        this.chart3,
                        this.chart2});
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Categoria", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 840.96F;
            this.GroupHeader1.Level = 1;
            this.GroupHeader1.Name = "GroupHeader1";
            this.GroupHeader1.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label74,
                        this.label73,
                        this.line8,
                        this.label9,
                        this.label8,
                        this.label7,
                        this.label12,
                        this.label6,
                        this.label10});
            this.GroupFooter1.GroupUnion = DevExpress.XtraReports.UI.GroupFooterUnion.WithLastDetail;
            this.GroupFooter1.HeightF = 29.16667F;
            this.GroupFooter1.Level = 1;
            this.GroupFooter1.Name = "GroupFooter1";
            this.GroupFooter1.Scripts.OnBeforePrint = "GroupFooter1_BeforePrint";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label35,
                        this.label34,
                        this.label36,
                        this.label38,
                        this.label37,
                        this.label33,
                        this.label27,
                        this.label22,
                        this.label30,
                        this.label32,
                        this.label31,
                        this.chart1,
                        this.line1,
                        this.label49,
                        this.pageInfo4,
                        this.pictureBox1,
                        this.label48,
                        this.line5,
                        this.label44,
                        this.label43,
                        this.label46,
                        this.label45,
                        this.label40,
                        this.label39,
                        this.label42,
                        this.label41,
                        this.line4,
                        this.line3,
                        this.line2,
                        this.label17,
                        this.label21,
                        this.label20,
                        this.label16,
                        this.label13,
                        this.label11,
                        this.label15,
                        this.label14,
                        this.pageBreak1});
            this.ReportFooter.HeightF = 736.4585F;
            this.ReportFooter.Name = "ReportFooter";
            // 
            // GroupHeader2
            // 
            this.GroupHeader2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label50,
                        this.label81,
                        this.label80,
                        this.label79,
                        this.label82,
                        this.line13,
                        this.line12,
                        this.label78,
                        this.label29,
                        this.label26,
                        this.label5,
                        this.label77,
                        this.label76,
                        this.label75});
            this.GroupHeader2.HeightF = 25.41666F;
            this.GroupHeader2.KeepTogether = true;
            this.GroupHeader2.Name = "GroupHeader2";
            this.GroupHeader2.RepeatEveryPage = true;
            this.GroupHeader2.Scripts.OnBeforePrint = "GroupHeader2_BeforePrint";
            // 
            // label51
            // 
            this.label51.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Disponible", "{0:#,#.00}")});
            this.label51.Font = new System.Drawing.Font("Arial", 7F);
            this.label51.LocationFloat = new DevExpress.Utils.PointFloat(999.9998F, 0F);
            this.label51.Name = "label51";
            this.label51.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label51.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label51.StylePriority.UseFont = false;
            this.label51.StylePriority.UseTextAlignment = false;
            this.label51.Text = "label51";
            this.label51.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label52
            // 
            this.label52.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.MonedaCosto")});
            this.label52.Font = new System.Drawing.Font("Arial", 7F);
            this.label52.LocationFloat = new DevExpress.Utils.PointFloat(925.0001F, 3.178914E-05F);
            this.label52.Name = "label52";
            this.label52.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label52.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label52.StylePriority.UseFont = false;
            this.label52.StylePriority.UseTextAlignment = false;
            this.label52.Text = "label52";
            this.label52.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label28
            // 
            this.label28.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.UltimoCosto", "{0:$#,#.00}")});
            this.label28.Font = new System.Drawing.Font("Arial", 7F);
            this.label28.LocationFloat = new DevExpress.Utils.PointFloat(775.0001F, 3.178914E-05F);
            this.label28.Name = "label28";
            this.label28.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label28.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label28.StylePriority.UseFont = false;
            this.label28.StylePriority.UseTextAlignment = false;
            this.label28.Text = "label28";
            this.label28.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label25
            // 
            this.label25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad2", "{0:#,#.00}")});
            this.label25.Font = new System.Drawing.Font("Arial", 7F);
            this.label25.LocationFloat = new DevExpress.Utils.PointFloat(550F, 3.178914E-05F);
            this.label25.Name = "label25";
            this.label25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label25.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label25.StylePriority.UseFont = false;
            this.label25.StylePriority.UseTextAlignment = false;
            this.label25.Text = "label25";
            this.label25.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label24
            // 
            this.label24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad3", "{0:#,#.00}")});
            this.label24.Font = new System.Drawing.Font("Arial", 7F);
            this.label24.LocationFloat = new DevExpress.Utils.PointFloat(700F, 0F);
            this.label24.Name = "label24";
            this.label24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label24.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label24.StylePriority.UseFont = false;
            this.label24.StylePriority.UseTextAlignment = false;
            this.label24.Text = "label24";
            this.label24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label23
            // 
            this.label23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoPromedio", "{0:$#,#.00}")});
            this.label23.Font = new System.Drawing.Font("Arial", 7F);
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(850.0001F, 3.178914E-05F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseTextAlignment = false;
            this.label23.Text = "label23";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label2
            // 
            this.label2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes3", "{0:$#,#.00}")});
            this.label2.Font = new System.Drawing.Font("Arial", 7F);
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(625F, 0F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(75F, 18.00003F);
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.Text = "label2";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes2", "{0:$#,#.00}")});
            this.label19.Font = new System.Drawing.Font("Arial", 7F);
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(475F, 0F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.SizeF = new System.Drawing.SizeF(75.00006F, 18.00003F);
            this.label19.StylePriority.UseFont = false;
            this.label19.StylePriority.UseTextAlignment = false;
            this.label19.Text = "label19";
            this.label19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad1", "{0:#,#.00}")});
            this.label18.Font = new System.Drawing.Font("Arial", 7F);
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(400F, 0F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            this.label18.Text = "label18";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label4
            // 
            this.label4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes1", "{0:$#,#.00}")});
            this.label4.Font = new System.Drawing.Font("Arial", 7F);
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(325F, 0F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(74.99997F, 18.00003F);
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "label4";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label3
            // 
            this.label3.CanGrow = false;
            this.label3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Descripcion1", "{0:dd/MM/yyyy}")});
            this.label3.Font = new System.Drawing.Font("Arial", 7F);
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(83.20847F, 0F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(241.7916F, 18.00003F);
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseTextAlignment = false;
            this.label3.Text = "label3";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label3.WordWrap = false;
            // 
            // label1
            // 
            this.label1.CanGrow = false;
            this.label1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Articulo")});
            this.label1.Font = new System.Drawing.Font("Arial", 7F);
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseTextAlignment = false;
            this.label1.Text = "label1";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label1.WordWrap = false;
            // 
            // line7
            // 
            this.line7.BorderColor = System.Drawing.Color.Gray;
            this.line7.ForeColor = System.Drawing.Color.Gray;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            this.line7.StylePriority.UseBorderColor = false;
            this.line7.StylePriority.UseForeColor = false;
            // 
            // pageInfo2
            // 
            this.pageInfo2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo2.Format = "Página {0} de {1}";
            this.pageInfo2.LocationFloat = new DevExpress.Utils.PointFloat(685.6545F, 2.083334F);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo2.SizeF = new System.Drawing.SizeF(381.3455F, 18F);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.StylePriority.UseFont = false;
            this.pageInfo2.StylePriority.UseTextAlignment = false;
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.083333F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo1.StyleName = "PageInfo";
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label47
            // 
            this.label47.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label47.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label47.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label47.LocationFloat = new DevExpress.Utils.PointFloat(368.2083F, 117.7916F);
            this.label47.Name = "label47";
            this.label47.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label47.SizeF = new System.Drawing.SizeF(395.7917F, 18.00001F);
            this.label47.StyleName = "Title";
            this.label47.StylePriority.UseFont = false;
            this.label47.StylePriority.UseForeColor = false;
            this.label47.StylePriority.UseTextAlignment = false;
            this.label47.Text = "label47";
            this.label47.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line6
            // 
            this.line6.BorderColor = System.Drawing.Color.Gray;
            this.line6.ForeColor = System.Drawing.Color.Gray;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 135.7916F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(1077F, 5.583328F);
            this.line6.StylePriority.UseBorderColor = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // pageInfo3
            // 
            this.pageInfo3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo3.LocationFloat = new DevExpress.Utils.PointFloat(764F, 117.7916F);
            this.pageInfo3.Name = "pageInfo3";
            this.pageInfo3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo3.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo3.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo3.StyleName = "PageInfo";
            this.pageInfo3.StylePriority.UseFont = false;
            this.pageInfo3.StylePriority.UseTextAlignment = false;
            this.pageInfo3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label198
            // 
            this.label198.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label198.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label198.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label198.LocationFloat = new DevExpress.Utils.PointFloat(0F, 117.7916F);
            this.label198.Name = "label198";
            this.label198.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label198.SizeF = new System.Drawing.SizeF(368.2083F, 18F);
            this.label198.StyleName = "Title";
            this.label198.StylePriority.UseFont = false;
            this.label198.StylePriority.UseForeColor = false;
            this.label198.StylePriority.UseTextAlignment = false;
            this.label198.Text = "label198";
            this.label198.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // chart4
            // 
            this.chart4.BorderColor = System.Drawing.Color.Black;
            this.chart4.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart4.DataMember = "Table";
            xYDiagram1.AxisX.Alignment = DevExpress.XtraCharts.AxisAlignment.Zero;
            xYDiagram1.AxisX.Label.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            this.chart4.Diagram = xYDiagram1;
            this.chart4.IndicatorsPaletteName = "Default";
            this.chart4.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart4.Legend.HorizontalIndent = 1;
            this.chart4.Legend.Margins.Bottom = 1;
            this.chart4.Legend.Margins.Left = 1;
            this.chart4.Legend.Margins.Right = 1;
            this.chart4.Legend.Margins.Top = 1;
            this.chart4.Legend.TextOffset = 0;
            this.chart4.Legend.VerticalIndent = 1;
            this.chart4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 566.9583F);
            this.chart4.Name = "chart4";
            this.chart4.Scripts.OnBeforePrint = "chart3_BeforePrint";
            this.chart4.SeriesDataMember = "SaldoDescripcion";
            this.chart4.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart4.SeriesTemplate.ArgumentDataMember = "FechaGrafica";
            stackedBarSeriesLabel1.Font = new System.Drawing.Font("Arial", 6F);
            stackedBarSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart4.SeriesTemplate.Label = stackedBarSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart4.SeriesTemplate.PointOptions = pointOptions1;
            this.chart4.SeriesTemplate.ValueDataMembersSerializable = "SaldoImporte";
            this.chart4.SeriesTemplate.View = stackedBarSeriesView1;
            this.chart4.SizeF = new System.Drawing.SizeF(1075F, 274.0017F);
            // 
            // chart3
            // 
            this.chart3.BorderColor = System.Drawing.Color.Black;
            this.chart3.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart3.DataMember = "Table";
            xYDiagram2.AxisX.Alignment = DevExpress.XtraCharts.AxisAlignment.Zero;
            xYDiagram2.AxisX.Label.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            xYDiagram2.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram2.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram2.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram2.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram2.AxisY.VisibleInPanesSerializable = "-1";
            this.chart3.Diagram = xYDiagram2;
            this.chart3.IndicatorsPaletteName = "Default";
            this.chart3.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart3.Legend.HorizontalIndent = 1;
            this.chart3.Legend.Margins.Bottom = 1;
            this.chart3.Legend.Margins.Left = 1;
            this.chart3.Legend.Margins.Right = 1;
            this.chart3.Legend.Margins.Top = 1;
            this.chart3.Legend.TextOffset = 0;
            this.chart3.Legend.VerticalIndent = 1;
            this.chart3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 282.9566F);
            this.chart3.Name = "chart3";
            this.chart3.Scripts.OnBeforePrint = "chart2_BeforePrint";
            this.chart3.SeriesDataMember = "SaldoDescripcion";
            this.chart3.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart3.SeriesTemplate.ArgumentDataMember = "FechaGrafica";
            stackedBarSeriesLabel2.Font = new System.Drawing.Font("Arial", 6F);
            stackedBarSeriesLabel2.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart3.SeriesTemplate.Label = stackedBarSeriesLabel2;
            pointOptions2.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart3.SeriesTemplate.PointOptions = pointOptions2;
            this.chart3.SeriesTemplate.ValueDataMembersSerializable = "SaldoImporte";
            this.chart3.SeriesTemplate.View = stackedBarSeriesView2;
            this.chart3.SizeF = new System.Drawing.SizeF(1075F, 274.0017F);
            // 
            // chart2
            // 
            this.chart2.BorderColor = System.Drawing.Color.Black;
            this.chart2.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart2.DataMember = "Table";
            xYDiagram3.AxisX.Alignment = DevExpress.XtraCharts.AxisAlignment.Zero;
            xYDiagram3.AxisX.Label.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            xYDiagram3.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram3.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram3.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram3.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram3.AxisY.VisibleInPanesSerializable = "-1";
            this.chart2.Diagram = xYDiagram3;
            this.chart2.IndicatorsPaletteName = "Default";
            this.chart2.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart2.Legend.HorizontalIndent = 1;
            this.chart2.Legend.Margins.Bottom = 1;
            this.chart2.Legend.Margins.Left = 1;
            this.chart2.Legend.Margins.Right = 1;
            this.chart2.Legend.Margins.Top = 1;
            this.chart2.Legend.TextOffset = 0;
            this.chart2.Legend.VerticalIndent = 1;
            this.chart2.LocationFloat = new DevExpress.Utils.PointFloat(0.0001589457F, 0F);
            this.chart2.Name = "chart2";
            this.chart2.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart2.SeriesDataMember = "SaldoDescripcion";
            this.chart2.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart2.SeriesTemplate.ArgumentDataMember = "FechaGrafica";
            stackedBarSeriesLabel3.Font = new System.Drawing.Font("Arial", 6F);
            stackedBarSeriesLabel3.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart2.SeriesTemplate.Label = stackedBarSeriesLabel3;
            pointOptions3.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart2.SeriesTemplate.PointOptions = pointOptions3;
            this.chart2.SeriesTemplate.ValueDataMembersSerializable = "SaldoImporte";
            this.chart2.SeriesTemplate.View = stackedBarSeriesView3;
            this.chart2.SizeF = new System.Drawing.SizeF(1075F, 274.0017F);
            // 
            // label74
            // 
            this.label74.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad3")});
            this.label74.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label74.LocationFloat = new DevExpress.Utils.PointFloat(700F, 2.083333F);
            this.label74.Name = "label74";
            this.label74.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label74.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label74.StylePriority.UseFont = false;
            this.label74.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:#,#.00}";
            summary1.IgnoreNullValues = true;
            summary1.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label74.Summary = summary1;
            this.label74.Text = "label74";
            this.label74.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label73
            // 
            this.label73.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad2")});
            this.label73.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label73.LocationFloat = new DevExpress.Utils.PointFloat(550F, 2.083333F);
            this.label73.Name = "label73";
            this.label73.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label73.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label73.StylePriority.UseFont = false;
            this.label73.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:#,#.00}";
            summary2.IgnoreNullValues = true;
            summary2.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label73.Summary = summary2;
            this.label73.Text = "label7";
            this.label73.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line8
            // 
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(0.0001220703F, 0F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            // 
            // label9
            // 
            this.label9.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes2")});
            this.label9.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(475F, 2.083333F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(75.00006F, 18.00003F);
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:$#,#.00}";
            summary3.IgnoreNullValues = true;
            summary3.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label9.Summary = summary3;
            this.label9.Text = "label9";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label8
            // 
            this.label8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes3")});
            this.label8.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(625F, 2.083333F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(74.99994F, 18.00003F);
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:$#,#.00}";
            summary4.IgnoreNullValues = true;
            summary4.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label8.Summary = summary4;
            this.label8.Text = "label8";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad1")});
            this.label7.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(400F, 2.083333F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:#,#.00}";
            summary5.IgnoreNullValues = true;
            summary5.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label7.Summary = summary5;
            this.label7.Text = "label7";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label12
            // 
            this.label12.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.083333F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(52.29166F, 18.00003F);
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseTextAlignment = false;
            this.label12.Text = "Total en ";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label6
            // 
            this.label6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Moneda")});
            this.label6.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(52.29166F, 2.083333F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(272.7084F, 18.00003F);
            this.label6.StyleName = "DataField";
            this.label6.StylePriority.UseFont = false;
            this.label6.StylePriority.UseTextAlignment = false;
            this.label6.Text = "label10";
            this.label6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label10
            // 
            this.label10.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes1")});
            this.label10.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(325F, 2.083333F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(74.99997F, 18.00003F);
            this.label10.StylePriority.UseFont = false;
            this.label10.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:$#,#.00}";
            summary6.IgnoreNullValues = true;
            summary6.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label10.Summary = summary6;
            this.label10.Text = "label10";
            this.label10.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label35
            // 
            this.label35.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label35.LocationFloat = new DevExpress.Utils.PointFloat(1000F, 688.3752F);
            this.label35.Name = "label35";
            this.label35.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label35.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label35.StylePriority.UseFont = false;
            this.label35.StylePriority.UseTextAlignment = false;
            this.label35.Text = "Moneda Costeo";
            this.label35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label35.Visible = false;
            // 
            // label34
            // 
            this.label34.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.VentaNeta3")});
            this.label34.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label34.LocationFloat = new DevExpress.Utils.PointFloat(695.0002F, 688.3752F);
            this.label34.Name = "label34";
            this.label34.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label34.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label34.StylePriority.UseFont = false;
            this.label34.StylePriority.UseTextAlignment = false;
            this.label34.Text = "label16";
            this.label34.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label36
            // 
            this.label36.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label36.LocationFloat = new DevExpress.Utils.PointFloat(925.0001F, 688.3752F);
            this.label36.Name = "label36";
            this.label36.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label36.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label36.StylePriority.UseFont = false;
            this.label36.StylePriority.UseTextAlignment = false;
            this.label36.Text = "Costo Promedio";
            this.label36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label36.Visible = false;
            // 
            // label38
            // 
            this.label38.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label38.LocationFloat = new DevExpress.Utils.PointFloat(850.0001F, 688.3752F);
            this.label38.Multiline = true;
            this.label38.Name = "label38";
            this.label38.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label38.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label38.StylePriority.UseFont = false;
            this.label38.StylePriority.UseTextAlignment = false;
            this.label38.Text = "Ultimo  \r\nCosto ";
            this.label38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label38.Visible = false;
            // 
            // label37
            // 
            this.label37.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNeta3")});
            this.label37.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label37.LocationFloat = new DevExpress.Utils.PointFloat(775.0001F, 688.3752F);
            this.label37.Name = "label37";
            this.label37.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label37.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label37.StylePriority.UseFont = false;
            this.label37.StylePriority.UseTextAlignment = false;
            this.label37.Text = "label80";
            this.label37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label33
            // 
            this.label33.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNeta1")});
            this.label33.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label33.LocationFloat = new DevExpress.Utils.PointFloat(465.0001F, 688.3752F);
            this.label33.Name = "label33";
            this.label33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label33.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label33.StylePriority.UseFont = false;
            this.label33.StylePriority.UseTextAlignment = false;
            this.label33.Text = "label29";
            this.label33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label27
            // 
            this.label27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.VentaNeta1")});
            this.label27.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label27.LocationFloat = new DevExpress.Utils.PointFloat(385.0001F, 688.3752F);
            this.label27.Name = "label27";
            this.label27.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label27.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label27.StylePriority.UseFont = false;
            this.label27.StylePriority.UseTextAlignment = false;
            this.label27.Text = "label15";
            this.label27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label22
            // 
            this.label22.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 688.3752F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            this.label22.Text = "Artículo";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label22.Visible = false;
            // 
            // label30
            // 
            this.label30.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNeta2")});
            this.label30.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(620.0002F, 688.3752F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label30.StylePriority.UseFont = false;
            this.label30.StylePriority.UseTextAlignment = false;
            this.label30.Text = "label77";
            this.label30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label32
            // 
            this.label32.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.VentaNeta2")});
            this.label32.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label32.LocationFloat = new DevExpress.Utils.PointFloat(540.0001F, 688.3752F);
            this.label32.Name = "label32";
            this.label32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label32.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label32.StylePriority.UseFont = false;
            this.label32.StylePriority.UseTextAlignment = false;
            this.label32.Text = "label11";
            this.label32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label31
            // 
            this.label31.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(100.0001F, 688.3752F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(285F, 18F);
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseTextAlignment = false;
            this.label31.Text = "Descripción";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label31.Visible = false;
            // 
            // chart1
            // 
            this.chart1.AppearanceName = "Pastel Kit";
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart1.DataMember = "Table";
            this.chart1.DataSource = this.RepVentaNeta;
            xYDiagram4.AxisX.Label.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            xYDiagram4.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram4.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram4.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram4.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram4.AxisY.VisibleInPanesSerializable = "-1";
            this.chart1.Diagram = xYDiagram4;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart1.Legend.HorizontalIndent = 0;
            this.chart1.Legend.TextOffset = 0;
            this.chart1.Legend.VerticalIndent = 0;
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(0.0001589457F, 186.252F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart4_BeforePrint";
            this.chart1.SeriesDataMember = "SaldoDescripcion";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "FechaGrafica";
            stackedBarSeriesLabel4.Font = new System.Drawing.Font("Arial", 6F);
            stackedBarSeriesLabel4.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart1.SeriesTemplate.Label = stackedBarSeriesLabel4;
            pointOptions4.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions4;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "SaldoImporte";
            this.chart1.SeriesTemplate.View = stackedBarSeriesView4;
            this.chart1.SizeF = new System.Drawing.SizeF(1075F, 486.0401F);
            // 
            // line1
            // 
            this.line1.BorderColor = System.Drawing.Color.Gray;
            this.line1.ForeColor = System.Drawing.Color.Gray;
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(0.0001589457F, 163.75F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(1077F, 4.083374F);
            this.line1.StylePriority.UseBorderColor = false;
            this.line1.StylePriority.UseForeColor = false;
            // 
            // label49
            // 
            this.label49.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label49.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label49.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(368.2085F, 145.7499F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(393.7914F, 18.00003F);
            this.label49.StyleName = "Title";
            this.label49.StylePriority.UseFont = false;
            this.label49.StylePriority.UseForeColor = false;
            this.label49.StylePriority.UseTextAlignment = false;
            this.label49.Text = "label47";
            this.label49.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pageInfo4
            // 
            this.pageInfo4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo4.LocationFloat = new DevExpress.Utils.PointFloat(761.9999F, 145.75F);
            this.pageInfo4.Name = "pageInfo4";
            this.pageInfo4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo4.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo4.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo4.StyleName = "PageInfo";
            this.pageInfo4.StylePriority.UseFont = false;
            this.pageInfo4.StylePriority.UseTextAlignment = false;
            this.pageInfo4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.LocationFloat = new DevExpress.Utils.PointFloat(0.0001589457F, 33.33333F);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // label48
            // 
            this.label48.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label48.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label48.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label48.LocationFloat = new DevExpress.Utils.PointFloat(0.0001589457F, 145.75F);
            this.label48.Name = "label48";
            this.label48.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label48.SizeF = new System.Drawing.SizeF(368.2083F, 18F);
            this.label48.StyleName = "Title";
            this.label48.StylePriority.UseFont = false;
            this.label48.StylePriority.UseForeColor = false;
            this.label48.StylePriority.UseTextAlignment = false;
            this.label48.Text = "label198";
            this.label48.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line5
            // 
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(0.0001509984F, 710.5418F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            // 
            // label44
            // 
            this.label44.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad2")});
            this.label44.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label44.LocationFloat = new DevExpress.Utils.PointFloat(620.0002F, 712.6251F);
            this.label44.Name = "label44";
            this.label44.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label44.SizeF = new System.Drawing.SizeF(75F, 18.00003F);
            this.label44.StylePriority.UseFont = false;
            this.label44.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:#,#.00}";
            summary7.IgnoreNullValues = true;
            summary7.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label44.Summary = summary7;
            this.label44.Text = "label20";
            this.label44.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label43
            // 
            this.label43.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes3")});
            this.label43.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(695.0002F, 712.6251F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.SizeF = new System.Drawing.SizeF(79.99982F, 18F);
            this.label43.StylePriority.UseFont = false;
            this.label43.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:$#,#.00}";
            summary8.IgnoreNullValues = true;
            summary8.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label43.Summary = summary8;
            this.label43.Text = "label16";
            this.label43.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label46
            // 
            this.label46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes2")});
            this.label46.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(540.0001F, 712.6251F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.SizeF = new System.Drawing.SizeF(79.99994F, 18F);
            this.label46.StylePriority.UseFont = false;
            this.label46.StylePriority.UseTextAlignment = false;
            summary9.FormatString = "{0:$#,#.00}";
            summary9.IgnoreNullValues = true;
            summary9.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label46.Summary = summary9;
            this.label46.Text = "label17";
            this.label46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label45
            // 
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad3")});
            this.label45.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(775.0001F, 712.6251F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.SizeF = new System.Drawing.SizeF(75F, 18.00003F);
            this.label45.StylePriority.UseFont = false;
            this.label45.StylePriority.UseTextAlignment = false;
            summary10.FormatString = "{0:#,#.00}";
            summary10.IgnoreNullValues = true;
            summary10.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label45.Summary = summary10;
            this.label45.Text = "label21";
            this.label45.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label40
            // 
            this.label40.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad1")});
            this.label40.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(465.0001F, 712.6251F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.SizeF = new System.Drawing.SizeF(75F, 18.00003F);
            this.label40.StylePriority.UseFont = false;
            this.label40.StylePriority.UseTextAlignment = false;
            summary11.FormatString = "{0:#,#.00}";
            summary11.IgnoreNullValues = true;
            summary11.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label40.Summary = summary11;
            this.label40.Text = "label15";
            this.label40.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label39
            // 
            this.label39.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label39.LocationFloat = new DevExpress.Utils.PointFloat(0.0001192093F, 712.6251F);
            this.label39.Name = "label39";
            this.label39.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label39.SizeF = new System.Drawing.SizeF(62.5F, 18F);
            this.label39.StylePriority.UseFont = false;
            this.label39.StylePriority.UseTextAlignment = false;
            this.label39.Text = "Gran Total";
            this.label39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label42
            // 
            this.label42.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Moneda")});
            this.label42.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(62.50013F, 712.6251F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(196.875F, 18F);
            this.label42.StyleName = "DataField";
            this.label42.StylePriority.UseFont = false;
            this.label42.StylePriority.UseTextAlignment = false;
            this.label42.Text = "label10";
            this.label42.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label41
            // 
            this.label41.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes1")});
            this.label41.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label41.LocationFloat = new DevExpress.Utils.PointFloat(385.0001F, 712.6251F);
            this.label41.Name = "label41";
            this.label41.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label41.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label41.StylePriority.UseFont = false;
            this.label41.StylePriority.UseTextAlignment = false;
            summary12.FormatString = "{0:$#,#.00}";
            summary12.IgnoreNullValues = true;
            summary12.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label41.Summary = summary12;
            this.label41.Text = "label11";
            this.label41.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line4
            // 
            this.line4.LocationFloat = new DevExpress.Utils.PointFloat(0.0001192093F, 706.3752F);
            this.line4.Name = "line4";
            this.line4.SizeF = new System.Drawing.SizeF(1077F, 2.083332F);
            // 
            // line3
            // 
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(0.0001192093F, 686.2919F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            // 
            // line2
            // 
            this.line2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line2.Name = "line2";
            this.line2.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            // 
            // label17
            // 
            this.label17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes2")});
            this.label17.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(475F, 2.083333F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.SizeF = new System.Drawing.SizeF(75.00006F, 18.00003F);
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseTextAlignment = false;
            summary13.FormatString = "{0:$#,#.00}";
            summary13.IgnoreNullValues = true;
            summary13.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label17.Summary = summary13;
            this.label17.Text = "label17";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label21
            // 
            this.label21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad3")});
            this.label21.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(704.9998F, 2.083333F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(70.00031F, 18.00003F);
            this.label21.StylePriority.UseFont = false;
            this.label21.StylePriority.UseTextAlignment = false;
            summary14.FormatString = "{0:#,#.00}";
            summary14.IgnoreNullValues = true;
            summary14.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label21.Summary = summary14;
            this.label21.Text = "label21";
            this.label21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label20
            // 
            this.label20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad2")});
            this.label20.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(550F, 2.083333F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(75F, 18.00003F);
            this.label20.StylePriority.UseFont = false;
            this.label20.StylePriority.UseTextAlignment = false;
            summary15.FormatString = "{0:#,#.00}";
            summary15.IgnoreNullValues = true;
            summary15.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label20.Summary = summary15;
            this.label20.Text = "[Cantidad2]";
            this.label20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label16
            // 
            this.label16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes3")});
            this.label16.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(625F, 2.083333F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(79.99982F, 18.00003F);
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseTextAlignment = false;
            summary16.FormatString = "{0:$#,#.00}";
            summary16.IgnoreNullValues = true;
            summary16.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label16.Summary = summary16;
            this.label16.Text = "label16";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label13
            // 
            this.label13.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Moneda")});
            this.label13.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(62.50013F, 2.083333F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(262.4999F, 18.00003F);
            this.label13.StyleName = "DataField";
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            this.label13.Text = "label10";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label11
            // 
            this.label11.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Mes1")});
            this.label11.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(325F, 2.083333F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(74.99997F, 18.00003F);
            this.label11.StylePriority.UseFont = false;
            this.label11.StylePriority.UseTextAlignment = false;
            summary17.FormatString = "{0:$#,#.00}";
            summary17.IgnoreNullValues = true;
            summary17.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label11.Summary = summary17;
            this.label11.Text = "label11";
            this.label11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label15
            // 
            this.label15.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cantidad1")});
            this.label15.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(400F, 2.083333F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(75F, 18.00003F);
            this.label15.StylePriority.UseFont = false;
            this.label15.StylePriority.UseTextAlignment = false;
            summary18.FormatString = "{0:#,#.00}";
            summary18.IgnoreNullValues = true;
            summary18.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label15.Summary = summary18;
            this.label15.Text = "label15";
            this.label15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label14
            // 
            this.label14.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.083333F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(62.50012F, 18.00003F);
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseTextAlignment = false;
            this.label14.Text = "Gran Total";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pageBreak1
            // 
            this.pageBreak1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 28.16668F);
            this.pageBreak1.Name = "pageBreak1";
            // 
            // RepVentaNeta
            // 
            this.RepVentaNeta.DataSetName = "RepVentaNetaDataSet";
            this.RepVentaNeta.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // label50
            // 
            this.label50.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label50.LocationFloat = new DevExpress.Utils.PointFloat(1000F, 2.08333F);
            this.label50.Name = "label50";
            this.label50.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label50.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label50.StylePriority.UseFont = false;
            this.label50.StylePriority.UseTextAlignment = false;
            this.label50.Text = "Disponible";
            this.label50.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label81
            // 
            this.label81.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label81.LocationFloat = new DevExpress.Utils.PointFloat(775.0002F, 2.083333F);
            this.label81.Multiline = true;
            this.label81.Name = "label81";
            this.label81.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label81.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label81.StylePriority.UseFont = false;
            this.label81.StylePriority.UseTextAlignment = false;
            this.label81.Text = "Ultimo  \r\nCosto ";
            this.label81.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label80
            // 
            this.label80.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNeta3")});
            this.label80.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label80.LocationFloat = new DevExpress.Utils.PointFloat(700.0002F, 2.083333F);
            this.label80.Name = "label80";
            this.label80.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label80.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label80.StylePriority.UseFont = false;
            this.label80.StylePriority.UseTextAlignment = false;
            this.label80.Text = "label80";
            this.label80.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label79
            // 
            this.label79.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label79.LocationFloat = new DevExpress.Utils.PointFloat(850.0002F, 2.083333F);
            this.label79.Name = "label79";
            this.label79.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label79.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label79.StylePriority.UseFont = false;
            this.label79.StylePriority.UseTextAlignment = false;
            this.label79.Text = "Costo Promedio";
            this.label79.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label82
            // 
            this.label82.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label82.LocationFloat = new DevExpress.Utils.PointFloat(925.0002F, 2.083333F);
            this.label82.Name = "label82";
            this.label82.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label82.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label82.StylePriority.UseFont = false;
            this.label82.StylePriority.UseTextAlignment = false;
            this.label82.Text = "Moneda Costeo";
            this.label82.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line13
            // 
            this.line13.LocationFloat = new DevExpress.Utils.PointFloat(0F, 20.08333F);
            this.line13.Name = "line13";
            this.line13.SizeF = new System.Drawing.SizeF(1077F, 2.083332F);
            // 
            // line12
            // 
            this.line12.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line12.Name = "line12";
            this.line12.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            // 
            // label78
            // 
            this.label78.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.VentaNeta3")});
            this.label78.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label78.LocationFloat = new DevExpress.Utils.PointFloat(625F, 2.083333F);
            this.label78.Name = "label78";
            this.label78.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label78.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label78.StylePriority.UseFont = false;
            this.label78.StylePriority.UseTextAlignment = false;
            this.label78.Text = "label16";
            this.label78.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label29
            // 
            this.label29.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNeta1")});
            this.label29.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(400F, 2.083333F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseTextAlignment = false;
            this.label29.Text = "label29";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label26
            // 
            this.label26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.VentaNeta2")});
            this.label26.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label26.LocationFloat = new DevExpress.Utils.PointFloat(475F, 2.083333F);
            this.label26.Name = "label26";
            this.label26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label26.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label26.StylePriority.UseFont = false;
            this.label26.StylePriority.UseTextAlignment = false;
            this.label26.Text = "label11";
            this.label26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label5
            // 
            this.label5.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(80F, 2.083333F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(245F, 18F);
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseTextAlignment = false;
            this.label5.Text = "Descripción";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label77
            // 
            this.label77.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNeta2")});
            this.label77.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label77.LocationFloat = new DevExpress.Utils.PointFloat(550F, 2.083333F);
            this.label77.Name = "label77";
            this.label77.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label77.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label77.StylePriority.UseFont = false;
            this.label77.StylePriority.UseTextAlignment = false;
            this.label77.Text = "label77";
            this.label77.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label76
            // 
            this.label76.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.VentaNeta1")});
            this.label76.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label76.LocationFloat = new DevExpress.Utils.PointFloat(325F, 2.083333F);
            this.label76.Name = "label76";
            this.label76.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label76.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label76.StylePriority.UseFont = false;
            this.label76.StylePriority.UseTextAlignment = false;
            this.label76.Text = "label15";
            this.label76.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label75
            // 
            this.label75.Font = new System.Drawing.Font("Arial", 6.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label75.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.083333F);
            this.label75.Name = "label75";
            this.label75.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label75.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label75.StylePriority.UseFont = false;
            this.label75.StylePriority.UseTextAlignment = false;
            this.label75.Text = "Artículo";
            this.label75.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.SelectCommand = this.oleDbCommand1;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand1
            // 
            this.oleDbCommand1.CommandText = "SPINFORMEVENTATRIMESTRAL 1";
            this.oleDbCommand1.CommandTimeout = 0;
            this.oleDbCommand1.Connection = this.oleDbConnection1;
            // 
            // oleDbConnection1
            // 
            this.oleDbConnection1.ConnectionString = "Provider=SQLOLEDB;Data Source=.;Initial Catalog=INFORMES11;User ID=SA;";
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Maroon;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Maroon;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // VentaNeta1
            // 
            this.VentaNeta1.DataMember = "Table";
            this.VentaNeta1.DataSource = this.RepVentaNeta;
            this.VentaNeta1.Expression = "\'Venta      Neta       \' + [Periodo] + \'  \' + [Ejercicio]";
            this.VentaNeta1.Name = "VentaNeta1";
            // 
            // VentaNeta2
            // 
            this.VentaNeta2.DataMember = "Table";
            this.VentaNeta2.DataSource = this.RepVentaNeta;
            this.VentaNeta2.Expression = "\'Venta      Neta       \' + [PeriodoD] + \'  \' + [Opcion]";
            this.VentaNeta2.Name = "VentaNeta2";
            // 
            // VentaNeta3
            // 
            this.VentaNeta3.DataMember = "Table";
            this.VentaNeta3.DataSource = this.RepVentaNeta;
            this.VentaNeta3.Expression = "\'Venta      Neta       \' + [PeriodoA] + \'  \' + [Folio]";
            this.VentaNeta3.Name = "VentaNeta3";
            // 
            // CantidadNeta1
            // 
            this.CantidadNeta1.DataMember = "Table";
            this.CantidadNeta1.DataSource = this.RepVentaNeta;
            this.CantidadNeta1.Expression = "\'Cantidad Vendida \' + [Periodo] + \' \' + [Ejercicio]";
            this.CantidadNeta1.Name = "CantidadNeta1";
            // 
            // CantidadNeta2
            // 
            this.CantidadNeta2.DataMember = "Table";
            this.CantidadNeta2.DataSource = this.RepVentaNeta;
            this.CantidadNeta2.Expression = "\'Cantidad Vendida \' + [PeriodoD] + \' \' + [Opcion]";
            this.CantidadNeta2.Name = "CantidadNeta2";
            // 
            // CantidadNeta3
            // 
            this.CantidadNeta3.DataMember = "Table";
            this.CantidadNeta3.DataSource = this.RepVentaNeta;
            this.CantidadNeta3.Expression = "\'Cantidad Vendida \' + [PeriodoA] + \' \' + [Folio]";
            this.CantidadNeta3.Name = "CantidadNeta3";
            // 
            // InformeVentaTrimetral
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.pageFooterBand1,
                        this.reportHeaderBand1,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.GroupHeader1,
                        this.GroupFooter1,
                        this.ReportFooter,
                        this.GroupHeader2});
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.VentaNeta1,
                        this.VentaNeta2,
                        this.VentaNeta3,
                        this.CantidadNeta1,
                        this.CantidadNeta2,
                        this.CantidadNeta3});
            this.DataAdapter = this.TableTableAdapter;
            this.DataMember = "Table";
            this.DataSource = this.RepVentaNeta;
            this.DisplayName = "InformeVentaTrimestral";
            this.Landscape = true;
            this.Margins = new System.Drawing.Printing.Margins(12, 11, 25, 22);
            this.Name = "InformeVentaTrimetral";
            this.PageHeight = 850;
            this.PageWidth = 1100;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "EXEC spInformeVentaTrimestral [EstacionTrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepVentaNetaDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepVentaNetaDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepVentaNetaDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepVentaNetaDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepVentaNetaDataSet cln = ((RepVentaNetaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepVentaNetaDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnIDInforme;
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnArticulo;
            private global::System.Data.DataColumn columnDescripcion1;
            private global::System.Data.DataColumn columnCategoria;
            private global::System.Data.DataColumn columnGrupo;
            private global::System.Data.DataColumn columnFamilia;
            private global::System.Data.DataColumn columnFabricante;
            private global::System.Data.DataColumn columnMes1;
            private global::System.Data.DataColumn columnCantidad1;
            private global::System.Data.DataColumn columnMes2;
            private global::System.Data.DataColumn columnCantidad2;
            private global::System.Data.DataColumn columnMes3;
            private global::System.Data.DataColumn columnCantidad3;
            private global::System.Data.DataColumn columnMonedaCosto;
            private global::System.Data.DataColumn columnUltimoCosto;
            private global::System.Data.DataColumn columnCostoPromedio;
            private global::System.Data.DataColumn columnDisponible;
            private global::System.Data.DataColumn columnSaldoDescripcion;
            private global::System.Data.DataColumn columnSaldoImporte;
            private global::System.Data.DataColumn columnGrafica1;
            private global::System.Data.DataColumn columnGrafica2;
            private global::System.Data.DataColumn columnGrafica3;
            private global::System.Data.DataColumn columnGrafica4;
            private global::System.Data.DataColumn columnReporte;
            private global::System.Data.DataColumn columnTotal;
            private global::System.Data.DataColumn columnFechaGrafica;
            private global::System.Data.DataColumn columnPeriodo;
            private global::System.Data.DataColumn columnEjercicio;
            private global::System.Data.DataColumn columnPeriodoD;
            private global::System.Data.DataColumn columnOpcion;
            private global::System.Data.DataColumn columnPeriodoA;
            private global::System.Data.DataColumn columnFolio;
            private global::System.Data.DataColumn columnCategoria2;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnEtiqueta;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDInformeColumn {
                get {
                    return this.columnIDInforme;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArticuloColumn {
                get {
                    return this.columnArticulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Descripcion1Column {
                get {
                    return this.columnDescripcion1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoriaColumn {
                get {
                    return this.columnCategoria;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrupoColumn {
                get {
                    return this.columnGrupo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamiliaColumn {
                get {
                    return this.columnFamilia;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FabricanteColumn {
                get {
                    return this.columnFabricante;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mes1Column {
                get {
                    return this.columnMes1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cantidad1Column {
                get {
                    return this.columnCantidad1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mes2Column {
                get {
                    return this.columnMes2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cantidad2Column {
                get {
                    return this.columnCantidad2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mes3Column {
                get {
                    return this.columnMes3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cantidad3Column {
                get {
                    return this.columnCantidad3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaCostoColumn {
                get {
                    return this.columnMonedaCosto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UltimoCostoColumn {
                get {
                    return this.columnUltimoCosto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoPromedioColumn {
                get {
                    return this.columnCostoPromedio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisponibleColumn {
                get {
                    return this.columnDisponible;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionColumn {
                get {
                    return this.columnSaldoDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteColumn {
                get {
                    return this.columnSaldoImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica1Column {
                get {
                    return this.columnGrafica1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica2Column {
                get {
                    return this.columnGrafica2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica3Column {
                get {
                    return this.columnGrafica3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica4Column {
                get {
                    return this.columnGrafica4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporteColumn {
                get {
                    return this.columnReporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaGraficaColumn {
                get {
                    return this.columnFechaGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoColumn {
                get {
                    return this.columnPeriodo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EjercicioColumn {
                get {
                    return this.columnEjercicio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoDColumn {
                get {
                    return this.columnPeriodoD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpcionColumn {
                get {
                    return this.columnOpcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoAColumn {
                get {
                    return this.columnPeriodoA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FolioColumn {
                get {
                    return this.columnFolio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Categoria2Column {
                get {
                    return this.columnCategoria2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtiquetaColumn {
                get {
                    return this.columnEtiqueta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        int Estacion, 
                        int IDInforme, 
                        string Empresa, 
                        string Moneda, 
                        string Articulo, 
                        string Descripcion1, 
                        string Categoria, 
                        string Grupo, 
                        string Familia, 
                        string Fabricante, 
                        double Mes1, 
                        double Cantidad1, 
                        double Mes2, 
                        double Cantidad2, 
                        double Mes3, 
                        double Cantidad3, 
                        string MonedaCosto, 
                        double UltimoCosto, 
                        double CostoPromedio, 
                        double Disponible, 
                        string SaldoDescripcion, 
                        double SaldoImporte, 
                        bool Grafica1, 
                        bool Grafica2, 
                        bool Grafica3, 
                        bool Grafica4, 
                        string Reporte, 
                        bool Total, 
                        string FechaGrafica, 
                        string Periodo, 
                        int Ejercicio, 
                        string PeriodoD, 
                        int Opcion, 
                        string PeriodoA, 
                        int Folio, 
                        string Categoria2, 
                        string Titulo, 
                        string EmpresaNombre, 
                        bool Etiqueta, 
                        bool VerGraficaDetalle) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        IDInforme,
                        Empresa,
                        Moneda,
                        Articulo,
                        Descripcion1,
                        Categoria,
                        Grupo,
                        Familia,
                        Fabricante,
                        Mes1,
                        Cantidad1,
                        Mes2,
                        Cantidad2,
                        Mes3,
                        Cantidad3,
                        MonedaCosto,
                        UltimoCosto,
                        CostoPromedio,
                        Disponible,
                        SaldoDescripcion,
                        SaldoImporte,
                        Grafica1,
                        Grafica2,
                        Grafica3,
                        Grafica4,
                        Reporte,
                        Total,
                        FechaGrafica,
                        Periodo,
                        Ejercicio,
                        PeriodoD,
                        Opcion,
                        PeriodoA,
                        Folio,
                        Categoria2,
                        Titulo,
                        EmpresaNombre,
                        Etiqueta,
                        VerGraficaDetalle};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnIDInforme = base.Columns["IDInforme"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnArticulo = base.Columns["Articulo"];
                this.columnDescripcion1 = base.Columns["Descripcion1"];
                this.columnCategoria = base.Columns["Categoria"];
                this.columnGrupo = base.Columns["Grupo"];
                this.columnFamilia = base.Columns["Familia"];
                this.columnFabricante = base.Columns["Fabricante"];
                this.columnMes1 = base.Columns["Mes1"];
                this.columnCantidad1 = base.Columns["Cantidad1"];
                this.columnMes2 = base.Columns["Mes2"];
                this.columnCantidad2 = base.Columns["Cantidad2"];
                this.columnMes3 = base.Columns["Mes3"];
                this.columnCantidad3 = base.Columns["Cantidad3"];
                this.columnMonedaCosto = base.Columns["MonedaCosto"];
                this.columnUltimoCosto = base.Columns["UltimoCosto"];
                this.columnCostoPromedio = base.Columns["CostoPromedio"];
                this.columnDisponible = base.Columns["Disponible"];
                this.columnSaldoDescripcion = base.Columns["SaldoDescripcion"];
                this.columnSaldoImporte = base.Columns["SaldoImporte"];
                this.columnGrafica1 = base.Columns["Grafica1"];
                this.columnGrafica2 = base.Columns["Grafica2"];
                this.columnGrafica3 = base.Columns["Grafica3"];
                this.columnGrafica4 = base.Columns["Grafica4"];
                this.columnReporte = base.Columns["Reporte"];
                this.columnTotal = base.Columns["Total"];
                this.columnFechaGrafica = base.Columns["FechaGrafica"];
                this.columnPeriodo = base.Columns["Periodo"];
                this.columnEjercicio = base.Columns["Ejercicio"];
                this.columnPeriodoD = base.Columns["PeriodoD"];
                this.columnOpcion = base.Columns["Opcion"];
                this.columnPeriodoA = base.Columns["PeriodoA"];
                this.columnFolio = base.Columns["Folio"];
                this.columnCategoria2 = base.Columns["Categoria2"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnEtiqueta = base.Columns["Etiqueta"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnIDInforme = new global::System.Data.DataColumn("IDInforme", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDInforme);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnArticulo = new global::System.Data.DataColumn("Articulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticulo);
                this.columnDescripcion1 = new global::System.Data.DataColumn("Descripcion1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion1);
                this.columnCategoria = new global::System.Data.DataColumn("Categoria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoria);
                this.columnGrupo = new global::System.Data.DataColumn("Grupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrupo);
                this.columnFamilia = new global::System.Data.DataColumn("Familia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilia);
                this.columnFabricante = new global::System.Data.DataColumn("Fabricante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFabricante);
                this.columnMes1 = new global::System.Data.DataColumn("Mes1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMes1);
                this.columnCantidad1 = new global::System.Data.DataColumn("Cantidad1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad1);
                this.columnMes2 = new global::System.Data.DataColumn("Mes2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMes2);
                this.columnCantidad2 = new global::System.Data.DataColumn("Cantidad2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad2);
                this.columnMes3 = new global::System.Data.DataColumn("Mes3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMes3);
                this.columnCantidad3 = new global::System.Data.DataColumn("Cantidad3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad3);
                this.columnMonedaCosto = new global::System.Data.DataColumn("MonedaCosto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonedaCosto);
                this.columnUltimoCosto = new global::System.Data.DataColumn("UltimoCosto", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUltimoCosto);
                this.columnCostoPromedio = new global::System.Data.DataColumn("CostoPromedio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoPromedio);
                this.columnDisponible = new global::System.Data.DataColumn("Disponible", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisponible);
                this.columnSaldoDescripcion = new global::System.Data.DataColumn("SaldoDescripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcion);
                this.columnSaldoImporte = new global::System.Data.DataColumn("SaldoImporte", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporte);
                this.columnGrafica1 = new global::System.Data.DataColumn("Grafica1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica1);
                this.columnGrafica2 = new global::System.Data.DataColumn("Grafica2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica2);
                this.columnGrafica3 = new global::System.Data.DataColumn("Grafica3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica3);
                this.columnGrafica4 = new global::System.Data.DataColumn("Grafica4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica4);
                this.columnReporte = new global::System.Data.DataColumn("Reporte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporte);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnFechaGrafica = new global::System.Data.DataColumn("FechaGrafica", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaGrafica);
                this.columnPeriodo = new global::System.Data.DataColumn("Periodo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodo);
                this.columnEjercicio = new global::System.Data.DataColumn("Ejercicio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio);
                this.columnPeriodoD = new global::System.Data.DataColumn("PeriodoD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodoD);
                this.columnOpcion = new global::System.Data.DataColumn("Opcion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpcion);
                this.columnPeriodoA = new global::System.Data.DataColumn("PeriodoA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodoA);
                this.columnFolio = new global::System.Data.DataColumn("Folio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolio);
                this.columnCategoria2 = new global::System.Data.DataColumn("Categoria2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoria2);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnEtiqueta = new global::System.Data.DataColumn("Etiqueta", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtiqueta);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.table_Table.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDInforme {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDInformeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IDInforme\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDInformeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Articulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.ArticuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Articulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ArticuloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion1 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Descripcion1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Descripcion1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Categoria {
                get {
                    try {
                        return ((string)(this[this.table_Table.CategoriaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Categoria\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CategoriaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grupo {
                get {
                    try {
                        return ((string)(this[this.table_Table.GrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grupo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GrupoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Familia {
                get {
                    try {
                        return ((string)(this[this.table_Table.FamiliaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Familia\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FamiliaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fabricante {
                get {
                    try {
                        return ((string)(this[this.table_Table.FabricanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fabricante\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FabricanteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Mes1 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Mes1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Mes1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Mes1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cantidad1 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Cantidad1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cantidad1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Cantidad1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Mes2 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Mes2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Mes2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Mes2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cantidad2 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Cantidad2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cantidad2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Cantidad2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Mes3 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Mes3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Mes3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Mes3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cantidad3 {
                get {
                    try {
                        return ((double)(this[this.table_Table.Cantidad3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cantidad3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Cantidad3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonedaCosto {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaCostoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MonedaCosto\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaCostoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UltimoCosto {
                get {
                    try {
                        return ((double)(this[this.table_Table.UltimoCostoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UltimoCosto\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UltimoCostoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CostoPromedio {
                get {
                    try {
                        return ((double)(this[this.table_Table.CostoPromedioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoPromedio\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoPromedioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Disponible {
                get {
                    try {
                        return ((double)(this[this.table_Table.DisponibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Disponible\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DisponibleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.SaldoDescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoDescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoImporte {
                get {
                    try {
                        return ((double)(this[this.table_Table.SaldoImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica1 {
                get {
                    try {
                        return ((bool)(this[this.table_Table.Grafica1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica2 {
                get {
                    try {
                        return ((bool)(this[this.table_Table.Grafica2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica3 {
                get {
                    try {
                        return ((bool)(this[this.table_Table.Grafica3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica4 {
                get {
                    try {
                        return ((bool)(this[this.table_Table.Grafica4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reporte {
                get {
                    try {
                        return ((string)(this[this.table_Table.ReporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Reporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ReporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Total {
                get {
                    try {
                        return ((bool)(this[this.table_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FechaGrafica {
                get {
                    try {
                        return ((string)(this[this.table_Table.FechaGraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaGrafica\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaGraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Periodo {
                get {
                    try {
                        return ((string)(this[this.table_Table.PeriodoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Periodo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PeriodoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio {
                get {
                    try {
                        return ((int)(this[this.table_Table.EjercicioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EjercicioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PeriodoD {
                get {
                    try {
                        return ((string)(this[this.table_Table.PeriodoDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PeriodoD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PeriodoDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Opcion {
                get {
                    try {
                        return ((int)(this[this.table_Table.OpcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Opcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.OpcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PeriodoA {
                get {
                    try {
                        return ((string)(this[this.table_Table.PeriodoAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PeriodoA\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PeriodoAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Folio {
                get {
                    try {
                        return ((int)(this[this.table_Table.FolioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Folio\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FolioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Categoria2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Categoria2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Categoria2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Categoria2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Etiqueta {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EtiquetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Etiqueta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EtiquetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.table_Table.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.table_Table.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.table_Table.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDInformeNull() {
                return this.IsNull(this.table_Table.IDInformeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDInformeNull() {
                this[this.table_Table.IDInformeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.table_Table.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.table_Table.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.table_Table.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.table_Table.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArticuloNull() {
                return this.IsNull(this.table_Table.ArticuloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArticuloNull() {
                this[this.table_Table.ArticuloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcion1Null() {
                return this.IsNull(this.table_Table.Descripcion1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcion1Null() {
                this[this.table_Table.Descripcion1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoriaNull() {
                return this.IsNull(this.table_Table.CategoriaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoriaNull() {
                this[this.table_Table.CategoriaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrupoNull() {
                return this.IsNull(this.table_Table.GrupoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrupoNull() {
                this[this.table_Table.GrupoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamiliaNull() {
                return this.IsNull(this.table_Table.FamiliaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamiliaNull() {
                this[this.table_Table.FamiliaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFabricanteNull() {
                return this.IsNull(this.table_Table.FabricanteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFabricanteNull() {
                this[this.table_Table.FabricanteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMes1Null() {
                return this.IsNull(this.table_Table.Mes1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMes1Null() {
                this[this.table_Table.Mes1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidad1Null() {
                return this.IsNull(this.table_Table.Cantidad1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidad1Null() {
                this[this.table_Table.Cantidad1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMes2Null() {
                return this.IsNull(this.table_Table.Mes2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMes2Null() {
                this[this.table_Table.Mes2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidad2Null() {
                return this.IsNull(this.table_Table.Cantidad2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidad2Null() {
                this[this.table_Table.Cantidad2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMes3Null() {
                return this.IsNull(this.table_Table.Mes3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMes3Null() {
                this[this.table_Table.Mes3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidad3Null() {
                return this.IsNull(this.table_Table.Cantidad3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidad3Null() {
                this[this.table_Table.Cantidad3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaCostoNull() {
                return this.IsNull(this.table_Table.MonedaCostoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaCostoNull() {
                this[this.table_Table.MonedaCostoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUltimoCostoNull() {
                return this.IsNull(this.table_Table.UltimoCostoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUltimoCostoNull() {
                this[this.table_Table.UltimoCostoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoPromedioNull() {
                return this.IsNull(this.table_Table.CostoPromedioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoPromedioNull() {
                this[this.table_Table.CostoPromedioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisponibleNull() {
                return this.IsNull(this.table_Table.DisponibleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisponibleNull() {
                this[this.table_Table.DisponibleColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionNull() {
                return this.IsNull(this.table_Table.SaldoDescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionNull() {
                this[this.table_Table.SaldoDescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteNull() {
                return this.IsNull(this.table_Table.SaldoImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteNull() {
                this[this.table_Table.SaldoImporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica1Null() {
                return this.IsNull(this.table_Table.Grafica1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica1Null() {
                this[this.table_Table.Grafica1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica2Null() {
                return this.IsNull(this.table_Table.Grafica2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica2Null() {
                this[this.table_Table.Grafica2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica3Null() {
                return this.IsNull(this.table_Table.Grafica3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica3Null() {
                this[this.table_Table.Grafica3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica4Null() {
                return this.IsNull(this.table_Table.Grafica4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica4Null() {
                this[this.table_Table.Grafica4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporteNull() {
                return this.IsNull(this.table_Table.ReporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporteNull() {
                this[this.table_Table.ReporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.table_Table.TotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.table_Table.TotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaGraficaNull() {
                return this.IsNull(this.table_Table.FechaGraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaGraficaNull() {
                this[this.table_Table.FechaGraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoNull() {
                return this.IsNull(this.table_Table.PeriodoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoNull() {
                this[this.table_Table.PeriodoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicioNull() {
                return this.IsNull(this.table_Table.EjercicioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicioNull() {
                this[this.table_Table.EjercicioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoDNull() {
                return this.IsNull(this.table_Table.PeriodoDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoDNull() {
                this[this.table_Table.PeriodoDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpcionNull() {
                return this.IsNull(this.table_Table.OpcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpcionNull() {
                this[this.table_Table.OpcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoANull() {
                return this.IsNull(this.table_Table.PeriodoAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoANull() {
                this[this.table_Table.PeriodoAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFolioNull() {
                return this.IsNull(this.table_Table.FolioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFolioNull() {
                this[this.table_Table.FolioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoria2Null() {
                return this.IsNull(this.table_Table.Categoria2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoria2Null() {
                this[this.table_Table.Categoria2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.table_Table.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.table_Table.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.table_Table.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.table_Table.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEtiquetaNull() {
                return this.IsNull(this.table_Table.EtiquetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEtiquetaNull() {
                this[this.table_Table.EtiquetaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.table_Table.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.table_Table.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
