/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformeDineroAcum : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.PageHeaderBand pageHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRLine line2;
        private DevExpress.XtraReports.UI.GroupHeaderBand groupHeaderBand1;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private System.Data.SqlClient.SqlDataAdapter spDineroAcumTableAdapter;
        private System.Data.SqlClient.SqlCommand sqlCommand1;
        private System.Data.SqlClient.SqlConnection sqlConnection1;
        private XtraReportSerialization.dsDatos_1DataSet dsDatos_1;
        private DevExpress.XtraReports.UI.GroupFooterBand groupFooterBand1;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLine line4;
        private DevExpress.XtraReports.UI.PageFooterBand pageFooterBand1;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo5;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo4;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.ReportHeaderBand reportHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label35;
        private DevExpress.XtraReports.UI.XRLabel label34;
        private DevExpress.XtraReports.UI.XRLabel label33;
        private DevExpress.XtraReports.UI.XRLabel label32;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo3;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.XRLabel label198;
        private DevExpress.XtraReports.UI.ReportFooterBand reportFooterBand1;
        private DevExpress.XtraReports.UI.XRChart chart2;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRLabel label24;
        private DevExpress.XtraReports.UI.XRLabel label25;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRLine line9;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.XRLabel label28;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.XRLabel label26;
        private DevExpress.XtraReports.UI.XRLabel label27;
        private XtraReportSerialization.dsDatosDataSet dsDatos;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField FiltroCuentas;
        private DevExpress.XtraReports.UI.CalculatedField FiltroEmpresas;
        private DevExpress.XtraReports.UI.CalculatedField FiltroEjercicios;
        private DevExpress.XtraReports.UI.CalculatedField FiltroMonedas;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter1;
        private System.Data.SqlClient.SqlCommand sqlCommand2;
        private System.Data.SqlClient.SqlConnection sqlConnection2;
        private System.Resources.ResourceManager _resources;
        public InformeDineroAcum() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAACAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsHnWR03AAAAACsAAAB+AQAAJ" +
                        "iQAdABoAGkAcwAuAFMAYwByAGkAcAB0AHMAUwBvAHUAcgBjAGUAAAAAACJwAGkAYwB0AHUAcgBlAEIAb" +
                        "wB4ADIALgBJAG0AYQBnAGUA5xcAAAHkLw0KUHJpdmF0ZSBTdWIgY2hhcnQxX0JlZm9yZVByaW50KEJ5V" +
                        "mFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpb" +
                        "nRFdmVudEFyZ3MpDQogICdTaSBlbCB2YWxvciBkZWwgY2FtcG8gQ2xpZW50ZSBlcyBudWxsIG5vIHNlI" +
                        "G11ZXN0cmEgIA0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkN0YURpbmVybyIpIElTIE5PVEhJT" +
                        "kcNCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0RlZ" +
                        "mluZSB1bmEgRnVlbnRlIHBhcmEgZWwgdMOtdHVsbyBkZSBsYSBncsOhZmljYQ0KICBEaW0gRnVlbnRlV" +
                        "Gl0dWxvIEFzIE5ldyBGb250KCJBcmlhbCIsMTIsRm9udFN0eWxlLkJvbGQpDQogICdHZW5lcmEgdW4gb" +
                        "2JqZXRvIHF1ZSByZXByZXNlbnRhIGEgbGEgZ3LDoWZpY2ENCiAgRGltIEdyYWZpY2ExIEFzIFhSQ2hhc" +
                        "nQgPSBDVHlwZShzZW5kZXIsWFJDaGFydCkNCg0KDQogICdHdWFyZGEgZWwgdmFsb3IgZGUgbGEgY29sd" +
                        "W1uYSBjdWVudGEgeSBkZSBsYSBtb25lZGENCiAgRGltIEN1ZW50YSBBcyBTdHJpbmcgPSBHZXRDdXJyZ" +
                        "W50Q29sdW1uVmFsdWUoIkN0YURpbmVybyIpLlRvU3RyaW5nLnRyaW0oKQ0KICBEaW0gTW9uZWRhIEFzI" +
                        "FN0cmluZyA9IEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiQWN1bU1vbmVkYSIpLlRvU3RyaW5nLnRyaW0oK" +
                        "Q0KICBEaW0gRWplcmNpY2lvIEFzIFN0cmluZyA9IEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiRWplcmNpY" +
                        "2lvIikuVG9TdHJpbmcoKS5UcmltKCkNCg0KDQogICdHZW5lcmEgdW4gb2JqZXRvIHF1ZSByZXByZXNlb" +
                        "nRhIGEgbGEgcGxhbnRpbGxhIGRlIHNlcmllcyBhdXRvY3JlYWRhcw0KICBEaW0gUGxhbnRpbGxhIEFzI" +
                        "FNlcmllc0Jhc2UgPSBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZQ0KDQogJ1NpIGVsIHZhbG9yIGRlbCBjY" +
                        "W1wbyBWZXJHcmFmaWNhRGV0YWxsZSBlcyAwIG5vIHNlIG11ZXN0cmEgDQogIElGIEdldEN1cnJlbnRDb" +
                        "2x1bW5WYWx1ZSgiVmVyR3JhZmljYURldGFsbGUiKSA9IDAgVEhFTg0KJyAgICBlLnZpc2libGUgPSBGY" +
                        "WxzZQ0KICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0dlb" +
                        "mVyYSB1biBvYmpldG8gdGlwbyBUw610dWxvDQogIERpbSBUaXR1bG8xIEFzIE5ldyBDaGFydFRpdGxlK" +
                        "CkNCiAgVGl0dWxvMS5UZXh0ID0gIlJlc3VtZW4gIiArIEN1ZW50YS5UcmltKCkgKyAiIC0gIiArIE1vb" +
                        "mVkYSArICIgKEVqZXJjaWNpbyAiICsgRWplcmNpY2lvICsgIikiIA0KICBUaXR1bG8xLkZvbnQgPSBGd" +
                        "WVudGVUaXR1bG8NCg0KICAnTGltcGlhIGxvcyB0w610dWxvcyBkZSBsYSBncsOhZmljYQ0KICBHcmFma" +
                        "WNhMS5UaXRsZXMuQ2xlYXIoKQ0KDQogICdBZ3JlZ2EgZWwgVMOtdHVsbyBhIGxhIGdyw6FmaWNhDQogI" +
                        "CdHcmFmaWNhMS5UaXRsZXMuQWRkUmFuZ2UoTmV3IENoYXJ0VGl0bGUoKSB7VGl0dWxvMX0pDQogIEdyY" +
                        "WZpY2ExLlRpdGxlcy5BZGQoVGl0dWxvMSkNCg0KICAnQ3JlYSBkb3Mgb2JqZXRvcyB0aXBvIGZpbHRyb" +
                        "yB5IGxvcyBpbmljaWFsaXphIGNvbiBsb3MgZmlsdHJvcyBuZWNlc2FyaW9zDQogIERpbSBGaWx0cm8xI" +
                        "EFzIE5ldyBEYXRhRmlsdGVyKCJDdGFEaW5lcm8iLCJTeXN0ZW0uU3RyaW5nIixEYXRhRmlsdGVyQ29uZ" +
                        "Gl0aW9uLkVxdWFsLEN1ZW50YSkNCiAgRGltIEZpbHRybzIgQXMgTmV3IERhdGFGaWx0ZXIoIkFjdW1Nb" +
                        "25lZGEiLCJTeXN0ZW0uU3RyaW5nIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLE1vbmVkYSkNCiAgR" +
                        "GltIEZpbHRybzMgQXMgTmV3IERhdGFGaWx0ZXIoIkdyYWZpY2EiLCJTeXN0ZW0uSW50ZWdlciIsRGF0Y" +
                        "UZpbHRlckNvbmRpdGlvbi5FcXVhbCwxKQ0KDQogICdMaW1waWEgbG9zIGZpbHRyb3MgZGUgbGEgcGxhb" +
                        "nRpbGxhDQogIFBsYW50aWxsYS5EYXRhRmlsdGVycy5DbGVhcigpDQoNCiAgJ1BvbmUgZWwgQ29uanVjd" +
                        "Glvbk1vZGUgYSBBbmQNCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzQ29uanVuY3Rpb25Nb2RlID0gQ29ua" +
                        "nVuY3Rpb25UeXBlcy5BbmQNCg0KICAnQWdyZWdhIGxvcyBmaWx0cm9zIGEgbGEgcGxhbnRpbGxhDQogI" +
                        "CdQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkUmFuZ2UoTmV3IERhdGFGaWx0ZXIoKSB7RmlsdHJvMSwgR" +
                        "mlsdHJvMiwgRmlsdHJvM30pDQogIFBsYW50aWxsYS5EYXRhRmlsdGVycy5BZGQoRmlsdHJvMSkNCiAgU" +
                        "GxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0cm8yKQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQ" +
                        "WRkKEZpbHRybzMpDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgY2hhcnQyX0JlZm9yZVByaW50KEJ5V" +
                        "mFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpb" +
                        "nRFdmVudEFyZ3MpDQogICdTaSBlbCB2YWxvciBkZWwgY2FtcG8gQ2xpZW50ZSBlcyBudWxsIG5vIHNlI" +
                        "G11ZXN0cmEgIA0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkN0YURpbmVybyIpIElTIE5PVEhJT" +
                        "kcNCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0RlZ" +
                        "mluZSB1bmEgRnVlbnRlIHBhcmEgZWwgdMOtdHVsbyBkZSBsYSBncsOhZmljYQ0KICBEaW0gRnVlbnRlV" +
                        "Gl0dWxvIEFzIE5ldyBGb250KCJBcmlhbCIsMTIsRm9udFN0eWxlLkJvbGQpDQogICdHZW5lcmEgdW4gb" +
                        "2JqZXRvIHF1ZSByZXByZXNlbnRhIGEgbGEgZ3LDoWZpY2ENCiAgRGltIEdyYWZpY2ExIEFzIFhSQ2hhc" +
                        "nQgPSBDVHlwZShzZW5kZXIsWFJDaGFydCkNCg0KDQogICdHdWFyZGEgZWwgdmFsb3IgZGUgbGEgY29sd" +
                        "W1uYSBjbGllbnRlDQogICdEaW0gQ3VlbnRhIEFzIFN0cmluZyA9IEdldEN1cnJlbnRDb2x1bW5WYWx1Z" +
                        "SgiQ3VlbnRhIikuVG9TdHJpbmcNCiAgRGltIE1vbmVkYSBBcyBTdHJpbmcgPSBHZXRDdXJyZW50Q29sd" +
                        "W1uVmFsdWUoIkNvbnRNb25lZGEiKS5Ub1N0cmluZw0KICBEaW0gRWplcmNpY2lvIEFzIFN0cmluZyA9I" +
                        "EdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiRWplcmNpY2lvIikuVG9TdHJpbmcoKS5UcmltKCkNCg0KICAnR" +
                        "2VuZXJhIHVuIG9iamV0byBxdWUgcmVwcmVzZW50YSBhIGxhIHBsYW50aWxsYSBkZSBzZXJpZXMgYXV0b" +
                        "2NyZWFkYXMNCiAgRGltIFBsYW50aWxsYSBBcyBTZXJpZXNCYXNlID0gR3JhZmljYTEuU2VyaWVzVGVtc" +
                        "GxhdGUNCg0KICAnR2VuZXJhIHVuIG9iamV0byB0aXBvIFTDrXR1bG8NCiAgRGltIFRpdHVsbzEgQXMgT" +
                        "mV3IENoYXJ0VGl0bGUoKQ0KICBUaXR1bG8xLlRleHQgPSAiUmVzdW1lbiBHZW5lcmFsIC0gIiArIE1vb" +
                        "mVkYSArICIgKEVqZXJjaWNpbyAiICsgRWplcmNpY2lvICsgIikiIA0KDQogIFRpdHVsbzEuRm9udCA9I" +
                        "EZ1ZW50ZVRpdHVsbw0KDQogICdMaW1waWEgbG9zIHTDrXR1bG9zIGRlIGxhIGdyw6FmaWNhDQogIEdyY" +
                        "WZpY2ExLlRpdGxlcy5DbGVhcigpDQoNCiAgJ0FncmVnYSBlbCBUw610dWxvIGEgbGEgZ3LDoWZpY2ENC" +
                        "iAgJ0dyYWZpY2ExLlRpdGxlcy5BZGRSYW5nZShOZXcgQ2hhcnRUaXRsZSgpIHtUaXR1bG8xfSkNCiAgR" +
                        "3JhZmljYTEuVGl0bGVzLkFkZChUaXR1bG8xKQ0KDQogICdDcmVhIGRvcyBvYmpldG9zIHRpcG8gZmlsd" +
                        "HJvIHkgbG9zIGluaWNpYWxpemEgY29uIGxvcyBmaWx0cm9zIG5lY2VzYXJpb3MNCiAgRGltIEZpbHRyb" +
                        "zEgQXMgTmV3IERhdGFGaWx0ZXIoIkNvbnRNb25lZGEiLCJTeXN0ZW0uU3RyaW5nIixEYXRhRmlsdGVyQ" +
                        "29uZGl0aW9uLkVxdWFsLE1vbmVkYSkNCiAgRGltIEZpbHRybzIgQXMgTmV3IERhdGFGaWx0ZXIoIkdyY" +
                        "WZpY2EiLCJTeXN0ZW0uSW50ZWdlciIsRGF0YUZpbHRlckNvbmRpdGlvbi5FcXVhbCwyKQ0KDQoNCiAgJ" +
                        "0xpbXBpYSBsb3MgZmlsdHJvcyBkZSBsYSBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzL" +
                        "kNsZWFyKCkNCg0KICAnUG9uZSBlbCBDb25qdWN0aW9uTW9kZSBhIEFuZA0KICBQbGFudGlsbGEuRGF0Y" +
                        "UZpbHRlcnNDb25qdW5jdGlvbk1vZGUgPSBDb25qdW5jdGlvblR5cGVzLkFuZA0KDQogICdBZ3JlZ2Egb" +
                        "G9zIGZpbHRyb3MgYSBsYSBwbGFudGlsbGENCiAgJ1BsYW50aWxsYS5EYXRhRmlsdGVycy5BZGRSYW5nZ" +
                        "ShOZXcgRGF0YUZpbHRlcigpIHtGaWx0cm8xLCBGaWx0cm8yLCBGaWx0cm8zfSkNCiAgUGxhbnRpbGxhL" +
                        "kRhdGFGaWx0ZXJzLkFkZChGaWx0cm8xKQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRyb" +
                        "zIpDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgZ3JvdXBIZWFkZXJCYW5kMV9CZWZvcmVQcmludChCe" +
                        "VZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlBya" +
                        "W50RXZlbnRBcmdzKQ0KDQogJ1NpIGVsIHZhbG9yIGRlbCBjYW1wbyBncmFmaWNhIGVzIDIgbm8gc2Ugb" +
                        "XVlc3RyYSANCiBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkdyYWZpY2EiKSA9IDEgVEhFTiAgICAgD" +
                        "QogICAgIGUuQ2FuY2VsID0gRmFsc2UNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogI" +
                        "EVORCBJRiANCg0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBEZXRhaWxfQmVmb3JlUHJpbnQoQnlWYWwgc" +
                        "2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2Z" +
                        "W50QXJncykNCg0KICdTaSBlbCB2YWxvciBkZWwgY2FtcG8gZ3JhZmljYSBlcyAyIG5vIHNlIG11ZXN0c" +
                        "mEgDQogSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJHcmFmaWNhIikgPSAxIFRIRU4gICAgIA0KICAgI" +
                        "CBlLkNhbmNlbCA9IEZhbHNlDQogIEVMU0UNCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICBFTkQgS" +
                        "UYgDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgZ3JvdXBGb290ZXJCYW5kMV9CZWZvcmVQcmludChCe" +
                        "VZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlBya" +
                        "W50RXZlbnRBcmdzKQ0KICdTaSBlbCB2YWxvciBkZWwgY2FtcG8gZ3JhZmljYSBlcyAyIG5vIHNlIG11Z" +
                        "XN0cmEgDQogSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJHcmFmaWNhIikgPSAxIFRIRU4gICAgIA0KI" +
                        "CAgICBlLkNhbmNlbCA9IEZhbHNlDQogIEVMU0UNCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICBFT" +
                        "kQgSUYgDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgZ3JvdXBIZWFkZXJCYW5kMV9CZWZvcmVQcmlud" +
                        "F8xKEJ5VmFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpb" +
                        "mcuUHJpbnRFdmVudEFyZ3MpDQoNCiAnU2kgZWwgdmFsb3IgZGVsIGNhbXBvIGdyYWZpY2EgZXMgVmVyZ" +
                        "GFkZXJvIG5vIHNlIG11ZXN0cmEgDQonIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYSIpI" +
                        "D0gMCBUSEVOICAgICANCicgICAgIGUuQ2FuY2VsID0gRmFsc2UNCicgIEVMU0UNCicgICAgIGUuQ2FuY" +
                        "2VsID0gVHJ1ZSAgICANCicgIEVORCBJRiANCg0KICdTaSBlbCB2YWxvciBkZWwgY2FtcG8gVmVyR3JhZ" +
                        "mljYURldGFsbGUgZXMgMCBubyBzZSBtdWVzdHJhIA0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoI" +
                        "lZlckdyYWZpY2FEZXRhbGxlIikgPSAwIFRIRU4NCicgICAgZS52aXNpYmxlID0gRmFsc2UNCiAgICBlL" +
                        "kNhbmNlbCA9IFRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQpFbmQgU3ViDQoNClByaXZhd" +
                        "GUgU3ViIEdyb3VwSGVhZGVyMV9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhb" +
                        "CBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogJ1NpIGVsIHZhb" +
                        "G9yIGRlbCBjYW1wbyBncmFmaWNhIGVzIFZlcmRhZGVybyBubyBzZSBtdWVzdHJhIA0KJyBJRiBHZXRDd" +
                        "XJyZW50Q29sdW1uVmFsdWUoIkdyYWZpY2EiKSA9IDAgVEhFTiAgICAgDQonICAgICBlLkNhbmNlbCA9I" +
                        "EZhbHNlDQonICBFTFNFDQonICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQonICBFTkQgSUYgDQoNCiAnU" +
                        "2kgZWwgdmFsb3IgZGVsIGNhbXBvIFZlckdyYWZpY2FEZXRhbGxlIGVzIDEgbm8gc2UgbXVlc3RyYSANC" +
                        "iAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJWZXJHcmFmaWNhRGV0YWxsZSIpID0gMSBUSEVODQonI" +
                        "CAgIGUudmlzaWJsZSA9IEZhbHNlDQogICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgIFJFVFVSTg0KI" +
                        "CBFTkQgSUYNCg0KRW5kIFN1Yg0KQAABAAAA/////wEAAAAAAAAADAIAAABRU3lzdGVtLkRyYXdpbmcsI" +
                        "FZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZ" +
                        "DUwYTNhBQEAAAAVU3lzdGVtLkRyYXdpbmcuQml0bWFwAQAAAAREYXRhBwICAAAACQMAAAAPAwAAAFrBA" +
                        "AAC/9j/4AAQSkZJRgABAQEAlgCWAAD/7gAOQWRvYmUAZAAAAAAB/+ERlkV4aWYAAE1NACoAAAAIAAcBE" +
                        "gADAAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAHAAAAHIBM" +
                        "gACAAAAFAAAAI6HaQAEAAAAAQAAAKIAAADCAJYAAAABAAAAlgAAAAEAAEFkb2JlIFBob3Rvc2hvcCBDU" +
                        "zUgV2luZG93cwAyMDExOjAxOjE4IDA5OjUxOjA2AAACoAIABAAAAAEAAAFioAMABAAAAAEAAACBAAAAA" +
                        "AAAAAYBAwADAAAAAQAGAAABGgAFAAAAAQAAARABGwAFAAAAAQAAARgBKAADAAAAAQACAAACAQAEAAAAA" +
                        "QAAASACAgAEAAAAAQAAEG4AAAAAAAAASAAAAAEAAABIAAAAAf/Y/+0ADEFkb2JlX0NNAAH/7gAOQWRvY" +
                        "mUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA6AKADASIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBA" +
                        "QEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFB" +
                        "wYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTV" +
                        "GRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9" +
                        "xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJ" +
                        "QYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R" +
                        "1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1VJJJJSlgYWR9Z3fWTIqyqg3pLd/pu2tDdoj0HVWA+q+2z/DMf" +
                        "/4H+jV36w9WPSOk3ZrGtfa3a2ljpgveQxu7b+a2fUch/VjquX1bpDMzLrbXY572gskNcGu2eo1ri9zP3" +
                        "Ppp/tS9v3f0OLg/wlnux9z2/wBKuL/BdZJJJMXqSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//" +
                        "9D1VZ/WutYnR8T17/fY+W0UNPusd+6391jf8JZ/g03W+t4nRsT17/fY+W0UNPusd4D91jf8JZ/g1xvTO" +
                        "mdR+tfUX5+e8txWnbZY2QIB/oeH+6xv+Ft/9H/zaUr6x9Tys36r9OuynB12Xk23ODRDWis3VV1M/kMY5" +
                        "n0kXqw6l0von1f6h08FlWJTuttGoD7xU+Miv/Q2u9Rv9f8A0dnpK1/jBwaqOldPGOwVUY9ppZW0QAHMc" +
                        "W/+el0PQHU5f1dwQQLKn4tdb2OALTDBVaxzT9L6LmLQjkGPlsE+HiAnPjidjxcUf+g0ZYzk5nNG+EmEO" +
                        "GQ3Fer/AKbD6vfWHF63i72fo8muBkY5OrT+839+p/5j1rLzvrvQs76sZrerdIc4YgdodXGouP8AMX/6X" +
                        "Fs+ix7v+Ls/S+lbZ131e+sON1vF3sHp5NUDIoJktJ/Ob+/U/wDMeoeY5eIj72E8WGX+Njl+7JlwZ5GRx" +
                        "ZRw5Y/4uSP78UvXeuYnQ8H7blte+svFYbXtmSC7/COrZ9FjvzleqtZdUy6syyxoe0+ThuasH68dRy+m9" +
                        "IryMNzWX+u1rbHMa8tllpLqxaHsa/27Po/QWT1PrP1lf1fC6d03KFb8rFqsDXMr2l5bZZa4vfU/b7a03" +
                        "Hys8kRISjEHi+Y/5v5rXZOZhCRiRKUhw6RH7/yvbrK679YMXoddFmVXZYy95ZNYadsDcXOD3M/6K5vI6" +
                        "x9dOhOFvV2Ny8Oz2uewMG0n/R20sZ6dv7nr0+k9Zf1of1e7Fx8rKzG53S73F+DZtYyyC3d+mZTXXtsY3" +
                        "9FZ/L/0amw8leSPHKEscusJfP8A1Y/1mLNzlY5GMZCceko/L/Wl/VfTUlytXU/rD0LDys36x215LPYzE" +
                        "pr2h7rTu9u+uuprK9v09/qfQ/7co49v+MLqmP8AtDHtrx6njfTRDGbm9vSbdXc/a78z7Taz/MUQ5SRs+" +
                        "5jEAeH3DL0Sl2iyHmQKHBMzI4uAD1xj3k9wuV+qH1hz+oY3UsvqVgezGIe1rGBoYza+x7W7fe/6P56P9" +
                        "V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa+WGdlrNzd35j/5ypYv1FsNfSOtWBrXljNwa8S0xXYdr2/nMT44DH" +
                        "FnjMDjHtcMt/nlvGX9ZZLOJZMBiTwEZOIf3I/pR/qvWdC63idcwftuI17GB5rc2zbuDmwf8G6xn0XN/P" +
                        "WiuI6f9beoY31Uf1HJIyst2UcaiWtYwfo22N9RlAq9jGts/l/mJY7P8YWbit6hTmVBrxurpBqkg8bQKb" +
                        "Kf+3L037nMXxzhACXBxSOkpf1V33uBrhjOZI46iNYx8Xr8/NpwMK/Nvn0sdjrHhokw0bvbMIfSep0dW6" +
                        "fT1DHDm1XTDXRILXOqe07C9n02fvLCr6v1236t9Tt6phjHysNjhXZYz2WED+c9Czex3pu/P/o9n+DVSz" +
                        "63Z+F9VsHKfGR1HOdc0WvaA0Cux7XWOrq9NrnbPTYxn/XE0cpkJocJ9ft6G9eH3OL+7wrjzWMCzY9Pua" +
                        "jpxcH+NxPaJLim4/wDjGdQ3MZl1WFwBFDTSSQf+s/Zv/ZhdD9Xc/qWf071up4pxMlr3MLS1zN4ERaKrP" +
                        "fX9LZ/YTcnLmEeIThMA0eCWoTjz8Z4TCcLFjjGhf//R7P61/Vk9VaM3EMZ9LNgY4+2ysEv9H3e2qzc79" +
                        "FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY9rhsLXA7PsmS327LGu9ldn/AFu39L/O9qub+tX1VZ1RjszDa1ue1" +
                        "sPYYDb2gR6dk+1tzW/zVv8A1q39H/MpTe+tHTHdT6Jk49bd17QLaByd9Z3hrf8AjG7qv+uLE/xedXZbi" +
                        "2dJsd+kpJuxwe9bzNjR/wAVc7/wZR+qn1oex7ekdVc4ODvSx7rJDg4HZ9kyd3u9Xd7Knv8A+Ks/Sfzuf" +
                        "9Yeg3DOf1X6ul2RU+x7Lm4jpfTfrXkNb6Z37LdzvU/0f/Eq5y0oZMcuXmeHiPHjkf0ZtTmYzx5I54Di4" +
                        "RwZIj9KH/oLc+t31rNzn9F6TNjrD6ORawbi4u9hxcdo+m9/0LH/APW6/f8Azep9UPquej1Oy8szn5DQ1" +
                        "zAZbUyd3ogj6dm7+ds/7a/0lsPqn9UmdJY3NzWtf1BzYa0QW0tI/m6/3rXf4W3/AK1V+j/numQz5oRh7" +
                        "GD5P059csv+9ThwylP383z/AKEOmKP/AHzyn+Mj/kGr/wAMt/8APdyzx/4tOjf+FKv/AD1kLpfrLhdOz" +
                        "sGrG6iLfRsyKmMfToW2PPo1Ocf9G51npfR/wiouZ9Xj1M9UYLTk9IfX08VMMtLn7aKNrHe6za7KdTv3/" +
                        "mWf6NPw5QMIjUiayx0Gl5eGMFmXETmMrG+OXj+r9UnS+sdbLOgdRbY0OAxrXAHxa02Md/Ze3cuAz22u+" +
                        "pXTH8sZk3s+BcbXMH4PXpNzcTPoycMvbYx7XU5DWOG5u8bXNdt/m37XKhi9L6JgdKf0iyxl2I0Ofa3Ie" +
                        "wna5xJfZ9Da1tv0H/vpnL5xiiAQTIZBPh/q8MoFfzGH3JEggAwML/rcXE4n12vx+q9AqzenXNyace5r7" +
                        "thna17X17rWfTr2vez2Pas/pnScTqGIy9v1jtpdtAsosftdWQI9Pa69vtb+Y76C6fpv1f6D0jJu9A+/q" +
                        "DdgotsDwWDc411Vv91jPd7t/qrLZ9UPqv1Kyy2oXYm263HFLXtDS+lzmWGllnrez2bv6n+DU2PPjjAwj" +
                        "KcYRPFHJwRlpP8ARlGX/SYsmGcp8ZEZSkOGUOOUfl/SjKKbof1Trxep19XZ1Q55Zva4wHbiW+l7rvUs+" +
                        "gsf6lvY3pHXKS4C30i70zztDLGF3+f7V1n1e6R0vpWLbX02w3V2WF1jy8P9wAr2/ow1jdm1Yoq6CepV9" +
                        "Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67H13ei79Jucxn+j/AEv6RNjmM/djIynpDhlwxh/NH3OGUfT/AFkyw" +
                        "iAxSiBD5+KNymP1w4OLi9TmdDv6NT9TLf2xW63GszSxjawS/wBQsrcx1TgW7HMa17t2/wD9Jqbfq3jU1" +
                        "Oz/AKvdebTWQCfUs9OPzv091JZt/wCLuxV0ON0zoXTMb/m/Ywvxslj8ix+Q5paYfTTD3+zbbvtp9H02f" +
                        "4P/AEqo2/UH6tOyvT9e6u18uZji1hO0fuerXZfs/tp45iHFM8U4CcjP5Rkxzh/c/RWnl5cMBwwmYxEfm" +
                        "9vJCX99z8Tr3UOp/V/reJnObe/EoJbksAAcHb2w7YG1u/m/0T2s/SVp8e7oDfqb0ynrTXll1twpfUCX1" +
                        "uFt2+8Ob+bW13v/AJzf/obF0tHRug09Pv6RjhjKr6ybw182Frhs9d7yXWdva/6CVHROiO6WOi7W5WNjH" +
                        "3Me7c9rnE2+o57Nr6rXeo53s9NRnmMWvDGcI+4MlQ9BEeDg4h+7614wZNLlGcvbOP1eocXHx1/ivLO+r" +
                        "32Co53Qev1V45M/pLRW3/rllRdRa7/jMZbv1L67m9YwrvtoDrcZ4b6zRtDw4bvc0ez1Gfn7P5CpD6ifV" +
                        "dzftTcq00au3C2sshs7/wBL6e7azb7v0q6Xp2DgYGK2jp9basf6Tdhndu/wheS51m799zkuYzY5YzGzk" +
                        "nek5QGOUK6GX6SeXw5I5AdMcK1hGZnGd9h+i//S9VSSSSU859afqs3qbHZuE0N6g1vuZoG3tA/m3z7W3" +
                        "N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/bMloFlTXH062j6Ne1p9O25v59//AFun9H/O9AkkpSSSSSmn1jEsz" +
                        "Om30VfzxbvokwPVrIux/d/x9dax6OgZwzMG6ws2ms3Z/BjKab76TW389n2nqWRb/wCg1K6RJWMXu+2eG" +
                        "uG5Xffh/l/hsGX2uMcV8VDbtxPPfVvo+Tg2VnKqsZbj4/2Y2bqDS/3Nfuq+z11ZVm5zPVa/N/Ss9a78+" +
                        "yyxNX9XpycO23FpdszM2/JcQ0ksudkOxi7T9J9PG9v+D/60uiSUkve457XR4uHi/dybf8//AA1kfa4I3" +
                        "fDYrir96Dx7+hda+wY2GKvdTTS2t7XVQx9V773NtvsacrZXS3H+xNxfz/V9ZGf0DqxdnbdjhnjNqrc92" +
                        "uOLn2XU20bR/NZstZm/4f1PQ/wdXps6pJSH39f5v5pXX7ywezp8/wAsd/3XH6BgWYzr7rabcey1tTCyw" +
                        "4+39EHAek3p7Kq9rN/pepa31X1sq/0aDh9KzqmfV8WMAPTqnMyvcDtJo9D2/v8A6RbySgPucU/l21q6r" +
                        "2p/L/1NlHBwQviqxV1xX7sPm/w3K6j0r7b1FlttNd+OzEvqAsAcBZY6nb7HfvVss96yW9H605+A26oE4" +
                        "pwXG1rqoikMbl+va5js27K3euyv07Psv2d/+k9Su3q0k7F7vCK4ar08d9/0UZPb4jfFd68NPGdHw3W4O" +
                        "LkV4bK6sazNvtzpZusa4ZWP6DWt/TOc99jHXer+h2Y1f857PSWH0XMzelY/2XFrwQOmCg2hzR9oNpx79" +
                        "n6Nr3+h6dFvqPyW7/Uy3/oLa/V9Xs0lMfd4jQjxcWms/wB7J+96f32KPt8Isy4eHXSP7sP3fV/3bzmL0" +
                        "N77Me27Hs2/bftGRVlGhwhuLbjV3V1YTW4388+ln+l/ReqtDpFGVhMbhHGbXjB2TY2xr27WB2Q9+Ljtp" +
                        "H5rsa3f/wAF6fpLTSVfN7lHj4eHSq4uH9Ph4WfFwacPFeu/Df6PFb//2f/tGNBQaG90b3Nob3AgMy4wA" +
                        "DhCSU0EJQAAAAAAEAAAAAAAAAAAAAAAAAAAAAA4QklNBDoAAAAAAJMAAAAQAAAAAQAAAAAAC3ByaW50T" +
                        "3V0cHV0AAAABQAAAABDbHJTZW51bQAAAABDbHJTAAAAAFJHQkMAAAAASW50ZWVudW0AAAAASW50ZQAAA" +
                        "ABDbHJtAAAAAE1wQmxib29sAQAAAA9wcmludFNpeHRlZW5CaXRib29sAAAAAAtwcmludGVyTmFtZVRFW" +
                        "FQAAAABAAAAOEJJTQQ7AAAAAAGyAAAAEAAAAAEAAAAAABJwcmludE91dHB1dE9wdGlvbnMAAAASAAAAA" +
                        "ENwdG5ib29sAAAAAABDbGJyYm9vbAAAAAAAUmdzTWJvb2wAAAAAAENybkNib29sAAAAAABDbnRDYm9vb" +
                        "AAAAAAATGJsc2Jvb2wAAAAAAE5ndHZib29sAAAAAABFbWxEYm9vbAAAAAAASW50cmJvb2wAAAAAAEJja" +
                        "2dPYmpjAAAAAQAAAAAAAFJHQkMAAAADAAAAAFJkICBkb3ViQG/gAAAAAAAAAAAAR3JuIGRvdWJAb+AAA" +
                        "AAAAAAAAABCbCAgZG91YkBv4AAAAAAAAAAAAEJyZFRVbnRGI1JsdAAAAAAAAAAAAAAAAEJsZCBVbnRGI" +
                        "1JsdAAAAAAAAAAAAAAAAFJzbHRVbnRGI1B4bEBiwAAAAAAAAAAACnZlY3RvckRhdGFib29sAQAAAABQZ" +
                        "1BzZW51bQAAAABQZ1BzAAAAAFBnUEMAAAAATGVmdFVudEYjUmx0AAAAAAAAAAAAAAAAVG9wIFVudEYjU" +
                        "mx0AAAAAAAAAAAAAAAAU2NsIFVudEYjUHJjQFkAAAAAAAA4QklNA+0AAAAAABAAlgAAAAEAAgCWAAAAA" +
                        "QACOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNBA0AAAAAAAQAAAB4OEJJTQQZAAAAAAAEAAAAH" +
                        "jhCSU0D8wAAAAAACQAAAAAAAAAAAQA4QklNJxAAAAAAAAoAAQAAAAAAAAACOEJJTQP1AAAAAABIAC9mZ" +
                        "gABAGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABADIAAAABAFoAAAAGAAAAAAABADUAAAABAC0AA" +
                        "AAGAAAAAAABOEJJTQP4AAAAAABwAAD/////////////////////////////A+gAAAAA/////////////" +
                        "////////////////wPoAAAAAP////////////////////////////8D6AAAAAD//////////////////" +
                        "///////////A+gAADhCSU0EAAAAAAAAAgABOEJJTQQCAAAAAAAEAAAAADhCSU0EMAAAAAAAAgEBOEJJT" +
                        "QQtAAAAAAAGAAEAAAADOEJJTQQIAAAAAAAQAAAAAQAAAkAAAAJAAAAAADhCSU0EHgAAAAAABAAAAAA4Q" +
                        "klNBBoAAAAAA0kAAAAGAAAAAAAAAAAAAACBAAABYgAAAAoAVQBuAHQAaQB0AGwAZQBkAC0AMQAAAAEAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABYgAAAIEAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5kc09iamMAAAABAAAAAAAAUmN0MQAAA" +
                        "AQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tbG9uZwAAAIEAAAAAUmdodGxvb" +
                        "mcAAAFiAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVzbGljZQAAABIAAAAHc2xpY2VJRGxvb" +
                        "mcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlnaW5lbnVtAAAADEVTbGljZU9yaWdpbgAAAA1hd" +
                        "XRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZVR5cGUAAAAASW1nIAAAAAZib3VuZHNPYmpjA" +
                        "AAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvb" +
                        "mcAAACBAAAAAFJnaHRsb25nAAABYgAAAAN1cmxURVhUAAAAAQAAAAAAAG51bGxURVhUAAAAAQAAAAAAA" +
                        "E1zZ2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABAAAAAAAOY2VsbFRleHRJc0hUTUxib29sAQAAA" +
                        "AhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWduZW51bQAAAA9FU2xpY2VIb3J6QWxpZ24AAAAHZ" +
                        "GVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VTbGljZVZlcnRBbGlnbgAAAAdkZWZhdWx0AAAAC2JnQ" +
                        "29sb3JUeXBlZW51bQAAABFFU2xpY2VCR0NvbG9yVHlwZQAAAABOb25lAAAACXRvcE91dHNldGxvbmcAA" +
                        "AAAAAAACmxlZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b21PdXRzZXRsb25nAAAAAAAAAAtyaWdodE91d" +
                        "HNldGxvbmcAAAAAADhCSU0EKAAAAAAADAAAAAI/8AAAAAAAADhCSU0EFAAAAAAABAAAAAQ4QklNBAwAA" +
                        "AAAEIoAAAABAAAAoAAAADoAAAHgAABswAAAEG4AGAAB/9j/7QAMQWRvYmVfQ00AAf/uAA5BZG9iZQBkg" +
                        "AAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMDAwMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACEQEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAA" +
                        "AAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFA" +
                        "wwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo" +
                        "3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACA" +
                        "gECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhais" +
                        "oMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h" +
                        "5ent8f/2gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMirKqDekt3+m7a0N2iPQdVYD6r7bP8Mx//gf6N" +
                        "XfrD1Y9I6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5fVukMzMuttdjnvaCyQ1wa7Z6jWuL3M/c+mn+1" +
                        "L2/d/Q4uD/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJT//0PVVn" +
                        "9a61idHxPXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGxPXv99j5bRQ0+6x3gP3WN/wln+DXG9M6Z1H61" +
                        "9Rfn57y3FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzfqv067KcHXZeTbc4NENaKzdVXUz+QxjmfSRer" +
                        "DqXS+ifV/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2ekrX+MHBqo6V08Y7BVRj2mllbRAAcxxb/56X" +
                        "Q9AdTl/V3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+WwT4eICc+OJ2PFxR/6DRljOTmc0b4SYQ4ZDcV6" +
                        "v8ApsPq99YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u9Czvqxmt6t0hzhiB2h1cai4/wAxf/pcWz6LH" +
                        "u/4uz9L6VtnXfV76w43W8Xewenk1QMigmS0n85v79T/AMx6h5jl4iPvYTxYZf42OX7smXBnkZHFlHDlj" +
                        "/i5I/vxS9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/OV6q1l1TLqzLLGh7T5OG5qwfrx1HL6b0ivIw3" +
                        "NZf67Wtscxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3TcoVvysWqwNcyvaXltllri99T9vtrTcfKzyR" +
                        "EhKMQeL5j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh10WZVdljL3lk1hp2wNxc4Pcz/orm8jrH106E" +
                        "4W9XY3Lw7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXHysrMbndLvcX4Nm1jLILd36ZlNde2xjf0Vn8v" +
                        "/RqbDyV5I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9aX9V9NSXK1dT+sPQsPKzfrHbXks9jMSmvaHu" +
                        "tO727666msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9NEMZub29Jt1dz9rvzPtNrP8xRDlJGz7mMQB4" +
                        "fcMvRKXaLIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy+pWB7MYh7WsYGhjNr7Htbt97/o/no/1X+suT" +
                        "1G63pnU6vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw19I61YGteWM3BrxLTFdh2vb+cxPjgMcWeMwO" +
                        "Me1wy3+eW8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1zB+24jXsYHmtzbNu4ObB/wbrGfRc389aK4jp" +
                        "/1t6hjfVR/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+Yljs/xhZuK3qFOZUGvG6ukGqSDxtApsp/7cv" +
                        "TfucxfHOEAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82nAwr82+fSx2OseGiTDRu9swh9J6nR1bp9PUMc" +
                        "ObVdMNdEgtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2OFdljPZYQP5z0LN7Hem78/+j2f4NVLPrdn4X" +
                        "1Wwcp8ZHUc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRymQmhwn1+3ob14fc4v7vCuPNYwLNj0+5qOnFwf" +
                        "43E9okuKbj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1dz+pZ/TvW6ninEyWvcwtLXM3gRFoqs99f0tn" +
                        "9hNycuYR4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9WT1VozcQxn0s2Bjj7bKwS/0fd7arNzv0Vn9i7" +
                        "/SU5n1T+s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2f8AW7f0v872q5v61fVVnVGOzMNrW57Ww9hgN" +
                        "vaBHp2T7W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3XtAtoHJ31neGt/wCMbuq/64sT/F51dluLZ0mx3" +
                        "6Skm7HB71vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHuskODgdn2TJ3e71d3sqe/wD4qz9J/O5/1h6Dc" +
                        "M5/Vfq6XZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnLShkxy5eZ4eI8eOR/Rm1OZjPHkjngOLhHBkiP" +
                        "0of+gtz63fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qsf8A9br9/wDN6n1Q+q56PU7LyzOfkNDXMBltT" +
                        "J3eiCPp2bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS0j+br/etd/hbf8ArVX6P+e6ZDPmhGHsYPk/T" +
                        "n1yy/71OHDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/wA93LPH/i06N/4Uq/8APWQul+suF07Owasbq" +
                        "It9GzIqYx9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1RgtOT0h9fTxUwy0uftoo2sd7rNrsp1O/f+ZZ/o0" +
                        "/DlAwiNSJrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6B1FtjQ4DGtcAfFrTYx39l7dy4DPba76ldMfy" +
                        "xmTez4Fxtcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc123+bftcqGL0vomB0p/SLLGXYjQ59rch7CdrnE" +
                        "l9n0NrW2/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCADAwv+txcTifXa/H6r0CrN6dc3Jpx7mvu2GdrX" +
                        "tfXutZ9Ova97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZAj09rr2+1v5jvoLp+m/V/oPSMm70D7+oN2Ci2" +
                        "wPBYNzjXVW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte0NL6XOZYaWWet7PZu/qf4NTY8+OMDCMpxhE8" +
                        "UcnBGWk/wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/VOvF6nX1dnVDnlm9rjAduJb6Xuu9Sz6Cx/qW" +
                        "9jekdcpLgLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDdXZYXWPLw/3ACvb+jDWN2bViiroJ6lX1Srp2Z" +
                        "ZZ1Wl5pYzYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2OYz92MjKekOGXDGH80fc4ZR9P8AWTLCIDFKI" +
                        "EPn4o3KY/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/AFCytzHVOBbscxrXu3b/AP0mpt+reNTU7P8Aq" +
                        "915tNZAJ9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC/GyWPyLH5Dmlph9NMPf7Ntu+2n0fTZ/g/8AS" +
                        "qjb9Qfq07K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzxTgJyM/lGTHOH9z9FaeXlwwHDCZjER+b28kJf" +
                        "33PxOvdQ6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RPaz9JWnx7ugN+pvTKetNeWXW3Cl9QJfW4W3b7" +
                        "w5v5tbXe/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWuGz13vJdZ29r/oJUdE6I7pY6LtblY2Mfcx7tz" +
                        "2ucTb6jns2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH7vrXjBk0uUZy9s4/V6hxcfHX+K8s76vfYKjn" +
                        "dB6/VXjkz+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOtxnhvrNG0PDhu9zR7PUZ+fs/kKkPqJ9V3N+1N" +
                        "yrTRq7cLayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx/pN2Gd27/CF5LnWbv33OS5jNjljMbOSd6TlA" +
                        "Y5QroZfpJ5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1p+qzepsdm4TQ3qDW+5mgbe0D+bfPtbc3/A3f" +
                        "9at/R/zM/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07bm/n3/8AW6f0f870CSSlJJJJKafWMSzM6bfRV" +
                        "/PFu+iTA9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppvvpNbfz2faepZFv/AKDUrpElYxe77Z4a4bld9" +
                        "+H+X+GwZfa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZuoNL/c1+6r7PXVlWbnM9Vr839Kz1rvz7LLE1f" +
                        "1enJw7bcWl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6JJSS97jntdHi4eL93Jt/z/8ADWR9rgjd8NiuK" +
                        "v3oPHv6F1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLcf7E3F/P9X1kZ/QOrF2dt2OGeM2qtz3a44ufZ" +
                        "dTbRtH81my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7Onz/ACx3/dcfoGBZjOvutptx7LW1MLLDj7f0Q" +
                        "cB6Tensqr2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9OqczK9wO0mj0Pb+/wDpFvJKA+5xT+XbWrqvan8v/" +
                        "U2UcHBC+KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCwBwFljqdvsd+9Wyz3rJb0frTn4DbqgTinBcbW" +
                        "uqiKQxuX69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8IrhqvTx33/RRk9viN8V3rw08Z0fDdbg4uRXhs" +
                        "rqxrM2+3Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9JYfRczN6Vj/ZcWvBA6YKDaHNH2g2nHv2fo2vf" +
                        "6Hp0W+o/Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn73p/fYo+3wizLh4ddI/uw/d9X/dvOYvQ3vsx7" +
                        "bsezb9t+0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0OkUZWExuEcZteMHZNjbGvbtYHZD34uO2kfmuxr" +
                        "d//AAXp+ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/o8Vv//ZOEJJTQQhAAAAAABVAAAAAQEAAAAPA" +
                        "EEAZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwAAAAEwBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoA" +
                        "G8AcAAgAEMAUwA1AAAAAQA4QklNBAYAAAAAAAcABwAAAAEBAP/hDdBodHRwOi8vbnMuYWRvYmUuY29tL" +
                        "3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkI" +
                        "j8+DQo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ" +
                        "29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTItMTc6MzI6MDAgICAgICAgICI+DQoJPHJkZ" +
                        "jpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjI" +
                        "j4NCgkJPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvY" +
                        "mUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tL" +
                        "yIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2Z" +
                        "W50IyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczpwaG90b" +
                        "3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8iIHhtcDpDcmVhdG9yVG9vbD0iQ" +
                        "WRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXA6Q3JlYXRlRGF0ZT0iMjAxMS0wMS0xOFQwOTo1M" +
                        "TowNi0wNjowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wO" +
                        "k1vZGlmeURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcE1NOkluc3RhbmNlSUQ9Inhtc" +
                        "C5paWQ6MzQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHhtcE1NOkRvY3VtZW50SUQ9Inhtc" +
                        "C5kaWQ6MzM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHhtcE1NOk9yaWdpbmFsRG9jdW1lb" +
                        "nRJRD0ieG1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5OCIgZGM6Zm9ybWF0PSJpb" +
                        "WFnZS9qcGVnIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b3Nob3A6SUNDUHJvZmlsZT0ic1JHQ" +
                        "iBJRUM2MTk2Ni0yLjEiPg0KCQkJPHhtcE1NOkhpc3Rvcnk+DQoJCQkJPHJkZjpTZXE+DQoJCQkJCTxyZ" +
                        "GY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjMzNEMwO" +
                        "UFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3aGVuPSIyMDExLTAxLTE4VDA5OjUxOjA2L" +
                        "TA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiLz4NC" +
                        "gkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkO" +
                        "jM0NEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3aGVuPSIyMDExLTAxLTE4VDA5O" +
                        "jUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd" +
                        "3MiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4NCgkJCQk8L3JkZjpTZXE+DQoJCQk8L3htcE1NOkhpc3Rvcnk+D" +
                        "QoJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJERj4NCjwveDp4bXBtZXRhPg0KICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgIDw/eHBhY2tldCBlbmQ9J3cnPz7/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlub" +
                        "wIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAA" +
                        "QAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia3B0AAACBAAAABRyWFlaAAACG" +
                        "AAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAADT" +
                        "AAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoAAAEMAAAAAxyVFJDAAAEP" +
                        "AAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdodCAoYykgMTk5OCBIZXdsZ" +
                        "XR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAA" +
                        "BJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvo" +
                        "gAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAAAAAAF" +
                        "klFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5N" +
                        "jYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtM" +
                        "i4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzY" +
                        "wAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAA" +
                        "AAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJV" +
                        "gBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3Vyd" +
                        "gAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAf" +
                        "ACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBG" +
                        "QEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8" +
                        "gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDF" +
                        "gMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4E";
                    resourceString += "jASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGW" +
                        "QZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4Ig" +
                        "giWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLC" +
                        "wsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+" +
                        "A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERT" +
                        "xFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVE" +
                        "hU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZR" +
                        "RlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7" +
                        "B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYIMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jC" +
                        "iM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEoo" +
                        "ijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIut" +
                        "y7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1T" +
                        "TWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8Z" +
                        "TykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA" +
                        "0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMK" +
                        "kxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U2" +
                        "1UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleG" +
                        "l5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6" +
                        "Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS" +
                        "3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9Q" +
                        "X2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIz" +
                        "okziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9" +
                        "JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUeht" +
                        "qImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1q+msXKzQrUStuK4trqGvF" +
                        "q+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9F" +
                        "b2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLt" +
                        "sw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+" +
                        "9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5" +
                        "etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d" +
                        "/wH/Jj9Kf26/kv+3P9t////2wBDAAEBAQEBAQEBAQECAQEBAgIBAQEBAgICAgICAgIDAgMDAwMCAwMEB" +
                        "AQEBAMFBQUFBQUHBwcHBwgICAgICAgICAj/2wBDAQEBAQICAgQDAwQHBQQFBwgICAgICAgICAgICAgIC" +
                        "AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAj/wAARCACBAWIDAREAAhEBAxEB/8QAHwAAA" +
                        "QUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE" +
                        "1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZW" +
                        "mNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJy" +
                        "tLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcIC" +
                        "QoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRC" +
                        "hYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHi" +
                        "ImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09" +
                        "fb3+Pn6/9oADAMBAAIRAxEAPwD+/igAoAKACgAoAKAGu6Ro8kjiOOMF5JHICqoGSST0AoA/Fbxl/wAF0" +
                        "P2VvC/xJu/Bul+EvE3jLwjpl0+lX/xJ8Pw6d9jlKOUM9nb3FzHLNBnkO2wkZKqRjMc6NFSZ+wfgnxp4X" +
                        "+I/hDw1498E6xF4g8JeL7K38Q+HdasifLuLS6jEsbgMAynB5VgCpyCAQRVmbR1FABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "YPirQYfFXhjxH4XuLl7O38SWF5oM93a482JLy3e3Z03cblD5Ge9AH8RPjP/AIJcftveFPiTe/Dmy+Bmq" +
                        "+L9l0bHSPGnhlYpdBvYGkKxXAvpHSGBHUbis7IyZw4U1jys6lUR/YJ+yF8FdU/Z2/Zp+D3wY13U49X13" +
                        "wNpKWWvX1mS0BvrmeS+uEhZlQtFHLOyRsVBKgEgHitUjnk7s+kKZIUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAB" +
                        "QAUAFABQAUAFAH+ev8A8FEP2sfGf7VP7UfxP8W3Xi+91T4d+HNbvtA+EGiG4lFjYaNp9wbS2mt4AxSOS" +
                        "4WITSuOSzHnAGP9oPBXw6wvD3D+Hoqko15wUqrtq5SV2m92o35Utkkf4peN3iPiuIuIcRWdVyoQm40lf" +
                        "SMIuyaWycrcze92f1P/APBDj4ufFP4vfsR/bPipr154ou/BHizVvh/4O1/xBLNcXk+h2mnabeQrJPOzP" +
                        "KIZruaFCT8qIqDha/z5+llw3l+W8V8uEgoKpSjOSjZJTcpp2S0V1FN922+p/od9EjiXMcz4T5sXNzdOr" +
                        "KEJSu24KMGrt6uzk0uySXQ/Ymv5lP6fCgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKA" +
                        "CgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgCC6uraytri9vbhLSztEe6u7u6dY4ooo1Ls7s" +
                        "5AVVAJJJwBQB8sftdfGzT/hj+xt8cvjh4a1iG5h07wVqOv+CNdspVaCe71KwMGlyxyKcMsk1xEVI6g8V" +
                        "974W8PLNuI8FhGrxnVjzf4U7y/8lTPgPFXiJ5Tw3jsWnaVOlLl/xNWj/wCTNH+crX+4J/hif3b/AAP1W" +
                        "z/4J8f8EkPCPjt9GhuNZ+HvgBfiddaNqG+NLrxJ4mP9qx21y64fH23UUgYg5CjC8AV/kXxZh5cZ+JFXD" +
                        "8zUatf2d10p0/dbXT4YuS89z/X/AISxEOCvDWliOROdKh7Sz61KnvJPr8c1F+Wx9PfsVftq/Cb9t74TW" +
                        "nxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L8D4p+FmY8KZi8NiVeDu4TS92" +
                        "ce67Nfajun3TTf6B4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpwUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAEF1dW1lbXF7e" +
                        "3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+Uj/gpz/wAFOtS/aA1XUP2a/wBm/V3h+ErXA0Pxf400+" +
                        "TyZfFtyZBF9mgcldunBuCSR555P7v7+UpG8IW1Z+kn/AAWu1WH4Z/8ABNXxB4G0uYwWWv6l4P8AhrbDB" +
                        "3Pb2N7FqYXO1sZXTBnkZHGTnB/pz6JOWLEcaUZtfwoVJf8AkvJ/7d/W5/Lv0u80eH4KrQTt7WdOP/k3P" +
                        "/7b/Wx/Fp8OPCUvj74h+A/AsLOs3jXWdL8JRNBjeG1K+iswVyCM5k44r/VPPMyWDwVbEPanCUv/AAFN/" +
                        "of5Q5HlrxuNo4db1Jxj/wCBNL9T+0H/AILt61qPhT/gnvqXh7QNPuDo/ifxP4X8Ia0NNjleC1062km1W" +
                        "NpygYJF59hCgZiBvZBnJAP+XP0RcLDEcaRqVJLmhTqSV93J2i7d3aUnp0Tex/qh9L/F1MNwVKnTi+WdW" +
                        "nF22UVeSv2V4xWvVpb2P5Ef2Yf2nviz+yP8WdD+L/wg1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7" +
                        "hlYB0KuqsP9JuPuAcu4ky6eDxkLweqa+KMukovo19zWjum0f5o+H/iBmXDWZQxuCnaa0afwzj1jJdU/v" +
                        "Ts000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L" +
                        "/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYd" +
                        "fmZ+nBQAUAFAHKeOPHPg/4aeE9c8d+PvEdp4S8H+Gof7Q13xFrkqwW1tFuEYLM3dmYKqjlmIABJAoBI8" +
                        "j+A37V/7PP7TkGuTfAz4oWXj1/DbImu2FvDe2N7bLIzIkj2upwW03lsVIWQJtOODSTuNxaPoemIKACgA" +
                        "oAKAPgbxH/wVC/YQ8H/ABV1z4K+LP2gbTw18RvDWqTeDNf0nXtG8S2lpaajbzGCSOXUZ9OWyVVcYMhn2" +
                        "d92K/YsD4A8X4nLoY6jgnOhOKnFqVNtxaumoqfPt05b+R+NY76QXB+FzGeBrY1Qrwk4SThUSUk7NObhy" +
                        "b9ea3mfesUsU8UU8EqzQTKssM0TBkdGGQykcEEdDX4/KLTs9z9jjJNXWqZJUlBQAUAFABQB8U/8FGPir" +
                        "4y+Cf7En7RPxK+H2qPofjPQNDW10DW7YlZrKbUr+30o3ELD7ssS3JeNuzAHtX6p4I8PYXNeK8FhcTHmp" +
                        "SneS6NRTlZ+TtZ+R+U+OPEWKynhPHYrDS5asYWi+qcpKN15q915n8hP/BK34hePvFn/AAUe/ZwuvFPjj" +
                        "WPEtzqurapLqlx4g1O9vJLlv+Ec1A5la5kcueBy2a/0o+kJk2Dw3A+OVKlCCjGNuWKVvfjtZaH+Z30d8" +
                        "6xmJ46wLrVpzcpyvzSbv+7lvd6n93Gt63o3hrRtV8ReItVttC0DQrabWNb1vWJo7a0s7S2jM0s00sxVE" +
                        "jRFLMzEAAZNf5Bn+w588fBH9sv9mP8AaO1/W/CvwW+L2neOPEnh6NrzU9Et4r6zufIR1jaaFNRgtzPEr" +
                        "MoaSLcoJGTyKSaZTi0fTdMkKACgAoAKAPl34zftqfst/s9+LNI8DfGL4y6Z4L8W60kdzaaFcR3t3PFDL" +
                        "nZJc/2fBOLaNtp2vOUU9jSbRSi2fS+n6hYatYWWq6Vew6npepwx6hpupafIk0FxBMgkjkjkjJV0dSCrA" +
                        "kEHIpklugAoAKACgAoAKACgAoAgurq2sra4vb24S0s7RHuru7unWOKKKNS7O7OQFVQCSScAUAfyf/8AB" +
                        "Ub/AIKjXPxwudb/AGe/2e9be0+DVo7af458c6ezRy+K5Y2w0EDDBXTlI5PWc8n93gPlKR0U6dj8mv2bv" +
                        "AHif4nfHj4TeC/CPhqfxbrGq69pbnRdPi80vawXkc9w8mcKsUcSM8jsQqqCSQBUouT0P6SP+Dh6eeH9i" +
                        "f4bxxTPFHdfE/RILlI2KiRB4W8RShWA6jcitg9wD2r+xPoVwT4qr3W2Gn/6cpH8Y/Tam1wpQSe+Jh/6b" +
                        "qn8tH7E1tBeftmfsj2l1Ctxa3XxO8BW1zBKAyPG/iqxVlYHqCDg1/oJ4qzceF8yadmsNW/9NyP89PCeC" +
                        "lxTliauniaP/pyJ/or+MPB/hb4geFtf8E+NtAtfFPhHxTazaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmv8T" +
                        "MszPEYLEQr0JuFSDTjJOzTWzTP9wMzyzD43DzoV4KdKaalFq6ae6aP4if8AgqH/AMEvPFP7Fnim4+JHw" +
                        "3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf/AFb8AfH7D8U4dYbEtQx8FqtlUS+1H" +
                        "z/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf2nviz+yP8AFnQ/i/8ACDXDput6a" +
                        "fsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh" +
                        "/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1p8Rfh1djTdf00Raf8RPh3qEqPqOg" +
                        "ai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqx" +
                        "OGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAfl9/wV38DeNviX+yFP4D+Hnhy98XeLvE/inw7p+k+HP" +
                        "D8Lz3N0wnkmICJ/CoQuzHhQCxIAzUz2LpvU+AP+CTn7CX7XP7NP7TGqfEL4yfC6TwL4H1Twnqnhp9SGv" +
                        "eHb7zbq5vrC6hhe30rULmbnyC3zJgFeSDipjFpl1Jpo/pArQxCgAoAKACgD/O0/4KJf8n1/taf9j74j/" +
                        "wDTjJX+13gp/wAkjlv/AF4p/wDpKP8AETxu/wCSvzL/AK/1P/Smf3XfsTXNxefsZfsj3l5O91d3Xwx8A" +
                        "3N1dXLs8kkj+FbFmZmYkliTkk9a/wAjvFWEY8UZkkrJYmt/6ckf6+eFFSUuFsslJ3bw1H/03E+na+CPv" +
                        "woAKACgAoA/OL/grj/yjo/ae/7BWl/+pHp1fuH0bv8Akt8B/il/6bmfhn0lf+SHzD/DH/05A/kh/wCCR" +
                        "3/KRf8AZh/7Cuqf+o5qNf6PfSR/5IjH/wCGP/pyB/mx9Gr/AJLjL/8AFL/03M/sU/4KV6J4h8S/sQfHn" +
                        "w54T0u71vxJr9npOiaLouhRSz3l5PdeIbCBYIo4AXdpN23aBznFf43y2P8AZyG5+Jn/AATV/wCCen7Z3" +
                        "wO/bA+DXxf+Jnwfm8G/DjR4tfPiPWZ9d8NyyRRah4X1Gyt1ls7PUZbk7riaIFfKJU4LAAEiIxdzWc00f" +
                        "1NVqYBQAUAFABQB/I/+29+w1+1r+01+23+0t4y+Dvwfv/GPhe11bTdMXxJf32laTZzPb+HtPiMdvNrt3" +
                        "ZrN5eArCIttxg4xispRbZ0Rkkj+j/8AYq+H/jn4U/sp/Av4cfErTG0Xxz4M0G30HxFpEt1bXptpYHdVi" +
                        "86zlnicKm0DY5AHA6VpHYxk9T6hpkhQAUAFABQAUAFAEF1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3Zy" +
                        "AqqASSTgCgD+T//AIKjf8FRrn44XOt/s9/s9629p8GrR20/xz4509mjl8VyxthoIGGCunKRyes55P7vA" +
                        "fKUjop07H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0fR9PAyxxueSR2wscUagvJI5CooLMQBUJGjdj" +
                        "+1H9gH9gHwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6f5gDR2kbAZOA0rAO4GERNoxsc053Pj3/g4L0" +
                        "ObVv2GvDF/Fu2eGPiHoGuXOxQRsk0bWdNG4kjA3XY59cCv62+hni1T4tqRf26E1/wCTU5f+2n8h/TTwj" +
                        "qcI05L7GIg//JKkf/bj+S79lTxHF4P/AGof2bvFs7pFB4W8feD/ABHNJchmjVLHxDaXJLhCCVATnBzX+" +
                        "jXiHgXieH8dRW86FWP3wkj/ADd8OscsLxBgKz2hXpS+6cWf6Tlf4Yn+7ZzfjDwf4W+IHhbX/BPjbQLXx" +
                        "T4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8RgsRCvQm4VINOMk7NNbNM4czyzD43DzoV4KdK" +
                        "aalFq6ae6aP4if+Cof/AAS88U/sWeKbj4kfDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7" +
                        "j/vMF/9W/AHx+w/FOHWGxLUMfBarZVEvtR8/wCaPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67" +
                        "PXf4H/Zh/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu" +
                        "4ky6eDxkLweqa+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/" +
                        "be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui/5A+KfhZmPCmYvDYlXg" +
                        "7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpwUAfnt/wVB/ac8" +
                        "f8A7JX7IHjf4r/C1baLx9Le6X4P8OatqsKXMOnS6nc+W915EoZJXjjVvLVwU3kFgygq37R4A8BYPiPiW" +
                        "lhMXf2NpSkk7OXKvhutUm7Xa1tezT1X4p9IHj/G8N8M1sZhLe2vGMW1dR5n8Vno2leyel7XTWj/ABr/A" +
                        "OCN37eX7W/7SP7XGo/Dz43fGi+8feDYfB+s+IotC1Cy0i3jF7bXunxRS7rG0gfKrM4xuxz0r+nfpO+EH" +
                        "DeRcNxxOBwqpVXVjG6cno1K61k10R/Lv0XfGLiXPeJZYbH4qVWkqM5WaitU4pPSKfVngH/BSH/gpD+21" +
                        "8Fv22vj58MPhh8fNQ8JeA/CWoafZ+HfDtnp+hzR2sc2h2V06q91ZSyHMkrN8zHrX2Xgd4HcKZrwpg8Vi" +
                        "sHGpWqRk5Scpq9pyXSSWyXQ+M8dPHTizKuLMZhMJjJU6NOUVGKjB2vCL6xb3b6nxB/w9x/4KL/9HPar/" +
                        "wCCvw5/8rq/V/8AiW7gj/oAj/4FU/8Akz8l/wCJleOP+hhL/wABp/8AyB6B8P8A/gtb/wAFD/A2rQ3+o" +
                        "fGG0+I2nI/nT+G/iB4f0Wa0mPAw0umW9jdKOOiTr+dePnP0V+CsXTcY4Z0pfzQnNNfKTlH74s9nJfpW8" +
                        "b4OopSxSrR/lnCDT+cVGX3SR+7H7Mv/AAVU8C/8FBPCt18BLzxxqP7Gf7UWtxhfAvifw7LYahpmo6jGh" +
                        "CCybVoHjkLt9+xnQOynEUzONy/yNx59HrF8GYhZhGlHMMvj8cZJxlGPXm5XdW6Ti7J6yilo/wCv+AfpE" +
                        "4PjTDvLpVpZfmEl7kouMoyl05eZWd+tOSu1pGTeq/G79qP9tX/grN+yN8Y/EnwY+K37Rmp22taMReaPr" +
                        "VlpXh42Gs6XK7Lb39m76aC0MoQ9QGVgyMAysB/Tvh/4V+HPEmWU8bhMDFwlo05TvGS3jL3919zVmtGj+" +
                        "XfELxW8SOGs0qYHGY6SnHVNRhaUXtKPubP707p6pn5EePPHXiz4neM/E/xD8d6y/iHxl4zvbjxH4n125" +
                        "SGOS7vbqQyyyssCRoCzEnCqB7V/SWUZRhsBhaeGw8eSlTSjFa6JbLW7P5ozjN8TmGKqYnES56tSTlJ6a" +
                        "t6t6WX3H2b4O/4Kh/t6fD/wh4V8B+D/ANorUtE8I+CdNsfCPhbRYNN0CRLPTtNtUs7aBWmsHdhHFGqgs" +
                        "xJxySa/L8z8AOD8biamIrYGMqlSTlJ809ZSd29JW1bvofqWV/SC4xwWGp4ehjpRpU4qMVyw0jFWS1jfR" +
                        "K2p/W5/wSO/aq+LP7W/7JR+IXxsMd34z8J+I9T+Hc3iyG1jshrdrY2NjfJfPFAkcIfN40LmJQhaMnAOR" +
                        "X+cP0kPDzLuG+I/q2BuqU6cZ8t78jbkuW7u7e7dX1s/Q/0n+jV4i5lxLw39Zx9nVp1JQ5rW50lF81lZX" +
                        "95xdla8e9z89v28/wDgvBp/w88Q658KP2O9I0/xprejvJpev/GnxOr3Ojw3CqUdNKtInT7S0bH/AI+JW" +
                        "EW5SFjlQh6/aPCD6Ic8bRhi86lKnCWsaUdJNf35a8t/5V71nrKL0PxTxi+mDDA154PJYxqTjpKrLWKf9" +
                        "yOnNb+Z+7daRktT8JfFX/BT/wDb+8Y6nLq2q/tUeKrG5lLOYPCt1DodqN2OFt9GitYgBjj5f61/XOXeA" +
                        "fBuFp8kMvpNf3k5v75Nv8T+QMx+kBxniqnPPMaqf91qC+6CivwPfvgN/wAFr/26Pg5q1ifFXj2H45+EY" +
                        "nQX3hf4oWsEs7xfdfytSs0hu0kI+60jyKCASh5B+O4w+itwlmdN+yovDVOkqbdvnB3jb0Sfmj7Tg76V3" +
                        "F+V1F7assTS6xqJX+U1aSfq2vJn9Y37Dv7e/wAGf26vAFz4m+H0r+HPGvhwRQ+P/hfrk0b6lpMso+WRW" +
                        "QKLi1kIIjnVQDghlRgVH+dPix4PZpwjjFSxPv0p/BUS92Xl5SXWL+Ta1P8AR3wk8ZMr4vwTq4b3KsLc9" +
                        "Nv3ovv/AHovpJL1Sehwf/BXH/lHR+09/wBgrS//AFI9Or2Po3f8lvgP8Uv/AE3M8f6Sv/JD5h/hj/6cg" +
                        "fyQ/wDBI7/lIv8Asw/9hXVP/Uc1Gv8AR76SP/JEY/8Awx/9OQP82Po1f8lxl/8Ail/6bmf2m/tyfHTxJ" +
                        "+zV+yb8b/jd4OsbfUPFfgXSVufDkGrKz2y3t7ewabDLKikF1ia4EhTI3bcZGc1/lr4TcJUM94jwmBrNq" +
                        "nVl71t7JOTS7Xta/S9z/VTxc4vr5Dw3i8fRSdSlD3b7XbUU33s3e3W1j+bb/gmB/wAFGv20vj9+3l8Ev" +
                        "hj8W/jpe+L/AAB4wfxRN4h8Lzabodrbzmz8IatqcAzY2ULoI54EcBWH3QOnFf3L4++CHC2TcIYvFYPCK" +
                        "nWp+z5Zc021erCL3k07pta9z+E/o/eOXFWc8Y4TCYzGOpRqe05o8sEnalOS2imrNJ6dj+j79sz9s/4Rf" +
                        "sR/CmT4l/FG5kv77UpG0nwN4F0Zo/7T13UFUOYoBIQqRxqQ00zfKi46syK38PeF/hdmXFeY/VcIrJazm" +
                        "/hhHu+7eyS1b8k2v7o8UvFPLOE8u+tYtttu0IL4py7LslvJvRLu2k/5Kfj1/wAFwv24fi7qd6ngbxVZf" +
                        "AXwjI7Cy8P/AA7s7ea9EXIXz9S1KOadpADy0Pkqf7or/R3g/wCifwnltNe3pvFVesptpX8oRaVvJ8z8z" +
                        "/NrjH6WvFuZ1H9XqLC0ukYJN285yTd/Ncq8j44h/wCCg37c0GpHVU/a3+ITXRQQ+VN4r1iS2wrBv+PeS" +
                        "cw545OzJHGcE1+my8GeEnT5P7NoW/69xv8Afa/4n5fHxq4uVTn/ALSxF/8Ar5K33Xt+B96fs7f8F3v2x" +
                        "PhVqenWfxen079oTwTG6RX9n4ktbbStbjtx1+zajpUMal++64hmz046j8g42+iJwzmNOUsGpYWr0cW5Q" +
                        "v5xk3p/hlE/YuCPpg8UZdUjHGuOLpdVJKM7eU4pa/4oyP6yP2Tv2tPhD+2X8J7P4tfB/Up5dME7aJ4j8" +
                        "O63EsGp6NqccSTPaXUaM67gsisrozIykEMeQP8AOjxF8Ocy4XzF4PGRXNa8ZLWMo7KUX8mrNJp7o/0f8" +
                        "OPEjLOKctWMwUny3tKL0lGW7jJarZp3Taa2Z/Nn/wAFSf8AgqT+2F8Mv2wviR8GPgx8SD8K/AnwrOn6F" +
                        "aWmhafpdzcajcXOl22ozXV1NqNtcNu3XBREQqoVRwWJJ/ub6P30fuGcfwzQxuNoe3rV+ZtuUkopScUko" +
                        "tdrtu7bfayP4S+kL9IXifL+J6+BwNf2FGhypJRi3JuKk23JPvZJWSS73Z/RH+wT8S/F/wAVP2Mf2f8A4" +
                        "ofEzxE3iHxh4q8Ox654q8S3628DXE3nShpXECRRr8qjOFA4r+KfGDIsNl/FGMwuFhyUoVLRiruystNbs" +
                        "/tzwcz7FZjwrgsXip89WdO8pOyu7vXSyPxA/bh/4L4aloPirXPht+xjo+m6pYaJLJpmofG/xZC17BeTR" +
                        "kq7aRZ7kRolYfLcT7hJyVj27Xb+r/Cf6HtOth4YrO5Si5K6pRdml/flvfvGNmusr3S/kzxb+mRUo4ieF" +
                        "yOMZRi7OtJXTf8AcjtbtKV0+kbWb/Enxj/wUq/b28c3V1ea1+1f4zspbzb5yeDtWk8OxDawYbIvD4skj" +
                        "5HOxRkcHiv6ryzwL4PwkVGGXUWl/NHn/GfM38z+Ts08eOMsZJyqZlWTf8suRfJQ5Uvkdn8NP+CsH/BQH" +
                        "4X6hBeaZ+0hrPiu1Rle60j4li28R29wigDYzatHNMgO3kxSI3XnJNeXnv0deDcwg4ywMIPvTvBr/wABa" +
                        "T+aa8j1ch+kdxpl81KOOnUXapaon/4Em18mn5n9Fv8AwT0/4LVeC/2o/FPh74KfHXwvb/Cz40+I5F0zw" +
                        "nrPh1ppPDev3ZUkQILp5JrK4cjEcUjyK54EgYqh/ibxp+ixiuH8PPHYCo62FgryUre0gu+llKK6tJNfy" +
                        "2TZ/cHgn9KzC8Q4iGBzCmqGLm7Rcb+zm+2t3CT6JuSf812kfuxX8jH9fBQBBdXVtZW1xe3twlpZ2iPdX" +
                        "d3dOscUUUal2d2cgKqgEkk4AoA/k/8A+Co3/BUa5+OFzrf7Pf7PetvafBq0dtP8c+OdPZo5fFcsbYaCB" +
                        "hgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz40ePPDfwz+GfhufxX408VzjT9H0fTwMscbnkkdsLHFGoLy" +
                        "SOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiuCNfiD8QVjOFGRJ/Z+n+YA0dpGwGTgNKwDuBhET" +
                        "aMbHNOdz9Caog/N3/grl8OZviX/AME9P2jdMs4PO1Hwxptl8RrNgCTGnh3VbbVrpsD/AKdYJh7ZzX7l9" +
                        "G7O1gONMDKT92cnB/8Ab8XFf+TNH4V9JXI3j+CcdGKvKEVNf9uSUn/5KmfwIW1zPZ3Fvd2szW91aulzb" +
                        "TxEq6SIwZWUjoQRkV/sTOClFpq6Z/jTTm4yTTs0f6XvwM+JVj8ZPgv8J/izp0iSWnxI8O6N41TyeiNqW" +
                        "nxXTpjAwUZypBGQRg1/hLxbkU8rzTE4OW9GpKH/AIDJq/z3P96eEc+hmmVYbGR2rU4z/wDAop2+Wx6pX" +
                        "zx9Ec34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoUeORHBBBB/DqOa7sszPEYLEQr0JuF" +
                        "SDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gqH/wS88U/sWeKbj4kfDe3uvFP7NHim68vR9Yk" +
                        "3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/wDVvwB8fsPxTh1hsS1DHwWq2VRL7UfP+aPTdabf5NfSC+j7i" +
                        "OFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v8Awg1w6bremn7JrOjXe99O1nTndWmsb" +
                        "6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH434f8AiBmXDWZQxuCnaa0af" +
                        "wzj1jJdU/vTs000mf32fsb/ALV/gT9s74D+Gfjd4EtpdITUJJtB8WeFr91kuNG1qzCG5tHkQBZABIkkc" +
                        "gA3RujEKSVH+O3id4d4zhfN6mBxDUrWcZLaUHtK3TZpro01drV/7KeF3iNg+Ksnp4/DpxveMoveM1vG/" +
                        "XdNPqmnZPRfU1fnx+hn4z/8F4v+Uf3iH/safDP/AKUyV/T/ANEP/ksof9eqn5I/lv6YX/JFz/6+0/zZ+" +
                        "H//AAb/AH/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+kzP5K+hh/wAlfL/rxP8A9KgfLn/BXH/lIv8At" +
                        "Pf9hXS//Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGYf4o/wDpuB/Q/wD8E0/2A/2Nvi3+w5+z/wDEX" +
                        "4k/s9+H/GHjfxPp2o3Wv+JNXhna5upItdvrZGcpKoyEjVRx0FfxX47eMXE+W8WY3DYXG1KdKEo8sU1ZX" +
                        "hF9u7P7a8BvBrhfMuEcFicVgqdStOMuaTTu7Tku/ZI9c+Pv/BEb9h/4u+Hb+DwH4Km+BHjUxt/ZPizwB" +
                        "d3ktsswA2C406/nlt5IwR8wjEbnP3xxXzfB30reLMtrp4iqsTS6xmle3lNJST9eZeR9Lxl9E3hLM6DWH" +
                        "pPC1ekoN2v5wk3Fr05X5n8ff7Tv7N3xX/Yx+Omt/CT4hA6d4p8LSQa94Y8U6G8sdvqVhJIXs9SsZflbY" +
                        "xjOCMMkishwyED/AEu4C45y7ijKIYzDa053Uou14v7UJL5+jTTWjR/mRx/wJmXCubzweJ0qQs4yV7Sj9" +
                        "mcX209U009Uz+tT9hDXfgL/AMFVf2XfAfir9qL4YaL8VvjH8Cprn4Z+LNR8RwE3DSvHBPHeqYnRtt7As" +
                        "bSfw+csm0AcV/nJ4u4POPDziCtSyrEToYXEpVIqL06px/7cd0uvK43P9JPB/GZN4i8PUa2bYeFfFYZun" +
                        "JyWvRqWn86s305lKx/J7+2/4N8L/Dv9r/8AaS8C+CdFh8N+EfCXjHXdB8N6DpwKwWdnbXzxxRRhiSFVR" +
                        "gZNf6KeFGaYjG8NYHEV5udWdGDk3u20rtn+cXi1leHwPE2Pw9CChSp1pxjFbJJuyR/Xz+yP/wAE5f2Hv" +
                        "HH7KX7MfjXxb+zX4b13xV4v+HvgvxR4m1y+huDPeahqHhuzu7ieQrMAXkkkZmwOpr/NXxI8buLMJxFj6" +
                        "FHHVI06derGKTVlGNSSSWnRKx/pn4a+BvCWL4cy+vWwFOVSph6UpNp3cpU4tt67tu54J/wWe+O+jfsc/" +
                        "sieCP2YvgFpFl8Mj8a2v/CsGleCoItPi0zwpYLHLqiwx2oUI15JdxxOxGXV5jksSR9j9F3hCrxPxLVzT" +
                        "MJOt9XtK825OVR35Lt78qi2l0aj0PjfpT8YUuF+GaOVZdGNH6zzRtBKKjTjZzsltzOSTfVOXXU/nV/4J" +
                        "4fsI+Lv28fjRJ4IsdTk8KfDjwdDF4g+KvjuGETPY2UrskFvbo5CNdXboyxBjhVV5CGCFW/tjxq8XcNwh" +
                        "lft5R569R8tOF7XfVvryx3dt20tL3X8QeCXg/ieMc19hGXJQprmqTtey6JdOaT0V9km9bWf9j/wu/4Jc" +
                        "fsFfCjw5B4e0v8AZr8N+L2WH7Je6/8AFGxh8TajdOV2vK0usLOI3Y8/uVjVT91VHFf5j8QfSA4wzGu6k" +
                        "8dUp63UabdOK8rRtdf4m2+rZ/qFw99Hvg7LaCpQwFOppZyqJVJPzvK9n/hSS6JH58/t7/8ABD/4MfEHw" +
                        "N4j+IP7JPhpPhf8XdEhl1iD4e6bPKfD/iERKZHto4bhnFncuBiFoisRbCug3eYv7N4PfSvzTBYuGHzip" +
                        "7bDSdudr34eba+KK+1e8rapu1n+LeMf0S8qxuEqYnJ6fscTFX5E/cnbok/hk/s2tG+jSvzL+Yj9kr9o/" +
                        "wAa/sfftEeA/jN4ba5gn8JXy2HjXw2jGE6poksqxajp0ySYGZIwdm8fJKqPjcgx/e/iPwPheJskrYKrZ" +
                        "qcbwlvyzXwyXo97bxbWzP4A8NuOsXwxndHHUrp05WnHbmg/ji/VbX2kk90f2j/8FUNf0nxX/wAEyP2gf" +
                        "FGgXi6joXiTw9oOv6LqEQIWe0vNd0y4hkG4A4ZHBGa/y3+j5g6mH49wVKorThUnFrs1Caa+8/1S+kRjK" +
                        "WJ4AxtWm7wnThJPunODT+4/k5/4JHf8pF/2Yf8AsK6p/wCo5qNf6K/SR/5IjH/4Y/8ApyB/nF9Gr/kuM" +
                        "v8A8Uv/AE3M/re/4K4/8o6P2nv+wVpf/qR6dX+cP0bv+S3wH+KX/puZ/pP9JX/kh8w/wx/9OQP5Sv8Ag" +
                        "i7/AMpLf2bP+5x/9QHXK/0O+lH/AMkJjv8AuF/6epn+dH0V/wDkvcB/3F/9M1D6j/4OF9f8TXn7Yvw88" +
                        "OalPKPDOheAtO1DwxYuGEAkv9Z1MXU6Z4LyNbojEdo1HavgPoXYOhHhivVil7SVeSk+ukYcq+V216s/Q" +
                        "vpsY2vLiihSk37ONCLiunvTnzP1dkn6I8w/4JWeEP8Agl/r9zq91+2p4vEXxQW+VPB/hX4lSXWkeC1sk" +
                        "VCszXtnKsUsxcsHS8kjjC4wj8sPf+kJmXH9GMVkdL/Z+X3pU7Sq37crV0rbOCbv1Wx8/wDR3yzw/rSk8" +
                        "9q/7Rze7GpeNK3fmTs3fdTajbo9z+rDS/2Jf2AfGnhO2k8PfswfCzxB4X1WFVsPEHhjwt4al8+IHh4tQ" +
                        "sYPMJ4++suT61/nliPFXjLC4lqpmGJhUi9YyqVNH5xbt8mj/RXD+E/BmLwydPL8LOnJaSjTp6ryklf5p" +
                        "n5Q/thf8EBPhp48C+J/2PfEFv8ACHxNLMW1PwD4+vNSu/DM8bksXt7lIr28tXUk/KRKhGAojxz/AET4Z" +
                        "/TGx+D/AHWcwdenbScFFVF6q8YyXn7r7tn85eJ30M8BjP3uSzWHqX1hNydN+jtKUX5e8uyR9+/8Evf2D" +
                        "NZ/YM+C3ibwj4y8Y2njL4g/EHVl8VeK7jwws40mzEFqlpBbWr3ccMsoUBmaV40yWxsG3Lfjnj94v0uMM" +
                        "0p1qNJ06NKPLHmtzO7u27NpdEkm9t9dP2b6Pvg7V4OyqpRr1VUr1Zc0uW/KrKyUbpN9W20r3tbTX+TP/" +
                        "grj/wApF/2nv+wrpf8A6jmnV/ov9G7/AJIjAf4Zf+nJn+b/ANJX/kuMw/xR/wDTcD+hH+3vE3hr/g3/A" +
                        "IdU8I3M1nrB+GUWlvcWIJlWxv8AV1sL7G3kA2s0oZuwye1fxj9ToV/GRwrJOP1m+vdRvH/yZI/tT65iK" +
                        "Hgwp0W1L6tbTtKVpf8AkrZ/JB8F7H4Tal8VfAtj8dte1bwz8Ibi/iXx9rnge0ivdVgsACzfZ4pmVcswC" +
                        "s+GKKS4SQqEb/R/imtmVPLq0sBCM8So+4pu0W/Nr77aXejaTuv82OFaOW1MxoxzCcoYZy99wV5KPkn91" +
                        "9bLVKTVn/bD+yX+zv8A8EgPHvha0sf2dvAPwy+MYigEt3F4ut7PxP4iCgLulurbxUs97AWIzhokUchQB" +
                        "xX+VviNxr4l4PEOWZVsTh9dOVunD0Tp2g/vb7s/1c8NuCPDLGYdRy2jhsRprzJVJ+slUvNfcl2R2fx5/" +
                        "wCCQ/7Cfxz0S/tIvgxYfCHxJMjLpfi/4MRR6BLaSEcN9itVFjKucZWSA8dCp5ry+EPpJ8XZTVUnipV4d" +
                        "Y1ffT/7efvr5S9bnqcY/Rn4PzelKKwscPU6Spe41/26vcfzj6WPy6/Zd/4IL/FX4N/tV/Dz4q+PvjN4d" +
                        "1v4WfCTxDYfETw0PCiaouv6rc6Lex6hYx3Nrd2y29qjSxKZtlzMdoKr97cv7/4gfS/y7NOHq+Ew+FqRx" +
                        "Fem4S5uXkippxk00+aWjdrxjrq9rP8An3w++h1mOV8RUMXiMVTlh6FRTjy83PJwalFNNcsVdK9pS00W9" +
                        "1/T1X8Dn9/hQB4p+0V8EtH/AGjPgt4/+C+u+INR8Lab47sjpcuveGJ3gurd1kWZCQrKJYiyASwsdsiEq" +
                        "cZyE0OLsz+Fv9qD9l/4pfsmfFLVPhd8UdL8m5h3XvhvxJZK507WtOLlY7u0kYDKnGGU/MjZVgCKxasdU" +
                        "ZXPb/8Agnh+2m37FPxom8Xap4Wg8U+BPGtvD4X8fxw20Daxa2Kz+aJ9PuJAGV42+Z4dwSYABsMqOji7C" +
                        "nG6P7bPh38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdLfdFNE2QQQQGR0YFXRgGRgVYBgRWxytHaUAc3" +
                        "4x8KaL488IeKvA/iS2+2eHfGem33hTX7P5f3tlqNq9nOnzBh80chHINd2WZjVweJp16TtOnJST7OLuvx" +
                        "Rw5pl1LGYaph6qvCpFxku6krP8ABn+ad8Wvht4g+DnxR+Ifwo8VRGLxF8OdZ1LwXq+5GjEk2nXb2pkQN" +
                        "n5JNm9DkgqQQSDmv91uHM9o5nl9DF0vgrQjNekle3qtn5n+DXEmRVsrzCvg6y9+jOUH6xbV/R7ryP7BP" +
                        "+CCH7Rdr8T/ANk3UvglqmoCXxd+z5qk2nW9rKcyP4e1yaXU7KXLHLbJzcw4Awqog7gV/mj9MLgmWA4jj" +
                        "joR/d4qKd/78EoyXzXK/Ntn+nH0OOOI5hw3LATl+9wkmrf3Jtyi/lLmXkkj90a/kk/rsKAP5UP+Cw//A" +
                        "AVe0vxfY+Lv2Qf2btVt9X8MXW/QPjT8ULTy7iC+2PiTStMc7lMQZcT3C/eI2Rnblm/0N+jN9Haphp085" +
                        "zOLjUWtKm9Gu05+f8sem71sl/nV9J36RtPFQq5LlklKm/dq1Fqn3hDy/ml12Wl2/wCbrwf4P8U/EDxTo" +
                        "HgnwToF14p8XeKbqHRPD3h7RIXnury6ncIkcaICSST+HU8V/ceZ5nh8Fh51681CnBNyk3ZJLdtn8K5Zl" +
                        "mIxuIhQoQc6s2lGKV229kkf3xf8Evv2O9f/AGJ/2WtM+GPjPU4dQ8f+LNWu/if49g0x/NtLHUtRs7SxF" +
                        "pDIOJBDBZRK7j5WfcVyuCf8evH3xNo8VcQSxVCLVGEVThfRuMXJ8zXS7k2lula+p/sj9H7wwrcJ8PRwt" +
                        "eSdapN1J21SlJRXKn1sopN7N3tofolX4oftx+M//BeL/lH94h/7Gnwz/wClMlf0/wDRD/5LKH/Xqp+SP" +
                        "5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/YheIP/AE46XX9YfTJ/5JGP/X+H/pMz+SvoYf8AJXy/68T/A" +
                        "PSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy/8ATkz8++kr/wAlxmH+KP8A6bgf1vf8Ejv+U" +
                        "dH7MP8A2CtU/wDUj1Gv84fpI/8AJb4//FH/ANNwP9J/o1f8kPl/+GX/AKcmfo7X4efuZ/NV/wAHG/w60" +
                        "S4+HH7OXxaS1ji8R6Trep/Dqe9RQJp7LULD+040cgfMsUlk5QE/KZGx941/dX0Ic7qxx2Owd3yShGdui" +
                        "cXyt/NSV+9l2P4O+nJkdKWBwOMsvaRnKnfq1JcyXycXbtd9zxT/AINwfEWpwfET9qDwksxOjanovh3xF" +
                        "PbsSQLmxvru2RlHQZS7YH1wPSvqfpw4Km8Fl9a3vKc4/JqL/wDbUfKfQYx1RY7MKN/dlCEvmnJL8JM/G" +
                        "X/goFqEGp/tyftcXNsGEcfxE8W6e3mgA+Zaa1cWj9CeN0Zx7V/UPg1RdPhPLU/+gem/vgn+p/LXjRWVT" +
                        "i7M2v8AoIqr7ptP8j+7f9h3/kyr9j//ALJd8P8A/wBROwr/ACL8WP8Akqsz/wCwmt/6ckf6/wDhJ/ySm" +
                        "Wf9g1H/ANNxP5pv+DjB7w/tJfAeNzJ/Z6+B5HtQ27yvObXrwS7e27aE3Y7Y9q/uv6Eij/YWMf2vbfhyR" +
                        "t+v4n8G/Thcv7ewa+z7H8eeV/0/A/Dr4b/8Lx8jVv8AhUP/AAlf2bfD/bv/AArf+19m/D+V5/8AZfGcb" +
                        "tu73x3r+sc8/sm8frnsr629py/O3N+Nj+SMi/te0vqXtbaX9nzfK/L+Fz0z/jNX/qqP/l2V4P8Axiv/A" +
                        "FDf+Uz3/wDjK/8AqJ/8qB/xmr/1VH/y7KP+MV/6hv8AymH/ABlf/UT/AOVDzS5+C/xzvLie8vPhP4sur" +
                        "u6d7m6urnQtYeSSR2LMzM0BJYk5JPWvehxTlMYpLE0kl/fj/meDU4VzeUnKWGqtv+5L/I/ru+Pket2//" +
                        "BBKzs/EdtcWetad8LfAml31lqsTwXMJtb7SLZY5I5FVlZFQKQwzxzzX+bPB0qT8YHKk04PE1mmtU7qbu" +
                        "n5n+l3GcasfBxRqpqaw1FNNWas6as15H863/BI7/lIv+zD/ANhXVP8A1HNRr+2PpI/8kRj/APDH/wBOQ" +
                        "P4h+jV/yXGX/wCKX/puZ/W9/wAFcf8AlHR+09/2CtL/APUj06v84fo3f8lvgP8AFL/03M/0n+kr/wAkP" +
                        "mH+GP8A6cgfylf8EXf+Ulv7Nn/c4/8AqA65X+h30o/+SEx3/cL/ANPUz/Oj6K//ACXuA/7i/wDpmof1k" +
                        "f8ABQP/AIJ3/C/9vXwNpWn+INRfwR8UPBS3DfD74labAs72wuADJaXkBZPtFo7KrFdysjDKMMuH/wA6f" +
                        "BrxqzDg/FylTj7TD1Lc9Nu17bSi/syW17NNaNOyt/o/40eCOX8Y4OMakvZ4infkqJXtfeMlpzRe9rpp6" +
                        "pq7T/kp/aE/4JDftzfs+zajeT/Ceb4r+ELEvJH4y+DTPrkTxINxd7KJFv4gq8sXtwo5wxAJr/Rzgv6Sn" +
                        "CWcqMViVQqv7NX3Nf8AF8D8rSv5H+bXGv0Z+LslcpPDOvSX26Xv6f4V7687xt5nxR8O/jJ8dv2efEV5c" +
                        "fDL4jeJfhD4jt5RFrFt4a1DUNJkeSE48u7gjeMSAHgpKpHqK/VM74YyjOqCWKoU68GtOaMZb9YvW3qmf" +
                        "lOR8UZxkldvC16mHmnryylHbpJaX9Gj9gf2dv8Agvz+1R8ObvTtL+O2haT8ffCaFIb7UWgh0DxEkY+Xd" +
                        "Hc6bGLVyo5IktSzkDLrkmv5p41+hzw9joyngJywtTorucPmpPmXylZdnsf03wR9MviLAyjDMIRxVPq7K" +
                        "E/k4rlfzjd91uf1L/snftefBf8AbN+GMPxP+DWtSXFrbyDTPFHhXXEjg1jRL4rv+z3sEbyKpZfmR0Zkc" +
                        "fdY4IH+ffiL4a5pwvj3hcbBJtXjJaxmu8XZfNNJrqtj/Qvw38TMq4py9YvBTbSdpRekoPtJXfyabT6Pc" +
                        "/ij/wCCuP8AykX/AGnv+wrpf/qOadX+qH0bv+SIwH+GX/pyZ/lL9JX/AJLjMP8AFH/03A/rs/4JxeG9B" +
                        "8Y/8E3P2c/CXinSYNe8M+J/BTeH/EOh6nGJba8srx7i3nhlRuGSRHKsPQ1/m344Y6theOcdWpScakK3N" +
                        "FrdNWaa80z/AEs8DMDRxXAmBo1oqVOdHlkns07pp+TR+FP7YP8AwQF+K/hjXdb8XfsgavbfETwRdySX1" +
                        "n8LfFd7DYa/pyu277Pb3d6UtruNOdrSyRSYwCJGyx/rjwz+mNl2Iowo5zF0qq0dSKbhLzcVeUW+yUl10" +
                        "Wh/IXid9DPMcPWnWyWSrUXqqcmozj5KTtGSXduL6avU/DH4mfBD48fs8eIILP4p/DTxH8J9ds5x/Zt54" +
                        "j0+904PNGSyva3LKqS42kq8TkcZBr+tch4syjOqLlhK9OvBrVRkpaf3luvRo/kXP+Es4ySuo4vD1KE09" +
                        "HKLjr/dez9U2fXfwM/4Kzft4fAZrC10f433vxB8OWOF/wCEU+MK/wDCSW0ka8LH9ovW+2xooGFWK5QAc" +
                        "DivzXi36OfCGcXc8IqU39ql7j9bL3G/WLP0zhH6SHGGT8qhi3Vpr7NX94vS799L0kj+iz9g/wD4LbfCv" +
                        "9pzxT4d+EHxo8LJ8F/i54kkTSvDep2t19o8M61eucJBFLcbZbSeUnbFFLvV2wolLsqH+JvF76KmYZBh5" +
                        "4zA1PrGGgryVrVILu0tJJbtqzS15bJs/uDwe+ljl2f4iGCx1P6viZu0Xe9Ob6JN6xb2Sd03pzXaR+5lf" +
                        "yWf1yFABQB8x/tYfsn/AAt/a/8Ahbf/AA2+JNh5NzD5l94M8Z2MaHUdC1EptW4t2bGVOAJYidsi8HBCs" +
                        "qauVGVj+Iz9qD9l/wCKX7JnxS1T4XfFHS/JuYd174b8SWSudO1rTi5WO7tJGAypxhlPzI2VYAisWrHTG" +
                        "Vz6Y/4J5/8ABQzxr+xd41GkaubnxX8B/FdyknjfwRG+6WzlbEZ1HThIQqXCKBvTIWZQFYghHRxlYmcLn" +
                        "9ofw7+Ingr4seCvDnxF+HXiO28V+DPFdsmqaFrulvuimibIIIIDI6MCrowDIwKsAwIrY5mjtKAP49/+C" +
                        "/37Ktx8P/jl4X/ag8NaWV8IfGu3j8PeNrm2T91beKNJtliRn2qAv2uzjQr1LPDKx61/ph9DjxCjjMpqZ" +
                        "VVl+9w75oedOTv/AOSybv2Uoo/zG+mb4dywWb081pR/dYlcs/KpFW/8milbu4yZ+cH/AATg/a6uP2Mv2" +
                        "pPBfxOv5pm+HmthvA3xY0603MZdB1CRPMmVB96S1lSO4QDltmzIDGv3Dxw8No8UcP1cLFL28ffpt/zx2" +
                        "XpJXi+179D8M8DPEuXC3ENLFSb9hL3KiX8kt3bvF2ku9rdT/QY0rVdM13S9N1vRdQh1bRtZt4dV0nVdN" +
                        "lSa3uba4jE0UsUkZKujowZWBwQciv8AGXEYepRqSpzi4yi2mno01o010aZ/tNh8RTrU41KclKMkmmtU0" +
                        "9U0+qa2P5bv+Cuf/BXP+1P+En/ZV/ZV8T/8Sv8AfaB8YPjBoE3/AB9dYptK0qaI/wCq6rcXCn5+UQ7Nz" +
                        "P8A6A/Ru+jd7P2ebZtT97R0qTW3ac136xi9t3rZL/Pb6S30lvae0yjKKnu6xq1YvfvCD7dJSW+y0u3/A" +
                        "DV+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASSSfw6niv7pzPM8PgsPOvXmoU4J" +
                        "uUm7JJbts/g/LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5/wS88LfsWeFrf4kfEi3tfFP7S/im18vWNYj2" +
                        "T2vhi1nT59O05+QZCDi4uB9/wC4n7vJf/KTx+8fsRxTiHhsM3DAQei2dRr7UvL+WPTd67f6y/R9+j7h+" +
                        "FMOsVikp4+a1e6pp/Yh5/zS67LTf9fq/mo/poKAPxn/AOC8X/KP7xD/ANjT4Z/9KZK/p/6If/JZQ/69V" +
                        "PyR/Lf0wv8Aki5/9faf5s/D/wD4N/v+T69W/wCxC8Qf+nHS6/rD6ZP/ACSMf+v8P/SZn8lfQw/5K+X/A" +
                        "F4n/wClQPlz/grj/wApF/2nv+wrpf8A6jmnV9/9G7/kiMB/hl/6cmfn30lf+S4zD/FH/wBNwP63v+CR3" +
                        "/KOj9mH/sFap/6keo1/nD9JH/kt8f8A4o/+m4H+k/0av+SHy/8Awy/9OTP0dr8PP3M/nt/4OLf+TYPgf" +
                        "/2Pq/8AqPajX9n/AEJf+R/i/wDrx/7fA/ir6cH/ACT+E/6//wDtkz40/wCDcf8A5LX+0f8A9itpX/p2N" +
                        "fqH03v+RVgf+vsv/ST8s+g1/wAjbHf9eo/+lH5pf8FWvhzrnw1/b+/aRsNatpIo/FWuN8RtDupVKpc2O" +
                        "vwpqaPGSAGVGleIkdGRh1Br91+jxndHHcG4GUH8EORrs4Pl19bJ+jTPwb6ReR1sBxnj41F8c/aJ91Nc2" +
                        "no216po/o1/4Jc/8FRv2aPGP7P3wc+AnxN8f2Pwm+Lnwt0PTPhnFp/jmVNP0zV7TRraPTbOezv5ttuXe" +
                        "GOMNDI6yb921WX5q/iL6QH0f8+wuc4rMMLRlXw1acql4e9KLk3KSlFe9ZNuzSata7T0P7k+j59IPIcVk" +
                        "uFy/FVo0MTQhGnab5YyUUoxcZP3btJXTad72TWpzX/Bez9mPUfjN+zv4G/aK8CWx1zUvgNJd3XiNNKAm" +
                        "+0eFNbSBprsGLcXW1lt4pMjgRvI5OBXf9D/AI9hled1stxD5Y4m3LfS1SF7R8uZNrzkorqcH0xuAJ5rk" +
                        "lHMsOuaWFbcra3pzteXnytJ+UXJ9D+ff/gmp+3jq37CPxwn8U3+nTeI/hR8QIbfw38VvDGnlBctbQzGS" +
                        "3vrXfgG4tDI5RGIV1d0JUsHX+y/HXwhp8X5SqUZKGJpNypye12tYv8AuysrvdNJ62s/4u8BvGGpwfm7r" +
                        "Si54aqlGpFb2T0kv70buy2abWl7r+2D4U/trfsnfGrw1Z+Kvh3+0D4W1awu41uZdPv9Ys9O1O03/wAN1" +
                        "Y6g8NzA2e0ka57ZHNf5W8ReFfEeVV3SxOCqxa6qLlF+kopxfybP9XOHPFfhvNcOq2GxtKUWtnJRkv8AF" +
                        "GTUl80j1D/hePwU/wCiweFv/Cg0n/4/Xgf6p5r/ANA1X/wCX+R9B/rdlP8A0FUv/A4/5noel6rpeuafa" +
                        "atoupW+saVfp59jqelzR3FvMhON0ckRZWHHUGvFxGHqUpuE4uMlumrNeqZ7eHxNOtBTpyUovZp3T9Gj4" +
                        "M/4KpaFe+Iv+Ce/7Uun2Cl57fw6uuyBQW/c6XqVrqcxwPSO3Y57V+v/AEe8ZChxpl8pbOpb5yi4r8Wfj" +
                        "v0iMHOvwVmMY7qnf5RlGT/BM/je/wCCYPxQ8M/Bz9vP9nDx94y12Hwz4ZstXvNA1bXtSKJbWqa7ot7oK" +
                        "vM8hCxx7rwB5GICLliQBmv9OfHzIK+Z8H47D0YOdRwUklu+SUZ6d37ui6vQ/wAvPo/8QYfK+McDiK81C" +
                        "mpuLk9lzwlDV9F72r6LXof2Bf8ABWyWKf8A4Jx/tNTwSrNBNpOkywzRMGR0bxFpxDKRwQR0Nf5pfRwi1" +
                        "xxgE9+aX/pEz/Tb6Sck+Bse1qnCP/pyB/Kd/wAEXf8AlJb+zZ/3OP8A6gOuV/ob9KP/AJITHf8AcL/09" +
                        "TP86vor/wDJe4D/ALi/+mah++X/AAVq/wCCqHxX/Ym+I/w++DPwW8IaLfeJvEmgx/EnxF4q8eQXV7BFZ" +
                        "XWpXmmW9va29pc2uJN9hK0juzDaVAXOSP49+jl9HvLuK8DWxuOqzVOE/ZxjBpO6jGTbbT0tJWStre76H" +
                        "9k/SS+kRmXCeOoYHA0oOpOHtJSmm1ZylFJJOOt4u7d9LWXU9D/YX/4LM/s//tI+GdL8PfHLxHo/wE+OM" +
                        "R+xalpOvXLWPhzVXyAs2nX2oOUj8wkD7PPL5gbhTIPmrxPFv6L+c5HXlUwEJ4rCbppXnHynGKu7fzRVr" +
                        "atR2Pb8IfpS5LnuHjTx9SGFxezUnaEvOEpOyv8Ayyd76Jy3P0O+L/wM/ZX/AGhfDB1j4y/D3wh8SvDix" +
                        "Zt/F/iK30+ZreJsR7oNTUrJCDkDdHKvbmvxbhri3iHJcRyYKvVozv8ADFyV35w2fzTP23ibhHh3O8Pz4" +
                        "6hSrQt8UlF2XlPdfJo/jx/4KlfAT/gnf8Edb0Sz/Y9+LVx4k8eXd60XjL4a6FqUfibw5pOniGQ701Ys8" +
                        "iXCyhUNu007YJLGMqA/+mX0fuMONc2pTlnOGUKKXu1HH2c5SuvsbONteZRitrc19P8AMP6QvBvBGU1YR" +
                        "yXEudZy9+mpe0pxjZ7T1aley5XKT3vy21+lv+DdK78UJ+1D8brG0af/AIQq58Avd+IFjB+zHVIfEOmpp" +
                        "5kP9/ypbvZ7bq+E+m1Tw74fwknb2qr2j35XCfNbyuoX+R979B+piFxBi4xv7J0Ly7cynDlv52c7fM+C/" +
                        "wDgrj/ykX/ae/7Cul/+o5p1fr/0bv8AkiMB/hl/6cmfjv0lf+S4zD/FH/03A/qU/ZW+NVt+zn/wSA+GH" +
                        "xxutFfxGvwz+HknieDQIZRB9suIp5lghaUhtiPIyh32kquSASMH/P7xC4WlnfiXiMAp8ntsRy829k0ru" +
                        "3WyvZdX1R/oT4d8VxyPwyw+PcOf2OH5uXa7Tdlfom7Xetl0Z+Vv7M//AAcJeP7j4pR6d+1d4E0K0+E+v" +
                        "O0H/CRfCnT9Si1DQHc/JK8F1e3Zu7dekiqBKBll3keW39B8efQwwccv5sorTeJj9mpKPLPyuox5Zdm/d" +
                        "6O26/njgH6auNlmPLm9GCw0vtU4y5odm05S5o90ve6q+z/pB+H/AMaf2cf2nPChb4f/ABB8LfGTwvrUW" +
                        "290ayurDUtyMu4x3VjNukjYDlo5oww7iv4eznhbPMhxH+0UauHqRejacfnGS0fqnY/ujJeKsiz/AA3+z" +
                        "V6WIpyWqTUvlKL1Xo0mfk3+3l+w5/wSH0Hw34g8UfFjU9E/Zi8VxxS3drc/CPUrfT9UnlUEiO38OQi4h" +
                        "uMt95YbQNj+NRyP6L8IPFnxJrV4UsJGeMp3S/eRcorzdV2cfVzt5PY/m/xi8I/DOjQnVxkoYKpZteyko" +
                        "yfkqSupeihfzW5/GxdNbWWt3LeG765ns7S6dtB1OeIWl48ccx8iVo4ZZRHIQAxVZG2ngMcZr/TympSpL" +
                        "2qSbWq3W2qu0rr5K/Y/y6qOMKr9k20n7r2e+jsm7P0bt3P9NH4dSeIJfh94El8WLInimXRtLk8SpeLtm" +
                        "GoNZRG4Eg7N5m7I9a/wcztUVjayo29nzy5bbct3a3yP98cjlWeCoutf2nJHmvvzWV7/ADOyrzD1AoAKA" +
                        "PmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Rn7U" +
                        "H7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrn0x/wTz/4KG" +
                        "eNf2LvGo0jVzc+K/gP4ruUk8b+CI33S2crYjOo6cJCFS4RQN6ZCzKArEEI6OMrEzhc/tD+HfxE8FfFjw" +
                        "V4c+Ivw68R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdGAZGBVgGBFbHM0eVftXfs3+Df2svgL8QPgX42" +
                        "/0aw8X2udH1yNA82latbMJ7K9iGVJMMyqWUEb03IThjX23h3xxiuHM4o4+hq6b1XSUXpKL9V16Oz3R8R" +
                        "4jcC4XiTJq2X19FUWj6xktYyXo+nVXWzP8AO/8AjR8H/HfwC+KXjb4PfEvR30Pxr4CvpNE1mycHY+0B4" +
                        "p4WIG+GeNlliccMjKw4Nf7U8LcS4POMvpY3Cy5qVWN0/wA0+zTumujTR/iTxVwxjMmzGrgsVHlq0pWa/" +
                        "JrumrNPqmmfYvh3/gp5+0/4V/Y+n/Y60HxL/Z/haSaWwtvHcMkw1228NzxkSaLBMD8luzk/OPnCExAhO" +
                        "K/Msb4CZBiOJlnVSnepa/JpyOa2qNdZW6bX956n6fgfH/iDDcMPJadS1O7XPrzqm96afSN+u9vdWh8H+" +
                        "D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASSSfw6niv17M8zw+Cw869eahTgm5Sb" +
                        "sklu2z8eyzLMRjcRChQg51ZtKMUrtt7JI/t2/4Jef8ABLzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1iPZPa" +
                        "+GLWdPn07Tn5BkIOLi4H3/uJ+7yX/yk8fvH7EcU4h4bDNwwEHotnUa+1Ly/lj03eu3+sv0ffo+4fhTDr" +
                        "FYpKePmtXuqaf2Ief8ANLrstN/1+r+aj+mgoAKAPzB/4LAfBD4l/Hz9h/x34P8AhN4YuPGfi/R9S0fxn" +
                        "H4V0dDLf3trptyXuEtYl+aaZUcusS5Z8FUDMQp/ffo08V4DJ+LKNbGVFTpSjKHM9k5LS76K+l3ot3ZXZ" +
                        "/P/ANJvhLH5zwlWo4Om6lWMoz5VrJqL15V1dtbLV2sruyPxs/4IPfsp/tAeC/2mfGvxj+IHwq1z4d+A9" +
                        "D8Kah4Pj1Tx3pl5pL3up6lf2MscNtFfxxPKFjt5HkdVKrgAkFhX9O/S88Q8mxWQ0sFh8RCrWlVjK0JKV" +
                        "oxUk22m0tWkk9XrbZn8u/Q98Os6wmf1cbicNOlRjSlG84uN5SlFpJSSb0Tba0Wl90fPX/BXr9jL9pO6/" +
                        "br+J3j3wd8G/EnxD8F/F1tJ8QeD/EHgPRdR1eF5I9Hs9OuLaY6fDKIpo7iBwEYglCrDrx9p9GvxQyKPC" +
                        "OHw9bFU6VWhzRlGc4xfxSkmuZq6aa1XW66HxP0mPCzPpcX4jEUMLUq0q/LKMoQlJfDGLT5U7NST0e6s+" +
                        "p/UT/wTz+EXjL4EfsW/s9/Cz4hWI0vxr4a0Mz+I9IyGeyudSvrjVTbSFSR5kIuRHJgkblOCRzX8A+NPE" +
                        "uFzfinG4vDPmpTn7r7qKUbrydrryZ/oL4J8M4rJ+FcFhMSuWrCHvLs5Nys/NXs/NH2bX5efqZ+Kf/BdL" +
                        "9n/AOLPx2/ZV8HS/CPwbe+PtT+G/iu38X+IvDfhmCW81NtNk0u8095re2gVpJvLknTeqAsFJbG1WI/qf" +
                        "6JPGWW5RxDVWMqqlGtScYyk7R5uaMrNvRXSdm9L6btH8p/S84MzLOOHaTwdJ1ZUaqlKMVeXLyyjdJauz" +
                        "aulrbXZM+Ev+Dfz4QfFr4a/GH9oK++Ivwu8ReAbLU/DWmWmnXnjXRNT0qK4lTVC7JG99DEHYDkgEnFfr" +
                        "v0yeJctx2WYKOGxFOq1Uk2oTjK3u9bN2Px/6GHDGZYDNMbLE4epSUqcUnOEopvm6XSufrz/AMFC/wDgm" +
                        "78Lv29fCemz6lqJ8BfGPwbby2fgT4mWUAuAIHfzjY38G5DPas5LKAwaJiWQ4Z0f+bPBbxyzDg/EyUY+1" +
                        "wtR3nTbtrtzRfSVt9LSSs9k1/THjZ4FZfxjhouUvZYqmrQqJX035ZLrG+2t4t3W7T/kW/aF/wCCWP7bf" +
                        "7Omtz2OufBfUviJ4eMnkab45+DttdeI9MuVJwHZbGI3Nvk8YuYYznpnIz/pHwX9IPhTO6SlTxUaU7awq" +
                        "tQkvvfLL/t2TP8ANPjb6PHFmR1XGphJVoX0nSTqRf3Lmj/29FH9TH/BGf4SfG34cfsPQ+C/2jPD9/pT6" +
                        "3r2s6j4K8C+PYmF1YeFL2ys4UtZ7O7XfCklyl1KIZFB2yZIAbFf59/Sg4kyrHcWOvls4y5YRU5w2dROT" +
                        "5lJaNqPKuZdV5H+hf0WuGs2wPCSoZnCUeapJwhPdU2orlcXqk5c75X0e2p+Yv7dn/BBfxTHr+tfEr9ii" +
                        "S31fQtUll1K++BfiG8is7qwkkbeU0m8vGSGSDk7YriRGQDAeTOB+9+Ef0v8O6MMLnl4zjZKtFXT/wAcV" +
                        "qn5xTT7Lr+AeL/0O8Qq08VkVpQk23Rk0mv8Eno15Saa7vp+FfiT9i79r3wjqk+jeIf2YPH2n39uSpUeE" +
                        "tcmikAO3dFNBbPHImRwyMQfWv63wPilw1iaanTzCg0/+nkE/mm7r0aufyHjvCvibDVHCpl9dNf9OptfJ" +
                        "pWa807GB/wyt+0//wBG4ePf/CP8Q/8AyJXZ/wARCyD/AKDqH/g2H/yRx/8AEO+IP+gCv/4Kn/8AIn9U";
                    resourceString += "v/BAv4N/tG/Cb4RfG+b4y+Gda8DeA/FWraPdfC3wf44t7nT7lLq2t7xNVvI7O8SOWOK4ElqocgBzGSOhJ" +
                        "/z3+mJxPkeY5lhFgqkKlaEZe0lBqSs3Hki5K6bVpu3S+p/oh9DXhfPMtyzFvHU50qM5xdOM04u6UueSi" +
                        "7NKV4K/Xl0P3e8S+HND8Y+HPEHhHxPpketeGvFVld+HPEOj3gJhu7G+ga1nhcAg7ZI3ZTz0NfyHgMdVw" +
                        "teFalLlqQalFrdNO6a9Gf2Dj8DRxVCdGrFSpzi4yT2aas0/VaH8Lf7b3/BJv9pD9l/4kalH4A8A618Zf" +
                        "gzrt3PJ4A8ZeBtPudXvILZmLx2mqW+nxPJBcxJhTIUEUv3kOdyJ/rb4UfSLyPP8DF4itDD4qKXPGclFN" +
                        "9ZQcnZxfa/NHZ9G/wDIjxZ+jhnvD+PksNRniMLJvknCLk0ukZqKupJdbcst090v26+Dv7MH7VXiP/giV" +
                        "48+AfjfQ7+T4veIbG+1H4bfDvxWzw6rZaLaaxa6lZ6ZIt2QYpXW1kMELkbBIkZ2YIX+UuJuPuHqHitRz" +
                        "ChOP1aEkqk46xc3FxlNW3S5lzNb2bV93/WXC/h/xFX8J62XV4S+szi3ThLSSgpRlGDvs3yvlT2uk7bL8" +
                        "yv+CNX7Hn7Suhft2/D74n+Mvgx4j+H/AIJ+EVv4ivPFeuePtHv9Gi87UfDmoaDBbQHUYofNmMt4rFEyV" +
                        "VSTgYr95+k94mZFW4RrYWjiqdWrXcFFQkpO0Zxm2+VuytHd7tpI/AvoueGOfUeMKGLr4WpSpUFNyc4yg" +
                        "ryhKCS5kru8tlsk2z+ir/goL/wTq+F37engjTrbWr4+B/ix4OjmT4f/ABNsIBO8CS/O9new7k8+0d8Nt" +
                        "3Bkb5kYZdX/AIn8GfGzMOD8XJwXtMNUtz027X/vRfSSXya0a2a/t/xp8D8v4xwkVUfssTTvyVEr2v8AZ" +
                        "kusW9e6eqe6f8hH7Q//AASv/bb/AGctT1CPXvgzqPxA8LWZZrfx/wDCGC48Q6XNCM/vXWzi+0268c/aY" +
                        "Y/yIJ/0o4K+kHwpnlOLp4qNKo/sVWoST7avll/27Jn+Z3G30eOLMjqSVTCyq019uknOLXfRc0f+3oo+H" +
                        "/8AhXfxA+1fYf8AhBtY+2+Z9k+x/wBmXvm+bu2bNnl53Z4xjOa/WP7awfLze2hbe/Mv8z8k/sTG83L7G" +
                        "d9rcrvf7j7S/Z9/4Je/ts/tG6lp0fhf4J6p4M8M3zKZfH3xWt7jw9pEULf8tla+jWe4Tt/o0Upz24OPy" +
                        "3jPx+4UySEnVxcalRfYptTlfto7Rf8AicT9V4L+j7xZnlSKpYSVOm/t1E4Rt31V5L/CpH9kn/BP/wDYO" +
                        "+H/AOwb8JbrwX4d1E+LfHni6aHWvib8Q7m3S3k1K6hjMcMMMYLGO0tw7eVGzMcs7E5Ygf5ieMni9jeL8" +
                        "yVepH2dGmmqcL35U9231lLS7stkuh/qJ4MeD2C4Oy10KUvaVqjTqTtbma2SXSMdbK73b6n8yX/BW39jT" +
                        "9p7Uv27/in428KfBLxJ4+8I/FufSta8EeIfAOjahrNtcY0mz06SCRtPilEU6TQspjkwSMMMqwNf3n9HD" +
                        "xPyCnwhh6FbF06VSgpKcZyjFr3pSTXM1dNPdea3R/Av0k/C3iCpxhiK9HCVKtKu4uEoRlJP3YxafKnZp" +
                        "p6PyezP6kf2QfgJeeC/2G/g1+z18bPDVrf3MXg2Lwd8SfBuo+XdWxXUYJDd2M2wsj7VnMT7SVJBwSMGv" +
                        "8/vErjCOK4txWY4Go0vbOVOS0futcsl1W1117n+hHhlwbLC8I4XLcdTTfsVGpB6r3k+aL6Peztp2P5z/" +
                        "wBtT/ggx8XvAet6343/AGRJV+Knw7upHvoPhjqt1FbeJtJR2LGGCW7ZIb6GMfdYyJNjC7JGBc/234WfS" +
                        "+y3GUoUM4/cV1p7RK9OXm0ruDfXRx63itF/D3it9DvM8HWnXyb9/Qbv7NtKpHyTdlNLo7qXS0nq/wAPv" +
                        "GfwE+OXw61N9F8ffBzxT4L1aMlDp/ijQNVsZTjuouYE3DuCMgjkV/WGV8YZTjqfPh8VSqR7xnF/kz+Ss" +
                        "14OzfA1OTEYWrTl2lCS/NGp8P8A9mn9ob4rajDpXw3+B/ivxrezP5OPD2gancRxnIBMsqQ+XGoyMs7AD" +
                        "ua58546yXLoOeJxdKmv704r7le7+R0ZLwHneYzUMLhKtR/3YSf3u1l8z+ir/gm9/wAEQ/F/g7x34U+O/" +
                        "wC2FFZ6fJ4RuLfxH4O+B9hNb6i8l/Awlhm1ieEyW/lxOA628TPvOPMYKGjf+J/HH6V2GxWEqZfk137RO" +
                        "MqrTjo9GqadndrTmaVuibs1/b/gX9EzE4XGU8wzqy9m1KNFNS95ap1Grxsnrypu/VpXT/qAr+BD/QIKA" +
                        "CgAoAKAPmP9rD9k/wCFv7X/AMLb/wCG3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTV" +
                        "yoysfxGftQfsv8AxS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6Yyuf" +
                        "U3/AATl/wCChfif9jDxxJoXiU3Xib4C+MplPjDwpC5eTTLltqDU7BG4EqqAJYxgSoMH5lQq4ysTOFz+0" +
                        "DwR438JfEnwl4f8eeA/EFt4p8H+KbaPV9A1/SJBJb3NvIOGU8EEEFWVgGVgVYAgitjmaPyM/wCCpX/BO" +
                        "3wz+3f8MbH4z/BG60+8+O/gnT5W8KaxpM8Etn4u0mAyS/2W9zE/leYHLG1mJ2q5KOQrFk/pr6OnjrPhf" +
                        "GfVcU28DVev/TuT050u38yW6V1qrP8AmH6R/gNDinB/WsKksdRjp/08iteRvo/5G9E3Z2Tuv4yNP+EPx" +
                        "T1T4kw/Byx+HeszfFae+Hhpfh02nXSayt/naYHtJEWRHHVgyjA5OBzX+pNbiXL6eBeNlXh9XUebn5ly2" +
                        "782z+R/lXR4ZzGpj1go0J/WXLl5OV8/N25d0/XY/tV/4Jef8EvPC37Fnha3+JHxIt7XxT+0v4ptfL1jW" +
                        "I9k9r4YtZ0+fTtOfkGQg4uLgff+4n7vJf8Ayx8fvH7EcU4h4bDNwwEHotnUa+1Ly/lj03eu3+rH0ffo+" +
                        "4fhTDrFYpKePmtXuqaf2Ief80uuy03/AF+r+aj+mgoAKACgDwn9pn476T+zJ8DvH3x21/wxqPjHQvh3B" +
                        "baprOgeE/s51CS2nvoLJ5IhdyRRkQibzX3OPkVsZOAfruA+EKmfZtRwFOpGnOq2lKV+W6TdnZN62stN2" +
                        "j4/j7jClkGUVswqU5VIUkm4xtzWbSurtLS93rsmaPhH45+B/F3wA0D9pCCeTTvh3rnhOD4xSS3oTz7TS" +
                        "pNKGryCVUYqJIo8hwDgMCM1hmXCWLw2czyxq9eNV0tNnLm5Vbyb28joyzi7CYnJoZmm1QlSVXXdR5eZ3" +
                        "80t/M8W/Yg/bd+G37dnw08S/Er4b6BqnhW18Ka3L4I1bQPGQsxerLHZW18kwFjPOnlSLc7VJYHcrDHHP" +
                        "1Xiv4U47hHH08LiZxm5w5043ta7VtUndW18mj5Twl8WcBxhgKmKwsJQUJuDjO172Tvo2rO+nmmbPwY/a" +
                        "+8E/HT4/wD7RXwE8F+GdUN1+zTcWGieN/HN59jGkz6jfeYotbbypnlLo9vOr70XBjPqK5eKPDXF5Rk2C" +
                        "zCvUjbGJuEFfmUVbV6Ws04tWb3OrhbxNwmb51jsuoU5XwbSnN25XJ30Wt7pqSd0tmfWtfnB+khQAUAFA" +
                        "BQAUAfCP/BRH9sfUv2G/gFZ/GjSvAcHxFurrxBp3gk+H9Qv5NNjVL62u7gy+bHBcHK/ZsbdvOevFfrvg" +
                        "p4Y0+Lc4eBnWdJKnKfMo82zirWuu/c/H/G7xQqcI5MsdCiqzdSMOVy5d1J3vZ9ux93V+RH7AFABQB89f" +
                        "tVftF+F/wBk34C+PP2gfGeh3/iTw14A/sv+0tF8MC3N9N/aus2miR+V9rkij+WS8Vmyw+UHHOBX2nh7w" +
                        "TiOI84o5dQnGFSrzWcr2XLGU3eyb2jbbc+K8ROOMPw3k1bMa8JTp0uW6ja75pxgrXaW8k99j5W+If8Aw" +
                        "UY1bwbceDn8LfsSfGj4xaD418N6D8SdM8XfCbwjLrGlLDr2npqCWrXNu5QzwrIFlVSQD3NfoWS+CVPFK" +
                        "r7XNcHh506k6bjUqcsrwk43s9bO2h+dZ3441MK6XsspxmIhUpwqKVKlzRtOKla60ur2fmeDfD//AILM6" +
                        "Z8WdCfxT8K/2Evjl8S/DMdxJpUniP4f+E49ZsFuoVV5ITcadPNGJFDqWXdkAjI5FfX5z9F+pl1b2WLzf" +
                        "BUalr8s6nK7PZ2kk7abnx+S/Slp5lR9rhMnxtane3NClzq63V4tq+q0P2b0+6a+sLG+a1ksmvIYrprK8" +
                        "XZNCZED7JF7MucEetfy9Wp8k3G97O11s/Q/qWjU54KVmrq9nuvU+Mv+Cf8A+1rqP7a37O2m/HLVPBEPw" +
                        "+u7/VtU8Nnw7YXz6jGq6dKsYk86SGAkvu6beK/UfGTw4hwrncsBCq6qUYy5muX4ulrv8z8t8GPEmfFeS" +
                        "Rx86KpNzlHlT5vh63st/Q+2a/Kj9XCgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAPmP9rD9k/4W/tf/A" +
                        "Atv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv2TPilqnw" +
                        "u+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrl34bftgftDfCP4QfED4F+APiNd6" +
                        "D8OfiRj+3NJgOZbff8ALcfYpj89t9pT5J/LI3rwaLg4o+1P+CZn/BQv4t/s1eKNM+CVt4K1D41/Dbx9q" +
                        "UUOk/DvQGL61p+pXbiNpNJEmUbzfvSW7lUZhuDRkuzOMrEzhc/sds4YLg2+szaT/Z+q3NtHDMLtbc3cM" +
                        "Z/e+RJJA0inYxOQrsuckE9a6fay5eW7tvbpfucXso83NZc1rX627GjUGgUAFABQAUAeZ/Gn4baf8Y/g/" +
                        "wDFL4S6qUXT/iX4e1jwLczTAkRDVdPlshJwCQUMgYEcggEc173C2eTyzM8PjIfFRqRn/wCAyTt87WPA4" +
                        "qyKGaZZiMHP4a1OUP8AwKLV/le5/NZ4F/aM8Sab/wAEM/FfwmDSR/F6y8U3v7EVnolwQt295retC9ezZ" +
                        "SeSNMu5oVx/cx2Jr+6c34IoVPFqnjP+YZ0li2+loQtzf+DIqXz9D+EMo44r0/CKpg9frSqvCJdbzndx/" +
                        "wDBcnH5eTPpP9i6w8Pf8E+f20f2zf2dtUuhZ/Dey+F3hT9oXQJmHlpPB4P0CGy1aeMvjLyyzzs5PLeXu" +
                        "PQ18L4pVq3GfC2V5lBXrvE1KMvJ1ZtwT8klFLtex934V0aHBXFWa5ZN2oLDU68fNUoJTa823Jvva54b+" +
                        "z5+0J4t/Y0/4JseMv2uV02yvv2h/wBvD4narqfgk+J38u1hvNVu7q3iubvzWTNvb/Yru6VmIVjKgYhWr" +
                        "6zjPgvDcUcdUsn5msFlmGip8u7UUm1H+9LmhHTVcrsro+R4K41xPC3AdXOeWLx2Z4mThzbJybScv7seW" +
                        "ctdHzK7szt/jT8bP2iv2Q/hvov7TGif8FOPDP7V3irw5e6TJ8ZP2ep5PCJ0vVbLUr2G0nj0aLSZmuIjA" +
                        "8yjdGitsDSnaFMZ8rhbhXJOJcdPK6mQVMDTmpeyr/veaLim06jkuV3SejbV7R1bUj1uKuLM84ZwMM0p8" +
                        "QU8dUg4+1ofuuWSk0mqai+ZWbWqSdry0ScX/RH4O8U6X458IeFfGuhuZNF8YabY+KdHkkxua11C1S7iJ" +
                        "2kjJSQdDX8U5nl9TCYmpQqfHTk4v1i7P8Uf27leY08Xhqden8FSKkvSSuvwZ+Dnw38Zft+ftdftR/tv/" +
                        "AfwL+06/wAD/hF8D/Gl/Yn4gWvh/TdW1qCC5nubXTdG09ZBaqsKi0lmnmMhlGEXcA3P9e55lfB3DfD+U" +
                        "5hiMB9ZxOJop8nPKMG0k51Jb6+8lFW5d3bQ/jzIs04z4m4hzfL8PmH1bDYas1zqEZTSbahTjtp7rcnfm" +
                        "2V9Tl/2dviB/wAFJP2iviN8cf2G9Z/ab074dX/7Luq3Vt8QP2m9E0Czv/FOv2FzOYNJtILV3ggiDiGSa" +
                        "W4BEwXYjEsGL+hxtk3A2SYHCZ9DASqrGxXJh3NxpwaV5yb1btdJR1je7WlrefwRnXHeeY7F5BPMI0Xgp" +
                        "PnxCgpVJpu0IqOiV7NuWkrWT1vf65/4Jx/tAftAXvxl/aq/Yx/aZ8bw/FXx7+zRe6dc+FfirDaR2d1rO" +
                        "i6krlftUduNgdEMDrktJ+8ZWZtm4/m3jfwbk0Mry7O8rpOhRxilzU73UZx/lb11fMui91NJXsfpXgZxp" +
                        "nU80zHI81rKvWwbjy1LWc4S/mS0ulyvq/eabdrnyx+1d4n+P/7O/h/x7471b/gsTok37QngW2u/F2k/s" +
                        "+T6P4N02xv4bONrgaV/Zcc803nTRrshkliJkfjAJ3L+heHeAybO61HDw4Zn9SqtRdbmqyab05+eyVk9W" +
                        "k9F6Wf554jZhnWSUa2InxRD67STkqHLSipJa8nJdu7WibWr063XD/8ABT347XX7TX/BHf4BfHTUdMh0b" +
                        "V/iF4k8Nalr2mad5n2aLUbez1ixuxCJiWERngcoGJIXAJbqfW8A+EY5D4m4zARk5RpU6iTe7i3Tcb262" +
                        "av59EeR9IDjCWf+GGCzCUVGVWpTbS2Ukqila+trp28ur3PsXS/2hvjt+3l+1JP4P/ZT+IV18Lv2Ov2fr" +
                        "6TSvjJ8ePDltp1xdeM9eQK7aTpEmoxXKeSqFf3yJwrGQkhoA/5jiOC8o4Q4fVbNqKrZnio3pUZOSVKH8" +
                        "81Fp3v9lvdculptfqGH42zjjHiF0MoruhleFlarWiot1Z/yU3JNWt9pLZ82t4J8V8dP2p/iN8df2yviT" +
                        "+y34D/as0T9jT4Mfs/WNifif8UdQm0KPxD4i1/UoROun6a2vSoscUAJEjxgMrI24sHQV6vCPh7gco4Yo" +
                        "ZriMunmGKxUn7OmlPkhCLtzT5Fq30T0aatazPJ4v8RMdnHFNfKcPmMMvwuFivaVG4c85yV+WHO9EurWq" +
                        "ad73R137Dn7T/xOsP2tfif+xP8AEz4/aV+1h4e0zw1F8Xvg38ffDf8AZJu5LBbmCzudM1I6LJLC80bT5" +
                        "DM2/wCQliVkRU83xZ4BwE+HMPnmFwcsDN1PZVaMua17NqcOdJpO2y01VtU2/T8I/EDMIcSYjIsVjYY6E" +
                        "aftaVaPLfluk4T5G02r7vXRtu0kl6j/AMFov+UaX7Sf/cnf+p9odfP/AEXP+S7wP/cX/wBM1D6H6VH/A" +
                        "CQWP/7hf+nqZ9mfsrf8mwfs4f8AYheD/wD1HrSvzDxC/wCR/jv+v9X/ANLkfqXh3/yT+A/68Uv/AEiJ+" +
                        "XP/AAb/AH/Jimrf9j74g/8ATdpdfv8A9Mn/AJK6P/XiH/pUz+e/oYf8khL/AK/z/wDSYH7gV/KB/Wp/K" +
                        "5/wSx+Cn7bfx0/Y1ay+EX7UkX7Lfwv8La3rcHg+Pw34ft9X1bxHrcjx3M899dXE0bW1pEWSFEhyWO8sp" +
                        "AXP+hH0g+KuFMo4n5sZl7xuInCHNzTcYwhqkopJ80nq23tok97f53/R44U4szfhflweYLBYeE58vLBSl" +
                        "Uno25NtcsVoklvq2tr/AKhf8E4f2mfj7+1B+zt8c/A/xO8QWWlftNfAvW9d+Cl/8QrawgltJNShtGSy1" +
                        "Ka1iSKCRorjeJI0VVcRg7RvNfgPjhwHk+QZ3hK+Fg5YDEwhVULu/K370E3dq8bWbbavvof0F4GcfZzxB" +
                        "keMw+KnGOYYac6TnZW5kvdm0rJ2le6SSdtlc+Af2pvjt8c/2O9Euvit4a/4K0aD+0T8Y/A+o2H/AAn/A" +
                        "OzXq2neEobXVra51CG0uLa30/SJ55LR4fM3yIAkgiDOroVG79k8PuEcp4mqrCVeHJ4TC1Iy5K6lUbi1F" +
                        "tNykkpJ2snquayad9PxjxD4vzfhik8XS4khi8VSlHnoONJKSckmlGLbi1e7Wj5btNW1+nf+CjH7Yn7RH" +
                        "gew/wCCePin9lnUxpmsftK6miweBtWjtprPWpdZtNHfTLK8eaISCMS34DmNo2IJ5HBHwPgj4ZZJi551S" +
                        "zaPNHBx+NXTgoupzyjZ2vaOl7ryZ9/44+J+d4SGSVcplyyxkvgdmpuSp8kZXV7Xlraz80cV+03oH/BTD" +
                        "9ij4bj9r1v2y4/2hIfBNxp+qfGz4I614W07S9AfTry6itZU05rUtIIoZJlUuqwybMyZGCh9XgPGcCcVY" +
                        "7+xv7L+quopKlVVSUp8yTa576XaV7NyV/d7M8rj7Bce8KYD+2f7VWLVNxdWi6cYw5W0nyW1sm7XSi7e9" +
                        "0sdP+2/+2R+0Ra+MP8Agmfr/wCx/r628X7Yljrctn4I8WQ2z6TdSappuhPpU+oMIHnRbFtYaaYRuMiPB" +
                        "HWvP8KPDHJJYbPqecwu8BKF5xb5lyyqc6jrZ8/JZXT3ueh4teKOdxxWQVMlnZZhGdoSS5XzRp8jlpdcn" +
                        "tHKVmtrHF/tOv8A8FGv+CeXhfRf2r9Q/a5b9qr4eaPqWl2Hx4+Fnizwzpui2cdpqN0lmJdPazMxgjM0q" +
                        "xK0ZjZHZCyyKWQerwEuCONcRPKI5b9SryjJ0akakpu8Ve0r2u7Jtp3TSaTi7M8rj98c8E4eGcSzP69Qj" +
                        "KKrU5U4wVpO142vZXaStZptNqSuj2X9rr9tvxd4p+NXwB/Zd/Z/+Nmh/s5WHxd8KQfHv4iftH/EAaU39" +
                        "keF79JPsVrp8WrSpbteXHlkkMcjchVgN7D5fw28KcNh8qxma5jhJ4uVCq6MKEOb3qitzOTiubljf8HdP" +
                        "RH1PiX4sYnEZrgspy7FwwkcRSVadefL7tN35VFSfLzSt+Ks1qzz/wCE37SnxN/Z2/bV+CP7PWu/tiab+" +
                        "218Cv2lbbU9L0PxIJdAuvEPhPxHp0PnKk8ugyyl4LgtGq+aQCHYqB5TF/Z4j4FwGd8K4vMaeWSy7F4Nx" +
                        "bj76hUhJ20U0rOOr07K7fMreLw3x5j8k4rwmW1M0jmWDxiklL3HOnOKvq4N3UtFr3dkuV34/wCGXxE/b" +
                        "8/a1/az/bh/Z28B/tKx/Br4Q/BXxlcRX3xCg0LTdU8Q6dY3F1e2enaNpiSCBFjl+xyySTs3mL5YAb5ir" +
                        "enn2ScHcOcOZTmWIwH1jE4iirQ55RhJpRc6k93dcySivdd9tLrzMgzzjPiTiTN8tw+P+r4bDVnefJGU4" +
                        "puShTgtFZ8rbk/eVlrrZ/Rn7AHxx/aX0P8Aab/aW/YW/ai8dr8Y/E3wSsdM8deAvi8tlb6fPqGiX627B" +
                        "bmOAfMzLfQMpZmZGEiM7gKR8R4ycJ5FVyHAZ9lVH6vTxMpQnSu5KM1fZv8AwyXRNcrSWp9x4McXZ9Rz/" +
                        "H5Bm1b6xUw0YzhVsouUHbdLf4ovq0+ZNvQ/YOv5oP6cCgAoAKACgAoAKAPmP9rD9k/4W/tf/C2/+G3xJ" +
                        "sPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxWfHT9jT47/Ab472/wCz7r/g+51/x" +
                        "lr9ylp8PJvDUEtxb+Jbe4l8qCewIGWDHh1PzRtkPgg1i0dKkmj+pb/gm3/wTb8NfsgeGoPiD8QYLbxL+" +
                        "0R4ltvL1XVY9s9t4ctp1+awsG5Bcg4nnH3/ALq/JkvpGNjCc7n6s1ZmFABQAUAFABQAUAfzD6V+yd8XU" +
                        "/4K66t8MX8DaqP2Xl+Jkf7bh8WDTr1dDGsQ+H5dVjRLgp9nLf2hdC3MecgKcDFf3viPEXLX4bRxXto/2" +
                        "h9W+qcvMuflc1F6X5vgXNfzP4Bw/hxma8S5YX2Mv7P+s/W+blfJzKDktfh+OXLbfQ9N/wCC23wb+Ndz8" +
                        "Sfgf8YPgB4I1fxp4i8eeFfF/wCzH8RLbwlp15fuujavFi2Wf7HG+yNjqV0dz4UMB1yceD9FTifKo4HF4" +
                        "PMasKcKVWliIc0kvei9bXau/chotbHvfSx4WzWWPwmNy6jOpOrSq4efLFy92S0vZOy9+er0ukfRf/BQT" +
                        "9hLxh4r/YI+BXwl+B3hu18deL/2T7rwt4j0XwNdpG8XiW10LSpNJvbfyptiSvOJfPZWIMm1lGWcA/E+D" +
                        "Pi7hsPxhi8Zj6jpUscqkXNb03OSlF3WyVuVNbXT2R9x40+D+KxPBuDweApqrVwLpyUHtUUIuMlZ2u3fm" +
                        "ae9mt2fMvg/4z/8ExPEFrouhav/AMEt/Eml/F66Ntp+v/CXSvhCl/f2V9L+7kVXCw+ZCkiuA5VXKqT5Y" +
                        "OVH3mZ8LcfUZTqQ4gpywyu1UeJsmunezatpdq7+LqfBZXxV4f14wpz4eqRxTspUlheaSfXtdJ31sm0vh" +
                        "T0P6KNG0fSvD2kaVoGhadDo+h6HbQaPo2k6bGsNva2ltEsEMMUaAKqIihVUDAAxX8T4rE1K9WVSpJynJ" +
                        "ttvVtvVtvu2f29hcLToUo06cVGEUkktEktEkuyWx+UH/BOvwV4y8L/tSf8ABULWPEvhLU/Duk+LviVba" +
                        "r4U1TXbC6tLfVLUS6sTNaSXCIs8Y3r80ZI5HPNf0V42ZrhcRw/w/ClUjOVPDtSSabi7Q0kk9H5M/nHwP" +
                        "yrFYfiHiCdWlKEamITi3FpSV56xbWq80cz+wt4F8b+Hv+CjX/BTjxR4g8HarofhnxbqXh2Xwr4i1jT7u" +
                        "2sdTSJr3e1pcTxrHMF3DJRjjNd3i3m+Er8EZBSp1YyqU4z5oqSbj8PxJO6+ZweEOT4uhxxn9WpSlGnUl" +
                        "Dlk4tKXxfC2rP5Hmfw1+HXx0tf2+v8AgrX4j8B+F9V8O+IPGnga3074J+NtTsbi00278Qjw9BFZNbXly" +
                        "kcEhjuQu7a+Bg5xivez3O8olwdw5SxFSM4U6zdWCaclDnfNeKu1eN+h4OQ5Hm8eMuJKuHpyhOpQSpTaa" +
                        "i58i5bSdk7St10Pz/8AgVrHwk8MfsTfE/8AZut/2GPGPjb/AIKDeMNH8aeD/HGs674FN1qlrqOtR6hbR" +
                        "6rNrWqJ5lrBbW0oKou1jKhABLmU/snF2GzLEcVYfM3m9KnktOdKUEq1ouMeVuCpx0k5SW7uuV+XKfi/C" +
                        "GKy3D8J4jK1lFapnVSFWM26N5KU+ZKbqS1ioxeys+Zba8z9K/aB+EXxY1X/AIIWfsufD3S/hh4i1Lx9o" +
                        "/iW1udW8D2Gi6lNrFrGmo+IizTWccJmRQJFyWQfeHqK8Pg3iXLqfi3mGJniKaoypu03OKi/dpbSvZ7Pr" +
                        "0Pe404ZzKp4Q5fhoYeo60aivBQk5L3qu8bXW66dT6m8ZfBXxl/wSz/al8JfGr9mP4c634x/Y4+Of2LwD" +
                        "8e/gp8P7PUdbvPDl/ZwFLfV7S3hE87gKGlBIbJ82JmXzYiv57lnFWF8QeH6mBzSvCnmeGvOjVm4wU03r" +
                        "CTdktbLp9mST5ZX/Q804UxXh5xDSx2VUJ1MrxNoVqUFKbhJLScUrt6XfX7UW1zRt5F8bPhL4C/Zs/bl+" +
                        "Nvx2/aP/ZKuv2pf2Uv2oYNK8YeGviPovheLxNeeDtZitws0M9tKqtBFKZHLZ2l0ERXe6Oo+l4V4jxme8" +
                        "JYTAZZmSwWY4JyjKDqezVWN9Gmt2rK29nzXsmmfM8V8N4PIeLsXmGZ5a8bl2NUZRqKn7R0pJapp7J3d9" +
                        "rrltdpo/Qf9hfXv2J/H3xB8V6/+y/8Ashal8Gr/AMO6TFHJ8WdY8ADwrY6jb6hMjSWVpdt80jjy0eRCF" +
                        "yMEbgMj8Y8W8HxVg8FTp5rmUcQpy/hqt7RxcVpKUem7SevZ2P2vwixnCmNxtSplWWSw7hH+I6Ps1JSes" +
                        "Yy6vRNrTurnRf8ABXvwr4o8bf8ABO79oXwx4M8N3/i7xLqf/CJ/2b4e8MWdxf31x5PjnRriTyoLRJJH2" +
                        "Rxs7YU4UEngGuL6NeY4fCca4KrXqRp017S8pNRSvRqJXbsldu3qdv0mMuxGL4IxtKhTlUqS9naMU5N2r" +
                        "U27JXbsk36H1z+zNp9/pP7N/wCz7pWq2U2manpngjwpp+pabqEbwz288Og2sckckcgDI6MCGUgEEYNfm" +
                        "3HlaFTPMbODTi61RprVNObs0+qZ+lcA0Z08iwUJpxlGjTTT0aahG6a6NH5r/wDBC7wL43+Hn7FWqaD4/" +
                        "wDB2q+B9dfxvruoJovjDT7vTLswSafpqpIIb2ON9jFCA2MHB9K/dPpbZvhMbxVGph6sakPYwV4yUlfmn" +
                        "pdNq5+EfRDyfF4LhSVPEUpUp+2m7Si4u3LDWzSdj9lq/mA/qQ/I7/giV4K8ZeAf2FtB8PeO/CWp+Ctfj" +
                        "8S+IruTQ/FthdabeLFLcRlHMN5HG4VgODjBr+kPpV5rhcZxdOph6kakPZwV4tSWz6ptH81fRPyrFYLhC" +
                        "FPEUpU5+0m7Si4u110aTPg74QfCP9piD9lz/gsVoXw18Fa/4a+Jnjzx/rOofD+G407ULG81nSZNWle/G" +
                        "meYkbztcWBmjhMWdzMoGSRX6/xLxJkL4g4YqYqrCdClQip+9FqMuVcvPvblnyt32Sdz8e4Z4az9cP8AF" +
                        "FPC0qkMRVrzcPdknOPM+bk2vzQ5krbtqx82+ONX+CHjj/gnFP8As3fsufsL+Lbj9omHRPD0fxo8at4Da" +
                        "O/0a+0bU9P1bV57nWJomubmS6mtdkMEZyY5AAqBBHX3OU4bNsJxwszzXN6SwXPP2UPbaSUoyjBKCfLFR" +
                        "Tu5Pqt3fmPhM2xOU4vgZ5ZlOUVXjlCHtZ+x96DhKMpt1GuaTk1aMV0eyS5T6L/4KJX/AI38EeAf+CJup" +
                        "+FfBs/iP4keENR8LX/hz4fXgazub/W9PsvC8lvpzi4CmJ5Z41iO8DaTz0r4nwUo4TF4ziqNWqoUKkail" +
                        "NapQk615K26Sd9Nz7jxurYvCYPhOdGk516cqbjB6NziqNoO+zclbXY9b/a9/bl8Rfts/BXXf2Qf2Xv2b" +
                        "/iK3xp+MTWPhTxza/ErwzNoll4QsBexT3h1G4mkeONv3flF2wihi27cFU/N+GvhLQ4VzWGc5rjsP9Vw9" +
                        "5Q9nUU3Vdmo8qSu9723drWtdr6XxM8Xa/FmVTyXKcBiPreItGftKbgqSunLnbdlta+yu3e9k+H/AOCgv" +
                        "hvxd+yr49/4IveEvhZ4Vn+LPiv4CR+INB0vwppAWK78R/2BpvhWC8jgDA4nuooZSgCk72GFJwD63gzjs" +
                        "NxDg+Ka2LqKhTxTg3J7Q55VnFvyi2r+S1a3PJ8acBieHcZwrRwlN16mF50orepyRoqSXnJJ283onsb/A" +
                        "O2f+114h/4KLfCeH9i79lX4A+O28X/FfVNDg+K/iD4peG7jQ9N8H6dpup2+sN9undpVSRZ7aMuc7dgYI" +
                        "XdlU8fhd4bUeCcxed5tjKHsqEZ+zjTmpyqylFx91aXVm7db2bsk2dnin4l1+OMtWR5Rgq/ta8oe0lUpu" +
                        "EaUYyUveetndK/S10rtpEf7av7J1n+z7+0h+z5+0rq/7N0v7XH7MvhbwFpn7Pnxj8C6fo8euavph0K2k" +
                        "trPWY7OQkH90sQ3t8q7HR3TzEYPws8RZZ1keNyyGOWBx868q1KblyRlztOVNy9b6bu6aT5WifFXw4jku" +
                        "e4LNJ4B4/AQoRoVYKPPKPImo1FH0trsrNNrmTPoz9k3xj/wTp+Kfxt8G2X7O/7D2p+E/F2lx3fiez+Ld" +
                        "58M00PS9AmsYpBtl1F+Yp3YGOPapBbK7s4B+I8Rss42y/KqssyzaM6UrRdNV+eU07bR6pbvrbWx9z4b5" +
                        "pwPmObUo5blEqdWN5Kq8PyRg1fefRt6LpfS5Z/4JweBfG/hb9tX/gq/r3ifwdqvhzQvGXjfQNQ8Ia1r2" +
                        "n3dnaarBHqHidnks5riNEnRRMhLRkgbl9RUeOGb4TEcK8O06VWM506M1JKSbi+WjpJJ3T0e/Zl+BeT4v" +
                        "D8V8R1KtKUIVK0HFuLSkuatrFtWa1W190dL8HvBXjKx/wCCxv7W3jm98JanZ+Cta+GvhrStG8YXVhdR6" +
                        "Xd3US6Lvhhu3QQySL5bblViRg5HBrh4mzXCz8MctoRqRdWOIqNxuuZJ+01cb3S1Wtjv4YyrFQ8UMyxEq" +
                        "UlSlh6aUnF8ra9ndKVrN6PRM+k/2Gv2wNf/AGxvBHj7xhr/AMBdb+As3grxDceB7bR/GU0lw1+kEEcpm" +
                        "V5bOyKyIX2SxBWCNgb2zx8L4s+GlHhjF0aNPGQxSqU1O8Va121b4paPdO6uuiPvPCPxNrcUYStWqYOeF" +
                        "dOo4Wk73sk7/DHVbNWdn1Z9vV+UH6yFABQAUAFABQAUAZF54f0HUdV0bXdQ0S0vtc8O/aP+Ef1m8toZb" +
                        "uw+2RiGf7PM6l4vNQBX2EbhwcigDXoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoA" +
                        "KACgAoAKACgAoA/PX9tL9kDxv8AtL/F79iX4ieFPE2laDpn7MXj20+K/i2x8Qm7E+oWdvqmlXzQ2n2aG" +
                        "VfNK2DgeYVGSOeuP2jwt8S8JkOWZrhq1OUpYyg6cXG1otxmryu1p7y2uz8U8VfDLF59meU4mjUjGOCrq" +
                        "pJSveSUoO0bJ6+697LY/Qqvxc/az4N/ag/ZR8ZfHP8AaY/Yg+N3h7xHpmkaB+y9rHiXxH4u0nWTdC81C" +
                        "LWotLjiWz8iKRNyGxbd5jKORjPNfr/APiJhcpyHNsDUhKU8bCnGLVrR5HO/Ndp68ytZM/HfEDw5xWb5/" +
                        "lGPp1Ixhgp1JSTveSmoW5bJrTld7tH3lX5AfsQUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQB//2" +
                        "Qs=";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.PointSeriesLabel pointSeriesLabel1 = new DevExpress.XtraCharts.PointSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView1 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram2 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.PointSeriesLabel pointSeriesLabel2 = new DevExpress.XtraCharts.PointSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions2 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView2 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.pageHeaderBand1 = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.groupHeaderBand1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.groupFooterBand1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.pageFooterBand1 = new DevExpress.XtraReports.UI.PageFooterBand();
            this.reportHeaderBand1 = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.reportFooterBand1 = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.line2 = new DevExpress.XtraReports.UI.XRLine();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.dsDatos_1 = new XtraReportSerialization.dsDatos_1DataSet();
            this.spDineroAcumTableAdapter = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand1 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection1 = new System.Data.SqlClient.SqlConnection();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.line4 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo5 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo4 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.label35 = new DevExpress.XtraReports.UI.XRLabel();
            this.label34 = new DevExpress.XtraReports.UI.XRLabel();
            this.label33 = new DevExpress.XtraReports.UI.XRLabel();
            this.label32 = new DevExpress.XtraReports.UI.XRLabel();
            this.pageInfo3 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.label198 = new DevExpress.XtraReports.UI.XRLabel();
            this.chart2 = new DevExpress.XtraReports.UI.XRChart();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.label24 = new DevExpress.XtraReports.UI.XRLabel();
            this.label25 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.line9 = new DevExpress.XtraReports.UI.XRLine();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.label28 = new DevExpress.XtraReports.UI.XRLabel();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label26 = new DevExpress.XtraReports.UI.XRLabel();
            this.label27 = new DevExpress.XtraReports.UI.XRLabel();
            this.dsDatos = new XtraReportSerialization.dsDatosDataSet();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FiltroCuentas = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroEmpresas = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroEjercicios = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroMonedas = new DevExpress.XtraReports.UI.CalculatedField();
            this.sqlDataAdapter1 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand2 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection2 = new System.Data.SqlClient.SqlConnection();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label15,
                        this.label16,
                        this.label17,
                        this.label18,
                        this.label19,
                        this.label20});
            this.Detail.HeightF = 18.00003F;
            this.Detail.Name = "Detail";
            this.Detail.Scripts.OnBeforePrint = "Detail_BeforePrint";
            this.Detail.StyleName = "DataField";
            // 
            // pageHeaderBand1
            // 
            this.pageHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label1,
                        this.label3,
                        this.label4,
                        this.label5,
                        this.label6,
                        this.label7,
                        this.label8,
                        this.line1,
                        this.line2});
            this.pageHeaderBand1.HeightF = 25F;
            this.pageHeaderBand1.Name = "pageHeaderBand1";
            this.pageHeaderBand1.PrintOn = DevExpress.XtraReports.UI.PrintOnPages.NotWithReportHeader;
            this.pageHeaderBand1.Scripts.OnBeforePrint = "pageHeaderBand1_BeforePrint";
            // 
            // groupHeaderBand1
            // 
            this.groupHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart1});
            this.groupHeaderBand1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("AcumMoneda", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("Ejercicio", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("Cuenta", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.groupHeaderBand1.HeightF = 192.7084F;
            this.groupHeaderBand1.Level = 1;
            this.groupHeaderBand1.Name = "groupHeaderBand1";
            this.groupHeaderBand1.Scripts.OnBeforePrint = "groupHeaderBand1_BeforePrint";
            this.groupHeaderBand1.StyleName = "DataField";
            // 
            // groupFooterBand1
            // 
            this.groupFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line5,
                        this.label11,
                        this.label12,
                        this.label13,
                        this.label14,
                        this.label2,
                        this.line4});
            this.groupFooterBand1.HeightF = 40F;
            this.groupFooterBand1.Level = 1;
            this.groupFooterBand1.Name = "groupFooterBand1";
            this.groupFooterBand1.Scripts.OnBeforePrint = "groupFooterBand1_BeforePrint";
            // 
            // pageFooterBand1
            // 
            this.pageFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.pageInfo5,
                        this.pageInfo4,
                        this.line7});
            this.pageFooterBand1.HeightF = 40F;
            this.pageFooterBand1.Name = "pageFooterBand1";
            // 
            // reportHeaderBand1
            // 
            this.reportHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label35,
                        this.label34,
                        this.label33,
                        this.label32,
                        this.pageInfo3,
                        this.line6,
                        this.pictureBox2,
                        this.label198});
            this.reportHeaderBand1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.reportHeaderBand1.HeightF = 140F;
            this.reportHeaderBand1.Name = "reportHeaderBand1";
            this.reportHeaderBand1.Scripts.OnBeforePrint = "reportHeaderBand1_BeforePrint";
            this.reportHeaderBand1.StylePriority.UseFont = false;
            this.reportHeaderBand1.StylePriority.UseTextAlignment = false;
            this.reportHeaderBand1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // reportFooterBand1
            // 
            this.reportFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart2,
                        this.label31,
                        this.label22,
                        this.label23,
                        this.label24,
                        this.label25});
            this.reportFooterBand1.HeightF = 276.0417F;
            this.reportFooterBand1.KeepTogether = true;
            this.reportFooterBand1.Name = "reportFooterBand1";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 12F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 25F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label9,
                        this.label30,
                        this.line9,
                        this.label10,
                        this.line8,
                        this.label21,
                        this.label28,
                        this.label29,
                        this.label26,
                        this.label27});
            this.GroupHeader1.HeightF = 70.83334F;
            this.GroupHeader1.Name = "GroupHeader1";
            // 
            // label15
            // 
            this.label15.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.PeriodoNombre", "{0:#.00}")});
            this.label15.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(110.3501F, 0F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(103.4347F, 18F);
            this.label15.StylePriority.UseFont = false;
            this.label15.Text = "label15";
            // 
            // label16
            // 
            this.label16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.Cargos", "{0:$#,#.00}")});
            this.label16.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(219F, 0F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseTextAlignment = false;
            this.label16.Text = "label16";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label17
            // 
            this.label17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.Abonos", "{0:$#,#.00}")});
            this.label17.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(319F, 0F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseTextAlignment = false;
            this.label17.Text = "label17";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.SaldoFinal", "{0:$#,#.00}")});
            this.label18.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(421F, 0F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(120F, 18.00003F);
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            this.label18.Text = "label18";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.CargosAcumulados", "{0:$#,#.00}")});
            this.label19.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(546.0001F, 0F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label19.StylePriority.UseFont = false;
            this.label19.StylePriority.UseTextAlignment = false;
            this.label19.Text = "label19";
            this.label19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label20
            // 
            this.label20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.AbonosAcumulados", "{0:$#,#.00}")});
            this.label20.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(669.8804F, 0F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label20.StylePriority.UseFont = false;
            this.label20.StylePriority.UseTextAlignment = false;
            this.label20.Text = "label20";
            this.label20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label20.XlsxFormatString = "";
            // 
            // label1
            // 
            this.label1.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(6.00001F, 2.083333F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(104.3501F, 18F);
            this.label1.StyleName = "FieldCaption";
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseTextAlignment = false;
            this.label1.Text = "Cuenta";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label3
            // 
            this.label3.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(110.3501F, 2.083332F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(103.4347F, 18F);
            this.label3.StyleName = "FieldCaption";
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseTextAlignment = false;
            this.label3.Text = "Periodo";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label4
            // 
            this.label4.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(219F, 2.083332F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label4.StyleName = "FieldCaption";
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "Cargos";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label5
            // 
            this.label5.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(321F, 2.083332F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label5.StyleName = "FieldCaption";
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseTextAlignment = false;
            this.label5.Text = "Abonos";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label6
            // 
            this.label6.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(429.8805F, 2.083332F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label6.StyleName = "FieldCaption";
            this.label6.StylePriority.UseFont = false;
            this.label6.StylePriority.UseTextAlignment = false;
            this.label6.Text = "Saldo Final";
            this.label6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label7
            // 
            this.label7.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(549.8804F, 2.083332F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label7.StyleName = "FieldCaption";
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseTextAlignment = false;
            this.label7.Text = "Cargos Acumulados";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label8
            // 
            this.label8.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(669.8804F, 2.083332F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label8.StyleName = "FieldCaption";
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseTextAlignment = false;
            this.label8.Text = "Abonos Acumulados";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line1
            // 
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(794F, 2.083333F);
            // 
            // line2
            // 
            this.line2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 20.08333F);
            this.line2.Name = "line2";
            this.line2.SizeF = new System.Drawing.SizeF(794F, 2.083334F);
            // 
            // chart1
            // 
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart1.DataAdapter = this.spDineroAcumTableAdapter;
            this.chart1.DataMember = "spDineroAcum";
            this.chart1.DataSource = this.dsDatos_1;
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            this.chart1.Diagram = xYDiagram1;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(6.119629F, 10F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart1.SeriesDataMember = "CtaDinero";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "PeriodoNombre";
            pointSeriesLabel1.LineVisible = true;
            pointSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart1.SeriesTemplate.Label = pointSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions1;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "SaldoFinal";
            this.chart1.SeriesTemplate.View = lineSeriesView1;
            this.chart1.SizeF = new System.Drawing.SizeF(783.8804F, 172F);
            this.chart1.Tag = "EXEC spDineroAcum [EstacionTrabajo]";
            // 
            // dsDatos_1
            // 
            this.dsDatos_1.DataSetName = "dsDatos_1DataSet";
            this.dsDatos_1.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // spDineroAcumTableAdapter
            // 
            this.spDineroAcumTableAdapter.SelectCommand = this.sqlCommand1;
            this.spDineroAcumTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "spDineroAcum", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand1
            // 
            this.sqlCommand1.CommandText = "EXEC SPDINEROACUM 1";
            this.sqlCommand1.CommandTimeout = 0;
            this.sqlCommand1.Connection = this.sqlConnection1;
            // 
            // sqlConnection1
            // 
            this.sqlConnection1.ConnectionString = "Data Source=.;Initial Catalog=INFORMES11;User ID=SA;";
            this.sqlConnection1.FireInfoMessageEventOnUserErrors = false;
            // 
            // line5
            // 
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(110.3501F, 0F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(682.6498F, 6.999969F);
            // 
            // label11
            // 
            this.label11.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.Cargos", "{0:#.00}")});
            this.label11.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(219F, 6.999969F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(100F, 18.00003F);
            this.label11.StyleName = "FieldCaption";
            this.label11.StylePriority.UseFont = false;
            this.label11.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:$#,#.00}";
            summary1.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label11.Summary = summary1;
            this.label11.Text = "[Cargos]";
            this.label11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label12
            // 
            this.label12.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.Abonos", "{0:#.00}")});
            this.label12.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(319F, 6.999969F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(100F, 18.00003F);
            this.label12.StyleName = "FieldCaption";
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:$#,#.00}";
            summary2.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label12.Summary = summary2;
            this.label12.Text = "label12";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label13
            // 
            this.label13.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.SaldoFinal", "{0:$#,#.00}")});
            this.label13.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(419F, 6.999969F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(122F, 18.00003F);
            this.label13.StyleName = "FieldCaption";
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            this.label13.Text = "label13";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label14
            // 
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(109.4347F, 6.999969F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(104.3501F, 18F);
            this.label14.StyleName = "FieldCaption";
            this.label14.Text = "Total Cuenta";
            // 
            // label2
            // 
            this.label2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.AcumMoneda", "{0:$#,#.00}")});
            this.label2.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(546.0001F, 7.000001F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.Text = "label2";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line4
            // 
            this.line4.BorderColor = System.Drawing.Color.Black;
            this.line4.ForeColor = System.Drawing.Color.Black;
            this.line4.LineWidth = 2;
            this.line4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 29.91667F);
            this.line4.Name = "line4";
            this.line4.SizeF = new System.Drawing.SizeF(792.9999F, 10.08333F);
            this.line4.StylePriority.UseBorderColor = false;
            this.line4.StylePriority.UseForeColor = false;
            // 
            // pageInfo5
            // 
            this.pageInfo5.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo5.Format = "Página {0} de {1}";
            this.pageInfo5.LocationFloat = new DevExpress.Utils.PointFloat(412.5F, 3.125F);
            this.pageInfo5.Name = "pageInfo5";
            this.pageInfo5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo5.SizeF = new System.Drawing.SizeF(381.3455F, 18F);
            this.pageInfo5.StyleName = "PageInfo";
            this.pageInfo5.StylePriority.UseFont = false;
            this.pageInfo5.StylePriority.UseTextAlignment = false;
            this.pageInfo5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pageInfo4
            // 
            this.pageInfo4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 3.125F);
            this.pageInfo4.Name = "pageInfo4";
            this.pageInfo4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo4.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo4.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo4.StyleName = "PageInfo";
            this.pageInfo4.StylePriority.UseFont = false;
            this.pageInfo4.StylePriority.UseTextAlignment = false;
            this.pageInfo4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line7
            // 
            this.line7.BorderColor = System.Drawing.Color.Gray;
            this.line7.ForeColor = System.Drawing.Color.Gray;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(794F, 3.125F);
            this.line7.StylePriority.UseBorderColor = false;
            this.line7.StylePriority.UseForeColor = false;
            // 
            // label35
            // 
            this.label35.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.FiltroEjercicios")});
            this.label35.LocationFloat = new DevExpress.Utils.PointFloat(483.1197F, 54F);
            this.label35.Name = "label35";
            this.label35.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label35.SizeF = new System.Drawing.SizeF(309.8802F, 18F);
            this.label35.Text = "label35";
            // 
            // label34
            // 
            this.label34.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.FiltroMonedas")});
            this.label34.LocationFloat = new DevExpress.Utils.PointFloat(483.1197F, 36F);
            this.label34.Name = "label34";
            this.label34.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label34.SizeF = new System.Drawing.SizeF(309.9999F, 18F);
            this.label34.Text = "label34";
            // 
            // label33
            // 
            this.label33.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.FiltroCuentas")});
            this.label33.LocationFloat = new DevExpress.Utils.PointFloat(483.1197F, 18F);
            this.label33.Name = "label33";
            this.label33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label33.SizeF = new System.Drawing.SizeF(309.8803F, 18F);
            this.label33.StylePriority.UseTextAlignment = false;
            this.label33.Text = "label33";
            this.label33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label32
            // 
            this.label32.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.FiltroEmpresas")});
            this.label32.LocationFloat = new DevExpress.Utils.PointFloat(483.1197F, 0F);
            this.label32.Name = "label32";
            this.label32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label32.SizeF = new System.Drawing.SizeF(309.8804F, 18F);
            this.label32.StylePriority.UseTextAlignment = false;
            this.label32.Text = "label32";
            this.label32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pageInfo3
            // 
            this.pageInfo3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo3.LocationFloat = new DevExpress.Utils.PointFloat(480F, 112.5F);
            this.pageInfo3.Name = "pageInfo3";
            this.pageInfo3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo3.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo3.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo3.StyleName = "PageInfo";
            this.pageInfo3.StylePriority.UseFont = false;
            this.pageInfo3.StylePriority.UseTextAlignment = false;
            this.pageInfo3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line6
            // 
            this.line6.BorderColor = System.Drawing.Color.Gray;
            this.line6.ForeColor = System.Drawing.Color.Gray;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 130.5F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(792.9999F, 9.5F);
            this.line6.StylePriority.UseBorderColor = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // label198
            // 
            this.label198.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label198.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label198.LocationFloat = new DevExpress.Utils.PointFloat(0F, 112.5F);
            this.label198.Name = "label198";
            this.label198.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label198.SizeF = new System.Drawing.SizeF(368.2083F, 18F);
            this.label198.StyleName = "Title";
            this.label198.StylePriority.UseFont = false;
            this.label198.StylePriority.UseForeColor = false;
            this.label198.StylePriority.UseTextAlignment = false;
            this.label198.Text = "Tesorería - Acumulado Movimientos";
            this.label198.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // chart2
            // 
            this.chart2.BorderColor = System.Drawing.Color.Black;
            this.chart2.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart2.DataAdapter = this.spDineroAcumTableAdapter;
            this.chart2.DataMember = "spDineroAcum";
            this.chart2.DataSource = this.dsDatos_1;
            xYDiagram2.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram2.AxisX.Title.Text = "Periodos";
            xYDiagram2.AxisX.Title.Visible = true;
            xYDiagram2.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram2.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram2.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram2.AxisY.VisibleInPanesSerializable = "-1";
            this.chart2.Diagram = xYDiagram2;
            this.chart2.IndicatorsPaletteName = "Default";
            this.chart2.LocationFloat = new DevExpress.Utils.PointFloat(0.119551F, 40.58342F);
            this.chart2.Name = "chart2";
            this.chart2.Scripts.OnBeforePrint = "chart2_BeforePrint";
            this.chart2.SeriesDataMember = "CtaDinero";
            this.chart2.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart2.SeriesTemplate.ArgumentDataMember = "Periodo";
            this.chart2.SeriesTemplate.ArgumentScaleType = DevExpress.XtraCharts.ScaleType.Numerical;
            pointSeriesLabel2.LineVisible = true;
            pointSeriesLabel2.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart2.SeriesTemplate.Label = pointSeriesLabel2;
            pointOptions2.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart2.SeriesTemplate.PointOptions = pointOptions2;
            this.chart2.SeriesTemplate.SeriesPointsSorting = DevExpress.XtraCharts.SortingMode.Ascending;
            this.chart2.SeriesTemplate.ValueDataMembersSerializable = "SaldoFinalMC";
            this.chart2.SeriesTemplate.View = lineSeriesView2;
            this.chart2.SizeF = new System.Drawing.SizeF(789.8804F, 200F);
            this.chart2.Tag = "EXEC spDineroAcum [EstacionTrabajo]";
            // 
            // label31
            // 
            this.label31.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.ContMoneda")});
            this.label31.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(110.3501F, 10.00001F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseTextAlignment = false;
            this.label31.Text = "label31";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label22
            // 
            this.label22.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.CargosMC")});
            this.label22.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(219F, 10.08333F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.SizeF = new System.Drawing.SizeF(102F, 18.00003F);
            this.label22.StyleName = "FieldCaption";
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:$#,#.00}";
            summary3.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label22.Summary = summary3;
            this.label22.Text = "label22";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label23
            // 
            this.label23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.AbonosMC")});
            this.label23.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(321F, 10.08339F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(100F, 18.00003F);
            this.label23.StyleName = "FieldCaption";
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:$#,#.00}";
            summary4.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label23.Summary = summary4;
            this.label23.Text = "label23";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label24
            // 
            this.label24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.SaldoFinalMC", "{0:$#,#.00}")});
            this.label24.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label24.LocationFloat = new DevExpress.Utils.PointFloat(421F, 10.08333F);
            this.label24.Name = "label24";
            this.label24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label24.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label24.StyleName = "FieldCaption";
            this.label24.StylePriority.UseFont = false;
            this.label24.StylePriority.UseTextAlignment = false;
            this.label24.Text = "label24";
            this.label24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label25
            // 
            this.label25.LocationFloat = new DevExpress.Utils.PointFloat(5.999994F, 10.08336F);
            this.label25.Name = "label25";
            this.label25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label25.SizeF = new System.Drawing.SizeF(104.3501F, 18F);
            this.label25.StyleName = "FieldCaption";
            this.label25.Text = "Gran Total";
            // 
            // label9
            // 
            this.label9.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.CtaDinero")});
            this.label9.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(5.999994F, 9.999974F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseTextAlignment = false;
            this.label9.Text = "label9";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label30
            // 
            this.label30.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAcum.Descripcion")});
            this.label30.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(111.2655F, 9.999974F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(287.5F, 18F);
            this.label30.StylePriority.UseFont = false;
            this.label30.StylePriority.UseTextAlignment = false;
            this.label30.Text = "label30";
            this.label30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line9
            // 
            this.line9.LocationFloat = new DevExpress.Utils.PointFloat(110F, 43.12496F);
            this.line9.Name = "line9";
            this.line9.SizeF = new System.Drawing.SizeF(684F, 2F);
            // 
            // label10
            // 
            this.label10.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(671.5654F, 45.12494F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label10.StyleName = "FieldCaption";
            this.label10.StylePriority.UseFont = false;
            this.label10.StylePriority.UseTextAlignment = false;
            this.label10.Text = "Abonos Acumulados";
            this.label10.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line8
            // 
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(110F, 63.1251F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(684F, 4.916641F);
            // 
            // label21
            // 
            this.label21.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(546.5654F, 45.12494F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label21.StyleName = "FieldCaption";
            this.label21.StylePriority.UseFont = false;
            this.label21.StylePriority.UseTextAlignment = false;
            this.label21.Text = "Cargos Acumulados";
            this.label21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label28
            // 
            this.label28.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label28.LocationFloat = new DevExpress.Utils.PointFloat(221.5653F, 45.12494F);
            this.label28.Name = "label28";
            this.label28.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label28.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label28.StyleName = "FieldCaption";
            this.label28.StylePriority.UseFont = false;
            this.label28.StylePriority.UseTextAlignment = false;
            this.label28.Text = "Cargos";
            this.label28.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label29
            // 
            this.label29.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(110.9154F, 45.12494F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(103.4347F, 18F);
            this.label29.StyleName = "FieldCaption";
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseTextAlignment = false;
            this.label29.Text = "Periodo";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label26
            // 
            this.label26.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label26.LocationFloat = new DevExpress.Utils.PointFloat(421.5653F, 45.12494F);
            this.label26.Name = "label26";
            this.label26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label26.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label26.StyleName = "FieldCaption";
            this.label26.StylePriority.UseFont = false;
            this.label26.StylePriority.UseTextAlignment = false;
            this.label26.Text = "Saldo Final";
            this.label26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label27
            // 
            this.label27.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label27.LocationFloat = new DevExpress.Utils.PointFloat(321.5653F, 45.12494F);
            this.label27.Name = "label27";
            this.label27.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label27.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label27.StyleName = "FieldCaption";
            this.label27.StylePriority.UseFont = false;
            this.label27.StylePriority.UseTextAlignment = false;
            this.label27.Text = "Abonos";
            this.label27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // dsDatos
            // 
            this.dsDatos.DataSetName = "dsDatosDataSet";
            this.dsDatos.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Tahoma", 24F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Teal;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Black;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Arial", 9F);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Arial", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // FiltroCuentas
            // 
            this.FiltroCuentas.DataMember = "spDineroAcum";
            this.FiltroCuentas.DataSource = this.dsDatos;
            this.FiltroCuentas.Expression = "Concat(\'De la cuenta \',[FiltroCtaDineroD],\' a la cuenta \',[FiltroCtaDineroA])";
            this.FiltroCuentas.Name = "FiltroCuentas";
            // 
            // FiltroEmpresas
            // 
            this.FiltroEmpresas.DataMember = "spDineroAcum";
            this.FiltroEmpresas.DataSource = this.dsDatos;
            this.FiltroEmpresas.Expression = "Concat(\'Empresa: \',[EmpresaNombre])";
            this.FiltroEmpresas.Name = "FiltroEmpresas";
            // 
            // FiltroEjercicios
            // 
            this.FiltroEjercicios.DataMember = "spDineroAcum";
            this.FiltroEjercicios.DataSource = this.dsDatos;
            this.FiltroEjercicios.Expression = "Concat(\'Ejercicio: \',[FiltroEjercicio])";
            this.FiltroEjercicios.Name = "FiltroEjercicios";
            // 
            // FiltroMonedas
            // 
            this.FiltroMonedas.DataMember = "spDineroAcum";
            this.FiltroMonedas.DataSource = this.dsDatos;
            this.FiltroMonedas.Expression = "Concat(\'Moneda: \',[FiltroMoneda])";
            this.FiltroMonedas.Name = "FiltroMonedas";
            // 
            // sqlDataAdapter1
            // 
            this.sqlDataAdapter1.SelectCommand = this.sqlCommand2;
            this.sqlDataAdapter1.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "spDineroAcum", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand2
            // 
            this.sqlCommand2.CommandText = "EXEC SPDINEROACUM 1";
            this.sqlCommand2.Connection = this.sqlConnection2;
            // 
            // sqlConnection2
            // 
            this.sqlConnection2.ConnectionString = "Data Source=ABRAHAMROMANO;Initial Catalog=V4500;User ID=SA;";
            this.sqlConnection2.FireInfoMessageEventOnUserErrors = false;
            // 
            // InformeDineroAcum
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.pageHeaderBand1,
                        this.groupHeaderBand1,
                        this.groupFooterBand1,
                        this.pageFooterBand1,
                        this.reportHeaderBand1,
                        this.reportFooterBand1,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.GroupHeader1});
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.FiltroCuentas,
                        this.FiltroEmpresas,
                        this.FiltroEjercicios,
                        this.FiltroMonedas});
            this.DataAdapter = this.spDineroAcumTableAdapter;
            this.DataMember = "spDineroAcum";
            this.DataSource = this.dsDatos;
            this.FilterString = "[Grafica] = 1";
            this.Margins = new System.Drawing.Printing.Margins(21, 29, 12, 25);
            this.Name = "InformeDineroAcum";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "EXEC spDineroAcum [EstacionTrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatos_1DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatos_1DataSet : global::System.Data.DataSet {
        private spDineroAcumDataTable tablespDineroAcum;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatos_1DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatos_1DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spDineroAcum"] != null)) {
                    base.Tables.Add(new spDineroAcumDataTable(ds.Tables["spDineroAcum"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spDineroAcumDataTable spDineroAcum {
            get {
                return this.tablespDineroAcum;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatos_1DataSet cln = ((dsDatos_1DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spDineroAcum"] != null)) {
                    base.Tables.Add(new spDineroAcumDataTable(ds.Tables["spDineroAcum"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablespDineroAcum = ((spDineroAcumDataTable)(base.Tables["spDineroAcum"]));
            if ((initTable == true)) {
                if ((this.tablespDineroAcum != null)) {
                    this.tablespDineroAcum.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatos_1DataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespDineroAcum = new spDineroAcumDataTable();
            base.Tables.Add(this.tablespDineroAcum);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespDineroAcum() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatos_1DataSet ds = new dsDatos_1DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void spDineroAcumRowChangeEventHandler(object sender, spDineroAcumRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spDineroAcumDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnAcumMoneda;
            private global::System.Data.DataColumn columnCtaDinero;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnEjercicio;
            private global::System.Data.DataColumn columnPeriodo;
            private global::System.Data.DataColumn columnPeriodoNombre;
            private global::System.Data.DataColumn columnCargos;
            private global::System.Data.DataColumn columnAbonos;
            private global::System.Data.DataColumn columnSaldoFinal;
            private global::System.Data.DataColumn columnCargosAcumulados;
            private global::System.Data.DataColumn columnAbonosAcumulados;
            private global::System.Data.DataColumn columnCargosMC;
            private global::System.Data.DataColumn columnAbonosMC;
            private global::System.Data.DataColumn columnSaldoFinalMC;
            private global::System.Data.DataColumn columnCargosAcumuladosMC;
            private global::System.Data.DataColumn columnAbonosAcumuladosMC;
            private global::System.Data.DataColumn columnContMoneda;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnFiltroCtaDineroD;
            private global::System.Data.DataColumn columnFiltroCtaDineroA;
            private global::System.Data.DataColumn columnFiltroMoneda;
            private global::System.Data.DataColumn columnFiltroEjercicio;
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumDataTable() {
                this.TableName = "spDineroAcum";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAcumDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spDineroAcumDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcumMonedaColumn {
                get {
                    return this.columnAcumMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CtaDineroColumn {
                get {
                    return this.columnCtaDinero;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EjercicioColumn {
                get {
                    return this.columnEjercicio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoColumn {
                get {
                    return this.columnPeriodo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoNombreColumn {
                get {
                    return this.columnPeriodoNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosColumn {
                get {
                    return this.columnCargos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosColumn {
                get {
                    return this.columnAbonos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoFinalColumn {
                get {
                    return this.columnSaldoFinal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosAcumuladosColumn {
                get {
                    return this.columnCargosAcumulados;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosAcumuladosColumn {
                get {
                    return this.columnAbonosAcumulados;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosMCColumn {
                get {
                    return this.columnCargosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosMCColumn {
                get {
                    return this.columnAbonosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoFinalMCColumn {
                get {
                    return this.columnSaldoFinalMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosAcumuladosMCColumn {
                get {
                    return this.columnCargosAcumuladosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosAcumuladosMCColumn {
                get {
                    return this.columnAbonosAcumuladosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContMonedaColumn {
                get {
                    return this.columnContMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroCtaDineroDColumn {
                get {
                    return this.columnFiltroCtaDineroD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroCtaDineroAColumn {
                get {
                    return this.columnFiltroCtaDineroA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroMonedaColumn {
                get {
                    return this.columnFiltroMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroEjercicioColumn {
                get {
                    return this.columnFiltroEjercicio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumRow this[int index] {
                get {
                    return ((spDineroAcumRow)(this.Rows[index]));
                }
            }
            public event spDineroAcumRowChangeEventHandler spDineroAcumRowChanging;
            public event spDineroAcumRowChangeEventHandler spDineroAcumRowChanged;
            public event spDineroAcumRowChangeEventHandler spDineroAcumRowDeleting;
            public event spDineroAcumRowChangeEventHandler spDineroAcumRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspDineroAcumRow(spDineroAcumRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumRow AddspDineroAcumRow(
                        string AcumMoneda, 
                        string CtaDinero, 
                        string Descripcion, 
                        int Ejercicio, 
                        int Periodo, 
                        string PeriodoNombre, 
                        double Cargos, 
                        double Abonos, 
                        double SaldoFinal, 
                        double CargosAcumulados, 
                        double AbonosAcumulados, 
                        double CargosMC, 
                        double AbonosMC, 
                        double SaldoFinalMC, 
                        double CargosAcumuladosMC, 
                        double AbonosAcumuladosMC, 
                        string ContMoneda, 
                        int Grafica, 
                        string FiltroCtaDineroD, 
                        string FiltroCtaDineroA, 
                        string FiltroMoneda, 
                        int FiltroEjercicio, 
                        string EmpresaNombre, 
                        bool VerGraficaDetalle) {
                spDineroAcumRow rowspDineroAcumRow = ((spDineroAcumRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AcumMoneda,
                        CtaDinero,
                        Descripcion,
                        Ejercicio,
                        Periodo,
                        PeriodoNombre,
                        Cargos,
                        Abonos,
                        SaldoFinal,
                        CargosAcumulados,
                        AbonosAcumulados,
                        CargosMC,
                        AbonosMC,
                        SaldoFinalMC,
                        CargosAcumuladosMC,
                        AbonosAcumuladosMC,
                        ContMoneda,
                        Grafica,
                        FiltroCtaDineroD,
                        FiltroCtaDineroA,
                        FiltroMoneda,
                        FiltroEjercicio,
                        EmpresaNombre,
                        VerGraficaDetalle};
                rowspDineroAcumRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspDineroAcumRow);
                return rowspDineroAcumRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spDineroAcumDataTable cln = ((spDineroAcumDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spDineroAcumDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAcumMoneda = base.Columns["AcumMoneda"];
                this.columnCtaDinero = base.Columns["CtaDinero"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnEjercicio = base.Columns["Ejercicio"];
                this.columnPeriodo = base.Columns["Periodo"];
                this.columnPeriodoNombre = base.Columns["PeriodoNombre"];
                this.columnCargos = base.Columns["Cargos"];
                this.columnAbonos = base.Columns["Abonos"];
                this.columnSaldoFinal = base.Columns["SaldoFinal"];
                this.columnCargosAcumulados = base.Columns["CargosAcumulados"];
                this.columnAbonosAcumulados = base.Columns["AbonosAcumulados"];
                this.columnCargosMC = base.Columns["CargosMC"];
                this.columnAbonosMC = base.Columns["AbonosMC"];
                this.columnSaldoFinalMC = base.Columns["SaldoFinalMC"];
                this.columnCargosAcumuladosMC = base.Columns["CargosAcumuladosMC"];
                this.columnAbonosAcumuladosMC = base.Columns["AbonosAcumuladosMC"];
                this.columnContMoneda = base.Columns["ContMoneda"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnFiltroCtaDineroD = base.Columns["FiltroCtaDineroD"];
                this.columnFiltroCtaDineroA = base.Columns["FiltroCtaDineroA"];
                this.columnFiltroMoneda = base.Columns["FiltroMoneda"];
                this.columnFiltroEjercicio = base.Columns["FiltroEjercicio"];
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAcumMoneda = new global::System.Data.DataColumn("AcumMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcumMoneda);
                this.columnCtaDinero = new global::System.Data.DataColumn("CtaDinero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtaDinero);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnEjercicio = new global::System.Data.DataColumn("Ejercicio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio);
                this.columnPeriodo = new global::System.Data.DataColumn("Periodo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodo);
                this.columnPeriodoNombre = new global::System.Data.DataColumn("PeriodoNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodoNombre);
                this.columnCargos = new global::System.Data.DataColumn("Cargos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargos);
                this.columnAbonos = new global::System.Data.DataColumn("Abonos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonos);
                this.columnSaldoFinal = new global::System.Data.DataColumn("SaldoFinal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoFinal);
                this.columnCargosAcumulados = new global::System.Data.DataColumn("CargosAcumulados", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosAcumulados);
                this.columnAbonosAcumulados = new global::System.Data.DataColumn("AbonosAcumulados", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosAcumulados);
                this.columnCargosMC = new global::System.Data.DataColumn("CargosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosMC);
                this.columnAbonosMC = new global::System.Data.DataColumn("AbonosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosMC);
                this.columnSaldoFinalMC = new global::System.Data.DataColumn("SaldoFinalMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoFinalMC);
                this.columnCargosAcumuladosMC = new global::System.Data.DataColumn("CargosAcumuladosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosAcumuladosMC);
                this.columnAbonosAcumuladosMC = new global::System.Data.DataColumn("AbonosAcumuladosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosAcumuladosMC);
                this.columnContMoneda = new global::System.Data.DataColumn("ContMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContMoneda);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnFiltroCtaDineroD = new global::System.Data.DataColumn("FiltroCtaDineroD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroCtaDineroD);
                this.columnFiltroCtaDineroA = new global::System.Data.DataColumn("FiltroCtaDineroA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroCtaDineroA);
                this.columnFiltroMoneda = new global::System.Data.DataColumn("FiltroMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroMoneda);
                this.columnFiltroEjercicio = new global::System.Data.DataColumn("FiltroEjercicio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroEjercicio);
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumRow NewspDineroAcumRow() {
                return ((spDineroAcumRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spDineroAcumRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spDineroAcumRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spDineroAcumRowChanged != null)) {
                    this.spDineroAcumRowChanged(this, new spDineroAcumRowChangeEvent(((spDineroAcumRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spDineroAcumRowChanging != null)) {
                    this.spDineroAcumRowChanging(this, new spDineroAcumRowChangeEvent(((spDineroAcumRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spDineroAcumRowDeleted != null)) {
                    this.spDineroAcumRowDeleted(this, new spDineroAcumRowChangeEvent(((spDineroAcumRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spDineroAcumRowDeleting != null)) {
                    this.spDineroAcumRowDeleting(this, new spDineroAcumRowChangeEvent(((spDineroAcumRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespDineroAcumRow(spDineroAcumRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatos_1DataSet ds = new dsDatos_1DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spDineroAcumDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spDineroAcumRow : global::System.Data.DataRow {
            private spDineroAcumDataTable tablespDineroAcum;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAcumRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespDineroAcum = ((spDineroAcumDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcumMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.AcumMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AcumMoneda\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.AcumMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CtaDinero {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.CtaDineroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CtaDinero\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.CtaDineroColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAcum.EjercicioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.EjercicioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Periodo {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAcum.PeriodoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Periodo\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.PeriodoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PeriodoNombre {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.PeriodoNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PeriodoNombre\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.PeriodoNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cargos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.CargosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cargos\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.CargosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Abonos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.AbonosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Abonos\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.AbonosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoFinal {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.SaldoFinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoFinal\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.SaldoFinalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosAcumulados {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.CargosAcumuladosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosAcumulados\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.CargosAcumuladosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosAcumulados {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.AbonosAcumuladosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosAcumulados\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.AbonosAcumuladosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.CargosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosMC\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.CargosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.AbonosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosMC\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.AbonosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoFinalMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.SaldoFinalMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoFinalMC\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.SaldoFinalMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosAcumuladosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.CargosAcumuladosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosAcumuladosMC\' de la tabla \'spDineroAcum\' es DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.CargosAcumuladosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosAcumuladosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.AbonosAcumuladosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosAcumuladosMC\' de la tabla \'spDineroAcum\' es DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.AbonosAcumuladosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.ContMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ContMoneda\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.ContMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAcum.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroCtaDineroD {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.FiltroCtaDineroDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroCtaDineroD\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.FiltroCtaDineroDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroCtaDineroA {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.FiltroCtaDineroAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroCtaDineroA\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.FiltroCtaDineroAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.FiltroMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroMoneda\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.FiltroMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FiltroEjercicio {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAcum.FiltroEjercicioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroEjercicio\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.FiltroEjercicioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.tablespDineroAcum.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcumMonedaNull() {
                return this.IsNull(this.tablespDineroAcum.AcumMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcumMonedaNull() {
                this[this.tablespDineroAcum.AcumMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtaDineroNull() {
                return this.IsNull(this.tablespDineroAcum.CtaDineroColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtaDineroNull() {
                this[this.tablespDineroAcum.CtaDineroColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablespDineroAcum.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablespDineroAcum.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicioNull() {
                return this.IsNull(this.tablespDineroAcum.EjercicioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicioNull() {
                this[this.tablespDineroAcum.EjercicioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoNull() {
                return this.IsNull(this.tablespDineroAcum.PeriodoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoNull() {
                this[this.tablespDineroAcum.PeriodoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoNombreNull() {
                return this.IsNull(this.tablespDineroAcum.PeriodoNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoNombreNull() {
                this[this.tablespDineroAcum.PeriodoNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosNull() {
                return this.IsNull(this.tablespDineroAcum.CargosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosNull() {
                this[this.tablespDineroAcum.CargosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosNull() {
                return this.IsNull(this.tablespDineroAcum.AbonosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosNull() {
                this[this.tablespDineroAcum.AbonosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoFinalNull() {
                return this.IsNull(this.tablespDineroAcum.SaldoFinalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoFinalNull() {
                this[this.tablespDineroAcum.SaldoFinalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosAcumuladosNull() {
                return this.IsNull(this.tablespDineroAcum.CargosAcumuladosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosAcumuladosNull() {
                this[this.tablespDineroAcum.CargosAcumuladosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosAcumuladosNull() {
                return this.IsNull(this.tablespDineroAcum.AbonosAcumuladosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosAcumuladosNull() {
                this[this.tablespDineroAcum.AbonosAcumuladosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosMCNull() {
                return this.IsNull(this.tablespDineroAcum.CargosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosMCNull() {
                this[this.tablespDineroAcum.CargosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosMCNull() {
                return this.IsNull(this.tablespDineroAcum.AbonosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosMCNull() {
                this[this.tablespDineroAcum.AbonosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoFinalMCNull() {
                return this.IsNull(this.tablespDineroAcum.SaldoFinalMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoFinalMCNull() {
                this[this.tablespDineroAcum.SaldoFinalMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosAcumuladosMCNull() {
                return this.IsNull(this.tablespDineroAcum.CargosAcumuladosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosAcumuladosMCNull() {
                this[this.tablespDineroAcum.CargosAcumuladosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosAcumuladosMCNull() {
                return this.IsNull(this.tablespDineroAcum.AbonosAcumuladosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosAcumuladosMCNull() {
                this[this.tablespDineroAcum.AbonosAcumuladosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContMonedaNull() {
                return this.IsNull(this.tablespDineroAcum.ContMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContMonedaNull() {
                this[this.tablespDineroAcum.ContMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.tablespDineroAcum.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.tablespDineroAcum.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroCtaDineroDNull() {
                return this.IsNull(this.tablespDineroAcum.FiltroCtaDineroDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroCtaDineroDNull() {
                this[this.tablespDineroAcum.FiltroCtaDineroDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroCtaDineroANull() {
                return this.IsNull(this.tablespDineroAcum.FiltroCtaDineroAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroCtaDineroANull() {
                this[this.tablespDineroAcum.FiltroCtaDineroAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroMonedaNull() {
                return this.IsNull(this.tablespDineroAcum.FiltroMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroMonedaNull() {
                this[this.tablespDineroAcum.FiltroMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroEjercicioNull() {
                return this.IsNull(this.tablespDineroAcum.FiltroEjercicioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroEjercicioNull() {
                this[this.tablespDineroAcum.FiltroEjercicioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.tablespDineroAcum.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.tablespDineroAcum.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.tablespDineroAcum.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.tablespDineroAcum.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spDineroAcumRowChangeEvent : global::System.EventArgs {
            private spDineroAcumRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumRowChangeEvent(spDineroAcumRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatosDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatosDataSet : global::System.Data.DataSet {
        private spDineroAcumDataTable tablespDineroAcum;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatosDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatosDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spDineroAcum"] != null)) {
                    base.Tables.Add(new spDineroAcumDataTable(ds.Tables["spDineroAcum"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spDineroAcumDataTable spDineroAcum {
            get {
                return this.tablespDineroAcum;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatosDataSet cln = ((dsDatosDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spDineroAcum"] != null)) {
                    base.Tables.Add(new spDineroAcumDataTable(ds.Tables["spDineroAcum"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablespDineroAcum = ((spDineroAcumDataTable)(base.Tables["spDineroAcum"]));
            if ((initTable == true)) {
                if ((this.tablespDineroAcum != null)) {
                    this.tablespDineroAcum.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatosDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespDineroAcum = new spDineroAcumDataTable();
            base.Tables.Add(this.tablespDineroAcum);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespDineroAcum() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatosDataSet ds = new dsDatosDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void spDineroAcumRowChangeEventHandler(object sender, spDineroAcumRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spDineroAcumDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnAcumMoneda;
            private global::System.Data.DataColumn columnCtaDinero;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnEjercicio;
            private global::System.Data.DataColumn columnPeriodo;
            private global::System.Data.DataColumn columnPeriodoNombre;
            private global::System.Data.DataColumn columnCargos;
            private global::System.Data.DataColumn columnAbonos;
            private global::System.Data.DataColumn columnSaldoFinal;
            private global::System.Data.DataColumn columnCargosAcumulados;
            private global::System.Data.DataColumn columnAbonosAcumulados;
            private global::System.Data.DataColumn columnCargosMC;
            private global::System.Data.DataColumn columnAbonosMC;
            private global::System.Data.DataColumn columnSaldoFinalMC;
            private global::System.Data.DataColumn columnCargosAcumuladosMC;
            private global::System.Data.DataColumn columnAbonosAcumuladosMC;
            private global::System.Data.DataColumn columnContMoneda;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnFiltroCtaDineroD;
            private global::System.Data.DataColumn columnFiltroCtaDineroA;
            private global::System.Data.DataColumn columnFiltroMoneda;
            private global::System.Data.DataColumn columnFiltroEjercicio;
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumDataTable() {
                this.TableName = "spDineroAcum";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAcumDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spDineroAcumDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcumMonedaColumn {
                get {
                    return this.columnAcumMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CtaDineroColumn {
                get {
                    return this.columnCtaDinero;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EjercicioColumn {
                get {
                    return this.columnEjercicio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoColumn {
                get {
                    return this.columnPeriodo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoNombreColumn {
                get {
                    return this.columnPeriodoNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosColumn {
                get {
                    return this.columnCargos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosColumn {
                get {
                    return this.columnAbonos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoFinalColumn {
                get {
                    return this.columnSaldoFinal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosAcumuladosColumn {
                get {
                    return this.columnCargosAcumulados;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosAcumuladosColumn {
                get {
                    return this.columnAbonosAcumulados;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosMCColumn {
                get {
                    return this.columnCargosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosMCColumn {
                get {
                    return this.columnAbonosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoFinalMCColumn {
                get {
                    return this.columnSaldoFinalMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosAcumuladosMCColumn {
                get {
                    return this.columnCargosAcumuladosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosAcumuladosMCColumn {
                get {
                    return this.columnAbonosAcumuladosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContMonedaColumn {
                get {
                    return this.columnContMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroCtaDineroDColumn {
                get {
                    return this.columnFiltroCtaDineroD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroCtaDineroAColumn {
                get {
                    return this.columnFiltroCtaDineroA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroMonedaColumn {
                get {
                    return this.columnFiltroMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroEjercicioColumn {
                get {
                    return this.columnFiltroEjercicio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumRow this[int index] {
                get {
                    return ((spDineroAcumRow)(this.Rows[index]));
                }
            }
            public event spDineroAcumRowChangeEventHandler spDineroAcumRowChanging;
            public event spDineroAcumRowChangeEventHandler spDineroAcumRowChanged;
            public event spDineroAcumRowChangeEventHandler spDineroAcumRowDeleting;
            public event spDineroAcumRowChangeEventHandler spDineroAcumRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspDineroAcumRow(spDineroAcumRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumRow AddspDineroAcumRow(
                        string AcumMoneda, 
                        string CtaDinero, 
                        string Descripcion, 
                        int Ejercicio, 
                        int Periodo, 
                        string PeriodoNombre, 
                        double Cargos, 
                        double Abonos, 
                        double SaldoFinal, 
                        double CargosAcumulados, 
                        double AbonosAcumulados, 
                        double CargosMC, 
                        double AbonosMC, 
                        double SaldoFinalMC, 
                        double CargosAcumuladosMC, 
                        double AbonosAcumuladosMC, 
                        string ContMoneda, 
                        int Grafica, 
                        string FiltroCtaDineroD, 
                        string FiltroCtaDineroA, 
                        string FiltroMoneda, 
                        int FiltroEjercicio, 
                        string EmpresaNombre, 
                        bool VerGraficaDetalle) {
                spDineroAcumRow rowspDineroAcumRow = ((spDineroAcumRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AcumMoneda,
                        CtaDinero,
                        Descripcion,
                        Ejercicio,
                        Periodo,
                        PeriodoNombre,
                        Cargos,
                        Abonos,
                        SaldoFinal,
                        CargosAcumulados,
                        AbonosAcumulados,
                        CargosMC,
                        AbonosMC,
                        SaldoFinalMC,
                        CargosAcumuladosMC,
                        AbonosAcumuladosMC,
                        ContMoneda,
                        Grafica,
                        FiltroCtaDineroD,
                        FiltroCtaDineroA,
                        FiltroMoneda,
                        FiltroEjercicio,
                        EmpresaNombre,
                        VerGraficaDetalle};
                rowspDineroAcumRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspDineroAcumRow);
                return rowspDineroAcumRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spDineroAcumDataTable cln = ((spDineroAcumDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spDineroAcumDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAcumMoneda = base.Columns["AcumMoneda"];
                this.columnCtaDinero = base.Columns["CtaDinero"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnEjercicio = base.Columns["Ejercicio"];
                this.columnPeriodo = base.Columns["Periodo"];
                this.columnPeriodoNombre = base.Columns["PeriodoNombre"];
                this.columnCargos = base.Columns["Cargos"];
                this.columnAbonos = base.Columns["Abonos"];
                this.columnSaldoFinal = base.Columns["SaldoFinal"];
                this.columnCargosAcumulados = base.Columns["CargosAcumulados"];
                this.columnAbonosAcumulados = base.Columns["AbonosAcumulados"];
                this.columnCargosMC = base.Columns["CargosMC"];
                this.columnAbonosMC = base.Columns["AbonosMC"];
                this.columnSaldoFinalMC = base.Columns["SaldoFinalMC"];
                this.columnCargosAcumuladosMC = base.Columns["CargosAcumuladosMC"];
                this.columnAbonosAcumuladosMC = base.Columns["AbonosAcumuladosMC"];
                this.columnContMoneda = base.Columns["ContMoneda"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnFiltroCtaDineroD = base.Columns["FiltroCtaDineroD"];
                this.columnFiltroCtaDineroA = base.Columns["FiltroCtaDineroA"];
                this.columnFiltroMoneda = base.Columns["FiltroMoneda"];
                this.columnFiltroEjercicio = base.Columns["FiltroEjercicio"];
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAcumMoneda = new global::System.Data.DataColumn("AcumMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcumMoneda);
                this.columnCtaDinero = new global::System.Data.DataColumn("CtaDinero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtaDinero);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnEjercicio = new global::System.Data.DataColumn("Ejercicio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio);
                this.columnPeriodo = new global::System.Data.DataColumn("Periodo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodo);
                this.columnPeriodoNombre = new global::System.Data.DataColumn("PeriodoNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodoNombre);
                this.columnCargos = new global::System.Data.DataColumn("Cargos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargos);
                this.columnAbonos = new global::System.Data.DataColumn("Abonos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonos);
                this.columnSaldoFinal = new global::System.Data.DataColumn("SaldoFinal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoFinal);
                this.columnCargosAcumulados = new global::System.Data.DataColumn("CargosAcumulados", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosAcumulados);
                this.columnAbonosAcumulados = new global::System.Data.DataColumn("AbonosAcumulados", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosAcumulados);
                this.columnCargosMC = new global::System.Data.DataColumn("CargosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosMC);
                this.columnAbonosMC = new global::System.Data.DataColumn("AbonosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosMC);
                this.columnSaldoFinalMC = new global::System.Data.DataColumn("SaldoFinalMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoFinalMC);
                this.columnCargosAcumuladosMC = new global::System.Data.DataColumn("CargosAcumuladosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosAcumuladosMC);
                this.columnAbonosAcumuladosMC = new global::System.Data.DataColumn("AbonosAcumuladosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosAcumuladosMC);
                this.columnContMoneda = new global::System.Data.DataColumn("ContMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContMoneda);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnFiltroCtaDineroD = new global::System.Data.DataColumn("FiltroCtaDineroD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroCtaDineroD);
                this.columnFiltroCtaDineroA = new global::System.Data.DataColumn("FiltroCtaDineroA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroCtaDineroA);
                this.columnFiltroMoneda = new global::System.Data.DataColumn("FiltroMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroMoneda);
                this.columnFiltroEjercicio = new global::System.Data.DataColumn("FiltroEjercicio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroEjercicio);
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumRow NewspDineroAcumRow() {
                return ((spDineroAcumRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spDineroAcumRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spDineroAcumRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spDineroAcumRowChanged != null)) {
                    this.spDineroAcumRowChanged(this, new spDineroAcumRowChangeEvent(((spDineroAcumRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spDineroAcumRowChanging != null)) {
                    this.spDineroAcumRowChanging(this, new spDineroAcumRowChangeEvent(((spDineroAcumRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spDineroAcumRowDeleted != null)) {
                    this.spDineroAcumRowDeleted(this, new spDineroAcumRowChangeEvent(((spDineroAcumRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spDineroAcumRowDeleting != null)) {
                    this.spDineroAcumRowDeleting(this, new spDineroAcumRowChangeEvent(((spDineroAcumRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespDineroAcumRow(spDineroAcumRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatosDataSet ds = new dsDatosDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spDineroAcumDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spDineroAcumRow : global::System.Data.DataRow {
            private spDineroAcumDataTable tablespDineroAcum;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAcumRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespDineroAcum = ((spDineroAcumDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcumMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.AcumMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AcumMoneda\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.AcumMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CtaDinero {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.CtaDineroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CtaDinero\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.CtaDineroColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAcum.EjercicioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.EjercicioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Periodo {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAcum.PeriodoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Periodo\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.PeriodoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PeriodoNombre {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.PeriodoNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PeriodoNombre\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.PeriodoNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cargos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.CargosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cargos\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.CargosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Abonos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.AbonosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Abonos\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.AbonosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoFinal {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.SaldoFinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoFinal\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.SaldoFinalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosAcumulados {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.CargosAcumuladosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosAcumulados\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.CargosAcumuladosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosAcumulados {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.AbonosAcumuladosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosAcumulados\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.AbonosAcumuladosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.CargosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosMC\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.CargosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.AbonosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosMC\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.AbonosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoFinalMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.SaldoFinalMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoFinalMC\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.SaldoFinalMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosAcumuladosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.CargosAcumuladosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosAcumuladosMC\' de la tabla \'spDineroAcum\' es DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.CargosAcumuladosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosAcumuladosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAcum.AbonosAcumuladosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosAcumuladosMC\' de la tabla \'spDineroAcum\' es DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.AbonosAcumuladosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.ContMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ContMoneda\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.ContMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAcum.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroCtaDineroD {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.FiltroCtaDineroDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroCtaDineroD\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.FiltroCtaDineroDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroCtaDineroA {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.FiltroCtaDineroAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroCtaDineroA\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.FiltroCtaDineroAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.FiltroMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroMoneda\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.FiltroMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FiltroEjercicio {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAcum.FiltroEjercicioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroEjercicio\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.FiltroEjercicioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAcum.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.tablespDineroAcum.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'spDineroAcum\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAcum.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcumMonedaNull() {
                return this.IsNull(this.tablespDineroAcum.AcumMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcumMonedaNull() {
                this[this.tablespDineroAcum.AcumMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtaDineroNull() {
                return this.IsNull(this.tablespDineroAcum.CtaDineroColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtaDineroNull() {
                this[this.tablespDineroAcum.CtaDineroColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablespDineroAcum.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablespDineroAcum.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicioNull() {
                return this.IsNull(this.tablespDineroAcum.EjercicioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicioNull() {
                this[this.tablespDineroAcum.EjercicioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoNull() {
                return this.IsNull(this.tablespDineroAcum.PeriodoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoNull() {
                this[this.tablespDineroAcum.PeriodoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoNombreNull() {
                return this.IsNull(this.tablespDineroAcum.PeriodoNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoNombreNull() {
                this[this.tablespDineroAcum.PeriodoNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosNull() {
                return this.IsNull(this.tablespDineroAcum.CargosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosNull() {
                this[this.tablespDineroAcum.CargosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosNull() {
                return this.IsNull(this.tablespDineroAcum.AbonosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosNull() {
                this[this.tablespDineroAcum.AbonosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoFinalNull() {
                return this.IsNull(this.tablespDineroAcum.SaldoFinalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoFinalNull() {
                this[this.tablespDineroAcum.SaldoFinalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosAcumuladosNull() {
                return this.IsNull(this.tablespDineroAcum.CargosAcumuladosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosAcumuladosNull() {
                this[this.tablespDineroAcum.CargosAcumuladosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosAcumuladosNull() {
                return this.IsNull(this.tablespDineroAcum.AbonosAcumuladosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosAcumuladosNull() {
                this[this.tablespDineroAcum.AbonosAcumuladosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosMCNull() {
                return this.IsNull(this.tablespDineroAcum.CargosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosMCNull() {
                this[this.tablespDineroAcum.CargosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosMCNull() {
                return this.IsNull(this.tablespDineroAcum.AbonosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosMCNull() {
                this[this.tablespDineroAcum.AbonosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoFinalMCNull() {
                return this.IsNull(this.tablespDineroAcum.SaldoFinalMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoFinalMCNull() {
                this[this.tablespDineroAcum.SaldoFinalMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosAcumuladosMCNull() {
                return this.IsNull(this.tablespDineroAcum.CargosAcumuladosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosAcumuladosMCNull() {
                this[this.tablespDineroAcum.CargosAcumuladosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosAcumuladosMCNull() {
                return this.IsNull(this.tablespDineroAcum.AbonosAcumuladosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosAcumuladosMCNull() {
                this[this.tablespDineroAcum.AbonosAcumuladosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContMonedaNull() {
                return this.IsNull(this.tablespDineroAcum.ContMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContMonedaNull() {
                this[this.tablespDineroAcum.ContMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.tablespDineroAcum.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.tablespDineroAcum.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroCtaDineroDNull() {
                return this.IsNull(this.tablespDineroAcum.FiltroCtaDineroDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroCtaDineroDNull() {
                this[this.tablespDineroAcum.FiltroCtaDineroDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroCtaDineroANull() {
                return this.IsNull(this.tablespDineroAcum.FiltroCtaDineroAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroCtaDineroANull() {
                this[this.tablespDineroAcum.FiltroCtaDineroAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroMonedaNull() {
                return this.IsNull(this.tablespDineroAcum.FiltroMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroMonedaNull() {
                this[this.tablespDineroAcum.FiltroMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroEjercicioNull() {
                return this.IsNull(this.tablespDineroAcum.FiltroEjercicioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroEjercicioNull() {
                this[this.tablespDineroAcum.FiltroEjercicioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.tablespDineroAcum.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.tablespDineroAcum.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.tablespDineroAcum.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.tablespDineroAcum.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spDineroAcumRowChangeEvent : global::System.EventArgs {
            private spDineroAcumRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumRowChangeEvent(spDineroAcumRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAcumRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
