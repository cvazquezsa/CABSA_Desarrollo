/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformeDineroAux : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.GroupHeaderBand groupHeaderBand1;
        private DevExpress.XtraReports.UI.XRChart chart2;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter3;
        private System.Data.SqlClient.SqlCommand sqlCommand1;
        private System.Data.SqlClient.SqlConnection sqlConnection1;
        private XtraReportSerialization.dsDatos_4DataSet dsDatos_4;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private DevExpress.XtraReports.UI.PageFooterBand pageFooterBand1;
        private DevExpress.XtraReports.UI.XRLabel label37;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo4;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo5;
        private DevExpress.XtraReports.UI.ReportHeaderBand reportHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLabel label44;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.XRLabel label41;
        private DevExpress.XtraReports.UI.XRLabel label39;
        private DevExpress.XtraReports.UI.XRLabel label38;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo3;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.GroupFooterBand groupFooterBand2;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRLabel label24;
        private DevExpress.XtraReports.UI.XRLabel label25;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLine line4;
        private DevExpress.XtraReports.UI.ReportFooterBand reportFooterBand1;
        private DevExpress.XtraReports.UI.XRChart chart4;
        private DevExpress.XtraReports.UI.XRChart chart3;
        private DevExpress.XtraReports.UI.XRLabel label36;
        private DevExpress.XtraReports.UI.XRLabel label26;
        private DevExpress.XtraReports.UI.XRLabel label27;
        private DevExpress.XtraReports.UI.XRLabel label28;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.PageHeaderBand PageHeader;
        private DevExpress.XtraReports.UI.XRLabel label34;
        private DevExpress.XtraReports.UI.XRLabel label33;
        private DevExpress.XtraReports.UI.XRLabel label35;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLabel label32;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLine line9;
        private DevExpress.XtraReports.UI.XRLabel label50;
        private DevExpress.XtraReports.UI.XRLabel label51;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private DevExpress.XtraReports.UI.XRLabel label47;
        private DevExpress.XtraReports.UI.XRLabel label48;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLine line2;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter1;
        private System.Data.SqlClient.SqlCommand sqlCommand2;
        private System.Data.SqlClient.SqlConnection sqlConnection2;
        private XtraReportSerialization.dsDatos_1DataSet dsDatos_1;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField FiltroCuentas;
        private XtraReportSerialization.dsDatosDataSet dsDatos;
        private DevExpress.XtraReports.UI.CalculatedField FiltroEmpresas;
        private DevExpress.XtraReports.UI.CalculatedField FiltroFechas;
        private DevExpress.XtraReports.UI.CalculatedField FiltroFechaD2;
        private DevExpress.XtraReports.UI.CalculatedField FiltroFechaA2;
        private DevExpress.XtraReports.UI.CalculatedField FiltroMonedas;
        private DevExpress.XtraReports.UI.CalculatedField FiltroMovs;
        private DevExpress.XtraReports.UI.CalculatedField FiltroUsos;
        private DevExpress.XtraReports.UI.CalculatedField FiltroNiveles;
        private DevExpress.XtraReports.UI.CalculatedField FiltroGrafica;
        private DevExpress.XtraReports.UI.CalculatedField Cancelacion;
        private DevExpress.XtraReports.UI.CalculatedField SaldoMCCalc;
        private DevExpress.XtraReports.UI.CalculatedField SaldoMoneda;
        private System.Data.SqlClient.SqlDataAdapter spDineroAuxTableAdapter;
        private System.Data.SqlClient.SqlCommand sqlCommand3;
        private System.Data.SqlClient.SqlConnection sqlConnection3;
        private XtraReportSerialization.dsDatos_2DataSet dsDatos_2;
        private DevExpress.XtraReports.UI.GroupFooterBand groupFooterBand1;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter2;
        private System.Data.SqlClient.SqlCommand sqlCommand4;
        private System.Data.SqlClient.SqlConnection sqlConnection4;
        private XtraReportSerialization.dsDatos_3DataSet dsDatos_3;
        private System.Data.SqlClient.SqlDataAdapter TableTableAdapter;
        private System.Data.SqlClient.SqlCommand sqlCommand5;
        private System.Data.SqlClient.SqlConnection sqlConnection5;
        private System.Resources.ResourceManager _resources;
        public InformeDineroAux() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAACAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsHnWR03AAAAACsAAAB+AQAAJ" +
                        "iQAdABoAGkAcwAuAFMAYwByAGkAcAB0AHMAUwBvAHUAcgBjAGUAAAAAACJwAGkAYwB0AHUAcgBlAEIAb" +
                        "wB4ADIALgBJAG0AYQBnAGUAdyIAAAH0RA0KUHJpdmF0ZSBTdWIgY2hhcnQxX0JlZm9yZVByaW50KEJ5V" +
                        "mFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpb" +
                        "nRFdmVudEFyZ3MpDQogICdTaSBlbCB2YWxvciBkZWwgY2FtcG8gQ2xpZW50ZSBlcyBudWxsIG5vIHNlI" +
                        "G11ZXN0cmEgIA0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkN0YURpbmVybyIpIElTIE5PVEhJT" +
                        "kcNCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0RlZ" +
                        "mluZSB1bmEgRnVlbnRlIHBhcmEgZWwgdMOtdHVsbyBkZSBsYSBncsOhZmljYQ0KICBEaW0gRnVlbnRlV" +
                        "Gl0dWxvIEFzIE5ldyBGb250KCJBcmlhbCIsOCxGb250U3R5bGUuQm9sZCkNCiAgJ0dlbmVyYSB1biBvY" +
                        "mpldG8gcXVlIHJlcHJlc2VudGEgYSBsYSBncsOhZmljYQ0KICBEaW0gR3JhZmljYTEgQXMgWFJDaGFyd" +
                        "CA9IENUeXBlKHNlbmRlcixYUkNoYXJ0KQ0KDQogJ1NpIGVsIHZhbG9yIGRlbCBjYW1wbyBWZXJHcmFma" +
                        "WNhRGV0YWxsZSBlcyAwIG5vIHNlIG11ZXN0cmEgDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiV" +
                        "mVyR3JhZmljYURldGFsbGUiKSA9IDAgVEhFTg0KICAgIEdyYWZpY2ExLnZpc2libGUgPSBGYWxzZQ0KI" +
                        "CAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0d1YXJkYSBlb" +
                        "CB2YWxvciBkZSBsYSBjb2x1bW5hIGN1ZW50YSB5IGRlIGxhIG1vbmVkYQ0KICBEaW0gQ3VlbnRhIEFzI" +
                        "FN0cmluZyA9IEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiQ3RhRGluZXJvIikuVG9TdHJpbmcudHJpbSgpD" +
                        "QogIERpbSBNb25lZGEgQXMgU3RyaW5nID0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJNb25lZGEiKS5Ub" +
                        "1N0cmluZy50cmltKCkNCg0KICAnR2VuZXJhIHVuIG9iamV0byBxdWUgcmVwcmVzZW50YSBhIGxhIHBsY" +
                        "W50aWxsYSBkZSBzZXJpZXMgYXV0b2NyZWFkYXMNCiAgRGltIFBsYW50aWxsYSBBcyBTZXJpZXNCYXNlI" +
                        "D0gR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUNCg0KICAnR2VuZXJhIHVuIG9iamV0byB0aXBvIFTDrXR1b" +
                        "G8NCiAgRGltIFRpdHVsbzEgQXMgTmV3IENoYXJ0VGl0bGUoKQ0KICBUaXR1bG8xLlRleHQgPSAiQ2FyZ" +
                        "29zIiArICIgLSAiICsgTW9uZWRhDQogIFRpdHVsbzEuRm9udCA9IEZ1ZW50ZVRpdHVsbw0KDQogICdMa" +
                        "W1waWEgbG9zIHTDrXR1bG9zIGRlIGxhIGdyw6FmaWNhDQogIEdyYWZpY2ExLlRpdGxlcy5DbGVhcigpD" +
                        "QoNCiAgJ0FncmVnYSBlbCBUw610dWxvIGEgbGEgZ3LDoWZpY2ENCiAgJ0dyYWZpY2ExLlRpdGxlcy5BZ" +
                        "GRSYW5nZShOZXcgQ2hhcnRUaXRsZSgpIHtUaXR1bG8xfSkNCiAgR3JhZmljYTEuVGl0bGVzLkFkZChUa" +
                        "XR1bG8xKQ0KDQogICdDcmVhIGRvcyBvYmpldG9zIHRpcG8gZmlsdHJvIHkgbG9zIGluaWNpYWxpemEgY" +
                        "29uIGxvcyBmaWx0cm9zIG5lY2VzYXJpb3MNCiAgRGltIEZpbHRybzEgQXMgTmV3IERhdGFGaWx0ZXIoI" +
                        "kN0YURpbmVybyIsIlN5c3RlbS5TdHJpbmciLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsQ3VlbnRhK" +
                        "Q0KICBEaW0gRmlsdHJvMiBBcyBOZXcgRGF0YUZpbHRlcigiTW9uZWRhIiwiU3lzdGVtLlN0cmluZyIsR" +
                        "GF0YUZpbHRlckNvbmRpdGlvbi5FcXVhbCxNb25lZGEpDQogIERpbSBGaWx0cm8zIEFzIE5ldyBEYXRhR" +
                        "mlsdGVyKCJHcmFmaWNhIiwiU3lzdGVtLkludGVnZXIiLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsM" +
                        "SkNCiAgRGltIEZpbHRybzQgQXMgTmV3IERhdGFGaWx0ZXIoIkdyYWZpY2FQb3NpdGl2byIsIlN5c3Rlb" +
                        "S5JbnRlZ2VyIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLDEpDQoNCg0KICAnTGltcGlhIGxvcyBma" +
                        "Wx0cm9zIGRlIGxhIHBsYW50aWxsYQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQ2xlYXIoKQ0KDQogI" +
                        "CdQb25lIGVsIENvbmp1Y3Rpb25Nb2RlIGEgQW5kDQogIFBsYW50aWxsYS5EYXRhRmlsdGVyc0Nvbmp1b" +
                        "mN0aW9uTW9kZSA9IENvbmp1bmN0aW9uVHlwZXMuQW5kDQoNCiAgJ0FncmVnYSBsb3MgZmlsdHJvcyBhI" +
                        "GxhIHBsYW50aWxsYQ0KICAnUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZFJhbmdlKE5ldyBEYXRhRmlsd" +
                        "GVyKCkge0ZpbHRybzEsIEZpbHRybzIsIEZpbHRybzN9KQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQ" +
                        "WRkKEZpbHRybzEpDQogIFBsYW50aWxsYS5EYXRhRmlsdGVycy5BZGQoRmlsdHJvMikNCiAgUGxhbnRpb" +
                        "GxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0cm8zKQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpb" +
                        "HRybzQpDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgY2hhcnQyX0JlZm9yZVByaW50KEJ5VmFsIHNlb" +
                        "mRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVud" +
                        "EFyZ3MpDQogICdTaSBlbCB2YWxvciBkZWwgY2FtcG8gQ2xpZW50ZSBlcyBudWxsIG5vIHNlIG11ZXN0c" +
                        "mEgIA0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkN0YURpbmVybyIpIElTIE5PVEhJTkcNCiAgI" +
                        "CAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0RlZmluZSB1b" +
                        "mEgRnVlbnRlIHBhcmEgZWwgdMOtdHVsbyBkZSBsYSBncsOhZmljYQ0KICBEaW0gRnVlbnRlVGl0dWxvI" +
                        "EFzIE5ldyBGb250KCJBcmlhbCIsOCxGb250U3R5bGUuQm9sZCkNCiAgJ0dlbmVyYSB1biBvYmpldG8gc" +
                        "XVlIHJlcHJlc2VudGEgYSBsYSBncsOhZmljYQ0KICBEaW0gR3JhZmljYTEgQXMgWFJDaGFydCA9IENUe" +
                        "XBlKHNlbmRlcixYUkNoYXJ0KQ0KDQogJ1NpIGVsIHZhbG9yIGRlbCBjYW1wbyBWZXJHcmFmaWNhRGV0Y" +
                        "WxsZSBlcyAwIG5vIHNlIG11ZXN0cmEgDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiVmVyR3JhZ" +
                        "mljYURldGFsbGUiKSA9IDAgVEhFTg0KICAgIEdyYWZpY2ExLnZpc2libGUgPSBGYWxzZQ0KICAgIGUuQ" +
                        "2FuY2VsID0gVHJ1ZSAgICANCiAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0d1YXJkYSBlbCB2YWxvc" +
                        "iBkZSBsYSBjb2x1bW5hIGN1ZW50YSB5IGRlIGxhIG1vbmVkYQ0KICBEaW0gQ3VlbnRhIEFzIFN0cmluZ" +
                        "yA9IEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiQ3RhRGluZXJvIikuVG9TdHJpbmcudHJpbSgpDQogIERpb" +
                        "SBNb25lZGEgQXMgU3RyaW5nID0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJNb25lZGEiKS5Ub1N0cmluZ" +
                        "y50cmltKCkNCg0KICAnR2VuZXJhIHVuIG9iamV0byBxdWUgcmVwcmVzZW50YSBhIGxhIHBsYW50aWxsY" +
                        "SBkZSBzZXJpZXMgYXV0b2NyZWFkYXMNCiAgRGltIFBsYW50aWxsYSBBcyBTZXJpZXNCYXNlID0gR3JhZ" +
                        "mljYTEuU2VyaWVzVGVtcGxhdGUNCg0KICAnR2VuZXJhIHVuIG9iamV0byB0aXBvIFTDrXR1bG8NCiAgR" +
                        "GltIFRpdHVsbzEgQXMgTmV3IENoYXJ0VGl0bGUoKQ0KICBUaXR1bG8xLlRleHQgPSAiQWJvbm9zIiArI" +
                        "CIgLSAiICsgTW9uZWRhDQogIFRpdHVsbzEuRm9udCA9IEZ1ZW50ZVRpdHVsbw0KDQogICdMaW1waWEgb" +
                        "G9zIHTDrXR1bG9zIGRlIGxhIGdyw6FmaWNhDQogIEdyYWZpY2ExLlRpdGxlcy5DbGVhcigpDQoNCiAgJ" +
                        "0FncmVnYSBlbCBUw610dWxvIGEgbGEgZ3LDoWZpY2ENCiAgJ0dyYWZpY2ExLlRpdGxlcy5BZGRSYW5nZ" +
                        "ShOZXcgQ2hhcnRUaXRsZSgpIHtUaXR1bG8xfSkNCiAgR3JhZmljYTEuVGl0bGVzLkFkZChUaXR1bG8xK" +
                        "Q0KDQogICdDcmVhIGRvcyBvYmpldG9zIHRpcG8gZmlsdHJvIHkgbG9zIGluaWNpYWxpemEgY29uIGxvc" +
                        "yBmaWx0cm9zIG5lY2VzYXJpb3MNCiAgRGltIEZpbHRybzEgQXMgTmV3IERhdGFGaWx0ZXIoIkN0YURpb" +
                        "mVybyIsIlN5c3RlbS5TdHJpbmciLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsQ3VlbnRhKQ0KICBEa" +
                        "W0gRmlsdHJvMiBBcyBOZXcgRGF0YUZpbHRlcigiTW9uZWRhIiwiU3lzdGVtLlN0cmluZyIsRGF0YUZpb" +
                        "HRlckNvbmRpdGlvbi5FcXVhbCxNb25lZGEpDQogIERpbSBGaWx0cm8zIEFzIE5ldyBEYXRhRmlsdGVyK" +
                        "CJHcmFmaWNhIiwiU3lzdGVtLkludGVnZXIiLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsMSkNCiAgR" +
                        "GltIEZpbHRybzQgQXMgTmV3IERhdGFGaWx0ZXIoIkdyYWZpY2FQb3NpdGl2byIsIlN5c3RlbS5JbnRlZ" +
                        "2VyIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLDApDQoNCiAgJ0xpbXBpYSBsb3MgZmlsdHJvcyBkZ" +
                        "SBsYSBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkNsZWFyKCkNCg0KICAnUG9uZSBlb" +
                        "CBDb25qdWN0aW9uTW9kZSBhIEFuZA0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnNDb25qdW5jdGlvbk1vZ" +
                        "GUgPSBDb25qdW5jdGlvblR5cGVzLkFuZA0KDQogICdBZ3JlZ2EgbG9zIGZpbHRyb3MgYSBsYSBwbGFud" +
                        "GlsbGENCiAgJ1BsYW50aWxsYS5EYXRhRmlsdGVycy5BZGRSYW5nZShOZXcgRGF0YUZpbHRlcigpIHtGa" +
                        "Wx0cm8xLCBGaWx0cm8yLCBGaWx0cm8zfSkNCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0c" +
                        "m8xKQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzIpDQogIFBsYW50aWxsYS5EYXRhR" +
                        "mlsdGVycy5BZGQoRmlsdHJvMykNCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0cm80KQ0KD" +
                        "QpFbmQgU3ViDQoNClByaXZhdGUgU3ViIGNoYXJ0M19CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT" +
                        "2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KD" +
                        "QogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYSIpIElTIE5PVEhJTkcNCiAgICAgZS5DY" +
                        "W5jZWwgPSBUcnVlICAgIA0KICAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0RlZmluZSB1bmEgRnVlb" +
                        "nRlIHBhcmEgZWwgdMOtdHVsbyBkZSBsYSBncsOhZmljYQ0KICBEaW0gRnVlbnRlVGl0dWxvIEFzIE5ld" +
                        "yBGb250KCJBcmlhbCIsOCxGb250U3R5bGUuQm9sZCkNCiAgJ0dlbmVyYSB1biBvYmpldG8gcXVlIHJlc" +
                        "HJlc2VudGEgYSBsYSBncsOhZmljYQ0KICBEaW0gR3JhZmljYTEgQXMgWFJDaGFydCA9IENUeXBlKHNlb" +
                        "mRlcixYUkNoYXJ0KQ0KDQogIERpbSBNb25lZGEgQXMgU3RyaW5nID0gR2V0Q3VycmVudENvbHVtblZhb" +
                        "HVlKCJDb250TW9uZWRhIikuVG9TdHJpbmcudHJpbSgpDQoNCiAgJ0dlbmVyYSB1biBvYmpldG8gcXVlI" +
                        "HJlcHJlc2VudGEgYSBsYSBwbGFudGlsbGEgZGUgc2VyaWVzIGF1dG9jcmVhZGFzDQogIERpbSBQbGFud" +
                        "GlsbGEgQXMgU2VyaWVzQmFzZSA9IEdyYWZpY2ExLlNlcmllc1RlbXBsYXRlDQoNCiAgJ0dlbmVyYSB1b" +
                        "iBvYmpldG8gdGlwbyBUw610dWxvDQogIERpbSBUaXR1bG8xIEFzIE5ldyBDaGFydFRpdGxlKCkNCiAgV" +
                        "Gl0dWxvMS5UZXh0ID0gIkNhcmdvcyIgKyAiIC0gIiArIE1vbmVkYQ0KICBUaXR1bG8xLkZvbnQgPSBGd" +
                        "WVudGVUaXR1bG8NCg0KICAnTGltcGlhIGxvcyB0w610dWxvcyBkZSBsYSBncsOhZmljYQ0KICBHcmFma" +
                        "WNhMS5UaXRsZXMuQ2xlYXIoKQ0KDQogICdBZ3JlZ2EgZWwgVMOtdHVsbyBhIGxhIGdyw6FmaWNhDQogI" +
                        "CdHcmFmaWNhMS5UaXRsZXMuQWRkUmFuZ2UoTmV3IENoYXJ0VGl0bGUoKSB7VGl0dWxvMX0pDQogIEdyY" +
                        "WZpY2ExLlRpdGxlcy5BZGQoVGl0dWxvMSkNCg0KICAnQ3JlYSBkb3Mgb2JqZXRvcyB0aXBvIGZpbHRyb" +
                        "yB5IGxvcyBpbmljaWFsaXphIGNvbiBsb3MgZmlsdHJvcyBuZWNlc2FyaW9zDQogIERpbSBGaWx0cm8xI" +
                        "EFzIE5ldyBEYXRhRmlsdGVyKCJHcmFmaWNhIiwiU3lzdGVtLkludGVnZXIiLERhdGFGaWx0ZXJDb25ka" +
                        "XRpb24uRXF1YWwsMikNCiAgRGltIEZpbHRybzIgQXMgTmV3IERhdGFGaWx0ZXIoIkdyYWZpY2FQb3Npd" +
                        "Gl2byIsIlN5c3RlbS5JbnRlZ2VyIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLDEpDQoNCiAgJ0xpb" +
                        "XBpYSBsb3MgZmlsdHJvcyBkZSBsYSBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkNsZ" +
                        "WFyKCkNCg0KICAnUG9uZSBlbCBDb25qdWN0aW9uTW9kZSBhIEFuZA0KICBQbGFudGlsbGEuRGF0YUZpb" +
                        "HRlcnNDb25qdW5jdGlvbk1vZGUgPSBDb25qdW5jdGlvblR5cGVzLkFuZA0KDQogICdBZ3JlZ2EgbG9zI" +
                        "GZpbHRyb3MgYSBsYSBwbGFudGlsbGENCiAgJ1BsYW50aWxsYS5EYXRhRmlsdGVycy5BZGRSYW5nZShOZ" +
                        "XcgRGF0YUZpbHRlcigpIHtGaWx0cm8xLCBGaWx0cm8yLCBGaWx0cm8zfSkNCiAgUGxhbnRpbGxhLkRhd" +
                        "GFGaWx0ZXJzLkFkZChGaWx0cm8xKQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzIpD" +
                        "QoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgY2hhcnQ0X0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBc" +
                        "yBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpD" +
                        "QoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJHcmFmaWNhIikgSVMgTk9USElORw0KICAgICBlL" +
                        "kNhbmNlbCA9IFRydWUgICAgDQogICAgIFJFVFVSTg0KICBFTkQgSUYNCg0KICAnRGVmaW5lIHVuYSBGd" +
                        "WVudGUgcGFyYSBlbCB0w610dWxvIGRlIGxhIGdyw6FmaWNhDQogIERpbSBGdWVudGVUaXR1bG8gQXMgT" +
                        "mV3IEZvbnQoIkFyaWFsIiw4LEZvbnRTdHlsZS5Cb2xkKQ0KICAnR2VuZXJhIHVuIG9iamV0byBxdWUgc" +
                        "mVwcmVzZW50YSBhIGxhIGdyw6FmaWNhDQogIERpbSBHcmFmaWNhMSBBcyBYUkNoYXJ0ID0gQ1R5cGUoc" +
                        "2VuZGVyLFhSQ2hhcnQpDQoNCiAgRGltIE1vbmVkYSBBcyBTdHJpbmcgPSBHZXRDdXJyZW50Q29sdW1uV" +
                        "mFsdWUoIkNvbnRNb25lZGEiKS5Ub1N0cmluZy50cmltKCkNCg0KICAnR2VuZXJhIHVuIG9iamV0byBxd" +
                        "WUgcmVwcmVzZW50YSBhIGxhIHBsYW50aWxsYSBkZSBzZXJpZXMgYXV0b2NyZWFkYXMNCiAgRGltIFBsY" +
                        "W50aWxsYSBBcyBTZXJpZXNCYXNlID0gR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUNCg0KICAnR2VuZXJhI" +
                        "HVuIG9iamV0byB0aXBvIFTDrXR1bG8NCiAgRGltIFRpdHVsbzEgQXMgTmV3IENoYXJ0VGl0bGUoKQ0KI" +
                        "CBUaXR1bG8xLlRleHQgPSAiQWJvbm9zIiArICIgLSAiICsgTW9uZWRhDQogIFRpdHVsbzEuRm9udCA9I" +
                        "EZ1ZW50ZVRpdHVsbw0KDQogICdMaW1waWEgbG9zIHTDrXR1bG9zIGRlIGxhIGdyw6FmaWNhDQogIEdyY" +
                        "WZpY2ExLlRpdGxlcy5DbGVhcigpDQoNCiAgJ0FncmVnYSBlbCBUw610dWxvIGEgbGEgZ3LDoWZpY2ENC" +
                        "iAgJ0dyYWZpY2ExLlRpdGxlcy5BZGRSYW5nZShOZXcgQ2hhcnRUaXRsZSgpIHtUaXR1bG8xfSkNCiAgR" +
                        "3JhZmljYTEuVGl0bGVzLkFkZChUaXR1bG8xKQ0KDQogICdDcmVhIGRvcyBvYmpldG9zIHRpcG8gZmlsd" +
                        "HJvIHkgbG9zIGluaWNpYWxpemEgY29uIGxvcyBmaWx0cm9zIG5lY2VzYXJpb3MNCiAgRGltIEZpbHRyb" +
                        "zEgQXMgTmV3IERhdGFGaWx0ZXIoIkdyYWZpY2EiLCJTeXN0ZW0uSW50ZWdlciIsRGF0YUZpbHRlckNvb" +
                        "mRpdGlvbi5FcXVhbCwyKQ0KICBEaW0gRmlsdHJvMiBBcyBOZXcgRGF0YUZpbHRlcigiR3JhZmljYVBvc" +
                        "2l0aXZvIiwiU3lzdGVtLkludGVnZXIiLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsMCkNCg0KDQogI" +
                        "CdMaW1waWEgbG9zIGZpbHRyb3MgZGUgbGEgcGxhbnRpbGxhDQogIFBsYW50aWxsYS5EYXRhRmlsdGVyc" +
                        "y5DbGVhcigpDQoNCiAgJ1BvbmUgZWwgQ29uanVjdGlvbk1vZGUgYSBBbmQNCiAgUGxhbnRpbGxhLkRhd" +
                        "GFGaWx0ZXJzQ29uanVuY3Rpb25Nb2RlID0gQ29uanVuY3Rpb25UeXBlcy5BbmQNCg0KICAnQWdyZWdhI" +
                        "GxvcyBmaWx0cm9zIGEgbGEgcGxhbnRpbGxhDQogICdQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkUmFuZ" +
                        "2UoTmV3IERhdGFGaWx0ZXIoKSB7RmlsdHJvMSwgRmlsdHJvMiwgRmlsdHJvM30pDQogIFBsYW50aWxsY" +
                        "S5EYXRhRmlsdGVycy5BZGQoRmlsdHJvMSkNCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0c" +
                        "m8yKQ0KDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgZ3JvdXBIZWFkZXJCYW5kMV9CZWZvcmVQcmlud" +
                        "F8xKEJ5VmFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpb" +
                        "mcuUHJpbnRFdmVudEFyZ3MpDQoNCiAnU2kgZWwgdmFsb3IgZGVsIGNhbXBvIGdyYWZpY2EgZXMgVmVyZ" +
                        "GFkZXJvIG5vIHNlIG11ZXN0cmEgDQonIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYSIpI" +
                        "D0gMCBUSEVOICAgICANCicgICAgIGUuQ2FuY2VsID0gRmFsc2UNCicgIEVMU0UNCicgICAgIGUuQ2FuY" +
                        "2VsID0gVHJ1ZSAgICANCicgIEVORCBJRiANCg0KICdTaSBlbCB2YWxvciBkZWwgY2FtcG8gVmVyR3JhZ" +
                        "mljYURldGFsbGUgZXMgMCBubyBzZSBtdWVzdHJhIA0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoI" +
                        "lZlckdyYWZpY2FEZXRhbGxlIikgPSAwIFRIRU4NCicgICAgZS52aXNpYmxlID0gRmFsc2UNCiAgICBlL" +
                        "kNhbmNlbCA9IFRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQpFbmQgU3ViDQoNClByaXZhd" +
                        "GUgU3ViIEdyb3VwSGVhZGVyMV9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhb" +
                        "CBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogJ1NpIGVsIHZhb" +
                        "G9yIGRlbCBjYW1wbyBncmFmaWNhIGVzIFZlcmRhZGVybyBubyBzZSBtdWVzdHJhIA0KJyBJRiBHZXRDd" +
                        "XJyZW50Q29sdW1uVmFsdWUoIkdyYWZpY2EiKSA9IDAgVEhFTiAgICAgDQonICAgICBlLkNhbmNlbCA9I" +
                        "EZhbHNlDQonICBFTFNFDQonICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQonICBFTkQgSUYgDQoNCiAnU" +
                        "2kgZWwgdmFsb3IgZGVsIGNhbXBvIFZlckdyYWZpY2FEZXRhbGxlIGVzIDEgbm8gc2UgbXVlc3RyYSANC" +
                        "iAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJWZXJHcmFmaWNhRGV0YWxsZSIpID0gMSBUSEVODQonI" +
                        "CAgIGUudmlzaWJsZSA9IEZhbHNlDQogICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgIFJFVFVSTg0KI" +
                        "CBFTkQgSUYNCg0KRW5kIFN1Yg0KDQoNCkAAAQAAAP////8BAAAAAAAAAAwCAAAAUVN5c3RlbS5EcmF3a" +
                        "W5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN" +
                        "2YxMWQ1MGEzYQUBAAAAFVN5c3RlbS5EcmF3aW5nLkJpdG1hcAEAAAAERGF0YQcCAgAAAAkDAAAADwMAA" +
                        "ABawQAAAv/Y/+AAEEpGSUYAAQEBAJYAlgAA/+4ADkFkb2JlAGQAAAAAAf/hEZZFeGlmAABNTQAqAAAAC" +
                        "AAHARIAAwAAAAEAAQAAARoABQAAAAEAAABiARsABQAAAAEAAABqASgAAwAAAAEAAgAAATEAAgAAABwAA" +
                        "AByATIAAgAAABQAAACOh2kABAAAAAEAAACiAAAAwgCWAAAAAQAAAJYAAAABAABBZG9iZSBQaG90b3Nob" +
                        "3AgQ1M1IFdpbmRvd3MAMjAxMTowMToxOCAwOTo1MTowNgAAAqACAAQAAAABAAABYqADAAQAAAABAAAAg" +
                        "QAAAAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAEQARsABQAAAAEAAAEYASgAAwAAAAEAAgAAAgEAB" +
                        "AAAAAEAAAEgAgIABAAAAAEAABBuAAAAAAAAAEgAAAABAAAASAAAAAH/2P/tAAxBZG9iZV9DTQAB/+4AD" +
                        "kFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsNDg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAOgCgAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFA" +
                        "QEBAQEBAAAAAAAAAAMAAQIEBQYHCAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDA" +
                        "gQCBQcGCAUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKyg" +
                        "yZEk1RkRcKjdDYX0lXiZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent" +
                        "8fX5/cRAAICAQIEBAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY" +
                        "3M08SUGFqKygwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5" +
                        "vYnN0dXZ3eHl6e3x//aAAwDAQACEQMRAD8A9VSSSSUpYGFkfWd31kyKsqoN6S3f6btrQ3aI9B1VgPqvt" +
                        "s/wzH/+B/o1d+sPVj0jpN2axrX2t2tpY6YL3kMbu2/mtn1HIf1Y6rl9W6QzMy6212Oe9oLJDXBrtnqNa" +
                        "4vcz9z6af7Uvb939Di4P8JZ7sfc9v8ASri/wXWSSSTF6kkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkk" +
                        "kklP//Q9VWf1rrWJ0fE9e/32PltFDT7rHfut/dY3/CWf4NN1vreJ0bE9e/32PltFDT7rHeA/dY3/CWf4" +
                        "Ncb0zpnUfrX1F+fnvLcVp22WNkCAf6Hh/usb/hbf/R/82lK+sfU8rN+q/Trspwddl5Ntzg0Q1orN1VdT" +
                        "P5DGOZ9JF6sOpdL6J9X+odPBZViU7rbRqA+8VPjIr/0NrvUb/X/ANHZ6Stf4wcGqjpXTxjsFVGPaaWVt" +
                        "EABzHFv/npdD0B1OX9XcEECyp+LXW9jgC0wwVWsc0/S+i5i0I5Bj5bBPh4gJz44nY8XFH/oNGWM5OZzR" +
                        "vhJhDhkNxXq/wCmw+r31hxet4u9n6PJrgZGOTq0/vN/fqf+Y9ay87670LO+rGa3q3SHOGIHaHVxqLj/A" +
                        "DF/+lxbPose7/i7P0vpW2dd9XvrDjdbxd7B6eTVAyKCZLSfzm/v1P8AzHqHmOXiI+9hPFhl/jY5fuyZc" +
                        "GeRkcWUcOWP+Lkj+/FL13rmJ0PB+25bXvrLxWG17Zkgu/wjq2fRY785XqrWXVMurMssaHtPk4bmrB+vH" +
                        "UcvpvSK8jDc1l/rta2xzGvLZZaS6sWh7Gv9uz6P0Fk9T6z9ZX9XwundNyhW/KxarA1zK9peW2WWuL31P" +
                        "2+2tNx8rPJESEoxB4vmP+b+a12TmYQkYkSlIcOkR+/8r26yuu/WDF6HXRZlV2WMveWTWGnbA3Fzg9zP+" +
                        "iubyOsfXToThb1djcvDs9rnsDBtJ/0dtLGenb+569PpPWX9aH9XuxcfKysxud0u9xfg2bWMsgt3fpmU1" +
                        "17bGN/RWfy/9GpsPJXkjxyhLHLrCXz/ANWP9Zizc5WORjGQnHpKPy/1pf1X01JcrV1P6w9Cw8rN+sdte" +
                        "Sz2MxKa9oe607vbvrrqayvb9Pf6n0P+3KOPb/jC6pj/ALQx7a8ep4300Qxm5vb0m3V3P2u/M+02s/zFE" +
                        "OUkbPuYxAHh9wy9Epdosh5kChwTMyOLgA9cY95PcLlfqh9Yc/qGN1LL6lYHsxiHtaxgaGM2vse1u33v+" +
                        "j+ej/Vf6y5PUbremdTq9DqOMJIALQ9rSGvlhnZazc3d+Y/+cqWL9RbDX0jrVga15YzcGvEtMV2Ha9v5z" +
                        "E+OAxxZ4zA4x7XDLf55bxl/WWSziWTAYk8BGTiH9yP6Uf6r1nQut4nXMH7biNexgea3Ns27g5sH/BusZ" +
                        "9Fzfz1oriOn/W3qGN9VH9RySMrLdlHGolrWMH6NtjfUZQKvYxrbP5f5iWOz/GFm4reoU5lQa8bq6QapI" +
                        "PG0Cmyn/ty9N+5zF8c4QAlwcUjpKX9Vd97ga4YzmSOOojWMfF6/PzacDCvzb59LHY6x4aJMNG72zCH0n" +
                        "qdHVun09Qxw5tV0w10SC1zqntOwvZ9Nn7ywq+r9dt+rfU7eqYYx8rDY4V2WM9lhA/nPQs3sd6bvz/6PZ" +
                        "/g1Us+t2fhfVbBynxkdRznXNFr2gNArse11jq6vTa52z02MZ/1xNHKZCaHCfX7ehvXh9zi/u8K481jAs" +
                        "2PT7mo6cXB/jcT2iS4puP8A4xnUNzGZdVhcARQ00kkH/rP2b/2YXQ/V3P6ln9O9bqeKcTJa9zC0tczeB" +
                        "EWiqz31/S2f2E3Jy5hHiE4TANHglqE48/GeEwnCxY4xoX//0ez+tf1ZPVWjNxDGfSzYGOPtsrBL/R93t" +
                        "qs3O/RWf2Lv9JTmfVP6z+gWdH6l+iDD6WPa4bC1wOz7Jkt9uyxrvZXZ/wBbt/S/zvarm/rV9VWdUY7Mw" +
                        "2tbntbD2GA29oEenZPtbc1v81b/ANat/R/zKU3vrR0x3U+iZOPW3de0C2gcnfWd4a3/AIxu6r/rixP8X" +
                        "nV2W4tnSbHfpKSbscHvW8zY0f8AFXO/8GUfqp9aHse3pHVXODg70se6yQ4OB2fZMnd7vV3eyp7/APirP" +
                        "0n87n/WHoNwzn9V+rpdkVPsey5uI6X03615DW+md+y3c71P9H/xKuctKGTHLl5nh4jx45H9GbU5mM8eS" +
                        "OeA4uEcGSI/Sh/6C3Prd9azc5/RekzY6w+jkWsG4uLvYcXHaPpvf9Cx/wD1uv3/AM3qfVD6rno9TsvLM" +
                        "5+Q0NcwGW1Mnd6II+nZu/nbP+2v9JbD6p/VJnSWNzc1rX9Qc2GtEFtLSP5uv9613+Ft/wCtVfo/57pkM" +
                        "+aEYexg+T9OfXLL/vU4cMpT9/N8/wChDpij/wB88p/jI/5Bq/8ADLf/AD3cs8f+LTo3/hSr/wA9ZC6X6" +
                        "y4XTs7Bqxuoi30bMipjH06Ftjz6NTnH/RudZ6X0f8IqLmfV49TPVGC05PSH19PFTDLS5+2ijax3us2uy" +
                        "nU79/5ln+jT8OUDCI1ImssdBpeXhjBZlxE5jKxvjl4/q/VJ0vrHWyzoHUW2NDgMa1wB8WtNjHf2Xt3Lg" +
                        "M9trvqV0x/LGZN7PgXG1zB+D16Tc3Ez6MnDL22Me11OQ1jhubvG1zXbf5t+1yoYvS+iYHSn9IssZdiND" +
                        "n2tyHsJ2ucSX2fQ2tbb9B/76Zy+cYogEEyGQT4f6vDKBX8xh9yRIIAMDC/63FxOJ9dr8fqvQKs3p1zcm" +
                        "nHua+7YZ2te19e61n069r3s9j2rP6Z0nE6hiMvb9Y7aXbQLKLH7XVkCPT2uvb7W/mO+gun6b9X+g9Iyb" +
                        "vQPv6g3YKLbA8Fg3ONdVb/dYz3e7f6qy2fVD6r9SsstqF2JtutxxS17Q0vpc5lhpZZ63s9m7+p/g1Njz" +
                        "44wMIynGETxRycEZaT/AEZRl/0mLJhnKfGRGUpDhlDjlH5f0oyim6H9U68XqdfV2dUOeWb2uMB24lvpe" +
                        "671LPoLH+pb2N6R1ykuAt9Iu9M87Qyxhd/n+1dZ9XukdL6Vi219NsN1dlhdY8vD/cAK9v6MNY3ZtWKKu" +
                        "gnqVfVKunZllnVaXmljNgrs9av1sl7Weux9d3ou/SbnMZ/o/wBL+kTY5jP3YyMp6Q4ZcMYfzR9zhlH0/" +
                        "wBZMsIgMUogQ+fijcpj9cODi4vU5nQ7+jU/Uy39sVutxrM0sY2sEv8AULK3MdU4FuxzGte7dv8A/Sam3" +
                        "6t41NTs/wCr3Xm01kAn1LPTj879PdSWbf8Ai7sVdDjdM6F0zG/5v2ML8bJY/IsfkOaWmH00w9/s2277a" +
                        "fR9Nn+D/wBKqNv1B+rTsr0/XurtfLmY4tYTtH7nq12X7P7aeOYhxTPFOAnIz+UZMc4f3P0Vp5eXDAcMJ" +
                        "mMRH5vbyQl/fc/E691Dqf1f63iZzm3vxKCW5LAAHB29sO2Btbv5v9E9rP0lafHu6A36m9Mp6015ZdbcK" +
                        "X1Al9bhbdvvDm/m1td7/wCc3/6GxdLR0boNPT7+kY4Yyq+sm8NfNha4bPXe8l1nb2v+glR0Tojuljou1" +
                        "uVjYx9zHu3Pa5xNvqOeza+q13qOd7PTUZ5jFrwxnCPuDJUPQRHg4OIfu+teMGTS5RnL2zj9XqHFx8df4" +
                        "ryzvq99gqOd0Hr9VeOTP6S0Vt/65ZUXUWu/4zGW79S+u5vWMK77aA63GeG+s0bQ8OG73NHs9Rn5+z+Qq" +
                        "Q+on1Xc37U3KtNGrtwtrLIbO/8AS+nu2s2+79Kul6dg4GBito6fW2rH+k3YZ3bv8IXkudZu/fc5LmM2O" +
                        "WMxs5J3pOUBjlCuhl+knl8OSOQHTHCtYRmZxnfYfov/0vVUkkklPOfWn6rN6mx2bhNDeoNb7maBt7QP5" +
                        "t8+1tzf8Dd/1q39H/Mz+qf1cf0il2RkuP2zJaBZU1x9Oto+jXtafTtub+ff/wBbp/R/zvQJJKUkkkkpp" +
                        "9YxLMzpt9FX88W76JMD1ayLsf3f8fXWsejoGcMzBusLNprN2fwYymm++k1t/PZ9p6lkW/8AoNSukSVjF" +
                        "7vtnhrhuV334f5f4bBl9rjHFfFQ27cTz31b6Pk4NlZyqrGW4+P9mNm6g0v9zX7qvs9dWVZucz1Wvzf0r" +
                        "PWu/PsssTV/V6cnDttxaXbMzNvyXENJLLnZDsYu0/SfTxvb/g/+tLoklJL3uOe10eLh4v3cm3/P/wANZ" +
                        "H2uCN3w2K4q/eg8e/oXWvsGNhir3U00tre11UMfVe+9zbb7GnK2V0tx/sTcX8/1fWRn9A6sXZ23Y4Z4z" +
                        "aq3Pdrji59l1NtG0fzWbLWZv+H9T0P8HV6bOqSUh9/X+b+aV1+8sHs6fP8ALHf91x+gYFmM6+62m3Hst" +
                        "bUwssOPt/RBwHpN6eyqvazf6XqWt9V9bKv9Gg4fSs6pn1fFjAD06pzMr3A7SaPQ9v7/AOkW8koD7nFP5" +
                        "dtauq9qfy/9TZRwcEL4qsVdcV+7D5v8Nyuo9K+29RZbbTXfjsxL6gLAHAWWOp2+x371bLPeslvR+tOfg" +
                        "NuqBOKcFxta6qIpDG5fr2uY7Nuyt3rsr9Oz7L9nf/pPUrt6tJOxe7wiuGq9PHff9FGT2+I3xXevDTxnR" +
                        "8N1uDi5FeGyurGszb7c6WbrGuGVj+g1rf0znPfYx13q/odmNX/Oez0lh9FzM3pWP9lxa8EDpgoNoc0fa" +
                        "Dace/Z+ja9/oenRb6j8lu/1Mt/6C2v1fV7NJTH3eI0I8XFprP8Aeyfven99ij7fCLMuHh10j+7D931f9" +
                        "285i9De+zHtux7Nv237RkVZRocIbi241d1dWE1uN/PPpZ/pf0XqrQ6RRlYTG4Rxm14wdk2Nsa9u1gdkP" +
                        "fi47aR+a7Gt3/8ABen6S00lXze5R4+Hh0quLh/T4eFnxcGnDxXrvw3+jxW//9n/7RjQUGhvdG9zaG9wI" +
                        "DMuMAA4QklNBCUAAAAAABAAAAAAAAAAAAAAAAAAAAAAOEJJTQQ6AAAAAACTAAAAEAAAAAEAAAAAAAtwc" +
                        "mludE91dHB1dAAAAAUAAAAAQ2xyU2VudW0AAAAAQ2xyUwAAAABSR0JDAAAAAEludGVlbnVtAAAAAElud" +
                        "GUAAAAAQ2xybQAAAABNcEJsYm9vbAEAAAAPcHJpbnRTaXh0ZWVuQml0Ym9vbAAAAAALcHJpbnRlck5hb" +
                        "WVURVhUAAAAAQAAADhCSU0EOwAAAAABsgAAABAAAAABAAAAAAAScHJpbnRPdXRwdXRPcHRpb25zAAAAE" +
                        "gAAAABDcHRuYm9vbAAAAAAAQ2xicmJvb2wAAAAAAFJnc01ib29sAAAAAABDcm5DYm9vbAAAAAAAQ250Q" +
                        "2Jvb2wAAAAAAExibHNib29sAAAAAABOZ3R2Ym9vbAAAAAAARW1sRGJvb2wAAAAAAEludHJib29sAAAAA" +
                        "ABCY2tnT2JqYwAAAAEAAAAAAABSR0JDAAAAAwAAAABSZCAgZG91YkBv4AAAAAAAAAAAAEdybiBkb3ViQ" +
                        "G/gAAAAAAAAAAAAQmwgIGRvdWJAb+AAAAAAAAAAAABCcmRUVW50RiNSbHQAAAAAAAAAAAAAAABCbGQgV" +
                        "W50RiNSbHQAAAAAAAAAAAAAAABSc2x0VW50RiNQeGxAYsAAAAAAAAAAAAp2ZWN0b3JEYXRhYm9vbAEAA" +
                        "AAAUGdQc2VudW0AAAAAUGdQcwAAAABQZ1BDAAAAAExlZnRVbnRGI1JsdAAAAAAAAAAAAAAAAFRvcCBVb" +
                        "nRGI1JsdAAAAAAAAAAAAAAAAFNjbCBVbnRGI1ByY0BZAAAAAAAAOEJJTQPtAAAAAAAQAJYAAAABAAIAl" +
                        "gAAAAEAAjhCSU0EJgAAAAAADgAAAAAAAAAAAAA/gAAAOEJJTQQNAAAAAAAEAAAAeDhCSU0EGQAAAAAAB" +
                        "AAAAB44QklNA/MAAAAAAAkAAAAAAAAAAAEAOEJJTScQAAAAAAAKAAEAAAAAAAAAAjhCSU0D9QAAAAAAS" +
                        "AAvZmYAAQBsZmYABgAAAAAAAQAvZmYAAQChmZoABgAAAAAAAQAyAAAAAQBaAAAABgAAAAAAAQA1AAAAA" +
                        "QAtAAAABgAAAAAAAThCSU0D+AAAAAAAcAAA/////////////////////////////wPoAAAAAP///////" +
                        "/////////////////////8D6AAAAAD/////////////////////////////A+gAAAAA/////////////" +
                        "////////////////wPoAAA4QklNBAAAAAAAAAIAAThCSU0EAgAAAAAABAAAAAA4QklNBDAAAAAAAAIBA" +
                        "ThCSU0ELQAAAAAABgABAAAAAzhCSU0ECAAAAAAAEAAAAAEAAAJAAAACQAAAAAA4QklNBB4AAAAAAAQAA" +
                        "AAAOEJJTQQaAAAAAANJAAAABgAAAAAAAAAAAAAAgQAAAWIAAAAKAFUAbgB0AGkAdABsAGUAZAAtADEAA" +
                        "AABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAWIAAACBAAAAAAAAAAAAAAAAAAAAAAEAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAEAAAAAEAAAAAAABudWxsAAAAAgAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjd" +
                        "DEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJna" +
                        "HRsb25nAAABYgAAAAZzbGljZXNWbExzAAAAAU9iamMAAAABAAAAAAAFc2xpY2UAAAASAAAAB3NsaWNlS" +
                        "URsb25nAAAAAAAAAAdncm91cElEbG9uZwAAAAAAAAAGb3JpZ2luZW51bQAAAAxFU2xpY2VPcmlnaW4AA" +
                        "AANYXV0b0dlbmVyYXRlZAAAAABUeXBlZW51bQAAAApFU2xpY2VUeXBlAAAAAEltZyAAAAAGYm91bmRzT" +
                        "2JqYwAAAAEAAAAAAABSY3QxAAAABAAAAABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b" +
                        "21sb25nAAAAgQAAAABSZ2h0bG9uZwAAAWIAAAADdXJsVEVYVAAAAAEAAAAAAABudWxsVEVYVAAAAAEAA" +
                        "AAAAABNc2dlVEVYVAAAAAEAAAAAAAZhbHRUYWdURVhUAAAAAQAAAAAADmNlbGxUZXh0SXNIVE1MYm9vb" +
                        "AEAAAAIY2VsbFRleHRURVhUAAAAAQAAAAAACWhvcnpBbGlnbmVudW0AAAAPRVNsaWNlSG9yekFsaWduA" +
                        "AAAB2RlZmF1bHQAAAAJdmVydEFsaWduZW51bQAAAA9FU2xpY2VWZXJ0QWxpZ24AAAAHZGVmYXVsdAAAA" +
                        "AtiZ0NvbG9yVHlwZWVudW0AAAARRVNsaWNlQkdDb2xvclR5cGUAAAAATm9uZQAAAAl0b3BPdXRzZXRsb" +
                        "25nAAAAAAAAAApsZWZ0T3V0c2V0bG9uZwAAAAAAAAAMYm90dG9tT3V0c2V0bG9uZwAAAAAAAAALcmlna" +
                        "HRPdXRzZXRsb25nAAAAAAA4QklNBCgAAAAAAAwAAAACP/AAAAAAAAA4QklNBBQAAAAAAAQAAAAEOEJJT" +
                        "QQMAAAAABCKAAAAAQAAAKAAAAA6AAAB4AAAbMAAABBuABgAAf/Y/+0ADEFkb2JlX0NNAAH/7gAOQWRvY" +
                        "mUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA6AKADASIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBA" +
                        "QEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFB" +
                        "wYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTV" +
                        "GRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9" +
                        "xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJ" +
                        "QYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R" +
                        "1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1VJJJJSlgYWR9Z3fWTIqyqg3pLd/pu2tDdoj0HVWA+q+2z/DMf" +
                        "/4H+jV36w9WPSOk3ZrGtfa3a2ljpgveQxu7b+a2fUch/VjquX1bpDMzLrbXY572gskNcGu2eo1ri9zP3" +
                        "Ppp/tS9v3f0OLg/wlnux9z2/wBKuL/BdZJJJMXqSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//" +
                        "9D1VZ/WutYnR8T17/fY+W0UNPusd+6391jf8JZ/g03W+t4nRsT17/fY+W0UNPusd4D91jf8JZ/g1xvTO" +
                        "mdR+tfUX5+e8txWnbZY2QIB/oeH+6xv+Ft/9H/zaUr6x9Tys36r9OuynB12Xk23ODRDWis3VV1M/kMY5" +
                        "n0kXqw6l0von1f6h08FlWJTuttGoD7xU+Miv/Q2u9Rv9f8A0dnpK1/jBwaqOldPGOwVUY9ppZW0QAHMc" +
                        "W/+el0PQHU5f1dwQQLKn4tdb2OALTDBVaxzT9L6LmLQjkGPlsE+HiAnPjidjxcUf+g0ZYzk5nNG+EmEO" +
                        "GQ3Fer/AKbD6vfWHF63i72fo8muBkY5OrT+839+p/5j1rLzvrvQs76sZrerdIc4YgdodXGouP8AMX/6X" +
                        "Fs+ix7v+Ls/S+lbZ131e+sON1vF3sHp5NUDIoJktJ/Ob+/U/wDMeoeY5eIj72E8WGX+Njl+7JlwZ5GRx" +
                        "ZRw5Y/4uSP78UvXeuYnQ8H7blte+svFYbXtmSC7/COrZ9FjvzleqtZdUy6syyxoe0+ThuasH68dRy+m9" +
                        "IryMNzWX+u1rbHMa8tllpLqxaHsa/27Po/QWT1PrP1lf1fC6d03KFb8rFqsDXMr2l5bZZa4vfU/b7a03" +
                        "Hys8kRISjEHi+Y/5v5rXZOZhCRiRKUhw6RH7/yvbrK679YMXoddFmVXZYy95ZNYadsDcXOD3M/6K5vI6" +
                        "x9dOhOFvV2Ny8Oz2uewMG0n/R20sZ6dv7nr0+k9Zf1of1e7Fx8rKzG53S73F+DZtYyyC3d+mZTXXtsY3" +
                        "9FZ/L/0amw8leSPHKEscusJfP8A1Y/1mLNzlY5GMZCceko/L/Wl/VfTUlytXU/rD0LDys36x215LPYzE" +
                        "pr2h7rTu9u+uuprK9v09/qfQ/7co49v+MLqmP8AtDHtrx6njfTRDGbm9vSbdXc/a78z7Taz/MUQ5SRs+" +
                        "5jEAeH3DL0Sl2iyHmQKHBMzI4uAD1xj3k9wuV+qH1hz+oY3UsvqVgezGIe1rGBoYza+x7W7fe/6P56P9" +
                        "V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa+WGdlrNzd35j/5ypYv1FsNfSOtWBrXljNwa8S0xXYdr2/nMT44DH" +
                        "FnjMDjHtcMt/nlvGX9ZZLOJZMBiTwEZOIf3I/pR/qvWdC63idcwftuI17GB5rc2zbuDmwf8G6xn0XN/P" +
                        "WiuI6f9beoY31Uf1HJIyst2UcaiWtYwfo22N9RlAq9jGts/l/mJY7P8YWbit6hTmVBrxurpBqkg8bQKb" +
                        "Kf+3L037nMXxzhACXBxSOkpf1V33uBrhjOZI46iNYx8Xr8/NpwMK/Nvn0sdjrHhokw0bvbMIfSep0dW6" +
                        "fT1DHDm1XTDXRILXOqe07C9n02fvLCr6v1236t9Tt6phjHysNjhXZYz2WED+c9Czex3pu/P/o9n+DVSz" +
                        "63Z+F9VsHKfGR1HOdc0WvaA0Cux7XWOrq9NrnbPTYxn/XE0cpkJocJ9ft6G9eH3OL+7wrjzWMCzY9Pua" +
                        "jpxcH+NxPaJLim4/wDjGdQ3MZl1WFwBFDTSSQf+s/Zv/ZhdD9Xc/qWf071up4pxMlr3MLS1zN4ERaKrP" +
                        "fX9LZ/YTcnLmEeIThMA0eCWoTjz8Z4TCcLFjjGhf//R7P61/Vk9VaM3EMZ9LNgY4+2ysEv9H3e2qzc79" +
                        "FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY9rhsLXA7PsmS327LGu9ldn/AFu39L/O9qub+tX1VZ1RjszDa1ue1" +
                        "sPYYDb2gR6dk+1tzW/zVv8A1q39H/MpTe+tHTHdT6Jk49bd17QLaByd9Z3hrf8AjG7qv+uLE/xedXZbi" +
                        "2dJsd+kpJuxwe9bzNjR/wAVc7/wZR+qn1oex7ekdVc4ODvSx7rJDg4HZ9kyd3u9Xd7Knv8A+Ks/Sfzuf" +
                        "9Yeg3DOf1X6ul2RU+x7Lm4jpfTfrXkNb6Z37LdzvU/0f/Eq5y0oZMcuXmeHiPHjkf0ZtTmYzx5I54Di4" +
                        "RwZIj9KH/oLc+t31rNzn9F6TNjrD6ORawbi4u9hxcdo+m9/0LH/APW6/f8Azep9UPquej1Oy8szn5DQ1" +
                        "zAZbUyd3ogj6dm7+ds/7a/0lsPqn9UmdJY3NzWtf1BzYa0QW0tI/m6/3rXf4W3/AK1V+j/numQz5oRh7" +
                        "GD5P059csv+9ThwylP383z/AKEOmKP/AHzyn+Mj/kGr/wAMt/8APdyzx/4tOjf+FKv/AD1kLpfrLhdOz" +
                        "sGrG6iLfRsyKmMfToW2PPo1Ocf9G51npfR/wiouZ9Xj1M9UYLTk9IfX08VMMtLn7aKNrHe6za7KdTv3/" +
                        "mWf6NPw5QMIjUiayx0Gl5eGMFmXETmMrG+OXj+r9UnS+sdbLOgdRbY0OAxrXAHxa02Md/Ze3cuAz22u+" +
                        "pXTH8sZk3s+BcbXMH4PXpNzcTPoycMvbYx7XU5DWOG5u8bXNdt/m37XKhi9L6JgdKf0iyxl2I0Ofa3Ie" +
                        "wna5xJfZ9Da1tv0H/vpnL5xiiAQTIZBPh/q8MoFfzGH3JEggAwML/rcXE4n12vx+q9AqzenXNyace5r7" +
                        "thna17X17rWfTr2vez2Pas/pnScTqGIy9v1jtpdtAsosftdWQI9Pa69vtb+Y76C6fpv1f6D0jJu9A+/q" +
                        "DdgotsDwWDc411Vv91jPd7t/qrLZ9UPqv1Kyy2oXYm263HFLXtDS+lzmWGllnrez2bv6n+DU2PPjjAwj" +
                        "KcYRPFHJwRlpP8ARlGX/SYsmGcp8ZEZSkOGUOOUfl/SjKKbof1Trxep19XZ1Q55Zva4wHbiW+l7rvUs+" +
                        "gsf6lvY3pHXKS4C30i70zztDLGF3+f7V1n1e6R0vpWLbX02w3V2WF1jy8P9wAr2/ow1jdm1Yoq6CepV9" +
                        "Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67H13ei79Jucxn+j/AEv6RNjmM/djIynpDhlwxh/NH3OGUfT/AFkyw" +
                        "iAxSiBD5+KNymP1w4OLi9TmdDv6NT9TLf2xW63GszSxjawS/wBQsrcx1TgW7HMa17t2/wD9Jqbfq3jU1" +
                        "Oz/AKvdebTWQCfUs9OPzv091JZt/wCLuxV0ON0zoXTMb/m/Ywvxslj8ix+Q5paYfTTD3+zbbvtp9H02f" +
                        "4P/AEqo2/UH6tOyvT9e6u18uZji1hO0fuerXZfs/tp45iHFM8U4CcjP5Rkxzh/c/RWnl5cMBwwmYxEfm" +
                        "9vJCX99z8Tr3UOp/V/reJnObe/EoJbksAAcHb2w7YG1u/m/0T2s/SVp8e7oDfqb0ynrTXll1twpfUCX1" +
                        "uFt2+8Ob+bW13v/AJzf/obF0tHRug09Pv6RjhjKr6ybw182Frhs9d7yXWdva/6CVHROiO6WOi7W5WNjH" +
                        "3Me7c9rnE2+o57Nr6rXeo53s9NRnmMWvDGcI+4MlQ9BEeDg4h+7614wZNLlGcvbOP1eocXHx1/ivLO+r" +
                        "32Co53Qev1V45M/pLRW3/rllRdRa7/jMZbv1L67m9YwrvtoDrcZ4b6zRtDw4bvc0ez1Gfn7P5CpD6ifV" +
                        "dzftTcq00au3C2sshs7/wBL6e7azb7v0q6Xp2DgYGK2jp9basf6Tdhndu/wheS51m799zkuYzY5YzGzk" +
                        "nek5QGOUK6GX6SeXw5I5AdMcK1hGZnGd9h+i//S9VSSSSU859afqs3qbHZuE0N6g1vuZoG3tA/m3z7W3" +
                        "N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/bMloFlTXH062j6Ne1p9O25v59//AFun9H/O9AkkpSSSSSmn1jEsz" +
                        "Om30VfzxbvokwPVrIux/d/x9dax6OgZwzMG6ws2ms3Z/BjKab76TW389n2nqWRb/wCg1K6RJWMXu+2eG" +
                        "uG5Xffh/l/hsGX2uMcV8VDbtxPPfVvo+Tg2VnKqsZbj4/2Y2bqDS/3Nfuq+z11ZVm5zPVa/N/Ss9a78+" +
                        "yyxNX9XpycO23FpdszM2/JcQ0ksudkOxi7T9J9PG9v+D/60uiSUkve457XR4uHi/dybf8//AA1kfa4I3" +
                        "fDYrir96Dx7+hda+wY2GKvdTTS2t7XVQx9V773NtvsacrZXS3H+xNxfz/V9ZGf0DqxdnbdjhnjNqrc92" +
                        "uOLn2XU20bR/NZstZm/4f1PQ/wdXps6pJSH39f5v5pXX7ywezp8/wAsd/3XH6BgWYzr7rabcey1tTCyw" +
                        "4+39EHAek3p7Kq9rN/pepa31X1sq/0aDh9KzqmfV8WMAPTqnMyvcDtJo9D2/v8A6RbySgPucU/l21q6r" +
                        "2p/L/1NlHBwQviqxV1xX7sPm/w3K6j0r7b1FlttNd+OzEvqAsAcBZY6nb7HfvVss96yW9H605+A26oE4" +
                        "pwXG1rqoikMbl+va5js27K3euyv07Psv2d/+k9Su3q0k7F7vCK4ar08d9/0UZPb4jfFd68NPGdHw3W4O" +
                        "LkV4bK6sazNvtzpZusa4ZWP6DWt/TOc99jHXer+h2Y1f857PSWH0XMzelY/2XFrwQOmCg2hzR9oNpx79" +
                        "n6Nr3+h6dFvqPyW7/Uy3/oLa/V9Xs0lMfd4jQjxcWms/wB7J+96f32KPt8Isy4eHXSP7sP3fV/3bzmL0" +
                        "N77Me27Hs2/bftGRVlGhwhuLbjV3V1YTW4388+ln+l/ReqtDpFGVhMbhHGbXjB2TY2xr27WB2Q9+Ljtp" +
                        "H5rsa3f/wAF6fpLTSVfN7lHj4eHSq4uH9Ph4WfFwacPFeu/Df6PFb//2ThCSU0EIQAAAAAAVQAAAAEBA" +
                        "AAADwBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoAG8AcAAAABMAQQBkAG8AYgBlACAAUABoAG8AdABvA" +
                        "HMAaABvAHAAIABDAFMANQAAAAEAOEJJTQQGAAAAAAAHAAcAAAABAQD/4Q3QaHR0cDovL25zLmFkb2JlL" +
                        "mNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a" +
                        "2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgW" +
                        "E1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPg0KC" +
                        "TxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4L" +
                        "W5zIyI+DQoJCTxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zL" +
                        "mFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuM" +
                        "C9tbS8iIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY" +
                        "2VFdmVudCMiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6c" +
                        "GhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bXA6Q3JlYXRvclRvb" +
                        "2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyIgeG1wOkNyZWF0ZURhdGU9IjIwMTEtMDEtMThUM" +
                        "Dk6NTE6MDYtMDY6MDAiIHhtcDpNZXRhZGF0YURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiI" +
                        "HhtcDpNb2RpZnlEYXRlPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiB4bXBNTTpJbnN0YW5jZUlEP" +
                        "SJ4bXAuaWlkOjM0NEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiB4bXBNTTpEb2N1bWVudElEP" +
                        "SJ4bXAuZGlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiB4bXBNTTpPcmlnaW5hbERvY" +
                        "3VtZW50SUQ9InhtcC5kaWQ6MzM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIGRjOmZvcm1hd" +
                        "D0iaW1hZ2UvanBlZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9I" +
                        "nNSR0IgSUVDNjE5NjYtMi4xIj4NCgkJCTx4bXBNTTpIaXN0b3J5Pg0KCQkJCTxyZGY6U2VxPg0KCQkJC" +
                        "Qk8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDozM" +
                        "zRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5OCIgc3RFdnQ6d2hlbj0iMjAxMS0wMS0xOFQwOTo1M" +
                        "TowNi0wNjowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzI" +
                        "i8+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wL" +
                        "mlpZDozNDRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5OCIgc3RFdnQ6d2hlbj0iMjAxMS0wMS0xO" +
                        "FQwOTo1MTowNi0wNjowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXa" +
                        "W5kb3dzIiBzdEV2dDpjaGFuZ2VkPSIvIi8+DQoJCQkJPC9yZGY6U2VxPg0KCQkJPC94bXBNTTpIaXN0b" +
                        "3J5Pg0KCQk8L3JkZjpEZXNjcmlwdGlvbj4NCgk8L3JkZjpSREY+DQo8L3g6eG1wbWV0YT4NCiAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgC" +
                        "iAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg";
                    resourceString += "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICA8P3hwYWNrZXQgZW5kPSd3Jz8+/+IMWElDQ19QUk9GSUxFAAEBAAAMS" +
                        "Expbm8CEAAAbW50clJHQiBYWVogB84AAgAJAAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAA" +
                        "AAAAAEAAPbWAAEAAAAA0y1IUCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAARY3BydAAAAVAAAAAzZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZW" +
                        "gAAAhgAAAAUZ1hZWgAAAiwAAAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZ" +
                        "AAAA0wAAACGdmlldwAAA9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQ" +
                        "wAABDwAAAgMZ1RSQwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggS" +
                        "GV3bGV0dC1QYWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAA" +
                        "AAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAAA" +
                        "AAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNjAAAAA" +
                        "AAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAuSUVDI" +
                        "DYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxO" +
                        "TY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "GRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAA" +
                        "AAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAA" +
                        "ABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUI" +
                        "GN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMAKAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0Ac" +
                        "gB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBD" +
                        "QETARkBHwElASsBMgE4AT4BRQFMAVIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4" +
                        "QHpAfIB+gIDAgwCFAIdAiYCLwI4AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDA" +
                        "AMLAxYDIQMtAzgDQwNPA1oDZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEc" +
                        "QR+BIwEmgSoBLYExATTBOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGN" +
                        "wZIBlkGagZ7BowGnQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIW" +
                        "ghuCIIIlgiqCL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3" +
                        "ArzCwsLIgs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNw" +
                        "w3eDfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURE" +
                        "xExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0Uz" +
                        "hTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihivGNUY+" +
                        "hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdm" +
                        "R3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIir" +
                        "yLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oP" +
                        "yhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuT" +
                        "C6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402" +
                        "DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76" +
                        "DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDf" +
                        "UPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLm" +
                        "kviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQ" +
                        "lSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSdde" +
                        "F3JXhpebF69Xw9fYV+zYAVgV2CqYPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnP" +
                        "WeTZ+loP2iWaOxpQ2maafFqSGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxl" +
                        "XHwcktypnMBc11zuHQUdHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8g" +
                        "XzhfUF9oX4BfmJ+wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IB" +
                        "IhpiM6JM4mZif6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUI" +
                        "JSKlPSVX5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2" +
                        "KFHobaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuL" +
                        "a6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsuu6e8I" +
                        "bybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt" +
                        "8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8" +
                        "dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0" +
                        "Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V" +
                        "/rn+3f8B/yY/Sn9uv5L/tz/bf///9sAQwABAQEBAQEBAQEBAgEBAQICAQEBAQICAgICAgICAwIDAwMDA" +
                        "gMDBAQEBAQDBQUFBQUFBwcHBwcICAgICAgICAgI/9sAQwEBAQECAgIEAwMEBwUEBQcICAgICAgICAgIC" +
                        "AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI/8AAEQgAgQFiAwERAAIRAQMRAf/EA" +
                        "B8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSI" +
                        "TFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVV" +
                        "ldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFx" +
                        "sfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEB" +
                        "QYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwF" +
                        "WJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDh" +
                        "IWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6" +
                        "vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/v4oAKACgAoAKACgBrukaPJI4jjjBeSRyAqqBkkk9AKAPxW8Z" +
                        "f8ABdD9lbwv8SbvwbpfhLxN4y8I6ZdPpV/8SfD8OnfY5SjlDPZ29xcxyzQZ5DtsJGSqkYzHOjRUmfsH4" +
                        "J8aeF/iP4Q8NePfBOsReIPCXi+yt/EPh3WrIny7i0uoxLG4DAMpweVYAqcggEEVZm0dRQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFAGD4q0GHxV4Y8R+F7i5ezt/ElheaDPd2uPNiS8t3t2dN3G5Q+RnvQB/ET4z/wCCXH7b3hT4k3vw5" +
                        "svgZqvi/ZdGx0jxp4ZWKXQb2BpCsVwL6R0hgR1G4rOyMmcOFNY8rOpVEf2CfshfBXVP2dv2afg98GNd1" +
                        "OPV9d8DaSllr19ZktAb65nkvrhIWZULRRyzskbFQSoBIB4rVI55O7PpCmSFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQB/nr/APBRD9rHxn+1T+1H8T/Ft14vvdU+HfhzW77QPhBohuJRY2GjafcG0tpre" +
                        "AMUjkuFiE0rjksx5wBj/aDwV8OsLw9w/h6KpKNecFKq7auUldpvdqN+VLZJH+KXjd4j4riLiHEVnVcqE" +
                        "JuNJX0jCLsmlsnK3M3vdn9T/wDwQ4+LnxT+L37Ef2z4qa9eeKLvwR4s1b4f+Dtf8QSzXF5Podpp2m3kK" +
                        "yTzszyiGa7mhQk/KiKg4Wv8+fpZcN5flvFfLhIKCqUozko2SU3KadktFdRTfdtvqf6HfRI4lzHM+E+bF" +
                        "zc3TqyhCUrtuCjBq7ers5NLskl0P2Jr+ZT+nwoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAo" +
                        "AKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAgurq2sra4vb24S0s7RHuru7unWOKKK" +
                        "NS7O7OQFVQCSScAUAfLH7XXxs0/4Y/sbfHL44eGtYhuYdO8Fajr/gjXbKVWgnu9SsDBpcscinDLJNcRF" +
                        "SOoPFfe+FvDyzbiPBYRq8Z1Y83+FO8v/JUz4DxV4ieU8N47Fp2lTpS5f8TVo/8AkzR/nK1/uCf4Yn92/" +
                        "wAD9Vs/+CfH/BJDwj47fRobjWfh74AX4nXWjahvjS68SeJj/asdtcuuHx9t1FIGIOQowvAFf5F8WYeXG" +
                        "fiRVw/M1GrX9nddKdP3W10+GLkvPc/1/wCEsRDgrw1pYjkTnSoe0s+tSp7yT6/HNRflsfT37FX7avwm/" +
                        "be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui/A+KfhZmPCmYvDYlXg7" +
                        "uE0vdnHuuzX2o7p9003+geFPitlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQBBdXVtZ" +
                        "W1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/lI/4Kc/8ABTrUv2gNV1D9mv8AZv1d4fhK1wND8" +
                        "X+NNPk8mXxbcmQRfZoHJXbpwbgkkeeeT+7+/lKRvCFtWfpJ/wAFrtVh+Gf/AATV8QeBtLmMFlr+peD/A" +
                        "Ia2wwdz29jexamFztbGV0wZ5GRxk5wf6c+iTlixHGlGbX8KFSX/AJLyf+3f1ufy79LvNHh+Cq0E7e1nT" +
                        "j/5Nz/+2/1sfxafDjwlL4++IfgPwLCzrN411nS/CUTQY3htSvorMFcgjOZOOK/1TzzMlg8FWxD2pwlL/" +
                        "wABTf6H+UOR5a8bjaOHW9ScY/8AgTS/U/tB/wCC7etaj4U/4J76l4e0DT7g6P4n8T+F/CGtDTY5XgtdO" +
                        "tpJtVjacoGCRefYQoGYgb2QZyQD/lz9EXCwxHGkalSS5oU6klfdydou3d2lJ6dE3sf6ofS/xdTDcFSp0" +
                        "4vlnVpxdtlFXkr9leMVr1aW9j+RH9mH9p74s/sj/FnQ/i/8INcOm63pp+yazo13vfTtZ053VprG+hVl8" +
                        "yGTaO4ZWAdCrqrD/Sbj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH+aPh/4gZlw1mUMbgp2mtGn8M49Y" +
                        "yXVP707NNNJn95/7FX7avwm/be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig" +
                        "8K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12" +
                        "aaX2HX5mfpwUAFABQBynjjxz4P+GnhPXPHfj7xHaeEvB/hqH+0Nd8Ra5KsFtbRbhGCzN3ZmCqo5ZiAAS" +
                        "QKASPI/gN+1f+zz+05Brk3wM+KFl49fw2yJrthbw3tje2yyMyJI9rqcFtN5bFSFkCbTjg0k7jcWj6Hpi" +
                        "CgAoAKACgD4G8R/8FQv2EPB/wAVdc+Cviz9oG08NfEbw1qk3gzX9J17RvEtpaWmo28xgkjl1GfTlslVX" +
                        "GDIZ9nfdiv2LA+APF+Jy6GOo4JzoTipxalTbcWrpqKnz7dOW/kfjWO+kFwfhcxnga2NUK8JOEk4VElJO" +
                        "zTm4cm/Xmt5n3rFLFPFFPBKs0EyrLDNEwZHRhkMpHBBHQ1+Pyi07Pc/Y4yTV1qmSVJQUAFABQAUAfFP/" +
                        "BRj4q+Mvgn+xJ+0T8Svh9qj6H4z0DQ1tdA1u2JWaym1K/t9KNxCw+7LEtyXjbswB7V+qeCPD2FzXivBY" +
                        "XEx5qUp3kujUU5Wfk7WfkflPjjxFisp4Tx2Kw0uWrGFovqnKSjdeavdeZ/IT/wSt+IXj7xZ/wAFHv2cL" +
                        "rxT441jxLc6rq2qS6pceINTvbyS5b/hHNQOZWuZHLngctmv9KPpCZNg8NwPjlSpQgoxjblilb347WWh/" +
                        "md9HfOsZieOsC61ac3Kcr80m7/u5b3ep/dxret6N4a0bVfEXiLVbbQtA0K2m1jW9b1iaO2tLO0tozNLN" +
                        "NLMVRI0RSzMxAAGTX+QZ/sOfPHwR/bL/Zj/AGjtf1vwr8Fvi9p3jjxJ4eja81PRLeK+s7nyEdY2mhTUY" +
                        "LczxKzKGki3KCRk8ikmmU4tH03TJCgAoAKACgD5d+M37an7Lf7PfizSPA3xi+MumeC/FutJHc2mhXEd7" +
                        "dzxQy52SXP9nwTi2jbadrzlFPY0m0Uotn0vp+oWGrWFlqulXsOp6XqcMeoabqWnyJNBcQTIJI5I5IyVd" +
                        "HUgqwJBByKZJboAKACgAoAKACgAoAKAILq6trK2uL29uEtLO0R7q7u7p1jiiijUuzuzkBVUAkknAFAH8" +
                        "n//AAVG/wCCo1z8cLnW/wBnv9nvW3tPg1aO2n+OfHOns0cviuWNsNBAwwV05SOT1nPJ/d4D5SkdFOnY/" +
                        "Jr9m7wB4n+J3x4+E3gvwj4an8W6xquvaW50XT4vNL2sF5HPcPJnCrFHEjPI7EKqgkkAVKLk9D+kj/g4e" +
                        "nnh/Yn+G8cUzxR3XxP0SC5SNiokQeFvEUoVgOo3IrYPcA9q/sT6FcE+Kq91thp/+nKR/GP02ptcKUEnv" +
                        "iYf+m6p/LR+xNbQXn7Zn7I9pdQrcWt18TvAVtcwSgMjxv4qsVZWB6gg4Nf6CeKs3HhfMmnZrDVv/Tcj/" +
                        "PTwngpcU5Ymrp4mj/6cif6K/jDwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8O" +
                        "o5r/EzLMzxGCxEK9CbhUg04yTs01s0z/cDM8sw+Nw86FeCnSmmpRaumnumj+In/AIKh/wDBLzxT+xZ4p" +
                        "uPiR8N7e68U/s0eKbry9H1iTfPdeGLqd/k07UX5JjJOLe4P3/uP+8wX/wBW/AHx+w/FOHWGxLUMfBarZ" +
                        "VEvtR8/5o9N1pt/k19IL6PuI4UxDxWFTngJvR7um39ifl/LLrs9d/gf9mH9p74s/sj/ABZ0P4v/AAg1w" +
                        "6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7p" +
                        "tH434f+IGZcNZlDG4KdprRp/DOPWMl1T+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ET4d6h" +
                        "Kj6joGouhPlyYC+ZBJtYwThQsig8K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W" +
                        "8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpwUAFAH5ff8Fd/A3jb4l/shT+A/h54cvfF3i7xP4p8O6" +
                        "fpPhzw/C89zdMJ5JiAifwqELsx4UAsSAM1M9i6b1PgD/gk5+wl+1z+zT+0xqnxC+Mnwuk8C+B9U8J6p4" +
                        "afUhr3h2+826ub6wuoYXt9K1C5m58gt8yYBXkg4qYxaZdSaaP6QK0MQoAKACgAoA/ztP+CiX/J9f7Wn/" +
                        "Y++I/8A04yV/td4Kf8AJI5b/wBeKf8A6Sj/ABE8bv8Akr8y/wCv9T/0pn9137E1zcXn7GX7I95eTvdXd" +
                        "18MfANzdXVy7PJJI/hWxZmZmJJYk5JPWv8AI7xVhGPFGZJKyWJrf+nJH+vnhRUlLhbLJSd28NR/9NxPp" +
                        "2vgj78KACgAoAKAPzi/4K4/8o6P2nv+wVpf/qR6dX7h9G7/AJLfAf4pf+m5n4Z9JX/kh8w/wx/9OQP5I" +
                        "f8Agkd/ykX/AGYf+wrqn/qOajX+j30kf+SIx/8Ahj/6cgf5sfRq/wCS4y//ABS/9NzP7FP+CleieIfEv" +
                        "7EHx58OeE9Lu9b8Sa/Z6Tomi6LoUUs95eT3XiGwgWCKOAF3aTdt2gc5xX+N8tj/AGchufiZ/wAE1f8Ag" +
                        "np+2d8Dv2wPg18X/iZ8H5vBvw40eLXz4j1mfXfDcskUWoeF9RsrdZbOz1GW5O64miBXyiVOCwABIiMXc" +
                        "1nNNH9TVamAUAFABQAUAfyP/tvfsNfta/tNftt/tLeMvg78H7/xj4XtdW03TF8SX99pWk2cz2/h7T4jH" +
                        "bza7d2azeXgKwiLbcYOMYrKUW2dEZJI/o//AGKvh/45+FP7KfwL+HHxK0xtF8c+DNBt9B8RaRLdW16ba" +
                        "WB3VYvOs5Z4nCptA2OQBwOlaR2MZPU+oaZIUAFABQAUAFABQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUa" +
                        "l2d2cgKqgEkk4AoA/k//wCCo3/BUa5+OFzrf7Pf7PetvafBq0dtP8c+OdPZo5fFcsbYaCBhgrpykcnrO" +
                        "eT+7wHylI6KdOx+Nnwu+F3jz40ePPDfwz+GfhufxX408VzjT9H0fTwMscbnkkdsLHFGoLySOQqKCzEAV" +
                        "CRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiuCNfiD8QVjOFGRJ/Z+n+YA0dpGwGTgNKwDuBhETaMbHNOdz49" +
                        "/4OC9Dm1b9hrwxfxbtnhj4h6BrlzsUEbJNG1nTRuJIwN12OfXAr+tvoZ4tU+LakX9uhNf8Ak1OX/tp/I" +
                        "f008I6nCNOS+xiIP/ySpH/24/ku/ZU8RxeD/wBqH9m7xbO6RQeFvH3g/wARzSXIZo1Sx8Q2lyS4QglQE" +
                        "5wc1/o14h4F4nh/HUVvOhVj98JI/wA3fDrHLC8QYCs9oV6UvunFn+k5X+GJ/u2c34w8H+FviB4W1/wT4" +
                        "20C18U+EfFNrNoniHw9rcKT2t5azoUeORHBBBB/DqOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86" +
                        "FeCnSmmpRaumnumj+In/gqH/wAEvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t" +
                        "7g/f+4/7zBf/VvwB8fsPxTh1hsS1DHwWq2VRL7UfP8Amj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+" +
                        "X8suuz13+B/2Yf2nviz+yP8WdD+L/wg1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2H" +
                        "j7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH434f+IGZcNZlDG4KdprRp/DOPWMl1T+9OzTTSZ/ef+xV+" +
                        "2r8Jv23vhNafEX4dXY03X9NEWn/ABE+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurov+QPin4WZjwpmL" +
                        "w2JV4O7hNL3Zx7rs19qO6fdNN/7E+FPitlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFAH57f8F" +
                        "Qf2nPH/AOyV+yB43+K/wtW2i8fS3ul+D/DmrarClzDp0up3PlvdeRKGSV441by1cFN5BYMoKt+0eAPAW" +
                        "D4j4lpYTF39jaUpJOzlyr4brVJu12tbXs09V+KfSB4/xvDfDNbGYS3trxjFtXUeZ/FZ6NpXsnpe101o/" +
                        "wAa/wDgjd+3l+1v+0j+1xqPw8+N3xovvH3g2HwfrPiKLQtQstIt4xe217p8UUu6xtIHyqzOMbsc9K/p3" +
                        "6TvhBw3kXDccTgcKqVV1YxunJ6NSutZNdEfy79F3xi4lz3iWWGx+KlVpKjOVmorVOKT0in1Z4B/wUh/4" +
                        "KQ/ttfBb9tr4+fDD4YfHzUPCXgPwlqGn2fh3w7Z6foc0drHNodldOqvdWUshzJKzfMx619l4HeB3Cma8" +
                        "KYPFYrBxqVqkZOUnKavacl0klsl0PjPHTx04syrizGYTCYyVOjTlFRiowdrwi+sW92+p8Qf8Pcf+Ci//" +
                        "Rz2q/8Agr8Of/K6v1f/AIlu4I/6AI/+BVP/AJM/Jf8AiZXjj/oYS/8AAaf/AMgegfD/AP4LW/8ABQ/wN" +
                        "q0N/qHxhtPiNpyP50/hv4geH9FmtJjwMNLplvY3Sjjok6/nXj5z9FfgrF03GOGdKX80JzTXyk5R++LPZ" +
                        "yX6VvG+DqKUsUq0f5Zwg0/nFRl90kfux+zL/wAFVPAv/BQTwrdfAS88caj+xn+1FrcYXwL4n8Oy2GoaZ" +
                        "qOoxoQgsm1aB45C7ffsZ0DspxFMzjcv8jcefR6xfBmIWYRpRzDL4/HGScZRj15uV3Vuk4uyesopaP8Ar" +
                        "/gH6ROD40w7y6VaWX5hJe5KLjKMpdOXmVnfrTkrtaRk3qvxu/aj/bV/4KzfsjfGPxJ8GPit+0ZqdtrWj" +
                        "EXmj61ZaV4eNhrOlyuy29/Zu+mgtDKEPUBlYMjAMrAf074f+FfhzxJllPG4TAxcJaNOU7xkt4y9/dfc1" +
                        "ZrRo/l3xC8VvEjhrNKmBxmOkpx1TUYWlF7Sj7mz+9O6eqZ+RHjzx14s+J3jPxP8Q/Hesv4h8ZeM7248R" +
                        "+J9duUhjku726kMssrLAkaAsxJwqge1f0llGUYbAYWnhsPHkpU0oxWuiWy1uz+aM4zfE5hiqmJxEuerU" +
                        "k5Semrerell9x9m+Dv+Cof7enw/8IeFfAfg/wDaK1LRPCPgnTbHwj4W0WDTdAkSz07TbVLO2gVprB3YR" +
                        "xRqoLMScckmvy/M/ADg/G4mpiK2BjKpUk5SfNPWUndvSVtW76H6llf0guMcFhqeHoY6UaVOKjFcsNIxV" +
                        "ktY30Stqf1uf8Ejv2qviz+1v+yUfiF8bDHd+M/CfiPU/h3N4shtY7Ia3a2NjY3yXzxQJHCHzeNC5iUIW" +
                        "jJwDkV/nD9JDw8y7hviP6tgbqlOnGfLe/I25Llu7u3u3V9bP0P9J/o1eIuZcS8N/WcfZ1adSUOa1udJR" +
                        "fNZWV/ecXZWvHvc/Pb9vP8A4Lwaf8PPEOufCj9jvSNP8aa3o7yaXr/xp8Tq9zo8NwqlHTSrSJ0+0tGx/" +
                        "wCPiVhFuUhY5UIev2jwg+iHPG0YYvOpSpwlrGlHSTX9+WvLf+Ve9Z6yi9D8U8YvpgwwNeeDyWMak46Sq" +
                        "y1in/cjpzW/mfu3WkZLU/CXxV/wU/8A2/vGOpy6tqv7VHiqxuZSzmDwrdQ6HajdjhbfRorWIAY4+X+tf" +
                        "1zl3gHwbhafJDL6TX95Ob++Tb/E/kDMfpAcZ4qpzzzGqn/dagvugor8D374Df8ABa/9uj4OatYnxV49h" +
                        "+OfhGJ0F94X+KFrBLO8X3X8rUrNIbtJCPutI8iggEoeQfjuMPorcJZnTfsqLw1TpKm3b5wd429En5o+0" +
                        "4O+ldxfldRe2rLE0usaiV/lNWkn6tryZ/WN+w7+3v8ABn9urwBc+Jvh9K/hzxr4cEUPj/4X65NG+paTL" +
                        "KPlkVkCi4tZCCI51UA4IZUYFR/nT4seD2acI4xUsT79KfwVEvdl5eUl1i/k2tT/AEd8JPGTK+L8E6uG9" +
                        "yrC3PTb96L7/wB6L6SS9UnocH/wVx/5R0ftPf8AYK0v/wBSPTq9j6N3/Jb4D/FL/wBNzPH+kr/yQ+Yf4" +
                        "Y/+nIH8kP8AwSO/5SL/ALMP/YV1T/1HNRr/AEe+kj/yRGP/AMMf/TkD/Nj6NX/JcZf/AIpf+m5n9pv7c" +
                        "nx08Sfs1fsm/G/43eDrG31DxX4F0lbnw5Bqys9st7e3sGmwyyopBdYmuBIUyN23GRnNf5a+E3CVDPeI8" +
                        "Jgazap1Ze9beyTk0u17Wv0vc/1U8XOL6+Q8N4vH0UnUpQ92+121FN97N3t1tY/m2/4Jgf8ABRr9tL4/f" +
                        "t5fBL4Y/Fv46Xvi/wAAeMH8UTeIfC82m6Ha285s/CGranAM2NlC6COeBHAVh90DpxX9y+Pvghwtk3CGL" +
                        "xWDwip1qfs+WXNNtXqwi95NO6bWvc/hP6P3jlxVnPGOEwmMxjqUantOaPLBJ2pTktopqzSenY/o+/bM/" +
                        "bP+EX7Efwpk+JfxRuZL++1KRtJ8DeBdGaP+09d1BVDmKASEKkcakNNM3youOrMit/D3hf4XZlxXmP1XC" +
                        "KyWs5v4YR7vu3sktW/JNr+6PFLxTyzhPLvrWLbbbtCC+Kcuy7Jbyb0S7tpP+Sn49f8ABcL9uH4u6nep4" +
                        "G8VWXwF8IyOwsvD/wAO7O3mvRFyF8/UtSjmnaQA8tD5Kn+6K/0d4P8Aon8J5bTXt6bxVXrKbaV/KEWlb" +
                        "yfM/M/za4x+lrxbmdR/V6iwtLpGCTdvOck3fzXKvI+OIf8AgoN+3NBqR1VP2t/iE10UEPlTeK9YktsKw" +
                        "b/j3knMOeOTsyRxnBNfpsvBnhJ0+T+zaFv+vcb/AH2v+J+Xx8auLlU5/wC0sRf/AK+St917fgfen7O3/" +
                        "Bd79sT4Vanp1n8Xp9O/aE8ExukV/Z+JLW20rW47cdfs2o6VDGpfvuuIZs9OOo/IONvoicM5jTlLBqWFq" +
                        "9HFuUL+cZN6f4ZRP2Lgj6YPFGXVIxxrji6XVSSjO3lOKWv+KMj+sj9k79rT4Q/tl/Cez+LXwf1KeXTBO" +
                        "2ieI/DutxLBqejanHEkz2l1GjOu4LIrK6MyMpBDHkD/ADo8RfDnMuF8xeDxkVzWvGS1jKOylF/JqzSae" +
                        "6P9H/DjxIyzinLVjMFJ8t7Si9JRlu4yWq2ad02mtmfzZ/8ABUn/AIKk/thfDL9sL4kfBj4MfEg/CvwJ8" +
                        "Kzp+hWlpoWn6Xc3Go3FzpdtqM11dTajbXDbt1wUREKqFUcFiSf7m+j99H7hnH8M0MbjaHt61fmbblJKK" +
                        "UnFJKLXa7bu232sj+EvpC/SF4ny/ievgcDX9hRocqSUYtybipNtyT72SVkku92f0R/sE/Evxf8AFT9jH" +
                        "9n/AOKHxM8RN4h8YeKvDseueKvEt+tvA1xN50oaVxAkUa/KozhQOK/inxgyLDZfxRjMLhYclKFS0Yq7s" +
                        "rLTW7P7c8HM+xWY8K4LF4qfPVnTvKTsru710sj8QP24f+C+GpaD4q1z4bfsY6PpuqWGiSyaZqHxv8WQt" +
                        "ewXk0ZKu2kWe5EaJWHy3E+4SclY9u12/q/wn+h7TrYeGKzuUouSuqUXZpf35b37xjZrrK90v5M8W/pkV" +
                        "KOInhcjjGUYuzrSV03/AHI7W7SldPpG1m/xJ8Y/8FKv29vHN1dXmtftX+M7KW82+cng7VpPDsQ2sGGyL" +
                        "w+LJI+RzsUZHB4r+q8s8C+D8JFRhl1FpfzR5/xnzN/M/k7NPHjjLGScqmZVk3/LLkXyUOVL5HZ/DT/gr" +
                        "B/wUB+F+oQXmmftIaz4rtUZXutI+JYtvEdvcIoA2M2rRzTIDt5MUiN15yTXl579HXg3MIOMsDCD707wa" +
                        "/8AAWk/mmvI9XIfpHcaZfNSjjp1F2qWqJ/+BJtfJp+Z/Rb/AME9P+C1Xgv9qPxT4e+Cnx18L2/ws+NPi" +
                        "ORdM8J6z4daaTw3r92VJECC6eSayuHIxHFI8iueBIGKof4m8afosYrh/Dzx2AqOthYK8lK3tILvpZSiu" +
                        "rSTX8tk2f3B4J/SswvEOIhgcwpqhi5u0XG/s5vtrdwk+ibkn/NdpH7sV/Ix/XwUAQXV1bWVtcXt7cJaW" +
                        "doj3V3d3TrHFFFGpdndnICqoBJJOAKAP5P/APgqN/wVGufjhc63+z3+z3rb2nwatHbT/HPjnT2aOXxXL" +
                        "G2GggYYK6cpHJ6znk/u8B8pSOinTsfjZ8Lvhd48+NHjzw38M/hn4bn8V+NPFc40/R9H08DLHG55JHbCx" +
                        "xRqC8kjkKigsxAFQkaN2P7Uf2Af2AfAf7FPgPe/keK/jV4rgjX4g/EFYzhRkSf2fp/mANHaRsBk4DSsA" +
                        "7gYRE2jGxzTnc/QmqIPzd/4K5fDmb4l/wDBPT9o3TLODztR8MabZfEazYAkxp4d1W21a6bA/wCnWCYe2" +
                        "c1+5fRuztYDjTAyk/dnJwf/AG/FxX/kzR+FfSVyN4/gnHRiryhFTX/bklJ/+Spn8CFtcz2dxb3drM1vd" +
                        "Wrpc208RKukiMGVlI6EEZFf7EzgpRaaumf4005uMk07NH+l78DPiVY/GT4L/Cf4s6dIklp8SPDujeNU8" +
                        "nojalp8V06YwMFGcqQRkEYNf4S8W5FPK80xODlvRqSh/wCAyav89z/enhHPoZplWGxkdq1OM/8AwKKdv" +
                        "lseqV88fRHN+MPB/hb4geFtf8E+NtAtfFPhHxTazaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmu7LMzxGCxE" +
                        "K9CbhUg04yTs01s0zhzPLMPjcPOhXgp0ppqUWrpp7po/iJ/4Kh/8EvPFP7Fnim4+JHw3t7rxT+zR4puv" +
                        "L0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf8A1b8AfH7D8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0" +
                        "gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf2nviz+yP8WdD+L/AMINcOm63pp+yazo13vfTtZ05" +
                        "3VprG+hVl8yGTaO4ZWAdCrqrD9h4+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR+N+H/AIgZlw1mUMbgp" +
                        "2mtGn8M49YyXVP707NNNJn99n7G/wC1f4E/bO+A/hn43eBLaXSE1CSbQfFnha/dZLjRtaswhubR5EAWQ" +
                        "ASJJHIAN0boxCklR/jt4neHeM4XzepgcQ1K1nGS2lB7St02aa6NNXa1f+ynhd4jYPirJ6ePw6cb3jKL3" +
                        "jNbxv13TT6pp2T0X1NX58foZ+M//BeL/lH94h/7Gnwz/wClMlf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+v" +
                        "tP82fh//wAG/wB/yfXq3/YheIP/AE46XX9YfTJ/5JGP/X+H/pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5" +
                        "SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy/8ATkz8++kr/wAlxmH+KP8A6bgf0P8A/BNP9gP9jb4t/sOfs" +
                        "/8AxF+JP7Pfh/xh438T6dqN1r/iTV4Z2ubqSLXb62RnKSqMhI1UcdBX8V+O3jFxPlvFmNw2FxtSnShKP" +
                        "LFNWV4Rfbuz+2vAbwa4XzLhHBYnFYKnUrTjLmk07u05Lv2SPXPj7/wRG/Yf+Lvh2/g8B+CpvgR41Mbf2" +
                        "T4s8AXd5LbLMANguNOv55beSMEfMIxG5z98cV83wd9K3izLa6eIqrE0usZpXt5TSUk/XmXkfS8ZfRN4S" +
                        "zOg1h6TwtXpKDdr+cJNxa9OV+Z/H3+07+zd8V/2Mfjprfwk+IQOneKfC0kGveGPFOhvLHb6lYSSF7PUr" +
                        "GX5W2MYzgjDJIrIcMhA/wBLuAuOcu4oyiGMw2tOd1KLteL+1CS+fo001o0f5kcf8CZlwrm88HidKkLOM" +
                        "le0o/ZnF9tPVNNPVM/rU/YQ134C/wDBVX9l3wH4q/ai+GGi/Fb4x/Aqa5+GfizUfEcBNw0rxwTx3qmJ0" +
                        "bbewLG0n8PnLJtAHFf5yeLuDzjw84grUsqxE6GFxKVSKi9Oqcf+3HdLryuNz/STwfxmTeIvD1Gtm2HhX" +
                        "xWGbpyclr0alp/OrN9OZSsfye/tv+DfC/w7/a//AGkvAvgnRYfDfhHwl4x13QfDeg6cCsFnZ2188cUUY" +
                        "YkhVUYGTX+inhRmmIxvDWBxFebnVnRg5N7ttK7Z/nF4tZXh8DxNj8PQgoUqdacYxWySbskf18/sj/8AB" +
                        "OX9h7xx+yl+zH418W/s1+G9d8VeL/h74L8UeJtcvobgz3moah4bs7u4nkKzAF5JJGZsDqa/zV8SPG7iz" +
                        "CcRY+hRx1SNOnXqxik1ZRjUkklp0Ssf6Z+Gvgbwli+HMvr1sBTlUqYelKTad3KVOLbeu7bueCf8Fnvjv" +
                        "o37HP7Ingj9mL4BaRZfDI/Gtr/wrBpXgqCLT4tM8KWCxy6osMdqFCNeSXccTsRl1eY5LEkfY/Rd4Qq8T" +
                        "8S1c0zCTrfV7SvNuTlUd+S7e/KotpdGo9D436U/GFLhfhmjlWXRjR+s80bQSio042c7Jbczkk31Tl11P" +
                        "51f+CeH7CPi79vH40SeCLHU5PCnw48HQxeIPir47hhEz2NlK7JBb26OQjXV26MsQY4VVeQhghVv7Y8av" +
                        "F3DcIZX7eUeevUfLThe131b68sd3bdtLS91/EHgl4P4njHNfYRlyUKa5qk7XsuiXTmk9FfZJvW1n/Y/8" +
                        "Lv+CXH7BXwo8OQeHtL/AGa/Dfi9lh+yXuv/ABRsYfE2o3TldrytLrCziN2PP7lY1U/dVRxX+Y/EH0gOM" +
                        "MxrupPHVKet1Gm3TivK0bXX+Jtvq2f6hcPfR74Oy2gqUMBTqaWcqiVST87yvZ/4UkuiR+fP7e//AAQ/+" +
                        "DHxB8DeI/iD+yT4aT4X/F3RIZdYg+Humzynw/4hESmR7aOG4ZxZ3LgYhaIrEWwroN3mL+zeD30r80wWL" +
                        "hh84qe2w0nbna9+Hm2viivtXvK2qbtZ/i3jH9EvKsbhKmJyen7HExV+RP3J26JP4ZP7NrRvo0r8y/mI/" +
                        "ZK/aP8AGv7H37RHgP4zeG2uYJ/CV8th418NoxhOqaJLKsWo6dMkmBmSMHZvHySqj43IMf3v4j8D4XibJ" +
                        "K2Cq2anG8Jb8s18Ml6Pe28W1sz+APDbjrF8MZ3Rx1K6dOVpx25oP44v1W19pJPdH9o//BVDX9J8V/8AB" +
                        "Mj9oHxRoF4uo6F4k8PaDr+i6hECFntLzXdMuIZBuAOGRwRmv8t/o+YOph+PcFSqK04VJxa7NQmmvvP9U" +
                        "vpEYylieAMbVpu8J04ST7pzg0/uP5Of+CR3/KRf9mH/ALCuqf8AqOajX+iv0kf+SIx/+GP/AKcgf5xfR" +
                        "q/5LjL/APFL/wBNzP63v+CuP/KOj9p7/sFaX/6kenV/nD9G7/kt8B/il/6bmf6T/SV/5IfMP8Mf/TkD+" +
                        "Ur/AIIu/wDKS39mz/ucf/UB1yv9DvpR/wDJCY7/ALhf+nqZ/nR9Ff8A5L3Af9xf/TNQ+o/+DhfX/E15+" +
                        "2L8PPDmpTyjwzoXgLTtQ8MWLhhAJL/WdTF1OmeC8jW6IxHaNR2r4D6F2DoR4Yr1Ype0lXkpPrpGHKvld" +
                        "terP0L6bGNry4ooUpN+zjQi4rp7058z9XZJ+iPMP+CVnhD/AIJf6/c6vdftqeLxF8UFvlTwf4V+JUl1p" +
                        "HgtbJFQrM17ZyrFLMXLB0vJI4wuMI/LD3/pCZlx/RjFZHS/2fl96VO0qt+3K1dK2zgm79VsfP8A0d8s8" +
                        "P60pPPav+0c3uxqXjSt35k7N33U2o26Pc/qw0v9iX9gHxp4TtpPD37MHws8QeF9VhVbDxB4Y8LeGpfPi" +
                        "B4eLULGDzCePvrLk+tf55YjxV4ywuJaqZhiYVIvWMqlTR+cW7fJo/0Vw/hPwZi8MnTy/CzpyWko06eq8" +
                        "pJX+aZ+UP7YX/BAT4aePAvif9j3xBb/AAh8TSzFtT8A+PrzUrvwzPG5LF7e5SK9vLV1JPykSoRgKI8c/" +
                        "wBE+Gf0xsfg/wB1nMHXp20nBRVReqvGMl5+6+7Z/OXid9DPAYz97ks1h6l9YTcnTfo7SlF+XvLskffv/" +
                        "BL39gzWf2DPgt4m8I+MvGNp4y+IPxB1ZfFXiu48MLONJsxBapaQW1q93HDLKFAZmleNMlsbBty3454/e" +
                        "L9LjDNKdajSdOjSjyx5rczu7tuzaXRJJvbfXT9m+j74O1eDsqqUa9VVK9WXNLlvyqyslG6TfVttK97W0" +
                        "1/kz/4K4/8AKRf9p7/sK6X/AOo5p1f6L/Ru/wCSIwH+GX/pyZ/m/wDSV/5LjMP8Uf8A03A/oR/t7xN4a" +
                        "/4N/wCHVPCNzNZ6wfhlFpb3FiCZVsb/AFdbC+xt5ANrNKGbsMntX8Y/U6FfxkcKyTj9Zvr3Ubx/8mSP7" +
                        "U+uYih4MKdFtS+rW07SlaX/AJK2fyQfBex+E2pfFXwLY/HbXtW8M/CG4v4l8fa54HtIr3VYLAAs32eKZ" +
                        "lXLMArPhiikuEkKhG/0f4prZlTy6tLAQjPEqPuKbtFvza++2l3o2k7r/NjhWjltTMaMcwnKGGcvfcFeS" +
                        "j5J/dfWy1Sk1Z/2w/sl/s7/APBIDx74WtLH9nbwD8MvjGIoBLdxeLrez8T+IgoC7pbq28VLPewFiM4aJ" +
                        "FHIUAcV/lb4jca+JeDxDlmVbE4fXTlbpw9E6doP72+7P9XPDbgjwyxmHUcto4bEaa8yVSfrJVLzX3Jdk" +
                        "dn8ef8AgkP+wn8c9Ev7SL4MWHwh8STIy6X4v+DEUegS2khHDfYrVRYyrnGVkgPHQqea8vhD6SfF2U1VJ" +
                        "4qVeHWNX30/+3n76+UvW56nGP0Z+D83pSisLHD1OkqXuNf9ur3H84+lj8uv2Xf+CC/xV+Df7Vfw8+Kvj" +
                        "74zeHdb+Fnwk8Q2HxE8NDwomqLr+q3Oi3seoWMdza3dstvao0sSmbZczHaCq/e3L+/+IH0v8uzTh6vhM" +
                        "PhakcRXpuEubl5IqacZNNPmlo3a8Y66vaz/AJ98PvodZjlfEVDF4jFU5YehUU48vNzycGpRTTXLFXSva" +
                        "UtNFvdf09V/A5/f4UAeKftFfBLR/wBoz4LeP/gvrviDUfC2m+O7I6XLr3hid4Lq3dZFmQkKyiWIsgEsL" +
                        "HbIhKnGchNDi7M/hb/ag/Zf+KX7JnxS1T4XfFHS/JuYd174b8SWSudO1rTi5WO7tJGAypxhlPzI2VYAi" +
                        "sWrHVGVz2//AIJ4ftpt+xT8aJvF2qeFoPFPgTxrbw+F/H8cNtA2sWtis/mifT7iQBleNvmeHcEmAAbDK" +
                        "jo4uwpxuj+2z4d/ETwV8WPBXhz4i/DrxHbeK/Bniu2TVNC13S33RTRNkEEEBkdGBV0YBkYFWAYEVscrR" +
                        "2lAHN+MfCmi+PPCHirwP4ktvtnh3xnpt94U1+z+X97ZajavZzp8wYfNHIRyDXdlmY1cHiadek7TpyUk+" +
                        "zi7r8UcOaZdSxmGqYeqrwqRcZLupKz/AAZ/mnfFr4beIPg58UfiH8KPFURi8RfDnWdS8F6vuRoxJNp12" +
                        "9qZEDZ+STZvQ5IKkEEg5r/dbhzPaOZ5fQxdL4K0IzXpJXt6rZ+Z/g1xJkVbK8wr4OsvfozlB+sW1f0e6" +
                        "8j+wT/ggh+0Xa/E/wDZN1L4JapqAl8Xfs+apNp1vaynMj+Htcml1Oylyxy2yc3MOAMKqIO4Ff5o/TC4J" +
                        "lgOI446Ef3eKinf+/BKMl81yvzbZ/px9DjjiOYcNywE5fvcJJq39ybcov5S5l5JI/dGv5JP67CgD+VD/" +
                        "gsP/wAFXtL8X2Pi79kH9m7VbfV/DF1v0D40/FC08u4gvtj4k0rTHO5TEGXE9wv3iNkZ25Zv9DfozfR2q" +
                        "YadPOczi41FrSpvRrtOfn/LHpu9bJf51fSd+kbTxUKuS5ZJSpv3atRap94Q8v5pddlpdv8Am68H+D/FP" +
                        "xA8U6B4J8E6BdeKfF3im6h0Tw94e0SF57q8up3CJHGiAkkk/h1PFf3HmeZ4fBYedevNQpwTcpN2SS3bZ" +
                        "/CuWZZiMbiIUKEHOrNpRildtvZJH98X/BL79jvX/wBif9lrTPhj4z1OHUPH/izVrv4n+PYNMfzbSx1LU" +
                        "bO0sRaQyDiQQwWUSu4+Vn3Fcrgn/Hrx98TaPFXEEsVQi1RhFU4X0bjFyfM10u5NpbpWvqf7I/R+8MK3C" +
                        "fD0cLXknWqTdSdtUpSUVyp9bKKTezd7aH6JV+KH7cfjP/wXi/5R/eIf+xp8M/8ApTJX9P8A0Q/+Syh/1" +
                        "6qfkj+W/phf8kXP/r7T/Nn4f/8ABv8Af8n16t/2IXiD/wBOOl1/WH0yf+SRj/1/h/6TM/kr6GH/ACV8v" +
                        "+vE/wD0qB8uf8Fcf+Ui/wC09/2FdL/9RzTq+/8Ao3f8kRgP8Mv/AE5M/PvpK/8AJcZh/ij/AOm4H9b3/" +
                        "BI7/lHR+zD/ANgrVP8A1I9Rr/OH6SP/ACW+P/xR/wDTcD/Sf6NX/JD5f/hl/wCnJn6O1+Hn7mfzVf8AB" +
                        "xv8OtEuPhx+zl8WktY4vEek63qfw6nvUUCaey1Cw/tONHIHzLFJZOUBPymRsfeNf3V9CHO6scdjsHd8k" +
                        "oRnbonF8rfzUlfvZdj+DvpyZHSlgcDjLL2kZyp36tSXMl8nF27Xfc8U/wCDcHxFqcHxE/ag8JLMTo2p6" +
                        "L4d8RT27EkC5sb67tkZR0GUu2B9cD0r6n6cOCpvBZfWt7ynOPyai/8A21Hyn0GMdUWOzCjf3ZQhL5pyS" +
                        "/CTPxl/4KBahBqf7cn7XFzbBhHH8RPFunt5oAPmWmtXFo/QnjdGce1f1D4NUXT4Ty1P/oHpv74J/qfy1" +
                        "40VlU4uzNr/AKCKq+6bT/I/u3/Yd/5Mq/Y//wCyXfD/AP8AUTsK/wAi/Fj/AJKrM/8AsJrf+nJH+v8A4" +
                        "Sf8kpln/YNR/wDTcT+ab/g4we8P7SXwHjcyf2evgeR7UNu8rzm168Eu3tu2hN2O2Pav7r+hIo/2FjH9r" +
                        "234ckbfr+J/Bv04XL+3sGvs+x/Hnlf9PwPw6+G//C8fI1b/AIVD/wAJX9m3w/27/wAK3/tfZvw/lef/A" +
                        "GXxnG7bu98d6/rHPP7JvH657K+tvacvztzfjY/kjIv7XtL6l7W2l/Z83yvy/hc9M/4zV/6qj/5dleD/A" +
                        "MYr/wBQ3/lM9/8A4yv/AKif/Kgf8Zq/9VR/8uyj/jFf+ob/AMph/wAZX/1E/wDlQ80ufgv8c7y4nvLz4" +
                        "T+LLq7une5urq50LWHkkkdizMzNASWJOST1r3ocU5TGKSxNJJf34/5ng1OFc3lJylhqrb/uS/yP67vj5" +
                        "Hrdv/wQSs7PxHbXFnrWnfC3wJpd9ZarE8FzCbW+0i2WOSORVZWRUCkMM8c81/mzwdKk/GBypNODxNZpr" +
                        "VO6m7p+Z/pdxnGrHwcUaqamsNRTTVmrOmrNeR/Ot/wSO/5SL/sw/wDYV1T/ANRzUa/tj6SP/JEY/wDwx" +
                        "/8ATkD+Ifo1f8lxl/8Ail/6bmf1vf8ABXH/AJR0ftPf9grS/wD1I9Or/OH6N3/Jb4D/ABS/9NzP9J/pK" +
                        "/8AJD5h/hj/AOnIH8pX/BF3/lJb+zZ/3OP/AKgOuV/od9KP/khMd/3C/wDT1M/zo+iv/wAl7gP+4v8A6" +
                        "ZqH9ZH/AAUD/wCCd/wv/b18DaVp/iDUX8EfFDwUtw3w++JWmwLO9sLgAyWl5AWT7RaOyqxXcrIwyjDLh" +
                        "/8AOnwa8asw4PxcpU4+0w9S3PTbte20ov7MltezTWjTsrf6P+NHgjl/GODjGpL2eIp35KiV7X3jJac0X" +
                        "va6aeqau0/5Kf2hP+CQ37c37Ps2o3k/wnm+K/hCxLyR+Mvg0z65E8SDcXeyiRb+IKvLF7cKOcMQCa/0c" +
                        "4L+kpwlnKjFYlUKr+zV9zX/ABfA/K0r+R/m1xr9Gfi7JXKTwzr0l9ul7+n+Fe+vO8beZ8UfDv4yfHb9n" +
                        "nxFeXHwy+I3iX4Q+I7eURaxbeGtQ1DSZHkhOPLu4I3jEgB4KSqR6iv1TO+GMozqgliqFOvBrTmjGW/WL" +
                        "1t6pn5TkfFGcZJXbwteph5p68spR26SWl/Ro/YH9nb/AIL8/tUfDm707S/jtoWk/H3wmhSG+1FoIdA8R" +
                        "JGPl3R3Omxi1cqOSJLUs5Ay65Jr+aeNfoc8PY6Mp4CcsLU6K7nD5qT5l8pWXZ7H9N8EfTL4iwMowzCEc" +
                        "VT6uyhP5OK5X843fdbn9S/7J37XnwX/AGzfhjD8T/g1rUlxa28g0zxR4V1xI4NY0S+K7/s97BG8iqWX5" +
                        "kdGZHH3WOCB/n34i+GuacL494XGwSbV4yWsZrvF2XzTSa6rY/0L8N/EzKuKcvWLwU20naUXpKD7SV38m" +
                        "m0+j3P4o/8Agrj/AMpF/wBp7/sK6X/6jmnV/qh9G7/kiMB/hl/6cmf5S/SV/wCS4zD/ABR/9NwP67P+C" +
                        "cXhvQfGP/BNz9nPwl4p0mDXvDPifwU3h/xDoepxiW2vLK8e4t54ZUbhkkRyrD0Nf5t+OGOrYXjnHVqUn" +
                        "GpCtzRa3TVmmvNM/wBLPAzA0cVwJgaNaKlTnR5ZJ7NO6afk0fhT+2D/AMEBfiv4Y13W/F37IGr23xE8E" +
                        "Xckl9Z/C3xXew2Gv6crtu+z293elLa7jTna0skUmMAiRssf648M/pjZdiKMKOcxdKqtHUim4S83FXlFv" +
                        "slJddFofyF4nfQzzHD1p1slkq1F6qnJqM4+Sk7Rkl3bi+mr1Pwx+JnwQ+PH7PHiCCz+Kfw08R/CfXbOc" +
                        "f2beeI9PvdODzRksr2tyyqkuNpKvE5HGQa/rXIeLMozqi5YSvTrwa1UZKWn95br0aP5Fz/hLOMkrqOLw" +
                        "9ShNPRyi46/3Xs/VNn138DP+Cs37eHwGawtdH+N978QfDljhf8AhFPjCv8AwkltJGvCx/aL1vtsaKBhV" +
                        "iuUAHA4r814t+jnwhnF3PCKlN/ape4/Wy9xv1iz9M4R+khxhk/KoYt1aa+zV/eL0u/fS9JI/os/YP8A+" +
                        "C23wr/ac8U+HfhB8aPCyfBf4ueJJE0rw3qdrdfaPDOtXrnCQRS3G2W0nlJ2xRS71dsKJS7Kh/ibxe+ip" +
                        "mGQYeeMwNT6xhoK8la1SC7tLSSW7as0teWybP7g8HvpY5dn+IhgsdT+r4mbtF3vTm+iTesW9kndN6c12" +
                        "kfuZX8ln9chQAUAfMf7WH7J/wALf2v/AIW3/wANviTYeTcw+ZfeDPGdjGh1HQtRKbVuLdmxlTgCWInbI" +
                        "vBwQrKmrlRlY/iM/ag/Zf8Ail+yZ8UtU+F3xR0vybmHde+G/ElkrnTta04uVju7SRgMqcYZT8yNlWAIr" +
                        "Fqx0xlc+mP+Cef/AAUM8a/sXeNRpGrm58V/AfxXcpJ438ERvuls5WxGdR04SEKlwigb0yFmUBWIIR0cZ" +
                        "WJnC5/aH8O/iJ4K+LHgrw58Rfh14jtvFfgzxXbJqmha7pb7opomyCCCAyOjAq6MAyMCrAMCK2OZo7SgD" +
                        "+Pf/gv9+yrcfD/45eF/2oPDWllfCHxrt4/D3ja5tk/dW3ijSbZYkZ9qgL9rs40K9Szwysetf6YfQ48Qo" +
                        "4zKamVVZfvcO+aHnTk7/wDksm79lKKP8xvpm+HcsFm9PNaUf3WJXLPyqRVv/JopW7uMmfnB/wAE4P2ur" +
                        "j9jL9qTwX8Tr+aZvh5rYbwN8WNOtNzGXQdQkTzJlQfektZUjuEA5bZsyAxr9w8cPDaPFHD9XCxS9vH36" +
                        "bf88dl6SV4vte/Q/DPAzxLlwtxDSxUm/YS9yol/JLd27xdpLva3U/0GNK1XTNd0vTdb0XUIdW0bWbeHV" +
                        "dJ1XTZUmt7m2uIxNFLFJGSro6MGVgcEHIr/ABlxGHqUakqc4uMotpp6NNaNNdGmf7TYfEU61ONSnJSjJ" +
                        "JprVNPVNPqmtj+W7/grn/wVz/tT/hJ/2Vf2VfE//Er/AH2gfGD4waBN/wAfXWKbStKmiP8Aquq3Fwp+f" +
                        "lEOzcz/AOgP0bvo3ez9nm2bU/e0dKk1t2nNd+sYvbd62S/z2+kt9Jb2ntMoyip7usatWL37wg+3SUlvs" +
                        "tLt/wA1fg/wf4p+IHinQPBPgnQLrxT4u8U3UOieHvD2iQvPdXl1O4RI40QEkkn8Op4r+6czzPD4LDzr1" +
                        "5qFOCblJuySW7bP4PyzLMRjcRChQg51ZtKMUrtt7JI/t2/4Jef8EvPC37Fnha3+JHxIt7XxT+0v4ptfL" +
                        "1jWI9k9r4YtZ0+fTtOfkGQg4uLgff8AuJ+7yX/yk8fvH7EcU4h4bDNwwEHotnUa+1Ly/lj03eu3+sv0f" +
                        "fo+4fhTDrFYpKePmtXuqaf2Ief80uuy03/X6v5qP6aCgD8Z/wDgvF/yj+8Q/wDY0+Gf/SmSv6f+iH/yW" +
                        "UP+vVT8kfy39ML/AJIuf/X2n+bPw/8A+Df7/k+vVv8AsQvEH/px0uv6w+mT/wAkjH/r/D/0mZ/JX0MP+" +
                        "Svl/wBeJ/8ApUD5c/4K4/8AKRf9p7/sK6X/AOo5p1ff/Ru/5IjAf4Zf+nJn599JX/kuMw/xR/8ATcD+t" +
                        "7/gkd/yjo/Zh/7BWqf+pHqNf5w/SR/5LfH/AOKP/puB/pP9Gr/kh8v/AMMv/Tkz9Ha/Dz9zP57f+Di3/" +
                        "k2D4H/9j6v/AKj2o1/Z/wBCX/kf4v8A68f+3wP4q+nB/wAk/hP+v/8A7ZM+NP8Ag3H/AOS1/tH/APYra" +
                        "V/6djX6h9N7/kVYH/r7L/0k/LPoNf8AI2x3/XqP/pR+aX/BVr4c658Nf2/v2kbDWraSKPxVrjfEbQ7qV" +
                        "SqXNjr8KamjxkgBlRpXiJHRkYdQa/dfo8Z3Rx3BuBlB/BDka7OD5dfWyfo0z8G+kXkdbAcZ4+NRfHP2i" +
                        "fdTXNp6NteqaP6Nf+CXP/BUb9mjxj+z98HPgJ8TfH9j8Jvi58LdD0z4Zxaf45lTT9M1e00a2j02zns7+" +
                        "bbbl3hjjDQyOsm/dtVl+av4i+kB9H/PsLnOKzDC0ZV8NWnKpeHvSi5NykpRXvWTbs0mrWu09D+5Po+fS" +
                        "DyHFZLhcvxVaNDE0IRp2m+WMlFKMXGT927SV02ne9k1qc1/wXs/Zj1H4zfs7+Bv2ivAlsdc1L4DSXd14" +
                        "jTSgJvtHhTW0gaa7Bi3F1tZbeKTI4EbyOTgV3/Q/wCPYZXndbLcQ+WOJty30tUhe0fLmTa85KK6nB9Mb" +
                        "gCea5JRzLDrmlhW3K2t6c7Xl58rSflFyfQ/n3/4Jqft46t+wj8cJ/FN/p03iP4UfECG38N/Fbwxp5QXL" +
                        "W0Mxkt76134BuLQyOURiFdXdCVLB1/svx18IafF+UqlGShiaTcqcntdrWL/ALsrK73TSetrP+LvAbxhq" +
                        "cH5u60oueGqpRqRW9k9JL+9G7stmm1pe6/tg+FP7a37J3xq8NWfir4d/tA+FtWsLuNbmXT7/WLPTtTtN" +
                        "/8ADdWOoPDcwNntJGue2RzX+VvEXhXxHlVd0sTgqsWuqi5RfpKKcX8mz/VzhzxX4bzXDqthsbSlFrZyU" +
                        "ZL/ABRk1JfNI9Q/4Xj8FP8AosHhb/woNJ/+P14H+qea/wDQNV/8Al/kfQf63ZT/ANBVL/wOP+Z6Hpeq6" +
                        "Xrmn2mraLqVvrGlX6efY6npc0dxbzITjdHJEWVhx1BrxcRh6lKbhOLjJbpqzXqme3h8TTrQU6clKL2ad" +
                        "0/Ro+DP+CqWhXviL/gnv+1Lp9gpee38OrrsgUFv3Ol6la6nMcD0jt2Oe1fr/wBHvGQocaZfKWzqW+cou" +
                        "K/Fn479IjBzr8FZjGO6p3+UZRk/wTP43v8AgmD8UPDPwc/bz/Zw8feMtdh8M+GbLV7zQNW17UiiW1qmu" +
                        "6Le6CrzPIQsce68AeRiAi5YkAZr/Tnx8yCvmfB+Ow9GDnUcFJJbvklGend+7our0P8ALz6P/EGHyvjHA" +
                        "4ivNQpqbi5PZc8JQ1fRe9q+i16H9gX/AAVslin/AOCcf7TU8EqzQTaTpMsM0TBkdG8RacQykcEEdDX+a" +
                        "X0cItccYBPfml/6RM/02+knJPgbHtapwj/6cgfynf8ABF3/AJSW/s2f9zj/AOoDrlf6G/Sj/wCSEx3/A" +
                        "HC/9PUz/Or6K/8AyXuA/wC4v/pmofvl/wAFav8Agqh8V/2JviP8Pvgz8FvCGi33ibxJoMfxJ8ReKvHkF" +
                        "1ewRWV1qV5plvb2tvaXNriTfYStI7sw2lQFzkj+Pfo5fR7y7ivA1sbjqs1ThP2cYwaTuoxk2209LSVkr" +
                        "a3u+h/ZP0kvpEZlwnjqGBwNKDqTh7SUpptWcpRSSTjreLu3fS1l1PQ/2F/+CzP7P/7SPhnS/D3xy8R6P" +
                        "8BPjjEfsWpaTr1y1j4c1V8gLNp19qDlI/MJA+zzy+YG4UyD5q8Txb+i/nOR15VMBCeKwm6aV5x8pxiru" +
                        "380Va2rUdj2/CH6UuS57h408fUhhcXs1J2hLzhKTsr/AMsne+ictz9Dvi/8DP2V/wBoXwwdY+Mvw98If" +
                        "Erw4sWbfxf4it9Pma3ibEe6DU1KyQg5A3Ryr25r8W4a4t4hyXEcmCr1aM7/AAxcld+cNn80z9t4m4R4d" +
                        "zvD8+OoUq0LfFJRdl5T3XyaP48f+CpXwE/4J3/BHW9Es/2Pfi1ceJPHl3etF4y+GuhalH4m8OaTp4hkO" +
                        "9NWLPIlwsoVDbtNO2CSxjKgP/pl9H7jDjXNqU5ZzhlCil7tRx9nOUrr7GzjbXmUYra3NfT/ADD+kLwbw" +
                        "RlNWEclxLnWcvfpqXtKcY2e09WpXsuVyk978ttfpb/g3Su/FCftQ/G6xtGn/wCEKufAL3fiBYwfsx1SH" +
                        "xDpqaeZD/f8qW72e26vhPptU8O+H8JJ29qq9o9+VwnzW8rqF/kfe/QfqYhcQYuMb+ydC8u3Mpw5b+dnO" +
                        "3zPgv8A4K4/8pF/2nv+wrpf/qOadX6/9G7/AJIjAf4Zf+nJn479JX/kuMw/xR/9NwP6lP2VvjVbfs5/";
                    resourceString += "8EgPhh8cbrRX8Rr8M/h5J4ng0CGUQfbLiKeZYIWlIbYjyMod9pKrkgEjB/z+8QuFpZ34l4jAKfJ7bEcvN" +
                        "vZNK7t1sr2XV9Uf6E+HfFccj8MsPj3Dn9jh+bl2u03ZX6Ju13rZdGflb+zP/wAHCXj+4+KUenftXeBNC" +
                        "tPhPrztB/wkXwp0/UotQ0B3PySvBdXt2bu3XpIqgSgZZd5Hlt/QfHn0MMHHL+bKK03iY/ZqSjyz8rqMe" +
                        "WXZv3ejtuv544B+mrjZZjy5vRgsNL7VOMuaHZtOUuaPdL3uqvs/6Qfh/wDGn9nH9pzwoW+H/wAQfC3xk" +
                        "8L61FtvdGsrqw1LcjLuMd1YzbpI2A5aOaMMO4r+Hs54WzzIcR/tFGrh6kXo2nH5xktH6p2P7oyXirIs/" +
                        "wAN/s1eliKclqk1L5Si9V6NJn5N/t5fsOf8Eh9B8N+IPFHxY1PRP2YvFccUt3a3Pwj1K30/VJ5VBIjt/" +
                        "DkIuIbjLfeWG0DY/jUcj+i/CDxZ8Sa1eFLCRnjKd0v3kXKK83VdnH1c7eT2P5v8YvCPwzo0J1cZKGCqW" +
                        "bXspKMn5KkrqXooX81ufxsXTW1lrdy3hu+uZ7O0unbQdTniFpePHHMfIlaOGWURyEAMVWRtp4DHGa/08" +
                        "pqUqS9qkm1qt1tqrtK6+Sv2P8uqjjCq/ZNtJ+69nvo7Juz9G7dz/TR+HUniCX4feBJfFiyJ4pl0bS5PE" +
                        "qXi7ZhqDWURuBIOzeZuyPWv8HM7VFY2sqNvZ88uW23Ld2t8j/fHI5VngqLrX9pyR5r781le/wAzsq8w9" +
                        "QKACgD5j/aw/ZP+Fv7X/wALb/4bfEmw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx" +
                        "/EZ+1B+y/8AFL9kz4pap8Lvijpfk3MO698N+JLJXOna1pxcrHd2kjAZU4wyn5kbKsARWLVjpjK59Mf8E" +
                        "8/+ChnjX9i7xqNI1c3Piv4D+K7lJPG/giN90tnK2IzqOnCQhUuEUDemQsygKxBCOjjKxM4XP7Q/h38RP" +
                        "BXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdLfdFNE2QQQQGR0YFXRgGRgVYBgRWxzNHlX7V37N/g39rL4C/E" +
                        "D4F+Nv9GsPF9rnR9cjQPNpWrWzCeyvYhlSTDMqllBG9NyE4Y19t4d8cYrhzOKOPoaum9V0lF6Si/Vdej" +
                        "s90fEeI3AuF4kyatl9fRVFo+sZLWMl6Pp1V1sz/ADv/AI0fB/x38Avil42+D3xL0d9D8a+Ar6TRNZsnB" +
                        "2PtAeKeFiBvhnjZZYnHDIysODX+1PC3EuDzjL6WNwsualVjdP8ANPs07pro00f4k8VcMYzJsxq4LFR5a" +
                        "tKVmvya7pqzT6ppn2L4d/4KeftP+Ff2Pp/2OtB8S/2f4WkmlsLbx3DJMNdtvDc8ZEmiwTA/Jbs5Pzj5w" +
                        "hMQITivzLG+AmQYjiZZ1Up3qWvyacjmtqjXWVum1/eep+n4Hx/4gw3DDyWnUtTu1z686pvemn0jfrvb3" +
                        "VofB/g/wf4p+IHinQPBPgnQLrxT4u8U3UOieHvD2iQvPdXl1O4RI40QEkkn8Op4r9ezPM8PgsPOvXmoU" +
                        "4JuUm7JJbts/HssyzEY3EQoUIOdWbSjFK7beySP7dv+CXn/AAS88LfsWeFrf4kfEi3tfFP7S/im18vWN" +
                        "Yj2T2vhi1nT59O05+QZCDi4uB9/7ifu8l/8pPH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/rL9H36Pu" +
                        "H4Uw6xWKSnj5rV7qmn9iHn/ADS67LTf9fq/mo/poKACgD8wf+CwHwQ+Jfx8/Yf8d+D/AITeGLjxn4v0f" +
                        "UtH8Zx+FdHQy397a6bcl7hLWJfmmmVHLrEuWfBVAzEKf336NPFeAyfiyjWxlRU6UoyhzPZOS0u+ivpd6" +
                        "Ld2V2fz/wDSb4Sx+c8JVqODpupVjKM+Vayai9eVdXbWy1drK7sj8bP+CD37Kf7QHgv9pnxr8Y/iB8Ktc" +
                        "+HfgPQ/CmoeD49U8d6ZeaS97qepX9jLHDbRX8cTyhY7eR5HVSq4AJBYV/Tv0vPEPJsVkNLBYfEQq1pVY" +
                        "ytCSlaMVJNtptLVpJPV622Z/Lv0PfDrOsJn9XG4nDTpUY0pRvOLjeUpRaSUkm9E22tFpfdHz1/wV6/Yy" +
                        "/aTuv26/id498HfBvxJ8Q/BfxdbSfEHg/xB4D0XUdXheSPR7PTri2mOnwyiKaO4gcBGIJQqw68fafRr8" +
                        "UMijwjh8PWxVOlVoc0ZRnOMX8UpJrmaummtV1uuh8T9Jjwsz6XF+IxFDC1KtKvyyjKEJSXwxi0+VOzUk" +
                        "9HurPqf1E/8E8/hF4y+BH7Fv7Pfws+IViNL8a+GtDM/iPSMhnsrnUr641U20hUkeZCLkRyYJG5Tgkc1/" +
                        "APjTxLhc34pxuLwz5qU5+6+6ilG68na68mf6C+CfDOKyfhXBYTErlqwh7y7OTcrPzV7PzR9m1+Xn6mfi" +
                        "n/wXS/Z/wDiz8dv2VfB0vwj8G3vj7U/hv4rt/F/iLw34ZglvNTbTZNLvNPea3toFaSby5J03qgLBSWxt" +
                        "ViP6n+iTxlluUcQ1VjKqpRrUnGMpO0ebmjKzb0V0nZvS+m7R/Kf0vODMyzjh2k8HSdWVGqpSjFXly8so" +
                        "3SWrs2rpa212TPhL/g38+EHxa+Gvxh/aCvviL8LvEXgGy1Pw1plpp15410TU9KiuJU1QuyRvfQxB2A5I" +
                        "BJxX679MniXLcdlmCjhsRTqtVJNqE4yt7vWzdj8f+hhwxmWAzTGyxOHqUlKnFJzhKKb5ul0rn68/wDBQ" +
                        "v8A4Ju/C79vXwnps+paifAXxj8G28tn4E+JllALgCB3842N/BuQz2rOSygMGiYlkOGdH/mzwW8csw4Px" +
                        "MlGPtcLUd5027a7c0X0lbfS0krPZNf0x42eBWX8Y4aLlL2WKpq0KiV9N+WS6xvtreLd1u0/5Fv2hf8Ag" +
                        "lj+23+zprc9jrnwX1L4ieHjJ5Gm+Ofg7bXXiPTLlScB2WxiNzb5PGLmGM56ZyM/6R8F/SD4UzukpU8VG" +
                        "lO2sKrUJL73yy/7dkz/ADT42+jxxZkdVxqYSVaF9J0k6kX9y5o/9vRR/Ux/wRn+Enxt+HH7D0Pgv9ozw" +
                        "/f6U+t69rOo+CvAvj2JhdWHhS9srOFLWezu13wpJcpdSiGRQdsmSAGxX+ff0oOJMqx3Fjr5bOMuWEVOc" +
                        "NnUTk+ZSWjajyrmXVeR/oX9FrhrNsDwkqGZwlHmqScIT3VNqK5XF6pOXO+V9HtqfmL+3Z/wQX8Ux6/rX" +
                        "xK/Yokt9X0LVJZdSvvgX4hvIrO6sJJG3lNJvLxkhkg5O2K4kRkAwHkzgfvfhH9L/DujDC55eM42SrRV0" +
                        "/8AHFap+cU0+y6/gHi/9DvEKtPFZFaUJNt0ZNJr/BJ6NeUmmu76fhX4k/Yu/a98I6pPo3iH9mDx9p9/b" +
                        "kqVHhLXJopADt3RTQWzxyJkcMjEH1r+t8D4pcNYmmp08woNP/p5BP5pu69Grn8h47wr4mw1RwqZfXTX/" +
                        "TqbXyaVmvNOxgf8MrftP/8ARuHj3/wj/EP/AMiV2f8AEQsg/wCg6h/4Nh/8kcf/ABDviD/oAr/+Cp//A" +
                        "CJ/VL/wQL+Df7Rvwm+EXxvm+MvhnWvA3gPxVq2j3Xwt8H+OLe50+5S6tre8TVbyOzvEjljiuBJaqHIAc" +
                        "xkjoSf89/picT5HmOZYRYKpCpWhGXtJQakrNx5IuSum1abt0vqf6IfQ14XzzLcsxbx1OdKjOcXTjNOLu" +
                        "lLnkouzSleCv15dD93vEvhzQ/GPhzxB4R8T6ZHrXhrxVZXfhzxDo94CYbuxvoGtZ4XAIO2SN2U89DX8h" +
                        "4DHVcLXhWpS5akGpRa3TTumvRn9g4/A0cVQnRqxUqc4uMk9mmrNP1Wh/C3+29/wSb/aQ/Zf+JGpR+APA" +
                        "OtfGX4M67dzyeAPGXgbT7nV7yC2Zi8dpqlvp8TyQXMSYUyFBFL95Dncif62+FH0i8jz/AxeIrQw+Kilz" +
                        "xnJRTfWUHJ2cX2vzR2fRv8AyI8Wfo4Z7w/j5LDUZ4jCyb5Jwi5NLpGairqSXW3LLdPdL9uvg7+zB+1V4" +
                        "j/4IlePPgH430O/k+L3iGxvtR+G3w78Vs8Oq2Wi2msWupWemSLdkGKV1tZDBC5GwSJGdmCF/lLibj7h6" +
                        "h4rUcwoTj9WhJKpOOsXNxcZTVt0uZczW9m1fd/1lwv4f8RV/Cetl1eEvrM4t04S0koKUZRg77N8r5U9r" +
                        "pO2y/Mr/gjV+x5+0roX7dvw++J/jL4MeI/h/wCCfhFb+IrzxXrnj7R7/RovO1Hw5qGgwW0B1GKHzZjLe" +
                        "KxRMlVUk4GK/efpPeJmRVuEa2Fo4qnVq13BRUJKTtGcZtvlbsrR3e7aSPwL6Lnhjn1HjChi6+FqUqVBT" +
                        "cnOMoK8oSgkuZK7vLZbJNs/oq/4KC/8E6vhd+3p4I0621q+Pgf4seDo5k+H/wATbCATvAkvzvZ3sO5PP" +
                        "tHfDbdwZG+ZGGXV/wCJ/BnxszDg/FycF7TDVLc9Nu1/70X0kl8mtGtmv7f8afA/L+McJFVH7LE078lRK" +
                        "9r/AGZLrFvXunqnun/IR+0P/wAEr/22/wBnLU9Qj174M6j8QPC1mWa38f8AwhguPEOlzQjP711s4vtNu" +
                        "vHP2mGP8iCf9KOCvpB8KZ5Ti6eKjSqP7FVqEk+2r5Zf9uyZ/mdxt9HjizI6klUwsqtNfbpJzi130XNH/" +
                        "t6KPh//AIV38QPtX2H/AIQbWPtvmfZPsf8AZl75vm7tmzZ5ed2eMYzmv1j+2sHy83toW3vzL/M/JP7Ex" +
                        "vNy+xnfa3K73+4+0v2ff+CXv7bP7RupadH4X+CeqeDPDN8ymXx98Vre48PaRFC3/LZWvo1nuE7f6NFKc" +
                        "9uDj8t4z8fuFMkhJ1cXGpUX2KbU5X7aO0X/AInE/VeC/o+8WZ5UiqWElTpv7dROEbd9VeS/wqR/ZJ/wT" +
                        "/8A2Dvh/wDsG/CW68F+HdRPi3x54umh1r4m/EO5t0t5NSuoYzHDDDGCxjtLcO3lRszHLOxOWIH+YnjJ4" +
                        "vY3i/MlXqR9nRppqnC9+VPdt9ZS0u7LZLof6ieDHg9guDstdClL2lao06k7W5mtkl0jHWyu92+p/Ml/w" +
                        "Vt/Y0/ae1L9u/4p+NvCnwS8SePvCPxbn0rWvBHiHwDo2oazbXGNJs9OkgkbT4pRFOk0LKY5MEjDDKsDX" +
                        "95/Rw8T8gp8IYehWxdOlUoKSnGcoxa96Uk1zNXTT3Xmt0fwL9JPwt4gqcYYivRwlSrSruLhKEZST92MW" +
                        "nyp2aaej8nsz+pH9kH4CXngv9hv4Nfs9fGzw1a39zF4Ni8HfEnwbqPl3VsV1GCQ3djNsLI+1ZzE+0lSQ" +
                        "cEjBr/P7xK4wjiuLcVmOBqNL2zlTktH7rXLJdVtdde5/oR4ZcGywvCOFy3HU037FRqQeq95Pmi+j3s7a" +
                        "dj+c/8AbU/4IMfF7wHret+N/wBkSVfip8O7qR76D4Y6rdRW3ibSUdixhglu2SG+hjH3WMiTYwuyRgXP9" +
                        "t+Fn0vstxlKFDOP3Fdae0SvTl5tK7g310cet4rRfw94rfQ7zPB1p18m/f0G7+zbSqR8k3ZTS6O6l0tJ6" +
                        "v8AD7xn8BPjl8OtTfRfH3wc8U+C9WjJQ6f4o0DVbGU47qLmBNw7gjII5Ff1hlfGGU46nz4fFUqke8Zxf" +
                        "5M/krNeDs3wNTkxGFq05dpQkvzRqfD/APZp/aG+K2ow6V8N/gf4r8a3sz+Tjw9oGp3EcZyATLKkPlxqM" +
                        "jLOwA7mufOeOsly6DnicXSpr+9OK+5Xu/kdGS8B53mM1DC4SrUf92En97tZfM/oq/4Jvf8ABEPxf4O8d" +
                        "+FPjv8AthRWenyeEbi38R+DvgfYTW+ovJfwMJYZtYnhMlv5cTgOtvEz7zjzGCho3/ifxx+ldhsVhKmX5" +
                        "Nd+0TjKq046PRqmnZ3a05mlbom7Nf2/4F/RMxOFxlPMM6svZtSjRTUveWqdRq8bJ68qbv1aV0/6gK/gQ" +
                        "/0CCgAoAKACgD5j/aw/ZP8Ahb+1/wDC2/8Aht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4O" +
                        "CFZU1cqMrH8Rn7UH7L/AMUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtW" +
                        "OmMrn1N/wAE5f8AgoX4n/Yw8cSaF4lN14m+AvjKZT4w8KQuXk0y5bag1OwRuBKqgCWMYEqDB+ZUKuMrE" +
                        "zhc/tA8EeN/CXxJ8JeH/HngPxBbeKfB/im2j1fQNf0iQSW9zbyDhlPBBBBVlYBlYFWAIIrY5mj8jP8Ag" +
                        "qV/wTt8M/t3/DGx+M/wRutPvPjv4J0+VvCmsaTPBLZ+LtJgMkv9lvcxP5XmByxtZidquSjkKxZP6a+jp" +
                        "46z4Xxn1XFNvA1Xr/07k9OdLt/Mluldaqz/AJh+kf4DQ4pwf1rCpLHUY6f9PIrXkb6P+RvRN2dk7r+Mj" +
                        "T/hD8U9U+JMPwcsfh3rM3xWnvh4aX4dNp10msrf52mB7SRFkRx1YMowOTgc1/qTW4ly+ngXjZV4fV1Hm" +
                        "5+Zctu/Ns/kf5V0eGcxqY9YKNCf1ly5eTlfPzduXdP12P7Vf+CXn/BLzwt+xZ4Wt/iR8SLe18U/tL+Kb" +
                        "Xy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/uJ+7yX/AMsfH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/qx" +
                        "9H36PuH4Uw6xWKSnj5rV7qmn9iHn/NLrstN/wBfq/mo/poKACgAoA8J/aZ+O+k/syfA7x98dtf8Maj4x" +
                        "0L4dwW2qazoHhP7OdQktp76CyeSIXckUZEIm819zj5FbGTgH67gPhCpn2bUcBTqRpzqtpSlfluk3Z2Te" +
                        "trLTdo+P4+4wpZBlFbMKlOVSFJJuMbc1m0rq7S0vd67Jmj4R+Ofgfxd8ANA/aQgnk074d654Tg+MUkt6" +
                        "E8+00qTShq8glVGKiSKPIcA4DAjNYZlwli8NnM8savXjVdLTZy5uVW8m9vI6Ms4uwmJyaGZptUJUlV13" +
                        "UeXmd/NLfzPFv2IP23fht+3Z8NPEvxK+G+gap4VtfCmty+CNW0DxkLMXqyx2VtfJMBYzzp5Ui3O1SWB3" +
                        "Kwxxz9V4r+FOO4Rx9PC4mcZucOdON7Wu1bVJ3VtfJo+U8JfFnAcYYCpisLCUFCbg4zte9k76Nqzvp5pm" +
                        "z8GP2vvBPx0+P8A+0V8BPBfhnVDdfs03FhonjfxzefYxpM+o33mKLW28qZ5S6Pbzq+9FwYz6iuXijw1x" +
                        "eUZNgswr1I2xibhBX5lFW1elrNOLVm9zq4W8TcJm+dY7LqFOV8G0pzduVyd9Fre6akndLZn1rX5wfpIU" +
                        "AFABQAUAFAHwj/wUR/bH1L9hv4BWfxo0rwHB8Rbq68Qad4JPh/UL+TTY1S+tru4MvmxwXByv2bG3bznr" +
                        "xX674KeGNPi3OHgZ1nSSpynzKPNs4q1rrv3Px/xu8UKnCOTLHQoqs3UjDlcuXdSd72fbsfd1fkR+wBQA" +
                        "UAfPX7VX7Rfhf8AZN+Avjz9oHxnod/4k8NeAP7L/tLRfDAtzfTf2rrNpokflfa5Io/lkvFZssPlBxzgV" +
                        "9p4e8E4jiPOKOXUJxhUq81nK9lyxlN3sm9o223PivETjjD8N5NWzGvCU6dLluo2u+acYK12lvJPfY+Vv" +
                        "iH/AMFGNW8G3Hg5/C37Enxo+MWg+NfDeg/EnTPF3wm8Iy6xpSw69p6aglq1zbuUM8KyBZVUkA9zX6Fkv" +
                        "glTxSq+1zXB4edOpOm41KnLK8JON7PWztofnWd+ONTCul7LKcZiIVKcKilSpc0bTipWutLq9n5ng3w//" +
                        "wCCzOmfFnQn8U/Cv9hL45fEvwzHcSaVJ4j+H/hOPWbBbqFVeSE3GnTzRiRQ6ll3ZAIyORX1+c/RfqZdW" +
                        "9li83wVGpa/LOpyuz2dpJO2m58fkv0paeZUfa4TJ8bWp3tzQpc6ut1eLavqtD9m9PumvrCxvmtZLJryG" +
                        "K6ayvF2TQmRA+yRezLnBHrX8vVqfJNxveztdbP0P6lo1OeClZq6vZ7r1PjL/gn/APta6j+2t+ztpvxy1" +
                        "TwRD8Pru/1bVPDZ8O2F8+oxqunSrGJPOkhgJL7um3iv1Hxk8OIcK53LAQquqlGMuZrl+Lpa7/M/LfBjx" +
                        "JnxXkkcfOiqTc5R5U+b4et7Lf0Ptmvyo/VwoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD5j/aw/ZP+F" +
                        "v7X/wALb/4bfEmw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/EZ+1B+y/8AFL9kz" +
                        "4pap8Lvijpfk3MO698N+JLJXOna1pxcrHd2kjAZU4wyn5kbKsARWLVjpjK5d+G37YH7Q3wj+EHxA+Bfg" +
                        "D4jXeg/Dn4kY/tzSYDmW33/AC3H2KY/PbfaU+SfyyN68Gi4OKPtT/gmZ/wUL+Lf7NXijTPglbeCtQ+Nf" +
                        "w28falFDpPw70Bi+tafqV24jaTSRJlG8370lu5VGYbg0ZLszjKxM4XP7HbOGC4NvrM2k/2fqtzbRwzC7" +
                        "W3N3DGf3vkSSQNIp2MTkK7LnJBPWun2suXlu7b26X7nF7KPNzWXNa1+tuxo1BoFABQAUAFAHmfxp+G2n" +
                        "/GP4P8AxS+EuqlF0/4l+HtY8C3M0wJEQ1XT5bIScAkFDIGBHIIBHNe9wtnk8szPD4yHxUakZ/8AgMk7f" +
                        "O1jwOKsihmmWYjBz+GtTlD/AMCi1f5XufzWeBf2jPEmm/8ABDPxX8Jg0kfxesvFN7+xFZ6JcELdvea3r" +
                        "QvXs2UnkjTLuaFcf3Mdia/unN+CKFTxap4z/mGdJYtvpaELc3/gyKl8/Q/hDKOOK9PwiqYPX60qrwiXW" +
                        "853cf8AwXJx+Xkz6T/YusPD3/BPn9tH9s39nbVLoWfw3svhd4U/aF0CZh5aTweD9AhstWnjL4y8ss87O" +
                        "Ty3l7j0NfC+KVatxnwtleZQV67xNSjLydWbcE/JJRS7Xsfd+FdGhwVxVmuWTdqCw1OvHzVKCU2vNtyb7" +
                        "2ueG/s+ftCeLf2NP+CbHjL9rldNsr79of8Abw+J2q6n4JPid/LtYbzVbu6t4rm781kzb2/2K7ulZiFYy" +
                        "oGIVq+s4z4Lw3FHHVLJ+ZrBZZhoqfLu1FJtR/vS5oR01XK7K6PkeCuNcTwtwHVznli8dmeJk4c2ycm0n" +
                        "L+7HlnLXR8yu7M7f40/Gz9or9kP4b6L+0xon/BTjwz+1d4q8OXukyfGT9nqeTwidL1Wy1K9htJ49Gi0m" +
                        "ZriIwPMo3RorbA0p2hTGfK4W4VyTiXHTyupkFTA05qXsq/73mi4ptOo5Lld0no21e0dW1I9birizPOGc" +
                        "DDNKfEFPHVIOPtaH7rlkpNJqmovmVm1qkna8tEnF/0R+DvFOl+OfCHhXxrobmTRfGGm2PinR5JMbmtdQ" +
                        "tUu4idpIyUkHQ1/FOZ5fUwmJqUKnx05OL9Yuz/FH9u5XmNPF4anXp/BUipL0krr8Gfg58N/GX7fn7XX7" +
                        "Uf7b/wH8C/tOv8AA/4RfA/xpf2J+IFr4f03VtagguZ7m103RtPWQWqrCotJZp5jIZRhF3ANz/XueZXwd" +
                        "w3w/lOYYjAfWcTiaKfJzyjBtJOdSW+vvJRVuXd20P48yLNOM+JuIc3y/D5h9Ww2GrNc6hGU0m2oU47ae" +
                        "63J35tlfU5f9nb4gf8ABST9or4jfHH9hvWf2m9O+HV/+y7qt1bfED9pvRNAs7/xTr9hczmDSbSC1d4II" +
                        "g4hkmluARMF2IxLBi/ocbZNwNkmBwmfQwEqqxsVyYdzcacGlecm9W7XSUdY3u1pa3n8EZ1x3nmOxeQTz" +
                        "CNF4KT58QoKVSabtCKjolezblpK1k9b3+uf+Ccf7QH7QF78Zf2qv2Mf2mfG8PxV8e/s0XunXPhX4qw2k" +
                        "dndazoupK5X7VHbjYHRDA65LSfvGVmbZuP5t438G5NDK8uzvK6ToUcYpc1O91Gcf5W9dXzLovdTSV7H6" +
                        "V4GcaZ1PNMxyPNayr1sG48tS1nOEv5ktLpcr6v3mm3a58sftXeJ/j/+zv4f8e+O9W/4LE6JN+0J4Ftrv" +
                        "xdpP7Pk+j+DdNsb+Gzja4Glf2XHPNN500a7IZJYiZH4wCdy/oXh3gMmzutRw8OGZ/UqrUXW5qsmm9Ofn" +
                        "slZPVpPReln+eeI2YZ1klGtiJ8UQ+u0k5Khy0oqSWvJyXbu1om1q9Ot1w//AAU9+O11+01/wR3+AXx01" +
                        "HTIdG1f4heJPDWpa9pmneZ9mi1G3s9YsbsQiYlhEZ4HKBiSFwCW6n1vAPhGOQ+JuMwEZOUaVOok3u4t0" +
                        "3G9utmr+fRHkfSA4wln/hhgswlFRlVqU20tlJKopWvra6dvLq9z7F0v9ob47ft5ftST+D/2U/iFdfC79" +
                        "jr9n6+k0r4yfHjw5badcXXjPXkCu2k6RJqMVynkqhX98icKxkJIaAP+Y4jgvKOEOH1Wzaiq2Z4qN6VGT" +
                        "klSh/PNRad7/Zb3XLpabX6hh+Ns44x4hdDKK7oZXhZWq1oqLdWf8lNyTVrfaS2fNreCfFfHT9qf4jfHX" +
                        "9sr4k/st+A/2rNE/Y0+DH7P1jYn4n/FHUJtCj8Q+Itf1KETrp+mtr0qLHFACRI8YDKyNuLB0Ferwj4e4" +
                        "HKOGKGa4jLp5hisVJ+zppT5IQi7c0+Rat9E9GmrWszyeL/ETHZxxTXynD5jDL8LhYr2lRuHPOclflhzv" +
                        "RLq1qmne90dd+w5+0/8TrD9rX4n/sT/ABM+P2lftYeHtM8NRfF74N/H3w3/AGSbuSwW5gs7nTNSOiySw" +
                        "vNG0+QzNv8AkJYlZEVPN8WeAcBPhzD55hcHLAzdT2VWjLmtezanDnSaTtstNVbVNv0/CPxAzCHEmIyLF" +
                        "Y2GOhGn7WlWjy35bpOE+RtNq+710bbtJJeo/wDBaL/lGl+0n/3J3/qfaHXz/wBFz/ku8D/3F/8ATNQ+h" +
                        "+lR/wAkFj/+4X/p6mfZn7K3/JsH7OH/AGIXg/8A9R60r8w8Qv8Akf47/r/V/wDS5H6l4d/8k/gP+vFL/" +
                        "wBIiflz/wAG/wB/yYpq3/Y++IP/AE3aXX7/APTJ/wCSuj/14h/6VM/nv6GH/JIS/wCv8/8A0mB+4Ffyg" +
                        "f1qfyuf8Esfgp+238dP2NWsvhF+1JF+y38L/C2t63B4Pj8N+H7fV9W8R63I8dzPPfXVxNG1taRFkhRIc" +
                        "ljvLKQFz/oR9IPirhTKOJ+bGZe8biJwhzc03GMIapKKSfNJ6tt7aJPe3+d/0eOFOLM34X5cHmCwWHhOf" +
                        "LywUpVJ6NuTbXLFaJJb6tra/wCoX/BOH9pn4+/tQfs7fHPwP8TvEFlpX7TXwL1vXfgpf/EK2sIJbSTUo" +
                        "bRkstSmtYkigkaK43iSNFVXEYO0bzX4D44cB5PkGd4SvhYOWAxMIVVC7vyt+9BN3avG1m22r76H9BeBn" +
                        "H2c8QZHjMPipxjmGGnOk52VuZL3ZtKydpXukknbZXPgH9qb47fHP9jvRLr4reGv+CtGg/tE/GPwPqNh/" +
                        "wAJ/wDs16tp3hKG11a2udQhtLi2t9P0ieeS0eHzN8iAJIIgzq6FRu/ZPD7hHKeJqqwlXhyeEwtSMuSup" +
                        "VG4tRbTcpJKSdrJ6rmsmnfT8Y8Q+L834YpPF0uJIYvFUpR56DjSSknJJpRi24tXu1o+W7TVtfp3/gox+" +
                        "2J+0R4HsP8Agnj4p/ZZ1MaZrH7SuposHgbVo7aaz1qXWbTR30yyvHmiEgjEt+A5jaNiCeRwR8D4I+GWS" +
                        "YuedUs2jzRwcfjV04KLqc8o2dr2jpe68mff+OPifneEhklXKZcssZL4HZqbkqfJGV1e15a2s/NHFftN6" +
                        "B/wUw/Yo+G4/a9b9suP9oSHwTcafqnxs+COteFtO0vQH068uorWVNOa1LSCKGSZVLqsMmzMmRgofV4Dx" +
                        "nAnFWO/sb+y/qrqKSpVVUlKfMk2ue+l2lezclf3ezPK4+wXHvCmA/tn+1Vi1TcXVounGMOVtJ8ltbJu1" +
                        "0ou3vdLHT/tv/tkftEWvjD/AIJn6/8Asf6+tvF+2JY63LZ+CPFkNs+k3UmqaboT6VPqDCB50WxbWGmmE" +
                        "bjIjwR1rz/CjwxySWGz6nnMLvAShecW+ZcsqnOo62fPyWV097noeLXijnccVkFTJZ2WYRnaEkuV80afI" +
                        "5aXXJ7RylZraxxf7Tr/APBRr/gnl4X0X9q/UP2uW/aq+Hmj6lpdh8ePhZ4s8M6botnHaajdJZiXT2szM" +
                        "YIzNKsStGY2R2QssilkHq8BLgjjXETyiOW/Uq8oydGpGpKbvFXtK9ruybad00mk4uzPK4/fHPBOHhnEs" +
                        "z+vUIyiq1OVOMFaTteNr2V2krWabTakro9l/a6/bb8XeKfjV8Af2Xf2f/jZof7OVh8XfCkHx7+In7R/x" +
                        "AGlN/ZHhe/ST7Fa6fFq0qW7Xlx5ZJDHI3IVYDew+X8NvCnDYfKsZmuY4SeLlQqujChDm96orczk4rm5Y" +
                        "3/B3T0R9T4l+LGJxGa4LKcuxcMJHEUlWnXny+7Td+VRUny80rfirNas8/8AhN+0p8Tf2dv21fgj+z1rv" +
                        "7Ymm/ttfAr9pW21PS9D8SCXQLrxD4T8R6dD5ypPLoMspeC4LRqvmkAh2KgeUxf2eI+BcBnfCuLzGnlks" +
                        "uxeDcW4++oVISdtFNKzjq9Oyu3zK3i8N8eY/JOK8JltTNI5lg8YpJS9xzpzir6uDd1LRa93ZLld+P8Ah" +
                        "l8RP2/P2tf2s/24f2dvAf7Ssfwa+EPwV8ZXEV98QoNC03VPEOnWNxdXtnp2jaYkggRY5fscskk7N5i+W" +
                        "AG+Yq3p59knB3DnDmU5liMB9YxOIoq0OeUYSaUXOpPd3XMkor3XfbS68zIM84z4k4kzfLcPj/q+Gw1Z3" +
                        "nyRlOKbkoU4LRWfK25P3lZa62f0Z+wB8cf2l9D/AGm/2lv2Fv2ovHa/GPxN8ErHTPHXgL4vLZW+nz6ho" +
                        "l+tuwW5jgHzMy30DKWZmRhIjO4CkfEeMnCeRVchwGfZVR+r08TKUJ0ruSjNX2b/AMMl0TXK0lqfceDHF" +
                        "2fUc/x+QZtW+sVMNGM4VbKLlB23S3+KL6tPmTb0P2Dr+aD+nAoAKACgAoAKACgD5j/aw/ZP+Fv7X/wtv" +
                        "/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Vnx0/Y0+O/wG+O9v8As+6/4" +
                        "Pudf8Za/cpafDybw1BLcW/iW3uJfKgnsCBlgx4dT80bZD4INYtHSpJo/qW/4Jt/8E2/DX7IHhqD4g/EG" +
                        "C28S/tEeJbby9V1WPbPbeHLadfmsLBuQXIOJ5x9/wC6vyZL6RjYwnO5+rNWZhQAUAFABQAUAFAH8w+lf" +
                        "snfF1P+CuurfDF/A2qj9l5fiZH+24fFg069XQxrEPh+XVY0S4KfZy39oXQtzHnICnAxX974jxFy1+G0c" +
                        "V7aP9ofVvqnLzLn5XNRel+b4FzX8z+AcP4cZmvEuWF9jL+z/rP1vm5Xycyg5LX4fjly230PTf8Agtt8G" +
                        "/jXc/En4H/GD4AeCNX8aeIvHnhXxf8Asx/ES28JadeX7ro2rxYtln+xxvsjY6ldHc+FDAdcnHg/RU4ny" +
                        "qOBxeDzGrCnClVpYiHNJL3ovW12rv3IaLWx730seFs1lj8JjcuozqTq0quHnyxcvdktL2Tsvfnq9LpH0" +
                        "X/wUE/YS8YeK/2CPgV8Jfgd4btfHXi/9k+68LeI9F8DXaRvF4ltdC0qTSb238qbYkrziXz2ViDJtZRln" +
                        "APxPgz4u4bD8YYvGY+o6VLHKpFzW9NzkpRd1slblTW109kfceNPg/isTwbg8HgKaq1cC6clB7VFCLjJW" +
                        "drt35mnvZrdnzL4P+M//BMTxBa6LoWr/wDBLfxJpfxeujbafr/wl0r4Qpf39lfS/u5FVwsPmQpIrgOVV" +
                        "yqk+WDlR95mfC3H1GU6kOIKcsMrtVHibJrp3s2raXau/i6nwWV8VeH9eMKc+HqkcU7KVJYXmkn17XSd9" +
                        "bJtL4U9D+ijRtH0rw9pGlaBoWnQ6Poeh20Gj6NpOmxrDb2tpbRLBDDFGgCqiIoVVAwAMV/E+KxNSvVlU" +
                        "qScpybbb1bb1bb7tn9vYXC06FKNOnFRhFJJLRJLRJLslsflB/wTr8FeMvC/7Un/AAVC1jxL4S1Pw7pPi" +
                        "74lW2q+FNU12wurS31S1EurEzWklwiLPGN6/NGSORzzX9FeNma4XEcP8PwpVIzlTw7Ukmm4u0NJJPR+T" +
                        "P5x8D8qxWH4h4gnVpShGpiE4txaUleesW1qvNHM/sLeBfG/h7/go1/wU48UeIPB2q6H4Z8W6l4dl8K+I" +
                        "tY0+7trHU0ia93taXE8axzBdwyUY4zXd4t5vhK/BGQUqdWMqlOM+aKkm4/D8STuvmcHhDk+LoccZ/VqU" +
                        "pRp1JQ5ZOLSl8Xwtqz+R5n8Nfh18dLX9vr/AIK1+I/AfhfVfDviDxp4Gt9O+CfjbU7G4tNNu/EI8PQRW" +
                        "TW15cpHBIY7kLu2vgYOcYr3s9zvKJcHcOUsRUjOFOs3VgmnJQ53zXirtXjfoeDkOR5vHjLiSrh6coTqU" +
                        "EqU2moufIuW0nZO0rddD8//AIFax8JPDH7E3xP/AGbrf9hjxj42/wCCg3jDR/Gng/xxrOu+BTdapa6jr" +
                        "UeoW0eqza1qieZawW1tKCqLtYyoQAS5lP7JxdhsyxHFWHzN5vSp5LTnSlBKtaLjHlbgqcdJOUlu7rlfl" +
                        "yn4vwhistw/CeIytZRWqZ1UhVjNujeSlPmSm6ktYqMXsrPmW2vM/Sv2gfhF8WNV/wCCFn7Lnw90v4YeI" +
                        "tS8faP4ltbnVvA9houpTaxaxpqPiIs01nHCZkUCRclkH3h6ivD4N4ly6n4t5hiZ4imqMqbtNziov3aW0" +
                        "r2ez69D3uNOGcyqeEOX4aGHqOtGorwUJOS96rvG11uunU+pvGXwV8Zf8Es/2pfCXxq/Zj+HOt+Mf2OPj" +
                        "n9i8A/Hv4KfD+z1HW7zw5f2cBS31e0t4RPO4ChpQSGyfNiZl82Ir+e5ZxVhfEHh+pgc0rwp5nhrzo1Zu" +
                        "MFNN6wk3ZLWy6fZkk+WV/0PNOFMV4ecQ0sdlVCdTK8TaFalBSm4SS0nFK7el31+1Ftc0beRfGz4S+Av2" +
                        "bP25fjb8dv2j/2Srr9qX9lL9qGDSvGHhr4j6L4Xi8TXng7WYrcLNDPbSqrQRSmRy2dpdBEV3ujqPpeFe" +
                        "I8ZnvCWEwGWZksFmOCcoyg6ns1VjfRprdqytvZ817JpnzPFfDeDyHi7F5hmeWvG5djVGUaip+0dKSWqa" +
                        "eyd3fa65bXaaP0H/YX179ifx98QfFev/sv/ALIWpfBq/wDDukxRyfFnWPAA8K2Oo2+oTI0llaXbfNI48" +
                        "tHkQhcjBG4DI/GPFvB8VYPBU6ea5lHEKcv4are0cXFaSlHpu0nr2dj9r8IsZwpjcbUqZVlksO4R/iOj7" +
                        "NSUnrGMur0Ta07q50X/AAV78K+KPG3/AATu/aF8MeDPDd/4u8S6n/wif9m+HvDFncX99ceT450a4k8qC" +
                        "0SSR9kcbO2FOFBJ4Bri+jXmOHwnGuCq16kadNe0vKTUUr0aiV27JXbt6nb9JjLsRi+CMbSoU5VKkvZ2j" +
                        "FOTdq1NuyV27JN+h9c/szaff6T+zf8As+6VqtlNpmp6Z4I8KafqWm6hG8M9vPDoNrHJHJHIAyOjAhlIB" +
                        "BGDX5tx5WhUzzGzg04utUaa1TTm7NPqmfpXANGdPIsFCacZRo0009GmoRumujR+a/8AwQu8C+N/h5+xV" +
                        "qmg+P8AwdqvgfXX8b67qCaL4w0+70y7MEmn6aqSCG9jjfYxQgNjBwfSv3T6W2b4TG8VRqYerGpD2MFeM" +
                        "lJX5p6XTaufhH0Q8nxeC4UlTxFKVKftpu0ouLtyw1s0nY/Zav5gP6kPyO/4IleCvGXgH9hbQfD3jvwlq" +
                        "fgrX4/EviK7k0PxbYXWm3ixS3EZRzDeRxuFYDg4wa/pD6Vea4XGcXTqYepGpD2cFeLUls+qbR/NX0T8q" +
                        "xWC4QhTxFKVOftJu0ouLtddGkz4O+EHwj/aYg/Zc/4LFaF8NfBWv+GviZ488f6zqHw/huNO1CxvNZ0mT" +
                        "VpXvxpnmJG87XFgZo4TFnczKBkkV+v8S8SZC+IOGKmKqwnQpUIqfvRajLlXLz725Z8rd9knc/HuGeGs/" +
                        "XD/ABRTwtKpDEVa83D3ZJzjzPm5Nr80OZK27asfNvjjV/gh44/4JxT/ALN37Ln7C/i24/aJh0Tw9H8aP" +
                        "GreA2jv9GvtG1PT9W1ee51iaJrm5kuprXZDBGcmOQAKgQR19zlOGzbCccLM81zeksFzz9lD22klKMowS" +
                        "gnyxUU7uT6rd35j4TNsTlOL4GeWZTlFV45Qh7Wfsfeg4SjKbdRrmk5NWjFdHskuU+i/+CiV/wCN/BHgH" +
                        "/gibqfhXwbP4j+JHhDUfC1/4c+H14Gs7m/1vT7LwvJb6c4uApieWeNYjvA2k89K+J8FKOExeM4qjVqqF" +
                        "CpGopTWqUJOteStuknfTc+48bq2LwmD4TnRpOdenKm4wejc4qjaDvs3JW12PW/2vf25fEX7bPwV139kH" +
                        "9l79m/4it8afjE1j4U8c2vxK8MzaJZeELAXsU94dRuJpHjjb935RdsIoYtu3BVPzfhr4S0OFc1hnOa47" +
                        "D/VcPeUPZ1FN1XZqPKkrve9t3a1rXa+l8TPF2vxZlU8lynAYj63iLRn7Sm4Kkrpy523ZbWvsrt3vZPh/" +
                        "wDgoL4b8Xfsq+Pf+CL3hL4WeFZ/iz4r+AkfiDQdL8KaQFiu/Ef9gab4VgvI4AwOJ7qKGUoApO9hhScA+" +
                        "t4M47DcQ4Pimti6ioU8U4Nye0OeVZxb8otq/ktWtzyfGnAYnh3GcK0cJTdephedKK3qckaKkl5ySdvN6" +
                        "J7G/wDtn/tdeIf+Ci3wnh/Yu/ZV+APjtvF/xX1TQ4Piv4g+KXhu40PTfB+nabqdvrDfbp3aVUkWe2jLn" +
                        "O3YGCF3ZVPH4XeG1HgnMXnebYyh7KhGfs405qcqspRcfdWl1Zu3W9m7JNnZ4p+JdfjjLVkeUYKv7WvKH" +
                        "tJVKbhGlGMlL3nrZ3Sv0tdK7aRH+2r+ydZ/s+/tIfs+ftK6v+zdL+1x+zL4W8BaZ+z58Y/Aun6PHrmr6" +
                        "YdCtpLaz1mOzkJB/dLEN7fKux0d08xGD8LPEWWdZHjcshjlgcfOvKtSm5ckZc7TlTcvW+m7umk+VonxV" +
                        "8OI5LnuCzSeAePwEKEaFWCjzyjyJqNRR9La7KzTa5kz6M/ZN8Y/8E6fin8bfBtl+zv+w9qfhPxdpcd34" +
                        "ns/i3efDNND0vQJrGKQbZdRfmKd2Bjj2qQWyu7OAfiPEbLONsvyqrLMs2jOlK0XTVfnlNO20eqW7621s" +
                        "fc+G+acD5jm1KOW5RKnVjeSqvD8kYNX3n0bei6X0uWf+CcHgXxv4W/bV/4Kv694n8Har4c0Lxl430DUP" +
                        "CGta9p93Z2mqwR6h4nZ5LOa4jRJ0UTIS0ZIG5fUVHjhm+ExHCvDtOlVjOdOjNSSkm4vlo6SSd09Hv2Zf" +
                        "gXk+Lw/FfEdSrSlCFStBxbi0pLmraxbVmtVtfdHS/B7wV4ysf8Agsb+1t45vfCWp2fgrWvhr4a0rRvGF" +
                        "1YXUel3d1Eui74Ybt0EMki+W25VYkYORwa4eJs1ws/DHLaEakXVjiKjcbrmSftNXG90tVrY7+GMqxUPF" +
                        "DMsRKlJUpYemlJxfK2vZ3Slazej0TPpP9hr9sDX/wBsbwR4+8Ya/wDAXW/gLN4K8Q3Hge20fxlNJcNfp" +
                        "BBHKZleWzsisiF9ksQVgjYG9s8fC+LPhpR4YxdGjTxkMUqlNTvFWtdtW+KWj3Turroj7zwj8Ta3FGErV" +
                        "qmDnhXTqOFpO97JO/wx1WzVnZ9Wfb1flB+shQAUAFABQAUAFAGReeH9B1HVdG13UNEtL7XPDv2j/hH9Z" +
                        "vLaGW7sPtkYhn+zzOpeLzUAV9hG4cHIoA16ACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACg" +
                        "AoAKACgAoAKACgAoAKAPz1/bS/ZA8b/ALS/xe/Yl+InhTxNpWg6Z+zF49tPiv4tsfEJuxPqFnb6ppV80" +
                        "Np9mhlXzStg4HmFRkjnrj9o8LfEvCZDlma4atTlKWMoOnFxtaLcZq8rtae8trs/FPFXwyxefZnlOJo1I" +
                        "xjgq6qSUr3klKDtGyevuvey2P0Kr8XP2s+Df2oP2UfGXxz/AGmP2IPjd4e8R6ZpGgfsvax4l8R+LtJ1k" +
                        "3QvNQi1qLS44ls/IikTchsW3eYyjkYzzX6/wD4iYXKchzbA1ISlPGwpxi1a0eRzvzXaevMrWTPx3xA8O" +
                        "cVm+f5Rj6dSMYYKdSUk73kpqFuWya05Xe7R95V+QH7EFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFA" +
                        "BQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQA" +
                        "UAf/9kL";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.SideBySideBarSeriesLabel sideBySideBarSeriesLabel1 = new DevExpress.XtraCharts.SideBySideBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.XYDiagram xYDiagram2 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.SideBySideBarSeriesLabel sideBySideBarSeriesLabel2 = new DevExpress.XtraCharts.SideBySideBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions2 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram3 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.SideBySideBarSeriesLabel sideBySideBarSeriesLabel3 = new DevExpress.XtraCharts.SideBySideBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions3 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.XYDiagram xYDiagram4 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.SideBySideBarSeriesLabel sideBySideBarSeriesLabel4 = new DevExpress.XtraCharts.SideBySideBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions4 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.groupHeaderBand1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.pageFooterBand1 = new DevExpress.XtraReports.UI.PageFooterBand();
            this.reportHeaderBand1 = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.groupFooterBand2 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.reportFooterBand1 = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.PageHeader = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.chart2 = new DevExpress.XtraReports.UI.XRChart();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.dsDatos_4 = new XtraReportSerialization.dsDatos_4DataSet();
            this.sqlDataAdapter3 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand1 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection1 = new System.Data.SqlClient.SqlConnection();
            this.label37 = new DevExpress.XtraReports.UI.XRLabel();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo4 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo5 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.label44 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.label41 = new DevExpress.XtraReports.UI.XRLabel();
            this.label39 = new DevExpress.XtraReports.UI.XRLabel();
            this.label38 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo3 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.label24 = new DevExpress.XtraReports.UI.XRLabel();
            this.label25 = new DevExpress.XtraReports.UI.XRLabel();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.line4 = new DevExpress.XtraReports.UI.XRLine();
            this.chart4 = new DevExpress.XtraReports.UI.XRChart();
            this.chart3 = new DevExpress.XtraReports.UI.XRChart();
            this.label36 = new DevExpress.XtraReports.UI.XRLabel();
            this.label26 = new DevExpress.XtraReports.UI.XRLabel();
            this.label27 = new DevExpress.XtraReports.UI.XRLabel();
            this.label28 = new DevExpress.XtraReports.UI.XRLabel();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label34 = new DevExpress.XtraReports.UI.XRLabel();
            this.label33 = new DevExpress.XtraReports.UI.XRLabel();
            this.label35 = new DevExpress.XtraReports.UI.XRLabel();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.label32 = new DevExpress.XtraReports.UI.XRLabel();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.line9 = new DevExpress.XtraReports.UI.XRLine();
            this.label50 = new DevExpress.XtraReports.UI.XRLabel();
            this.label51 = new DevExpress.XtraReports.UI.XRLabel();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.label47 = new DevExpress.XtraReports.UI.XRLabel();
            this.label48 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.line2 = new DevExpress.XtraReports.UI.XRLine();
            this.sqlDataAdapter1 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand2 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection2 = new System.Data.SqlClient.SqlConnection();
            this.dsDatos_1 = new XtraReportSerialization.dsDatos_1DataSet();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FiltroCuentas = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroEmpresas = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroFechas = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroFechaD2 = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroFechaA2 = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroMonedas = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroMovs = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroUsos = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroNiveles = new DevExpress.XtraReports.UI.CalculatedField();
            this.FiltroGrafica = new DevExpress.XtraReports.UI.CalculatedField();
            this.Cancelacion = new DevExpress.XtraReports.UI.CalculatedField();
            this.SaldoMCCalc = new DevExpress.XtraReports.UI.CalculatedField();
            this.SaldoMoneda = new DevExpress.XtraReports.UI.CalculatedField();
            this.spDineroAuxTableAdapter = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand3 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection3 = new System.Data.SqlClient.SqlConnection();
            this.dsDatos_2 = new XtraReportSerialization.dsDatos_2DataSet();
            this.groupFooterBand1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.dsDatos = new XtraReportSerialization.dsDatosDataSet();
            this.sqlDataAdapter2 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand4 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection4 = new System.Data.SqlClient.SqlConnection();
            this.dsDatos_3 = new XtraReportSerialization.dsDatos_3DataSet();
            this.TableTableAdapter = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand5 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection5 = new System.Data.SqlClient.SqlConnection();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(sideBySideBarSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(sideBySideBarSeriesLabel2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(sideBySideBarSeriesLabel3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(sideBySideBarSeriesLabel4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label46,
                        this.label15,
                        this.label16,
                        this.label17,
                        this.label18,
                        this.label19,
                        this.label20});
            this.Detail.HeightF = 23.00002F;
            this.Detail.Name = "Detail";
            this.Detail.StyleName = "DataField";
            // 
            // groupHeaderBand1
            // 
            this.groupHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart2,
                        this.chart1});
            this.groupHeaderBand1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Moneda", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("CtaDinero", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("Descripcion", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("NumeroCta", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.groupHeaderBand1.HeightF = 276.0417F;
            this.groupHeaderBand1.KeepTogether = true;
            this.groupHeaderBand1.Level = 1;
            this.groupHeaderBand1.Name = "groupHeaderBand1";
            this.groupHeaderBand1.Scripts.OnBeforePrint = "groupHeaderBand1_BeforePrint_1";
            // 
            // pageFooterBand1
            // 
            this.pageFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label37,
                        this.line7,
                        this.pageInfo4,
                        this.pageInfo5});
            this.pageFooterBand1.HeightF = 43.12503F;
            this.pageFooterBand1.Name = "pageFooterBand1";
            // 
            // reportHeaderBand1
            // 
            this.reportHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label45,
                        this.label44,
                        this.label43,
                        this.label42,
                        this.label41,
                        this.label39,
                        this.label38,
                        this.label40,
                        this.label21,
                        this.line6,
                        this.pageInfo3,
                        this.pictureBox2});
            this.reportHeaderBand1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.reportHeaderBand1.HeightF = 200F;
            this.reportHeaderBand1.Name = "reportHeaderBand1";
            this.reportHeaderBand1.StylePriority.UseFont = false;
            this.reportHeaderBand1.StylePriority.UseTextAlignment = false;
            this.reportHeaderBand1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // groupFooterBand2
            // 
            this.groupFooterBand2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label3,
                        this.label22,
                        this.label23,
                        this.label24,
                        this.label25,
                        this.line3,
                        this.line4});
            this.groupFooterBand2.HeightF = 28.16665F;
            this.groupFooterBand2.Level = 1;
            this.groupFooterBand2.Name = "groupFooterBand2";
            // 
            // reportFooterBand1
            // 
            this.reportFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart4,
                        this.chart3,
                        this.label36,
                        this.label26,
                        this.label27,
                        this.label28,
                        this.label29});
            this.reportFooterBand1.HeightF = 298.9583F;
            this.reportFooterBand1.Name = "reportFooterBand1";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 10F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 10F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // PageHeader
            // 
            this.PageHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label34,
                        this.label33,
                        this.label35,
                        this.line8,
                        this.label30,
                        this.line5,
                        this.label32,
                        this.label31});
            this.PageHeader.HeightF = 25F;
            this.PageHeader.Name = "PageHeader";
            this.PageHeader.PrintOn = DevExpress.XtraReports.UI.PrintOnPages.NotWithReportHeader;
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line9,
                        this.label50,
                        this.label51,
                        this.label49,
                        this.label47,
                        this.label48});
            this.GroupFooter1.HeightF = 22.91667F;
            this.GroupFooter1.Name = "GroupFooter1";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label2,
                        this.label4,
                        this.label1,
                        this.label8,
                        this.label7,
                        this.label6,
                        this.label5,
                        this.label9,
                        this.label10,
                        this.label11,
                        this.label12,
                        this.label13,
                        this.line1,
                        this.label14,
                        this.line2});
            this.GroupHeader1.HeightF = 86.12499F;
            this.GroupHeader1.Name = "GroupHeader1";
            this.GroupHeader1.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            // 
            // label46
            // 
            this.label46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.Cancelacion")});
            this.label46.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label46.ForeColor = System.Drawing.Color.IndianRed;
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.SizeF = new System.Drawing.SizeF(60.57882F, 18.00003F);
            this.label46.StylePriority.UseFont = false;
            this.label46.StylePriority.UseForeColor = false;
            this.label46.StylePriority.UseTextAlignment = false;
            this.label46.Text = "label46";
            this.label46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label15
            // 
            this.label15.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Beneficiario")});
            this.label15.Font = new System.Drawing.Font("Arial", 9F);
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(198.6841F, 0F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(180F, 18F);
            this.label15.StylePriority.UseFont = false;
            this.label15.StylePriority.UseTextAlignment = false;
            this.label15.Text = "label15";
            this.label15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label16
            // 
            this.label16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Fecha", "{0:dd/MM/yyyy}")});
            this.label16.Font = new System.Drawing.Font("Arial", 9F);
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(378.6841F, 0F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(94.31577F, 18F);
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseTextAlignment = false;
            this.label16.Text = "label16";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label17
            // 
            this.label17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cargos", "{0:$#,#0.00}")});
            this.label17.Font = new System.Drawing.Font("Arial", 9F);
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(472.9999F, 0F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseTextAlignment = false;
            this.label17.Text = "label17";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Abonos", "{0:$#,#0.00}")});
            this.label18.Font = new System.Drawing.Font("Arial", 9F);
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(572.9998F, 0F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(100.0001F, 18F);
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            this.label18.Text = "label18";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo", "{0:$#,#0.00}")});
            this.label19.Font = new System.Drawing.Font("Arial", 9F);
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(672.9999F, 0F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.SizeF = new System.Drawing.SizeF(119.9999F, 18F);
            this.label19.StylePriority.UseFont = false;
            this.label19.StylePriority.UseTextAlignment = false;
            this.label19.Text = "label19";
            this.label19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label20
            // 
            this.label20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Movimiento")});
            this.label20.Font = new System.Drawing.Font("Arial", 9F);
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(60.57882F, 0F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(138.1053F, 18F);
            this.label20.StylePriority.UseFont = false;
            this.label20.StylePriority.UseTextAlignment = false;
            this.label20.Text = "label20";
            this.label20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // chart2
            // 
            this.chart2.BackColor = System.Drawing.Color.Transparent;
            this.chart2.BorderColor = System.Drawing.Color.WhiteSmoke;
            this.chart2.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.chart2.DataAdapter = this.sqlDataAdapter3;
            this.chart2.DataMember = "spDineroAux";
            this.chart2.DataSource = this.dsDatos_4;
            xYDiagram1.AxisX.Label.Visible = false;
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            this.chart2.Diagram = xYDiagram1;
            this.chart2.IndicatorsPaletteName = "Default";
            this.chart2.LocationFloat = new DevExpress.Utils.PointFloat(400F, 10F);
            this.chart2.Name = "chart2";
            this.chart2.Scripts.OnBeforePrint = "chart2_BeforePrint";
            this.chart2.SeriesDataMember = "GraficaArgumento";
            this.chart2.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart2.SeriesTemplate.ArgumentDataMember = "GraficaArgumento";
            sideBySideBarSeriesLabel1.LineVisible = true;
            sideBySideBarSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart2.SeriesTemplate.Label = sideBySideBarSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart2.SeriesTemplate.PointOptions = pointOptions1;
            this.chart2.SeriesTemplate.SeriesPointsSorting = DevExpress.XtraCharts.SortingMode.Ascending;
            this.chart2.SeriesTemplate.ValueDataMembersSerializable = "GraficaValor2";
            this.chart2.SizeF = new System.Drawing.SizeF(398F, 260.4167F);
            this.chart2.StylePriority.UseBackColor = false;
            this.chart2.StylePriority.UseBorderColor = false;
            this.chart2.StylePriority.UseBorders = false;
            this.chart2.Tag = "EXEC spDineroAux [EstacionTrabajo]";
            // 
            // chart1
            // 
            this.chart1.BackColor = System.Drawing.Color.Transparent;
            this.chart1.BorderColor = System.Drawing.Color.WhiteSmoke;
            this.chart1.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.chart1.DataAdapter = this.sqlDataAdapter3;
            this.chart1.DataMember = "spDineroAux";
            this.chart1.DataSource = this.dsDatos_4;
            xYDiagram2.AxisX.Label.Visible = false;
            xYDiagram2.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram2.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram2.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram2.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram2.AxisY.VisibleInPanesSerializable = "-1";
            this.chart1.Diagram = xYDiagram2;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart1.SeriesDataMember = "GraficaArgumento";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "GraficaArgumento";
            sideBySideBarSeriesLabel2.LineVisible = true;
            this.chart1.SeriesTemplate.Label = sideBySideBarSeriesLabel2;
            pointOptions2.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions2;
            this.chart1.SeriesTemplate.SeriesPointsSorting = DevExpress.XtraCharts.SortingMode.Ascending;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "GraficaValor1";
            this.chart1.SizeF = new System.Drawing.SizeF(400F, 260.4167F);
            this.chart1.StylePriority.UseBackColor = false;
            this.chart1.StylePriority.UseBorderColor = false;
            this.chart1.StylePriority.UseBorders = false;
            this.chart1.Tag = "EXEC spDineroAux [EstacionTrabajo]";
            // 
            // dsDatos_4
            // 
            this.dsDatos_4.DataSetName = "dsDatos_4DataSet";
            this.dsDatos_4.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // sqlDataAdapter3
            // 
            this.sqlDataAdapter3.SelectCommand = this.sqlCommand1;
            this.sqlDataAdapter3.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "spDineroAux", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand1
            // 
            this.sqlCommand1.CommandText = "EXEC SPDINEROAUX 1";
            this.sqlCommand1.CommandTimeout = 0;
            this.sqlCommand1.Connection = this.sqlConnection1;
            // 
            // sqlConnection1
            // 
            this.sqlConnection1.ConnectionString = "Data Source=.;Initial Catalog=INFORMES11;User ID=SA;";
            this.sqlConnection1.FireInfoMessageEventOnUserErrors = false;
            // 
            // label37
            // 
            this.label37.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label37.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label37.ForeColor = System.Drawing.Color.DarkGray;
            this.label37.LocationFloat = new DevExpress.Utils.PointFloat(0F, 21.99999F);
            this.label37.Name = "label37";
            this.label37.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label37.SizeF = new System.Drawing.SizeF(313F, 18.00003F);
            this.label37.StylePriority.UseFont = false;
            this.label37.StylePriority.UseForeColor = false;
            this.label37.StylePriority.UseTextAlignment = false;
            this.label37.Text = "label21";
            this.label37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line7
            // 
            this.line7.BorderColor = System.Drawing.Color.Gray;
            this.line7.ForeColor = System.Drawing.Color.Gray;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(794F, 3.125F);
            this.line7.StylePriority.UseBorderColor = false;
            this.line7.StylePriority.UseForeColor = false;
            // 
            // pageInfo4
            // 
            this.pageInfo4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 3.125F);
            this.pageInfo4.Name = "pageInfo4";
            this.pageInfo4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo4.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo4.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo4.StyleName = "PageInfo";
            this.pageInfo4.StylePriority.UseFont = false;
            this.pageInfo4.StylePriority.UseTextAlignment = false;
            this.pageInfo4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pageInfo5
            // 
            this.pageInfo5.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo5.Format = "Página {0} de {1}";
            this.pageInfo5.LocationFloat = new DevExpress.Utils.PointFloat(412.6545F, 3.125F);
            this.pageInfo5.Name = "pageInfo5";
            this.pageInfo5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo5.SizeF = new System.Drawing.SizeF(381.3455F, 18F);
            this.pageInfo5.StyleName = "PageInfo";
            this.pageInfo5.StylePriority.UseFont = false;
            this.pageInfo5.StylePriority.UseTextAlignment = false;
            this.pageInfo5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label45
            // 
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.FiltroGrafica")});
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(398.9999F, 126F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.SizeF = new System.Drawing.SizeF(399F, 18.00001F);
            this.label45.StylePriority.UseTextAlignment = false;
            this.label45.Text = "label45";
            this.label45.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label44
            // 
            this.label44.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.FiltroNiveles")});
            this.label44.LocationFloat = new DevExpress.Utils.PointFloat(398.9999F, 108F);
            this.label44.Name = "label44";
            this.label44.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label44.SizeF = new System.Drawing.SizeF(399F, 18F);
            this.label44.StylePriority.UseTextAlignment = false;
            this.label44.Text = "label44";
            this.label44.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label43
            // 
            this.label43.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.FiltroUsos")});
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(398.9999F, 89.99999F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.SizeF = new System.Drawing.SizeF(399F, 18F);
            this.label43.StylePriority.UseTextAlignment = false;
            this.label43.Text = "label43";
            this.label43.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label42
            // 
            this.label42.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.FiltroMovs")});
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(398.9999F, 71.99999F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(399F, 18F);
            this.label42.StylePriority.UseTextAlignment = false;
            this.label42.Text = "label42";
            this.label42.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label41
            // 
            this.label41.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.FiltroMonedas")});
            this.label41.LocationFloat = new DevExpress.Utils.PointFloat(398.9999F, 54F);
            this.label41.Name = "label41";
            this.label41.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label41.SizeF = new System.Drawing.SizeF(399.0001F, 18F);
            this.label41.StylePriority.UseTextAlignment = false;
            this.label41.Text = "label41";
            this.label41.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label39
            // 
            this.label39.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.FiltroFechas")});
            this.label39.LocationFloat = new DevExpress.Utils.PointFloat(398.9999F, 36F);
            this.label39.Name = "label39";
            this.label39.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label39.SizeF = new System.Drawing.SizeF(399.0001F, 18F);
            this.label39.StylePriority.UseTextAlignment = false;
            this.label39.Text = "[spDineroAux.FiltroFechas]";
            this.label39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label38
            // 
            this.label38.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.FiltroEmpresa")});
            this.label38.LocationFloat = new DevExpress.Utils.PointFloat(398.9999F, 0F);
            this.label38.Name = "label38";
            this.label38.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label38.SizeF = new System.Drawing.SizeF(399.0001F, 18F);
            this.label38.StylePriority.UseTextAlignment = false;
            this.label38.Text = "label38";
            this.label38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label40
            // 
            this.label40.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.FiltroCuentas")});
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(400F, 18F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.SizeF = new System.Drawing.SizeF(398F, 18F);
            this.label40.StylePriority.UseTextAlignment = false;
            this.label40.Text = "label40";
            this.label40.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label21
            // 
            this.label21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label21.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Bold);
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(0F, 172F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(364.5834F, 18F);
            this.label21.StylePriority.UseFont = false;
            this.label21.StylePriority.UseTextAlignment = false;
            this.label21.Text = "label21";
            this.label21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line6
            // 
            this.line6.BorderColor = System.Drawing.Color.Gray;
            this.line6.ForeColor = System.Drawing.Color.Gray;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 190F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(798.6029F, 9.5F);
            this.line6.StylePriority.UseBorderColor = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // pageInfo3
            // 
            this.pageInfo3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo3.LocationFloat = new DevExpress.Utils.PointFloat(447.0613F, 172F);
            this.pageInfo3.Name = "pageInfo3";
            this.pageInfo3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo3.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo3.SizeF = new System.Drawing.SizeF(351.5416F, 17.99999F);
            this.pageInfo3.StyleName = "PageInfo";
            this.pageInfo3.StylePriority.UseFont = false;
            this.pageInfo3.StylePriority.UseTextAlignment = false;
            this.pageInfo3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // label3
            // 
            this.label3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CtaDinero")});
            this.label3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(110.3924F, 6F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(160.7895F, 18F);
            this.label3.StyleName = "DataField";
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseTextAlignment = false;
            this.label3.Text = "label6";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label22
            // 
            this.label22.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cargos")});
            this.label22.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(472.9998F, 6F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label22.StyleName = "FieldCaption";
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:$#,#0.00}";
            summary1.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label22.Summary = summary1;
            this.label22.Text = "label22";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label23
            // 
            this.label23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Abonos")});
            this.label23.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(572.9998F, 6F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(100.0001F, 18F);
            this.label23.StyleName = "FieldCaption";
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:$#,#0.00}";
            summary2.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label23.Summary = summary2;
            this.label23.Text = "label23";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label24
            // 
            this.label24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Saldo", "{0:$#,#0.00}")});
            this.label24.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label24.LocationFloat = new DevExpress.Utils.PointFloat(672.9999F, 6F);
            this.label24.Name = "label24";
            this.label24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label24.SizeF = new System.Drawing.SizeF(119.9999F, 18F);
            this.label24.StyleName = "FieldCaption";
            this.label24.StylePriority.UseFont = false;
            this.label24.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:$#,#0.00}";
            this.label24.Summary = summary3;
            this.label24.Text = "label24";
            this.label24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label25
            // 
            this.label25.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label25.LocationFloat = new DevExpress.Utils.PointFloat(60.57882F, 6F);
            this.label25.Name = "label25";
            this.label25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label25.SizeF = new System.Drawing.SizeF(49.81358F, 18F);
            this.label25.StyleName = "FieldCaption";
            this.label25.StylePriority.UseFont = false;
            this.label25.StylePriority.UseTextAlignment = false;
            this.label25.Text = "Total";
            this.label25.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line3
            // 
            this.line3.BorderColor = System.Drawing.Color.Gray;
            this.line3.ForeColor = System.Drawing.Color.Black;
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(60.57882F, 0F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(738.0241F, 5.083338F);
            this.line3.StylePriority.UseBorderColor = false;
            this.line3.StylePriority.UseForeColor = false;
            // 
            // line4
            // 
            this.line4.BorderColor = System.Drawing.Color.Gray;
            this.line4.ForeColor = System.Drawing.Color.Black;
            this.line4.LineWidth = 2;
            this.line4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 26F);
            this.line4.Name = "line4";
            this.line4.SizeF = new System.Drawing.SizeF(798.6F, 2F);
            this.line4.StylePriority.UseBorderColor = false;
            this.line4.StylePriority.UseForeColor = false;
            // 
            // chart4
            // 
            this.chart4.BackColor = System.Drawing.Color.Transparent;
            this.chart4.BorderColor = System.Drawing.Color.WhiteSmoke;
            this.chart4.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.chart4.DataAdapter = this.sqlDataAdapter3;
            this.chart4.DataMember = "spDineroAux";
            this.chart4.DataSource = this.dsDatos_4;
            xYDiagram3.AxisX.Label.Visible = false;
            xYDiagram3.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram3.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram3.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram3.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram3.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram3.EnableAxisYScrolling = true;
            this.chart4.Diagram = xYDiagram3;
            this.chart4.IndicatorsPaletteName = "Default";
            this.chart4.LocationFloat = new DevExpress.Utils.PointFloat(400F, 35.41667F);
            this.chart4.Name = "chart4";
            this.chart4.Scripts.OnBeforePrint = "chart4_BeforePrint";
            this.chart4.SeriesDataMember = "GraficaArgumento";
            this.chart4.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart4.SeriesTemplate.ArgumentDataMember = "GraficaArgumento";
            sideBySideBarSeriesLabel3.LineVisible = true;
            sideBySideBarSeriesLabel3.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart4.SeriesTemplate.Label = sideBySideBarSeriesLabel3;
            pointOptions3.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart4.SeriesTemplate.PointOptions = pointOptions3;
            this.chart4.SeriesTemplate.SeriesPointsSorting = DevExpress.XtraCharts.SortingMode.Ascending;
            this.chart4.SeriesTemplate.ValueDataMembersSerializable = "GraficaValor4";
            this.chart4.SizeF = new System.Drawing.SizeF(398F, 260.4167F);
            this.chart4.StylePriority.UseBackColor = false;
            this.chart4.StylePriority.UseBorderColor = false;
            this.chart4.StylePriority.UseBorders = false;
            this.chart4.Tag = "EXEC spDineroAux [EstacionTrabajo]";
            // 
            // chart3
            // 
            this.chart3.BackColor = System.Drawing.Color.Transparent;
            this.chart3.BorderColor = System.Drawing.Color.WhiteSmoke;
            this.chart3.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.chart3.DataAdapter = this.sqlDataAdapter3;
            this.chart3.DataMember = "spDineroAux";
            this.chart3.DataSource = this.dsDatos_4;
            xYDiagram4.AxisX.Label.Visible = false;
            xYDiagram4.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram4.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram4.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram4.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram4.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram4.EnableAxisYScrolling = true;
            this.chart3.Diagram = xYDiagram4;
            this.chart3.IndicatorsPaletteName = "Default";
            this.chart3.LocationFloat = new DevExpress.Utils.PointFloat(2.000014F, 35.41667F);
            this.chart3.Name = "chart3";
            this.chart3.Scripts.OnBeforePrint = "chart3_BeforePrint";
            this.chart3.SeriesDataMember = "GraficaArgumento";
            this.chart3.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart3.SeriesTemplate.ArgumentDataMember = "GraficaArgumento";
            sideBySideBarSeriesLabel4.LineVisible = true;
            sideBySideBarSeriesLabel4.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart3.SeriesTemplate.Label = sideBySideBarSeriesLabel4;
            pointOptions4.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart3.SeriesTemplate.PointOptions = pointOptions4;
            this.chart3.SeriesTemplate.SeriesPointsSorting = DevExpress.XtraCharts.SortingMode.Ascending;
            this.chart3.SeriesTemplate.ValueDataMembersSerializable = "GraficaValor3";
            this.chart3.SizeF = new System.Drawing.SizeF(398F, 260.4167F);
            this.chart3.StylePriority.UseBackColor = false;
            this.chart3.StylePriority.UseBorderColor = false;
            this.chart3.StylePriority.UseBorders = false;
            this.chart3.Tag = "EXEC spDineroAux [EstacionTrabajo]";
            // 
            // label36
            // 
            this.label36.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ContMoneda")});
            this.label36.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label36.LocationFloat = new DevExpress.Utils.PointFloat(75.00002F, 2.000046F);
            this.label36.Name = "label36";
            this.label36.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label36.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label36.StylePriority.UseFont = false;
            this.label36.StylePriority.UseTextAlignment = false;
            this.label36.Text = "label36";
            this.label36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label26
            // 
            this.label26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CargosMC")});
            this.label26.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label26.LocationFloat = new DevExpress.Utils.PointFloat(472.9998F, 2F);
            this.label26.Name = "label26";
            this.label26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label26.SizeF = new System.Drawing.SizeF(100F, 18.00003F);
            this.label26.StyleName = "FieldCaption";
            this.label26.StylePriority.UseFont = false;
            this.label26.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:$#,#0.00}";
            summary4.IgnoreNullValues = true;
            summary4.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label26.Summary = summary4;
            this.label26.Text = "label26";
            this.label26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label27
            // 
            this.label27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.AbonosMC")});
            this.label27.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label27.LocationFloat = new DevExpress.Utils.PointFloat(572.9999F, 2F);
            this.label27.Name = "label27";
            this.label27.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label27.SizeF = new System.Drawing.SizeF(99.99994F, 18.00003F);
            this.label27.StyleName = "FieldCaption";
            this.label27.StylePriority.UseFont = false;
            this.label27.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:$#,#0.00}";
            summary5.IgnoreNullValues = true;
            summary5.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label27.Summary = summary5;
            this.label27.Text = "label27";
            this.label27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label28
            // 
            this.label28.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.SaldoMCCalc")});
            this.label28.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label28.LocationFloat = new DevExpress.Utils.PointFloat(672.9999F, 2F);
            this.label28.Name = "label28";
            this.label28.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label28.SizeF = new System.Drawing.SizeF(120F, 18.00003F);
            this.label28.StyleName = "FieldCaption";
            this.label28.StylePriority.UseFont = false;
            this.label28.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:$#,#0.00}";
            summary6.IgnoreNullValues = true;
            summary6.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label28.Summary = summary6;
            this.label28.Text = "label28";
            this.label28.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label29
            // 
            this.label29.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(6.000002F, 1.999982F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(69.00002F, 18.00003F);
            this.label29.StyleName = "FieldCaption";
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseTextAlignment = false;
            this.label29.Text = "Gran Total";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label34
            // 
            this.label34.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label34.LocationFloat = new DevExpress.Utils.PointFloat(672.48F, 2.083333F);
            this.label34.Name = "label34";
            this.label34.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label34.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label34.StylePriority.UseFont = false;
            this.label34.StylePriority.UseTextAlignment = false;
            this.label34.Text = "Saldo";
            this.label34.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label33
            // 
            this.label33.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label33.LocationFloat = new DevExpress.Utils.PointFloat(572.48F, 2.083333F);
            this.label33.Name = "label33";
            this.label33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label33.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label33.StylePriority.UseFont = false;
            this.label33.StylePriority.UseTextAlignment = false;
            this.label33.Text = "Abonos";
            this.label33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label35
            // 
            this.label35.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label35.LocationFloat = new DevExpress.Utils.PointFloat(59.3747F, 2.083333F);
            this.label35.Name = "label35";
            this.label35.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label35.SizeF = new System.Drawing.SizeF(138.1053F, 18F);
            this.label35.StylePriority.UseFont = false;
            this.label35.StylePriority.UseTextAlignment = false;
            this.label35.Text = "Movimiento";
            this.label35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line8
            // 
            this.line8.LineWidth = 2;
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(59.98F, 0F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(738.02F, 2.083336F);
            // 
            // label30
            // 
            this.label30.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(197.48F, 2.083333F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(180F, 18F);
            this.label30.StylePriority.UseFont = false;
            this.label30.StylePriority.UseTextAlignment = false;
            this.label30.Text = "Beneficiario";
            this.label30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line5
            // 
            this.line5.LineWidth = 2;
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(59.98F, 20.08333F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(738.0241F, 2.166748F);
            // 
            // label32
            // 
            this.label32.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label32.LocationFloat = new DevExpress.Utils.PointFloat(472.48F, 2.083333F);
            this.label32.Name = "label32";
            this.label32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label32.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label32.StylePriority.UseFont = false;
            this.label32.StylePriority.UseTextAlignment = false;
            this.label32.Text = "Cargos";
            this.label32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label31
            // 
            this.label31.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(377.48F, 2.083333F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(94.31583F, 18F);
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseTextAlignment = false;
            this.label31.Text = "Fecha";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line9
            // 
            this.line9.BorderColor = System.Drawing.Color.Gray;
            this.line9.ForeColor = System.Drawing.Color.Black;
            this.line9.LineWidth = 2;
            this.line9.LocationFloat = new DevExpress.Utils.PointFloat(0F, 18F);
            this.line9.Name = "line9";
            this.line9.SizeF = new System.Drawing.SizeF(798.6F, 2F);
            this.line9.StylePriority.UseBorderColor = false;
            this.line9.StylePriority.UseForeColor = false;
            // 
            // label50
            // 
            this.label50.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.Cargos")});
            this.label50.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label50.LocationFloat = new DevExpress.Utils.PointFloat(475F, 0F);
            this.label50.Name = "label50";
            this.label50.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label50.SizeF = new System.Drawing.SizeF(100F, 18.00003F);
            this.label50.StyleName = "FieldCaption";
            this.label50.StylePriority.UseFont = false;
            this.label50.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:$#,#0.00}";
            summary7.IgnoreNullValues = true;
            summary7.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label50.Summary = summary7;
            this.label50.Text = "label50";
            this.label50.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label51
            // 
            this.label51.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.Moneda")});
            this.label51.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label51.LocationFloat = new DevExpress.Utils.PointFloat(75F, 0F);
            this.label51.Name = "label51";
            this.label51.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label51.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label51.StylePriority.UseFont = false;
            this.label51.StylePriority.UseTextAlignment = false;
            this.label51.Text = "label51";
            this.label51.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label49
            // 
            this.label49.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.Abonos")});
            this.label49.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(575F, 0F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(99.99994F, 18.00003F);
            this.label49.StyleName = "FieldCaption";
            this.label49.StylePriority.UseFont = false;
            this.label49.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:$#,#0.00}";
            summary8.IgnoreNullValues = true;
            summary8.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label49.Summary = summary8;
            this.label49.Text = "label49";
            this.label49.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label47
            // 
            this.label47.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label47.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.label47.Name = "label47";
            this.label47.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label47.SizeF = new System.Drawing.SizeF(69.00002F, 18.00003F);
            this.label47.StyleName = "FieldCaption";
            this.label47.StylePriority.UseFont = false;
            this.label47.StylePriority.UseTextAlignment = false;
            this.label47.Text = "Total";
            this.label47.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label48
            // 
            this.label48.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spDineroAux.SaldoMoneda")});
            this.label48.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label48.LocationFloat = new DevExpress.Utils.PointFloat(675F, 0F);
            this.label48.Name = "label48";
            this.label48.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label48.SizeF = new System.Drawing.SizeF(120F, 18.00003F);
            this.label48.StyleName = "FieldCaption";
            this.label48.StylePriority.UseFont = false;
            this.label48.StylePriority.UseTextAlignment = false;
            summary9.FormatString = "{0:$#,#0.00}";
            summary9.IgnoreNullValues = true;
            summary9.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label48.Summary = summary9;
            this.label48.Text = "label48";
            this.label48.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label2
            // 
            this.label2.Font = new System.Drawing.Font("Arial", 10F);
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(0.3971539F, 10F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label2.StyleName = "FieldCaption";
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.Text = "Cta Dinero";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label4
            // 
            this.label4.Font = new System.Drawing.Font("Arial", 10F);
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(0.3971539F, 28F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(83F, 18F);
            this.label4.StyleName = "FieldCaption";
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "Numero Cta";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label1
            // 
            this.label1.Font = new System.Drawing.Font("Arial", 10F);
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(620.4058F, 10F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(62.20834F, 18F);
            this.label1.StyleName = "FieldCaption";
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseTextAlignment = false;
            this.label1.Text = "Moneda";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label8
            // 
            this.label8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.NumeroCta")});
            this.label8.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(92.87082F, 28F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(160.7895F, 18F);
            this.label8.StyleName = "DataField";
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseTextAlignment = false;
            this.label8.Text = "label8";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Descripcion")});
            this.label7.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(257.2393F, 10F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(342.3333F, 18F);
            this.label7.StyleName = "DataField";
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseTextAlignment = false;
            this.label7.Text = "label7";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label6
            // 
            this.label6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CtaDinero")});
            this.label6.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(92.87082F, 10F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(160.7895F, 18F);
            this.label6.StyleName = "DataField";
            this.label6.StylePriority.UseFont = false;
            this.label6.StylePriority.UseTextAlignment = false;
            this.label6.Text = "label6";
            this.label6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label5
            // 
            this.label5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Moneda")});
            this.label5.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(682.6141F, 10F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(116.3859F, 18F);
            this.label5.StyleName = "DataField";
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseTextAlignment = false;
            this.label5.Text = "label5";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label9
            // 
            this.label9.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(197.48F, 63.66666F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(180F, 18F);
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseTextAlignment = false;
            this.label9.Text = "Beneficiario";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label10
            // 
            this.label10.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(377.48F, 63.66666F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(94.31583F, 18F);
            this.label10.StylePriority.UseFont = false;
            this.label10.StylePriority.UseTextAlignment = false;
            this.label10.Text = "Fecha";
            this.label10.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label11
            // 
            this.label11.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(471.7958F, 63.66666F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label11.StylePriority.UseFont = false;
            this.label11.StylePriority.UseTextAlignment = false;
            this.label11.Text = "Cargos";
            this.label11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label12
            // 
            this.label12.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(571.7958F, 63.66666F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseTextAlignment = false;
            this.label12.Text = "Abonos";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label13
            // 
            this.label13.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(671.7958F, 63.66666F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            this.label13.Text = "Saldo";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line1
            // 
            this.line1.LineWidth = 2;
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(59.37468F, 61.58333F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(738.02F, 2.083336F);
            // 
            // label14
            // 
            this.label14.Font = new System.Drawing.Font("Times New Roman", 9.75F, System.Drawing.FontStyle.Bold);
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(59.37468F, 63.66666F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(138.1053F, 18F);
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseTextAlignment = false;
            this.label14.Text = "Movimiento";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line2
            // 
            this.line2.LineWidth = 2;
            this.line2.LocationFloat = new DevExpress.Utils.PointFloat(59.37468F, 81.66669F);
            this.line2.Name = "line2";
            this.line2.SizeF = new System.Drawing.SizeF(738.0241F, 2.166748F);
            // 
            // sqlDataAdapter1
            // 
            this.sqlDataAdapter1.SelectCommand = this.sqlCommand2;
            this.sqlDataAdapter1.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand2
            // 
            this.sqlCommand2.CommandText = "EXEC SPDINEROAUX 1";
            this.sqlCommand2.CommandTimeout = 0;
            this.sqlCommand2.Connection = this.sqlConnection2;
            // 
            // sqlConnection2
            // 
            this.sqlConnection2.ConnectionString = "Data Source=.;Initial Catalog=INFORMES11;User ID=SA;";
            this.sqlConnection2.FireInfoMessageEventOnUserErrors = false;
            // 
            // dsDatos_1
            // 
            this.dsDatos_1.DataSetName = "dsDatos_1DataSet";
            this.dsDatos_1.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Tahoma", 24F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Teal;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Black;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Arial", 9F);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Arial", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // FiltroCuentas
            // 
            this.FiltroCuentas.DataMember = "spDineroAux";
            this.FiltroCuentas.DataSource = this.dsDatos;
            this.FiltroCuentas.Expression = "Concat(\'De la cuenta \',[FiltroCtaDineroD],\' a la cuenta \',[FiltroCtaDineroA] )";
            this.FiltroCuentas.Name = "FiltroCuentas";
            // 
            // FiltroEmpresas
            // 
            this.FiltroEmpresas.DataMember = "spDineroAux";
            this.FiltroEmpresas.DataSource = this.dsDatos_1;
            this.FiltroEmpresas.Expression = "Concat(\'Empresa: \',[FiltroEmpresa])";
            this.FiltroEmpresas.Name = "FiltroEmpresas";
            // 
            // FiltroFechas
            // 
            this.FiltroFechas.DataMember = "spDineroAux";
            this.FiltroFechas.DataSource = this.dsDatos_1;
            this.FiltroFechas.Expression = "Concat(\'De la fecha \',[FiltroFechaD2],\' a la fecha \',[FiltroFechaA2])";
            this.FiltroFechas.Name = "FiltroFechas";
            // 
            // FiltroFechaD2
            // 
            this.FiltroFechaD2.DataMember = "spDineroAux";
            this.FiltroFechaD2.DataSource = this.dsDatos_1;
            this.FiltroFechaD2.Expression = "Concat(GetDay([FiltroFechaD]),\'/\',GetMonth([FiltroFechaD]),\'/\',GetYear([FiltroFec" +
                "haD]))";
            this.FiltroFechaD2.FieldType = DevExpress.XtraReports.UI.FieldType.DateTime;
            this.FiltroFechaD2.Name = "FiltroFechaD2";
            // 
            // FiltroFechaA2
            // 
            this.FiltroFechaA2.DataMember = "spDineroAux";
            this.FiltroFechaA2.DataSource = this.dsDatos_1;
            this.FiltroFechaA2.Expression = "Concat(GetDay([FiltroFechaA]),\'/\',GetMonth([FiltroFechaA]),\'/\',GetYear([FiltroFec" +
                "haA]))";
            this.FiltroFechaA2.Name = "FiltroFechaA2";
            // 
            // FiltroMonedas
            // 
            this.FiltroMonedas.DataMember = "spDineroAux";
            this.FiltroMonedas.DataSource = this.dsDatos_1;
            this.FiltroMonedas.Expression = "Concat(\'Moneda: \',[FiltroMoneda])";
            this.FiltroMonedas.Name = "FiltroMonedas";
            // 
            // FiltroMovs
            // 
            this.FiltroMovs.DataMember = "spDineroAux";
            this.FiltroMovs.DataSource = this.dsDatos_1;
            this.FiltroMovs.Expression = "Concat(\'Movimientos: \',[FiltroMov])";
            this.FiltroMovs.Name = "FiltroMovs";
            // 
            // FiltroUsos
            // 
            this.FiltroUsos.DataMember = "spDineroAux";
            this.FiltroUsos.DataSource = this.dsDatos_1;
            this.FiltroUsos.Expression = "Concat(\'Uso: \',[FiltroUso])";
            this.FiltroUsos.Name = "FiltroUsos";
            // 
            // FiltroNiveles
            // 
            this.FiltroNiveles.DataMember = "spDineroAux";
            this.FiltroNiveles.DataSource = this.dsDatos_1;
            this.FiltroNiveles.Expression = "Concat(\'Nivel: \',[FiltroNivel])";
            this.FiltroNiveles.Name = "FiltroNiveles";
            // 
            // FiltroGrafica
            // 
            this.FiltroGrafica.DataMember = "spDineroAux";
            this.FiltroGrafica.DataSource = this.dsDatos_1;
            this.FiltroGrafica.Expression = "Iif([FiltroGraficarTipo]=\'(Todos)\',Concat(\'Gráfica: \',\'(Todos)\'),Concat(\'Gráfica:" +
                " \',[FiltroGraficarCantidad],\' \',[FiltroGraficarTipo]))";
            this.FiltroGrafica.Name = "FiltroGrafica";
            // 
            // Cancelacion
            // 
            this.Cancelacion.DataMember = "spDineroAux";
            this.Cancelacion.DataSource = this.dsDatos_1;
            this.Cancelacion.Expression = "Iif([EsCancelacion]=True,\'(Cancelación)\',\'\')";
            this.Cancelacion.Name = "Cancelacion";
            // 
            // SaldoMCCalc
            // 
            this.SaldoMCCalc.DataMember = "spDineroAux";
            this.SaldoMCCalc.DataSource = this.dsDatos_1;
            this.SaldoMCCalc.Expression = "[AbonosMC]-[CargosMC]";
            this.SaldoMCCalc.Name = "SaldoMCCalc";
            // 
            // SaldoMoneda
            // 
            this.SaldoMoneda.DataMember = "spDineroAux";
            this.SaldoMoneda.DataSource = this.dsDatos_1;
            this.SaldoMoneda.Expression = "[Abonos]-[Cargos]";
            this.SaldoMoneda.Name = "SaldoMoneda";
            // 
            // spDineroAuxTableAdapter
            // 
            this.spDineroAuxTableAdapter.SelectCommand = this.sqlCommand3;
            this.spDineroAuxTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "spDineroAux", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand3
            // 
            this.sqlCommand3.CommandTimeout = 0;
            this.sqlCommand3.Connection = this.sqlConnection3;
            // 
            // sqlConnection3
            // 
            this.sqlConnection3.ConnectionString = "Data Source=.;Initial Catalog=INFORMES;User ID=SA;Password=";
            this.sqlConnection3.FireInfoMessageEventOnUserErrors = false;
            // 
            // dsDatos_2
            // 
            this.dsDatos_2.DataSetName = "dsDatos_2DataSet";
            this.dsDatos_2.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // groupFooterBand1
            // 
            this.groupFooterBand1.HeightF = 1F;
            this.groupFooterBand1.Name = "groupFooterBand1";
            // 
            // dsDatos
            // 
            this.dsDatos.DataSetName = "dsDatosDataSet";
            this.dsDatos.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // sqlDataAdapter2
            // 
            this.sqlDataAdapter2.SelectCommand = this.sqlCommand4;
            this.sqlDataAdapter2.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "spDineroAux", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand4
            // 
            this.sqlCommand4.CommandText = "EXEC SPDINEROAUX 1";
            this.sqlCommand4.Connection = this.sqlConnection4;
            // 
            // sqlConnection4
            // 
            this.sqlConnection4.ConnectionString = "Data Source=ABRAHAMROMANO;Initial Catalog=V4500;User ID=SA;";
            this.sqlConnection4.FireInfoMessageEventOnUserErrors = false;
            // 
            // dsDatos_3
            // 
            this.dsDatos_3.DataSetName = "dsDatos_3DataSet";
            this.dsDatos_3.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.SelectCommand = this.sqlCommand5;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand5
            // 
            this.sqlCommand5.CommandText = "SPDINEROAUX 1";
            this.sqlCommand5.Connection = this.sqlConnection5;
            // 
            // sqlConnection5
            // 
            this.sqlConnection5.ConnectionString = "Data Source=ABRAHAMROMANO;Initial Catalog=V4500;User ID=SA;";
            this.sqlConnection5.FireInfoMessageEventOnUserErrors = false;
            // 
            // InformeDineroAux
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.groupHeaderBand1,
                        this.pageFooterBand1,
                        this.reportHeaderBand1,
                        this.groupFooterBand2,
                        this.reportFooterBand1,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.PageHeader,
                        this.GroupFooter1,
                        this.GroupHeader1});
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.FiltroCuentas,
                        this.FiltroEmpresas,
                        this.FiltroFechas,
                        this.FiltroFechaD2,
                        this.FiltroFechaA2,
                        this.FiltroMonedas,
                        this.FiltroMovs,
                        this.FiltroUsos,
                        this.FiltroNiveles,
                        this.FiltroGrafica,
                        this.Cancelacion,
                        this.SaldoMCCalc,
                        this.SaldoMoneda});
            this.DataAdapter = this.sqlDataAdapter1;
            this.DataMember = "Table";
            this.DataSource = this.dsDatos_1;
            this.FilterString = "[Grafica] = 0";
            this.Margins = new System.Drawing.Printing.Margins(26, 25, 10, 10);
            this.Name = "InformeDineroAux";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "EXEC spDineroAux [EstacionTrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(sideBySideBarSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(sideBySideBarSeriesLabel2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(sideBySideBarSeriesLabel3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(sideBySideBarSeriesLabel4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatos_4DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatos_4DataSet : global::System.Data.DataSet {
        private spDineroAuxDataTable tablespDineroAux;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatos_4DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatos_4DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spDineroAux"] != null)) {
                    base.Tables.Add(new spDineroAuxDataTable(ds.Tables["spDineroAux"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spDineroAuxDataTable spDineroAux {
            get {
                return this.tablespDineroAux;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatos_4DataSet cln = ((dsDatos_4DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spDineroAux"] != null)) {
                    base.Tables.Add(new spDineroAuxDataTable(ds.Tables["spDineroAux"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablespDineroAux = ((spDineroAuxDataTable)(base.Tables["spDineroAux"]));
            if ((initTable == true)) {
                if ((this.tablespDineroAux != null)) {
                    this.tablespDineroAux.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatos_4DataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespDineroAux = new spDineroAuxDataTable();
            base.Tables.Add(this.tablespDineroAux);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespDineroAux() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatos_4DataSet ds = new dsDatos_4DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void spDineroAuxRowChangeEventHandler(object sender, spDineroAuxRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spDineroAuxDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnCtaDinero;
            private global::System.Data.DataColumn columnNumeroCta;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnTipo;
            private global::System.Data.DataColumn columnUso;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnTipoCambio;
            private global::System.Data.DataColumn columnBeneficiario;
            private global::System.Data.DataColumn columnFecha;
            private global::System.Data.DataColumn columnMovimiento;
            private global::System.Data.DataColumn columnCargos;
            private global::System.Data.DataColumn columnAbonos;
            private global::System.Data.DataColumn columnSaldo;
            private global::System.Data.DataColumn columnCargosMC;
            private global::System.Data.DataColumn columnAbonosMC;
            private global::System.Data.DataColumn columnSaldoMC;
            private global::System.Data.DataColumn columnEsCancelacion;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor1;
            private global::System.Data.DataColumn columnGraficaValor2;
            private global::System.Data.DataColumn columnGraficaValor3;
            private global::System.Data.DataColumn columnGraficaValor4;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnContMoneda;
            private global::System.Data.DataColumn columnFiltroCtaDineroD;
            private global::System.Data.DataColumn columnFiltroEmpresa;
            private global::System.Data.DataColumn columnFiltroCtaDineroA;
            private global::System.Data.DataColumn columnFiltroFechaD;
            private global::System.Data.DataColumn columnFiltroFechaA;
            private global::System.Data.DataColumn columnFiltroUso;
            private global::System.Data.DataColumn columnFiltroMov;
            private global::System.Data.DataColumn columnFiltroNivel;
            private global::System.Data.DataColumn columnFiltroMoneda;
            private global::System.Data.DataColumn columnFiltroGraficarTipo;
            private global::System.Data.DataColumn columnFiltroGraficarCantidad;
            private global::System.Data.DataColumn columnGraficaPositivo;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxDataTable() {
                this.TableName = "spDineroAux";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAuxDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spDineroAuxDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CtaDineroColumn {
                get {
                    return this.columnCtaDinero;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroCtaColumn {
                get {
                    return this.columnNumeroCta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsoColumn {
                get {
                    return this.columnUso;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoCambioColumn {
                get {
                    return this.columnTipoCambio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeneficiarioColumn {
                get {
                    return this.columnBeneficiario;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovimientoColumn {
                get {
                    return this.columnMovimiento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosColumn {
                get {
                    return this.columnCargos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosColumn {
                get {
                    return this.columnAbonos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosMCColumn {
                get {
                    return this.columnCargosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosMCColumn {
                get {
                    return this.columnAbonosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoMCColumn {
                get {
                    return this.columnSaldoMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EsCancelacionColumn {
                get {
                    return this.columnEsCancelacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor1Column {
                get {
                    return this.columnGraficaValor1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor2Column {
                get {
                    return this.columnGraficaValor2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor3Column {
                get {
                    return this.columnGraficaValor3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor4Column {
                get {
                    return this.columnGraficaValor4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContMonedaColumn {
                get {
                    return this.columnContMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroCtaDineroDColumn {
                get {
                    return this.columnFiltroCtaDineroD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroEmpresaColumn {
                get {
                    return this.columnFiltroEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroCtaDineroAColumn {
                get {
                    return this.columnFiltroCtaDineroA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroFechaDColumn {
                get {
                    return this.columnFiltroFechaD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroFechaAColumn {
                get {
                    return this.columnFiltroFechaA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroUsoColumn {
                get {
                    return this.columnFiltroUso;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroMovColumn {
                get {
                    return this.columnFiltroMov;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroNivelColumn {
                get {
                    return this.columnFiltroNivel;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroMonedaColumn {
                get {
                    return this.columnFiltroMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroGraficarTipoColumn {
                get {
                    return this.columnFiltroGraficarTipo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroGraficarCantidadColumn {
                get {
                    return this.columnFiltroGraficarCantidad;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaPositivoColumn {
                get {
                    return this.columnGraficaPositivo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow this[int index] {
                get {
                    return ((spDineroAuxRow)(this.Rows[index]));
                }
            }
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowChanging;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowChanged;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowDeleting;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspDineroAuxRow(spDineroAuxRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow AddspDineroAuxRow(
                        int Estacion, 
                        int ID, 
                        string CtaDinero, 
                        string NumeroCta, 
                        string Descripcion, 
                        string Tipo, 
                        string Uso, 
                        string Moneda, 
                        double TipoCambio, 
                        string Beneficiario, 
                        System.DateTime Fecha, 
                        string Movimiento, 
                        double Cargos, 
                        double Abonos, 
                        double Saldo, 
                        double CargosMC, 
                        double AbonosMC, 
                        double SaldoMC, 
                        bool EsCancelacion, 
                        int Grafica, 
                        string GraficaArgumento, 
                        double GraficaValor1, 
                        double GraficaValor2, 
                        double GraficaValor3, 
                        double GraficaValor4, 
                        string Titulo, 
                        string ContMoneda, 
                        string FiltroCtaDineroD, 
                        string FiltroEmpresa, 
                        string FiltroCtaDineroA, 
                        System.DateTime FiltroFechaD, 
                        System.DateTime FiltroFechaA, 
                        string FiltroUso, 
                        string FiltroMov, 
                        string FiltroNivel, 
                        string FiltroMoneda, 
                        string FiltroGraficarTipo, 
                        int FiltroGraficarCantidad, 
                        int GraficaPositivo, 
                        bool VerGraficaDetalle) {
                spDineroAuxRow rowspDineroAuxRow = ((spDineroAuxRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        ID,
                        CtaDinero,
                        NumeroCta,
                        Descripcion,
                        Tipo,
                        Uso,
                        Moneda,
                        TipoCambio,
                        Beneficiario,
                        Fecha,
                        Movimiento,
                        Cargos,
                        Abonos,
                        Saldo,
                        CargosMC,
                        AbonosMC,
                        SaldoMC,
                        EsCancelacion,
                        Grafica,
                        GraficaArgumento,
                        GraficaValor1,
                        GraficaValor2,
                        GraficaValor3,
                        GraficaValor4,
                        Titulo,
                        ContMoneda,
                        FiltroCtaDineroD,
                        FiltroEmpresa,
                        FiltroCtaDineroA,
                        FiltroFechaD,
                        FiltroFechaA,
                        FiltroUso,
                        FiltroMov,
                        FiltroNivel,
                        FiltroMoneda,
                        FiltroGraficarTipo,
                        FiltroGraficarCantidad,
                        GraficaPositivo,
                        VerGraficaDetalle};
                rowspDineroAuxRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspDineroAuxRow);
                return rowspDineroAuxRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spDineroAuxDataTable cln = ((spDineroAuxDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spDineroAuxDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnID = base.Columns["ID"];
                this.columnCtaDinero = base.Columns["CtaDinero"];
                this.columnNumeroCta = base.Columns["NumeroCta"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnUso = base.Columns["Uso"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnTipoCambio = base.Columns["TipoCambio"];
                this.columnBeneficiario = base.Columns["Beneficiario"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnMovimiento = base.Columns["Movimiento"];
                this.columnCargos = base.Columns["Cargos"];
                this.columnAbonos = base.Columns["Abonos"];
                this.columnSaldo = base.Columns["Saldo"];
                this.columnCargosMC = base.Columns["CargosMC"];
                this.columnAbonosMC = base.Columns["AbonosMC"];
                this.columnSaldoMC = base.Columns["SaldoMC"];
                this.columnEsCancelacion = base.Columns["EsCancelacion"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor1 = base.Columns["GraficaValor1"];
                this.columnGraficaValor2 = base.Columns["GraficaValor2"];
                this.columnGraficaValor3 = base.Columns["GraficaValor3"];
                this.columnGraficaValor4 = base.Columns["GraficaValor4"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnContMoneda = base.Columns["ContMoneda"];
                this.columnFiltroCtaDineroD = base.Columns["FiltroCtaDineroD"];
                this.columnFiltroEmpresa = base.Columns["FiltroEmpresa"];
                this.columnFiltroCtaDineroA = base.Columns["FiltroCtaDineroA"];
                this.columnFiltroFechaD = base.Columns["FiltroFechaD"];
                this.columnFiltroFechaA = base.Columns["FiltroFechaA"];
                this.columnFiltroUso = base.Columns["FiltroUso"];
                this.columnFiltroMov = base.Columns["FiltroMov"];
                this.columnFiltroNivel = base.Columns["FiltroNivel"];
                this.columnFiltroMoneda = base.Columns["FiltroMoneda"];
                this.columnFiltroGraficarTipo = base.Columns["FiltroGraficarTipo"];
                this.columnFiltroGraficarCantidad = base.Columns["FiltroGraficarCantidad"];
                this.columnGraficaPositivo = base.Columns["GraficaPositivo"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCtaDinero = new global::System.Data.DataColumn("CtaDinero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtaDinero);
                this.columnNumeroCta = new global::System.Data.DataColumn("NumeroCta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroCta);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnUso = new global::System.Data.DataColumn("Uso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUso);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnTipoCambio = new global::System.Data.DataColumn("TipoCambio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoCambio);
                this.columnBeneficiario = new global::System.Data.DataColumn("Beneficiario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeneficiario);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnMovimiento = new global::System.Data.DataColumn("Movimiento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovimiento);
                this.columnCargos = new global::System.Data.DataColumn("Cargos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargos);
                this.columnAbonos = new global::System.Data.DataColumn("Abonos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonos);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.columnCargosMC = new global::System.Data.DataColumn("CargosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosMC);
                this.columnAbonosMC = new global::System.Data.DataColumn("AbonosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosMC);
                this.columnSaldoMC = new global::System.Data.DataColumn("SaldoMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoMC);
                this.columnEsCancelacion = new global::System.Data.DataColumn("EsCancelacion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEsCancelacion);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor1 = new global::System.Data.DataColumn("GraficaValor1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor1);
                this.columnGraficaValor2 = new global::System.Data.DataColumn("GraficaValor2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor2);
                this.columnGraficaValor3 = new global::System.Data.DataColumn("GraficaValor3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor3);
                this.columnGraficaValor4 = new global::System.Data.DataColumn("GraficaValor4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor4);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnContMoneda = new global::System.Data.DataColumn("ContMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContMoneda);
                this.columnFiltroCtaDineroD = new global::System.Data.DataColumn("FiltroCtaDineroD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroCtaDineroD);
                this.columnFiltroEmpresa = new global::System.Data.DataColumn("FiltroEmpresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroEmpresa);
                this.columnFiltroCtaDineroA = new global::System.Data.DataColumn("FiltroCtaDineroA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroCtaDineroA);
                this.columnFiltroFechaD = new global::System.Data.DataColumn("FiltroFechaD", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroFechaD);
                this.columnFiltroFechaA = new global::System.Data.DataColumn("FiltroFechaA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroFechaA);
                this.columnFiltroUso = new global::System.Data.DataColumn("FiltroUso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroUso);
                this.columnFiltroMov = new global::System.Data.DataColumn("FiltroMov", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroMov);
                this.columnFiltroNivel = new global::System.Data.DataColumn("FiltroNivel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroNivel);
                this.columnFiltroMoneda = new global::System.Data.DataColumn("FiltroMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroMoneda);
                this.columnFiltroGraficarTipo = new global::System.Data.DataColumn("FiltroGraficarTipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroGraficarTipo);
                this.columnFiltroGraficarCantidad = new global::System.Data.DataColumn("FiltroGraficarCantidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroGraficarCantidad);
                this.columnGraficaPositivo = new global::System.Data.DataColumn("GraficaPositivo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaPositivo);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow NewspDineroAuxRow() {
                return ((spDineroAuxRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spDineroAuxRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spDineroAuxRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spDineroAuxRowChanged != null)) {
                    this.spDineroAuxRowChanged(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spDineroAuxRowChanging != null)) {
                    this.spDineroAuxRowChanging(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spDineroAuxRowDeleted != null)) {
                    this.spDineroAuxRowDeleted(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spDineroAuxRowDeleting != null)) {
                    this.spDineroAuxRowDeleting(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespDineroAuxRow(spDineroAuxRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatos_4DataSet ds = new dsDatos_4DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spDineroAuxDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spDineroAuxRow : global::System.Data.DataRow {
            private spDineroAuxDataTable tablespDineroAux;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAuxRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespDineroAux = ((spDineroAuxDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CtaDinero {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.CtaDineroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CtaDinero\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CtaDineroColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroCta {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.NumeroCtaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NumeroCta\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.NumeroCtaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Tipo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TipoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uso {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.UsoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Uso\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.UsoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TipoCambio {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.TipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TipoCambio\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TipoCambioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Beneficiario {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.BeneficiarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Beneficiario\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.BeneficiarioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fecha\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FechaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Movimiento {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.MovimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Movimiento\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.MovimientoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cargos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.CargosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cargos\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CargosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Abonos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.AbonosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Abonos\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.AbonosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Saldo {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.SaldoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.CargosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CargosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.AbonosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.AbonosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.SaldoMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.SaldoMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EsCancelacion {
                get {
                    try {
                        return ((bool)(this[this.tablespDineroAux.EsCancelacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EsCancelacion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.EsCancelacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor1 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor1\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor2 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor2\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor3 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor3\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor4 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor4\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.ContMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ContMoneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.ContMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroCtaDineroD {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroCtaDineroDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroCtaDineroD\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroCtaDineroDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroEmpresa {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroEmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroEmpresa\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroEmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroCtaDineroA {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroCtaDineroAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroCtaDineroA\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroCtaDineroAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FiltroFechaD {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FiltroFechaDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroFechaD\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroFechaDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FiltroFechaA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FiltroFechaAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroFechaA\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroFechaAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroUso {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroUsoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroUso\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroUsoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroMov {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroMovColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroMov\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroMovColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroNivel {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroNivelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroNivel\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroNivelColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroMoneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroGraficarTipo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroGraficarTipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroGraficarTipo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroGraficarTipoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FiltroGraficarCantidad {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.FiltroGraficarCantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroGraficarCantidad\' de la tabla \'spDineroAux\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroGraficarCantidadColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GraficaPositivo {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.GraficaPositivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaPositivo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaPositivoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.tablespDineroAux.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.tablespDineroAux.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.tablespDineroAux.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tablespDineroAux.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tablespDineroAux.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtaDineroNull() {
                return this.IsNull(this.tablespDineroAux.CtaDineroColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtaDineroNull() {
                this[this.tablespDineroAux.CtaDineroColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroCtaNull() {
                return this.IsNull(this.tablespDineroAux.NumeroCtaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroCtaNull() {
                this[this.tablespDineroAux.NumeroCtaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablespDineroAux.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablespDineroAux.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoNull() {
                return this.IsNull(this.tablespDineroAux.TipoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoNull() {
                this[this.tablespDineroAux.TipoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsoNull() {
                return this.IsNull(this.tablespDineroAux.UsoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsoNull() {
                this[this.tablespDineroAux.UsoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tablespDineroAux.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tablespDineroAux.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoCambioNull() {
                return this.IsNull(this.tablespDineroAux.TipoCambioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoCambioNull() {
                this[this.tablespDineroAux.TipoCambioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeneficiarioNull() {
                return this.IsNull(this.tablespDineroAux.BeneficiarioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeneficiarioNull() {
                this[this.tablespDineroAux.BeneficiarioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.tablespDineroAux.FechaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.tablespDineroAux.FechaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovimientoNull() {
                return this.IsNull(this.tablespDineroAux.MovimientoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovimientoNull() {
                this[this.tablespDineroAux.MovimientoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosNull() {
                return this.IsNull(this.tablespDineroAux.CargosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosNull() {
                this[this.tablespDineroAux.CargosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosNull() {
                return this.IsNull(this.tablespDineroAux.AbonosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosNull() {
                this[this.tablespDineroAux.AbonosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoNull() {
                return this.IsNull(this.tablespDineroAux.SaldoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoNull() {
                this[this.tablespDineroAux.SaldoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosMCNull() {
                return this.IsNull(this.tablespDineroAux.CargosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosMCNull() {
                this[this.tablespDineroAux.CargosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosMCNull() {
                return this.IsNull(this.tablespDineroAux.AbonosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosMCNull() {
                this[this.tablespDineroAux.AbonosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoMCNull() {
                return this.IsNull(this.tablespDineroAux.SaldoMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoMCNull() {
                this[this.tablespDineroAux.SaldoMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEsCancelacionNull() {
                return this.IsNull(this.tablespDineroAux.EsCancelacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEsCancelacionNull() {
                this[this.tablespDineroAux.EsCancelacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.tablespDineroAux.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.tablespDineroAux.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.tablespDineroAux.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.tablespDineroAux.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor1Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor1Null() {
                this[this.tablespDineroAux.GraficaValor1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor2Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor2Null() {
                this[this.tablespDineroAux.GraficaValor2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor3Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor3Null() {
                this[this.tablespDineroAux.GraficaValor3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor4Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor4Null() {
                this[this.tablespDineroAux.GraficaValor4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.tablespDineroAux.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.tablespDineroAux.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContMonedaNull() {
                return this.IsNull(this.tablespDineroAux.ContMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContMonedaNull() {
                this[this.tablespDineroAux.ContMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroCtaDineroDNull() {
                return this.IsNull(this.tablespDineroAux.FiltroCtaDineroDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroCtaDineroDNull() {
                this[this.tablespDineroAux.FiltroCtaDineroDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroEmpresaNull() {
                return this.IsNull(this.tablespDineroAux.FiltroEmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroEmpresaNull() {
                this[this.tablespDineroAux.FiltroEmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroCtaDineroANull() {
                return this.IsNull(this.tablespDineroAux.FiltroCtaDineroAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroCtaDineroANull() {
                this[this.tablespDineroAux.FiltroCtaDineroAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroFechaDNull() {
                return this.IsNull(this.tablespDineroAux.FiltroFechaDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroFechaDNull() {
                this[this.tablespDineroAux.FiltroFechaDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroFechaANull() {
                return this.IsNull(this.tablespDineroAux.FiltroFechaAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroFechaANull() {
                this[this.tablespDineroAux.FiltroFechaAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroUsoNull() {
                return this.IsNull(this.tablespDineroAux.FiltroUsoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroUsoNull() {
                this[this.tablespDineroAux.FiltroUsoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroMovNull() {
                return this.IsNull(this.tablespDineroAux.FiltroMovColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroMovNull() {
                this[this.tablespDineroAux.FiltroMovColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroNivelNull() {
                return this.IsNull(this.tablespDineroAux.FiltroNivelColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroNivelNull() {
                this[this.tablespDineroAux.FiltroNivelColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroMonedaNull() {
                return this.IsNull(this.tablespDineroAux.FiltroMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroMonedaNull() {
                this[this.tablespDineroAux.FiltroMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroGraficarTipoNull() {
                return this.IsNull(this.tablespDineroAux.FiltroGraficarTipoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroGraficarTipoNull() {
                this[this.tablespDineroAux.FiltroGraficarTipoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroGraficarCantidadNull() {
                return this.IsNull(this.tablespDineroAux.FiltroGraficarCantidadColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroGraficarCantidadNull() {
                this[this.tablespDineroAux.FiltroGraficarCantidadColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaPositivoNull() {
                return this.IsNull(this.tablespDineroAux.GraficaPositivoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaPositivoNull() {
                this[this.tablespDineroAux.GraficaPositivoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.tablespDineroAux.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.tablespDineroAux.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spDineroAuxRowChangeEvent : global::System.EventArgs {
            private spDineroAuxRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRowChangeEvent(spDineroAuxRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatos_1DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatos_1DataSet : global::System.Data.DataSet {
        private spDineroAuxDataTable tablespDineroAux;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatos_1DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatos_1DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spDineroAux"] != null)) {
                    base.Tables.Add(new spDineroAuxDataTable(ds.Tables["spDineroAux"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spDineroAuxDataTable spDineroAux {
            get {
                return this.tablespDineroAux;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatos_1DataSet cln = ((dsDatos_1DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spDineroAux"] != null)) {
                    base.Tables.Add(new spDineroAuxDataTable(ds.Tables["spDineroAux"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablespDineroAux = ((spDineroAuxDataTable)(base.Tables["spDineroAux"]));
            if ((initTable == true)) {
                if ((this.tablespDineroAux != null)) {
                    this.tablespDineroAux.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatos_1DataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespDineroAux = new spDineroAuxDataTable();
            base.Tables.Add(this.tablespDineroAux);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespDineroAux() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatos_1DataSet ds = new dsDatos_1DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void spDineroAuxRowChangeEventHandler(object sender, spDineroAuxRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spDineroAuxDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnCtaDinero;
            private global::System.Data.DataColumn columnNumeroCta;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnTipo;
            private global::System.Data.DataColumn columnUso;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnTipoCambio;
            private global::System.Data.DataColumn columnBeneficiario;
            private global::System.Data.DataColumn columnFecha;
            private global::System.Data.DataColumn columnMovimiento;
            private global::System.Data.DataColumn columnCargos;
            private global::System.Data.DataColumn columnAbonos;
            private global::System.Data.DataColumn columnSaldo;
            private global::System.Data.DataColumn columnCargosMC;
            private global::System.Data.DataColumn columnAbonosMC;
            private global::System.Data.DataColumn columnSaldoMC;
            private global::System.Data.DataColumn columnEsCancelacion;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor1;
            private global::System.Data.DataColumn columnGraficaValor2;
            private global::System.Data.DataColumn columnGraficaValor3;
            private global::System.Data.DataColumn columnGraficaValor4;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnContMoneda;
            private global::System.Data.DataColumn columnFiltroCtaDineroD;
            private global::System.Data.DataColumn columnFiltroEmpresa;
            private global::System.Data.DataColumn columnFiltroCtaDineroA;
            private global::System.Data.DataColumn columnFiltroFechaD;
            private global::System.Data.DataColumn columnFiltroFechaA;
            private global::System.Data.DataColumn columnFiltroUso;
            private global::System.Data.DataColumn columnFiltroMov;
            private global::System.Data.DataColumn columnFiltroNivel;
            private global::System.Data.DataColumn columnFiltroMoneda;
            private global::System.Data.DataColumn columnFiltroGraficarTipo;
            private global::System.Data.DataColumn columnFiltroGraficarCantidad;
            private global::System.Data.DataColumn columnGraficaPositivo;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxDataTable() {
                this.TableName = "spDineroAux";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAuxDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spDineroAuxDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CtaDineroColumn {
                get {
                    return this.columnCtaDinero;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroCtaColumn {
                get {
                    return this.columnNumeroCta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsoColumn {
                get {
                    return this.columnUso;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoCambioColumn {
                get {
                    return this.columnTipoCambio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeneficiarioColumn {
                get {
                    return this.columnBeneficiario;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovimientoColumn {
                get {
                    return this.columnMovimiento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosColumn {
                get {
                    return this.columnCargos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosColumn {
                get {
                    return this.columnAbonos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosMCColumn {
                get {
                    return this.columnCargosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosMCColumn {
                get {
                    return this.columnAbonosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoMCColumn {
                get {
                    return this.columnSaldoMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EsCancelacionColumn {
                get {
                    return this.columnEsCancelacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor1Column {
                get {
                    return this.columnGraficaValor1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor2Column {
                get {
                    return this.columnGraficaValor2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor3Column {
                get {
                    return this.columnGraficaValor3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor4Column {
                get {
                    return this.columnGraficaValor4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContMonedaColumn {
                get {
                    return this.columnContMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroCtaDineroDColumn {
                get {
                    return this.columnFiltroCtaDineroD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroEmpresaColumn {
                get {
                    return this.columnFiltroEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroCtaDineroAColumn {
                get {
                    return this.columnFiltroCtaDineroA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroFechaDColumn {
                get {
                    return this.columnFiltroFechaD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroFechaAColumn {
                get {
                    return this.columnFiltroFechaA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroUsoColumn {
                get {
                    return this.columnFiltroUso;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroMovColumn {
                get {
                    return this.columnFiltroMov;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroNivelColumn {
                get {
                    return this.columnFiltroNivel;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroMonedaColumn {
                get {
                    return this.columnFiltroMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroGraficarTipoColumn {
                get {
                    return this.columnFiltroGraficarTipo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroGraficarCantidadColumn {
                get {
                    return this.columnFiltroGraficarCantidad;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaPositivoColumn {
                get {
                    return this.columnGraficaPositivo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow this[int index] {
                get {
                    return ((spDineroAuxRow)(this.Rows[index]));
                }
            }
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowChanging;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowChanged;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowDeleting;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspDineroAuxRow(spDineroAuxRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow AddspDineroAuxRow(
                        int Estacion, 
                        int ID, 
                        string CtaDinero, 
                        string NumeroCta, 
                        string Descripcion, 
                        string Tipo, 
                        string Uso, 
                        string Moneda, 
                        double TipoCambio, 
                        string Beneficiario, 
                        System.DateTime Fecha, 
                        string Movimiento, 
                        double Cargos, 
                        double Abonos, 
                        double Saldo, 
                        double CargosMC, 
                        double AbonosMC, 
                        double SaldoMC, 
                        bool EsCancelacion, 
                        int Grafica, 
                        string GraficaArgumento, 
                        double GraficaValor1, 
                        double GraficaValor2, 
                        double GraficaValor3, 
                        double GraficaValor4, 
                        string Titulo, 
                        string ContMoneda, 
                        string FiltroCtaDineroD, 
                        string FiltroEmpresa, 
                        string FiltroCtaDineroA, 
                        System.DateTime FiltroFechaD, 
                        System.DateTime FiltroFechaA, 
                        string FiltroUso, 
                        string FiltroMov, 
                        string FiltroNivel, 
                        string FiltroMoneda, 
                        string FiltroGraficarTipo, 
                        int FiltroGraficarCantidad, 
                        int GraficaPositivo, 
                        bool VerGraficaDetalle) {
                spDineroAuxRow rowspDineroAuxRow = ((spDineroAuxRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        ID,
                        CtaDinero,
                        NumeroCta,
                        Descripcion,
                        Tipo,
                        Uso,
                        Moneda,
                        TipoCambio,
                        Beneficiario,
                        Fecha,
                        Movimiento,
                        Cargos,
                        Abonos,
                        Saldo,
                        CargosMC,
                        AbonosMC,
                        SaldoMC,
                        EsCancelacion,
                        Grafica,
                        GraficaArgumento,
                        GraficaValor1,
                        GraficaValor2,
                        GraficaValor3,
                        GraficaValor4,
                        Titulo,
                        ContMoneda,
                        FiltroCtaDineroD,
                        FiltroEmpresa,
                        FiltroCtaDineroA,
                        FiltroFechaD,
                        FiltroFechaA,
                        FiltroUso,
                        FiltroMov,
                        FiltroNivel,
                        FiltroMoneda,
                        FiltroGraficarTipo,
                        FiltroGraficarCantidad,
                        GraficaPositivo,
                        VerGraficaDetalle};
                rowspDineroAuxRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspDineroAuxRow);
                return rowspDineroAuxRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spDineroAuxDataTable cln = ((spDineroAuxDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spDineroAuxDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnID = base.Columns["ID"];
                this.columnCtaDinero = base.Columns["CtaDinero"];
                this.columnNumeroCta = base.Columns["NumeroCta"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnUso = base.Columns["Uso"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnTipoCambio = base.Columns["TipoCambio"];
                this.columnBeneficiario = base.Columns["Beneficiario"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnMovimiento = base.Columns["Movimiento"];
                this.columnCargos = base.Columns["Cargos"];
                this.columnAbonos = base.Columns["Abonos"];
                this.columnSaldo = base.Columns["Saldo"];
                this.columnCargosMC = base.Columns["CargosMC"];
                this.columnAbonosMC = base.Columns["AbonosMC"];
                this.columnSaldoMC = base.Columns["SaldoMC"];
                this.columnEsCancelacion = base.Columns["EsCancelacion"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor1 = base.Columns["GraficaValor1"];
                this.columnGraficaValor2 = base.Columns["GraficaValor2"];
                this.columnGraficaValor3 = base.Columns["GraficaValor3"];
                this.columnGraficaValor4 = base.Columns["GraficaValor4"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnContMoneda = base.Columns["ContMoneda"];
                this.columnFiltroCtaDineroD = base.Columns["FiltroCtaDineroD"];
                this.columnFiltroEmpresa = base.Columns["FiltroEmpresa"];
                this.columnFiltroCtaDineroA = base.Columns["FiltroCtaDineroA"];
                this.columnFiltroFechaD = base.Columns["FiltroFechaD"];
                this.columnFiltroFechaA = base.Columns["FiltroFechaA"];
                this.columnFiltroUso = base.Columns["FiltroUso"];
                this.columnFiltroMov = base.Columns["FiltroMov"];
                this.columnFiltroNivel = base.Columns["FiltroNivel"];
                this.columnFiltroMoneda = base.Columns["FiltroMoneda"];
                this.columnFiltroGraficarTipo = base.Columns["FiltroGraficarTipo"];
                this.columnFiltroGraficarCantidad = base.Columns["FiltroGraficarCantidad"];
                this.columnGraficaPositivo = base.Columns["GraficaPositivo"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCtaDinero = new global::System.Data.DataColumn("CtaDinero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtaDinero);
                this.columnNumeroCta = new global::System.Data.DataColumn("NumeroCta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroCta);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnUso = new global::System.Data.DataColumn("Uso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUso);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnTipoCambio = new global::System.Data.DataColumn("TipoCambio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoCambio);
                this.columnBeneficiario = new global::System.Data.DataColumn("Beneficiario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeneficiario);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnMovimiento = new global::System.Data.DataColumn("Movimiento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovimiento);
                this.columnCargos = new global::System.Data.DataColumn("Cargos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargos);
                this.columnAbonos = new global::System.Data.DataColumn("Abonos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonos);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.columnCargosMC = new global::System.Data.DataColumn("CargosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosMC);
                this.columnAbonosMC = new global::System.Data.DataColumn("AbonosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosMC);
                this.columnSaldoMC = new global::System.Data.DataColumn("SaldoMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoMC);
                this.columnEsCancelacion = new global::System.Data.DataColumn("EsCancelacion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEsCancelacion);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor1 = new global::System.Data.DataColumn("GraficaValor1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor1);
                this.columnGraficaValor2 = new global::System.Data.DataColumn("GraficaValor2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor2);
                this.columnGraficaValor3 = new global::System.Data.DataColumn("GraficaValor3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor3);
                this.columnGraficaValor4 = new global::System.Data.DataColumn("GraficaValor4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor4);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnContMoneda = new global::System.Data.DataColumn("ContMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContMoneda);
                this.columnFiltroCtaDineroD = new global::System.Data.DataColumn("FiltroCtaDineroD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroCtaDineroD);
                this.columnFiltroEmpresa = new global::System.Data.DataColumn("FiltroEmpresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroEmpresa);
                this.columnFiltroCtaDineroA = new global::System.Data.DataColumn("FiltroCtaDineroA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroCtaDineroA);
                this.columnFiltroFechaD = new global::System.Data.DataColumn("FiltroFechaD", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroFechaD);
                this.columnFiltroFechaA = new global::System.Data.DataColumn("FiltroFechaA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroFechaA);
                this.columnFiltroUso = new global::System.Data.DataColumn("FiltroUso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroUso);
                this.columnFiltroMov = new global::System.Data.DataColumn("FiltroMov", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroMov);
                this.columnFiltroNivel = new global::System.Data.DataColumn("FiltroNivel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroNivel);
                this.columnFiltroMoneda = new global::System.Data.DataColumn("FiltroMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroMoneda);
                this.columnFiltroGraficarTipo = new global::System.Data.DataColumn("FiltroGraficarTipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroGraficarTipo);
                this.columnFiltroGraficarCantidad = new global::System.Data.DataColumn("FiltroGraficarCantidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroGraficarCantidad);
                this.columnGraficaPositivo = new global::System.Data.DataColumn("GraficaPositivo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaPositivo);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow NewspDineroAuxRow() {
                return ((spDineroAuxRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spDineroAuxRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spDineroAuxRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spDineroAuxRowChanged != null)) {
                    this.spDineroAuxRowChanged(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spDineroAuxRowChanging != null)) {
                    this.spDineroAuxRowChanging(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spDineroAuxRowDeleted != null)) {
                    this.spDineroAuxRowDeleted(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spDineroAuxRowDeleting != null)) {
                    this.spDineroAuxRowDeleting(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespDineroAuxRow(spDineroAuxRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatos_1DataSet ds = new dsDatos_1DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spDineroAuxDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spDineroAuxRow : global::System.Data.DataRow {
            private spDineroAuxDataTable tablespDineroAux;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAuxRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespDineroAux = ((spDineroAuxDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CtaDinero {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.CtaDineroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CtaDinero\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CtaDineroColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroCta {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.NumeroCtaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NumeroCta\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.NumeroCtaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Tipo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TipoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uso {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.UsoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Uso\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.UsoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TipoCambio {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.TipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TipoCambio\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TipoCambioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Beneficiario {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.BeneficiarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Beneficiario\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.BeneficiarioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fecha\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FechaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Movimiento {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.MovimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Movimiento\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.MovimientoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cargos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.CargosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cargos\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CargosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Abonos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.AbonosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Abonos\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.AbonosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Saldo {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.SaldoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.CargosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CargosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.AbonosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.AbonosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.SaldoMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.SaldoMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EsCancelacion {
                get {
                    try {
                        return ((bool)(this[this.tablespDineroAux.EsCancelacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EsCancelacion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.EsCancelacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor1 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor1\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor2 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor2\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor3 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor3\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor4 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor4\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.ContMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ContMoneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.ContMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroCtaDineroD {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroCtaDineroDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroCtaDineroD\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroCtaDineroDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroEmpresa {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroEmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroEmpresa\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroEmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroCtaDineroA {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroCtaDineroAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroCtaDineroA\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroCtaDineroAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FiltroFechaD {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FiltroFechaDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroFechaD\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroFechaDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FiltroFechaA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FiltroFechaAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroFechaA\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroFechaAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroUso {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroUsoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroUso\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroUsoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroMov {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroMovColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroMov\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroMovColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroNivel {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroNivelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroNivel\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroNivelColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroMoneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroGraficarTipo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroGraficarTipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroGraficarTipo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroGraficarTipoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FiltroGraficarCantidad {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.FiltroGraficarCantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroGraficarCantidad\' de la tabla \'spDineroAux\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroGraficarCantidadColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GraficaPositivo {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.GraficaPositivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaPositivo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaPositivoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.tablespDineroAux.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.tablespDineroAux.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.tablespDineroAux.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tablespDineroAux.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tablespDineroAux.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtaDineroNull() {
                return this.IsNull(this.tablespDineroAux.CtaDineroColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtaDineroNull() {
                this[this.tablespDineroAux.CtaDineroColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroCtaNull() {
                return this.IsNull(this.tablespDineroAux.NumeroCtaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroCtaNull() {
                this[this.tablespDineroAux.NumeroCtaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablespDineroAux.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablespDineroAux.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoNull() {
                return this.IsNull(this.tablespDineroAux.TipoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoNull() {
                this[this.tablespDineroAux.TipoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsoNull() {
                return this.IsNull(this.tablespDineroAux.UsoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsoNull() {
                this[this.tablespDineroAux.UsoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tablespDineroAux.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tablespDineroAux.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoCambioNull() {
                return this.IsNull(this.tablespDineroAux.TipoCambioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoCambioNull() {
                this[this.tablespDineroAux.TipoCambioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeneficiarioNull() {
                return this.IsNull(this.tablespDineroAux.BeneficiarioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeneficiarioNull() {
                this[this.tablespDineroAux.BeneficiarioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.tablespDineroAux.FechaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.tablespDineroAux.FechaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovimientoNull() {
                return this.IsNull(this.tablespDineroAux.MovimientoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovimientoNull() {
                this[this.tablespDineroAux.MovimientoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosNull() {
                return this.IsNull(this.tablespDineroAux.CargosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosNull() {
                this[this.tablespDineroAux.CargosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosNull() {
                return this.IsNull(this.tablespDineroAux.AbonosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosNull() {
                this[this.tablespDineroAux.AbonosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoNull() {
                return this.IsNull(this.tablespDineroAux.SaldoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoNull() {
                this[this.tablespDineroAux.SaldoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosMCNull() {
                return this.IsNull(this.tablespDineroAux.CargosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosMCNull() {
                this[this.tablespDineroAux.CargosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosMCNull() {
                return this.IsNull(this.tablespDineroAux.AbonosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosMCNull() {
                this[this.tablespDineroAux.AbonosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoMCNull() {
                return this.IsNull(this.tablespDineroAux.SaldoMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoMCNull() {
                this[this.tablespDineroAux.SaldoMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEsCancelacionNull() {
                return this.IsNull(this.tablespDineroAux.EsCancelacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEsCancelacionNull() {
                this[this.tablespDineroAux.EsCancelacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.tablespDineroAux.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.tablespDineroAux.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.tablespDineroAux.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.tablespDineroAux.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor1Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor1Null() {
                this[this.tablespDineroAux.GraficaValor1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor2Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor2Null() {
                this[this.tablespDineroAux.GraficaValor2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor3Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor3Null() {
                this[this.tablespDineroAux.GraficaValor3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor4Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor4Null() {
                this[this.tablespDineroAux.GraficaValor4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.tablespDineroAux.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.tablespDineroAux.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContMonedaNull() {
                return this.IsNull(this.tablespDineroAux.ContMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContMonedaNull() {
                this[this.tablespDineroAux.ContMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroCtaDineroDNull() {
                return this.IsNull(this.tablespDineroAux.FiltroCtaDineroDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroCtaDineroDNull() {
                this[this.tablespDineroAux.FiltroCtaDineroDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroEmpresaNull() {
                return this.IsNull(this.tablespDineroAux.FiltroEmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroEmpresaNull() {
                this[this.tablespDineroAux.FiltroEmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroCtaDineroANull() {
                return this.IsNull(this.tablespDineroAux.FiltroCtaDineroAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroCtaDineroANull() {
                this[this.tablespDineroAux.FiltroCtaDineroAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroFechaDNull() {
                return this.IsNull(this.tablespDineroAux.FiltroFechaDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroFechaDNull() {
                this[this.tablespDineroAux.FiltroFechaDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroFechaANull() {
                return this.IsNull(this.tablespDineroAux.FiltroFechaAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroFechaANull() {
                this[this.tablespDineroAux.FiltroFechaAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroUsoNull() {
                return this.IsNull(this.tablespDineroAux.FiltroUsoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroUsoNull() {
                this[this.tablespDineroAux.FiltroUsoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroMovNull() {
                return this.IsNull(this.tablespDineroAux.FiltroMovColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroMovNull() {
                this[this.tablespDineroAux.FiltroMovColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroNivelNull() {
                return this.IsNull(this.tablespDineroAux.FiltroNivelColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroNivelNull() {
                this[this.tablespDineroAux.FiltroNivelColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroMonedaNull() {
                return this.IsNull(this.tablespDineroAux.FiltroMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroMonedaNull() {
                this[this.tablespDineroAux.FiltroMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroGraficarTipoNull() {
                return this.IsNull(this.tablespDineroAux.FiltroGraficarTipoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroGraficarTipoNull() {
                this[this.tablespDineroAux.FiltroGraficarTipoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroGraficarCantidadNull() {
                return this.IsNull(this.tablespDineroAux.FiltroGraficarCantidadColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroGraficarCantidadNull() {
                this[this.tablespDineroAux.FiltroGraficarCantidadColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaPositivoNull() {
                return this.IsNull(this.tablespDineroAux.GraficaPositivoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaPositivoNull() {
                this[this.tablespDineroAux.GraficaPositivoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.tablespDineroAux.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.tablespDineroAux.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spDineroAuxRowChangeEvent : global::System.EventArgs {
            private spDineroAuxRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRowChangeEvent(spDineroAuxRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatos_2DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatos_2DataSet : global::System.Data.DataSet {
        private spDineroAuxDataTable tablespDineroAux;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatos_2DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatos_2DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spDineroAux"] != null)) {
                    base.Tables.Add(new spDineroAuxDataTable(ds.Tables["spDineroAux"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spDineroAuxDataTable spDineroAux {
            get {
                return this.tablespDineroAux;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatos_2DataSet cln = ((dsDatos_2DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spDineroAux"] != null)) {
                    base.Tables.Add(new spDineroAuxDataTable(ds.Tables["spDineroAux"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablespDineroAux = ((spDineroAuxDataTable)(base.Tables["spDineroAux"]));
            if ((initTable == true)) {
                if ((this.tablespDineroAux != null)) {
                    this.tablespDineroAux.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatos_2DataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespDineroAux = new spDineroAuxDataTable();
            base.Tables.Add(this.tablespDineroAux);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespDineroAux() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatos_2DataSet ds = new dsDatos_2DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void spDineroAuxRowChangeEventHandler(object sender, spDineroAuxRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spDineroAuxDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnCtaDinero;
            private global::System.Data.DataColumn columnNumeroCta;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnTipo;
            private global::System.Data.DataColumn columnUso;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnTipoCambio;
            private global::System.Data.DataColumn columnBeneficiario;
            private global::System.Data.DataColumn columnFecha;
            private global::System.Data.DataColumn columnMovimiento;
            private global::System.Data.DataColumn columnCargos;
            private global::System.Data.DataColumn columnAbonos;
            private global::System.Data.DataColumn columnSaldo;
            private global::System.Data.DataColumn columnCargosMC;
            private global::System.Data.DataColumn columnAbonosMC;
            private global::System.Data.DataColumn columnSaldoMC;
            private global::System.Data.DataColumn columnEsCancelacion;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor1;
            private global::System.Data.DataColumn columnGraficaValor2;
            private global::System.Data.DataColumn columnGraficaValor3;
            private global::System.Data.DataColumn columnGraficaValor4;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnContMoneda;
            private global::System.Data.DataColumn columnFiltroCtaDineroD;
            private global::System.Data.DataColumn columnFiltroCtaDineroA;
            private global::System.Data.DataColumn columnFiltroFechD;
            private global::System.Data.DataColumn columnFiltroFechaA;
            private global::System.Data.DataColumn columnFiltroUso;
            private global::System.Data.DataColumn columnFiltroMov;
            private global::System.Data.DataColumn columnFiltroNivel;
            private global::System.Data.DataColumn columnFiltroMoneda;
            private global::System.Data.DataColumn columnFiltroGraficarTipo;
            private global::System.Data.DataColumn columnFiltroGraficarCantidad;
            private global::System.Data.DataColumn columnFiltroEmpresa;
            private global::System.Data.DataColumn columnFiltroFechaD;
            private global::System.Data.DataColumn columnGraficaPositivo;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxDataTable() {
                this.TableName = "spDineroAux";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAuxDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spDineroAuxDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CtaDineroColumn {
                get {
                    return this.columnCtaDinero;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroCtaColumn {
                get {
                    return this.columnNumeroCta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsoColumn {
                get {
                    return this.columnUso;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoCambioColumn {
                get {
                    return this.columnTipoCambio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeneficiarioColumn {
                get {
                    return this.columnBeneficiario;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovimientoColumn {
                get {
                    return this.columnMovimiento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosColumn {
                get {
                    return this.columnCargos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosColumn {
                get {
                    return this.columnAbonos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosMCColumn {
                get {
                    return this.columnCargosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosMCColumn {
                get {
                    return this.columnAbonosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoMCColumn {
                get {
                    return this.columnSaldoMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EsCancelacionColumn {
                get {
                    return this.columnEsCancelacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor1Column {
                get {
                    return this.columnGraficaValor1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor2Column {
                get {
                    return this.columnGraficaValor2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor3Column {
                get {
                    return this.columnGraficaValor3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor4Column {
                get {
                    return this.columnGraficaValor4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContMonedaColumn {
                get {
                    return this.columnContMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroCtaDineroDColumn {
                get {
                    return this.columnFiltroCtaDineroD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroCtaDineroAColumn {
                get {
                    return this.columnFiltroCtaDineroA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroFechDColumn {
                get {
                    return this.columnFiltroFechD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroFechaAColumn {
                get {
                    return this.columnFiltroFechaA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroUsoColumn {
                get {
                    return this.columnFiltroUso;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroMovColumn {
                get {
                    return this.columnFiltroMov;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroNivelColumn {
                get {
                    return this.columnFiltroNivel;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroMonedaColumn {
                get {
                    return this.columnFiltroMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroGraficarTipoColumn {
                get {
                    return this.columnFiltroGraficarTipo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroGraficarCantidadColumn {
                get {
                    return this.columnFiltroGraficarCantidad;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroEmpresaColumn {
                get {
                    return this.columnFiltroEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiltroFechaDColumn {
                get {
                    return this.columnFiltroFechaD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaPositivoColumn {
                get {
                    return this.columnGraficaPositivo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow this[int index] {
                get {
                    return ((spDineroAuxRow)(this.Rows[index]));
                }
            }
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowChanging;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowChanged;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowDeleting;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspDineroAuxRow(spDineroAuxRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow AddspDineroAuxRow(
                        int Estacion, 
                        int ID, 
                        string CtaDinero, 
                        string NumeroCta, 
                        string Descripcion, 
                        string Tipo, 
                        string Uso, 
                        string Moneda, 
                        double TipoCambio, 
                        string Beneficiario, 
                        System.DateTime Fecha, 
                        string Movimiento, 
                        double Cargos, 
                        double Abonos, 
                        double Saldo, 
                        double CargosMC, 
                        double AbonosMC, 
                        double SaldoMC, 
                        bool EsCancelacion, 
                        int Grafica, 
                        string GraficaArgumento, 
                        double GraficaValor1, 
                        double GraficaValor2, 
                        double GraficaValor3, 
                        double GraficaValor4, 
                        string Titulo, 
                        string ContMoneda, 
                        string FiltroCtaDineroD, 
                        string FiltroCtaDineroA, 
                        System.DateTime FiltroFechD, 
                        System.DateTime FiltroFechaA, 
                        string FiltroUso, 
                        string FiltroMov, 
                        string FiltroNivel, 
                        string FiltroMoneda, 
                        string FiltroGraficarTipo, 
                        int FiltroGraficarCantidad, 
                        string FiltroEmpresa, 
                        System.DateTime FiltroFechaD, 
                        int GraficaPositivo) {
                spDineroAuxRow rowspDineroAuxRow = ((spDineroAuxRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        ID,
                        CtaDinero,
                        NumeroCta,
                        Descripcion,
                        Tipo,
                        Uso,
                        Moneda,
                        TipoCambio,
                        Beneficiario,
                        Fecha,
                        Movimiento,
                        Cargos,
                        Abonos,
                        Saldo,
                        CargosMC,
                        AbonosMC,
                        SaldoMC,
                        EsCancelacion,
                        Grafica,
                        GraficaArgumento,
                        GraficaValor1,
                        GraficaValor2,
                        GraficaValor3,
                        GraficaValor4,
                        Titulo,
                        ContMoneda,
                        FiltroCtaDineroD,
                        FiltroCtaDineroA,
                        FiltroFechD,
                        FiltroFechaA,
                        FiltroUso,
                        FiltroMov,
                        FiltroNivel,
                        FiltroMoneda,
                        FiltroGraficarTipo,
                        FiltroGraficarCantidad,
                        FiltroEmpresa,
                        FiltroFechaD,
                        GraficaPositivo};
                rowspDineroAuxRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspDineroAuxRow);
                return rowspDineroAuxRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spDineroAuxDataTable cln = ((spDineroAuxDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spDineroAuxDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnID = base.Columns["ID"];
                this.columnCtaDinero = base.Columns["CtaDinero"];
                this.columnNumeroCta = base.Columns["NumeroCta"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnUso = base.Columns["Uso"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnTipoCambio = base.Columns["TipoCambio"];
                this.columnBeneficiario = base.Columns["Beneficiario"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnMovimiento = base.Columns["Movimiento"];
                this.columnCargos = base.Columns["Cargos"];
                this.columnAbonos = base.Columns["Abonos"];
                this.columnSaldo = base.Columns["Saldo"];
                this.columnCargosMC = base.Columns["CargosMC"];
                this.columnAbonosMC = base.Columns["AbonosMC"];
                this.columnSaldoMC = base.Columns["SaldoMC"];
                this.columnEsCancelacion = base.Columns["EsCancelacion"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor1 = base.Columns["GraficaValor1"];
                this.columnGraficaValor2 = base.Columns["GraficaValor2"];
                this.columnGraficaValor3 = base.Columns["GraficaValor3"];
                this.columnGraficaValor4 = base.Columns["GraficaValor4"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnContMoneda = base.Columns["ContMoneda"];
                this.columnFiltroCtaDineroD = base.Columns["FiltroCtaDineroD"];
                this.columnFiltroCtaDineroA = base.Columns["FiltroCtaDineroA"];
                this.columnFiltroFechD = base.Columns["FiltroFechD"];
                this.columnFiltroFechaA = base.Columns["FiltroFechaA"];
                this.columnFiltroUso = base.Columns["FiltroUso"];
                this.columnFiltroMov = base.Columns["FiltroMov"];
                this.columnFiltroNivel = base.Columns["FiltroNivel"];
                this.columnFiltroMoneda = base.Columns["FiltroMoneda"];
                this.columnFiltroGraficarTipo = base.Columns["FiltroGraficarTipo"];
                this.columnFiltroGraficarCantidad = base.Columns["FiltroGraficarCantidad"];
                this.columnFiltroEmpresa = base.Columns["FiltroEmpresa"];
                this.columnFiltroFechaD = base.Columns["FiltroFechaD"];
                this.columnGraficaPositivo = base.Columns["GraficaPositivo"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCtaDinero = new global::System.Data.DataColumn("CtaDinero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtaDinero);
                this.columnNumeroCta = new global::System.Data.DataColumn("NumeroCta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroCta);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnUso = new global::System.Data.DataColumn("Uso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUso);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnTipoCambio = new global::System.Data.DataColumn("TipoCambio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoCambio);
                this.columnBeneficiario = new global::System.Data.DataColumn("Beneficiario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeneficiario);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnMovimiento = new global::System.Data.DataColumn("Movimiento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovimiento);
                this.columnCargos = new global::System.Data.DataColumn("Cargos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargos);
                this.columnAbonos = new global::System.Data.DataColumn("Abonos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonos);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.columnCargosMC = new global::System.Data.DataColumn("CargosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosMC);
                this.columnAbonosMC = new global::System.Data.DataColumn("AbonosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosMC);
                this.columnSaldoMC = new global::System.Data.DataColumn("SaldoMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoMC);
                this.columnEsCancelacion = new global::System.Data.DataColumn("EsCancelacion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEsCancelacion);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor1 = new global::System.Data.DataColumn("GraficaValor1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor1);
                this.columnGraficaValor2 = new global::System.Data.DataColumn("GraficaValor2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor2);
                this.columnGraficaValor3 = new global::System.Data.DataColumn("GraficaValor3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor3);
                this.columnGraficaValor4 = new global::System.Data.DataColumn("GraficaValor4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor4);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnContMoneda = new global::System.Data.DataColumn("ContMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContMoneda);
                this.columnFiltroCtaDineroD = new global::System.Data.DataColumn("FiltroCtaDineroD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroCtaDineroD);
                this.columnFiltroCtaDineroA = new global::System.Data.DataColumn("FiltroCtaDineroA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroCtaDineroA);
                this.columnFiltroFechD = new global::System.Data.DataColumn("FiltroFechD", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroFechD);
                this.columnFiltroFechaA = new global::System.Data.DataColumn("FiltroFechaA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroFechaA);
                this.columnFiltroUso = new global::System.Data.DataColumn("FiltroUso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroUso);
                this.columnFiltroMov = new global::System.Data.DataColumn("FiltroMov", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroMov);
                this.columnFiltroNivel = new global::System.Data.DataColumn("FiltroNivel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroNivel);
                this.columnFiltroMoneda = new global::System.Data.DataColumn("FiltroMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroMoneda);
                this.columnFiltroGraficarTipo = new global::System.Data.DataColumn("FiltroGraficarTipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroGraficarTipo);
                this.columnFiltroGraficarCantidad = new global::System.Data.DataColumn("FiltroGraficarCantidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroGraficarCantidad);
                this.columnFiltroEmpresa = new global::System.Data.DataColumn("FiltroEmpresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroEmpresa);
                this.columnFiltroFechaD = new global::System.Data.DataColumn("FiltroFechaD", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiltroFechaD);
                this.columnGraficaPositivo = new global::System.Data.DataColumn("GraficaPositivo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaPositivo);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow NewspDineroAuxRow() {
                return ((spDineroAuxRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spDineroAuxRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spDineroAuxRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spDineroAuxRowChanged != null)) {
                    this.spDineroAuxRowChanged(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spDineroAuxRowChanging != null)) {
                    this.spDineroAuxRowChanging(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spDineroAuxRowDeleted != null)) {
                    this.spDineroAuxRowDeleted(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spDineroAuxRowDeleting != null)) {
                    this.spDineroAuxRowDeleting(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespDineroAuxRow(spDineroAuxRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatos_2DataSet ds = new dsDatos_2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spDineroAuxDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spDineroAuxRow : global::System.Data.DataRow {
            private spDineroAuxDataTable tablespDineroAux;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAuxRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespDineroAux = ((spDineroAuxDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CtaDinero {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.CtaDineroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CtaDinero\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CtaDineroColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroCta {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.NumeroCtaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NumeroCta\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.NumeroCtaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Tipo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TipoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uso {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.UsoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Uso\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.UsoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TipoCambio {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.TipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TipoCambio\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TipoCambioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Beneficiario {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.BeneficiarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Beneficiario\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.BeneficiarioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fecha\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FechaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Movimiento {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.MovimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Movimiento\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.MovimientoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cargos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.CargosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cargos\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CargosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Abonos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.AbonosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Abonos\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.AbonosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Saldo {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.SaldoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.CargosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CargosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.AbonosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.AbonosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.SaldoMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.SaldoMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EsCancelacion {
                get {
                    try {
                        return ((bool)(this[this.tablespDineroAux.EsCancelacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EsCancelacion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.EsCancelacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor1 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor1\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor2 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor2\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor3 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor3\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor4 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor4\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.ContMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ContMoneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.ContMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroCtaDineroD {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroCtaDineroDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroCtaDineroD\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroCtaDineroDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroCtaDineroA {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroCtaDineroAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroCtaDineroA\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroCtaDineroAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FiltroFechD {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FiltroFechDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroFechD\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroFechDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FiltroFechaA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FiltroFechaAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroFechaA\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroFechaAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroUso {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroUsoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroUso\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroUsoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroMov {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroMovColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroMov\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroMovColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroNivel {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroNivelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroNivel\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroNivelColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroMoneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroGraficarTipo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroGraficarTipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroGraficarTipo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroGraficarTipoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FiltroGraficarCantidad {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.FiltroGraficarCantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroGraficarCantidad\' de la tabla \'spDineroAux\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroGraficarCantidadColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiltroEmpresa {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.FiltroEmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroEmpresa\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroEmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FiltroFechaD {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FiltroFechaDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FiltroFechaD\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FiltroFechaDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GraficaPositivo {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.GraficaPositivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaPositivo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaPositivoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.tablespDineroAux.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.tablespDineroAux.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tablespDineroAux.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tablespDineroAux.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtaDineroNull() {
                return this.IsNull(this.tablespDineroAux.CtaDineroColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtaDineroNull() {
                this[this.tablespDineroAux.CtaDineroColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroCtaNull() {
                return this.IsNull(this.tablespDineroAux.NumeroCtaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroCtaNull() {
                this[this.tablespDineroAux.NumeroCtaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablespDineroAux.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablespDineroAux.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoNull() {
                return this.IsNull(this.tablespDineroAux.TipoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoNull() {
                this[this.tablespDineroAux.TipoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsoNull() {
                return this.IsNull(this.tablespDineroAux.UsoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsoNull() {
                this[this.tablespDineroAux.UsoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tablespDineroAux.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tablespDineroAux.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoCambioNull() {
                return this.IsNull(this.tablespDineroAux.TipoCambioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoCambioNull() {
                this[this.tablespDineroAux.TipoCambioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeneficiarioNull() {
                return this.IsNull(this.tablespDineroAux.BeneficiarioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeneficiarioNull() {
                this[this.tablespDineroAux.BeneficiarioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.tablespDineroAux.FechaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.tablespDineroAux.FechaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovimientoNull() {
                return this.IsNull(this.tablespDineroAux.MovimientoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovimientoNull() {
                this[this.tablespDineroAux.MovimientoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosNull() {
                return this.IsNull(this.tablespDineroAux.CargosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosNull() {
                this[this.tablespDineroAux.CargosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosNull() {
                return this.IsNull(this.tablespDineroAux.AbonosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosNull() {
                this[this.tablespDineroAux.AbonosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoNull() {
                return this.IsNull(this.tablespDineroAux.SaldoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoNull() {
                this[this.tablespDineroAux.SaldoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosMCNull() {
                return this.IsNull(this.tablespDineroAux.CargosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosMCNull() {
                this[this.tablespDineroAux.CargosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosMCNull() {
                return this.IsNull(this.tablespDineroAux.AbonosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosMCNull() {
                this[this.tablespDineroAux.AbonosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoMCNull() {
                return this.IsNull(this.tablespDineroAux.SaldoMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoMCNull() {
                this[this.tablespDineroAux.SaldoMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEsCancelacionNull() {
                return this.IsNull(this.tablespDineroAux.EsCancelacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEsCancelacionNull() {
                this[this.tablespDineroAux.EsCancelacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.tablespDineroAux.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.tablespDineroAux.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.tablespDineroAux.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.tablespDineroAux.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor1Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor1Null() {
                this[this.tablespDineroAux.GraficaValor1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor2Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor2Null() {
                this[this.tablespDineroAux.GraficaValor2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor3Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor3Null() {
                this[this.tablespDineroAux.GraficaValor3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor4Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor4Null() {
                this[this.tablespDineroAux.GraficaValor4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.tablespDineroAux.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.tablespDineroAux.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContMonedaNull() {
                return this.IsNull(this.tablespDineroAux.ContMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContMonedaNull() {
                this[this.tablespDineroAux.ContMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroCtaDineroDNull() {
                return this.IsNull(this.tablespDineroAux.FiltroCtaDineroDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroCtaDineroDNull() {
                this[this.tablespDineroAux.FiltroCtaDineroDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroCtaDineroANull() {
                return this.IsNull(this.tablespDineroAux.FiltroCtaDineroAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroCtaDineroANull() {
                this[this.tablespDineroAux.FiltroCtaDineroAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroFechDNull() {
                return this.IsNull(this.tablespDineroAux.FiltroFechDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroFechDNull() {
                this[this.tablespDineroAux.FiltroFechDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroFechaANull() {
                return this.IsNull(this.tablespDineroAux.FiltroFechaAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroFechaANull() {
                this[this.tablespDineroAux.FiltroFechaAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroUsoNull() {
                return this.IsNull(this.tablespDineroAux.FiltroUsoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroUsoNull() {
                this[this.tablespDineroAux.FiltroUsoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroMovNull() {
                return this.IsNull(this.tablespDineroAux.FiltroMovColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroMovNull() {
                this[this.tablespDineroAux.FiltroMovColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroNivelNull() {
                return this.IsNull(this.tablespDineroAux.FiltroNivelColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroNivelNull() {
                this[this.tablespDineroAux.FiltroNivelColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroMonedaNull() {
                return this.IsNull(this.tablespDineroAux.FiltroMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroMonedaNull() {
                this[this.tablespDineroAux.FiltroMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroGraficarTipoNull() {
                return this.IsNull(this.tablespDineroAux.FiltroGraficarTipoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroGraficarTipoNull() {
                this[this.tablespDineroAux.FiltroGraficarTipoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroGraficarCantidadNull() {
                return this.IsNull(this.tablespDineroAux.FiltroGraficarCantidadColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroGraficarCantidadNull() {
                this[this.tablespDineroAux.FiltroGraficarCantidadColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroEmpresaNull() {
                return this.IsNull(this.tablespDineroAux.FiltroEmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroEmpresaNull() {
                this[this.tablespDineroAux.FiltroEmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiltroFechaDNull() {
                return this.IsNull(this.tablespDineroAux.FiltroFechaDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiltroFechaDNull() {
                this[this.tablespDineroAux.FiltroFechaDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaPositivoNull() {
                return this.IsNull(this.tablespDineroAux.GraficaPositivoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaPositivoNull() {
                this[this.tablespDineroAux.GraficaPositivoColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spDineroAuxRowChangeEvent : global::System.EventArgs {
            private spDineroAuxRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRowChangeEvent(spDineroAuxRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatosDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatosDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatosDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatosDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatosDataSet cln = ((dsDatosDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatosDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatosDataSet ds = new dsDatosDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnCtaDinero;
            private global::System.Data.DataColumn columnNumeroCta;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnTipo;
            private global::System.Data.DataColumn columnUso;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnTipoCambio;
            private global::System.Data.DataColumn columnBeneficiario;
            private global::System.Data.DataColumn columnFecha;
            private global::System.Data.DataColumn columnMovimiento;
            private global::System.Data.DataColumn columnCargos;
            private global::System.Data.DataColumn columnAbonos;
            private global::System.Data.DataColumn columnSaldo;
            private global::System.Data.DataColumn columnCargosMC;
            private global::System.Data.DataColumn columnAbonosMC;
            private global::System.Data.DataColumn columnSaldoMC;
            private global::System.Data.DataColumn columnEsCancelacion;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor1;
            private global::System.Data.DataColumn columnGraficaValor2;
            private global::System.Data.DataColumn columnGraficaValor3;
            private global::System.Data.DataColumn columnGraficaValor4;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnContMoneda;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CtaDineroColumn {
                get {
                    return this.columnCtaDinero;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroCtaColumn {
                get {
                    return this.columnNumeroCta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsoColumn {
                get {
                    return this.columnUso;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoCambioColumn {
                get {
                    return this.columnTipoCambio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeneficiarioColumn {
                get {
                    return this.columnBeneficiario;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovimientoColumn {
                get {
                    return this.columnMovimiento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosColumn {
                get {
                    return this.columnCargos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosColumn {
                get {
                    return this.columnAbonos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosMCColumn {
                get {
                    return this.columnCargosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosMCColumn {
                get {
                    return this.columnAbonosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoMCColumn {
                get {
                    return this.columnSaldoMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EsCancelacionColumn {
                get {
                    return this.columnEsCancelacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor1Column {
                get {
                    return this.columnGraficaValor1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor2Column {
                get {
                    return this.columnGraficaValor2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor3Column {
                get {
                    return this.columnGraficaValor3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor4Column {
                get {
                    return this.columnGraficaValor4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContMonedaColumn {
                get {
                    return this.columnContMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        int Estacion, 
                        int ID, 
                        string CtaDinero, 
                        string NumeroCta, 
                        string Descripcion, 
                        string Tipo, 
                        string Uso, 
                        string Moneda, 
                        double TipoCambio, 
                        string Beneficiario, 
                        System.DateTime Fecha, 
                        string Movimiento, 
                        double Cargos, 
                        double Abonos, 
                        double Saldo, 
                        double CargosMC, 
                        double AbonosMC, 
                        double SaldoMC, 
                        bool EsCancelacion, 
                        int Grafica, 
                        string GraficaArgumento, 
                        double GraficaValor1, 
                        double GraficaValor2, 
                        double GraficaValor3, 
                        double GraficaValor4, 
                        string Titulo, 
                        string ContMoneda) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        ID,
                        CtaDinero,
                        NumeroCta,
                        Descripcion,
                        Tipo,
                        Uso,
                        Moneda,
                        TipoCambio,
                        Beneficiario,
                        Fecha,
                        Movimiento,
                        Cargos,
                        Abonos,
                        Saldo,
                        CargosMC,
                        AbonosMC,
                        SaldoMC,
                        EsCancelacion,
                        Grafica,
                        GraficaArgumento,
                        GraficaValor1,
                        GraficaValor2,
                        GraficaValor3,
                        GraficaValor4,
                        Titulo,
                        ContMoneda};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnID = base.Columns["ID"];
                this.columnCtaDinero = base.Columns["CtaDinero"];
                this.columnNumeroCta = base.Columns["NumeroCta"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnUso = base.Columns["Uso"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnTipoCambio = base.Columns["TipoCambio"];
                this.columnBeneficiario = base.Columns["Beneficiario"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnMovimiento = base.Columns["Movimiento"];
                this.columnCargos = base.Columns["Cargos"];
                this.columnAbonos = base.Columns["Abonos"];
                this.columnSaldo = base.Columns["Saldo"];
                this.columnCargosMC = base.Columns["CargosMC"];
                this.columnAbonosMC = base.Columns["AbonosMC"];
                this.columnSaldoMC = base.Columns["SaldoMC"];
                this.columnEsCancelacion = base.Columns["EsCancelacion"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor1 = base.Columns["GraficaValor1"];
                this.columnGraficaValor2 = base.Columns["GraficaValor2"];
                this.columnGraficaValor3 = base.Columns["GraficaValor3"];
                this.columnGraficaValor4 = base.Columns["GraficaValor4"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnContMoneda = base.Columns["ContMoneda"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCtaDinero = new global::System.Data.DataColumn("CtaDinero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtaDinero);
                this.columnNumeroCta = new global::System.Data.DataColumn("NumeroCta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroCta);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnUso = new global::System.Data.DataColumn("Uso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUso);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnTipoCambio = new global::System.Data.DataColumn("TipoCambio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoCambio);
                this.columnBeneficiario = new global::System.Data.DataColumn("Beneficiario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeneficiario);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnMovimiento = new global::System.Data.DataColumn("Movimiento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovimiento);
                this.columnCargos = new global::System.Data.DataColumn("Cargos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargos);
                this.columnAbonos = new global::System.Data.DataColumn("Abonos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonos);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.columnCargosMC = new global::System.Data.DataColumn("CargosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosMC);
                this.columnAbonosMC = new global::System.Data.DataColumn("AbonosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosMC);
                this.columnSaldoMC = new global::System.Data.DataColumn("SaldoMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoMC);
                this.columnEsCancelacion = new global::System.Data.DataColumn("EsCancelacion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEsCancelacion);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor1 = new global::System.Data.DataColumn("GraficaValor1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor1);
                this.columnGraficaValor2 = new global::System.Data.DataColumn("GraficaValor2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor2);
                this.columnGraficaValor3 = new global::System.Data.DataColumn("GraficaValor3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor3);
                this.columnGraficaValor4 = new global::System.Data.DataColumn("GraficaValor4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor4);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnContMoneda = new global::System.Data.DataColumn("ContMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContMoneda);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatosDataSet ds = new dsDatosDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.table_Table.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CtaDinero {
                get {
                    try {
                        return ((string)(this[this.table_Table.CtaDineroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CtaDinero\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CtaDineroColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroCta {
                get {
                    try {
                        return ((string)(this[this.table_Table.NumeroCtaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NumeroCta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NumeroCtaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Tipo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TipoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uso {
                get {
                    try {
                        return ((string)(this[this.table_Table.UsoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Uso\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UsoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TipoCambio {
                get {
                    try {
                        return ((double)(this[this.table_Table.TipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TipoCambio\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TipoCambioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Beneficiario {
                get {
                    try {
                        return ((string)(this[this.table_Table.BeneficiarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Beneficiario\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.BeneficiarioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fecha\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Movimiento {
                get {
                    try {
                        return ((string)(this[this.table_Table.MovimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Movimiento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MovimientoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cargos {
                get {
                    try {
                        return ((double)(this[this.table_Table.CargosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cargos\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CargosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Abonos {
                get {
                    try {
                        return ((double)(this[this.table_Table.AbonosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Abonos\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.AbonosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Saldo {
                get {
                    try {
                        return ((double)(this[this.table_Table.SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosMC {
                get {
                    try {
                        return ((double)(this[this.table_Table.CargosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CargosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosMC {
                get {
                    try {
                        return ((double)(this[this.table_Table.AbonosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.AbonosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoMC {
                get {
                    try {
                        return ((double)(this[this.table_Table.SaldoMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EsCancelacion {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EsCancelacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EsCancelacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EsCancelacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica {
                get {
                    try {
                        return ((int)(this[this.table_Table.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor1 {
                get {
                    try {
                        return ((double)(this[this.table_Table.GraficaValor1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaValor1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor2 {
                get {
                    try {
                        return ((double)(this[this.table_Table.GraficaValor2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaValor2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor3 {
                get {
                    try {
                        return ((double)(this[this.table_Table.GraficaValor3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaValor3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor4 {
                get {
                    try {
                        return ((double)(this[this.table_Table.GraficaValor4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaValor4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContMoneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.ContMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ContMoneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ContMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.table_Table.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.table_Table.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table_Table.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table_Table.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtaDineroNull() {
                return this.IsNull(this.table_Table.CtaDineroColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtaDineroNull() {
                this[this.table_Table.CtaDineroColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroCtaNull() {
                return this.IsNull(this.table_Table.NumeroCtaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroCtaNull() {
                this[this.table_Table.NumeroCtaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.table_Table.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.table_Table.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoNull() {
                return this.IsNull(this.table_Table.TipoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoNull() {
                this[this.table_Table.TipoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsoNull() {
                return this.IsNull(this.table_Table.UsoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsoNull() {
                this[this.table_Table.UsoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.table_Table.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.table_Table.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoCambioNull() {
                return this.IsNull(this.table_Table.TipoCambioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoCambioNull() {
                this[this.table_Table.TipoCambioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeneficiarioNull() {
                return this.IsNull(this.table_Table.BeneficiarioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeneficiarioNull() {
                this[this.table_Table.BeneficiarioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.table_Table.FechaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.table_Table.FechaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovimientoNull() {
                return this.IsNull(this.table_Table.MovimientoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovimientoNull() {
                this[this.table_Table.MovimientoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosNull() {
                return this.IsNull(this.table_Table.CargosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosNull() {
                this[this.table_Table.CargosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosNull() {
                return this.IsNull(this.table_Table.AbonosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosNull() {
                this[this.table_Table.AbonosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoNull() {
                return this.IsNull(this.table_Table.SaldoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoNull() {
                this[this.table_Table.SaldoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosMCNull() {
                return this.IsNull(this.table_Table.CargosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosMCNull() {
                this[this.table_Table.CargosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosMCNull() {
                return this.IsNull(this.table_Table.AbonosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosMCNull() {
                this[this.table_Table.AbonosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoMCNull() {
                return this.IsNull(this.table_Table.SaldoMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoMCNull() {
                this[this.table_Table.SaldoMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEsCancelacionNull() {
                return this.IsNull(this.table_Table.EsCancelacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEsCancelacionNull() {
                this[this.table_Table.EsCancelacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.table_Table.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.table_Table.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.table_Table.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.table_Table.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor1Null() {
                return this.IsNull(this.table_Table.GraficaValor1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor1Null() {
                this[this.table_Table.GraficaValor1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor2Null() {
                return this.IsNull(this.table_Table.GraficaValor2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor2Null() {
                this[this.table_Table.GraficaValor2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor3Null() {
                return this.IsNull(this.table_Table.GraficaValor3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor3Null() {
                this[this.table_Table.GraficaValor3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor4Null() {
                return this.IsNull(this.table_Table.GraficaValor4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor4Null() {
                this[this.table_Table.GraficaValor4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.table_Table.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.table_Table.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContMonedaNull() {
                return this.IsNull(this.table_Table.ContMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContMonedaNull() {
                this[this.table_Table.ContMonedaColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatos_3DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatos_3DataSet : global::System.Data.DataSet {
        private spDineroAuxDataTable tablespDineroAux;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatos_3DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatos_3DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spDineroAux"] != null)) {
                    base.Tables.Add(new spDineroAuxDataTable(ds.Tables["spDineroAux"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spDineroAuxDataTable spDineroAux {
            get {
                return this.tablespDineroAux;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatos_3DataSet cln = ((dsDatos_3DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spDineroAux"] != null)) {
                    base.Tables.Add(new spDineroAuxDataTable(ds.Tables["spDineroAux"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablespDineroAux = ((spDineroAuxDataTable)(base.Tables["spDineroAux"]));
            if ((initTable == true)) {
                if ((this.tablespDineroAux != null)) {
                    this.tablespDineroAux.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatos_3DataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespDineroAux = new spDineroAuxDataTable();
            base.Tables.Add(this.tablespDineroAux);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespDineroAux() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatos_3DataSet ds = new dsDatos_3DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void spDineroAuxRowChangeEventHandler(object sender, spDineroAuxRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spDineroAuxDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnCtaDinero;
            private global::System.Data.DataColumn columnNumeroCta;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnTipo;
            private global::System.Data.DataColumn columnUso;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnTipoCambio;
            private global::System.Data.DataColumn columnBeneficiario;
            private global::System.Data.DataColumn columnFecha;
            private global::System.Data.DataColumn columnMovimiento;
            private global::System.Data.DataColumn columnCargos;
            private global::System.Data.DataColumn columnAbonos;
            private global::System.Data.DataColumn columnSaldo;
            private global::System.Data.DataColumn columnCargosMC;
            private global::System.Data.DataColumn columnAbonosMC;
            private global::System.Data.DataColumn columnSaldoMC;
            private global::System.Data.DataColumn columnEsCancelacion;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor1;
            private global::System.Data.DataColumn columnGraficaValor2;
            private global::System.Data.DataColumn columnGraficaValor3;
            private global::System.Data.DataColumn columnGraficaValor4;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnContMoneda;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxDataTable() {
                this.TableName = "spDineroAux";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAuxDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spDineroAuxDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CtaDineroColumn {
                get {
                    return this.columnCtaDinero;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroCtaColumn {
                get {
                    return this.columnNumeroCta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsoColumn {
                get {
                    return this.columnUso;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoCambioColumn {
                get {
                    return this.columnTipoCambio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeneficiarioColumn {
                get {
                    return this.columnBeneficiario;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovimientoColumn {
                get {
                    return this.columnMovimiento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosColumn {
                get {
                    return this.columnCargos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosColumn {
                get {
                    return this.columnAbonos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosMCColumn {
                get {
                    return this.columnCargosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosMCColumn {
                get {
                    return this.columnAbonosMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoMCColumn {
                get {
                    return this.columnSaldoMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EsCancelacionColumn {
                get {
                    return this.columnEsCancelacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor1Column {
                get {
                    return this.columnGraficaValor1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor2Column {
                get {
                    return this.columnGraficaValor2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor3Column {
                get {
                    return this.columnGraficaValor3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValor4Column {
                get {
                    return this.columnGraficaValor4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContMonedaColumn {
                get {
                    return this.columnContMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow this[int index] {
                get {
                    return ((spDineroAuxRow)(this.Rows[index]));
                }
            }
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowChanging;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowChanged;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowDeleting;
            public event spDineroAuxRowChangeEventHandler spDineroAuxRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspDineroAuxRow(spDineroAuxRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow AddspDineroAuxRow(
                        int Estacion, 
                        int ID, 
                        string CtaDinero, 
                        string NumeroCta, 
                        string Descripcion, 
                        string Tipo, 
                        string Uso, 
                        string Moneda, 
                        double TipoCambio, 
                        string Beneficiario, 
                        System.DateTime Fecha, 
                        string Movimiento, 
                        double Cargos, 
                        double Abonos, 
                        double Saldo, 
                        double CargosMC, 
                        double AbonosMC, 
                        double SaldoMC, 
                        bool EsCancelacion, 
                        int Grafica, 
                        string GraficaArgumento, 
                        double GraficaValor1, 
                        double GraficaValor2, 
                        double GraficaValor3, 
                        double GraficaValor4, 
                        string Titulo, 
                        string ContMoneda) {
                spDineroAuxRow rowspDineroAuxRow = ((spDineroAuxRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        ID,
                        CtaDinero,
                        NumeroCta,
                        Descripcion,
                        Tipo,
                        Uso,
                        Moneda,
                        TipoCambio,
                        Beneficiario,
                        Fecha,
                        Movimiento,
                        Cargos,
                        Abonos,
                        Saldo,
                        CargosMC,
                        AbonosMC,
                        SaldoMC,
                        EsCancelacion,
                        Grafica,
                        GraficaArgumento,
                        GraficaValor1,
                        GraficaValor2,
                        GraficaValor3,
                        GraficaValor4,
                        Titulo,
                        ContMoneda};
                rowspDineroAuxRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspDineroAuxRow);
                return rowspDineroAuxRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spDineroAuxDataTable cln = ((spDineroAuxDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spDineroAuxDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnID = base.Columns["ID"];
                this.columnCtaDinero = base.Columns["CtaDinero"];
                this.columnNumeroCta = base.Columns["NumeroCta"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnUso = base.Columns["Uso"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnTipoCambio = base.Columns["TipoCambio"];
                this.columnBeneficiario = base.Columns["Beneficiario"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnMovimiento = base.Columns["Movimiento"];
                this.columnCargos = base.Columns["Cargos"];
                this.columnAbonos = base.Columns["Abonos"];
                this.columnSaldo = base.Columns["Saldo"];
                this.columnCargosMC = base.Columns["CargosMC"];
                this.columnAbonosMC = base.Columns["AbonosMC"];
                this.columnSaldoMC = base.Columns["SaldoMC"];
                this.columnEsCancelacion = base.Columns["EsCancelacion"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor1 = base.Columns["GraficaValor1"];
                this.columnGraficaValor2 = base.Columns["GraficaValor2"];
                this.columnGraficaValor3 = base.Columns["GraficaValor3"];
                this.columnGraficaValor4 = base.Columns["GraficaValor4"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnContMoneda = base.Columns["ContMoneda"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnCtaDinero = new global::System.Data.DataColumn("CtaDinero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCtaDinero);
                this.columnNumeroCta = new global::System.Data.DataColumn("NumeroCta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroCta);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnUso = new global::System.Data.DataColumn("Uso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUso);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnTipoCambio = new global::System.Data.DataColumn("TipoCambio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoCambio);
                this.columnBeneficiario = new global::System.Data.DataColumn("Beneficiario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeneficiario);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnMovimiento = new global::System.Data.DataColumn("Movimiento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovimiento);
                this.columnCargos = new global::System.Data.DataColumn("Cargos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargos);
                this.columnAbonos = new global::System.Data.DataColumn("Abonos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonos);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.columnCargosMC = new global::System.Data.DataColumn("CargosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargosMC);
                this.columnAbonosMC = new global::System.Data.DataColumn("AbonosMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonosMC);
                this.columnSaldoMC = new global::System.Data.DataColumn("SaldoMC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoMC);
                this.columnEsCancelacion = new global::System.Data.DataColumn("EsCancelacion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEsCancelacion);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor1 = new global::System.Data.DataColumn("GraficaValor1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor1);
                this.columnGraficaValor2 = new global::System.Data.DataColumn("GraficaValor2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor2);
                this.columnGraficaValor3 = new global::System.Data.DataColumn("GraficaValor3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor3);
                this.columnGraficaValor4 = new global::System.Data.DataColumn("GraficaValor4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor4);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnContMoneda = new global::System.Data.DataColumn("ContMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContMoneda);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow NewspDineroAuxRow() {
                return ((spDineroAuxRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spDineroAuxRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spDineroAuxRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spDineroAuxRowChanged != null)) {
                    this.spDineroAuxRowChanged(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spDineroAuxRowChanging != null)) {
                    this.spDineroAuxRowChanging(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spDineroAuxRowDeleted != null)) {
                    this.spDineroAuxRowDeleted(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spDineroAuxRowDeleting != null)) {
                    this.spDineroAuxRowDeleting(this, new spDineroAuxRowChangeEvent(((spDineroAuxRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespDineroAuxRow(spDineroAuxRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatos_3DataSet ds = new dsDatos_3DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spDineroAuxDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spDineroAuxRow : global::System.Data.DataRow {
            private spDineroAuxDataTable tablespDineroAux;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spDineroAuxRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespDineroAux = ((spDineroAuxDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CtaDinero {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.CtaDineroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CtaDinero\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CtaDineroColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroCta {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.NumeroCtaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NumeroCta\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.NumeroCtaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Tipo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TipoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uso {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.UsoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Uso\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.UsoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TipoCambio {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.TipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TipoCambio\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TipoCambioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Beneficiario {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.BeneficiarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Beneficiario\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.BeneficiarioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespDineroAux.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fecha\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.FechaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Movimiento {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.MovimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Movimiento\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.MovimientoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cargos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.CargosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cargos\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CargosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Abonos {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.AbonosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Abonos\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.AbonosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Saldo {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.SaldoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CargosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.CargosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CargosMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.CargosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AbonosMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.AbonosMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AbonosMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.AbonosMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoMC {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.SaldoMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoMC\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.SaldoMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EsCancelacion {
                get {
                    try {
                        return ((bool)(this[this.tablespDineroAux.EsCancelacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EsCancelacion\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.EsCancelacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica {
                get {
                    try {
                        return ((int)(this[this.tablespDineroAux.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor1 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor1\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor2 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor2\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor3 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor3\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor4 {
                get {
                    try {
                        return ((double)(this[this.tablespDineroAux.GraficaValor4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor4\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.GraficaValor4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespDineroAux.ContMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ContMoneda\' de la tabla \'spDineroAux\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespDineroAux.ContMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.tablespDineroAux.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.tablespDineroAux.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tablespDineroAux.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tablespDineroAux.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCtaDineroNull() {
                return this.IsNull(this.tablespDineroAux.CtaDineroColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCtaDineroNull() {
                this[this.tablespDineroAux.CtaDineroColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroCtaNull() {
                return this.IsNull(this.tablespDineroAux.NumeroCtaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroCtaNull() {
                this[this.tablespDineroAux.NumeroCtaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablespDineroAux.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablespDineroAux.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoNull() {
                return this.IsNull(this.tablespDineroAux.TipoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoNull() {
                this[this.tablespDineroAux.TipoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsoNull() {
                return this.IsNull(this.tablespDineroAux.UsoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsoNull() {
                this[this.tablespDineroAux.UsoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tablespDineroAux.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tablespDineroAux.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoCambioNull() {
                return this.IsNull(this.tablespDineroAux.TipoCambioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoCambioNull() {
                this[this.tablespDineroAux.TipoCambioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeneficiarioNull() {
                return this.IsNull(this.tablespDineroAux.BeneficiarioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeneficiarioNull() {
                this[this.tablespDineroAux.BeneficiarioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.tablespDineroAux.FechaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.tablespDineroAux.FechaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovimientoNull() {
                return this.IsNull(this.tablespDineroAux.MovimientoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovimientoNull() {
                this[this.tablespDineroAux.MovimientoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosNull() {
                return this.IsNull(this.tablespDineroAux.CargosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosNull() {
                this[this.tablespDineroAux.CargosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosNull() {
                return this.IsNull(this.tablespDineroAux.AbonosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosNull() {
                this[this.tablespDineroAux.AbonosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoNull() {
                return this.IsNull(this.tablespDineroAux.SaldoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoNull() {
                this[this.tablespDineroAux.SaldoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosMCNull() {
                return this.IsNull(this.tablespDineroAux.CargosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosMCNull() {
                this[this.tablespDineroAux.CargosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosMCNull() {
                return this.IsNull(this.tablespDineroAux.AbonosMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosMCNull() {
                this[this.tablespDineroAux.AbonosMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoMCNull() {
                return this.IsNull(this.tablespDineroAux.SaldoMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoMCNull() {
                this[this.tablespDineroAux.SaldoMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEsCancelacionNull() {
                return this.IsNull(this.tablespDineroAux.EsCancelacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEsCancelacionNull() {
                this[this.tablespDineroAux.EsCancelacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.tablespDineroAux.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.tablespDineroAux.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.tablespDineroAux.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.tablespDineroAux.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor1Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor1Null() {
                this[this.tablespDineroAux.GraficaValor1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor2Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor2Null() {
                this[this.tablespDineroAux.GraficaValor2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor3Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor3Null() {
                this[this.tablespDineroAux.GraficaValor3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValor4Null() {
                return this.IsNull(this.tablespDineroAux.GraficaValor4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValor4Null() {
                this[this.tablespDineroAux.GraficaValor4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.tablespDineroAux.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.tablespDineroAux.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContMonedaNull() {
                return this.IsNull(this.tablespDineroAux.ContMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContMonedaNull() {
                this[this.tablespDineroAux.ContMonedaColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spDineroAuxRowChangeEvent : global::System.EventArgs {
            private spDineroAuxRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRowChangeEvent(spDineroAuxRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spDineroAuxRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
