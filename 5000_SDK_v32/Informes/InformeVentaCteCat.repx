/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformeVentaCteCat : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label51;
        private DevExpress.XtraReports.UI.XRLabel label50;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLabel label25;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRLabel label24;
        private DevExpress.XtraReports.UI.XRLabel label28;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRChart chart3;
        private XtraReportSerialization.VentaCteCatDataSet VentaCteCat;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLabel label52;
        private DevExpress.XtraReports.UI.XRLabel label44;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.ReportHeaderBand ReportHeader;
        private DevExpress.XtraReports.UI.XRLabel label56;
        private DevExpress.XtraReports.UI.XRLabel label61;
        private DevExpress.XtraReports.UI.XRLabel label55;
        private DevExpress.XtraReports.UI.XRLabel label53;
        private DevExpress.XtraReports.UI.XRLabel label54;
        private DevExpress.XtraReports.UI.XRLabel label57;
        private DevExpress.XtraReports.UI.XRLabel label198;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo3;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.XRLabel label63;
        private DevExpress.XtraReports.UI.XRLabel label41;
        private DevExpress.XtraReports.UI.XRLabel label34;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.XRLabel label62;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox1;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private DevExpress.XtraReports.UI.XRPageBreak pageBreak1;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.XRLabel label27;
        private DevExpress.XtraReports.UI.XRLabel label58;
        private DevExpress.XtraReports.UI.XRLabel label60;
        private DevExpress.XtraReports.UI.XRLabel label59;
        private DevExpress.XtraReports.UI.XRLabel label26;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.XRLine line2;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.PageFooterBand PageFooter;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo4;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader3;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLine line4;
        private DevExpress.XtraReports.UI.XRLabel label37;
        private DevExpress.XtraReports.UI.XRLabel label36;
        private DevExpress.XtraReports.UI.XRLabel label48;
        private DevExpress.XtraReports.UI.XRLabel label47;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.XRLabel label33;
        private DevExpress.XtraReports.UI.XRLabel label39;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.XRLabel label35;
        private DevExpress.XtraReports.UI.XRLabel label32;
        private DevExpress.XtraReports.UI.XRLabel label38;
        private System.Data.OleDb.OleDbDataAdapter TableTableAdapter;
        private System.Data.OleDb.OleDbCommand oleDbCommand1;
        private System.Data.OleDb.OleDbConnection oleDbConnection1;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private System.Resources.ResourceManager _resources;
        public InformeVentaCteCat() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAADAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsHnWR035IbpXQAAAABSAAAAK" +
                        "wAAAK0BAAAmJAB0AGgAaQBzAC4AUwBjAHIAaQBwAHQAcwBTAG8AdQByAGMAZQAAAAAAInAAaQBjAHQAd" +
                        "QByAGUAQgBvAHgAMQAuAEkAbQBhAGcAZQC0FgAAInAAaQBjAHQAdQByAGUAQgBvAHgAMgAuAEkAbQBhA" +
                        "GcAZQCx2AAAAbEtDQpQcml2YXRlIFN1YiBEZXRhaWxfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzI" +
                        "E9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNC" +
                        "g0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkVtcHJlc2FOb21icmUiKSBJUyBOT1RISU5HIFRIR" +
                        "U4NCiAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJUb3Rhb" +
                        "CIpID0gRmFsc2UgQU5EIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYTEiKSA9IEZhbHNlIEFOR" +
                        "CBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIk1vbmVkYSIpIGlzbm90IE5vdGhpbmcgQU5EIEdldEN1cnJlb" +
                        "nRDb2x1bW5WYWx1ZSgiQ2F0ZWdvcmlhIikuVG9TdHJpbmcgPD4gIiIgVEhFTiAgICAgDQogICAgIGUuQ" +
                        "2FuY2VsID0gRmFsc2UNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogIEVORCBJRiANC" +
                        "g0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBHcm91cEhlYWRlcjJfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZ" +
                        "GVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50Q" +
                        "XJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkVtcHJlc2FOb21icmUiKSBJUyBOT1RIS" +
                        "U5HIFRIRU4NCiAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlK" +
                        "CJUb3RhbCIpID0gRmFsc2UgQU5EIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYTEiKSA9IEZhb" +
                        "HNlIEFORCBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIk1vbmVkYSIpIGlzbm90IE5vdGhpbmcgVEhFTg0KI" +
                        "CAgICBlLkNhbmNlbCA9IEZhbHNlDQogIEVMU0UNCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICBFT" +
                        "kQgSUYgDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgR3JvdXBIZWFkZXIxX0JlZm9yZVByaW50KEJ5V" +
                        "mFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpb" +
                        "nRFdmVudEFyZ3MpDQoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJFbXByZXNhTm9tYnJlIikgS" +
                        "VMgTk9USElORyBUSEVODQogICAgUkVUVVJODQogIEVORCBJRg0KDQogIElGIEdldEN1cnJlbnRDb2x1b" +
                        "W5WYWx1ZSgiTW9uZWRhIikuVG9TdHJpbmcgPD4gTk9USElORyBUSEVODQogICAgIGUuQ2FuY2VsID0gR" +
                        "mFsc2UNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogIEVORCBJRiANCg0KRW5kIFN1Y" +
                        "g0KDQpQcml2YXRlIFN1YiBHcm91cEZvb3RlcjFfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9ia" +
                        "mVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KI" +
                        "CBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlRvdGFsIikgPSBGYWxzZSBUSEVOICAgICANCiAgICAgZ" +
                        "S5DYW5jZWwgPSBGYWxzZQ0KICBFTFNFDQogICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgRU5EIElGI" +
                        "A0KDQpFbmQgU3ViDQoNCg0KUHJpdmF0ZSBTdWIgY2hhcnQxX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlc" +
                        "iBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ" +
                        "3MpDQoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJDb250TW9uZWRhIikgSVMgTk9USElORyBUS" +
                        "EVODQogICAgIGUuQ2FuY2VsID0gVHJ1ZSAgICANCiAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0dlb" +
                        "mVyYSB1biBvYmpldG8gcXVlIHJlcHJlc2VudGEgYSBsYSBncsOhZmljYQ0KICBEaW0gR3JhZmljYTEgQ" +
                        "XMgWFJDaGFydCA9IENUeXBlKHNlbmRlcixYUkNoYXJ0KQ0KDQogICdHdWFyZGEgZWwgdmFsb3IgZGUgb" +
                        "GEgY29sdW1uYSBDb250TW9uZWRhDQogIERpbSBDb250TW9uZWRhIEFzIFN0cmluZyA9IEdldEN1cnJlb" +
                        "nRDb2x1bW5WYWx1ZSgiQ29udE1vbmVkYSIpLlRvU3RyaW5nDQoNCiAgJ0dlbmVyYSB1biBvYmpldG8gc" +
                        "XVlIHJlcHJlc2VudGEgYSBsYSBwbGFudGlsbGEgc2Ugc2VyaWVzIGF1dG9jcmVhZGFzDQogIERpbSBQb" +
                        "GFudGlsbGEgQXMgU2VyaWVzQmFzZSA9IEdyYWZpY2ExLlNlcmllc1RlbXBsYXRlDQoNCiAgJ0dlbmVyY" +
                        "SB1biBvYmpldG8gdGlwbyBUw610dWxvDQogIERpbSBUaXR1bG8xIEFzIE5ldyBDaGFydFRpdGxlKCkNC" +
                        "iAgVGl0dWxvMS5UZXh0ID0gIlJlc3VtZW4gTW9uZWRhIENvbnRhYmxlICgiICsgQ29udE1vbmVkYS5Uc" +
                        "mltICsgIikgUG9yIENhdGVnb3LDrWEiDQogIFRpdHVsbzEuRm9udCA9IE5ldyBGb250KFRpdHVsbzEuR" +
                        "m9udC5TaXplLDIwKQ0KDQogICdMaW1waWEgbG9zIHTDrXR1bG9zIGRlIGxhIGdyw6FmaWNhDQogIEdyY" +
                        "WZpY2ExLlRpdGxlcy5DbGVhcigpDQoNCiAgJ0FncmVnYSBlbCBUw610dWxvIGEgbGEgZ3LDoWZpY2ENC" +
                        "iAgR3JhZmljYTEuVGl0bGVzLkFkZFJhbmdlKE5ldyBDaGFydFRpdGxlKCkge1RpdHVsbzF9KQ0KDQogI" +
                        "CdDcmVhIGRvcyBvYmpldG9zIHRpcG8gZmlsdHJvIHkgbG9zIGluaWNpYWxpemEgY29uIGxvcyBmaWx0c" +
                        "m9zIG5lY2VzYXJpb3MNCiAgRGltIEZpbHRybzEgQXMgTmV3IERhdGFGaWx0ZXIoIk1vbmVkYTIiLCJTe" +
                        "XN0ZW0uU3RyaW5nIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLENvbnRNb25lZGEpDQogIERpbSBGa" +
                        "Wx0cm8yIEFzIE5ldyBEYXRhRmlsdGVyKCJHcmFmaWNhMSIsIlN5c3RlbS5Cb29sZWFuIixEYXRhRmlsd" +
                        "GVyQ29uZGl0aW9uLkVxdWFsLFRydWUpDQogIERpbSBGaWx0cm8zIEFzIE5ldyBEYXRhRmlsdGVyKCJHc" +
                        "mFmaWNhMiIsIlN5c3RlbS5Cb29sZWFuIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLFRydWUpDQoNC" +
                        "iAgJ0xpbXBpYSBsb3MgZmlsdHJvcyBkZSBsYSBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhdGFGaWx0Z" +
                        "XJzLkNsZWFyKCkNCg0KICAnUG9uZSBlbCBDb25qdWN0aW9uTW9kZSBhIEFuZA0KICBQbGFudGlsbGEuR" +
                        "GF0YUZpbHRlcnNDb25qdW5jdGlvbk1vZGUgPSBDb25qdW5jdGlvblR5cGVzLkFuZA0KDQogICdBZ3JlZ" +
                        "2EgbG9zIGZpbHRyb3MgYSBsYSBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGa" +
                        "Wx0cm8xKQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzIpDQogIFBsYW50aWxsYS5EY" +
                        "XRhRmlsdGVycy5BZGQoRmlsdHJvMykNCg0KICAnT2N1bHRhIG8gbXVlc3RyYSBsYXMgZXRpcXVldGFzI" +
                        "GRlIGxhIGdyYWZpY2ENCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJFdGlxdWV0YSIpID0gRmFsc" +
                        "2UgVEhFTg0KICAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gRmFsc2UNC" +
                        "iAgRUxTRQ0KICAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gVHJ1ZQ0KI" +
                        "CBFTkQgSUYNCg0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBjaGFydDJfQmVmb3JlUHJpbnQoQnlWYWwgc" +
                        "2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2Z" +
                        "W50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIk1vbmVkYSIpIElTIE5PVEhJTkcgV" +
                        "EhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQogICdHZ" +
                        "W5lcmEgdW4gb2JqZXRvIHF1ZSByZXByZXNlbnRhIGEgbGEgZ3LDoWZpY2ENCiAgRGltIEdyYWZpY2ExI" +
                        "EFzIFhSQ2hhcnQgPSBDVHlwZShzZW5kZXIsWFJDaGFydCkNCg0KICdTaSBlbCB2YWxvciBkZWwgY2Ftc" +
                        "G8gVmVyR3JhZmljYURldGFsbGUgZXMgMCBubyBzZSBtdWVzdHJhIA0KICBJRiBHZXRDdXJyZW50Q29sd" +
                        "W1uVmFsdWUoIlZlckdyYWZpY2FEZXRhbGxlIikgPSAwIFRIRU4NCiAgICBHcmFmaWNhMS52aXNpYmxlI" +
                        "D0gRmFsc2UNCiAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQogI" +
                        "CdHdWFyZGEgZWwgdmFsb3IgZGUgbGEgY29sdW1uYSBNb25lZGENCiAgRGltIE1vbmVkYSBBcyBTdHJpb" +
                        "mcgPSBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIk1vbmVkYSIpLlRvU3RyaW5nDQogIERpbSBDYXRlZ29ya" +
                        "WEgQXMgU3RyaW5nID0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJDYXRlZ29yaWEiKS5Ub1N0cmluZw0KD" +
                        "QogICdHZW5lcmEgdW4gb2JqZXRvIHF1ZSByZXByZXNlbnRhIGEgbGEgcGxhbnRpbGxhIHNlIHNlcmllc" +
                        "yBhdXRvY3JlYWRhcw0KICBEaW0gUGxhbnRpbGxhIEFzIFNlcmllc0Jhc2UgPSBHcmFmaWNhMS5TZXJpZ" +
                        "XNUZW1wbGF0ZQ0KDQogICdHZW5lcmEgdW4gb2JqZXRvIHRpcG8gVMOtdHVsbw0KICBEaW0gVGl0dWxvM" +
                        "SBBcyBOZXcgQ2hhcnRUaXRsZSgpDQogIFRpdHVsbzEuVGV4dCA9ICJSZXN1bWVuICIgKyBNb25lZGEuV" +
                        "HJpbSArICAiIFBvciBDYXRlZ29yw61hIg0KICBUaXR1bG8xLkZvbnQgPSBOZXcgRm9udChUaXR1bG8xL" +
                        "kZvbnQuU2l6ZSwxMCkNCg0KICAnTGltcGlhIGxvcyB0w610dWxvcyBkZSBsYSBncsOhZmljYQ0KICBHc" +
                        "mFmaWNhMS5UaXRsZXMuQ2xlYXIoKQ0KDQogICdBZ3JlZ2EgZWwgVMOtdHVsbyBhIGxhIGdyw6FmaWNhD" +
                        "QogIEdyYWZpY2ExLlRpdGxlcy5BZGRSYW5nZShOZXcgQ2hhcnRUaXRsZSgpIHtUaXR1bG8xfSkNCg0KI" +
                        "CAnQ3JlYSBkb3Mgb2JqZXRvcyB0aXBvIGZpbHRybyB5IGxvcyBpbmljaWFsaXphIGNvbiBsb3MgZmlsd" +
                        "HJvcyBuZWNlc2FyaW9zDQogIERpbSBGaWx0cm8xIEFzIE5ldyBEYXRhRmlsdGVyKCJNb25lZGEyIiwiU" +
                        "3lzdGVtLlN0cmluZyIsRGF0YUZpbHRlckNvbmRpdGlvbi5FcXVhbCxNb25lZGEpDQogIERpbSBGaWx0c" +
                        "m8yIEFzIE5ldyBEYXRhRmlsdGVyKCJHcmFmaWNhMSIsIlN5c3RlbS5Cb29sZWFuIixEYXRhRmlsdGVyQ" +
                        "29uZGl0aW9uLkVxdWFsLFRydWUpDQogIERpbSBGaWx0cm8zIEFzIE5ldyBEYXRhRmlsdGVyKCJHcmFma" +
                        "WNhMiIsIlN5c3RlbS5Cb29sZWFuIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLEZhbHNlKQ0KDQogI" +
                        "CdMaW1waWEgbG9zIGZpbHRyb3MgZGUgbGEgcGxhbnRpbGxhDQogIFBsYW50aWxsYS5EYXRhRmlsdGVyc" +
                        "y5DbGVhcigpDQoNCiAgJ1BvbmUgZWwgQ29uanVjdGlvbk1vZGUgYSBBbmQNCiAgUGxhbnRpbGxhLkRhd" +
                        "GFGaWx0ZXJzQ29uanVuY3Rpb25Nb2RlID0gQ29uanVuY3Rpb25UeXBlcy5BbmQNCg0KICAnQWdyZWdhI" +
                        "GxvcyBmaWx0cm9zIGEgbGEgcGxhbnRpbGxhDQogIFBsYW50aWxsYS5EYXRhRmlsdGVycy5BZGQoRmlsd" +
                        "HJvMSkNCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0cm8yKQ0KICBQbGFudGlsbGEuRGF0Y" +
                        "UZpbHRlcnMuQWRkKEZpbHRybzMpDQoNCiAgJ09jdWx0YSBvIG11ZXN0cmEgbGFzIGV0aXF1ZXRhcyBkZ" +
                        "SBsYSBncmFmaWNhDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiRXRpcXVldGEiKSA9IEZhbHNlI" +
                        "FRIRU4NCiAgICAgR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUuTGFiZWwuVmlzaWJsZSA9IEZhbHNlDQogI" +
                        "EVMU0UNCiAgICAgR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUuTGFiZWwuVmlzaWJsZSA9IFRydWUNCiAgR" +
                        "U5EIElGDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgR3JvdXBIZWFkZXIzX0JlZm9yZVByaW50KEJ5V" +
                        "mFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpb" +
                        "nRFdmVudEFyZ3MpDQoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJFbXByZXNhTm9tYnJlIikgS" +
                        "VMgTk9USElORyBUSEVODQogICAgUkVUVVJODQogIEVORCBJRg0KDQogIElGIEdldEN1cnJlbnRDb2x1b" +
                        "W5WYWx1ZSgiTW9uZWRhIikuVG9TdHJpbmcgPD4gTk9USElORyBUSEVODQogICAgIGUuQ2FuY2VsID0gR" +
                        "mFsc2UNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRU5EIElGIA0KDQoNCkVuZCBTdWINC" +
                        "kAAAQAAAP////8BAAAAAAAAAAwCAAAAUVN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1b" +
                        "HR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQUBAAAAFVN5c3RlbS5Ec" +
                        "mF3aW5nLkJpdG1hcAEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABawQAAAv/Y/+AAEEpGSUYAAQEBAJYAl" +
                        "gAA/+4ADkFkb2JlAGQAAAAAAf/hEZZFeGlmAABNTQAqAAAACAAHARIAAwAAAAEAAQAAARoABQAAAAEAA" +
                        "ABiARsABQAAAAEAAABqASgAAwAAAAEAAgAAATEAAgAAABwAAAByATIAAgAAABQAAACOh2kABAAAAAEAA" +
                        "ACiAAAAwgCWAAAAAQAAAJYAAAABAABBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MAMjAxMTowMToxO" +
                        "CAwOTo1MTowNgAAAqACAAQAAAABAAABYqADAAQAAAABAAAAgQAAAAAAAAAGAQMAAwAAAAEABgAAARoAB" +
                        "QAAAAEAAAEQARsABQAAAAEAAAEYASgAAwAAAAEAAgAAAgEABAAAAAEAAAEgAgIABAAAAAEAABBuAAAAA" +
                        "AAAAEgAAAABAAAASAAAAAH/2P/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkID" +
                        "AkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENC" +
                        "wsNDg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD" +
                        "AwM/8AAEQgAOgCgAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYHCAkKC" +
                        "wEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQhEjEFQVFhE" +
                        "yJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXiZfKzhMPTdePzR" +
                        "ieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIEBAMEBQYHBwYFNQEAA" +
                        "hEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKygwcmNcLSRJNUoxdkRVU2d" +
                        "GXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dXZ3eHl6e3x//aAAwDAQACEQMRA" +
                        "D8A9VSSSSUpYGFkfWd31kyKsqoN6S3f6btrQ3aI9B1VgPqvts/wzH/+B/o1d+sPVj0jpN2axrX2t2tpY" +
                        "6YL3kMbu2/mtn1HIf1Y6rl9W6QzMy6212Oe9oLJDXBrtnqNa4vcz9z6af7Uvb939Di4P8JZ7sfc9v8AS" +
                        "ri/wXWSSSTF6kkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklP//Q9VWf1rrWJ0fE9e/32PltFDT7r" +
                        "Hfut/dY3/CWf4NN1vreJ0bE9e/32PltFDT7rHeA/dY3/CWf4Ncb0zpnUfrX1F+fnvLcVp22WNkCAf6Hh" +
                        "/usb/hbf/R/82lK+sfU8rN+q/Trspwddl5Ntzg0Q1orN1VdTP5DGOZ9JF6sOpdL6J9X+odPBZViU7rbR" +
                        "qA+8VPjIr/0NrvUb/X/ANHZ6Stf4wcGqjpXTxjsFVGPaaWVtEABzHFv/npdD0B1OX9XcEECyp+LXW9jg" +
                        "C0wwVWsc0/S+i5i0I5Bj5bBPh4gJz44nY8XFH/oNGWM5OZzRvhJhDhkNxXq/wCmw+r31hxet4u9n6PJr" +
                        "gZGOTq0/vN/fqf+Y9ay87670LO+rGa3q3SHOGIHaHVxqLj/ADF/+lxbPose7/i7P0vpW2dd9XvrDjdbx" +
                        "d7B6eTVAyKCZLSfzm/v1P8AzHqHmOXiI+9hPFhl/jY5fuyZcGeRkcWUcOWP+Lkj+/FL13rmJ0PB+25bX" +
                        "vrLxWG17Zkgu/wjq2fRY785XqrWXVMurMssaHtPk4bmrB+vHUcvpvSK8jDc1l/rta2xzGvLZZaS6sWh7" +
                        "Gv9uz6P0Fk9T6z9ZX9XwundNyhW/KxarA1zK9peW2WWuL31P2+2tNx8rPJESEoxB4vmP+b+a12TmYQkY" +
                        "kSlIcOkR+/8r26yuu/WDF6HXRZlV2WMveWTWGnbA3Fzg9zP+iubyOsfXToThb1djcvDs9rnsDBtJ/0dt" +
                        "LGenb+569PpPWX9aH9XuxcfKysxud0u9xfg2bWMsgt3fpmU117bGN/RWfy/9GpsPJXkjxyhLHLrCXz/A" +
                        "NWP9Zizc5WORjGQnHpKPy/1pf1X01JcrV1P6w9Cw8rN+sdteSz2MxKa9oe607vbvrrqayvb9Pf6n0P+3" +
                        "KOPb/jC6pj/ALQx7a8ep4300Qxm5vb0m3V3P2u/M+02s/zFEOUkbPuYxAHh9wy9Epdosh5kChwTMyOLg" +
                        "A9cY95PcLlfqh9Yc/qGN1LL6lYHsxiHtaxgaGM2vse1u33v+j+ej/Vf6y5PUbremdTq9DqOMJIALQ9rS" +
                        "GvlhnZazc3d+Y/+cqWL9RbDX0jrVga15YzcGvEtMV2Ha9v5zE+OAxxZ4zA4x7XDLf55bxl/WWSziWTAY" +
                        "k8BGTiH9yP6Uf6r1nQut4nXMH7biNexgea3Ns27g5sH/BusZ9Fzfz1oriOn/W3qGN9VH9RySMrLdlHGo" +
                        "lrWMH6NtjfUZQKvYxrbP5f5iWOz/GFm4reoU5lQa8bq6QapIPG0Cmyn/ty9N+5zF8c4QAlwcUjpKX9Vd" +
                        "97ga4YzmSOOojWMfF6/PzacDCvzb59LHY6x4aJMNG72zCH0nqdHVun09Qxw5tV0w10SC1zqntOwvZ9Nn" +
                        "7ywq+r9dt+rfU7eqYYx8rDY4V2WM9lhA/nPQs3sd6bvz/6PZ/g1Us+t2fhfVbBynxkdRznXNFr2gNArs" +
                        "e11jq6vTa52z02MZ/1xNHKZCaHCfX7ehvXh9zi/u8K481jAs2PT7mo6cXB/jcT2iS4puP8A4xnUNzGZd" +
                        "VhcARQ00kkH/rP2b/2YXQ/V3P6ln9O9bqeKcTJa9zC0tczeBEWiqz31/S2f2E3Jy5hHiE4TANHglqE48" +
                        "/GeEwnCxY4xoX//0ez+tf1ZPVWjNxDGfSzYGOPtsrBL/R93tqs3O/RWf2Lv9JTmfVP6z+gWdH6l+iDD6" +
                        "WPa4bC1wOz7Jkt9uyxrvZXZ/wBbt/S/zvarm/rV9VWdUY7Mw2tbntbD2GA29oEenZPtbc1v81b/ANat/" +
                        "R/zKU3vrR0x3U+iZOPW3de0C2gcnfWd4a3/AIxu6r/rixP8XnV2W4tnSbHfpKSbscHvW8zY0f8AFXO/8" +
                        "GUfqp9aHse3pHVXODg70se6yQ4OB2fZMnd7vV3eyp7/APirP0n87n/WHoNwzn9V+rpdkVPsey5uI6X03" +
                        "615DW+md+y3c71P9H/xKuctKGTHLl5nh4jx45H9GbU5mM8eSOeA4uEcGSI/Sh/6C3Prd9azc5/RekzY6" +
                        "w+jkWsG4uLvYcXHaPpvf9Cx/wD1uv3/AM3qfVD6rno9TsvLM5+Q0NcwGW1Mnd6II+nZu/nbP+2v9JbD6" +
                        "p/VJnSWNzc1rX9Qc2GtEFtLSP5uv9613+Ft/wCtVfo/57pkM+aEYexg+T9OfXLL/vU4cMpT9/N8/wChD" +
                        "pij/wB88p/jI/5Bq/8ADLf/AD3cs8f+LTo3/hSr/wA9ZC6X6y4XTs7Bqxuoi30bMipjH06Ftjz6NTnH/" +
                        "RudZ6X0f8IqLmfV49TPVGC05PSH19PFTDLS5+2ijax3us2uynU79/5ln+jT8OUDCI1ImssdBpeXhjBZl" +
                        "xE5jKxvjl4/q/VJ0vrHWyzoHUW2NDgMa1wB8WtNjHf2Xt3LgM9trvqV0x/LGZN7PgXG1zB+D16Tc3Ez6" +
                        "MnDL22Me11OQ1jhubvG1zXbf5t+1yoYvS+iYHSn9IssZdiNDn2tyHsJ2ucSX2fQ2tbb9B/76Zy+cYogE" +
                        "EyGQT4f6vDKBX8xh9yRIIAMDC/63FxOJ9dr8fqvQKs3p1zcmnHua+7YZ2te19e61n069r3s9j2rP6Z0n" +
                        "E6hiMvb9Y7aXbQLKLH7XVkCPT2uvb7W/mO+gun6b9X+g9IybvQPv6g3YKLbA8Fg3ONdVb/dYz3e7f6qy" +
                        "2fVD6r9SsstqF2JtutxxS17Q0vpc5lhpZZ63s9m7+p/g1Njz44wMIynGETxRycEZaT/AEZRl/0mLJhnK" +
                        "fGRGUpDhlDjlH5f0oyim6H9U68XqdfV2dUOeWb2uMB24lvpe671LPoLH+pb2N6R1ykuAt9Iu9M87Qyxh" +
                        "d/n+1dZ9XukdL6Vi219NsN1dlhdY8vD/cAK9v6MNY3ZtWKKugnqVfVKunZllnVaXmljNgrs9av1sl7We" +
                        "ux9d3ou/SbnMZ/o/wBL+kTY5jP3YyMp6Q4ZcMYfzR9zhlH0/wBZMsIgMUogQ+fijcpj9cODi4vU5nQ7+" +
                        "jU/Uy39sVutxrM0sY2sEv8AULK3MdU4FuxzGte7dv8A/Sam36t41NTs/wCr3Xm01kAn1LPTj879PdSWb" +
                        "f8Ai7sVdDjdM6F0zG/5v2ML8bJY/IsfkOaWmH00w9/s2277afR9Nn+D/wBKqNv1B+rTsr0/XurtfLmY4" +
                        "tYTtH7nq12X7P7aeOYhxTPFOAnIz+UZMc4f3P0Vp5eXDAcMJmMRH5vbyQl/fc/E691Dqf1f63iZzm3vx" +
                        "KCW5LAAHB29sO2Btbv5v9E9rP0lafHu6A36m9Mp6015ZdbcKX1Al9bhbdvvDm/m1td7/wCc3/6GxdLR0" +
                        "boNPT7+kY4Yyq+sm8NfNha4bPXe8l1nb2v+glR0Tojuljou1uVjYx9zHu3Pa5xNvqOeza+q13qOd7PTU" +
                        "Z5jFrwxnCPuDJUPQRHg4OIfu+teMGTS5RnL2zj9XqHFx8df4ryzvq99gqOd0Hr9VeOTP6S0Vt/65ZUXU" +
                        "Wu/4zGW79S+u5vWMK77aA63GeG+s0bQ8OG73NHs9Rn5+z+QqQ+on1Xc37U3KtNGrtwtrLIbO/8AS+nu2" +
                        "s2+79Kul6dg4GBito6fW2rH+k3YZ3bv8IXkudZu/fc5LmM2OWMxs5J3pOUBjlCuhl+knl8OSOQHTHCtY" +
                        "RmZxnfYfov/0vVUkkklPOfWn6rN6mx2bhNDeoNb7maBt7QP5t8+1tzf8Dd/1q39H/Mz+qf1cf0il2Rku" +
                        "P2zJaBZU1x9Oto+jXtafTtub+ff/wBbp/R/zvQJJKUkkkkpp9YxLMzpt9FX88W76JMD1ayLsf3f8fXWs" +
                        "ejoGcMzBusLNprN2fwYymm++k1t/PZ9p6lkW/8AoNSukSVjF7vtnhrhuV334f5f4bBl9rjHFfFQ27cTz" +
                        "31b6Pk4NlZyqrGW4+P9mNm6g0v9zX7qvs9dWVZucz1Wvzf0rPWu/PsssTV/V6cnDttxaXbMzNvyXENJL" +
                        "LnZDsYu0/SfTxvb/g/+tLoklJL3uOe10eLh4v3cm3/P/wANZH2uCN3w2K4q/eg8e/oXWvsGNhir3U00t" +
                        "re11UMfVe+9zbb7GnK2V0tx/sTcX8/1fWRn9A6sXZ23Y4Z4zaq3Pdrji59l1NtG0fzWbLWZv+H9T0P8H" +
                        "V6bOqSUh9/X+b+aV1+8sHs6fP8ALHf91x+gYFmM6+62m3HstbUwssOPt/RBwHpN6eyqvazf6XqWt9V9b" +
                        "Kv9Gg4fSs6pn1fFjAD06pzMr3A7SaPQ9v7/AOkW8koD7nFP5dtauq9qfy/9TZRwcEL4qsVdcV+7D5v8N" +
                        "yuo9K+29RZbbTXfjsxL6gLAHAWWOp2+x371bLPeslvR+tOfgNuqBOKcFxta6qIpDG5fr2uY7Nuyt3rsr" +
                        "9Oz7L9nf/pPUrt6tJOxe7wiuGq9PHff9FGT2+I3xXevDTxnR8N1uDi5FeGyurGszb7c6WbrGuGVj+g1r" +
                        "f0znPfYx13q/odmNX/Oez0lh9FzM3pWP9lxa8EDpgoNoc0faDace/Z+ja9/oenRb6j8lu/1Mt/6C2v1f" +
                        "V7NJTH3eI0I8XFprP8Aeyfven99ij7fCLMuHh10j+7D931f9285i9De+zHtux7Nv237RkVZRocIbi241" +
                        "d1dWE1uN/PPpZ/pf0XqrQ6RRlYTG4Rxm14wdk2Nsa9u1gdkPfi47aR+a7Gt3/8ABen6S00lXze5R4+Hh" +
                        "0quLh/T4eFnxcGnDxXrvw3+jxW//9n/7RjQUGhvdG9zaG9wIDMuMAA4QklNBCUAAAAAABAAAAAAAAAAA" +
                        "AAAAAAAAAAAOEJJTQQ6AAAAAACTAAAAEAAAAAEAAAAAAAtwcmludE91dHB1dAAAAAUAAAAAQ2xyU2Vud" +
                        "W0AAAAAQ2xyUwAAAABSR0JDAAAAAEludGVlbnVtAAAAAEludGUAAAAAQ2xybQAAAABNcEJsYm9vbAEAA" +
                        "AAPcHJpbnRTaXh0ZWVuQml0Ym9vbAAAAAALcHJpbnRlck5hbWVURVhUAAAAAQAAADhCSU0EOwAAAAABs" +
                        "gAAABAAAAABAAAAAAAScHJpbnRPdXRwdXRPcHRpb25zAAAAEgAAAABDcHRuYm9vbAAAAAAAQ2xicmJvb" +
                        "2wAAAAAAFJnc01ib29sAAAAAABDcm5DYm9vbAAAAAAAQ250Q2Jvb2wAAAAAAExibHNib29sAAAAAABOZ" +
                        "3R2Ym9vbAAAAAAARW1sRGJvb2wAAAAAAEludHJib29sAAAAAABCY2tnT2JqYwAAAAEAAAAAAABSR0JDA" +
                        "AAAAwAAAABSZCAgZG91YkBv4AAAAAAAAAAAAEdybiBkb3ViQG/gAAAAAAAAAAAAQmwgIGRvdWJAb+AAA" +
                        "AAAAAAAAABCcmRUVW50RiNSbHQAAAAAAAAAAAAAAABCbGQgVW50RiNSbHQAAAAAAAAAAAAAAABSc2x0V" +
                        "W50RiNQeGxAYsAAAAAAAAAAAAp2ZWN0b3JEYXRhYm9vbAEAAAAAUGdQc2VudW0AAAAAUGdQcwAAAABQZ" +
                        "1BDAAAAAExlZnRVbnRGI1JsdAAAAAAAAAAAAAAAAFRvcCBVbnRGI1JsdAAAAAAAAAAAAAAAAFNjbCBVb" +
                        "nRGI1ByY0BZAAAAAAAAOEJJTQPtAAAAAAAQAJYAAAABAAIAlgAAAAEAAjhCSU0EJgAAAAAADgAAAAAAA" +
                        "AAAAAA/gAAAOEJJTQQNAAAAAAAEAAAAeDhCSU0EGQAAAAAABAAAAB44QklNA/MAAAAAAAkAAAAAAAAAA" +
                        "AEAOEJJTScQAAAAAAAKAAEAAAAAAAAAAjhCSU0D9QAAAAAASAAvZmYAAQBsZmYABgAAAAAAAQAvZmYAA" +
                        "QChmZoABgAAAAAAAQAyAAAAAQBaAAAABgAAAAAAAQA1AAAAAQAtAAAABgAAAAAAAThCSU0D+AAAAAAAc" +
                        "AAA/////////////////////////////wPoAAAAAP////////////////////////////8D6AAAAAD//" +
                        "///////////////////////////A+gAAAAA/////////////////////////////wPoAAA4QklNBAAAA" +
                        "AAAAAIAAThCSU0EAgAAAAAABAAAAAA4QklNBDAAAAAAAAIBAThCSU0ELQAAAAAABgABAAAAAzhCSU0EC" +
                        "AAAAAAAEAAAAAEAAAJAAAACQAAAAAA4QklNBB4AAAAAAAQAAAAAOEJJTQQaAAAAAANJAAAABgAAAAAAA" +
                        "AAAAAAAgQAAAWIAAAAKAFUAbgB0AGkAdABsAGUAZAAtADEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAA" +
                        "AAAAAAAAAAAAWIAAACBAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAEAAAAAA" +
                        "ABudWxsAAAAAgAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAA" +
                        "ABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJnaHRsb25nAAABYgAAAAZzbGljZXNWbExzA" +
                        "AAAAU9iamMAAAABAAAAAAAFc2xpY2UAAAASAAAAB3NsaWNlSURsb25nAAAAAAAAAAdncm91cElEbG9uZ" +
                        "wAAAAAAAAAGb3JpZ2luZW51bQAAAAxFU2xpY2VPcmlnaW4AAAANYXV0b0dlbmVyYXRlZAAAAABUeXBlZ" +
                        "W51bQAAAApFU2xpY2VUeXBlAAAAAEltZyAAAAAGYm91bmRzT2JqYwAAAAEAAAAAAABSY3QxAAAABAAAA" +
                        "ABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAAgQAAAABSZ2h0bG9uZwAAA" +
                        "WIAAAADdXJsVEVYVAAAAAEAAAAAAABudWxsVEVYVAAAAAEAAAAAAABNc2dlVEVYVAAAAAEAAAAAAAZhb" +
                        "HRUYWdURVhUAAAAAQAAAAAADmNlbGxUZXh0SXNIVE1MYm9vbAEAAAAIY2VsbFRleHRURVhUAAAAAQAAA" +
                        "AAACWhvcnpBbGlnbmVudW0AAAAPRVNsaWNlSG9yekFsaWduAAAAB2RlZmF1bHQAAAAJdmVydEFsaWduZ" +
                        "W51bQAAAA9FU2xpY2VWZXJ0QWxpZ24AAAAHZGVmYXVsdAAAAAtiZ0NvbG9yVHlwZWVudW0AAAARRVNsa" +
                        "WNlQkdDb2xvclR5cGUAAAAATm9uZQAAAAl0b3BPdXRzZXRsb25nAAAAAAAAAApsZWZ0T3V0c2V0bG9uZ" +
                        "wAAAAAAAAAMYm90dG9tT3V0c2V0bG9uZwAAAAAAAAALcmlnaHRPdXRzZXRsb25nAAAAAAA4QklNBCgAA" +
                        "AAAAAwAAAACP/AAAAAAAAA4QklNBBQAAAAAAAQAAAAEOEJJTQQMAAAAABCKAAAAAQAAAKAAAAA6AAAB4" +
                        "AAAbMAAABBuABgAAf/Y/+0ADEFkb2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkME" +
                        "QsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0OD" +
                        "RAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/w" +
                        "AARCAA6AKADASIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABB" +
                        "QEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBM" +
                        "gYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5Skh" +
                        "bSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhM" +
                        "RIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys" +
                        "4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1V" +
                        "JJJJSlgYWR9Z3fWTIqyqg3pLd/pu2tDdoj0HVWA+q+2z/DMf/4H+jV36w9WPSOk3ZrGtfa3a2ljpgveQ" +
                        "xu7b+a2fUch/VjquX1bpDMzLrbXY572gskNcGu2eo1ri9zP3Ppp/tS9v3f0OLg/wlnux9z2/wBKuL/Bd" +
                        "ZJJJMXqSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//9D1VZ/WutYnR8T17/fY+W0UNPusd+639" +
                        "1jf8JZ/g03W+t4nRsT17/fY+W0UNPusd4D91jf8JZ/g1xvTOmdR+tfUX5+e8txWnbZY2QIB/oeH+6xv+" +
                        "Ft/9H/zaUr6x9Tys36r9OuynB12Xk23ODRDWis3VV1M/kMY5n0kXqw6l0von1f6h08FlWJTuttGoD7xU" +
                        "+Miv/Q2u9Rv9f8A0dnpK1/jBwaqOldPGOwVUY9ppZW0QAHMcW/+el0PQHU5f1dwQQLKn4tdb2OALTDBV" +
                        "axzT9L6LmLQjkGPlsE+HiAnPjidjxcUf+g0ZYzk5nNG+EmEOGQ3Fer/AKbD6vfWHF63i72fo8muBkY5O" +
                        "rT+839+p/5j1rLzvrvQs76sZrerdIc4YgdodXGouP8AMX/6XFs+ix7v+Ls/S+lbZ131e+sON1vF3sHp5" +
                        "NUDIoJktJ/Ob+/U/wDMeoeY5eIj72E8WGX+Njl+7JlwZ5GRxZRw5Y/4uSP78UvXeuYnQ8H7blte+svFY" +
                        "bXtmSC7/COrZ9FjvzleqtZdUy6syyxoe0+ThuasH68dRy+m9IryMNzWX+u1rbHMa8tllpLqxaHsa/27P" +
                        "o/QWT1PrP1lf1fC6d03KFb8rFqsDXMr2l5bZZa4vfU/b7a03Hys8kRISjEHi+Y/5v5rXZOZhCRiRKUhw" +
                        "6RH7/yvbrK679YMXoddFmVXZYy95ZNYadsDcXOD3M/6K5vI6x9dOhOFvV2Ny8Oz2uewMG0n/R20sZ6dv" +
                        "7nr0+k9Zf1of1e7Fx8rKzG53S73F+DZtYyyC3d+mZTXXtsY39FZ/L/0amw8leSPHKEscusJfP8A1Y/1m" +
                        "LNzlY5GMZCceko/L/Wl/VfTUlytXU/rD0LDys36x215LPYzEpr2h7rTu9u+uuprK9v09/qfQ/7co49v+" +
                        "MLqmP8AtDHtrx6njfTRDGbm9vSbdXc/a78z7Taz/MUQ5SRs+5jEAeH3DL0Sl2iyHmQKHBMzI4uAD1xj3" +
                        "k9wuV+qH1hz+oY3UsvqVgezGIe1rGBoYza+x7W7fe/6P56P9V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa+WGd" +
                        "lrNzd35j/5ypYv1FsNfSOtWBrXljNwa8S0xXYdr2/nMT44DHFnjMDjHtcMt/nlvGX9ZZLOJZMBiTwEZO" +
                        "If3I/pR/qvWdC63idcwftuI17GB5rc2zbuDmwf8G6xn0XN/PWiuI6f9beoY31Uf1HJIyst2UcaiWtYwf" +
                        "o22N9RlAq9jGts/l/mJY7P8YWbit6hTmVBrxurpBqkg8bQKbKf+3L037nMXxzhACXBxSOkpf1V33uBrh" +
                        "jOZI46iNYx8Xr8/NpwMK/Nvn0sdjrHhokw0bvbMIfSep0dW6fT1DHDm1XTDXRILXOqe07C9n02fvLCr6" +
                        "v1236t9Tt6phjHysNjhXZYz2WED+c9Czex3pu/P/o9n+DVSz63Z+F9VsHKfGR1HOdc0WvaA0Cux7XWOr" +
                        "q9NrnbPTYxn/XE0cpkJocJ9ft6G9eH3OL+7wrjzWMCzY9PuajpxcH+NxPaJLim4/wDjGdQ3MZl1WFwBF" +
                        "DTSSQf+s/Zv/ZhdD9Xc/qWf071up4pxMlr3MLS1zN4ERaKrPfX9LZ/YTcnLmEeIThMA0eCWoTjz8Z4TC" +
                        "cLFjjGhf//R7P61/Vk9VaM3EMZ9LNgY4+2ysEv9H3e2qzc79FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY9rhs" +
                        "LXA7PsmS327LGu9ldn/AFu39L/O9qub+tX1VZ1RjszDa1ue1sPYYDb2gR6dk+1tzW/zVv8A1q39H/MpT" +
                        "e+tHTHdT6Jk49bd17QLaByd9Z3hrf8AjG7qv+uLE/xedXZbi2dJsd+kpJuxwe9bzNjR/wAVc7/wZR+qn" +
                        "1oex7ekdVc4ODvSx7rJDg4HZ9kyd3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf1X6ul2RU+x7Lm4jpfTfrXkNb" +
                        "6Z37LdzvU/0f/Eq5y0oZMcuXmeHiPHjkf0ZtTmYzx5I54Di4RwZIj9KH/oLc+t31rNzn9F6TNjrD6ORa" +
                        "wbi4u9hxcdo+m9/0LH/APW6/f8Azep9UPquej1Oy8szn5DQ1zAZbUyd3ogj6dm7+ds/7a/0lsPqn9Umd" +
                        "JY3NzWtf1BzYa0QW0tI/m6/3rXf4W3/AK1V+j/numQz5oRh7GD5P059csv+9ThwylP383z/AKEOmKP/A" +
                        "Hzyn+Mj/kGr/wAMt/8APdyzx/4tOjf+FKv/AD1kLpfrLhdOzsGrG6iLfRsyKmMfToW2PPo1Ocf9G51np" +
                        "fR/wiouZ9Xj1M9UYLTk9IfX08VMMtLn7aKNrHe6za7KdTv3/mWf6NPw5QMIjUiayx0Gl5eGMFmXETmMr" +
                        "G+OXj+r9UnS+sdbLOgdRbY0OAxrXAHxa02Md/Ze3cuAz22u+pXTH8sZk3s+BcbXMH4PXpNzcTPoycMvb" +
                        "Yx7XU5DWOG5u8bXNdt/m37XKhi9L6JgdKf0iyxl2I0Ofa3Iewna5xJfZ9Da1tv0H/vpnL5xiiAQTIZBP" +
                        "h/q8MoFfzGH3JEggAwML/rcXE4n12vx+q9AqzenXNyace5r7thna17X17rWfTr2vez2Pas/pnScTqGIy" +
                        "9v1jtpdtAsosftdWQI9Pa69vtb+Y76C6fpv1f6D0jJu9A+/qDdgotsDwWDc411Vv91jPd7t/qrLZ9UPq" +
                        "v1Kyy2oXYm263HFLXtDS+lzmWGllnrez2bv6n+DU2PPjjAwjKcYRPFHJwRlpP8ARlGX/SYsmGcp8ZEZS" +
                        "kOGUOOUfl/SjKKbof1Trxep19XZ1Q55Zva4wHbiW+l7rvUs+gsf6lvY3pHXKS4C30i70zztDLGF3+f7V" +
                        "1n1e6R0vpWLbX02w3V2WF1jy8P9wAr2/ow1jdm1Yoq6CepV9Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67H13e" +
                        "i79Jucxn+j/AEv6RNjmM/djIynpDhlwxh/NH3OGUfT/AFkywiAxSiBD5+KNymP1w4OLi9TmdDv6NT9TL" +
                        "f2xW63GszSxjawS/wBQsrcx1TgW7HMa17t2/wD9Jqbfq3jU1Oz/AKvdebTWQCfUs9OPzv091JZt/wCLu" +
                        "xV0ON0zoXTMb/m/Ywvxslj8ix+Q5paYfTTD3+zbbvtp9H02f4P/AEqo2/UH6tOyvT9e6u18uZji1hO0f" +
                        "uerXZfs/tp45iHFM8U4CcjP5Rkxzh/c/RWnl5cMBwwmYxEfm9vJCX99z8Tr3UOp/V/reJnObe/EoJbks" +
                        "AAcHb2w7YG1u/m/0T2s/SVp8e7oDfqb0ynrTXll1twpfUCX1uFt2+8Ob+bW13v/AJzf/obF0tHRug09P" +
                        "v6RjhjKr6ybw182Frhs9d7yXWdva/6CVHROiO6WOi7W5WNjH3Me7c9rnE2+o57Nr6rXeo53s9NRnmMWv" +
                        "DGcI+4MlQ9BEeDg4h+7614wZNLlGcvbOP1eocXHx1/ivLO+r32Co53Qev1V45M/pLRW3/rllRdRa7/jM" +
                        "Zbv1L67m9YwrvtoDrcZ4b6zRtDw4bvc0ez1Gfn7P5CpD6ifVdzftTcq00au3C2sshs7/wBL6e7azb7v0" +
                        "q6Xp2DgYGK2jp9basf6Tdhndu/wheS51m799zkuYzY5YzGzknek5QGOUK6GX6SeXw5I5AdMcK1hGZnGd" +
                        "9h+i//S9VSSSSU859afqs3qbHZuE0N6g1vuZoG3tA/m3z7W3N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/bMlo" +
                        "FlTXH062j6Ne1p9O25v59//AFun9H/O9AkkpSSSSSmn1jEszOm30VfzxbvokwPVrIux/d/x9dax6OgZw" +
                        "zMG6ws2ms3Z/BjKab76TW389n2nqWRb/wCg1K6RJWMXu+2eGuG5Xffh/l/hsGX2uMcV8VDbtxPPfVvo+" +
                        "Tg2VnKqsZbj4/2Y2bqDS/3Nfuq+z11ZVm5zPVa/N/Ss9a78+yyxNX9XpycO23FpdszM2/JcQ0ksudkOx" +
                        "i7T9J9PG9v+D/60uiSUkve457XR4uHi/dybf8//AA1kfa4I3fDYrir96Dx7+hda+wY2GKvdTTS2t7XVQ" +
                        "x9V773NtvsacrZXS3H+xNxfz/V9ZGf0DqxdnbdjhnjNqrc92uOLn2XU20bR/NZstZm/4f1PQ/wdXps6p" +
                        "JSH39f5v5pXX7ywezp8/wAsd/3XH6BgWYzr7rabcey1tTCyw4+39EHAek3p7Kq9rN/pepa31X1sq/0aD" +
                        "h9KzqmfV8WMAPTqnMyvcDtJo9D2/v8A6RbySgPucU/l21q6r2p/L/1NlHBwQviqxV1xX7sPm/w3K6j0r" +
                        "7b1FlttNd+OzEvqAsAcBZY6nb7HfvVss96yW9H605+A26oE4pwXG1rqoikMbl+va5js27K3euyv07Psv" +
                        "2d/+k9Su3q0k7F7vCK4ar08d9/0UZPb4jfFd68NPGdHw3W4OLkV4bK6sazNvtzpZusa4ZWP6DWt/TOc9" +
                        "9jHXer+h2Y1f857PSWH0XMzelY/2XFrwQOmCg2hzR9oNpx79n6Nr3+h6dFvqPyW7/Uy3/oLa/V9Xs0lM" +
                        "fd4jQjxcWms/wB7J+96f32KPt8Isy4eHXSP7sP3fV/3bzmL0N77Me27Hs2/bftGRVlGhwhuLbjV3V1YT" +
                        "W4388+ln+l/ReqtDpFGVhMbhHGbXjB2TY2xr27WB2Q9+LjtpH5rsa3f/wAF6fpLTSVfN7lHj4eHSq4uH" +
                        "9Ph4WfFwacPFeu/Df6PFb//2ThCSU0EIQAAAAAAVQAAAAEBAAAADwBBAGQAbwBiAGUAIABQAGgAbwB0A" +
                        "G8AcwBoAG8AcAAAABMAQQBkAG8AYgBlACAAUABoAG8AdABvAHMAaABvAHAAIABDAFMANQAAAAEAOEJJT" +
                        "QQGAAAAAAAHAAcAAAABAQD/4Q3QaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgY" +
                        "mVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuc" +
                        "zp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0N" +
                        "zc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPg0KCTxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0c" +
                        "DovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+DQoJCTxyZGY6RGVzY3JpcHRpb" +
                        "24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sb" +
                        "nM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0RXZ0PSJodHRwO" +
                        "i8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiIHhtbG5zOmRjPSJodHRwO" +
                        "i8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvY" +
                        "mUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV" +
                        "2luZG93cyIgeG1wOkNyZWF0ZURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcDpNZXRhZ" +
                        "GF0YURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDExLTAxL" +
                        "TE4VDA5OjUxOjA2LTA2OjAwIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjM0NEMwOUFCMUEyM0UwM" +
                        "TE4MjAxQjJBMDJFNDdDMTk4IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjMzNEMwOUFCMUEyM0UwM" +
                        "TE4MjAxQjJBMDJFNDdDMTk4IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MzM0QzA5Q" +
                        "UIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIGRjOmZvcm1hdD0iaW1hZ2UvanBlZyIgcGhvdG9zaG9wO" +
                        "kNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xIj4NCgkJC" +
                        "Tx4bXBNTTpIaXN0b3J5Pg0KCQkJCTxyZGY6U2VxPg0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY" +
                        "3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyR" +
                        "TQ3QzE5OCIgc3RFdnQ6d2hlbj0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgc3RFdnQ6c29mdHdhc" +
                        "mVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIi8+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6Y" +
                        "WN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDozNDRDMDlBQjFBMjNFMDExODIwM" +
                        "UIyQTAyRTQ3QzE5OCIgc3RFdnQ6d2hlbj0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgc3RFdnQ6c" +
                        "29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiBzdEV2dDpjaGFuZ2VkPSIvI" +
                        "i8+DQoJCQkJPC9yZGY6U2VxPg0KCQkJPC94bXBNTTpIaXN0b3J5Pg0KCQk8L3JkZjpEZXNjcmlwdGlvb" +
                        "j4NCgk8L3JkZjpSREY+DQo8L3g6eG1wbWV0YT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3hwY" +
                        "WNrZXQgZW5kPSd3Jz8+/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AA" +
                        "gAJAAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAEAAPbWAAEAAAAA0y1IUCAgAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAzZGVzY" +
                        "wAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwAAAAUYlhZW" +
                        "gAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAAA9QAAAAkbHVta" +
                        "QAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RSQwAABDwAAAgMYlRSQ" +
                        "wAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1QYWNrYXJkIENvbXBhbnkAA" +
                        "GRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzU" +
                        "QABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABim" +
                        "QAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNjAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY" +
                        "2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb" +
                        "2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvd" +
                        "XIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWa" +
                        "WV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZ" +
                        "yBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAA" +
                        "AATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAA" +
                        "QAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAG" +
                        "QAeACMAKAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkAr" +
                        "gCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIBW" +
                        "QFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4AkECS" +
                        "wJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oDZgNyA34Di" +
                        "gOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATTBOEE8AT+BQ0FH" +
                        "AUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowGnQavBsAG0QbjBvUHB" +
                        "wcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiqCL4I0gjnCPsJEAklCToJT" +
                        "wlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsLIgs5C1ELaQuAC5gLsAvIC+EL+" +
                        "QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3eDfgOEw4uDkkOZA5/DpsOtg7SDu4P";
                    resourceString += "CQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURExExEU8RbRGMEaoRyRHoEgcSJhJFEmQSh" +
                        "BKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWb" +
                        "BaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4ax" +
                        "RrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kfl" +
                        "B+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2" +
                        "iUJJTglaCWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1Kmgqm" +
                        "yrPKwIrNitpK50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2" +
                        "zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3n" +
                        "DfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4" +
                        "D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq" +
                        "0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPA" +
                        "E9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX4" +
                        "FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2CqYPxhT" +
                        "2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFqSGqfavdrT" +
                        "2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQUdHB0zHUodYV14" +
                        "XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+wn8jf4R/5YBHgKiBC" +
                        "oFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZif6KZIrKizCLlov8jGOMy" +
                        "o0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSVX5XJljSWn5cKl3WX4JhMmLiZJ" +
                        "JmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFHobaiJqKWowajdqPmpFakx6U4pammG" +
                        "qaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuLa6hrxavi7AAsHWw6rFgsdayS7LCszizr" +
                        "rQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsuu6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB4" +
                        "8JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQu" +
                        "tE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gN" +
                        "uC94UThzOJT4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwW" +
                        "PDl8XLx//KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///9sAQ" +
                        "wABAQEBAQEBAQEBAgEBAQICAQEBAQICAgICAgICAwIDAwMDAgMDBAQEBAQDBQUFBQUFBwcHBwcICAgIC" +
                        "AgICAgI/9sAQwEBAQECAgIEAwMEBwUEBQcICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC" +
                        "AgICAgICAgICAgICAgI/8AAEQgAgQFiAwERAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEB" +
                        "QYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJ" +
                        "DNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFh" +
                        "oeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8" +
                        "fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEA" +
                        "AECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4O" +
                        "TpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipq" +
                        "rKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/" +
                        "v4oAKACgAoAKACgBrukaPJI4jjjBeSRyAqqBkkk9AKAPxW8Zf8ABdD9lbwv8SbvwbpfhLxN4y8I6ZdPp" +
                        "V/8SfD8OnfY5SjlDPZ29xcxyzQZ5DtsJGSqkYzHOjRUmfsH4J8aeF/iP4Q8NePfBOsReIPCXi+yt/EPh" +
                        "3WrIny7i0uoxLG4DAMpweVYAqcggEEVZm0dRQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAGD4q0GHxV4Y8R+F7i5ezt/Elhea" +
                        "DPd2uPNiS8t3t2dN3G5Q+RnvQB/ET4z/wCCXH7b3hT4k3vw5svgZqvi/ZdGx0jxp4ZWKXQb2BpCsVwL6" +
                        "R0hgR1G4rOyMmcOFNY8rOpVEf2CfshfBXVP2dv2afg98GNd1OPV9d8DaSllr19ZktAb65nkvrhIWZULR" +
                        "RyzskbFQSoBIB4rVI55O7PpCmSFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQB/nr/APBRD9rHx" +
                        "n+1T+1H8T/Ft14vvdU+HfhzW77QPhBohuJRY2GjafcG0tpreAMUjkuFiE0rjksx5wBj/aDwV8OsLw9w/" +
                        "h6KpKNecFKq7auUldpvdqN+VLZJH+KXjd4j4riLiHEVnVcqEJuNJX0jCLsmlsnK3M3vdn9T/wDwQ4+Ln" +
                        "xT+L37Ef2z4qa9eeKLvwR4s1b4f+Dtf8QSzXF5Podpp2m3kKyTzszyiGa7mhQk/KiKg4Wv8+fpZcN5fl" +
                        "vFfLhIKCqUozko2SU3KadktFdRTfdtvqf6HfRI4lzHM+E+bFzc3TqyhCUrtuCjBq7ers5NLskl0P2Jr+" +
                        "ZT+nwoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAC" +
                        "gAoAKACgAoAKACgAoAgurq2sra4vb24S0s7RHuru7unWOKKKNS7O7OQFVQCSScAUAfLH7XXxs0/4Y/sb" +
                        "fHL44eGtYhuYdO8Fajr/gjXbKVWgnu9SsDBpcscinDLJNcRFSOoPFfe+FvDyzbiPBYRq8Z1Y83+FO8v/" +
                        "JUz4DxV4ieU8N47Fp2lTpS5f8TVo/8AkzR/nK1/uCf4Yn92/wAD9Vs/+CfH/BJDwj47fRobjWfh74AX4" +
                        "nXWjahvjS68SeJj/asdtcuuHx9t1FIGIOQowvAFf5F8WYeXGfiRVw/M1GrX9nddKdP3W10+GLkvPc/1/" +
                        "wCEsRDgrw1pYjkTnSoe0s+tSp7yT6/HNRflsfT37FX7avwm/be+E1p8Rfh1djTdf00Raf8AET4d6hKj6" +
                        "joGouhPlyYC+ZBJtYwThQsig8K6ui/A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003+geFPitlvFuWr" +
                        "E4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgK" +
                        "qgEkk4AoA/lI/4Kc/8ABTrUv2gNV1D9mv8AZv1d4fhK1wND8X+NNPk8mXxbcmQRfZoHJXbpwbgkkeeeT" +
                        "+7+/lKRvCFtWfpJ/wAFrtVh+Gf/AATV8QeBtLmMFlr+peD/AIa2wwdz29jexamFztbGV0wZ5GRxk5wf6" +
                        "c+iTlixHGlGbX8KFSX/AJLyf+3f1ufy79LvNHh+Cq0E7e1nTj/5Nz/+2/1sfxafDjwlL4++IfgPwLCzr" +
                        "N411nS/CUTQY3htSvorMFcgjOZOOK/1TzzMlg8FWxD2pwlL/wABTf6H+UOR5a8bjaOHW9ScY/8AgTS/U" +
                        "/tB/wCC7etaj4U/4J76l4e0DT7g6P4n8T+F/CGtDTY5XgtdOtpJtVjacoGCRefYQoGYgb2QZyQD/lz9E" +
                        "XCwxHGkalSS5oU6klfdydou3d2lJ6dE3sf6ofS/xdTDcFSp04vlnVpxdtlFXkr9leMVr1aW9j+RH9mH9" +
                        "p74s/sj/FnQ/i/8INcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD/Sbj7gHLuJMung8ZC" +
                        "8HqmvijLpKL6Nfc1o7ptH+aPh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1p8R" +
                        "fh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnH" +
                        "uuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpwUAFABQBynjjxz4P+GnhPX" +
                        "PHfj7xHaeEvB/hqH+0Nd8Ra5KsFtbRbhGCzN3ZmCqo5ZiAASQKASPI/gN+1f+zz+05Brk3wM+KFl49fw" +
                        "2yJrthbw3tje2yyMyJI9rqcFtN5bFSFkCbTjg0k7jcWj6HpiCgAoAKACgD4G8R/8FQv2EPB/wAVdc+Cv" +
                        "iz9oG08NfEbw1qk3gzX9J17RvEtpaWmo28xgkjl1GfTlslVXGDIZ9nfdiv2LA+APF+Jy6GOo4JzoTipx" +
                        "alTbcWrpqKnz7dOW/kfjWO+kFwfhcxnga2NUK8JOEk4VElJOzTm4cm/Xmt5n3rFLFPFFPBKs0EyrLDNE" +
                        "wZHRhkMpHBBHQ1+Pyi07Pc/Y4yTV1qmSVJQUAFABQAUAfFP/BRj4q+Mvgn+xJ+0T8Svh9qj6H4z0DQ1t" +
                        "dA1u2JWaym1K/t9KNxCw+7LEtyXjbswB7V+qeCPD2FzXivBYXEx5qUp3kujUU5Wfk7WfkflPjjxFisp4" +
                        "Tx2Kw0uWrGFovqnKSjdeavdeZ/IT/wSt+IXj7xZ/wAFHv2cLrxT441jxLc6rq2qS6pceINTvbyS5b/hH" +
                        "NQOZWuZHLngctmv9KPpCZNg8NwPjlSpQgoxjblilb347WWh/md9HfOsZieOsC61ac3Kcr80m7/u5b3ep" +
                        "/dxret6N4a0bVfEXiLVbbQtA0K2m1jW9b1iaO2tLO0tozNLNNLMVRI0RSzMxAAGTX+QZ/sOfPHwR/bL/" +
                        "Zj/AGjtf1vwr8Fvi9p3jjxJ4eja81PRLeK+s7nyEdY2mhTUYLczxKzKGki3KCRk8ikmmU4tH03TJCgAo" +
                        "AKACgD5d+M37an7Lf7PfizSPA3xi+MumeC/FutJHc2mhXEd7dzxQy52SXP9nwTi2jbadrzlFPY0m0Uot" +
                        "n0vp+oWGrWFlqulXsOp6XqcMeoabqWnyJNBcQTIJI5I5IyVdHUgqwJBByKZJboAKACgAoAKACgAoAKAI" +
                        "Lq6trK2uL29uEtLO0R7q7u7p1jiiijUuzuzkBVUAkknAFAH8n//AAVG/wCCo1z8cLnW/wBnv9nvW3tPg" +
                        "1aO2n+OfHOns0cviuWNsNBAwwV05SOT1nPJ/d4D5SkdFOnY/Jr9m7wB4n+J3x4+E3gvwj4an8W6xquva" +
                        "W50XT4vNL2sF5HPcPJnCrFHEjPI7EKqgkkAVKLk9D+kj/g4ennh/Yn+G8cUzxR3XxP0SC5SNiokQeFvE" +
                        "UoVgOo3IrYPcA9q/sT6FcE+Kq91thp/+nKR/GP02ptcKUEnviYf+m6p/LR+xNbQXn7Zn7I9pdQrcWt18" +
                        "TvAVtcwSgMjxv4qsVZWB6gg4Nf6CeKs3HhfMmnZrDVv/Tcj/PTwngpcU5Ymrp4mj/6cif6K/jDwf4W+I" +
                        "HhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5r/EzLMzxGCxEK9CbhUg04yTs01s0z/" +
                        "cDM8sw+Nw86FeCnSmmpRaumnumj+In/AIKh/wDBLzxT+xZ4puPiR8N7e68U/s0eKbry9H1iTfPdeGLqd" +
                        "/k07UX5JjJOLe4P3/uP+8wX/wBW/AHx+w/FOHWGxLUMfBarZVEvtR8/5o9N1pt/k19IL6PuI4UxDxWFT" +
                        "ngJvR7um39ifl/LLrs9d/gf9mH9p74s/sj/ABZ0P4v/AAg1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZ" +
                        "No7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH434f+IGZcNZlDG4KdprRp/DOPWMl1T" +
                        "+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui" +
                        "/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2H" +
                        "X5mfpwUAFAH5ff8Fd/A3jb4l/shT+A/h54cvfF3i7xP4p8O6fpPhzw/C89zdMJ5JiAifwqELsx4UAsSA" +
                        "M1M9i6b1PgD/gk5+wl+1z+zT+0xqnxC+Mnwuk8C+B9U8J6p4afUhr3h2+826ub6wuoYXt9K1C5m58gt8" +
                        "yYBXkg4qYxaZdSaaP6QK0MQoAKACgAoA/ztP+CiX/J9f7Wn/Y++I/8A04yV/td4Kf8AJI5b/wBeKf8A6" +
                        "Sj/ABE8bv8Akr8y/wCv9T/0pn9137E1zcXn7GX7I95eTvdXd18MfANzdXVy7PJJI/hWxZmZmJJYk5JPW" +
                        "v8AI7xVhGPFGZJKyWJrf+nJH+vnhRUlLhbLJSd28NR/9NxPp2vgj78KACgAoAKAPzi/4K4/8o6P2nv+w" +
                        "Vpf/qR6dX7h9G7/AJLfAf4pf+m5n4Z9JX/kh8w/wx/9OQP5If8Agkd/ykX/AGYf+wrqn/qOajX+j30kf" +
                        "+SIx/8Ahj/6cgf5sfRq/wCS4y//ABS/9NzP7FP+CleieIfEv7EHx58OeE9Lu9b8Sa/Z6Tomi6LoUUs95" +
                        "eT3XiGwgWCKOAF3aTdt2gc5xX+N8tj/AGchufiZ/wAE1f8Agnp+2d8Dv2wPg18X/iZ8H5vBvw40eLXz4" +
                        "j1mfXfDcskUWoeF9RsrdZbOz1GW5O64miBXyiVOCwABIiMXc1nNNH9TVamAUAFABQAUAfyP/tvfsNfta" +
                        "/tNftt/tLeMvg78H7/xj4XtdW03TF8SX99pWk2cz2/h7T4jHbza7d2azeXgKwiLbcYOMYrKUW2dEZJI/" +
                        "o//AGKvh/45+FP7KfwL+HHxK0xtF8c+DNBt9B8RaRLdW16baWB3VYvOs5Z4nCptA2OQBwOlaR2MZPU+o" +
                        "aZIUAFABQAUAFABQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/k//wCCo3/BUa5+O" +
                        "Fzrf7Pf7PetvafBq0dtP8c+OdPZo5fFcsbYaCBhgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz40ePPDfw" +
                        "z+GfhufxX408VzjT9H0fTwMscbnkkdsLHFGoLySOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiu" +
                        "CNfiD8QVjOFGRJ/Z+n+YA0dpGwGTgNKwDuBhETaMbHNOdz49/4OC9Dm1b9hrwxfxbtnhj4h6BrlzsUEb" +
                        "JNG1nTRuJIwN12OfXAr+tvoZ4tU+LakX9uhNf8Ak1OX/tp/If008I6nCNOS+xiIP/ySpH/24/ku/ZU8R" +
                        "xeD/wBqH9m7xbO6RQeFvH3g/wARzSXIZo1Sx8Q2lyS4QglQE5wc1/o14h4F4nh/HUVvOhVj98JI/wA3f" +
                        "DrHLC8QYCs9oV6UvunFn+k5X+GJ/u2c34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoUeO" +
                        "RHBBBB/DqOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gqH/wAEvPFP7" +
                        "Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf/VvwB8fsPxTh1hsS1DHwW" +
                        "q2VRL7UfP8Amj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf2nviz+yP8WdD+L/wg1" +
                        "w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7" +
                        "ptH434f+IGZcNZlDG4KdprRp/DOPWMl1T+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ABE+H" +
                        "eoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurov+QPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/7E+FPi" +
                        "tlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFAH57f8FQf2nPH/AOyV+yB43+K/wtW2i8fS3ul+D" +
                        "/DmrarClzDp0up3PlvdeRKGSV441by1cFN5BYMoKt+0eAPAWD4j4lpYTF39jaUpJOzlyr4brVJu12tbX" +
                        "s09V+KfSB4/xvDfDNbGYS3trxjFtXUeZ/FZ6NpXsnpe101o/wAa/wDgjd+3l+1v+0j+1xqPw8+N3xovv" +
                        "H3g2HwfrPiKLQtQstIt4xe217p8UUu6xtIHyqzOMbsc9K/p36TvhBw3kXDccTgcKqVV1YxunJ6NSutZN" +
                        "dEfy79F3xi4lz3iWWGx+KlVpKjOVmorVOKT0in1Z4B/wUh/4KQ/ttfBb9tr4+fDD4YfHzUPCXgPwlqGn" +
                        "2fh3w7Z6foc0drHNodldOqvdWUshzJKzfMx619l4HeB3Cma8KYPFYrBxqVqkZOUnKavacl0klsl0PjPH" +
                        "Tx04syrizGYTCYyVOjTlFRiowdrwi+sW92+p8Qf8Pcf+Ci//Rz2q/8Agr8Of/K6v1f/AIlu4I/6AI/+B" +
                        "VP/AJM/Jf8AiZXjj/oYS/8AAaf/AMgegfD/AP4LW/8ABQ/wNq0N/qHxhtPiNpyP50/hv4geH9FmtJjwM" +
                        "NLplvY3Sjjok6/nXj5z9FfgrF03GOGdKX80JzTXyk5R++LPZyX6VvG+DqKUsUq0f5Zwg0/nFRl90kfux" +
                        "+zL/wAFVPAv/BQTwrdfAS88caj+xn+1FrcYXwL4n8Oy2GoaZqOoxoQgsm1aB45C7ffsZ0DspxFMzjcv8" +
                        "jcefR6xfBmIWYRpRzDL4/HGScZRj15uV3Vuk4uyesopaP8Ar/gH6ROD40w7y6VaWX5hJe5KLjKMpdOXm" +
                        "VnfrTkrtaRk3qvxu/aj/bV/4KzfsjfGPxJ8GPit+0ZqdtrWjEXmj61ZaV4eNhrOlyuy29/Zu+mgtDKEP" +
                        "UBlYMjAMrAf074f+FfhzxJllPG4TAxcJaNOU7xkt4y9/dfc1ZrRo/l3xC8VvEjhrNKmBxmOkpx1TUYWl" +
                        "F7Sj7mz+9O6eqZ+RHjzx14s+J3jPxP8Q/Hesv4h8ZeM7248R+J9duUhjku726kMssrLAkaAsxJwqge1f" +
                        "0llGUYbAYWnhsPHkpU0oxWuiWy1uz+aM4zfE5hiqmJxEuerUk5Semrerell9x9m+Dv+Cof7enw/8IeFf" +
                        "Afg/wDaK1LRPCPgnTbHwj4W0WDTdAkSz07TbVLO2gVprB3YRxRqoLMScckmvy/M/ADg/G4mpiK2BjKpU" +
                        "k5SfNPWUndvSVtW76H6llf0guMcFhqeHoY6UaVOKjFcsNIxVktY30Stqf1uf8Ejv2qviz+1v+yUfiF8b" +
                        "DHd+M/CfiPU/h3N4shtY7Ia3a2NjY3yXzxQJHCHzeNC5iUIWjJwDkV/nD9JDw8y7hviP6tgbqlOnGfLe" +
                        "/I25Llu7u3u3V9bP0P9J/o1eIuZcS8N/WcfZ1adSUOa1udJRfNZWV/ecXZWvHvc/Pb9vP8A4Lwaf8PPE" +
                        "OufCj9jvSNP8aa3o7yaXr/xp8Tq9zo8NwqlHTSrSJ0+0tGx/wCPiVhFuUhY5UIev2jwg+iHPG0YYvOpS" +
                        "pwlrGlHSTX9+WvLf+Ve9Z6yi9D8U8YvpgwwNeeDyWMak46Sqy1in/cjpzW/mfu3WkZLU/CXxV/wU/8A2" +
                        "/vGOpy6tqv7VHiqxuZSzmDwrdQ6HajdjhbfRorWIAY4+X+tf1zl3gHwbhafJDL6TX95Ob++Tb/E/kDMf" +
                        "pAcZ4qpzzzGqn/dagvugor8D374Df8ABa/9uj4OatYnxV49h+OfhGJ0F94X+KFrBLO8X3X8rUrNIbtJC" +
                        "PutI8iggEoeQfjuMPorcJZnTfsqLw1TpKm3b5wd429En5o+04O+ldxfldRe2rLE0usaiV/lNWkn6tryZ" +
                        "/WN+w7+3v8ABn9urwBc+Jvh9K/hzxr4cEUPj/4X65NG+paTLKPlkVkCi4tZCCI51UA4IZUYFR/nT4seD" +
                        "2acI4xUsT79KfwVEvdl5eUl1i/k2tT/AEd8JPGTK+L8E6uG9yrC3PTb96L7/wB6L6SS9UnocH/wVx/5R" +
                        "0ftPf8AYK0v/wBSPTq9j6N3/Jb4D/FL/wBNzPH+kr/yQ+Yf4Y/+nIH8kP8AwSO/5SL/ALMP/YV1T/1HN" +
                        "Rr/AEe+kj/yRGP/AMMf/TkD/Nj6NX/JcZf/AIpf+m5n9pv7cnx08Sfs1fsm/G/43eDrG31DxX4F0lbnw" +
                        "5Bqys9st7e3sGmwyyopBdYmuBIUyN23GRnNf5a+E3CVDPeI8Jgazap1Ze9beyTk0u17Wv0vc/1U8XOL6" +
                        "+Q8N4vH0UnUpQ92+121FN97N3t1tY/m2/4Jgf8ABRr9tL4/ft5fBL4Y/Fv46Xvi/wAAeMH8UTeIfC82m" +
                        "6Ha285s/CGranAM2NlC6COeBHAVh90DpxX9y+Pvghwtk3CGLxWDwip1qfs+WXNNtXqwi95NO6bWvc/hP" +
                        "6P3jlxVnPGOEwmMxjqUantOaPLBJ2pTktopqzSenY/o+/bM/bP+EX7Efwpk+JfxRuZL++1KRtJ8DeBdG" +
                        "aP+09d1BVDmKASEKkcakNNM3youOrMit/D3hf4XZlxXmP1XCKyWs5v4YR7vu3sktW/JNr+6PFLxTyzhP" +
                        "LvrWLbbbtCC+Kcuy7Jbyb0S7tpP+Sn49f8ABcL9uH4u6nep4G8VWXwF8IyOwsvD/wAO7O3mvRFyF8/Ut" +
                        "SjmnaQA8tD5Kn+6K/0d4P8Aon8J5bTXt6bxVXrKbaV/KEWlbyfM/M/za4x+lrxbmdR/V6iwtLpGCTdvO" +
                        "ck3fzXKvI+OIf8AgoN+3NBqR1VP2t/iE10UEPlTeK9YktsKwb/j3knMOeOTsyRxnBNfpsvBnhJ0+T+za" +
                        "Fv+vcb/AH2v+J+Xx8auLlU5/wC0sRf/AK+St917fgfen7O3/Bd79sT4Vanp1n8Xp9O/aE8ExukV/Z+JL" +
                        "W20rW47cdfs2o6VDGpfvuuIZs9OOo/IONvoicM5jTlLBqWFq9HFuUL+cZN6f4ZRP2Lgj6YPFGXVIxxrj" +
                        "i6XVSSjO3lOKWv+KMj+sj9k79rT4Q/tl/Cez+LXwf1KeXTBO2ieI/DutxLBqejanHEkz2l1GjOu4LIrK" +
                        "6MyMpBDHkD/ADo8RfDnMuF8xeDxkVzWvGS1jKOylF/JqzSae6P9H/DjxIyzinLVjMFJ8t7Si9JRlu4yW" +
                        "q2ad02mtmfzZ/8ABUn/AIKk/thfDL9sL4kfBj4MfEg/CvwJ8Kzp+hWlpoWn6Xc3Go3FzpdtqM11dTajb" +
                        "XDbt1wUREKqFUcFiSf7m+j99H7hnH8M0MbjaHt61fmbblJKKUnFJKLXa7bu232sj+EvpC/SF4ny/ievg" +
                        "cDX9hRocqSUYtybipNtyT72SVkku92f0R/sE/Evxf8AFT9jH9n/AOKHxM8RN4h8YeKvDseueKvEt+tvA" +
                        "1xN50oaVxAkUa/KozhQOK/inxgyLDZfxRjMLhYclKFS0Yq7srLTW7P7c8HM+xWY8K4LF4qfPVnTvKTsr" +
                        "u710sj8QP24f+C+GpaD4q1z4bfsY6PpuqWGiSyaZqHxv8WQtewXk0ZKu2kWe5EaJWHy3E+4SclY9u12/" +
                        "q/wn+h7TrYeGKzuUouSuqUXZpf35b37xjZrrK90v5M8W/pkVKOInhcjjGUYuzrSV03/AHI7W7SldPpG1" +
                        "m/xJ8Y/8FKv29vHN1dXmtftX+M7KW82+cng7VpPDsQ2sGGyLw+LJI+RzsUZHB4r+q8s8C+D8JFRhl1Fp" +
                        "fzR5/xnzN/M/k7NPHjjLGScqmZVk3/LLkXyUOVL5HZ/DT/grB/wUB+F+oQXmmftIaz4rtUZXutI+JYtv" +
                        "EdvcIoA2M2rRzTIDt5MUiN15yTXl579HXg3MIOMsDCD707wa/8AAWk/mmvI9XIfpHcaZfNSjjp1F2qWq" +
                        "J/+BJtfJp+Z/Rb/AME9P+C1Xgv9qPxT4e+Cnx18L2/ws+NPiORdM8J6z4daaTw3r92VJECC6eSayuHIx" +
                        "HFI8iueBIGKof4m8afosYrh/Dzx2AqOthYK8lK3tILvpZSiurSTX8tk2f3B4J/SswvEOIhgcwpqhi5u0" +
                        "XG/s5vtrdwk+ibkn/NdpH7sV/Ix/XwUAQXV1bWVtcXt7cJaWdoj3V3d3TrHFFFGpdndnICqoBJJOAKAP" +
                        "5P/APgqN/wVGufjhc63+z3+z3rb2nwatHbT/HPjnT2aOXxXLG2GggYYK6cpHJ6znk/u8B8pSOinTsfjZ" +
                        "8Lvhd48+NHjzw38M/hn4bn8V+NPFc40/R9H08DLHG55JHbCxxRqC8kjkKigsxAFQkaN2P7Uf2Af2AfAf" +
                        "7FPgPe/keK/jV4rgjX4g/EFYzhRkSf2fp/mANHaRsBk4DSsA7gYRE2jGxzTnc/QmqIPzd/4K5fDmb4l/" +
                        "wDBPT9o3TLODztR8MabZfEazYAkxp4d1W21a6bA/wCnWCYe2c1+5fRuztYDjTAyk/dnJwf/AG/FxX/kz" +
                        "R+FfSVyN4/gnHRiryhFTX/bklJ/+Spn8CFtcz2dxb3drM1vdWrpc208RKukiMGVlI6EEZFf7EzgpRaau" +
                        "mf4005uMk07NH+l78DPiVY/GT4L/Cf4s6dIklp8SPDujeNU8nojalp8V06YwMFGcqQRkEYNf4S8W5FPK" +
                        "80xODlvRqSh/wCAyav89z/enhHPoZplWGxkdq1OM/8AwKKdvlseqV88fRHN+MPB/hb4geFtf8E+NtAtf" +
                        "FPhHxTazaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmu7LMzxGCxEK9CbhUg04yTs01s0zhzPLMPjcPOhXgp0" +
                        "ppqUWrpp7po/iJ/4Kh/8EvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4" +
                        "/7zBf8A1b8AfH7D8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz" +
                        "13+B/2Yf2nviz+yP8WdD+L/AMINcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD9h4+4By" +
                        "7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR+N+H/AIgZlw1mUMbgp2mtGn8M49YyXVP707NNNJn99n7G/wC1f" +
                        "4E/bO+A/hn43eBLaXSE1CSbQfFnha/dZLjRtaswhubR5EAWQASJJHIAN0boxCklR/jt4neHeM4Xzepgc" +
                        "Q1K1nGS2lB7St02aa6NNXa1f+ynhd4jYPirJ6ePw6cb3jKL3jNbxv13TT6pp2T0X1NX58foZ+M//BeL/" +
                        "lH94h/7Gnwz/wClMlf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/YheIP/AE46X" +
                        "X9YfTJ/5JGP/X+H/pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy" +
                        "/8ATkz8++kr/wAlxmH+KP8A6bgf0P8A/BNP9gP9jb4t/sOfs/8AxF+JP7Pfh/xh438T6dqN1r/iTV4Z2" +
                        "ubqSLXb62RnKSqMhI1UcdBX8V+O3jFxPlvFmNw2FxtSnShKPLFNWV4Rfbuz+2vAbwa4XzLhHBYnFYKnU" +
                        "rTjLmk07u05Lv2SPXPj7/wRG/Yf+Lvh2/g8B+CpvgR41Mbf2T4s8AXd5LbLMANguNOv55beSMEfMIxG5" +
                        "z98cV83wd9K3izLa6eIqrE0usZpXt5TSUk/XmXkfS8ZfRN4SzOg1h6TwtXpKDdr+cJNxa9OV+Z/H3+07" +
                        "+zd8V/2Mfjprfwk+IQOneKfC0kGveGPFOhvLHb6lYSSF7PUrGX5W2MYzgjDJIrIcMhA/wBLuAuOcu4oy" +
                        "iGMw2tOd1KLteL+1CS+fo001o0f5kcf8CZlwrm88HidKkLOMle0o/ZnF9tPVNNPVM/rU/YQ134C/wDBV" +
                        "X9l3wH4q/ai+GGi/Fb4x/Aqa5+GfizUfEcBNw0rxwTx3qmJ0bbewLG0n8PnLJtAHFf5yeLuDzjw84grU" +
                        "sqxE6GFxKVSKi9Oqcf+3HdLryuNz/STwfxmTeIvD1Gtm2HhXxWGbpyclr0alp/OrN9OZSsfye/tv+DfC" +
                        "/w7/a//AGkvAvgnRYfDfhHwl4x13QfDeg6cCsFnZ2188cUUYYkhVUYGTX+inhRmmIxvDWBxFebnVnRg5" +
                        "N7ttK7Z/nF4tZXh8DxNj8PQgoUqdacYxWySbskf18/sj/8ABOX9h7xx+yl+zH418W/s1+G9d8VeL/h74" +
                        "L8UeJtcvobgz3moah4bs7u4nkKzAF5JJGZsDqa/zV8SPG7izCcRY+hRx1SNOnXqxik1ZRjUkklp0Ssf6" +
                        "Z+Gvgbwli+HMvr1sBTlUqYelKTad3KVOLbeu7bueCf8Fnvjvo37HP7Ingj9mL4BaRZfDI/Gtr/wrBpXg" +
                        "qCLT4tM8KWCxy6osMdqFCNeSXccTsRl1eY5LEkfY/Rd4Qq8T8S1c0zCTrfV7SvNuTlUd+S7e/KotpdGo" +
                        "9D436U/GFLhfhmjlWXRjR+s80bQSio042c7Jbczkk31Tl11P51f+CeH7CPi79vH40SeCLHU5PCnw48HQ" +
                        "xeIPir47hhEz2NlK7JBb26OQjXV26MsQY4VVeQhghVv7Y8avF3DcIZX7eUeevUfLThe131b68sd3bdtL" +
                        "S91/EHgl4P4njHNfYRlyUKa5qk7XsuiXTmk9FfZJvW1n/Y/8Lv+CXH7BXwo8OQeHtL/AGa/Dfi9lh+yX" +
                        "uv/ABRsYfE2o3TldrytLrCziN2PP7lY1U/dVRxX+Y/EH0gOMMxrupPHVKet1Gm3TivK0bXX+Jtvq2f6h" +
                        "cPfR74Oy2gqUMBTqaWcqiVST87yvZ/4UkuiR+fP7e//AAQ/+DHxB8DeI/iD+yT4aT4X/F3RIZdYg+Hum" +
                        "zynw/4hESmR7aOG4ZxZ3LgYhaIrEWwroN3mL+zeD30r80wWLhh84qe2w0nbna9+Hm2viivtXvK2qbtZ/" +
                        "i3jH9EvKsbhKmJyen7HExV+RP3J26JP4ZP7NrRvo0r8y/mI/ZK/aP8AGv7H37RHgP4zeG2uYJ/CV8th4" +
                        "18NoxhOqaJLKsWo6dMkmBmSMHZvHySqj43IMf3v4j8D4XibJK2Cq2anG8Jb8s18Ml6Pe28W1sz+APDbj" +
                        "rF8MZ3Rx1K6dOVpx25oP44v1W19pJPdH9o//BVDX9J8V/8ABMj9oHxRoF4uo6F4k8PaDr+i6hECFntLz" +
                        "XdMuIZBuAOGRwRmv8t/o+YOph+PcFSqK04VJxa7NQmmvvP9UvpEYylieAMbVpu8J04ST7pzg0/uP5Of+" +
                        "CR3/KRf9mH/ALCuqf8AqOajX+iv0kf+SIx/+GP/AKcgf5xfRq/5LjL/APFL/wBNzP63v+CuP/KOj9p7/" +
                        "sFaX/6kenV/nD9G7/kt8B/il/6bmf6T/SV/5IfMP8Mf/TkD+Ur/AIIu/wDKS39mz/ucf/UB1yv9DvpR/" +
                        "wDJCY7/ALhf+nqZ/nR9Ff8A5L3Af9xf/TNQ+o/+DhfX/E15+2L8PPDmpTyjwzoXgLTtQ8MWLhhAJL/Wd" +
                        "TF1OmeC8jW6IxHaNR2r4D6F2DoR4Yr1Ype0lXkpPrpGHKvldterP0L6bGNry4ooUpN+zjQi4rp7058z9" +
                        "XZJ+iPMP+CVnhD/AIJf6/c6vdftqeLxF8UFvlTwf4V+JUl1pHgtbJFQrM17ZyrFLMXLB0vJI4wuMI/LD" +
                        "3/pCZlx/RjFZHS/2fl96VO0qt+3K1dK2zgm79VsfP8A0d8s8P60pPPav+0c3uxqXjSt35k7N33U2o26P" +
                        "c/qw0v9iX9gHxp4TtpPD37MHws8QeF9VhVbDxB4Y8LeGpfPiB4eLULGDzCePvrLk+tf55YjxV4ywuJaq" +
                        "ZhiYVIvWMqlTR+cW7fJo/0Vw/hPwZi8MnTy/CzpyWko06eq8pJX+aZ+UP7YX/BAT4aePAvif9j3xBb/A" +
                        "Ah8TSzFtT8A+PrzUrvwzPG5LF7e5SK9vLV1JPykSoRgKI8c/wBE+Gf0xsfg/wB1nMHXp20nBRVReqvGM" +
                        "l5+6+7Z/OXid9DPAYz97ks1h6l9YTcnTfo7SlF+XvLskffv/BL39gzWf2DPgt4m8I+MvGNp4y+IPxB1Z" +
                        "fFXiu48MLONJsxBapaQW1q93HDLKFAZmleNMlsbBty3454/eL9LjDNKdajSdOjSjyx5rczu7tuzaXRJJ" +
                        "vbfXT9m+j74O1eDsqqUa9VVK9WXNLlvyqyslG6TfVttK97W01/kz/4K4/8AKRf9p7/sK6X/AOo5p1f6L" +
                        "/Ru/wCSIwH+GX/pyZ/m/wDSV/5LjMP8Uf8A03A/oR/t7xN4a/4N/wCHVPCNzNZ6wfhlFpb3FiCZVsb/A" +
                        "FdbC+xt5ANrNKGbsMntX8Y/U6FfxkcKyTj9Zvr3Ubx/8mSP7U+uYih4MKdFtS+rW07SlaX/AJK2fyQfB" +
                        "ex+E2pfFXwLY/HbXtW8M/CG4v4l8fa54HtIr3VYLAAs32eKZlXLMArPhiikuEkKhG/0f4prZlTy6tLAQ" +
                        "jPEqPuKbtFvza++2l3o2k7r/NjhWjltTMaMcwnKGGcvfcFeSj5J/dfWy1Sk1Z/2w/sl/s7/APBIDx74W" +
                        "tLH9nbwD8MvjGIoBLdxeLrez8T+IgoC7pbq28VLPewFiM4aJFHIUAcV/lb4jca+JeDxDlmVbE4fXTlbp" +
                        "w9E6doP72+7P9XPDbgjwyxmHUcto4bEaa8yVSfrJVLzX3Jdkdn8ef8AgkP+wn8c9Ev7SL4MWHwh8STIy" +
                        "6X4v+DEUegS2khHDfYrVRYyrnGVkgPHQqea8vhD6SfF2U1VJ4qVeHWNX30/+3n76+UvW56nGP0Z+D83p" +
                        "SisLHD1OkqXuNf9ur3H84+lj8uv2Xf+CC/xV+Df7Vfw8+Kvj74zeHdb+Fnwk8Q2HxE8NDwomqLr+q3Oi" +
                        "3seoWMdza3dstvao0sSmbZczHaCq/e3L+/+IH0v8uzTh6vhMPhakcRXpuEubl5IqacZNNPmlo3a8Y66v" +
                        "az/AJ98PvodZjlfEVDF4jFU5YehUU48vNzycGpRTTXLFXSvaUtNFvdf09V/A5/f4UAeKftFfBLR/wBoz" +
                        "4LeP/gvrviDUfC2m+O7I6XLr3hid4Lq3dZFmQkKyiWIsgEsLHbIhKnGchNDi7M/hb/ag/Zf+KX7JnxS1" +
                        "T4XfFHS/JuYd174b8SWSudO1rTi5WO7tJGAypxhlPzI2VYAisWrHVGVz2//AIJ4ftpt+xT8aJvF2qeFo" +
                        "PFPgTxrbw+F/H8cNtA2sWtis/mifT7iQBleNvmeHcEmAAbDKjo4uwpxuj+2z4d/ETwV8WPBXhz4i/Drx" +
                        "HbeK/Bniu2TVNC13S33RTRNkEEEBkdGBV0YBkYFWAYEVscrR2lAHN+MfCmi+PPCHirwP4ktvtnh3xnpt" +
                        "94U1+z+X97ZajavZzp8wYfNHIRyDXdlmY1cHiadek7TpyUk+zi7r8UcOaZdSxmGqYeqrwqRcZLupKz/A" +
                        "AZ/mnfFr4beIPg58UfiH8KPFURi8RfDnWdS8F6vuRoxJNp129qZEDZ+STZvQ5IKkEEg5r/dbhzPaOZ5f" +
                        "QxdL4K0IzXpJXt6rZ+Z/g1xJkVbK8wr4OsvfozlB+sW1f0e68j+wT/ggh+0Xa/E/wDZN1L4JapqAl8Xf" +
                        "s+apNp1vaynMj+Htcml1Oylyxy2yc3MOAMKqIO4Ff5o/TC4JlgOI446Ef3eKinf+/BKMl81yvzbZ/px9" +
                        "DjjiOYcNywE5fvcJJq39ybcov5S5l5JI/dGv5JP67CgD+VD/gsP/wAFXtL8X2Pi79kH9m7VbfV/DF1v0" +
                        "D40/FC08u4gvtj4k0rTHO5TEGXE9wv3iNkZ25Zv9DfozfR2qYadPOczi41FrSpvRrtOfn/LHpu9bJf51" +
                        "fSd+kbTxUKuS5ZJSpv3atRap94Q8v5pddlpdv8Am68H+D/FPxA8U6B4J8E6BdeKfF3im6h0Tw94e0SF5" +
                        "7q8up3CJHGiAkkk/h1PFf3HmeZ4fBYedevNQpwTcpN2SS3bZ/CuWZZiMbiIUKEHOrNpRildtvZJH98X/" +
                        "BL79jvX/wBif9lrTPhj4z1OHUPH/izVrv4n+PYNMfzbSx1LUbO0sRaQyDiQQwWUSu4+Vn3Fcrgn/Hrx9" +
                        "8TaPFXEEsVQi1RhFU4X0bjFyfM10u5NpbpWvqf7I/R+8MK3CfD0cLXknWqTdSdtUpSUVyp9bKKTezd7a" +
                        "H6JV+KH7cfjP/wXi/5R/eIf+xp8M/8ApTJX9P8A0Q/+Syh/16qfkj+W/phf8kXP/r7T/Nn4f/8ABv8Af" +
                        "8n16t/2IXiD/wBOOl1/WH0yf+SRj/1/h/6TM/kr6GH/ACV8v+vE/wD0qB8uf8Fcf+Ui/wC09/2FdL/9R" +
                        "zTq+/8Ao3f8kRgP8Mv/AE5M/PvpK/8AJcZh/ij/AOm4H9b3/BI7/lHR+zD/ANgrVP8A1I9Rr/OH6SP/A" +
                        "CW+P/xR/wDTcD/Sf6NX/JD5f/hl/wCnJn6O1+Hn7mfzVf8ABxv8OtEuPhx+zl8WktY4vEek63qfw6nvU" +
                        "UCaey1Cw/tONHIHzLFJZOUBPymRsfeNf3V9CHO6scdjsHd8koRnbonF8rfzUlfvZdj+DvpyZHSlgcDjL" +
                        "L2kZyp36tSXMl8nF27Xfc8U/wCDcHxFqcHxE/ag8JLMTo2p6L4d8RT27EkC5sb67tkZR0GUu2B9cD0r6" +
                        "n6cOCpvBZfWt7ynOPyai/8A21Hyn0GMdUWOzCjf3ZQhL5pyS/CTPxl/4KBahBqf7cn7XFzbBhHH8RPFu" +
                        "nt5oAPmWmtXFo/QnjdGce1f1D4NUXT4Ty1P/oHpv74J/qfy140VlU4uzNr/AKCKq+6bT/I/u3/Yd/5Mq" +
                        "/Y//wCyXfD/AP8AUTsK/wAi/Fj/AJKrM/8AsJrf+nJH+v8A4Sf8kpln/YNR/wDTcT+ab/g4we8P7SXwH" +
                        "jcyf2evgeR7UNu8rzm168Eu3tu2hN2O2Pav7r+hIo/2FjH9r234ckbfr+J/Bv04XL+3sGvs+x/Hnlf9P" +
                        "wPw6+G//C8fI1b/AIVD/wAJX9m3w/27/wAK3/tfZvw/lef/AGXxnG7bu98d6/rHPP7JvH657K+tvacvz" +
                        "tzfjY/kjIv7XtL6l7W2l/Z83yvy/hc9M/4zV/6qj/5dleD/AMYr/wBQ3/lM9/8A4yv/AKif/Kgf8Zq/9" +
                        "VR/8uyj/jFf+ob/AMph/wAZX/1E/wDlQ80ufgv8c7y4nvLz4T+LLq7une5urq50LWHkkkdizMzNASWJO" +
                        "ST1r3ocU5TGKSxNJJf34/5ng1OFc3lJylhqrb/uS/yP67vj5Hrdv/wQSs7PxHbXFnrWnfC3wJpd9ZarE" +
                        "8FzCbW+0i2WOSORVZWRUCkMM8c81/mzwdKk/GBypNODxNZprVO6m7p+Z/pdxnGrHwcUaqamsNRTTVmrO" +
                        "mrNeR/Ot/wSO/5SL/sw/wDYV1T/ANRzUa/tj6SP/JEY/wDwx/8ATkD+Ifo1f8lxl/8Ail/6bmf1vf8AB" +
                        "XH/AJR0ftPf9grS/wD1I9Or/OH6N3/Jb4D/ABS/9NzP9J/pK/8AJD5h/hj/AOnIH8pX/BF3/lJb+zZ/3" +
                        "OP/AKgOuV/od9KP/khMd/3C/wDT1M/zo+iv/wAl7gP+4v8A6ZqH9ZH/AAUD/wCCd/wv/b18DaVp/iDUX" +
                        "8EfFDwUtw3w++JWmwLO9sLgAyWl5AWT7RaOyqxXcrIwyjDLh/8AOnwa8asw4PxcpU4+0w9S3PTbte20o" +
                        "v7MltezTWjTsrf6P+NHgjl/GODjGpL2eIp35KiV7X3jJac0Xva6aeqau0/5Kf2hP+CQ37c37Ps2o3k/w" +
                        "nm+K/hCxLyR+Mvg0z65E8SDcXeyiRb+IKvLF7cKOcMQCa/0c4L+kpwlnKjFYlUKr+zV9zX/ABfA/K0r+" +
                        "R/m1xr9Gfi7JXKTwzr0l9ul7+n+Fe+vO8beZ8UfDv4yfHb9nnxFeXHwy+I3iX4Q+I7eURaxbeGtQ1DSZ" +
                        "HkhOPLu4I3jEgB4KSqR6iv1TO+GMozqgliqFOvBrTmjGW/WL1t6pn5TkfFGcZJXbwteph5p68spR26SW" +
                        "l/Ro/YH9nb/AIL8/tUfDm707S/jtoWk/H3wmhSG+1FoIdA8RJGPl3R3Omxi1cqOSJLUs5Ay65Jr+aeNf" +
                        "oc8PY6Mp4CcsLU6K7nD5qT5l8pWXZ7H9N8EfTL4iwMowzCEcVT6uyhP5OK5X843fdbn9S/7J37XnwX/A" +
                        "GzfhjD8T/g1rUlxa28g0zxR4V1xI4NY0S+K7/s97BG8iqWX5kdGZHH3WOCB/n34i+GuacL494XGwSbV4" +
                        "yWsZrvF2XzTSa6rY/0L8N/EzKuKcvWLwU20naUXpKD7SV38mm0+j3P4o/8Agrj/AMpF/wBp7/sK6X/6j" +
                        "mnV/qh9G7/kiMB/hl/6cmf5S/SV/wCS4zD/ABR/9NwP67P+CcXhvQfGP/BNz9nPwl4p0mDXvDPifwU3h" +
                        "/xDoepxiW2vLK8e4t54ZUbhkkRyrD0Nf5t+OGOrYXjnHVqUnGpCtzRa3TVmmvNM/wBLPAzA0cVwJgaNa" +
                        "KlTnR5ZJ7NO6afk0fhT+2D/AMEBfiv4Y13W/F37IGr23xE8EXckl9Z/C3xXew2Gv6crtu+z293elLa7j" +
                        "Tna0skUmMAiRssf648M/pjZdiKMKOcxdKqtHUim4S83FXlFvslJddFofyF4nfQzzHD1p1slkq1F6qnJq" +
                        "M4+Sk7Rkl3bi+mr1Pwx+JnwQ+PH7PHiCCz+Kfw08R/CfXbOcf2beeI9PvdODzRksr2tyyqkuNpKvE5HG" +
                        "Qa/rXIeLMozqi5YSvTrwa1UZKWn95br0aP5Fz/hLOMkrqOLw9ShNPRyi46/3Xs/VNn138DP+Cs37eHwG" +
                        "awtdH+N978QfDljhf8AhFPjCv8AwkltJGvCx/aL1vtsaKBhViuUAHA4r814t+jnwhnF3PCKlN/ape4/W" +
                        "y9xv1iz9M4R+khxhk/KoYt1aa+zV/eL0u/fS9JI/os/YP8A+C23wr/ac8U+HfhB8aPCyfBf4ueJJE0rw" +
                        "3qdrdfaPDOtXrnCQRS3G2W0nlJ2xRS71dsKJS7Kh/ibxe+ipmGQYeeMwNT6xhoK8la1SC7tLSSW7as0t" +
                        "eWybP7g8HvpY5dn+IhgsdT+r4mbtF3vTm+iTesW9kndN6c12kfuZX8ln9chQAUAfMf7WH7J/wALf2v/A" +
                        "IW3/wANviTYeTcw+ZfeDPGdjGh1HQtRKbVuLdmxlTgCWInbIvBwQrKmrlRlY/iM/ag/Zf8Ail+yZ8UtU" +
                        "+F3xR0vybmHde+G/ElkrnTta04uVju7SRgMqcYZT8yNlWAIrFqx0xlc+mP+Cef/AAUM8a/sXeNRpGrm5" +
                        "8V/AfxXcpJ438ERvuls5WxGdR04SEKlwigb0yFmUBWIIR0cZWJnC5/aH8O/iJ4K+LHgrw58Rfh14jtvF" +
                        "fgzxXbJqmha7pb7opomyCCCAyOjAq6MAyMCrAMCK2OZo7SgD+Pf/gv9+yrcfD/45eF/2oPDWllfCHxrt" +
                        "4/D3ja5tk/dW3ijSbZYkZ9qgL9rs40K9Szwysetf6YfQ48Qo4zKamVVZfvcO+aHnTk7/wDksm79lKKP8" +
                        "xvpm+HcsFm9PNaUf3WJXLPyqRVv/JopW7uMmfnB/wAE4P2urj9jL9qTwX8Tr+aZvh5rYbwN8WNOtNzGX" +
                        "QdQkTzJlQfektZUjuEA5bZsyAxr9w8cPDaPFHD9XCxS9vH36bf88dl6SV4vte/Q/DPAzxLlwtxDSxUm/" +
                        "YS9yol/JLd27xdpLva3U/0GNK1XTNd0vTdb0XUIdW0bWbeHVdJ1XTZUmt7m2uIxNFLFJGSro6MGVgcEH" +
                        "Ir/ABlxGHqUakqc4uMotpp6NNaNNdGmf7TYfEU61ONSnJSjJJprVNPVNPqmtj+W7/grn/wVz/tT/hJ/2" +
                        "Vf2VfE//Er/AH2gfGD4waBN/wAfXWKbStKmiP8Aquq3Fwp+flEOzcz/AOgP0bvo3ez9nm2bU/e0dKk1t" +
                        "2nNd+sYvbd62S/z2+kt9Jb2ntMoyip7usatWL37wg+3SUlvstLt/wA1fg/wf4p+IHinQPBPgnQLrxT4u" +
                        "8U3UOieHvD2iQvPdXl1O4RI40QEkkn8Op4r+6czzPD4LDzr15qFOCblJuySW7bP4PyzLMRjcRChQg51Z" +
                        "tKMUrtt7JI/t2/4Jef8EvPC37Fnha3+JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgff8Au" +
                        "J+7yX/yk8fvH7EcU4h4bDNwwEHotnUa+1Ly/lj03eu3+sv0ffo+4fhTDrFYpKePmtXuqaf2Ief80uuy0" +
                        "3/X6v5qP6aCgD8Z/wDgvF/yj+8Q/wDY0+Gf/SmSv6f+iH/yWUP+vVT8kfy39ML/AJIuf/X2n+bPw/8A+" +
                        "Df7/k+vVv8AsQvEH/px0uv6w+mT/wAkjH/r/D/0mZ/JX0MP+Svl/wBeJ/8ApUD5c/4K4/8AKRf9p7/sK" +
                        "6X/AOo5p1ff/Ru/5IjAf4Zf+nJn599JX/kuMw/xR/8ATcD+t7/gkd/yjo/Zh/7BWqf+pHqNf5w/SR/5L" +
                        "fH/AOKP/puB/pP9Gr/kh8v/AMMv/Tkz9Ha/Dz9zP57f+Di3/k2D4H/9j6v/AKj2o1/Z/wBCX/kf4v8A6" +
                        "8f+3wP4q+nB/wAk/hP+v/8A7ZM+NP8Ag3H/AOS1/tH/APYraV/6djX6h9N7/kVYH/r7L/0k/LPoNf8AI" +
                        "2x3/XqP/pR+aX/BVr4c658Nf2/v2kbDWraSKPxVrjfEbQ7qVSqXNjr8KamjxkgBlRpXiJHRkYdQa/dfo" +
                        "8Z3Rx3BuBlB/BDka7OD5dfWyfo0z8G+kXkdbAcZ4+NRfHP2ifdTXNp6NteqaP6Nf+CXP/BUb9mjxj+z9" +
                        "8HPgJ8TfH9j8Jvi58LdD0z4Zxaf45lTT9M1e00a2j02zns7+bbbl3hjjDQyOsm/dtVl+av4i+kB9H/Ps" +
                        "LnOKzDC0ZV8NWnKpeHvSi5NykpRXvWTbs0mrWu09D+5Po+fSDyHFZLhcvxVaNDE0IRp2m+WMlFKMXGT9" +
                        "27SV02ne9k1qc1/wXs/Zj1H4zfs7+Bv2ivAlsdc1L4DSXd14jTSgJvtHhTW0gaa7Bi3F1tZbeKTI4Eby" +
                        "OTgV3/Q/wCPYZXndbLcQ+WOJty30tUhe0fLmTa85KK6nB9MbgCea5JRzLDrmlhW3K2t6c7Xl58rSflFy" +
                        "fQ/n3/4Jqft46t+wj8cJ/FN/p03iP4UfECG38N/Fbwxp5QXLW0Mxkt76134BuLQyOURiFdXdCVLB1/sv" +
                        "x18IafF+UqlGShiaTcqcntdrWL/ALsrK73TSetrP+LvAbxhqcH5u60oueGqpRqRW9k9JL+9G7stmm1pe" +
                        "6/tg+FP7a37J3xq8NWfir4d/tA+FtWsLuNbmXT7/WLPTtTtN/8ADdWOoPDcwNntJGue2RzX+VvEXhXxH" +
                        "lVd0sTgqsWuqi5RfpKKcX8mz/VzhzxX4bzXDqthsbSlFrZyUZL/ABRk1JfNI9Q/4Xj8FP8AosHhb/woN" +
                        "J/+P14H+qea/wDQNV/8Al/kfQf63ZT/ANBVL/wOP+Z6Hpeq6Xrmn2mraLqVvrGlX6efY6npc0dxbzITj" +
                        "dHJEWVhx1BrxcRh6lKbhOLjJbpqzXqme3h8TTrQU6clKL2ad0/Ro+DP+CqWhXviL/gnv+1Lp9gpee38O" +
                        "rrsgUFv3Ol6la6nMcD0jt2Oe1fr/wBHvGQocaZfKWzqW+couK/Fn479IjBzr8FZjGO6p3+UZRk/wTP43" +
                        "v8AgmD8UPDPwc/bz/Zw8feMtdh8M+GbLV7zQNW17UiiW1qmu6Le6CrzPIQsce68AeRiAi5YkAZr/Tnx8" +
                        "yCvmfB+Ow9GDnUcFJJbvklGend+7our0P8ALz6P/EGHyvjHA4ivNQpqbi5PZc8JQ1fRe9q+i16H9gX/A" +
                        "AVslin/AOCcf7TU8EqzQTaTpMsM0TBkdG8RacQykcEEdDX+aX0cItccYBPfml/6RM/02+knJPgbHtapw" +
                        "j/6cgfynf8ABF3/AJSW/s2f9zj/AOoDrlf6G/Sj/wCSEx3/AHC/9PUz/Or6K/8AyXuA/wC4v/pmofvl/" +
                        "wAFav8Agqh8V/2JviP8Pvgz8FvCGi33ibxJoMfxJ8ReKvHkF1ewRWV1qV5plvb2tvaXNriTfYStI7sw2" +
                        "lQFzkj+Pfo5fR7y7ivA1sbjqs1ThP2cYwaTuoxk2209LSVkra3u+h/ZP0kvpEZlwnjqGBwNKDqTh7SUp" +
                        "ptWcpRSSTjreLu3fS1l1PQ/2F/+CzP7P/7SPhnS/D3xy8R6P8BPjjEfsWpaTr1y1j4c1V8gLNp19qDlI" +
                        "/MJA+zzy+YG4UyD5q8Txb+i/nOR15VMBCeKwm6aV5x8pxiru380Va2rUdj2/CH6UuS57h408fUhhcXs1" +
                        "J2hLzhKTsr/AMsne+ictz9Dvi/8DP2V/wBoXwwdY+Mvw98IfErw4sWbfxf4it9Pma3ibEe6DU1KyQg5A" +
                        "3Ryr25r8W4a4t4hyXEcmCr1aM7/AAxcld+cNn80z9t4m4R4dzvD8+OoUq0LfFJRdl5T3XyaP48f+CpXw" +
                        "E/4J3/BHW9Es/2Pfi1ceJPHl3etF4y+GuhalH4m8OaTp4hkO9NWLPIlwsoVDbtNO2CSxjKgP/pl9H7jD" +
                        "jXNqU5ZzhlCil7tRx9nOUrr7GzjbXmUYra3NfT/ADD+kLwbwRlNWEclxLnWcvfpqXtKcY2e09WpXsuVy" +
                        "k978ttfpb/g3Su/FCftQ/G6xtGn/wCEKufAL3fiBYwfsx1SHxDpqaeZD/f8qW72e26vhPptU8O+H8JJ2" +
                        "9qq9o9+VwnzW8rqF/kfe/QfqYhcQYuMb+ydC8u3Mpw5b+dnO3zPgv8A4K4/8pF/2nv+wrpf/qOadX6/9" +
                        "G7/AJIjAf4Zf+nJn479JX/kuMw/xR/9NwP6lP2VvjVbfs5/8EgPhh8cbrRX8Rr8M/h5J4ng0CGUQfbLi" +
                        "KeZYIWlIbYjyMod9pKrkgEjB/z+8QuFpZ34l4jAKfJ7bEcvNvZNK7t1sr2XV9Uf6E+HfFccj8MsPj3Dn" +
                        "9jh+bl2u03ZX6Ju13rZdGflb+zP/wAHCXj+4+KUenftXeBNCtPhPrztB/wkXwp0/UotQ0B3PySvBdXt2" +
                        "bu3XpIqgSgZZd5Hlt/QfHn0MMHHL+bKK03iY/ZqSjyz8rqMeWXZv3ejtuv544B+mrjZZjy5vRgsNL7VO" +
                        "MuaHZtOUuaPdL3uqvs/6Qfh/wDGn9nH9pzwoW+H/wAQfC3xk8L61FtvdGsrqw1LcjLuMd1YzbpI2A5aO" +
                        "aMMO4r+Hs54WzzIcR/tFGrh6kXo2nH5xktH6p2P7oyXirIs/wAN/s1eliKclqk1L5Si9V6NJn5N/t5fs" +
                        "Of8Eh9B8N+IPFHxY1PRP2YvFccUt3a3Pwj1K30/VJ5VBIjt/DkIuIbjLfeWG0DY/jUcj+i/CDxZ8Sa1e" +
                        "FLCRnjKd0v3kXKK83VdnH1c7eT2P5v8YvCPwzo0J1cZKGCqWbXspKMn5KkrqXooX81ufxsXTW1lrdy3h" +
                        "u+uZ7O0unbQdTniFpePHHMfIlaOGWURyEAMVWRtp4DHGa/08pqUqS9qkm1qt1tqrtK6+Sv2P8uqjjCq/" +
                        "ZNtJ+69nvo7Juz9G7dz/TR+HUniCX4feBJfFiyJ4pl0bS5PEqXi7ZhqDWURuBIOzeZuyPWv8HM7VFY2s" +
                        "qNvZ88uW23Ld2t8j/fHI5VngqLrX9pyR5r781le/wAzsq8w9QKACgD5j/aw/ZP+Fv7X/wALb/4bfEmw8" +
                        "m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/EZ+1B+y/8AFL9kz4pap8Lvijpfk3MO6" +
                        "98N+JLJXOna1pxcrHd2kjAZU4wyn5kbKsARWLVjpjK59Mf8E8/+ChnjX9i7xqNI1c3Piv4D+K7lJPG/g" +
                        "iN90tnK2IzqOnCQhUuEUDemQsygKxBCOjjKxM4XP7Q/h38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdL" +
                        "fdFNE2QQQQGR0YFXRgGRgVYBgRWxzNHlX7V37N/g39rL4C/ED4F+Nv9GsPF9rnR9cjQPNpWrWzCeyvYh" +
                        "lSTDMqllBG9NyE4Y19t4d8cYrhzOKOPoaum9V0lF6Si/Vdejs90fEeI3AuF4kyatl9fRVFo+sZLWMl6P" +
                        "p1V1sz/ADv/AI0fB/x38Avil42+D3xL0d9D8a+Ar6TRNZsnB2PtAeKeFiBvhnjZZYnHDIysODX+1PC3E" +
                        "uDzjL6WNwsualVjdP8ANPs07pro00f4k8VcMYzJsxq4LFR5atKVmvya7pqzT6ppn2L4d/4KeftP+Ff2P" +
                        "p/2OtB8S/2f4WkmlsLbx3DJMNdtvDc8ZEmiwTA/Jbs5Pzj5whMQITivzLG+AmQYjiZZ1Up3qWvyacjmt" +
                        "qjXWVum1/eep+n4Hx/4gw3DDyWnUtTu1z686pvemn0jfrvb3VofB/g/wf4p+IHinQPBPgnQLrxT4u8U3" +
                        "UOieHvD2iQvPdXl1O4RI40QEkkn8Op4r9ezPM8PgsPOvXmoU4JuUm7JJbts/HssyzEY3EQoUIOdWbSjF" +
                        "K7beySP7dv+CXn/AAS88LfsWeFrf4kfEi3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/7ifu8" +
                        "l/8pPH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/rL9H36PuH4Uw6xWKSnj5rV7qmn9iHn/ADS67LTf9" +
                        "fq/mo/poKACgD8wf+CwHwQ+Jfx8/Yf8d+D/AITeGLjxn4v0fUtH8Zx+FdHQy397a6bcl7hLWJfmmmVHL" +
                        "rEuWfBVAzEKf336NPFeAyfiyjWxlRU6UoyhzPZOS0u+ivpd6Ld2V2fz/wDSb4Sx+c8JVqODpupVjKM+V" +
                        "ayai9eVdXbWy1drK7sj8bP+CD37Kf7QHgv9pnxr8Y/iB8Ktc+HfgPQ/CmoeD49U8d6ZeaS97qepX9jLH" +
                        "DbRX8cTyhY7eR5HVSq4AJBYV/Tv0vPEPJsVkNLBYfEQq1pVYytCSlaMVJNtptLVpJPV622Z/Lv0PfDrO" +
                        "sJn9XG4nDTpUY0pRvOLjeUpRaSUkm9E22tFpfdHz1/wV6/Yy/aTuv26/id498HfBvxJ8Q/BfxdbSfEHg" +
                        "/xB4D0XUdXheSPR7PTri2mOnwyiKaO4gcBGIJQqw68fafRr8UMijwjh8PWxVOlVoc0ZRnOMX8UpJrmau" +
                        "mmtV1uuh8T9Jjwsz6XF+IxFDC1KtKvyyjKEJSXwxi0+VOzUk9HurPqf1E/8E8/hF4y+BH7Fv7Pfws+IV" +
                        "iNL8a+GtDM/iPSMhnsrnUr641U20hUkeZCLkRyYJG5Tgkc1/APjTxLhc34pxuLwz5qU5+6+6ilG68na6" +
                        "8mf6C+CfDOKyfhXBYTErlqwh7y7OTcrPzV7PzR9m1+Xn6mfin/wXS/Z/wDiz8dv2VfB0vwj8G3vj7U/h" +
                        "v4rt/F/iLw34ZglvNTbTZNLvNPea3toFaSby5J03qgLBSWxtViP6n+iTxlluUcQ1VjKqpRrUnGMpO0eb" +
                        "mjKzb0V0nZvS+m7R/Kf0vODMyzjh2k8HSdWVGqpSjFXly8so3SWrs2rpa212TPhL/g38+EHxa+Gvxh/a" +
                        "CvviL8LvEXgGy1Pw1plpp15410TU9KiuJU1QuyRvfQxB2A5IBJxX679MniXLcdlmCjhsRTqtVJNqE4yt" +
                        "7vWzdj8f+hhwxmWAzTGyxOHqUlKnFJzhKKb5ul0rn68/wDBQv8A4Ju/C79vXwnps+paifAXxj8G28tn4" +
                        "E+JllALgCB3842N/BuQz2rOSygMGiYlkOGdH/mzwW8csw4PxMlGPtcLUd5027a7c0X0lbfS0krPZNf0x" +
                        "42eBWX8Y4aLlL2WKpq0KiV9N+WS6xvtreLd1u0/5Fv2hf8Aglj+23+zprc9jrnwX1L4ieHjJ5Gm+Ofg7" +
                        "bXXiPTLlScB2WxiNzb5PGLmGM56ZyM/6R8F/SD4UzukpU8VGlO2sKrUJL73yy/7dkz/ADT42+jxxZkdV" +
                        "xqYSVaF9J0k6kX9y5o/9vRR/Ux/wRn+Enxt+HH7D0Pgv9ozw/f6U+t69rOo+CvAvj2JhdWHhS9srOFLW" +
                        "ezu13wpJcpdSiGRQdsmSAGxX+ff0oOJMqx3Fjr5bOMuWEVOcNnUTk+ZSWjajyrmXVeR/oX9FrhrNsDwk" +
                        "qGZwlHmqScIT3VNqK5XF6pOXO+V9HtqfmL+3Z/wQX8Ux6/rXxK/Yokt9X0LVJZdSvvgX4hvIrO6sJJG3" +
                        "lNJvLxkhkg5O2K4kRkAwHkzgfvfhH9L/DujDC55eM42SrRV0/8AHFap+cU0+y6/gHi/9DvEKtPFZFaUJ" +
                        "Nt0ZNJr/BJ6NeUmmu76fhX4k/Yu/a98I6pPo3iH9mDx9p9/bkqVHhLXJopADt3RTQWzxyJkcMjEH1r+t" +
                        "8D4pcNYmmp08woNP/p5BP5pu69Grn8h47wr4mw1RwqZfXTX/TqbXyaVmvNOxgf8MrftP/8ARuHj3/wj/" +
                        "EP/AMiV2f8AEQsg/wCg6h/4Nh/8kcf/ABDviD/oAr/+Cp//ACJ/VL/wQL+Df7Rvwm+EXxvm+MvhnWvA3" +
                        "gPxVq2j3Xwt8H+OLe50+5S6tre8TVbyOzvEjljiuBJaqHIAcxkjoSf89/picT5HmOZYRYKpCpWhGXtJQ" +
                        "akrNx5IuSum1abt0vqf6IfQ14XzzLcsxbx1OdKjOcXTjNOLulLnkouzSleCv15dD93vEvhzQ/GPhzxB4" +
                        "R8T6ZHrXhrxVZXfhzxDo94CYbuxvoGtZ4XAIO2SN2U89DX8h4DHVcLXhWpS5akGpRa3TTumvRn9g4/A0" +
                        "cVQnRqxUqc4uMk9mmrNP1Wh/C3+29/wSb/aQ/Zf+JGpR+APAOtfGX4M67dzyeAPGXgbT7nV7yC2Zi8d";
                    resourceString += "pqlvp8TyQXMSYUyFBFL95Dncif62+FH0i8jz/AxeIrQw+KilzxnJRTfWUHJ2cX2vzR2fRv8AyI8Wfo4Z7" +
                        "w/j5LDUZ4jCyb5Jwi5NLpGairqSXW3LLdPdL9uvg7+zB+1V4j/4IlePPgH430O/k+L3iGxvtR+G3w78V" +
                        "s8Oq2Wi2msWupWemSLdkGKV1tZDBC5GwSJGdmCF/lLibj7h6h4rUcwoTj9WhJKpOOsXNxcZTVt0uZczW" +
                        "9m1fd/1lwv4f8RV/Cetl1eEvrM4t04S0koKUZRg77N8r5U9rpO2y/Mr/gjV+x5+0roX7dvw++J/jL4Me" +
                        "I/h/wCCfhFb+IrzxXrnj7R7/RovO1Hw5qGgwW0B1GKHzZjLeKxRMlVUk4GK/efpPeJmRVuEa2Fo4qnVq" +
                        "13BRUJKTtGcZtvlbsrR3e7aSPwL6Lnhjn1HjChi6+FqUqVBTcnOMoK8oSgkuZK7vLZbJNs/oq/4KC/8E" +
                        "6vhd+3p4I0621q+Pgf4seDo5k+H/wATbCATvAkvzvZ3sO5PPtHfDbdwZG+ZGGXV/wCJ/BnxszDg/FycF" +
                        "7TDVLc9Nu1/70X0kl8mtGtmv7f8afA/L+McJFVH7LE078lRK9r/AGZLrFvXunqnun/IR+0P/wAEr/22/" +
                        "wBnLU9Qj174M6j8QPC1mWa38f8AwhguPEOlzQjP711s4vtNuvHP2mGP8iCf9KOCvpB8KZ5Ti6eKjSqP7" +
                        "FVqEk+2r5Zf9uyZ/mdxt9HjizI6klUwsqtNfbpJzi130XNH/t6KPh//AIV38QPtX2H/AIQbWPtvmfZPs" +
                        "f8AZl75vm7tmzZ5ed2eMYzmv1j+2sHy83toW3vzL/M/JP7ExvNy+xnfa3K73+4+0v2ff+CXv7bP7Rupa" +
                        "dH4X+CeqeDPDN8ymXx98Vre48PaRFC3/LZWvo1nuE7f6NFKc9uDj8t4z8fuFMkhJ1cXGpUX2KbU5X7aO" +
                        "0X/AInE/VeC/o+8WZ5UiqWElTpv7dROEbd9VeS/wqR/ZJ/wT/8A2Dvh/wDsG/CW68F+HdRPi3x54umh1" +
                        "r4m/EO5t0t5NSuoYzHDDDGCxjtLcO3lRszHLOxOWIH+YnjJ4vY3i/MlXqR9nRppqnC9+VPdt9ZS0u7LZ" +
                        "Lof6ieDHg9guDstdClL2lao06k7W5mtkl0jHWyu92+p/Ml/wVt/Y0/ae1L9u/4p+NvCnwS8SePvCPxbn" +
                        "0rWvBHiHwDo2oazbXGNJs9OkgkbT4pRFOk0LKY5MEjDDKsDX95/Rw8T8gp8IYehWxdOlUoKSnGcoxa96" +
                        "Uk1zNXTT3Xmt0fwL9JPwt4gqcYYivRwlSrSruLhKEZST92MWnyp2aaej8nsz+pH9kH4CXngv9hv4Nfs9" +
                        "fGzw1a39zF4Ni8HfEnwbqPl3VsV1GCQ3djNsLI+1ZzE+0lSQcEjBr/P7xK4wjiuLcVmOBqNL2zlTktH7" +
                        "rXLJdVtdde5/oR4ZcGywvCOFy3HU037FRqQeq95Pmi+j3s7adj+c/8AbU/4IMfF7wHret+N/wBkSVfip" +
                        "8O7qR76D4Y6rdRW3ibSUdixhglu2SG+hjH3WMiTYwuyRgXP9t+Fn0vstxlKFDOP3Fdae0SvTl5tK7g31" +
                        "0cet4rRfw94rfQ7zPB1p18m/f0G7+zbSqR8k3ZTS6O6l0tJ6v8AD7xn8BPjl8OtTfRfH3wc8U+C9WjJQ" +
                        "6f4o0DVbGU47qLmBNw7gjII5Ff1hlfGGU46nz4fFUqke8Zxf5M/krNeDs3wNTkxGFq05dpQkvzRqfD/A" +
                        "PZp/aG+K2ow6V8N/gf4r8a3sz+Tjw9oGp3EcZyATLKkPlxqMjLOwA7mufOeOsly6DnicXSpr+9OK+5Xu" +
                        "/kdGS8B53mM1DC4SrUf92En97tZfM/oq/4Jvf8ABEPxf4O8d+FPjv8AthRWenyeEbi38R+DvgfYTW+ov" +
                        "JfwMJYZtYnhMlv5cTgOtvEz7zjzGCho3/ifxx+ldhsVhKmX5Nd+0TjKq046PRqmnZ3a05mlbom7Nf2/4" +
                        "F/RMxOFxlPMM6svZtSjRTUveWqdRq8bJ68qbv1aV0/6gK/gQ/0CCgAoAKACgD5j/aw/ZP8Ahb+1/wDC2" +
                        "/8Aht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Rn7UH7L/AMUv2TPilqnwu" +
                        "+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrn1N/wAE5f8AgoX4n/Yw8cSaF4lN1" +
                        "4m+AvjKZT4w8KQuXk0y5bag1OwRuBKqgCWMYEqDB+ZUKuMrEzhc/tA8EeN/CXxJ8JeH/HngPxBbeKfB/" +
                        "im2j1fQNf0iQSW9zbyDhlPBBBBVlYBlYFWAIIrY5mj8jP8AgqV/wTt8M/t3/DGx+M/wRutPvPjv4J0+V" +
                        "vCmsaTPBLZ+LtJgMkv9lvcxP5XmByxtZidquSjkKxZP6a+jp46z4Xxn1XFNvA1Xr/07k9OdLt/Mlulda" +
                        "qz/AJh+kf4DQ4pwf1rCpLHUY6f9PIrXkb6P+RvRN2dk7r+MjT/hD8U9U+JMPwcsfh3rM3xWnvh4aX4dN" +
                        "p10msrf52mB7SRFkRx1YMowOTgc1/qTW4ly+ngXjZV4fV1Hm5+Zctu/Ns/kf5V0eGcxqY9YKNCf1ly5e" +
                        "TlfPzduXdP12P7Vf+CXn/BLzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/" +
                        "uJ+7yX/AMsfH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/qx9H36PuH4Uw6xWKSnj5rV7qmn9iHn/NLr" +
                        "stN/wBfq/mo/poKACgAoA8J/aZ+O+k/syfA7x98dtf8Maj4x0L4dwW2qazoHhP7OdQktp76CyeSIXckU" +
                        "ZEIm819zj5FbGTgH67gPhCpn2bUcBTqRpzqtpSlfluk3Z2TetrLTdo+P4+4wpZBlFbMKlOVSFJJuMbc1" +
                        "m0rq7S0vd67Jmj4R+Ofgfxd8ANA/aQgnk074d654Tg+MUkt6E8+00qTShq8glVGKiSKPIcA4DAjNYZlw" +
                        "li8NnM8savXjVdLTZy5uVW8m9vI6Ms4uwmJyaGZptUJUlV13UeXmd/NLfzPFv2IP23fht+3Z8NPEvxK+" +
                        "G+gap4VtfCmty+CNW0DxkLMXqyx2VtfJMBYzzp5Ui3O1SWB3Kwxxz9V4r+FOO4Rx9PC4mcZucOdON7Wu" +
                        "1bVJ3VtfJo+U8JfFnAcYYCpisLCUFCbg4zte9k76Nqzvp5pmz8GP2vvBPx0+P8A+0V8BPBfhnVDdfs03" +
                        "FhonjfxzefYxpM+o33mKLW28qZ5S6Pbzq+9FwYz6iuXijw1xeUZNgswr1I2xibhBX5lFW1elrNOLVm9z" +
                        "q4W8TcJm+dY7LqFOV8G0pzduVyd9Fre6akndLZn1rX5wfpIUAFABQAUAFAHwj/wUR/bH1L9hv4BWfxo0" +
                        "rwHB8Rbq68Qad4JPh/UL+TTY1S+tru4MvmxwXByv2bG3bznrxX674KeGNPi3OHgZ1nSSpynzKPNs4q1r" +
                        "rv3Px/xu8UKnCOTLHQoqs3UjDlcuXdSd72fbsfd1fkR+wBQAUAfPX7VX7Rfhf8AZN+Avjz9oHxnod/4k" +
                        "8NeAP7L/tLRfDAtzfTf2rrNpokflfa5Io/lkvFZssPlBxzgV9p4e8E4jiPOKOXUJxhUq81nK9lyxlN3s" +
                        "m9o223PivETjjD8N5NWzGvCU6dLluo2u+acYK12lvJPfY+VviH/AMFGNW8G3Hg5/C37Enxo+MWg+NfDe" +
                        "g/EnTPF3wm8Iy6xpSw69p6aglq1zbuUM8KyBZVUkA9zX6FkvglTxSq+1zXB4edOpOm41KnLK8JON7PWz" +
                        "tofnWd+ONTCul7LKcZiIVKcKilSpc0bTipWutLq9n5ng3w//wCCzOmfFnQn8U/Cv9hL45fEvwzHcSaVJ" +
                        "4j+H/hOPWbBbqFVeSE3GnTzRiRQ6ll3ZAIyORX1+c/RfqZdW9li83wVGpa/LOpyuz2dpJO2m58fkv0pa" +
                        "eZUfa4TJ8bWp3tzQpc6ut1eLavqtD9m9PumvrCxvmtZLJryGK6ayvF2TQmRA+yRezLnBHrX8vVqfJNxv" +
                        "eztdbP0P6lo1OeClZq6vZ7r1PjL/gn/APta6j+2t+ztpvxy1TwRD8Pru/1bVPDZ8O2F8+oxqunSrGJPO" +
                        "khgJL7um3iv1Hxk8OIcK53LAQquqlGMuZrl+Lpa7/M/LfBjxJnxXkkcfOiqTc5R5U+b4et7Lf0Ptmvyo" +
                        "/VwoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD5j/aw/ZP+Fv7X/wALb/4bfEmw8m5h8y+8GeM7GNDqO" +
                        "haiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/EZ+1B+y/8AFL9kz4pap8Lvijpfk3MO698N+JLJXOna1pxcr" +
                        "Hd2kjAZU4wyn5kbKsARWLVjpjK5d+G37YH7Q3wj+EHxA+BfgD4jXeg/Dn4kY/tzSYDmW33/AC3H2KY/P" +
                        "bfaU+SfyyN68Gi4OKPtT/gmZ/wUL+Lf7NXijTPglbeCtQ+Nfw28falFDpPw70Bi+tafqV24jaTSRJlG8" +
                        "370lu5VGYbg0ZLszjKxM4XP7HbOGC4NvrM2k/2fqtzbRwzC7W3N3DGf3vkSSQNIp2MTkK7LnJBPWun2s" +
                        "uXlu7b26X7nF7KPNzWXNa1+tuxo1BoFABQAUAFAHmfxp+G2n/GP4P8AxS+EuqlF0/4l+HtY8C3M0wJEQ" +
                        "1XT5bIScAkFDIGBHIIBHNe9wtnk8szPD4yHxUakZ/8AgMk7fO1jwOKsihmmWYjBz+GtTlD/AMCi1f5Xu" +
                        "fzWeBf2jPEmm/8ABDPxX8Jg0kfxesvFN7+xFZ6JcELdvea3rQvXs2UnkjTLuaFcf3Mdia/unN+CKFTxa" +
                        "p4z/mGdJYtvpaELc3/gyKl8/Q/hDKOOK9PwiqYPX60qrwiXW853cf8AwXJx+Xkz6T/YusPD3/BPn9tH9" +
                        "s39nbVLoWfw3svhd4U/aF0CZh5aTweD9AhstWnjL4y8ss87OTy3l7j0NfC+KVatxnwtleZQV67xNSjLy" +
                        "dWbcE/JJRS7Xsfd+FdGhwVxVmuWTdqCw1OvHzVKCU2vNtyb72ueG/s+ftCeLf2NP+CbHjL9rldNsr79o" +
                        "f8Abw+J2q6n4JPid/LtYbzVbu6t4rm781kzb2/2K7ulZiFYyoGIVq+s4z4Lw3FHHVLJ+ZrBZZhoqfLu1" +
                        "FJtR/vS5oR01XK7K6PkeCuNcTwtwHVznli8dmeJk4c2ycm0nL+7HlnLXR8yu7M7f40/Gz9or9kP4b6L+" +
                        "0xon/BTjwz+1d4q8OXukyfGT9nqeTwidL1Wy1K9htJ49Gi0mZriIwPMo3RorbA0p2hTGfK4W4VyTiXHT" +
                        "yupkFTA05qXsq/73mi4ptOo5Lld0no21e0dW1I9birizPOGcDDNKfEFPHVIOPtaH7rlkpNJqmovmVm1q" +
                        "kna8tEnF/0R+DvFOl+OfCHhXxrobmTRfGGm2PinR5JMbmtdQtUu4idpIyUkHQ1/FOZ5fUwmJqUKnx05O" +
                        "L9Yuz/FH9u5XmNPF4anXp/BUipL0krr8Gfg58N/GX7fn7XX7Uf7b/wH8C/tOv8AA/4RfA/xpf2J+IFr4" +
                        "f03VtagguZ7m103RtPWQWqrCotJZp5jIZRhF3ANz/XueZXwdw3w/lOYYjAfWcTiaKfJzyjBtJOdSW+vv" +
                        "JRVuXd20P48yLNOM+JuIc3y/D5h9Ww2GrNc6hGU0m2oU47ae63J35tlfU5f9nb4gf8ABST9or4jfHH9h" +
                        "vWf2m9O+HV/+y7qt1bfED9pvRNAs7/xTr9hczmDSbSC1d4IIg4hkmluARMF2IxLBi/ocbZNwNkmBwmfQ" +
                        "wEqqxsVyYdzcacGlecm9W7XSUdY3u1pa3n8EZ1x3nmOxeQTzCNF4KT58QoKVSabtCKjolezblpK1k9b3" +
                        "+uf+Ccf7QH7QF78Zf2qv2Mf2mfG8PxV8e/s0XunXPhX4qw2kdndazoupK5X7VHbjYHRDA65LSfvGVmbZ" +
                        "uP5t438G5NDK8uzvK6ToUcYpc1O91Gcf5W9dXzLovdTSV7H6V4GcaZ1PNMxyPNayr1sG48tS1nOEv5kt" +
                        "Lpcr6v3mm3a58sftXeJ/j/+zv4f8e+O9W/4LE6JN+0J4FtrvxdpP7Pk+j+DdNsb+Gzja4Glf2XHPNN50" +
                        "0a7IZJYiZH4wCdy/oXh3gMmzutRw8OGZ/UqrUXW5qsmm9OfnslZPVpPReln+eeI2YZ1klGtiJ8UQ+u0k" +
                        "5Khy0oqSWvJyXbu1om1q9Ot1w//AAU9+O11+01/wR3+AXx01HTIdG1f4heJPDWpa9pmneZ9mi1G3s9Ys" +
                        "bsQiYlhEZ4HKBiSFwCW6n1vAPhGOQ+JuMwEZOUaVOok3u4t03G9utmr+fRHkfSA4wln/hhgswlFRlVqU" +
                        "20tlJKopWvra6dvLq9z7F0v9ob47ft5ftST+D/2U/iFdfC79jr9n6+k0r4yfHjw5badcXXjPXkCu2k6R" +
                        "JqMVynkqhX98icKxkJIaAP+Y4jgvKOEOH1Wzaiq2Z4qN6VGTklSh/PNRad7/Zb3XLpabX6hh+Ns44x4h" +
                        "dDKK7oZXhZWq1oqLdWf8lNyTVrfaS2fNreCfFfHT9qf4jfHX9sr4k/st+A/2rNE/Y0+DH7P1jYn4n/FH" +
                        "UJtCj8Q+Itf1KETrp+mtr0qLHFACRI8YDKyNuLB0Ferwj4e4HKOGKGa4jLp5hisVJ+zppT5IQi7c0+Ra" +
                        "t9E9GmrWszyeL/ETHZxxTXynD5jDL8LhYr2lRuHPOclflhzvRLq1qmne90dd+w5+0/8TrD9rX4n/sT/A" +
                        "BM+P2lftYeHtM8NRfF74N/H3w3/AGSbuSwW5gs7nTNSOiySwvNG0+QzNv8AkJYlZEVPN8WeAcBPhzD55" +
                        "hcHLAzdT2VWjLmtezanDnSaTtstNVbVNv0/CPxAzCHEmIyLFY2GOhGn7WlWjy35bpOE+RtNq+710bbtJ" +
                        "Jeo/wDBaL/lGl+0n/3J3/qfaHXz/wBFz/ku8D/3F/8ATNQ+h+lR/wAkFj/+4X/p6mfZn7K3/JsH7OH/A" +
                        "GIXg/8A9R60r8w8Qv8Akf47/r/V/wDS5H6l4d/8k/gP+vFL/wBIiflz/wAG/wB/yYpq3/Y++IP/AE3aX" +
                        "X7/APTJ/wCSuj/14h/6VM/nv6GH/JIS/wCv8/8A0mB+4Ffygf1qfyuf8Esfgp+238dP2NWsvhF+1JF+y" +
                        "38L/C2t63B4Pj8N+H7fV9W8R63I8dzPPfXVxNG1taRFkhRIcljvLKQFz/oR9IPirhTKOJ+bGZe8biJwh" +
                        "zc03GMIapKKSfNJ6tt7aJPe3+d/0eOFOLM34X5cHmCwWHhOfLywUpVJ6NuTbXLFaJJb6tra/wCoX/BOH" +
                        "9pn4+/tQfs7fHPwP8TvEFlpX7TXwL1vXfgpf/EK2sIJbSTUobRkstSmtYkigkaK43iSNFVXEYO0bzX4D" +
                        "44cB5PkGd4SvhYOWAxMIVVC7vyt+9BN3avG1m22r76H9BeBnH2c8QZHjMPipxjmGGnOk52VuZL3ZtKyd" +
                        "pXukknbZXPgH9qb47fHP9jvRLr4reGv+CtGg/tE/GPwPqNh/wAJ/wDs16tp3hKG11a2udQhtLi2t9P0i" +
                        "eeS0eHzN8iAJIIgzq6FRu/ZPD7hHKeJqqwlXhyeEwtSMuSupVG4tRbTcpJKSdrJ6rmsmnfT8Y8Q+L834" +
                        "YpPF0uJIYvFUpR56DjSSknJJpRi24tXu1o+W7TVtfp3/gox+2J+0R4HsP8Agnj4p/ZZ1MaZrH7SuposH" +
                        "gbVo7aaz1qXWbTR30yyvHmiEgjEt+A5jaNiCeRwR8D4I+GWSYuedUs2jzRwcfjV04KLqc8o2dr2jpe68" +
                        "mff+OPifneEhklXKZcssZL4HZqbkqfJGV1e15a2s/NHFftN6B/wUw/Yo+G4/a9b9suP9oSHwTcafqnxs" +
                        "+COteFtO0vQH068uorWVNOa1LSCKGSZVLqsMmzMmRgofV4DxnAnFWO/sb+y/qrqKSpVVUlKfMk2ue+l2" +
                        "lezclf3ezPK4+wXHvCmA/tn+1Vi1TcXVounGMOVtJ8ltbJu10ou3vdLHT/tv/tkftEWvjD/AIJn6/8As" +
                        "f6+tvF+2JY63LZ+CPFkNs+k3UmqaboT6VPqDCB50WxbWGmmEbjIjwR1rz/CjwxySWGz6nnMLvAShecW+" +
                        "ZcsqnOo62fPyWV097noeLXijnccVkFTJZ2WYRnaEkuV80afI5aXXJ7RylZraxxf7Tr/APBRr/gnl4X0X" +
                        "9q/UP2uW/aq+Hmj6lpdh8ePhZ4s8M6botnHaajdJZiXT2szMYIzNKsStGY2R2QssilkHq8BLgjjXETyi" +
                        "OW/Uq8oydGpGpKbvFXtK9ruybad00mk4uzPK4/fHPBOHhnEsz+vUIyiq1OVOMFaTteNr2V2krWabTakr" +
                        "o9l/a6/bb8XeKfjV8Af2Xf2f/jZof7OVh8XfCkHx7+In7R/xAGlN/ZHhe/ST7Fa6fFq0qW7Xlx5ZJDHI" +
                        "3IVYDew+X8NvCnDYfKsZmuY4SeLlQqujChDm96orczk4rm5Y3/B3T0R9T4l+LGJxGa4LKcuxcMJHEUlW" +
                        "nXny+7Td+VRUny80rfirNas8/8AhN+0p8Tf2dv21fgj+z1rv7Ymm/ttfAr9pW21PS9D8SCXQLrxD4T8R" +
                        "6dD5ypPLoMspeC4LRqvmkAh2KgeUxf2eI+BcBnfCuLzGnlksuxeDcW4++oVISdtFNKzjq9Oyu3zK3i8N" +
                        "8eY/JOK8JltTNI5lg8YpJS9xzpzir6uDd1LRa93ZLld+P8Ahl8RP2/P2tf2s/24f2dvAf7Ssfwa+EPwV" +
                        "8ZXEV98QoNC03VPEOnWNxdXtnp2jaYkggRY5fscskk7N5i+WAG+Yq3p59knB3DnDmU5liMB9YxOIoq0O" +
                        "eUYSaUXOpPd3XMkor3XfbS68zIM84z4k4kzfLcPj/q+Gw1Z3nyRlOKbkoU4LRWfK25P3lZa62f0Z+wB8" +
                        "cf2l9D/AGm/2lv2Fv2ovHa/GPxN8ErHTPHXgL4vLZW+nz6hol+tuwW5jgHzMy30DKWZmRhIjO4CkfEeM" +
                        "nCeRVchwGfZVR+r08TKUJ0ruSjNX2b/AMMl0TXK0lqfceDHF2fUc/x+QZtW+sVMNGM4VbKLlB23S3+KL" +
                        "6tPmTb0P2Dr+aD+nAoAKACgAoAKACgD5j/aw/ZP+Fv7X/wtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxb" +
                        "s2MqcASxE7ZF4OCFZU1cqMrH8Vnx0/Y0+O/wG+O9v8As+6/4Pudf8Za/cpafDybw1BLcW/iW3uJfKgns" +
                        "CBlgx4dT80bZD4INYtHSpJo/qW/4Jt/8E2/DX7IHhqD4g/EGC28S/tEeJbby9V1WPbPbeHLadfmsLBuQ" +
                        "XIOJ5x9/wC6vyZL6RjYwnO5+rNWZhQAUAFABQAUAFAH8w+lfsnfF1P+CuurfDF/A2qj9l5fiZH+24fFg" +
                        "069XQxrEPh+XVY0S4KfZy39oXQtzHnICnAxX974jxFy1+G0cV7aP9ofVvqnLzLn5XNRel+b4FzX8z+Ac" +
                        "P4cZmvEuWF9jL+z/rP1vm5Xycyg5LX4fjly230PTf8Agtt8G/jXc/En4H/GD4AeCNX8aeIvHnhXxf8As" +
                        "x/ES28JadeX7ro2rxYtln+xxvsjY6ldHc+FDAdcnHg/RU4nyqOBxeDzGrCnClVpYiHNJL3ovW12rv3Ia" +
                        "LWx730seFs1lj8JjcuozqTq0quHnyxcvdktL2Tsvfnq9LpH0X/wUE/YS8YeK/2CPgV8Jfgd4btfHXi/9" +
                        "k+68LeI9F8DXaRvF4ltdC0qTSb238qbYkrziXz2ViDJtZRlnAPxPgz4u4bD8YYvGY+o6VLHKpFzW9Nzk" +
                        "pRd1slblTW109kfceNPg/isTwbg8HgKaq1cC6clB7VFCLjJWdrt35mnvZrdnzL4P+M//BMTxBa6LoWr/" +
                        "wDBLfxJpfxeujbafr/wl0r4Qpf39lfS/u5FVwsPmQpIrgOVVyqk+WDlR95mfC3H1GU6kOIKcsMrtVHib" +
                        "Jrp3s2raXau/i6nwWV8VeH9eMKc+HqkcU7KVJYXmkn17XSd9bJtL4U9D+ijRtH0rw9pGlaBoWnQ6Poeh" +
                        "20Gj6NpOmxrDb2tpbRLBDDFGgCqiIoVVAwAMV/E+KxNSvVlUqScpybbb1bb1bb7tn9vYXC06FKNOnFRh" +
                        "FJJLRJLRJLslsflB/wTr8FeMvC/7Un/AAVC1jxL4S1Pw7pPi74lW2q+FNU12wurS31S1EurEzWklwiLP" +
                        "GN6/NGSORzzX9FeNma4XEcP8PwpVIzlTw7Ukmm4u0NJJPR+TP5x8D8qxWH4h4gnVpShGpiE4txaUlees" +
                        "W1qvNHM/sLeBfG/h7/go1/wU48UeIPB2q6H4Z8W6l4dl8K+ItY0+7trHU0ia93taXE8axzBdwyUY4zXd" +
                        "4t5vhK/BGQUqdWMqlOM+aKkm4/D8STuvmcHhDk+LoccZ/VqUpRp1JQ5ZOLSl8Xwtqz+R5n8Nfh18dLX9" +
                        "vr/AIK1+I/AfhfVfDviDxp4Gt9O+CfjbU7G4tNNu/EI8PQRWTW15cpHBIY7kLu2vgYOcYr3s9zvKJcHc" +
                        "OUsRUjOFOs3VgmnJQ53zXirtXjfoeDkOR5vHjLiSrh6coTqUEqU2moufIuW0nZO0rddD8//AIFax8JPD" +
                        "H7E3xP/AGbrf9hjxj42/wCCg3jDR/Gng/xxrOu+BTdapa6jrUeoW0eqza1qieZawW1tKCqLtYyoQAS5l" +
                        "P7JxdhsyxHFWHzN5vSp5LTnSlBKtaLjHlbgqcdJOUlu7rlflyn4vwhistw/CeIytZRWqZ1UhVjNujeSl" +
                        "PmSm6ktYqMXsrPmW2vM/Sv2gfhF8WNV/wCCFn7Lnw90v4YeItS8faP4ltbnVvA9houpTaxaxpqPiIs01" +
                        "nHCZkUCRclkH3h6ivD4N4ly6n4t5hiZ4imqMqbtNziov3aW0r2ez69D3uNOGcyqeEOX4aGHqOtGorwUJ" +
                        "OS96rvG11uunU+pvGXwV8Zf8Es/2pfCXxq/Zj+HOt+Mf2OPjn9i8A/Hv4KfD+z1HW7zw5f2cBS31e0t4" +
                        "RPO4ChpQSGyfNiZl82Ir+e5ZxVhfEHh+pgc0rwp5nhrzo1ZuMFNN6wk3ZLWy6fZkk+WV/0PNOFMV4ecQ" +
                        "0sdlVCdTK8TaFalBSm4SS0nFK7el31+1Ftc0beRfGz4S+Av2bP25fjb8dv2j/2Srr9qX9lL9qGDSvGHh" +
                        "r4j6L4Xi8TXng7WYrcLNDPbSqrQRSmRy2dpdBEV3ujqPpeFeI8ZnvCWEwGWZksFmOCcoyg6ns1VjfRpr" +
                        "dqytvZ817JpnzPFfDeDyHi7F5hmeWvG5djVGUaip+0dKSWqaeyd3fa65bXaaP0H/YX179ifx98QfFev/" +
                        "sv/ALIWpfBq/wDDukxRyfFnWPAA8K2Oo2+oTI0llaXbfNI48tHkQhcjBG4DI/GPFvB8VYPBU6ea5lHEK" +
                        "cv4are0cXFaSlHpu0nr2dj9r8IsZwpjcbUqZVlksO4R/iOj7NSUnrGMur0Ta07q50X/AAV78K+KPG3/A" +
                        "ATu/aF8MeDPDd/4u8S6n/wif9m+HvDFncX99ceT450a4k8qC0SSR9kcbO2FOFBJ4Bri+jXmOHwnGuCq1" +
                        "6kadNe0vKTUUr0aiV27JXbt6nb9JjLsRi+CMbSoU5VKkvZ2jFOTdq1NuyV27JN+h9c/szaff6T+zf8As" +
                        "+6VqtlNpmp6Z4I8KafqWm6hG8M9vPDoNrHJHJHIAyOjAhlIBBGDX5tx5WhUzzGzg04utUaa1TTm7NPqm" +
                        "fpXANGdPIsFCacZRo0009GmoRumujR+a/8AwQu8C+N/h5+xVqmg+P8AwdqvgfXX8b67qCaL4w0+70y7M" +
                        "Emn6aqSCG9jjfYxQgNjBwfSv3T6W2b4TG8VRqYerGpD2MFeMlJX5p6XTaufhH0Q8nxeC4UlTxFKVKftp" +
                        "u0ouLtyw1s0nY/Zav5gP6kPyO/4IleCvGXgH9hbQfD3jvwlqfgrX4/EviK7k0PxbYXWm3ixS3EZRzDeR" +
                        "xuFYDg4wa/pD6Vea4XGcXTqYepGpD2cFeLUls+qbR/NX0T8qxWC4QhTxFKVOftJu0ouLtddGkz4O+EHw" +
                        "j/aYg/Zc/4LFaF8NfBWv+GviZ488f6zqHw/huNO1CxvNZ0mTVpXvxpnmJG87XFgZo4TFnczKBkkV+v8S" +
                        "8SZC+IOGKmKqwnQpUIqfvRajLlXLz725Z8rd9knc/HuGeGs/XD/ABRTwtKpDEVa83D3ZJzjzPm5Nr80O" +
                        "ZK27asfNvjjV/gh44/4JxT/ALN37Ln7C/i24/aJh0Tw9H8aPGreA2jv9GvtG1PT9W1ee51iaJrm5kupr" +
                        "XZDBGcmOQAKgQR19zlOGzbCccLM81zeksFzz9lD22klKMowSgnyxUU7uT6rd35j4TNsTlOL4GeWZTlFV" +
                        "45Qh7Wfsfeg4SjKbdRrmk5NWjFdHskuU+i/+CiV/wCN/BHgH/gibqfhXwbP4j+JHhDUfC1/4c+H14Gs7" +
                        "m/1vT7LwvJb6c4uApieWeNYjvA2k89K+J8FKOExeM4qjVqqFCpGopTWqUJOteStuknfTc+48bq2LwmD4" +
                        "TnRpOdenKm4wejc4qjaDvs3JW12PW/2vf25fEX7bPwV139kH9l79m/4it8afjE1j4U8c2vxK8MzaJZeE" +
                        "LAXsU94dRuJpHjjb935RdsIoYtu3BVPzfhr4S0OFc1hnOa47D/VcPeUPZ1FN1XZqPKkrve9t3a1rXa+l" +
                        "8TPF2vxZlU8lynAYj63iLRn7Sm4Kkrpy523ZbWvsrt3vZPh/wDgoL4b8Xfsq+Pf+CL3hL4WeFZ/iz4r+" +
                        "AkfiDQdL8KaQFiu/Ef9gab4VgvI4AwOJ7qKGUoApO9hhScA+t4M47DcQ4Pimti6ioU8U4Nye0OeVZxb8" +
                        "otq/ktWtzyfGnAYnh3GcK0cJTdephedKK3qckaKkl5ySdvN6J7G/wDtn/tdeIf+Ci3wnh/Yu/ZV+APjt" +
                        "vF/xX1TQ4Piv4g+KXhu40PTfB+nabqdvrDfbp3aVUkWe2jLnO3YGCF3ZVPH4XeG1HgnMXnebYyh7KhGf" +
                        "s405qcqspRcfdWl1Zu3W9m7JNnZ4p+JdfjjLVkeUYKv7WvKHtJVKbhGlGMlL3nrZ3Sv0tdK7aRH+2r+y" +
                        "dZ/s+/tIfs+ftK6v+zdL+1x+zL4W8BaZ+z58Y/Aun6PHrmr6YdCtpLaz1mOzkJB/dLEN7fKux0d08xGD" +
                        "8LPEWWdZHjcshjlgcfOvKtSm5ckZc7TlTcvW+m7umk+VonxV8OI5LnuCzSeAePwEKEaFWCjzyjyJqNRR" +
                        "9La7KzTa5kz6M/ZN8Y/8E6fin8bfBtl+zv+w9qfhPxdpcd34ns/i3efDNND0vQJrGKQbZdRfmKd2Bjj2" +
                        "qQWyu7OAfiPEbLONsvyqrLMs2jOlK0XTVfnlNO20eqW7621sfc+G+acD5jm1KOW5RKnVjeSqvD8kYNX3" +
                        "n0bei6X0uWf+CcHgXxv4W/bV/4Kv694n8Har4c0Lxl430DUPCGta9p93Z2mqwR6h4nZ5LOa4jRJ0UTIS" +
                        "0ZIG5fUVHjhm+ExHCvDtOlVjOdOjNSSkm4vlo6SSd09Hv2ZfgXk+Lw/FfEdSrSlCFStBxbi0pLmraxbV" +
                        "mtVtfdHS/B7wV4ysf8Agsb+1t45vfCWp2fgrWvhr4a0rRvGF1YXUel3d1Eui74Ybt0EMki+W25VYkYOR" +
                        "wa4eJs1ws/DHLaEakXVjiKjcbrmSftNXG90tVrY7+GMqxUPFDMsRKlJUpYemlJxfK2vZ3Slazej0TPpP" +
                        "9hr9sDX/wBsbwR4+8Ya/wDAXW/gLN4K8Q3Hge20fxlNJcNfpBBHKZleWzsisiF9ksQVgjYG9s8fC+LPh" +
                        "pR4YxdGjTxkMUqlNTvFWtdtW+KWj3Turroj7zwj8Ta3FGErVqmDnhXTqOFpO97JO/wx1WzVnZ9Wfb1fl" +
                        "B+shQAUAFABQAUAFAGReeH9B1HVdG13UNEtL7XPDv2j/hH9ZvLaGW7sPtkYhn+zzOpeLzUAV9hG4cHIo" +
                        "A16ACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAPz1/bS/ZA8b/A" +
                        "LS/xe/Yl+InhTxNpWg6Z+zF49tPiv4tsfEJuxPqFnb6ppV80Np9mhlXzStg4HmFRkjnrj9o8LfEvCZDl" +
                        "ma4atTlKWMoOnFxtaLcZq8rtae8trs/FPFXwyxefZnlOJo1Ixjgq6qSUr3klKDtGyevuvey2P0Kr8XP2" +
                        "s+Df2oP2UfGXxz/AGmP2IPjd4e8R6ZpGgfsvax4l8R+LtJ1k3QvNQi1qLS44ls/IikTchsW3eYyjkYzz" +
                        "X6/wD4iYXKchzbA1ISlPGwpxi1a0eRzvzXaevMrWTPx3xA8OcVm+f5Rj6dSMYYKdSUk73kpqFuWya05X" +
                        "e7R95V+QH7EFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAf/9kLQAABAAAA/////wEAAAAAAAAAD" +
                        "AIAAABRU3lzdGVtLkRyYXdpbmcsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsa" +
                        "WNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhBQEAAAAVU3lzdGVtLkRyYXdpbmcuQml0bWFwAQAAAAREY" +
                        "XRhBwICAAAACQMAAAAPAwAAAFrBAAAC/9j/4AAQSkZJRgABAQEAlgCWAAD/7gAOQWRvYmUAZAAAAAAB/" +
                        "+ERlkV4aWYAAE1NACoAAAAIAAcBEgADAAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADA" +
                        "AAAAQACAAABMQACAAAAHAAAAHIBMgACAAAAFAAAAI6HaQAEAAAAAQAAAKIAAADCAJYAAAABAAAAlgAAA" +
                        "AEAAEFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cwAyMDExOjAxOjE4IDA5OjUxOjA2AAACoAIABAAAA" +
                        "AEAAAFioAMABAAAAAEAAACBAAAAAAAAAAYBAwADAAAAAQAGAAABGgAFAAAAAQAAARABGwAFAAAAAQAAA" +
                        "RgBKAADAAAAAQACAAACAQAEAAAAAQAAASACAgAEAAAAAQAAEG4AAAAAAAAASAAAAAEAAABIAAAAAf/Y/" +
                        "+0ADEFkb2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMVE" +
                        "xMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OF" +
                        "BEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA6AKADASIAAhEBA" +
                        "xEB/90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABA" +
                        "AIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0c" +
                        "oLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmd" +
                        "oaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShs" +
                        "UIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5" +
                        "PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1VJJJJSlgYWR9Z3fWTIqyq" +
                        "g3pLd/pu2tDdoj0HVWA+q+2z/DMf/4H+jV36w9WPSOk3ZrGtfa3a2ljpgveQxu7b+a2fUch/VjquX1bp" +
                        "DMzLrbXY572gskNcGu2eo1ri9zP3Ppp/tS9v3f0OLg/wlnux9z2/wBKuL/BdZJJJMXqSSSSUpJJJJSkk" +
                        "kklKSSSSUpJJJJSkkkklKSSSSU//9D1VZ/WutYnR8T17/fY+W0UNPusd+6391jf8JZ/g03W+t4nRsT17" +
                        "/fY+W0UNPusd4D91jf8JZ/g1xvTOmdR+tfUX5+e8txWnbZY2QIB/oeH+6xv+Ft/9H/zaUr6x9Tys36r9" +
                        "OuynB12Xk23ODRDWis3VV1M/kMY5n0kXqw6l0von1f6h08FlWJTuttGoD7xU+Miv/Q2u9Rv9f8A0dnpK" +
                        "1/jBwaqOldPGOwVUY9ppZW0QAHMcW/+el0PQHU5f1dwQQLKn4tdb2OALTDBVaxzT9L6LmLQjkGPlsE+H" +
                        "iAnPjidjxcUf+g0ZYzk5nNG+EmEOGQ3Fer/AKbD6vfWHF63i72fo8muBkY5OrT+839+p/5j1rLzvrvQs" +
                        "76sZrerdIc4YgdodXGouP8AMX/6XFs+ix7v+Ls/S+lbZ131e+sON1vF3sHp5NUDIoJktJ/Ob+/U/wDMe" +
                        "oeY5eIj72E8WGX+Njl+7JlwZ5GRxZRw5Y/4uSP78UvXeuYnQ8H7blte+svFYbXtmSC7/COrZ9Fjvzleq" +
                        "tZdUy6syyxoe0+ThuasH68dRy+m9IryMNzWX+u1rbHMa8tllpLqxaHsa/27Po/QWT1PrP1lf1fC6d03K" +
                        "Fb8rFqsDXMr2l5bZZa4vfU/b7a03Hys8kRISjEHi+Y/5v5rXZOZhCRiRKUhw6RH7/yvbrK679YMXoddF" +
                        "mVXZYy95ZNYadsDcXOD3M/6K5vI6x9dOhOFvV2Ny8Oz2uewMG0n/R20sZ6dv7nr0+k9Zf1of1e7Fx8rK" +
                        "zG53S73F+DZtYyyC3d+mZTXXtsY39FZ/L/0amw8leSPHKEscusJfP8A1Y/1mLNzlY5GMZCceko/L/Wl/" +
                        "VfTUlytXU/rD0LDys36x215LPYzEpr2h7rTu9u+uuprK9v09/qfQ/7co49v+MLqmP8AtDHtrx6njfTRD" +
                        "Gbm9vSbdXc/a78z7Taz/MUQ5SRs+5jEAeH3DL0Sl2iyHmQKHBMzI4uAD1xj3k9wuV+qH1hz+oY3UsvqV" +
                        "gezGIe1rGBoYza+x7W7fe/6P56P9V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa+WGdlrNzd35j/5ypYv1FsNfS" +
                        "OtWBrXljNwa8S0xXYdr2/nMT44DHFnjMDjHtcMt/nlvGX9ZZLOJZMBiTwEZOIf3I/pR/qvWdC63idcwf" +
                        "tuI17GB5rc2zbuDmwf8G6xn0XN/PWiuI6f9beoY31Uf1HJIyst2UcaiWtYwfo22N9RlAq9jGts/l/mJY" +
                        "7P8YWbit6hTmVBrxurpBqkg8bQKbKf+3L037nMXxzhACXBxSOkpf1V33uBrhjOZI46iNYx8Xr8/NpwMK" +
                        "/Nvn0sdjrHhokw0bvbMIfSep0dW6fT1DHDm1XTDXRILXOqe07C9n02fvLCr6v1236t9Tt6phjHysNjhX" +
                        "ZYz2WED+c9Czex3pu/P/o9n+DVSz63Z+F9VsHKfGR1HOdc0WvaA0Cux7XWOrq9NrnbPTYxn/XE0cpkJo" +
                        "cJ9ft6G9eH3OL+7wrjzWMCzY9PuajpxcH+NxPaJLim4/wDjGdQ3MZl1WFwBFDTSSQf+s/Zv/ZhdD9Xc/" +
                        "qWf071up4pxMlr3MLS1zN4ERaKrPfX9LZ/YTcnLmEeIThMA0eCWoTjz8Z4TCcLFjjGhf//R7P61/Vk9V" +
                        "aM3EMZ9LNgY4+2ysEv9H3e2qzc79FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY9rhsLXA7PsmS327LGu9ldn/A" +
                        "Fu39L/O9qub+tX1VZ1RjszDa1ue1sPYYDb2gR6dk+1tzW/zVv8A1q39H/MpTe+tHTHdT6Jk49bd17QLa" +
                        "Byd9Z3hrf8AjG7qv+uLE/xedXZbi2dJsd+kpJuxwe9bzNjR/wAVc7/wZR+qn1oex7ekdVc4ODvSx7rJD" +
                        "g4HZ9kyd3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf1X6ul2RU+x7Lm4jpfTfrXkNb6Z37LdzvU/0f/Eq5y0oZ" +
                        "McuXmeHiPHjkf0ZtTmYzx5I54Di4RwZIj9KH/oLc+t31rNzn9F6TNjrD6ORawbi4u9hxcdo+m9/0LH/A" +
                        "PW6/f8Azep9UPquej1Oy8szn5DQ1zAZbUyd3ogj6dm7+ds/7a/0lsPqn9UmdJY3NzWtf1BzYa0QW0tI/" +
                        "m6/3rXf4W3/AK1V+j/numQz5oRh7GD5P059csv+9ThwylP383z/AKEOmKP/AHzyn+Mj/kGr/wAMt/8AP" +
                        "dyzx/4tOjf+FKv/AD1kLpfrLhdOzsGrG6iLfRsyKmMfToW2PPo1Ocf9G51npfR/wiouZ9Xj1M9UYLTk9" +
                        "IfX08VMMtLn7aKNrHe6za7KdTv3/mWf6NPw5QMIjUiayx0Gl5eGMFmXETmMrG+OXj+r9UnS+sdbLOgdR" +
                        "bY0OAxrXAHxa02Md/Ze3cuAz22u+pXTH8sZk3s+BcbXMH4PXpNzcTPoycMvbYx7XU5DWOG5u8bXNdt/m" +
                        "37XKhi9L6JgdKf0iyxl2I0Ofa3Iewna5xJfZ9Da1tv0H/vpnL5xiiAQTIZBPh/q8MoFfzGH3JEggAwML" +
                        "/rcXE4n12vx+q9AqzenXNyace5r7thna17X17rWfTr2vez2Pas/pnScTqGIy9v1jtpdtAsosftdWQI9P" +
                        "a69vtb+Y76C6fpv1f6D0jJu9A+/qDdgotsDwWDc411Vv91jPd7t/qrLZ9UPqv1Kyy2oXYm263HFLXtDS" +
                        "+lzmWGllnrez2bv6n+DU2PPjjAwjKcYRPFHJwRlpP8ARlGX/SYsmGcp8ZEZSkOGUOOUfl/SjKKbof1Tr" +
                        "xep19XZ1Q55Zva4wHbiW+l7rvUs+gsf6lvY3pHXKS4C30i70zztDLGF3+f7V1n1e6R0vpWLbX02w3V2W" +
                        "F1jy8P9wAr2/ow1jdm1Yoq6CepV9Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67H13ei79Jucxn+j/AEv6RNjmM" +
                        "/djIynpDhlwxh/NH3OGUfT/AFkywiAxSiBD5+KNymP1w4OLi9TmdDv6NT9TLf2xW63GszSxjawS/wBQs" +
                        "rcx1TgW7HMa17t2/wD9Jqbfq3jU1Oz/AKvdebTWQCfUs9OPzv091JZt/wCLuxV0ON0zoXTMb/m/Ywvxs" +
                        "lj8ix+Q5paYfTTD3+zbbvtp9H02f4P/AEqo2/UH6tOyvT9e6u18uZji1hO0fuerXZfs/tp45iHFM8U4C" +
                        "cjP5Rkxzh/c/RWnl5cMBwwmYxEfm9vJCX99z8Tr3UOp/V/reJnObe/EoJbksAAcHb2w7YG1u/m/0T2s/" +
                        "SVp8e7oDfqb0ynrTXll1twpfUCX1uFt2+8Ob+bW13v/AJzf/obF0tHRug09Pv6RjhjKr6ybw182Frhs9" +
                        "d7yXWdva/6CVHROiO6WOi7W5WNjH3Me7c9rnE2+o57Nr6rXeo53s9NRnmMWvDGcI+4MlQ9BEeDg4h+76" +
                        "14wZNLlGcvbOP1eocXHx1/ivLO+r32Co53Qev1V45M/pLRW3/rllRdRa7/jMZbv1L67m9YwrvtoDrcZ4" +
                        "b6zRtDw4bvc0ez1Gfn7P5CpD6ifVdzftTcq00au3C2sshs7/wBL6e7azb7v0q6Xp2DgYGK2jp9basf6T" +
                        "dhndu/wheS51m799zkuYzY5YzGzknek5QGOUK6GX6SeXw5I5AdMcK1hGZnGd9h+i//S9VSSSSU859afq" +
                        "s3qbHZuE0N6g1vuZoG3tA/m3z7W3N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/bMloFlTXH062j6Ne1p9O25v5" +
                        "9//AFun9H/O9AkkpSSSSSmn1jEszOm30VfzxbvokwPVrIux/d/x9dax6OgZwzMG6ws2ms3Z/BjKab76T" +
                        "W389n2nqWRb/wCg1K6RJWMXu+2eGuG5Xffh/l/hsGX2uMcV8VDbtxPPfVvo+Tg2VnKqsZbj4/2Y2bqDS" +
                        "/3Nfuq+z11ZVm5zPVa/N/Ss9a78+yyxNX9XpycO23FpdszM2/JcQ0ksudkOxi7T9J9PG9v+D/60uiSUk" +
                        "ve457XR4uHi/dybf8//AA1kfa4I3fDYrir96Dx7+hda+wY2GKvdTTS2t7XVQx9V773NtvsacrZXS3H+x" +
                        "Nxfz/V9ZGf0DqxdnbdjhnjNqrc92uOLn2XU20bR/NZstZm/4f1PQ/wdXps6pJSH39f5v5pXX7ywezp8/" +
                        "wAsd/3XH6BgWYzr7rabcey1tTCyw4+39EHAek3p7Kq9rN/pepa31X1sq/0aDh9KzqmfV8WMAPTqnMyvc" +
                        "DtJo9D2/v8A6RbySgPucU/l21q6r2p/L/1NlHBwQviqxV1xX7sPm/w3K6j0r7b1FlttNd+OzEvqAsAcB" +
                        "ZY6nb7HfvVss96yW9H605+A26oE4pwXG1rqoikMbl+va5js27K3euyv07Psv2d/+k9Su3q0k7F7vCK4a" +
                        "r08d9/0UZPb4jfFd68NPGdHw3W4OLkV4bK6sazNvtzpZusa4ZWP6DWt/TOc99jHXer+h2Y1f857PSWH0" +
                        "XMzelY/2XFrwQOmCg2hzR9oNpx79n6Nr3+h6dFvqPyW7/Uy3/oLa/V9Xs0lMfd4jQjxcWms/wB7J+96f" +
                        "32KPt8Isy4eHXSP7sP3fV/3bzmL0N77Me27Hs2/bftGRVlGhwhuLbjV3V1YTW4388+ln+l/ReqtDpFGV" +
                        "hMbhHGbXjB2TY2xr27WB2Q9+LjtpH5rsa3f/wAF6fpLTSVfN7lHj4eHSq4uH9Ph4WfFwacPFeu/Df6PF" +
                        "b//2f/tGNBQaG90b3Nob3AgMy4wADhCSU0EJQAAAAAAEAAAAAAAAAAAAAAAAAAAAAA4QklNBDoAAAAAA" +
                        "JMAAAAQAAAAAQAAAAAAC3ByaW50T3V0cHV0AAAABQAAAABDbHJTZW51bQAAAABDbHJTAAAAAFJHQkMAA" +
                        "AAASW50ZWVudW0AAAAASW50ZQAAAABDbHJtAAAAAE1wQmxib29sAQAAAA9wcmludFNpeHRlZW5CaXRib" +
                        "29sAAAAAAtwcmludGVyTmFtZVRFWFQAAAABAAAAOEJJTQQ7AAAAAAGyAAAAEAAAAAEAAAAAABJwcmlud" +
                        "E91dHB1dE9wdGlvbnMAAAASAAAAAENwdG5ib29sAAAAAABDbGJyYm9vbAAAAAAAUmdzTWJvb2wAAAAAA" +
                        "ENybkNib29sAAAAAABDbnRDYm9vbAAAAAAATGJsc2Jvb2wAAAAAAE5ndHZib29sAAAAAABFbWxEYm9vb" +
                        "AAAAAAASW50cmJvb2wAAAAAAEJja2dPYmpjAAAAAQAAAAAAAFJHQkMAAAADAAAAAFJkICBkb3ViQG/gA" +
                        "AAAAAAAAAAAR3JuIGRvdWJAb+AAAAAAAAAAAABCbCAgZG91YkBv4AAAAAAAAAAAAEJyZFRVbnRGI1Jsd" +
                        "AAAAAAAAAAAAAAAAEJsZCBVbnRGI1JsdAAAAAAAAAAAAAAAAFJzbHRVbnRGI1B4bEBiwAAAAAAAAAAAC" +
                        "nZlY3RvckRhdGFib29sAQAAAABQZ1BzZW51bQAAAABQZ1BzAAAAAFBnUEMAAAAATGVmdFVudEYjUmx0A" +
                        "AAAAAAAAAAAAAAAVG9wIFVudEYjUmx0AAAAAAAAAAAAAAAAU2NsIFVudEYjUHJjQFkAAAAAAAA4QklNA" +
                        "+0AAAAAABAAlgAAAAEAAgCWAAAAAQACOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNBA0AAAAAA" +
                        "AQAAAB4OEJJTQQZAAAAAAAEAAAAHjhCSU0D8wAAAAAACQAAAAAAAAAAAQA4QklNJxAAAAAAAAoAAQAAA" +
                        "AAAAAACOEJJTQP1AAAAAABIAC9mZgABAGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABADIAAAABA" +
                        "FoAAAAGAAAAAAABADUAAAABAC0AAAAGAAAAAAABOEJJTQP4AAAAAABwAAD//////////////////////" +
                        "///////A+gAAAAA/////////////////////////////wPoAAAAAP///////////////////////////" +
                        "/8D6AAAAAD/////////////////////////////A+gAADhCSU0EAAAAAAAAAgABOEJJTQQCAAAAAAAEA" +
                        "AAAADhCSU0EMAAAAAAAAgEBOEJJTQQtAAAAAAAGAAEAAAADOEJJTQQIAAAAAAAQAAAAAQAAAkAAAAJAA" +
                        "AAAADhCSU0EHgAAAAAABAAAAAA4QklNBBoAAAAAA0kAAAAGAAAAAAAAAAAAAACBAAABYgAAAAoAVQBuA" +
                        "HQAaQB0AGwAZQBkAC0AMQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABYgAAAIEAAAAAA" +
                        "AAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5kc" +
                        "09iamMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCd" +
                        "G9tbG9uZwAAAIEAAAAAUmdodGxvbmcAAAFiAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVzb" +
                        "GljZQAAABIAAAAHc2xpY2VJRGxvbmcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlnaW5lbnVtA" +
                        "AAADEVTbGljZU9yaWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZVR5cGUAA" +
                        "AAASW1nIAAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZ" +
                        "WZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJnaHRsb25nAAABYgAAAAN1cmxURVhUAAAAAQAAA" +
                        "AAAAG51bGxURVhUAAAAAQAAAAAAAE1zZ2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABAAAAAAAOY" +
                        "2VsbFRleHRJc0hUTUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWduZW51bQAAA" +
                        "A9FU2xpY2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VTbGljZVZlcnRBb" +
                        "GlnbgAAAAdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51bQAAABFFU2xpY2VCR0NvbG9yVHlwZQAAAABOb" +
                        "25lAAAACXRvcE91dHNldGxvbmcAAAAAAAAACmxlZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b21PdXRzZ" +
                        "XRsb25nAAAAAAAAAAtyaWdodE91dHNldGxvbmcAAAAAADhCSU0EKAAAAAAADAAAAAI/8AAAAAAAADhCS" +
                        "U0EFAAAAAAABAAAAAQ4QklNBAwAAAAAEIoAAAABAAAAoAAAADoAAAHgAABswAAAEG4AGAAB/9j/7QAMQ" +
                        "WRvYmVfQ00AAf/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRD" +
                        "AwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMD" +
                        "AwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACEQEDEQH/3" +
                        "QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEB" +
                        "QYHCAkKCxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDB" +
                        "yWSU/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamt" +
                        "sbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBU" +
                        "tHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1x" +
                        "dXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMirKqDekt3" +
                        "+m7a0N2iPQdVYD6r7bP8Mx//gf6NXfrD1Y9I6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5fVukMzMut" +
                        "tdjnvaCyQ1wa7Z6jWuL3M/c+mn+1L2/d/Q4uD/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkklKSSSSUpJ" +
                        "JJJSkkkklKSSSSUpJJJJT//0PVVn9a61idHxPXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGxPXv99j5b" +
                        "RQ0+6x3gP3WN/wln+DXG9M6Z1H619Rfn57y3FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzfqv067KcH" +
                        "XZeTbc4NENaKzdVXUz+QxjmfSRerDqXS+ifV/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2ekrX+MHB" +
                        "qo6V08Y7BVRj2mllbRAAcxxb/56XQ9AdTl/V3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+WwT4eICc+O" +
                        "J2PFxR/6DRljOTmc0b4SYQ4ZDcV6v8ApsPq99YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u9Czvqxmt" +
                        "6t0hzhiB2h1cai4/wAxf/pcWz6LHu/4uz9L6VtnXfV76w43W8Xewenk1QMigmS0n85v79T/AMx6h5jl4" +
                        "iPvYTxYZf42OX7smXBnkZHFlHDlj/i5I/vxS9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/OV6q1l1TL" +
                        "qzLLGh7T5OG5qwfrx1HL6b0ivIw3NZf67Wtscxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3TcoVvysW" +
                        "qwNcyvaXltllri99T9vtrTcfKzyREhKMQeL5j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh10WZVdlj" +
                        "L3lk1hp2wNxc4Pcz/orm8jrH106E4W9XY3Lw7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXHysrMbndL" +
                        "vcX4Nm1jLILd36ZlNde2xjf0Vn8v/RqbDyV5I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9aX9V9NSX" +
                        "K1dT+sPQsPKzfrHbXks9jMSmvaHutO727666msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9NEMZub29" +
                        "Jt1dz9rvzPtNrP8xRDlJGz7mMQB4fcMvRKXaLIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy+pWB7MYh" +
                        "7WsYGhjNr7Htbt97/o/no/1X+suT1G63pnU6vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw19I61YGt" +
                        "eWM3BrxLTFdh2vb+cxPjgMcWeMwOMe1wy3+eW8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1zB+24jXs" +
                        "YHmtzbNu4ObB/wbrGfRc389aK4jp/1t6hjfVR/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+Yljs/xhZ" +
                        "uK3qFOZUGvG6ukGqSDxtApsp/7cvTfucxfHOEAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82nAwr82+fS" +
                        "x2OseGiTDRu9swh9J6nR1bp9PUMcObVdMNdEgtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2OFdljPZY" +
                        "QP5z0LN7Hem78/+j2f4NVLPrdn4X1Wwcp8ZHUc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRymQmhwn1+3" +
                        "ob14fc4v7vCuPNYwLNj0+5qOnFwf43E9okuKbj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1dz+pZ/Tv" +
                        "W6ninEyWvcwtLXM3gRFoqs99f0tn9hNycuYR4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9WT1VozcQx" +
                        "n0s2Bjj7bKwS/0fd7arNzv0Vn9i7/SU5n1T+s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2f8AW7f0v" +
                        "872q5v61fVVnVGOzMNrW57Ww9hgNvaBHp2T7W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3XtAtoHJ31n" +
                        "eGt/wCMbuq/64sT/F51dluLZ0mx36Skm7HB71vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHuskODgdn2" +
                        "TJ3e71d3sqe/wD4qz9J/O5/1h6DcM5/Vfq6XZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnLShkxy5eZ" +
                        "4eI8eOR/Rm1OZjPHkjngOLhHBkiP0of+gtz63fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qsf8A9br9/" +
                        "wDN6n1Q+q56PU7LyzOfkNDXMBltTJ3eiCPp2bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS0j+br/et" +
                        "d/hbf8ArVX6P+e6ZDPmhGHsYPk/Tn1yy/71OHDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/wA93LPH/" +
                        "i06N/4Uq/8APWQul+suF07OwasbqIt9GzIqYx9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1RgtOT0h9fTx" +
                        "Uwy0uftoo2sd7rNrsp1O/f+ZZ/o0/DlAwiNSJrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6B1FtjQ4D" +
                        "GtcAfFrTYx39l7dy4DPba76ldMfyxmTez4Fxtcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc123+bftcqG" +
                        "L0vomB0p/SLLGXYjQ59rch7CdrnEl9n0NrW2/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCADAwv+txcT" +
                        "ifXa/H6r0CrN6dc3Jpx7mvu2GdrXtfXutZ9Ova97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZAj09rr2+1" +
                        "v5jvoLp+m/V/oPSMm70D7+oN2Ci2wPBYNzjXVW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte0NL6XOZY" +
                        "aWWet7PZu/qf4NTY8+OMDCMpxhE8UcnBGWk/wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/VOvF6nX1" +
                        "dnVDnlm9rjAduJb6Xuu9Sz6Cx/qW9jekdcpLgLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDdXZYXWPLw" +
                        "/3ACvb+jDWN2bViiroJ6lX1Srp2ZZZ1Wl5pYzYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2OYz92MjK" +
                        "ekOGXDGH80fc4ZR9P8AWTLCIDFKIEPn4o3KY/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/AFCytzHVO" +
                        "BbscxrXu3b/AP0mpt+reNTU7P8Aq915tNZAJ9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC/GyWPyLH" +
                        "5Dmlph9NMPf7Ntu+2n0fTZ/g/8ASqjb9Qfq07K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzxTgJyM/lG" +
                        "THOH9z9FaeXlwwHDCZjER+b28kJf33PxOvdQ6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RPaz9JWnx7" +
                        "ugN+pvTKetNeWXW3Cl9QJfW4W3b7w5v5tbXe/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWuGz13vJdZ" +
                        "29r/oJUdE6I7pY6LtblY2Mfcx7tz2ucTb6jns2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH7vrXjBk0" +
                        "uUZy9s4/V6hxcfHX+K8s76vfYKjndB6/VXjkz+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOtxnhvrNG0" +
                        "PDhu9zR7PUZ+fs/kKkPqJ9V3N+1NyrTRq7cLayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx/pN2Gd27" +
                        "/CF5LnWbv33OS5jNjljMbOSd6TlAY5QroZfpJ5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1p+qzepsd" +
                        "m4TQ3qDW+5mgbe0D+bfPtbc3/A3f9at/R/zM/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07bm/n3/8AW" +
                        "6f0f870CSSlJJJJKafWMSzM6bfRV/PFu+iTA9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppvvpNbfz2f" +
                        "aepZFv/AKDUrpElYxe77Z4a4bld9+H+X+GwZfa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZuoNL/c1+6" +
                        "r7PXVlWbnM9Vr839Kz1rvz7LLE1f1enJw7bcWl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6JJSS97jnt" +
                        "dHi4eL93Jt/z/8ADWR9rgjd8NiuKv3oPHv6F1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLcf7E3F/P9" +
                        "X1kZ/QOrF2dt2OGeM2qtz3a44ufZdTbRtH81my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7Onz/ACx3/" +
                        "dcfoGBZjOvutptx7LW1MLLDj7f0QcB6Tensqr2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9OqczK9wO0mj0" +
                        "Pb+/wDpFvJKA+5xT+XbWrqvan8v/U2UcHBC+KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCwBwFljqdv" +
                        "sd+9Wyz3rJb0frTn4DbqgTinBcbWuqiKQxuX69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8IrhqvTx33" +
                        "/RRk9viN8V3rw08Z0fDdbg4uRXhsrqxrM2+3Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9JYfRczN6V" +
                        "j/ZcWvBA6YKDaHNH2g2nHv2fo2vf6Hp0W+o/Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn73p/fYo+3" +
                        "wizLh4ddI/uw/d9X/dvOYvQ3vsx7bsezb9t+0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0OkUZWExuEc" +
                        "ZteMHZNjbGvbtYHZD34uO2kfmuxrd//AAXp+ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/o8Vv//ZO" +
                        "EJJTQQhAAAAAABVAAAAAQEAAAAPAEEAZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwAAAAEwBBAGQAb" +
                        "wBiAGUAIABQAGgAbwB0AG8AcwBoAG8AcAAgAEMAUwA1AAAAAQA4QklNBAYAAAAAAAcABwAAAAEBAP/hD" +
                        "dBodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNM" +
                        "E1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvI" +
                        "iB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTItMTc6M" +
                        "zI6MDAgICAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L" +
                        "zAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sb" +
                        "nM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zL" +
                        "mFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwL" +
                        "zEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZ" +
                        "W50cy8xLjEvIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEu";
                    resourceString += "MC8iIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXA6Q3JlYXRlR" +
                        "GF0ZT0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxMS0wMS0xO" +
                        "FQwOTo1MTowNi0wNjowMCIgeG1wOk1vZGlmeURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiI" +
                        "HhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MzQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiI" +
                        "HhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MzM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiI" +
                        "HhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyR" +
                        "TQ3QzE5OCIgZGM6Zm9ybWF0PSJpbWFnZS9qcGVnIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b" +
                        "3Nob3A6SUNDUHJvZmlsZT0ic1JHQiBJRUM2MTk2Ni0yLjEiPg0KCQkJPHhtcE1NOkhpc3Rvcnk+DQoJC" +
                        "QkJPHJkZjpTZXE+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0Y" +
                        "W5jZUlEPSJ4bXAuaWlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3aGVuP" +
                        "SIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b" +
                        "3Nob3AgQ1M1IFdpbmRvd3MiLz4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2d" +
                        "DppbnN0YW5jZUlEPSJ4bXAuaWlkOjM0NEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2d" +
                        "Dp3aGVuPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZ" +
                        "SBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4NCgkJCQk8L3JkZjpTZXE+D" +
                        "QoJCQk8L3htcE1NOkhpc3Rvcnk+DQoJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJERj4NCjwve" +
                        "Dp4bXBtZXRhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/eHBhY2tldCBlbmQ9J3cnPz7/4gxYS" +
                        "UNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAAA" +
                        "ABJRUMgc1JHQgAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAA" +
                        "BRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAAA" +
                        "HBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAA" +
                        "CR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvc" +
                        "HlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJR" +
                        "UM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAA" +
                        "AAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJ" +
                        "KAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBod" +
                        "HRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "ABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAA" +
                        "AAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluI" +
                        "ElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2M" +
                        "Tk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAEE" +
                        "wsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "o8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFA" +
                        "EoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDbA" +
                        "OAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaA" +
                        "aEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKiA" +
                        "qwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5B" +
                        "AYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmB" +
                        "bUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB" +
                        "78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRC" +
                        "icKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZD" +
                        "PMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJE" +
                        "CYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE" +
                        "8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF" +
                        "9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9ocAhwqH" +
                        "FIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYIMQg8CEcI" +
                        "UghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3JicmVyaHJ" +
                        "rcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRLAUsOSxuL" +
                        "KIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUM" +
                        "w0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8O" +
                        "fk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQ" +
                        "WpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdS" +
                        "WNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbU" +
                        "eZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmW" +
                        "vVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZ" +
                        "JRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5rb" +
                        "sRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkqe" +
                        "Yl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAh" +
                        "OOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBuk" +
                        "NaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3n" +
                        "WSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaocq" +
                        "o+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfgu" +
                        "Fm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGx" +
                        "sPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1" +
                        "dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85" +
                        "YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9" +
                        "d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////2wBDAAEBAQEBAQEBAQECAQEBAgIBA" +
                        "QEBAgICAgICAgIDAgMDAwMCAwMEBAQEBAMFBQUFBQUHBwcHBwgICAgICAgICAj/2wBDAQEBAQICAgQDA" +
                        "wQHBQQFBwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAj/wAARC" +
                        "ACBAWIDAREAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEA" +
                        "wUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0N" +
                        "TY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp" +
                        "6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBA" +
                        "QEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhc" +
                        "RMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZ" +
                        "GVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0" +
                        "tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/igAoAKACgAoAKAGu6Ro8kjiO" +
                        "OMF5JHICqoGSST0AoA/Fbxl/wAF0P2VvC/xJu/Bul+EvE3jLwjpl0+lX/xJ8Pw6d9jlKOUM9nb3FzHLN" +
                        "BnkO2wkZKqRjMc6NFSZ+wfgnxp4X+I/hDw1498E6xF4g8JeL7K38Q+HdasifLuLS6jEsbgMAynB5VgCp" +
                        "yCAQRVmbR1FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAYPirQYfFXhjxH4XuLl7O38SWF5oM93a482JLy3e3Z03cblD5Ge9A" +
                        "H8RPjP/AIJcftveFPiTe/Dmy+Bmq+L9l0bHSPGnhlYpdBvYGkKxXAvpHSGBHUbis7IyZw4U1jys6lUR/" +
                        "YJ+yF8FdU/Z2/Zp+D3wY13U49X13wNpKWWvX1mS0BvrmeS+uEhZlQtFHLOyRsVBKgEgHitUjnk7s+kKZ" +
                        "IUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAB" +
                        "QAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAH+ev8A8FEP2sfGf7VP7UfxP8W3Xi+91T4d+HNbv" +
                        "tA+EGiG4lFjYaNp9wbS2mt4AxSOS4WITSuOSzHnAGP9oPBXw6wvD3D+Hoqko15wUqrtq5SV2m92o35Ut" +
                        "kkf4peN3iPiuIuIcRWdVyoQm40lfSMIuyaWycrcze92f1P/APBDj4ufFP4vfsR/bPipr154ou/BHizVv" +
                        "h/4O1/xBLNcXk+h2mnabeQrJPOzPKIZruaFCT8qIqDha/z5+llw3l+W8V8uEgoKpSjOSjZJTcpp2S0V1" +
                        "FN922+p/od9EjiXMcz4T5sXNzdOrKEJSu24KMGrt6uzk0uySXQ/Ymv5lP6fCgAoAKACgAoAKACgAoAKA" +
                        "CgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgCC6urayt" +
                        "ri9vbhLSztEe6u7u6dY4ooo1Ls7s5AVVAJJJwBQB8sftdfGzT/hj+xt8cvjh4a1iG5h07wVqOv+CNdsp" +
                        "VaCe71KwMGlyxyKcMsk1xEVI6g8V974W8PLNuI8FhGrxnVjzf4U7y/8lTPgPFXiJ5Tw3jsWnaVOlLl/x" +
                        "NWj/wCTNH+crX+4J/hif3b/AAP1Wz/4J8f8EkPCPjt9GhuNZ+HvgBfiddaNqG+NLrxJ4mP9qx21y64fH" +
                        "23UUgYg5CjC8AV/kXxZh5cZ+JFXD8zUatf2d10p0/dbXT4YuS89z/X/AISxEOCvDWliOROdKh7Sz61Kn" +
                        "vJPr8c1F+Wx9PfsVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDw" +
                        "rq6L8D4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf6B4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX" +
                        "2HX5mfpwUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFAEF1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+Uj/gpz/wAFOtS/a" +
                        "A1XUP2a/wBm/V3h+ErXA0Pxf400+TyZfFtyZBF9mgcldunBuCSR555P7v7+UpG8IW1Z+kn/AAWu1WH4Z" +
                        "/8ABNXxB4G0uYwWWv6l4P8AhrbDB3Pb2N7FqYXO1sZXTBnkZHGTnB/pz6JOWLEcaUZtfwoVJf8AkvJ/7" +
                        "d/W5/Lv0u80eH4KrQTt7WdOP/k3P/7b/Wx/Fp8OPCUvj74h+A/AsLOs3jXWdL8JRNBjeG1K+iswVyCM5" +
                        "k44r/VPPMyWDwVbEPanCUv/AAFN/of5Q5HlrxuNo4db1Jxj/wCBNL9T+0H/AILt61qPhT/gnvqXh7QNP" +
                        "uDo/ifxP4X8Ia0NNjleC1062km1WNpygYJF59hCgZiBvZBnJAP+XP0RcLDEcaRqVJLmhTqSV93J2i7d3" +
                        "aUnp0Tex/qh9L/F1MNwVKnTi+WdWnF22UVeSv2V4xWvVpb2P5Ef2Yf2nviz+yP8WdD+L/wg1w6bremn7" +
                        "JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP9JuPuAcu4ky6eDxkLweqa+KMukovo19zWjum0f5o+H" +
                        "/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqO" +
                        "gai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblq" +
                        "xOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAFAHKeOPHPg/4aeE9c8d+PvEdp4S8H+Gof7Q13xFrkq" +
                        "wW1tFuEYLM3dmYKqjlmIABJAoBI8j+A37V/7PP7TkGuTfAz4oWXj1/DbImu2FvDe2N7bLIzIkj2upwW0" +
                        "3lsVIWQJtOODSTuNxaPoemIKACgAoAKAPgbxH/wVC/YQ8H/ABV1z4K+LP2gbTw18RvDWqTeDNf0nXtG8" +
                        "S2lpaajbzGCSOXUZ9OWyVVcYMhn2d92K/YsD4A8X4nLoY6jgnOhOKnFqVNtxaumoqfPt05b+R+NY76QX" +
                        "B+FzGeBrY1Qrwk4SThUSUk7NObhyb9ea3mfesUsU8UU8EqzQTKssM0TBkdGGQykcEEdDX4/KLTs9z9jj" +
                        "JNXWqZJUlBQAUAFABQB8U/8FGPir4y+Cf7En7RPxK+H2qPofjPQNDW10DW7YlZrKbUr+30o3ELD7ssS3" +
                        "JeNuzAHtX6p4I8PYXNeK8FhcTHmpSneS6NRTlZ+TtZ+R+U+OPEWKynhPHYrDS5asYWi+qcpKN15q915n" +
                        "8hP/BK34hePvFn/AAUe/ZwuvFPjjWPEtzqurapLqlx4g1O9vJLlv+Ec1A5la5kcueBy2a/0o+kJk2Dw3" +
                        "A+OVKlCCjGNuWKVvfjtZaH+Z30d86xmJ46wLrVpzcpyvzSbv+7lvd6n93Gt63o3hrRtV8ReItVttC0DQ" +
                        "rabWNb1vWJo7a0s7S2jM0s00sxVEjRFLMzEAAZNf5Bn+w588fBH9sv9mP8AaO1/W/CvwW+L2neOPEnh6" +
                        "NrzU9Et4r6zufIR1jaaFNRgtzPErMoaSLcoJGTyKSaZTi0fTdMkKACgAoAKAPl34zftqfst/s9+LNI8D" +
                        "fGL4y6Z4L8W60kdzaaFcR3t3PFDLnZJc/2fBOLaNtp2vOUU9jSbRSi2fS+n6hYatYWWq6Vew6npepwx6" +
                        "hpupafIk0FxBMgkjkjkjJV0dSCrAkEHIpklugAoAKACgAoAKACgAoAgurq2sra4vb24S0s7RHuru7unW" +
                        "OKKKNS7O7OQFVQCSScAUAfyf/8ABUb/AIKjXPxwudb/AGe/2e9be0+DVo7af458c6ezRy+K5Y2w0EDDB" +
                        "XTlI5PWc8n93gPlKR0U6dj8mv2bvAHif4nfHj4TeC/CPhqfxbrGq69pbnRdPi80vawXkc9w8mcKsUcSM" +
                        "8jsQqqCSQBUouT0P6SP+Dh6eeH9if4bxxTPFHdfE/RILlI2KiRB4W8RShWA6jcitg9wD2r+xPoVwT4qr" +
                        "3W2Gn/6cpH8Y/Tam1wpQSe+Jh/6bqn8tH7E1tBeftmfsj2l1Ctxa3XxO8BW1zBKAyPG/iqxVlYHqCDg1" +
                        "/oJ4qzceF8yadmsNW/9NyP89PCeClxTliauniaP/pyJ/or+MPB/hb4geFtf8E+NtAtfFPhHxTazaJ4h8" +
                        "Pa3Ck9reWs6FHjkRwQQQfw6jmv8TMszPEYLEQr0JuFSDTjJOzTWzTP9wMzyzD43DzoV4KdKaalFq6ae6" +
                        "aP4if8AgqH/AMEvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf/A" +
                        "Fb8AfH7D8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Y" +
                        "f2nviz+yP8AFnQ/i/8ACDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6e" +
                        "DxkLweqa+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1" +
                        "p8Rfh1djTdf00Raf8RPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92" +
                        "ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAfl9/wV38DeNviX+" +
                        "yFP4D+Hnhy98XeLvE/inw7p+k+HPD8Lz3N0wnkmICJ/CoQuzHhQCxIAzUz2LpvU+AP+CTn7CX7XP7NP7" +
                        "TGqfEL4yfC6TwL4H1Twnqnhp9SGveHb7zbq5vrC6hhe30rULmbnyC3zJgFeSDipjFpl1Jpo/pArQxCgA" +
                        "oAKACgD/O0/4KJf8n1/taf9j74j/wDTjJX+13gp/wAkjlv/AF4p/wDpKP8AETxu/wCSvzL/AK/1P/Smf" +
                        "3XfsTXNxefsZfsj3l5O91d3Xwx8A3N1dXLs8kkj+FbFmZmYkliTkk9a/wAjvFWEY8UZkkrJYmt/6ckf6" +
                        "+eFFSUuFsslJ3bw1H/03E+na+CPvwoAKACgAoA/OL/grj/yjo/ae/7BWl/+pHp1fuH0bv8Akt8B/il/6" +
                        "bmfhn0lf+SHzD/DH/05A/kh/wCCR3/KRf8AZh/7Cuqf+o5qNf6PfSR/5IjH/wCGP/pyB/mx9Gr/AJLjL" +
                        "/8AFL/03M/sU/4KV6J4h8S/sQfHnw54T0u71vxJr9npOiaLouhRSz3l5PdeIbCBYIo4AXdpN23aBznFf" +
                        "43y2P8AZyG5+Jn/AATV/wCCen7Z3wO/bA+DXxf+Jnwfm8G/DjR4tfPiPWZ9d8NyyRRah4X1Gyt1ls7PU" +
                        "Zbk7riaIFfKJU4LAAEiIxdzWc00f1NVqYBQAUAFABQB/I/+29+w1+1r+01+23+0t4y+Dvwfv/GPhe11b" +
                        "TdMXxJf32laTZzPb+HtPiMdvNrt3ZrN5eArCIttxg4xispRbZ0Rkkj+j/8AYq+H/jn4U/sp/Av4cfErT" +
                        "G0Xxz4M0G30HxFpEt1bXptpYHdVi86zlnicKm0DY5AHA6VpHYxk9T6hpkhQAUAFABQAUAFAEF1dW1lbX" +
                        "F7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+T//AIKjf8FRrn44XOt/s9/s9629p8GrR20/xz450" +
                        "9mjl8VyxthoIGGCunKRyes55P7vAfKUjop07H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0fR9PAyxx" +
                        "ueSR2wscUagvJI5CooLMQBUJGjdj+1H9gH9gHwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6f5gDR2kb" +
                        "AZOA0rAO4GERNoxsc053Pj3/g4L0ObVv2GvDF/Fu2eGPiHoGuXOxQRsk0bWdNG4kjA3XY59cCv62+hni" +
                        "1T4tqRf26E1/wCTU5f+2n8h/TTwjqcI05L7GIg//JKkf/bj+S79lTxHF4P/AGof2bvFs7pFB4W8feD/A" +
                        "BHNJchmjVLHxDaXJLhCCVATnBzX+jXiHgXieH8dRW86FWP3wkj/ADd8OscsLxBgKz2hXpS+6cWf6Tlf4" +
                        "Yn+7ZzfjDwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8RgsRCvQm4" +
                        "VINOMk7NNbNM4czyzD43DzoV4KdKaalFq6ae6aP4if+Cof/AAS88U/sWeKbj4kfDe3uvFP7NHim68vR9" +
                        "Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/9W/AHx+w/FOHWGxLUMfBarZVEvtR8/wCaPTdabf5NfSC+j" +
                        "7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307WdOd1aax" +
                        "voVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8" +
                        "M49YyXVP707NNNJn95/7FX7avwm/be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwTh" +
                        "Qsig8K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Z" +
                        "ls12aaX2HX5mfpwUAfnt/wVB/ac8f8A7JX7IHjf4r/C1baLx9Le6X4P8OatqsKXMOnS6nc+W915EoZJX" +
                        "jjVvLVwU3kFgygq37R4A8BYPiPiWlhMXf2NpSkk7OXKvhutUm7Xa1tezT1X4p9IHj/G8N8M1sZhLe2vG" +
                        "MW1dR5n8Vno2leyel7XTWj/ABr/AOCN37eX7W/7SP7XGo/Dz43fGi+8feDYfB+s+IotC1Cy0i3jF7bXu" +
                        "nxRS7rG0gfKrM4xuxz0r+nfpO+EHDeRcNxxOBwqpVXVjG6cno1K61k10R/Lv0XfGLiXPeJZYbH4qVWkq" +
                        "M5WaitU4pPSKfVngH/BSH/gpD+218Fv22vj58MPhh8fNQ8JeA/CWoafZ+HfDtnp+hzR2sc2h2V06q91Z" +
                        "SyHMkrN8zHrX2Xgd4HcKZrwpg8VisHGpWqRk5Scpq9pyXSSWyXQ+M8dPHTizKuLMZhMJjJU6NOUVGKjB" +
                        "2vCL6xb3b6nxB/w9x/4KL/9HPar/wCCvw5/8rq/V/8AiW7gj/oAj/4FU/8Akz8l/wCJleOP+hhL/wABp" +
                        "/8AyB6B8P8A/gtb/wAFD/A2rQ3+ofGG0+I2nI/nT+G/iB4f0Wa0mPAw0umW9jdKOOiTr+dePnP0V+CsX" +
                        "TcY4Z0pfzQnNNfKTlH74s9nJfpW8b4OopSxSrR/lnCDT+cVGX3SR+7H7Mv/AAVU8C/8FBPCt18BLzxxq" +
                        "P7Gf7UWtxhfAvifw7LYahpmo6jGhCCybVoHjkLt9+xnQOynEUzONy/yNx59HrF8GYhZhGlHMMvj8cZJx" +
                        "lGPXm5XdW6Ti7J6yilo/wCv+AfpE4PjTDvLpVpZfmEl7kouMoyl05eZWd+tOSu1pGTeq/G79qP9tX/gr" +
                        "N+yN8Y/EnwY+K37Rmp22taMReaPrVlpXh42Gs6XK7Lb39m76aC0MoQ9QGVgyMAysB/Tvh/4V+HPEmWU8" +
                        "bhMDFwlo05TvGS3jL3919zVmtGj+XfELxW8SOGs0qYHGY6SnHVNRhaUXtKPubP707p6pn5EePPHXiz4n" +
                        "eM/E/xD8d6y/iHxl4zvbjxH4n125SGOS7vbqQyyyssCRoCzEnCqB7V/SWUZRhsBhaeGw8eSlTSjFa6Jb" +
                        "LW7P5ozjN8TmGKqYnES56tSTlJ6at6t6WX3H2b4O/4Kh/t6fD/wh4V8B+D/ANorUtE8I+CdNsfCPhbRY" +
                        "NN0CRLPTtNtUs7aBWmsHdhHFGqgsxJxySa/L8z8AOD8biamIrYGMqlSTlJ809ZSd29JW1bvofqWV/SC4" +
                        "xwWGp4ehjpRpU4qMVyw0jFWS1jfRK2p/W5/wSO/aq+LP7W/7JR+IXxsMd34z8J+I9T+Hc3iyG1jshrdr" +
                        "Y2NjfJfPFAkcIfN40LmJQhaMnAORX+cP0kPDzLuG+I/q2BuqU6cZ8t78jbkuW7u7e7dX1s/Q/0n+jV4i" +
                        "5lxLw39Zx9nVp1JQ5rW50lF81lZX95xdla8e9z89v28/wDgvBp/w88Q658KP2O9I0/xprejvJpev/Gnx" +
                        "Or3Ojw3CqUdNKtInT7S0bH/AI+JWEW5SFjlQh6/aPCD6Ic8bRhi86lKnCWsaUdJNf35a8t/5V71nrKL0" +
                        "PxTxi+mDDA154PJYxqTjpKrLWKf9yOnNb+Z+7daRktT8JfFX/BT/wDb+8Y6nLq2q/tUeKrG5lLOYPCt1" +
                        "DodqN2OFt9GitYgBjj5f61/XOXeAfBuFp8kMvpNf3k5v75Nv8T+QMx+kBxniqnPPMaqf91qC+6CivwPf" +
                        "vgN/wAFr/26Pg5q1ifFXj2H45+EYnQX3hf4oWsEs7xfdfytSs0hu0kI+60jyKCASh5B+O4w+itwlmdN+" +
                        "yovDVOkqbdvnB3jb0Sfmj7Tg76V3F+V1F7assTS6xqJX+U1aSfq2vJn9Y37Dv7e/wAGf26vAFz4m+H0r" +
                        "+HPGvhwRQ+P/hfrk0b6lpMso+WRWQKLi1kIIjnVQDghlRgVH+dPix4PZpwjjFSxPv0p/BUS92Xl5SXWL" +
                        "+Ta1P8AR3wk8ZMr4vwTq4b3KsLc9Nv3ovv/AHovpJL1Sehwf/BXH/lHR+09/wBgrS//AFI9Or2Po3f8l" +
                        "vgP8Uv/AE3M8f6Sv/JD5h/hj/6cgfyQ/wDBI7/lIv8Asw/9hXVP/Uc1Gv8AR76SP/JEY/8Awx/9OQP82" +
                        "Po1f8lxl/8Ail/6bmf2m/tyfHTxJ+zV+yb8b/jd4OsbfUPFfgXSVufDkGrKz2y3t7ewabDLKikF1ia4E" +
                        "hTI3bcZGc1/lr4TcJUM94jwmBrNqnVl71t7JOTS7Xta/S9z/VTxc4vr5Dw3i8fRSdSlD3b7XbUU33s3e" +
                        "3W1j+bb/gmB/wAFGv20vj9+3l8Evhj8W/jpe+L/AAB4wfxRN4h8Lzabodrbzmz8IatqcAzY2ULoI54Ec" +
                        "BWH3QOnFf3L4++CHC2TcIYvFYPCKnWp+z5Zc021erCL3k07pta9z+E/o/eOXFWc8Y4TCYzGOpRqe05o8" +
                        "sEnalOS2imrNJ6dj+j79sz9s/4RfsR/CmT4l/FG5kv77UpG0nwN4F0Zo/7T13UFUOYoBIQqRxqQ00zfK" +
                        "i46syK38PeF/hdmXFeY/VcIrJazm/hhHu+7eyS1b8k2v7o8UvFPLOE8u+tYtttu0IL4py7LslvJvRLu2" +
                        "k/5Kfj1/wAFwv24fi7qd6ngbxVZfAXwjI7Cy8P/AA7s7ea9EXIXz9S1KOadpADy0Pkqf7or/R3g/wCif" +
                        "wnltNe3pvFVesptpX8oRaVvJ8z8z/NrjH6WvFuZ1H9XqLC0ukYJN285yTd/Ncq8j44h/wCCg37c0GpHV" +
                        "U/a3+ITXRQQ+VN4r1iS2wrBv+PeScw545OzJHGcE1+my8GeEnT5P7NoW/69xv8Afa/4n5fHxq4uVTn/A" +
                        "LSxF/8Ar5K33Xt+B96fs7f8F3v2xPhVqenWfxen079oTwTG6RX9n4ktbbStbjtx1+zajpUMal++64hmz" +
                        "046j8g42+iJwzmNOUsGpYWr0cW5Qv5xk3p/hlE/YuCPpg8UZdUjHGuOLpdVJKM7eU4pa/4oyP6yP2Tv2" +
                        "tPhD+2X8J7P4tfB/Up5dME7aJ4j8O63EsGp6NqccSTPaXUaM67gsisrozIykEMeQP8AOjxF8Ocy4XzF4" +
                        "PGRXNa8ZLWMo7KUX8mrNJp7o/0f8OPEjLOKctWMwUny3tKL0lGW7jJarZp3Taa2Z/Nn/wAFSf8AgqT+2" +
                        "F8Mv2wviR8GPgx8SD8K/AnwrOn6FaWmhafpdzcajcXOl22ozXV1NqNtcNu3XBREQqoVRwWJJ/ub6P30f" +
                        "uGcfwzQxuNoe3rV+ZtuUkopScUkotdrtu7bfayP4S+kL9IXifL+J6+BwNf2FGhypJRi3JuKk23JPvZJW" +
                        "SS73Z/RH+wT8S/F/wAVP2Mf2f8A4ofEzxE3iHxh4q8Ox654q8S3628DXE3nShpXECRRr8qjOFA4r+KfG" +
                        "DIsNl/FGMwuFhyUoVLRiruystNbs/tzwcz7FZjwrgsXip89WdO8pOyu7vXSyPxA/bh/4L4aloPirXPht" +
                        "+xjo+m6pYaJLJpmofG/xZC17BeTRkq7aRZ7kRolYfLcT7hJyVj27Xb+r/Cf6HtOth4YrO5Si5K6pRdml" +
                        "/flvfvGNmusr3S/kzxb+mRUo4ieFyOMZRi7OtJXTf8AcjtbtKV0+kbWb/Enxj/wUq/b28c3V1ea1+1f4" +
                        "zspbzb5yeDtWk8OxDawYbIvD4skj5HOxRkcHiv6ryzwL4PwkVGGXUWl/NHn/GfM38z+Ts08eOMsZJyqZ" +
                        "lWTf8suRfJQ5Uvkdn8NP+CsH/BQH4X6hBeaZ+0hrPiu1Rle60j4li28R29wigDYzatHNMgO3kxSI3XnJ" +
                        "NeXnv0deDcwg4ywMIPvTvBr/wABaT+aa8j1ch+kdxpl81KOOnUXapaon/4Em18mn5n9Fv8AwT0/4LVeC" +
                        "/2o/FPh74KfHXwvb/Cz40+I5F0zwnrPh1ppPDev3ZUkQILp5JrK4cjEcUjyK54EgYqh/ibxp+ixiuH8P" +
                        "PHYCo62FgryUre0gu+llKK6tJNfy2TZ/cHgn9KzC8Q4iGBzCmqGLm7Rcb+zm+2t3CT6JuSf812kfuxX8" +
                        "jH9fBQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/k/8A+Co3/BUa5+OFzrf7Pf7Pe" +
                        "tvafBq0dtP8c+OdPZo5fFcsbYaCBhgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz40ePPDfwz+GfhufxX4" +
                        "08VzjT9H0fTwMscbnkkdsLHFGoLySOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiuCNfiD8QVjO" +
                        "FGRJ/Z+n+YA0dpGwGTgNKwDuBhETaMbHNOdz9Caog/N3/grl8OZviX/AME9P2jdMs4PO1Hwxptl8RrNg" +
                        "CTGnh3VbbVrpsD/AKdYJh7ZzX7l9G7O1gONMDKT92cnB/8Ab8XFf+TNH4V9JXI3j+CcdGKvKEVNf9uSU" +
                        "n/5KmfwIW1zPZ3Fvd2szW91aulzbTxEq6SIwZWUjoQRkV/sTOClFpq6Z/jTTm4yTTs0f6XvwM+JVj8ZP" +
                        "gv8J/izp0iSWnxI8O6N41TyeiNqWnxXTpjAwUZypBGQRg1/hLxbkU8rzTE4OW9GpKH/AIDJq/z3P96eE" +
                        "c+hmmVYbGR2rU4z/wDAop2+Wx6pXzx9Ec34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoU" +
                        "eORHBBBB/DqOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gqH/wS88U/" +
                        "sWeKbj4kfDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/wDVvwB8fsPxTh1hsS1DH" +
                        "wWq2VRL7UfP+aPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v8Aw" +
                        "g1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1" +
                        "o7ptH434f8AiBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf32fsb/ALV/gT9s74D+Gfjd4EtpdITUJJtB8" +
                        "WeFr91kuNG1qzCG5tHkQBZABIkkcgA3RujEKSVH+O3id4d4zhfN6mBxDUrWcZLaUHtK3TZpro01drV/7" +
                        "KeF3iNg+Ksnp4/DpxveMoveM1vG/XdNPqmnZPRfU1fnx+hn4z/8F4v+Uf3iH/safDP/AKUyV/T/ANEP/" +
                        "ksof9eqn5I/lv6YX/JFz/6+0/zZ+H//AAb/AH/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+kzP5K+hh/" +
                        "wAlfL/rxP8A9KgfLn/BXH/lIv8AtPf9hXS//Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGYf4o/wDpu" +
                        "B/Q/wD8E0/2A/2Nvi3+w5+z/wDEX4k/s9+H/GHjfxPp2o3Wv+JNXhna5upItdvrZGcpKoyEjVRx0FfxX" +
                        "47eMXE+W8WY3DYXG1KdKEo8sU1ZXhF9u7P7a8BvBrhfMuEcFicVgqdStOMuaTTu7Tku/ZI9c+Pv/BEb9" +
                        "h/4u+Hb+DwH4Km+BHjUxt/ZPizwBd3ktsswA2C406/nlt5IwR8wjEbnP3xxXzfB30reLMtrp4iqsTS6x" +
                        "mle3lNJST9eZeR9Lxl9E3hLM6DWHpPC1ekoN2v5wk3Fr05X5n8ff7Tv7N3xX/Yx+Omt/CT4hA6d4p8LS" +
                        "Qa94Y8U6G8sdvqVhJIXs9SsZflbYxjOCMMkishwyED/AEu4C45y7ijKIYzDa053Uou14v7UJL5+jTTWj" +
                        "R/mRx/wJmXCubzweJ0qQs4yV7Sj9mcX209U009Uz+tT9hDXfgL/AMFVf2XfAfir9qL4YaL8VvjH8Cprn" +
                        "4Z+LNR8RwE3DSvHBPHeqYnRtt7AsbSfw+csm0AcV/nJ4u4POPDziCtSyrEToYXEpVIqL06px/7cd0uvK" +
                        "43P9JPB/GZN4i8PUa2bYeFfFYZunJyWvRqWn86s305lKx/J7+2/4N8L/Dv9r/8AaS8C+CdFh8N+EfCXj" +
                        "HXdB8N6DpwKwWdnbXzxxRRhiSFVRgZNf6KeFGaYjG8NYHEV5udWdGDk3u20rtn+cXi1leHwPE2Pw9CCh" +
                        "Sp1pxjFbJJuyR/Xz+yP/wAE5f2HvHH7KX7MfjXxb+zX4b13xV4v+HvgvxR4m1y+huDPeahqHhuzu7ieQ" +
                        "rMAXkkkZmwOpr/NXxI8buLMJxFj6FHHVI06derGKTVlGNSSSWnRKx/pn4a+BvCWL4cy+vWwFOVSph6Up" +
                        "Np3cpU4tt67tu54J/wWe+O+jfsc/sieCP2YvgFpFl8Mj8a2v/CsGleCoItPi0zwpYLHLqiwx2oUI15Jd" +
                        "xxOxGXV5jksSR9j9F3hCrxPxLVzTMJOt9XtK825OVR35Lt78qi2l0aj0PjfpT8YUuF+GaOVZdGNH6zzR" +
                        "tBKKjTjZzsltzOSTfVOXXU/nV/4J4fsI+Lv28fjRJ4IsdTk8KfDjwdDF4g+KvjuGETPY2UrskFvbo5CN" +
                        "dXboyxBjhVV5CGCFW/tjxq8XcNwhlft5R569R8tOF7XfVvryx3dt20tL3X8QeCXg/ieMc19hGXJQprmq" +
                        "Ttey6JdOaT0V9km9bWf9j/wu/4JcfsFfCjw5B4e0v8AZr8N+L2WH7Je6/8AFGxh8TajdOV2vK0usLOI3" +
                        "Y8/uVjVT91VHFf5j8QfSA4wzGu6k8dUp63UabdOK8rRtdf4m2+rZ/qFw99Hvg7LaCpQwFOppZyqJVJPz" +
                        "vK9n/hSS6JH58/t7/8ABD/4MfEHwN4j+IP7JPhpPhf8XdEhl1iD4e6bPKfD/iERKZHto4bhnFncuBiFo" +
                        "isRbCug3eYv7N4PfSvzTBYuGHzip7bDSdudr34eba+KK+1e8rapu1n+LeMf0S8qxuEqYnJ6fscTFX5E/" +
                        "cnbok/hk/s2tG+jSvzL+Yj9kr9o/wAa/sfftEeA/jN4ba5gn8JXy2HjXw2jGE6poksqxajp0ySYGZIwd" +
                        "m8fJKqPjcgx/e/iPwPheJskrYKrZqcbwlvyzXwyXo97bxbWzP4A8NuOsXwxndHHUrp05WnHbmg/ji/Vb" +
                        "X2kk90f2j/8FUNf0nxX/wAEyP2gfFGgXi6joXiTw9oOv6LqEQIWe0vNd0y4hkG4A4ZHBGa/y3+j5g6mH" +
                        "49wVKorThUnFrs1Caa+8/1S+kRjKWJ4AxtWm7wnThJPunODT+4/k5/4JHf8pF/2Yf8AsK6p/wCo5qNf6" +
                        "K/SR/5IjH/4Y/8ApyB/nF9Gr/kuMv8A8Uv/AE3M/re/4K4/8o6P2nv+wVpf/qR6dX+cP0bv+S3wH+KX/" +
                        "puZ/pP9JX/kh8w/wx/9OQP5Sv8Agi7/AMpLf2bP+5x/9QHXK/0O+lH/AMkJjv8AuF/6epn+dH0V/wDkv" +
                        "cB/3F/9M1D6j/4OF9f8TXn7Yvw88OalPKPDOheAtO1DwxYuGEAkv9Z1MXU6Z4LyNbojEdo1HavgPoXYO" +
                        "hHhivVil7SVeSk+ukYcq+V216s/QvpsY2vLiihSk37ONCLiunvTnzP1dkn6I8w/4JWeEP8Agl/r9zq91" +
                        "+2p4vEXxQW+VPB/hX4lSXWkeC1skVCszXtnKsUsxcsHS8kjjC4wj8sPf+kJmXH9GMVkdL/Z+X3pU7Sq3" +
                        "7crV0rbOCbv1Wx8/wDR3yzw/rSk89q/7Rze7GpeNK3fmTs3fdTajbo9z+rDS/2Jf2AfGnhO2k8PfswfC" +
                        "zxB4X1WFVsPEHhjwt4al8+IHh4tQsYPMJ4++suT61/nliPFXjLC4lqpmGJhUi9YyqVNH5xbt8mj/RXD+" +
                        "E/BmLwydPL8LOnJaSjTp6ryklf5pn5Q/thf8EBPhp48C+J/2PfEFv8ACHxNLMW1PwD4+vNSu/DM8bksX" +
                        "t7lIr28tXUk/KRKhGAojxz/AET4Z/TGx+D/AHWcwdenbScFFVF6q8YyXn7r7tn85eJ30M8BjP3uSzWHq" +
                        "X1hNydN+jtKUX5e8uyR9+/8Evf2DNZ/YM+C3ibwj4y8Y2njL4g/EHVl8VeK7jwws40mzEFqlpBbWr3cc" +
                        "MsoUBmaV40yWxsG3Lfjnj94v0uMM0p1qNJ06NKPLHmtzO7u27NpdEkm9t9dP2b6Pvg7V4OyqpRr1VUr1" +
                        "Zc0uW/KrKyUbpN9W20r3tbTX+TP/grj/wApF/2nv+wrpf8A6jmnV/ov9G7/AJIjAf4Zf+nJn+b/ANJX/" +
                        "kuMw/xR/wDTcD+hH+3vE3hr/g3/AIdU8I3M1nrB+GUWlvcWIJlWxv8AV1sL7G3kA2s0oZuwye1fxj9To" +
                        "V/GRwrJOP1m+vdRvH/yZI/tT65iKHgwp0W1L6tbTtKVpf8AkrZ/JB8F7H4Tal8VfAtj8dte1bwz8Ibi/" +
                        "iXx9rnge0ivdVgsACzfZ4pmVcswCs+GKKS4SQqEb/R/imtmVPLq0sBCM8So+4pu0W/Nr77aXejaTuv82" +
                        "OFaOW1MxoxzCcoYZy99wV5KPkn919bLVKTVn/bD+yX+zv8A8EgPHvha0sf2dvAPwy+MYigEt3F4ut7Px" +
                        "P4iCgLulurbxUs97AWIzhokUchQBxX+VviNxr4l4PEOWZVsTh9dOVunD0Tp2g/vb7s/1c8NuCPDLGYdR" +
                        "y2jhsRprzJVJ+slUvNfcl2R2fx5/wCCQ/7Cfxz0S/tIvgxYfCHxJMjLpfi/4MRR6BLaSEcN9itVFjKuc" +
                        "ZWSA8dCp5ry+EPpJ8XZTVUnipV4dY1ffT/7efvr5S9bnqcY/Rn4PzelKKwscPU6Spe41/26vcfzj6WPy" +
                        "6/Zd/4IL/FX4N/tV/Dz4q+PvjN4d1v4WfCTxDYfETw0PCiaouv6rc6Lex6hYx3Nrd2y29qjSxKZtlzMd" +
                        "oKr97cv7/4gfS/y7NOHq+Ew+FqRxFem4S5uXkippxk00+aWjdrxjrq9rP8An3w++h1mOV8RUMXiMVTlh" +
                        "6FRTjy83PJwalFNNcsVdK9pS00W91/T1X8Dn9/hQB4p+0V8EtH/AGjPgt4/+C+u+INR8Lab47sjpcuve" +
                        "GJ3gurd1kWZCQrKJYiyASwsdsiEqcZyE0OLsz+Fv9qD9l/4pfsmfFLVPhd8UdL8m5h3XvhvxJZK507Wt" +
                        "OLlY7u0kYDKnGGU/MjZVgCKxasdUZXPb/8Agnh+2m37FPxom8Xap4Wg8U+BPGtvD4X8fxw20Daxa2Kz+" +
                        "aJ9PuJAGV42+Z4dwSYABsMqOji7CnG6P7bPh38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdLfdFNE2QQ" +
                        "QQGR0YFXRgGRgVYBgRWxytHaUAc34x8KaL488IeKvA/iS2+2eHfGem33hTX7P5f3tlqNq9nOnzBh80ch" +
                        "HINd2WZjVweJp16TtOnJST7OLuvxRw5pl1LGYaph6qvCpFxku6krP8ABn+ad8Wvht4g+DnxR+Ifwo8VR" +
                        "GLxF8OdZ1LwXq+5GjEk2nXb2pkQNn5JNm9DkgqQQSDmv91uHM9o5nl9DF0vgrQjNekle3qtn5n+DXEmR" +
                        "VsrzCvg6y9+jOUH6xbV/R7ryP7BP+CCH7Rdr8T/ANk3UvglqmoCXxd+z5qk2nW9rKcyP4e1yaXU7KXLH" +
                        "LbJzcw4Awqog7gV/mj9MLgmWA4jjjoR/d4qKd/78EoyXzXK/Ntn+nH0OOOI5hw3LATl+9wkmrf3Jtyi/" +
                        "lLmXkkj90a/kk/rsKAP5UP+Cw//AAVe0vxfY+Lv2Qf2btVt9X8MXW/QPjT8ULTy7iC+2PiTStMc7lMQZ" +
                        "cT3C/eI2Rnblm/0N+jN9Haphp085zOLjUWtKm9Gu05+f8sem71sl/nV9J36RtPFQq5LlklKm/dq1Fqn3" +
                        "hDy/ml12Wl2/wCbrwf4P8U/EDxToHgnwToF14p8XeKbqHRPD3h7RIXnury6ncIkcaICSST+HU8V/ceZ5" +
                        "nh8Fh51681CnBNyk3ZJLdtn8K5ZlmIxuIhQoQc6s2lGKV229kkf3xf8Evv2O9f/AGJ/2WtM+GPjPU4dQ" +
                        "8f+LNWu/if49g0x/NtLHUtRs7SxFpDIOJBDBZRK7j5WfcVyuCf8evH3xNo8VcQSxVCLVGEVThfRuMXJ8" +
                        "zXS7k2lula+p/sj9H7wwrcJ8PRwteSdapN1J21SlJRXKn1sopN7N3tofolX4oftx+M//BeL/lH94h/7G" +
                        "nwz/wClMlf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/YheIP/AE46XX9YfTJ/5" +
                        "JGP/X+H/pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy/8ATkz8+" +
                        "+kr/wAlxmH+KP8A6bgf1vf8Ejv+UdH7MP8A2CtU/wDUj1Gv84fpI/8AJb4//FH/ANNwP9J/o1f8kPl/+" +
                        "GX/AKcmfo7X4efuZ/NV/wAHG/w60S4+HH7OXxaS1ji8R6Trep/Dqe9RQJp7LULD+040cgfMsUlk5QE/K" +
                        "ZGx941/dX0Ic7qxx2Owd3yShGduicXyt/NSV+9l2P4O+nJkdKWBwOMsvaRnKnfq1JcyXycXbtd9zxT/A" +
                        "INwfEWpwfET9qDwksxOjanovh3xFPbsSQLmxvru2RlHQZS7YH1wPSvqfpw4Km8Fl9a3vKc4/JqL/wDbU" +
                        "fKfQYx1RY7MKN/dlCEvmnJL8JM/GX/goFqEGp/tyftcXNsGEcfxE8W6e3mgA+Zaa1cWj9CeN0Zx7V/UP" +
                        "g1RdPhPLU/+gem/vgn+p/LXjRWVTi7M2v8AoIqr7ptP8j+7f9h3/kyr9j//ALJd8P8A/wBROwr/ACL8W" +
                        "P8Akqsz/wCwmt/6ckf6/wDhJ/ySmWf9g1H/ANNxP5pv+DjB7w/tJfAeNzJ/Z6+B5HtQ27yvObXrwS7e2" +
                        "7aE3Y7Y9q/uv6Eij/YWMf2vbfhyRt+v4n8G/Thcv7ewa+z7H8eeV/0/A/Dr4b/8Lx8jVv8AhUP/AAlf2" +
                        "bfD/bv/AArf+19m/D+V5/8AZfGcbtu73x3r+sc8/sm8frnsr629py/O3N+Nj+SMi/te0vqXtbaX9nzfK" +
                        "/L+Fz0z/jNX/qqP/l2V4P8Axiv/AFDf+Uz3/wDjK/8AqJ/8qB/xmr/1VH/y7KP+MV/6hv8AymH/ABlf/" +
                        "UT/AOVDzS5+C/xzvLie8vPhP4suru6d7m6urnQtYeSSR2LMzM0BJYk5JPWvehxTlMYpLE0kl/fj/meDU" +
                        "4VzeUnKWGqtv+5L/I/ru+Pket2//BBKzs/EdtcWetad8LfAml31lqsTwXMJtb7SLZY5I5FVlZFQKQwzx" +
                        "zzX+bPB0qT8YHKk04PE1mmtU7qbun5n+l3GcasfBxRqpqaw1FNNWas6as15H863/BI7/lIv+zD/ANhXV" +
                        "P8A1HNRr+2PpI/8kRj/APDH/wBOQP4h+jV/yXGX/wCKX/puZ/W9/wAFcf8AlHR+09/2CtL/APUj06v84" +
                        "fo3f8lvgP8AFL/03M/0n+kr/wAkPmH+GP8A6cgfylf8EXf+Ulv7Nn/c4/8AqA65X+h30o/+SEx3/cL/A" +
                        "NPUz/Oj6K//ACXuA/7i/wDpmof1kf8ABQP/AIJ3/C/9vXwNpWn+INRfwR8UPBS3DfD74labAs72wuADJ" +
                        "aXkBZPtFo7KrFdysjDKMMuH/wA6fBrxqzDg/FylTj7TD1Lc9Nu17bSi/syW17NNaNOyt/o/40eCOX8Y4" +
                        "OMakvZ4infkqJXtfeMlpzRe9rpp6pq7T/kp/aE/4JDftzfs+zajeT/Ceb4r+ELEvJH4y+DTPrkTxINxd" +
                        "7KJFv4gq8sXtwo5wxAJr/Rzgv6SnCWcqMViVQqv7NX3Nf8AF8D8rSv5H+bXGv0Z+LslcpPDOvSX26Xv6" +
                        "f4V7687xt5nxR8O/jJ8dv2efEV5cfDL4jeJfhD4jt5RFrFt4a1DUNJkeSE48u7gjeMSAHgpKpHqK/VM7" +
                        "4YyjOqCWKoU68GtOaMZb9YvW3qmflOR8UZxkldvC16mHmnryylHbpJaX9Gj9gf2dv8Agvz+1R8ObvTtL" +
                        "+O2haT8ffCaFIb7UWgh0DxEkY+XdHc6bGLVyo5IktSzkDLrkmv5p41+hzw9joyngJywtTorucPmpPmXy" +
                        "lZdnsf03wR9MviLAyjDMIRxVPq7KE/k4rlfzjd91uf1L/snftefBf8AbN+GMPxP+DWtSXFrbyDTPFHhX" +
                        "XEjg1jRL4rv+z3sEbyKpZfmR0ZkcfdY4IH+ffiL4a5pwvj3hcbBJtXjJaxmu8XZfNNJrqtj/Qvw38TMq" +
                        "4py9YvBTbSdpRekoPtJXfyabT6Pc/ij/wCCuP8AykX/AGnv+wrpf/qOadX+qH0bv+SIwH+GX/pyZ/lL9" +
                        "JX/AJLjMP8AFH/03A/rs/4JxeG9B8Y/8E3P2c/CXinSYNe8M+J/BTeH/EOh6nGJba8srx7i3nhlRuGSR" +
                        "HKsPQ1/m344Y6theOcdWpScakK3NFrdNWaa80z/AEs8DMDRxXAmBo1oqVOdHlkns07pp+TR+FP7YP8Aw" +
                        "QF+K/hjXdb8XfsgavbfETwRdySX1n8LfFd7DYa/pyu277Pb3d6UtruNOdrSyRSYwCJGyx/rjwz+mNl2I" +
                        "owo5zF0qq0dSKbhLzcVeUW+yUl10Wh/IXid9DPMcPWnWyWSrUXqqcmozj5KTtGSXduL6avU/DH4mfBD4" +
                        "8fs8eIILP4p/DTxH8J9ds5x/Zt54j0+904PNGSyva3LKqS42kq8TkcZBr+tch4syjOqLlhK9OvBrVRkp" +
                        "af3luvRo/kXP+Es4ySuo4vD1KE09HKLjr/dez9U2fXfwM/4Kzft4fAZrC10f433vxB8OWOF/wCEU+MK/" +
                        "wDCSW0ka8LH9ovW+2xooGFWK5QAcDivzXi36OfCGcXc8IqU39ql7j9bL3G/WLP0zhH6SHGGT8qhi3Vpr" +
                        "7NX94vS799L0kj+iz9g/wD4LbfCv9pzxT4d+EHxo8LJ8F/i54kkTSvDep2t19o8M61eucJBFLcbZbSeU" +
                        "nbFFLvV2wolLsqH+JvF76KmYZBh54zA1PrGGgryVrVILu0tJJbtqzS15bJs/uDwe+ljl2f4iGCx1P6vi" +
                        "Zu0Xe9Ob6JN6xb2Sd03pzXaR+5lfyWf1yFABQB8x/tYfsn/AAt/a/8Ahbf/AA2+JNh5NzD5l94M8Z2Ma" +
                        "HUdC1EptW4t2bGVOAJYidsi8HBCsqauVGVj+Iz9qD9l/wCKX7JnxS1T4XfFHS/JuYd174b8SWSudO1rT" +
                        "i5WO7tJGAypxhlPzI2VYAisWrHTGVz6Y/4J5/8ABQzxr+xd41GkaubnxX8B/FdyknjfwRG+6WzlbEZ1H" +
                        "ThIQqXCKBvTIWZQFYghHRxlYmcLn9ofw7+Ingr4seCvDnxF+HXiO28V+DPFdsmqaFrulvuimibIIIIDI" +
                        "6MCrowDIwKsAwIrY5mjtKAP49/+C/37Ktx8P/jl4X/ag8NaWV8IfGu3j8PeNrm2T91beKNJtliRn2qAv" +
                        "2uzjQr1LPDKx61/ph9DjxCjjMpqZVVl+9w75oedOTv/AOSybv2Uoo/zG+mb4dywWb081pR/dYlcs/KpF" +
                        "W/8milbu4yZ+cH/AATg/a6uP2Mv2pPBfxOv5pm+HmthvA3xY0603MZdB1CRPMmVB96S1lSO4QDltmzID" +
                        "Gv3Dxw8No8UcP1cLFL28ffpt/zx2XpJXi+179D8M8DPEuXC3ENLFSb9hL3KiX8kt3bvF2ku9rdT/QY0r" +
                        "VdM13S9N1vRdQh1bRtZt4dV0nVdNlSa3uba4jE0UsUkZKujowZWBwQciv8AGXEYepRqSpzi4yi2mno01" +
                        "o010aZ/tNh8RTrU41KclKMkmmtU09U0+qa2P5bv+Cuf/BXP+1P+En/ZV/ZV8T/8Sv8AfaB8YPjBoE3/A" +
                        "B9dYptK0qaI/wCq6rcXCn5+UQ7NzP8A6A/Ru+jd7P2ebZtT97R0qTW3ac136xi9t3rZL/Pb6S30lvae0" +
                        "yjKKnu6xq1YvfvCD7dJSW+y0u3/ADV+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjR" +
                        "ASSSfw6niv7pzPM8PgsPOvXmoU4JuUm7JJbts/g/LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5/wS88Lfs" +
                        "WeFrf4kfEi3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/wC4n7vJf/KTx+8fsRxTiHhsM3DAQ" +
                        "ei2dRr7UvL+WPTd67f6y/R9+j7h+FMOsVikp4+a1e6pp/Yh5/zS67LTf9fq/mo/poKAPxn/AOC8X/KP7" +
                        "xD/ANjT4Z/9KZK/p/6If/JZQ/69VPyR/Lf0wv8Aki5/9faf5s/D/wD4N/v+T69W/wCxC8Qf+nHS6/rD6" +
                        "ZP/ACSMf+v8P/SZn8lfQw/5K+X/AF4n/wClQPlz/grj/wApF/2nv+wrpf8A6jmnV9/9G7/kiMB/hl/6c" +
                        "mfn30lf+S4zD/FH/wBNwP63v+CR3/KOj9mH/sFap/6keo1/nD9JH/kt8f8A4o/+m4H+k/0av+SHy/8Aw" +
                        "y/9OTP0dr8PP3M/nt/4OLf+TYPgf/2Pq/8AqPajX9n/AEJf+R/i/wDrx/7fA/ir6cH/ACT+E/6//wDt";
                    resourceString += "kz40/wCDcf8A5LX+0f8A9itpX/p2NfqH03v+RVgf+vsv/ST8s+g1/wAjbHf9eo/+lH5pf8FWvhzrnw1/b" +
                        "+/aRsNatpIo/FWuN8RtDupVKpc2OvwpqaPGSAGVGleIkdGRh1Br91+jxndHHcG4GUH8EORrs4Pl19bJ+" +
                        "jTPwb6ReR1sBxnj41F8c/aJ91Nc2no216po/o1/4Jc/8FRv2aPGP7P3wc+AnxN8f2Pwm+Lnwt0PTPhnF" +
                        "p/jmVNP0zV7TRraPTbOezv5ttuXeGOMNDI6yb921WX5q/iL6QH0f8+wuc4rMMLRlXw1acql4e9KLk3KS" +
                        "lFe9ZNuzSata7T0P7k+j59IPIcVkuFy/FVo0MTQhGnab5YyUUoxcZP3btJXTad72TWpzX/Bez9mPUfjN" +
                        "+zv4G/aK8CWx1zUvgNJd3XiNNKAm+0eFNbSBprsGLcXW1lt4pMjgRvI5OBXf9D/AI9hled1stxD5Y4m3" +
                        "LfS1SF7R8uZNrzkorqcH0xuAJ5rklHMsOuaWFbcra3pzteXnytJ+UXJ9D+ff/gmp+3jq37CPxwn8U3+n" +
                        "TeI/hR8QIbfw38VvDGnlBctbQzGS3vrXfgG4tDI5RGIV1d0JUsHX+y/HXwhp8X5SqUZKGJpNypye12tY" +
                        "v8AuysrvdNJ62s/4u8BvGGpwfm7rSi54aqlGpFb2T0kv70buy2abWl7r+2D4U/trfsnfGrw1Z+Kvh3+0" +
                        "D4W1awu41uZdPv9Ys9O1O03/wAN1Y6g8NzA2e0ka57ZHNf5W8ReFfEeVV3SxOCqxa6qLlF+kopxfybP9" +
                        "XOHPFfhvNcOq2GxtKUWtnJRkv8AFGTUl80j1D/hePwU/wCiweFv/Cg0n/4/Xgf6p5r/ANA1X/wCX+R9B" +
                        "/rdlP8A0FUv/A4/5noel6rpeuafaatoupW+saVfp59jqelzR3FvMhON0ckRZWHHUGvFxGHqUpuE4uMlu" +
                        "mrNeqZ7eHxNOtBTpyUovZp3T9Gj4M/4KpaFe+Iv+Ce/7Uun2Cl57fw6uuyBQW/c6XqVrqcxwPSO3Y57V" +
                        "+v/AEe8ZChxpl8pbOpb5yi4r8Wfjv0iMHOvwVmMY7qnf5RlGT/BM/je/wCCYPxQ8M/Bz9vP9nDx94y12" +
                        "Hwz4ZstXvNA1bXtSKJbWqa7ot7oKvM8hCxx7rwB5GICLliQBmv9OfHzIK+Z8H47D0YOdRwUklu+SUZ6d" +
                        "37ui6vQ/wAvPo/8QYfK+McDiK81CmpuLk9lzwlDV9F72r6LXof2Bf8ABWyWKf8A4Jx/tNTwSrNBNpOky" +
                        "wzRMGR0bxFpxDKRwQR0Nf5pfRwi1xxgE9+aX/pEz/Tb6Sck+Bse1qnCP/pyB/Kd/wAEXf8AlJb+zZ/3O" +
                        "P8A6gOuV/ob9KP/AJITHf8AcL/09TP86vor/wDJe4D/ALi/+mah++X/AAVq/wCCqHxX/Ym+I/w++DPwW" +
                        "8IaLfeJvEmgx/EnxF4q8eQXV7BFZXWpXmmW9va29pc2uJN9hK0juzDaVAXOSP49+jl9HvLuK8DWxuOqz" +
                        "VOE/ZxjBpO6jGTbbT0tJWStre76H9k/SS+kRmXCeOoYHA0oOpOHtJSmm1ZylFJJOOt4u7d9LWXU9D/YX" +
                        "/4LM/s//tI+GdL8PfHLxHo/wE+OMR+xalpOvXLWPhzVXyAs2nX2oOUj8wkD7PPL5gbhTIPmrxPFv6L+c" +
                        "5HXlUwEJ4rCbppXnHynGKu7fzRVratR2Pb8IfpS5LnuHjTx9SGFxezUnaEvOEpOyv8Ayyd76Jy3P0O+L" +
                        "/wM/ZX/AGhfDB1j4y/D3wh8SvDixZt/F/iK30+ZreJsR7oNTUrJCDkDdHKvbmvxbhri3iHJcRyYKvVoz" +
                        "v8ADFyV35w2fzTP23ibhHh3O8Pz46hSrQt8UlF2XlPdfJo/jx/4KlfAT/gnf8Edb0Sz/Y9+LVx4k8eXd" +
                        "60XjL4a6FqUfibw5pOniGQ701Ys8iXCyhUNu007YJLGMqA/+mX0fuMONc2pTlnOGUKKXu1HH2c5Suvsb" +
                        "ONteZRitrc19P8AMP6QvBvBGU1YRyXEudZy9+mpe0pxjZ7T1aley5XKT3vy21+lv+DdK78UJ+1D8brG0" +
                        "af/AIQq58Avd+IFjB+zHVIfEOmpp5kP9/ypbvZ7bq+E+m1Tw74fwknb2qr2j35XCfNbyuoX+R979B+pi" +
                        "FxBi4xv7J0Ly7cynDlv52c7fM+C/wDgrj/ykX/ae/7Cul/+o5p1fr/0bv8AkiMB/hl/6cmfjv0lf+S4z" +
                        "D/FH/03A/qU/ZW+NVt+zn/wSA+GHxxutFfxGvwz+HknieDQIZRB9suIp5lghaUhtiPIyh32kquSASMH/" +
                        "P7xC4WlnfiXiMAp8ntsRy829k0ru3WyvZdX1R/oT4d8VxyPwyw+PcOf2OH5uXa7Tdlfom7Xetl0Z+Vv7" +
                        "M//AAcJeP7j4pR6d+1d4E0K0+E+vO0H/CRfCnT9Si1DQHc/JK8F1e3Zu7dekiqBKBll3keW39B8efQww" +
                        "ccv5sorTeJj9mpKPLPyuox5Zdm/d6O26/njgH6auNlmPLm9GCw0vtU4y5odm05S5o90ve6q+z/pB+H/A" +
                        "Maf2cf2nPChb4f/ABB8LfGTwvrUW290ayurDUtyMu4x3VjNukjYDlo5oww7iv4eznhbPMhxH+0UauHqR" +
                        "ejacfnGS0fqnY/ujJeKsiz/AA3+zV6WIpyWqTUvlKL1Xo0mfk3+3l+w5/wSH0Hw34g8UfFjU9E/Zi8Vx" +
                        "xS3drc/CPUrfT9UnlUEiO38OQi4huMt95YbQNj+NRyP6L8IPFnxJrV4UsJGeMp3S/eRcorzdV2cfVzt5" +
                        "PY/m/xi8I/DOjQnVxkoYKpZteykoyfkqSupeihfzW5/GxdNbWWt3LeG765ns7S6dtB1OeIWl48ccx8iV" +
                        "o4ZZRHIQAxVZG2ngMcZr/TympSpL2qSbWq3W2qu0rr5K/Y/y6qOMKr9k20n7r2e+jsm7P0bt3P9NH4dS" +
                        "eIJfh94El8WLInimXRtLk8SpeLtmGoNZRG4Eg7N5m7I9a/wcztUVjayo29nzy5bbct3a3yP98cjlWeCo" +
                        "utf2nJHmvvzWV7/ADOyrzD1AoAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs" +
                        "2MqcASxE7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTj" +
                        "DKfmRsqwBFYtWOmMrn0x/wTz/4KGeNf2LvGo0jVzc+K/gP4ruUk8b+CI33S2crYjOo6cJCFS4RQN6ZCz" +
                        "KArEEI6OMrEzhc/tD+HfxE8FfFjwV4c+Ivw68R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdGAZGBVgGB" +
                        "FbHM0eVftXfs3+Df2svgL8QPgX42/0aw8X2udH1yNA82latbMJ7K9iGVJMMyqWUEb03IThjX23h3xxiu" +
                        "HM4o4+hq6b1XSUXpKL9V16Oz3R8R4jcC4XiTJq2X19FUWj6xktYyXo+nVXWzP8AO/8AjR8H/HfwC+KXj" +
                        "b4PfEvR30Pxr4CvpNE1mycHY+0B4p4WIG+GeNlliccMjKw4Nf7U8LcS4POMvpY3Cy5qVWN0/wA0+zTum" +
                        "ujTR/iTxVwxjMmzGrgsVHlq0pWa/JrumrNPqmmfYvh3/gp5+0/4V/Y+n/Y60HxL/Z/haSaWwtvHcMkw1" +
                        "228NzxkSaLBMD8luzk/OPnCExAhOK/Msb4CZBiOJlnVSnepa/JpyOa2qNdZW6bX956n6fgfH/iDDcMPJ" +
                        "adS1O7XPrzqm96afSN+u9vdWh8H+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASS" +
                        "Sfw6niv17M8zw+Cw869eahTgm5Sbsklu2z8eyzLMRjcRChQg51ZtKMUrtt7JI/t2/4Jef8ABLzwt+xZ4" +
                        "Wt/iR8SLe18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/uJ+7yX/yk8fvH7EcU4h4bDNwwEHotn" +
                        "Ua+1Ly/lj03eu3+sv0ffo+4fhTDrFYpKePmtXuqaf2Ief8ANLrstN/1+r+aj+mgoAKAPzB/4LAfBD4l/" +
                        "Hz9h/x34P8AhN4YuPGfi/R9S0fxnH4V0dDLf3trptyXuEtYl+aaZUcusS5Z8FUDMQp/ffo08V4DJ+LKN" +
                        "bGVFTpSjKHM9k5LS76K+l3ot3ZXZ/P/ANJvhLH5zwlWo4Om6lWMoz5VrJqL15V1dtbLV2sruyPxs/4IP" +
                        "fsp/tAeC/2mfGvxj+IHwq1z4d+A9D8Kah4Pj1Tx3pl5pL3up6lf2MscNtFfxxPKFjt5HkdVKrgAkFhX9" +
                        "O/S88Q8mxWQ0sFh8RCrWlVjK0JKVoxUk22m0tWkk9XrbZn8u/Q98Os6wmf1cbicNOlRjSlG84uN5SlFp" +
                        "JSSb0Tba0Wl90fPX/BXr9jL9pO6/br+J3j3wd8G/EnxD8F/F1tJ8QeD/EHgPRdR1eF5I9Hs9OuLaY6fD" +
                        "KIpo7iBwEYglCrDrx9p9GvxQyKPCOHw9bFU6VWhzRlGc4xfxSkmuZq6aa1XW66HxP0mPCzPpcX4jEUML" +
                        "Uq0q/LKMoQlJfDGLT5U7NST0e6s+p/UT/wTz+EXjL4EfsW/s9/Cz4hWI0vxr4a0Mz+I9IyGeyudSvrjV" +
                        "TbSFSR5kIuRHJgkblOCRzX8A+NPEuFzfinG4vDPmpTn7r7qKUbrydrryZ/oL4J8M4rJ+FcFhMSuWrCHv" +
                        "Ls5Nys/NXs/NH2bX5efqZ+Kf/BdL9n/AOLPx2/ZV8HS/CPwbe+PtT+G/iu38X+IvDfhmCW81NtNk0u80" +
                        "95re2gVpJvLknTeqAsFJbG1WI/qf6JPGWW5RxDVWMqqlGtScYyk7R5uaMrNvRXSdm9L6btH8p/S84MzL" +
                        "OOHaTwdJ1ZUaqlKMVeXLyyjdJauzaulrbXZM+Ev+Dfz4QfFr4a/GH9oK++Ivwu8ReAbLU/DWmWmnXnjX" +
                        "RNT0qK4lTVC7JG99DEHYDkgEnFfrv0yeJctx2WYKOGxFOq1Uk2oTjK3u9bN2Px/6GHDGZYDNMbLE4epS" +
                        "UqcUnOEopvm6XSufrz/AMFC/wDgm78Lv29fCemz6lqJ8BfGPwbby2fgT4mWUAuAIHfzjY38G5DPas5LK" +
                        "AwaJiWQ4Z0f+bPBbxyzDg/EyUY+1wtR3nTbtrtzRfSVt9LSSs9k1/THjZ4FZfxjhouUvZYqmrQqJX035" +
                        "ZLrG+2t4t3W7T/kW/aF/wCCWP7bf7Omtz2OufBfUviJ4eMnkab45+DttdeI9MuVJwHZbGI3Nvk8YuYYz" +
                        "npnIz/pHwX9IPhTO6SlTxUaU7awqtQkvvfLL/t2TP8ANPjb6PHFmR1XGphJVoX0nSTqRf3Lmj/29FH9T" +
                        "H/BGf4SfG34cfsPQ+C/2jPD9/pT63r2s6j4K8C+PYmF1YeFL2ys4UtZ7O7XfCklyl1KIZFB2yZIAbFf5" +
                        "9/Sg4kyrHcWOvls4y5YRU5w2dROT5lJaNqPKuZdV5H+hf0WuGs2wPCSoZnCUeapJwhPdU2orlcXqk5c7" +
                        "5X0e2p+Yv7dn/BBfxTHr+tfEr9iiS31fQtUll1K++BfiG8is7qwkkbeU0m8vGSGSDk7YriRGQDAeTOB+" +
                        "9+Ef0v8O6MMLnl4zjZKtFXT/wAcVqn5xTT7Lr+AeL/0O8Qq08VkVpQk23Rk0mv8Eno15Saa7vp+FfiT9" +
                        "i79r3wjqk+jeIf2YPH2n39uSpUeEtcmikAO3dFNBbPHImRwyMQfWv63wPilw1iaanTzCg0/+nkE/mm7r" +
                        "0aufyHjvCvibDVHCpl9dNf9OptfJpWa807GB/wyt+0//wBG4ePf/CP8Q/8AyJXZ/wARCyD/AKDqH/g2H" +
                        "/yRx/8AEO+IP+gCv/4Kn/8AIn9Uv/BAv4N/tG/Cb4RfG+b4y+Gda8DeA/FWraPdfC3wf44t7nT7lLq2t" +
                        "7xNVvI7O8SOWOK4ElqocgBzGSOhJ/z3+mJxPkeY5lhFgqkKlaEZe0lBqSs3Hki5K6bVpu3S+p/oh9DXh" +
                        "fPMtyzFvHU50qM5xdOM04u6UueSi7NKV4K/Xl0P3e8S+HND8Y+HPEHhHxPpketeGvFVld+HPEOj3gJhu" +
                        "7G+ga1nhcAg7ZI3ZTz0NfyHgMdVwteFalLlqQalFrdNO6a9Gf2Dj8DRxVCdGrFSpzi4yT2aas0/VaH8L" +
                        "f7b3/BJv9pD9l/4kalH4A8A618Zfgzrt3PJ4A8ZeBtPudXvILZmLx2mqW+nxPJBcxJhTIUEUv3kOdyJ/" +
                        "rb4UfSLyPP8DF4itDD4qKXPGclFN9ZQcnZxfa/NHZ9G/wDIjxZ+jhnvD+PksNRniMLJvknCLk0ukZqKu" +
                        "pJdbcst090v26+Dv7MH7VXiP/giV48+AfjfQ7+T4veIbG+1H4bfDvxWzw6rZaLaaxa6lZ6ZIt2QYpXW1" +
                        "kMELkbBIkZ2YIX+UuJuPuHqHitRzChOP1aEkqk46xc3FxlNW3S5lzNb2bV93/WXC/h/xFX8J62XV4S+s" +
                        "zi3ThLSSgpRlGDvs3yvlT2uk7bL8yv+CNX7Hn7Suhft2/D74n+Mvgx4j+H/AIJ+EVv4ivPFeuePtHv9G" +
                        "i87UfDmoaDBbQHUYofNmMt4rFEyVVSTgYr95+k94mZFW4RrYWjiqdWrXcFFQkpO0Zxm2+VuytHd7tpI/" +
                        "AvoueGOfUeMKGLr4WpSpUFNyc4ygryhKCS5kru8tlsk2z+ir/goL/wTq+F37engjTrbWr4+B/ix4OjmT" +
                        "4f/ABNsIBO8CS/O9new7k8+0d8Nt3Bkb5kYZdX/AIn8GfGzMOD8XJwXtMNUtz027X/vRfSSXya0a2a/t" +
                        "/xp8D8v4xwkVUfssTTvyVEr2v8AZkusW9e6eqe6f8hH7Q//AASv/bb/AGctT1CPXvgzqPxA8LWZZrfx/" +
                        "wDCGC48Q6XNCM/vXWzi+0268c/aYY/yIJ/0o4K+kHwpnlOLp4qNKo/sVWoST7avll/27Jn+Z3G30eOLM" +
                        "jqSVTCyq019uknOLXfRc0f+3oo+H/8AhXfxA+1fYf8AhBtY+2+Z9k+x/wBmXvm+bu2bNnl53Z4xjOa/W" +
                        "P7awfLze2hbe/Mv8z8k/sTG83L7Gd9rcrvf7j7S/Z9/4Je/ts/tG6lp0fhf4J6p4M8M3zKZfH3xWt7jw" +
                        "9pEULf8tla+jWe4Tt/o0Upz24OPy3jPx+4UySEnVxcalRfYptTlfto7Rf8AicT9V4L+j7xZnlSKpYSVO" +
                        "m/t1E4Rt31V5L/CpH9kn/BP/wDYO+H/AOwb8JbrwX4d1E+LfHni6aHWvib8Q7m3S3k1K6hjMcMMMYLGO" +
                        "0tw7eVGzMcs7E5Ygf5ieMni9jeL8yVepH2dGmmqcL35U9231lLS7stkuh/qJ4MeD2C4Oy10KUvaVqjTq" +
                        "Ttbma2SXSMdbK73b6n8yX/BW39jT9p7Uv27/in428KfBLxJ4+8I/FufSta8EeIfAOjahrNtcY0mz06SC" +
                        "RtPilEU6TQspjkwSMMMqwNf3n9HDxPyCnwhh6FbF06VSgpKcZyjFr3pSTXM1dNPdea3R/Av0k/C3iCpx" +
                        "hiK9HCVKtKu4uEoRlJP3YxafKnZpp6PyezP6kf2QfgJeeC/2G/g1+z18bPDVrf3MXg2Lwd8SfBuo+XdW" +
                        "xXUYJDd2M2wsj7VnMT7SVJBwSMGv8/vErjCOK4txWY4Go0vbOVOS0futcsl1W1117n+hHhlwbLC8I4XL" +
                        "cdTTfsVGpB6r3k+aL6Peztp2P5z/wBtT/ggx8XvAet6343/AGRJV+Knw7upHvoPhjqt1FbeJtJR2LGGC" +
                        "W7ZIb6GMfdYyJNjC7JGBc/234WfS+y3GUoUM4/cV1p7RK9OXm0ruDfXRx63itF/D3it9DvM8HWnXyb9/" +
                        "Qbv7NtKpHyTdlNLo7qXS0nq/wAPvGfwE+OXw61N9F8ffBzxT4L1aMlDp/ijQNVsZTjuouYE3DuCMgjkV" +
                        "/WGV8YZTjqfPh8VSqR7xnF/kz+Ss14OzfA1OTEYWrTl2lCS/NGp8P8A9mn9ob4rajDpXw3+B/ivxrezP" +
                        "5OPD2gancRxnIBMsqQ+XGoyMs7ADua58546yXLoOeJxdKmv704r7le7+R0ZLwHneYzUMLhKtR/3YSf3u" +
                        "1l8z+ir/gm9/wAEQ/F/g7x34U+O/wC2FFZ6fJ4RuLfxH4O+B9hNb6i8l/Awlhm1ieEyW/lxOA628TPvO" +
                        "PMYKGjf+J/HH6V2GxWEqZfk137ROMqrTjo9GqadndrTmaVuibs1/b/gX9EzE4XGU8wzqy9m1KNFNS95a" +
                        "p1Grxsnrypu/VpXT/qAr+BD/QIKACgAoAKAPmP9rD9k/wCFv7X/AMLb/wCG3xJsPJuYfMvvBnjOxjQ6j" +
                        "oWolNq3FuzYypwBLETtkXg4IVlTVyoysfxGftQfsv8AxS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXK" +
                        "x3dpIwGVOMMp+ZGyrAEVi1Y6YyufU3/AATl/wCChfif9jDxxJoXiU3Xib4C+MplPjDwpC5eTTLltqDU7" +
                        "BG4EqqAJYxgSoMH5lQq4ysTOFz+0DwR438JfEnwl4f8eeA/EFt4p8H+KbaPV9A1/SJBJb3NvIOGU8EEE" +
                        "FWVgGVgVYAgitjmaPyM/wCCpX/BO3wz+3f8MbH4z/BG60+8+O/gnT5W8KaxpM8Etn4u0mAyS/2W9zE/l" +
                        "eYHLG1mJ2q5KOQrFk/pr6OnjrPhfGfVcU28DVev/TuT050u38yW6V1qrP8AmH6R/gNDinB/WsKksdRjp" +
                        "/08iteRvo/5G9E3Z2Tuv4yNP+EPxT1T4kw/Byx+HeszfFae+Hhpfh02nXSayt/naYHtJEWRHHVgyjA5O" +
                        "BzX+pNbiXL6eBeNlXh9XUebn5ly2782z+R/lXR4ZzGpj1go0J/WXLl5OV8/N25d0/XY/tV/4Jef8EvPC" +
                        "37Fnha3+JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgff+4n7vJf8Ayx8fvH7EcU4h4bDNw" +
                        "wEHotnUa+1Ly/lj03eu3+rH0ffo+4fhTDrFYpKePmtXuqaf2Ief80uuy03/AF+r+aj+mgoAKACgDwn9p" +
                        "n476T+zJ8DvH3x21/wxqPjHQvh3BbaprOgeE/s51CS2nvoLJ5IhdyRRkQibzX3OPkVsZOAfruA+EKmfZ" +
                        "tRwFOpGnOq2lKV+W6TdnZN62stN2j4/j7jClkGUVswqU5VIUkm4xtzWbSurtLS93rsmaPhH45+B/F3wA" +
                        "0D9pCCeTTvh3rnhOD4xSS3oTz7TSpNKGryCVUYqJIo8hwDgMCM1hmXCWLw2czyxq9eNV0tNnLm5Vbyb2" +
                        "8joyzi7CYnJoZmm1QlSVXXdR5eZ380t/M8W/Yg/bd+G37dnw08S/Er4b6BqnhW18Ka3L4I1bQPGQsxer" +
                        "LHZW18kwFjPOnlSLc7VJYHcrDHHP1Xiv4U47hHH08LiZxm5w5043ta7VtUndW18mj5Twl8WcBxhgKmKw" +
                        "sJQUJuDjO172Tvo2rO+nmmbPwY/a+8E/HT4/wD7RXwE8F+GdUN1+zTcWGieN/HN59jGkz6jfeYotbbyp" +
                        "nlLo9vOr70XBjPqK5eKPDXF5Rk2CzCvUjbGJuEFfmUVbV6Ws04tWb3OrhbxNwmb51jsuoU5XwbSnN25X" +
                        "J30Wt7pqSd0tmfWtfnB+khQAUAFABQAUAfCP/BRH9sfUv2G/gFZ/GjSvAcHxFurrxBp3gk+H9Qv5NNjV" +
                        "L62u7gy+bHBcHK/ZsbdvOevFfrvgp4Y0+Lc4eBnWdJKnKfMo82zirWuu/c/H/G7xQqcI5MsdCiqzdSMO" +
                        "Vy5d1J3vZ9ux93V+RH7AFABQB89ftVftF+F/wBk34C+PP2gfGeh3/iTw14A/sv+0tF8MC3N9N/aus2mi" +
                        "R+V9rkij+WS8Vmyw+UHHOBX2nh7wTiOI84o5dQnGFSrzWcr2XLGU3eyb2jbbc+K8ROOMPw3k1bMa8JTp" +
                        "0uW6ja75pxgrXaW8k99j5W+If8AwUY1bwbceDn8LfsSfGj4xaD418N6D8SdM8XfCbwjLrGlLDr2npqCW" +
                        "rXNu5QzwrIFlVSQD3NfoWS+CVPFKr7XNcHh506k6bjUqcsrwk43s9bO2h+dZ3441MK6XsspxmIhUpwqK" +
                        "VKlzRtOKla60ur2fmeDfD//AILM6Z8WdCfxT8K/2Evjl8S/DMdxJpUniP4f+E49ZsFuoVV5ITcadPNGJ" +
                        "FDqWXdkAjI5FfX5z9F+pl1b2WLzfBUalr8s6nK7PZ2kk7abnx+S/Slp5lR9rhMnxtane3NClzq63V4tq" +
                        "+q0P2b0+6a+sLG+a1ksmvIYrprK8XZNCZED7JF7MucEetfy9Wp8k3G97O11s/Q/qWjU54KVmrq9nuvU+" +
                        "Mv+Cf8A+1rqP7a37O2m/HLVPBEPw+u7/VtU8Nnw7YXz6jGq6dKsYk86SGAkvu6beK/UfGTw4hwrncsBC" +
                        "q6qUYy5muX4ulrv8z8t8GPEmfFeSRx86KpNzlHlT5vh63st/Q+2a/Kj9XCgAoAKACgAoAKACgAoAKACg" +
                        "AoAKACgAoAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZ" +
                        "U1cqMrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmM" +
                        "rl34bftgftDfCP4QfED4F+APiNd6D8OfiRj+3NJgOZbff8ALcfYpj89t9pT5J/LI3rwaLg4o+1P+CZn/" +
                        "BQv4t/s1eKNM+CVt4K1D41/Dbx9qUUOk/DvQGL61p+pXbiNpNJEmUbzfvSW7lUZhuDRkuzOMrEzhc/sd" +
                        "s4YLg2+szaT/Z+q3NtHDMLtbc3cMZ/e+RJJA0inYxOQrsuckE9a6fay5eW7tvbpfucXso83NZc1rX627" +
                        "GjUGgUAFABQAUAeZ/Gn4baf8Y/g/wDFL4S6qUXT/iX4e1jwLczTAkRDVdPlshJwCQUMgYEcggEc173C2" +
                        "eTyzM8PjIfFRqRn/wCAyTt87WPA4qyKGaZZiMHP4a1OUP8AwKLV/le5/NZ4F/aM8Sab/wAEM/FfwmDSR" +
                        "/F6y8U3v7EVnolwQt295retC9ezZSeSNMu5oVx/cx2Jr+6c34IoVPFqnjP+YZ0li2+loQtzf+DIqXz9D" +
                        "+EMo44r0/CKpg9frSqvCJdbzndx/wDBcnH5eTPpP9i6w8Pf8E+f20f2zf2dtUuhZ/Dey+F3hT9oXQJmH" +
                        "lpPB4P0CGy1aeMvjLyyzzs5PLeXuPQ18L4pVq3GfC2V5lBXrvE1KMvJ1ZtwT8klFLtex934V0aHBXFWa" +
                        "5ZN2oLDU68fNUoJTa823Jvva54b+z5+0J4t/Y0/4JseMv2uV02yvv2h/wBvD4narqfgk+J38u1hvNVu7" +
                        "q3iubvzWTNvb/Yru6VmIVjKgYhWr6zjPgvDcUcdUsn5msFlmGip8u7UUm1H+9LmhHTVcrsro+R4K41xP" +
                        "C3AdXOeWLx2Z4mThzbJybScv7seWctdHzK7szt/jT8bP2iv2Q/hvov7TGif8FOPDP7V3irw5e6TJ8ZP2" +
                        "ep5PCJ0vVbLUr2G0nj0aLSZmuIjA8yjdGitsDSnaFMZ8rhbhXJOJcdPK6mQVMDTmpeyr/veaLim06jku" +
                        "V3SejbV7R1bUj1uKuLM84ZwMM0p8QU8dUg4+1ofuuWSk0mqai+ZWbWqSdry0ScX/RH4O8U6X458IeFfG" +
                        "uhuZNF8YabY+KdHkkxua11C1S7iJ2kjJSQdDX8U5nl9TCYmpQqfHTk4v1i7P8Uf27leY08Xhqden8FSK" +
                        "kvSSuvwZ+Dnw38Zft+ftdftR/tv/AfwL+06/wAD/hF8D/Gl/Yn4gWvh/TdW1qCC5nubXTdG09ZBaqsKi" +
                        "0lmnmMhlGEXcA3P9e55lfB3DfD+U5hiMB9ZxOJop8nPKMG0k51Jb6+8lFW5d3bQ/jzIs04z4m4hzfL8P" +
                        "mH1bDYas1zqEZTSbahTjtp7rcnfm2V9Tl/2dviB/wAFJP2iviN8cf2G9Z/ab074dX/7Luq3Vt8QP2m9E" +
                        "0Czv/FOv2FzOYNJtILV3ggiDiGSaW4BEwXYjEsGL+hxtk3A2SYHCZ9DASqrGxXJh3NxpwaV5yb1btdJR" +
                        "1je7WlrefwRnXHeeY7F5BPMI0XgpPnxCgpVJpu0IqOiV7NuWkrWT1vf65/4Jx/tAftAXvxl/aq/Yx/aZ" +
                        "8bw/FXx7+zRe6dc+FfirDaR2d1rOi6krlftUduNgdEMDrktJ+8ZWZtm4/m3jfwbk0Mry7O8rpOhRxilz" +
                        "U73UZx/lb11fMui91NJXsfpXgZxpnU80zHI81rKvWwbjy1LWc4S/mS0ulyvq/eabdrnyx+1d4n+P/7O/" +
                        "h/x7471b/gsTok37QngW2u/F2k/s+T6P4N02xv4bONrgaV/Zcc803nTRrshkliJkfjAJ3L+heHeAybO6" +
                        "1HDw4Zn9SqtRdbmqyab05+eyVk9Wk9F6Wf554jZhnWSUa2InxRD67STkqHLSipJa8nJdu7WibWr063XD" +
                        "/8ABT347XX7TX/BHf4BfHTUdMh0bV/iF4k8Nalr2mad5n2aLUbez1ixuxCJiWERngcoGJIXAJbqfW8A+" +
                        "EY5D4m4zARk5RpU6iTe7i3Tcb262av59EeR9IDjCWf+GGCzCUVGVWpTbS2Ukqila+trp28ur3PsXS/2h" +
                        "vjt+3l+1JP4P/ZT+IV18Lv2Ov2fr6TSvjJ8ePDltp1xdeM9eQK7aTpEmoxXKeSqFf3yJwrGQkhoA/5ji" +
                        "OC8o4Q4fVbNqKrZnio3pUZOSVKH881Fp3v9lvdculptfqGH42zjjHiF0MoruhleFlarWiot1Z/yU3JNW" +
                        "t9pLZ82t4J8V8dP2p/iN8df2yviT+y34D/as0T9jT4Mfs/WNifif8UdQm0KPxD4i1/UoROun6a2vSosc" +
                        "UAJEjxgMrI24sHQV6vCPh7gco4YoZriMunmGKxUn7OmlPkhCLtzT5Fq30T0aatazPJ4v8RMdnHFNfKcP" +
                        "mMMvwuFivaVG4c85yV+WHO9EurWqad73R137Dn7T/xOsP2tfif+xP8AEz4/aV+1h4e0zw1F8Xvg38ffD" +
                        "f8AZJu5LBbmCzudM1I6LJLC80bT5DM2/wCQliVkRU83xZ4BwE+HMPnmFwcsDN1PZVaMua17NqcOdJpO2" +
                        "y01VtU2/T8I/EDMIcSYjIsVjYY6EaftaVaPLfluk4T5G02r7vXRtu0kl6j/AMFov+UaX7Sf/cnf+p9od" +
                        "fP/AEXP+S7wP/cX/wBM1D6H6VH/ACQWP/7hf+nqZ9mfsrf8mwfs4f8AYheD/wD1HrSvzDxC/wCR/jv+v" +
                        "9X/ANLkfqXh3/yT+A/68Uv/AEiJ+XP/AAb/AH/Jimrf9j74g/8ATdpdfv8A9Mn/AJK6P/XiH/pUz+e/o" +
                        "Yf8khL/AK/z/wDSYH7gV/KB/Wp/K5/wSx+Cn7bfx0/Y1ay+EX7UkX7Lfwv8La3rcHg+Pw34ft9X1bxHr" +
                        "cjx3M899dXE0bW1pEWSFEhyWO8spAXP+hH0g+KuFMo4n5sZl7xuInCHNzTcYwhqkopJ80nq23tok97f5" +
                        "3/R44U4szfhflweYLBYeE58vLBSlUno25NtcsVoklvq2tr/AKhf8E4f2mfj7+1B+zt8c/A/xO8QWWlft" +
                        "NfAvW9d+Cl/8QrawgltJNShtGSy1Ka1iSKCRorjeJI0VVcRg7RvNfgPjhwHk+QZ3hK+Fg5YDEwhVULu/" +
                        "K370E3dq8bWbbavvof0F4GcfZzxBkeMw+KnGOYYac6TnZW5kvdm0rJ2le6SSdtlc+Af2pvjt8c/2O9Eu" +
                        "vit4a/4K0aD+0T8Y/A+o2H/AAn/AOzXq2neEobXVra51CG0uLa30/SJ55LR4fM3yIAkgiDOroVG79k8P" +
                        "uEcp4mqrCVeHJ4TC1Iy5K6lUbi1FtNykkpJ2snquayad9PxjxD4vzfhik8XS4khi8VSlHnoONJKSckml" +
                        "GLbi1e7Wj5btNW1+nf+CjH7Yn7RHgew/wCCePin9lnUxpmsftK6miweBtWjtprPWpdZtNHfTLK8eaISC" +
                        "MS34DmNo2IJ5HBHwPgj4ZZJi551SzaPNHBx+NXTgoupzyjZ2vaOl7ryZ9/44+J+d4SGSVcplyyxkvgdm" +
                        "puSp8kZXV7Xlraz80cV+03oH/BTD9ij4bj9r1v2y4/2hIfBNxp+qfGz4I614W07S9AfTry6itZU05rUt" +
                        "IIoZJlUuqwybMyZGCh9XgPGcCcVY7+xv7L+quopKlVVSUp8yTa576XaV7NyV/d7M8rj7Bce8KYD+2f7V" +
                        "WLVNxdWi6cYw5W0nyW1sm7XSi7e90sdP+2/+2R+0Ra+MP8Agmfr/wCx/r628X7Yljrctn4I8WQ2z6TdS" +
                        "appuhPpU+oMIHnRbFtYaaYRuMiPBHWvP8KPDHJJYbPqecwu8BKF5xb5lyyqc6jrZ8/JZXT3ueh4teKOd" +
                        "xxWQVMlnZZhGdoSS5XzRp8jlpdcntHKVmtrHF/tOv8A8FGv+CeXhfRf2r9Q/a5b9qr4eaPqWl2Hx4+Fn" +
                        "izwzpui2cdpqN0lmJdPazMxgjM0qxK0ZjZHZCyyKWQerwEuCONcRPKI5b9SryjJ0akakpu8Ve0r2u7Jt" +
                        "p3TSaTi7M8rj98c8E4eGcSzP69QjKKrU5U4wVpO142vZXaStZptNqSuj2X9rr9tvxd4p+NXwB/Zd/Z/+" +
                        "Nmh/s5WHxd8KQfHv4iftH/EAaU39keF79JPsVrp8WrSpbteXHlkkMcjchVgN7D5fw28KcNh8qxma5jhJ" +
                        "4uVCq6MKEOb3qitzOTiubljf8HdPRH1PiX4sYnEZrgspy7FwwkcRSVadefL7tN35VFSfLzSt+Ks1qzz/" +
                        "wCE37SnxN/Z2/bV+CP7PWu/tiab+218Cv2lbbU9L0PxIJdAuvEPhPxHp0PnKk8ugyyl4LgtGq+aQCHYq" +
                        "B5TF/Z4j4FwGd8K4vMaeWSy7F4Nxbj76hUhJ20U0rOOr07K7fMreLw3x5j8k4rwmW1M0jmWDxiklL3HO" +
                        "nOKvq4N3UtFr3dkuV34/wCGXxE/b8/a1/az/bh/Z28B/tKx/Br4Q/BXxlcRX3xCg0LTdU8Q6dY3F1e2e" +
                        "naNpiSCBFjl+xyySTs3mL5YAb5irenn2ScHcOcOZTmWIwH1jE4iirQ55RhJpRc6k93dcySivdd9tLrzM" +
                        "gzzjPiTiTN8tw+P+r4bDVnefJGU4puShTgtFZ8rbk/eVlrrZ/Rn7AHxx/aX0P8Aab/aW/YW/ai8dr8Y/" +
                        "E3wSsdM8deAvi8tlb6fPqGiX627BbmOAfMzLfQMpZmZGEiM7gKR8R4ycJ5FVyHAZ9lVH6vTxMpQnSu5K" +
                        "M1fZv8AwyXRNcrSWp9x4McXZ9Rz/H5Bm1b6xUw0YzhVsouUHbdLf4ovq0+ZNvQ/YOv5oP6cCgAoAKACg" +
                        "AoAKAPmP9rD9k/4W/tf/C2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfx" +
                        "WfHT9jT47/Ab472/wCz7r/g+51/xlr9ylp8PJvDUEtxb+Jbe4l8qCewIGWDHh1PzRtkPgg1i0dKkmj+p" +
                        "b/gm3/wTb8NfsgeGoPiD8QYLbxL+0R4ltvL1XVY9s9t4ctp1+awsG5Bcg4nnH3/ALq/JkvpGNjCc7n6s" +
                        "1ZmFABQAUAFABQAUAfzD6V+yd8XU/4K66t8MX8DaqP2Xl+Jkf7bh8WDTr1dDGsQ+H5dVjRLgp9nLf2hd" +
                        "C3MecgKcDFf3viPEXLX4bRxXto/2h9W+qcvMuflc1F6X5vgXNfzP4Bw/hxma8S5YX2Mv7P+s/W+blfJz" +
                        "KDktfh+OXLbfQ9N/wCC23wb+Ndz8Sfgf8YPgB4I1fxp4i8eeFfF/wCzH8RLbwlp15fuujavFi2Wf7HG+" +
                        "yNjqV0dz4UMB1yceD9FTifKo4HF4PMasKcKVWliIc0kvei9bXau/chotbHvfSx4WzWWPwmNy6jOpOrSq" +
                        "4efLFy92S0vZOy9+er0ukfRf/BQT9hLxh4r/YI+BXwl+B3hu18deL/2T7rwt4j0XwNdpG8XiW10LSpNJ" +
                        "vbfyptiSvOJfPZWIMm1lGWcA/E+DPi7hsPxhi8Zj6jpUscqkXNb03OSlF3WyVuVNbXT2R9x40+D+KxPB" +
                        "uDweApqrVwLpyUHtUUIuMlZ2u3fmae9mt2fMvg/4z/8ExPEFrouhav/AMEt/Eml/F66Ntp+v/CXSvhCl" +
                        "/f2V9L+7kVXCw+ZCkiuA5VXKqT5YOVH3mZ8LcfUZTqQ4gpywyu1UeJsmunezatpdq7+LqfBZXxV4f14w" +
                        "pz4eqRxTspUlheaSfXtdJ31sm0vhT0P6KNG0fSvD2kaVoGhadDo+h6HbQaPo2k6bGsNva2ltEsEMMUaA" +
                        "KqIihVUDAAxX8T4rE1K9WVSpJynJttvVtvVtvu2f29hcLToUo06cVGEUkktEktEkuyWx+UH/BOvwV4y8" +
                        "L/tSf8ABULWPEvhLU/Duk+LviVbar4U1TXbC6tLfVLUS6sTNaSXCIs8Y3r80ZI5HPNf0V42ZrhcRw/w/" +
                        "ClUjOVPDtSSabi7Q0kk9H5M/nHwPyrFYfiHiCdWlKEamITi3FpSV56xbWq80cz+wt4F8b+Hv+CjX/BTj" +
                        "xR4g8HarofhnxbqXh2Xwr4i1jT7u2sdTSJr3e1pcTxrHMF3DJRjjNd3i3m+Er8EZBSp1YyqU4z5oqSbj" +
                        "8PxJO6+ZweEOT4uhxxn9WpSlGnUlDlk4tKXxfC2rP5Hmfw1+HXx0tf2+v8AgrX4j8B+F9V8O+IPGnga3" +
                        "074J+NtTsbi00278Qjw9BFZNbXlykcEhjuQu7a+Bg5xivez3O8olwdw5SxFSM4U6zdWCaclDnfNeKu1e" +
                        "N+h4OQ5Hm8eMuJKuHpyhOpQSpTaai58i5bSdk7St10Pz/8AgVrHwk8MfsTfE/8AZut/2GPGPjb/AIKDe" +
                        "MNH8aeD/HGs674FN1qlrqOtR6hbR6rNrWqJ5lrBbW0oKou1jKhABLmU/snF2GzLEcVYfM3m9KnktOdKU" +
                        "Eq1ouMeVuCpx0k5SW7uuV+XKfi/CGKy3D8J4jK1lFapnVSFWM26N5KU+ZKbqS1ioxeys+Zba8z9K/aB+" +
                        "EXxY1X/AIIWfsufD3S/hh4i1Lx9o/iW1udW8D2Gi6lNrFrGmo+IizTWccJmRQJFyWQfeHqK8Pg3iXLqf" +
                        "i3mGJniKaoypu03OKi/dpbSvZ7Pr0Pe404ZzKp4Q5fhoYeo60aivBQk5L3qu8bXW66dT6m8ZfBXxl/wS" +
                        "z/al8JfGr9mP4c634x/Y4+Of2LwD8e/gp8P7PUdbvPDl/ZwFLfV7S3hE87gKGlBIbJ82JmXzYiv57lnF" +
                        "WF8QeH6mBzSvCnmeGvOjVm4wU03rCTdktbLp9mST5ZX/Q804UxXh5xDSx2VUJ1MrxNoVqUFKbhJLScUr" +
                        "t6XfX7UW1zRt5F8bPhL4C/Zs/bl+Nvx2/aP/ZKuv2pf2Uv2oYNK8YeGviPovheLxNeeDtZitws0M9tKq" +
                        "tBFKZHLZ2l0ERXe6Oo+l4V4jxme8JYTAZZmSwWY4JyjKDqezVWN9Gmt2rK29nzXsmmfM8V8N4PIeLsXm" +
                        "GZ5a8bl2NUZRqKn7R0pJapp7J3d9rrltdpo/Qf9hfXv2J/H3xB8V6/+y/8Ashal8Gr/AMO6TFHJ8WdY8" +
                        "ADwrY6jb6hMjSWVpdt80jjy0eRCFyMEbgMj8Y8W8HxVg8FTp5rmUcQpy/hqt7RxcVpKUem7SevZ2P2vw" +
                        "ixnCmNxtSplWWSw7hH+I6Ps1JSesYy6vRNrTurnRf8ABXvwr4o8bf8ABO79oXwx4M8N3/i7xLqf/CJ/2" +
                        "b4e8MWdxf31x5PjnRriTyoLRJJH2Rxs7YU4UEngGuL6NeY4fCca4KrXqRp017S8pNRSvRqJXbsldu3qd" +
                        "v0mMuxGL4IxtKhTlUqS9naMU5N2rU27JXbsk36H1z+zNp9/pP7N/wCz7pWq2U2manpngjwpp+pabqEbw" +
                        "z288Og2sckckcgDI6MCGUgEEYNfm3HlaFTPMbODTi61RprVNObs0+qZ+lcA0Z08iwUJpxlGjTTT0aahG" +
                        "6a6NH5r/wDBC7wL43+Hn7FWqaD4/wDB2q+B9dfxvruoJovjDT7vTLswSafpqpIIb2ON9jFCA2MHB9K/d" +
                        "PpbZvhMbxVGph6sakPYwV4yUlfmnpdNq5+EfRDyfF4LhSVPEUpUp+2m7Si4u3LDWzSdj9lq/mA/qQ/I7" +
                        "/giV4K8ZeAf2FtB8PeO/CWp+Ctfj8S+IruTQ/FthdabeLFLcRlHMN5HG4VgODjBr+kPpV5rhcZxdOph6" +
                        "kakPZwV4tSWz6ptH81fRPyrFYLhCFPEUpU5+0m7Si4u110aTPg74QfCP9piD9lz/gsVoXw18Fa/4a+Jn" +
                        "jzx/rOofD+G407ULG81nSZNWle/GmeYkbztcWBmjhMWdzMoGSRX6/xLxJkL4g4YqYqrCdClQip+9FqMu" +
                        "VcvPvblnyt32Sdz8e4Z4az9cP8AFFPC0qkMRVrzcPdknOPM+bk2vzQ5krbtqx82+ONX+CHjj/gnFP8As" +
                        "3fsufsL+Lbj9omHRPD0fxo8at4DaO/0a+0bU9P1bV57nWJomubmS6mtdkMEZyY5AAqBBHX3OU4bNsJxw" +
                        "szzXN6SwXPP2UPbaSUoyjBKCfLFRTu5Pqt3fmPhM2xOU4vgZ5ZlOUVXjlCHtZ+x96DhKMpt1GuaTk1aM" +
                        "V0eyS5T6L/4KJX/AI38EeAf+CJup+FfBs/iP4keENR8LX/hz4fXgazub/W9PsvC8lvpzi4CmJ5Z41iO8" +
                        "DaTz0r4nwUo4TF4ziqNWqoUKkailNapQk615K26Sd9Nz7jxurYvCYPhOdGk516cqbjB6NziqNoO+zclb" +
                        "XY9b/a9/bl8Rfts/BXXf2Qf2Xv2b/iK3xp+MTWPhTxza/ErwzNoll4QsBexT3h1G4mkeONv3flF2wihi" +
                        "27cFU/N+GvhLQ4VzWGc5rjsP9Vw95Q9nUU3Vdmo8qSu9723drWtdr6XxM8Xa/FmVTyXKcBiPreItGftK" +
                        "bgqSunLnbdlta+yu3e9k+H/AOCgvhvxd+yr49/4IveEvhZ4Vn+LPiv4CR+INB0vwppAWK78R/2BpvhWC" +
                        "8jgDA4nuooZSgCk72GFJwD63gzjsNxDg+Ka2LqKhTxTg3J7Q55VnFvyi2r+S1a3PJ8acBieHcZwrRwlN" +
                        "16mF50orepyRoqSXnJJ283onsb/AO2f+114h/4KLfCeH9i79lX4A+O28X/FfVNDg+K/iD4peG7jQ9N8H" +
                        "6dpup2+sN9undpVSRZ7aMuc7dgYIXdlU8fhd4bUeCcxed5tjKHsqEZ+zjTmpyqylFx91aXVm7db2bsk2" +
                        "dnin4l1+OMtWR5Rgq/ta8oe0lUpuEaUYyUveetndK/S10rtpEf7av7J1n+z7+0h+z5+0rq/7N0v7XH7M" +
                        "vhbwFpn7Pnxj8C6fo8euavph0K2ktrPWY7OQkH90sQ3t8q7HR3TzEYPws8RZZ1keNyyGOWBx868q1Kbl" +
                        "yRlztOVNy9b6bu6aT5WifFXw4jkue4LNJ4B4/AQoRoVYKPPKPImo1FH0trsrNNrmTPoz9k3xj/wTp+Kf" +
                        "xt8G2X7O/7D2p+E/F2lx3fiez+Ld58M00PS9AmsYpBtl1F+Yp3YGOPapBbK7s4B+I8Rss42y/Kqssyza" +
                        "M6UrRdNV+eU07bR6pbvrbWx9z4b5pwPmObUo5blEqdWN5Kq8PyRg1fefRt6LpfS5Z/4JweBfG/hb9tX/" +
                        "gq/r3ifwdqvhzQvGXjfQNQ8Ia1r2n3dnaarBHqHidnks5riNEnRRMhLRkgbl9RUeOGb4TEcK8O06VWM5" +
                        "06M1JKSbi+WjpJJ3T0e/Zl+BeT4vD8V8R1KtKUIVK0HFuLSkuatrFtWa1W190dL8HvBXjKx/wCCxv7W3" +
                        "jm98JanZ+Cta+GvhrStG8YXVhdR6Xd3US6Lvhhu3QQySL5bblViRg5HBrh4mzXCz8MctoRqRdWOIqNxu" +
                        "uZJ+01cb3S1Wtjv4YyrFQ8UMyxEqUlSlh6aUnF8ra9ndKVrN6PRM+k/2Gv2wNf/AGxvBHj7xhr/AMBdb" +
                        "+As3grxDceB7bR/GU0lw1+kEEcpmV5bOyKyIX2SxBWCNgb2zx8L4s+GlHhjF0aNPGQxSqU1O8Va121b4" +
                        "paPdO6uuiPvPCPxNrcUYStWqYOeFdOo4Wk73sk7/DHVbNWdn1Z9vV+UH6yFABQAUAFABQAUAZF54f0HU" +
                        "dV0bXdQ0S0vtc8O/aP+Ef1m8toZbuw+2RiGf7PM6l4vNQBX2EbhwcigDXoAKACgAoAKACgAoAKACgAoA" +
                        "KACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoA/PX9tL9kDxv8AtL/F79iX4ieFPE2laDpn7MXj2" +
                        "0+K/i2x8Qm7E+oWdvqmlXzQ2n2aGVfNK2DgeYVGSOeuP2jwt8S8JkOWZrhq1OUpYyg6cXG1otxmryu1p" +
                        "7y2uz8U8VfDLF59meU4mjUjGOCrqpJSveSUoO0bJ6+697LY/Qqvxc/az4N/ag/ZR8ZfHP8AaY/Yg+N3h" +
                        "7xHpmkaB+y9rHiXxH4u0nWTdC81CLWotLjiWz8iKRNyGxbd5jKORjPNfr/APiJhcpyHNsDUhKU8bCnGL" +
                        "VrR5HO/Ndp68ytZM/HfEDw5xWb5/lGPp1Ixhgp1JSTveSmoW5bJrTld7tH3lX5AfsQUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQB//2Qs=";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.PointSeriesLabel pointSeriesLabel1 = new DevExpress.XtraCharts.PointSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView1 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary10 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary11 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary12 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary13 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary14 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary15 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary16 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary17 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram2 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.PointSeriesLabel pointSeriesLabel2 = new DevExpress.XtraCharts.PointSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions2 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView2 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary18 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary19 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary20 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.ReportHeader = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.PageFooter = new DevExpress.XtraReports.UI.PageFooterBand();
            this.GroupHeader3 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.label51 = new DevExpress.XtraReports.UI.XRLabel();
            this.label50 = new DevExpress.XtraReports.UI.XRLabel();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.label25 = new DevExpress.XtraReports.UI.XRLabel();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.label24 = new DevExpress.XtraReports.UI.XRLabel();
            this.label28 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.chart3 = new DevExpress.XtraReports.UI.XRChart();
            this.VentaCteCat = new XtraReportSerialization.VentaCteCatDataSet();
            this.label52 = new DevExpress.XtraReports.UI.XRLabel();
            this.label44 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label56 = new DevExpress.XtraReports.UI.XRLabel();
            this.label61 = new DevExpress.XtraReports.UI.XRLabel();
            this.label55 = new DevExpress.XtraReports.UI.XRLabel();
            this.label53 = new DevExpress.XtraReports.UI.XRLabel();
            this.label54 = new DevExpress.XtraReports.UI.XRLabel();
            this.label57 = new DevExpress.XtraReports.UI.XRLabel();
            this.label198 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo3 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.label63 = new DevExpress.XtraReports.UI.XRLabel();
            this.label41 = new DevExpress.XtraReports.UI.XRLabel();
            this.label34 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.label62 = new DevExpress.XtraReports.UI.XRLabel();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.pageBreak1 = new DevExpress.XtraReports.UI.XRPageBreak();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label27 = new DevExpress.XtraReports.UI.XRLabel();
            this.label58 = new DevExpress.XtraReports.UI.XRLabel();
            this.label60 = new DevExpress.XtraReports.UI.XRLabel();
            this.label59 = new DevExpress.XtraReports.UI.XRLabel();
            this.label26 = new DevExpress.XtraReports.UI.XRLabel();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.line2 = new DevExpress.XtraReports.UI.XRLine();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo4 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.line4 = new DevExpress.XtraReports.UI.XRLine();
            this.label37 = new DevExpress.XtraReports.UI.XRLabel();
            this.label36 = new DevExpress.XtraReports.UI.XRLabel();
            this.label48 = new DevExpress.XtraReports.UI.XRLabel();
            this.label47 = new DevExpress.XtraReports.UI.XRLabel();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label33 = new DevExpress.XtraReports.UI.XRLabel();
            this.label39 = new DevExpress.XtraReports.UI.XRLabel();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.label35 = new DevExpress.XtraReports.UI.XRLabel();
            this.label32 = new DevExpress.XtraReports.UI.XRLabel();
            this.label38 = new DevExpress.XtraReports.UI.XRLabel();
            this.TableTableAdapter = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand1 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection1 = new System.Data.OleDb.OleDbConnection();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.VentaCteCat)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label51,
                        this.label50,
                        this.label49,
                        this.label45,
                        this.label25,
                        this.label23,
                        this.label24,
                        this.label28,
                        this.label18,
                        this.label19,
                        this.label2});
            this.Detail.HeightF = 18.00003F;
            this.Detail.Name = "Detail";
            this.Detail.Scripts.OnBeforePrint = "Detail_BeforePrint";
            this.Detail.StyleName = "DataField";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 18F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 54F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart3});
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Moneda", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.GroupUnion = DevExpress.XtraReports.UI.GroupUnion.WholePage;
            this.GroupHeader1.HeightF = 284.0017F;
            this.GroupHeader1.Level = 1;
            this.GroupHeader1.Name = "GroupHeader1";
            this.GroupHeader1.RepeatEveryPage = true;
            this.GroupHeader1.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label52,
                        this.label44,
                        this.label43,
                        this.label6,
                        this.label4,
                        this.label3,
                        this.label1,
                        this.line3,
                        this.label8,
                        this.label5,
                        this.label7,
                        this.label11,
                        this.label10});
            this.GroupFooter1.GroupUnion = DevExpress.XtraReports.UI.GroupFooterUnion.WithLastDetail;
            this.GroupFooter1.HeightF = 30.33339F;
            this.GroupFooter1.KeepTogether = true;
            this.GroupFooter1.Level = 1;
            this.GroupFooter1.Name = "GroupFooter1";
            this.GroupFooter1.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            // 
            // ReportHeader
            // 
            this.ReportHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label56,
                        this.label61,
                        this.label55,
                        this.label53,
                        this.label54,
                        this.label57,
                        this.label198,
                        this.pictureBox2,
                        this.line6,
                        this.pageInfo3});
            this.ReportHeader.HeightF = 158.125F;
            this.ReportHeader.Name = "ReportHeader";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label42,
                        this.label63,
                        this.label41,
                        this.label34,
                        this.label40,
                        this.label62,
                        this.line8,
                        this.pageInfo1,
                        this.label30,
                        this.pictureBox1,
                        this.chart1,
                        this.pageBreak1,
                        this.label29,
                        this.label27,
                        this.label58,
                        this.label60,
                        this.label59,
                        this.label26,
                        this.label16,
                        this.label15,
                        this.label17,
                        this.label22,
                        this.label21,
                        this.line2,
                        this.label14,
                        this.label20,
                        this.label9,
                        this.label12,
                        this.label13,
                        this.line7,
                        this.line1});
            this.ReportFooter.HeightF = 745.7069F;
            this.ReportFooter.Name = "ReportFooter";
            this.ReportFooter.Scripts.OnBeforePrint = "GroupHeader3_BeforePrint";
            // 
            // PageFooter
            // 
            this.PageFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.pageInfo4,
                        this.pageInfo2});
            this.PageFooter.HeightF = 20.83333F;
            this.PageFooter.Name = "PageFooter";
            // 
            // GroupHeader3
            // 
            this.GroupHeader3.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line5,
                        this.line4,
                        this.label37,
                        this.label36,
                        this.label48,
                        this.label47,
                        this.label46,
                        this.label33,
                        this.label39,
                        this.label31,
                        this.label35,
                        this.label32,
                        this.label38});
            this.GroupHeader3.HeightF = 25.74997F;
            this.GroupHeader3.KeepTogether = true;
            this.GroupHeader3.Name = "GroupHeader3";
            this.GroupHeader3.RepeatEveryPage = true;
            this.GroupHeader3.Scripts.OnBeforePrint = "GroupHeader3_BeforePrint";
            // 
            // label51
            // 
            this.label51.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotalMC", "{0:$#,#.00}")});
            this.label51.Font = new System.Drawing.Font("Arial", 7F);
            this.label51.LocationFloat = new DevExpress.Utils.PointFloat(862F, 0F);
            this.label51.Name = "label51";
            this.label51.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label51.SizeF = new System.Drawing.SizeF(97F, 18.00003F);
            this.label51.StylePriority.UseFont = false;
            this.label51.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:$0.00}";
            this.label51.Summary = summary1;
            this.label51.Text = "label51";
            this.label51.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label50
            // 
            this.label50.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotalMC", "{0:$#,#.00}")});
            this.label50.Font = new System.Drawing.Font("Arial", 7F);
            this.label50.LocationFloat = new DevExpress.Utils.PointFloat(752F, 0F);
            this.label50.Name = "label50";
            this.label50.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label50.SizeF = new System.Drawing.SizeF(110F, 18.00003F);
            this.label50.StylePriority.UseFont = false;
            this.label50.StylePriority.UseTextAlignment = false;
            this.label50.Text = "label50";
            this.label50.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label49
            // 
            this.label49.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Utilidad", "{0:$#,#.00}")});
            this.label49.Font = new System.Drawing.Font("Arial", 7F);
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(662F, 0F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label49.StylePriority.UseFont = false;
            this.label49.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:$0.00}";
            this.label49.Summary = summary2;
            this.label49.Text = "label49";
            this.label49.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label45
            // 
            this.label45.CanGrow = false;
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Categoria")});
            this.label45.Font = new System.Drawing.Font("Arial", 7F);
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(1.000039F, 0F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.SizeF = new System.Drawing.SizeF(131F, 18F);
            this.label45.StylePriority.UseFont = false;
            this.label45.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:$0.00}";
            this.label45.Summary = summary3;
            this.label45.Text = "label45";
            this.label45.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label45.WordWrap = false;
            // 
            // label25
            // 
            this.label25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.DescuentosTotales", "{0:$#,#.00}")});
            this.label25.Font = new System.Drawing.Font("Arial", 7F);
            this.label25.LocationFloat = new DevExpress.Utils.PointFloat(312F, 0F);
            this.label25.Name = "label25";
            this.label25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label25.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label25.StylePriority.UseFont = false;
            this.label25.StylePriority.UseTextAlignment = false;
            this.label25.Text = "label25";
            this.label25.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label23
            // 
            this.label23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotal", "{0:$#,#.00}")});
            this.label23.Font = new System.Drawing.Font("Arial", 7F);
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(482F, 0F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseTextAlignment = false;
            this.label23.Text = "label23";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label24
            // 
            this.label24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotal", "{0:$#,#.00}")});
            this.label24.Font = new System.Drawing.Font("Arial", 7F);
            this.label24.LocationFloat = new DevExpress.Utils.PointFloat(572F, 0F);
            this.label24.Name = "label24";
            this.label24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label24.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label24.StylePriority.UseFont = false;
            this.label24.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:$0.00}";
            this.label24.Summary = summary4;
            this.label24.Text = "label24";
            this.label24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label28
            // 
            this.label28.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.UtilidadMC", "{0:$#,#.00}")});
            this.label28.Font = new System.Drawing.Font("Arial", 7F);
            this.label28.LocationFloat = new DevExpress.Utils.PointFloat(959.0001F, 0F);
            this.label28.Name = "label28";
            this.label28.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label28.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label28.StylePriority.UseFont = false;
            this.label28.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:$0.00}";
            this.label28.Summary = summary5;
            this.label28.Text = "label28";
            this.label28.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PrecioTotal", "{0:$#,#.00}")});
            this.label18.Font = new System.Drawing.Font("Arial", 7F);
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(132F, 0F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:$0.00}";
            this.label18.Summary = summary6;
            this.label18.Text = "label18";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SubTotal", "{0:$#,#.00}")});
            this.label19.Font = new System.Drawing.Font("Arial", 7F);
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(222F, 0F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label19.StylePriority.UseFont = false;
            this.label19.StylePriority.UseTextAlignment = false;
            this.label19.Text = "label19";
            this.label19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label2
            // 
            this.label2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Impuestos", "{0:$#,#.00}")});
            this.label2.Font = new System.Drawing.Font("Arial", 7F);
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(392F, 0F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:$0.00}";
            this.label2.Summary = summary7;
            this.label2.Text = "label2";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // chart3
            // 
            this.chart3.BorderColor = System.Drawing.Color.Black;
            this.chart3.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart3.DataMember = "Table";
            this.chart3.DataSource = this.VentaCteCat;
            xYDiagram1.AxisX.Alignment = DevExpress.XtraCharts.AxisAlignment.Zero;
            xYDiagram1.AxisX.Label.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            this.chart3.Diagram = xYDiagram1;
            this.chart3.IndicatorsPaletteName = "Default";
            this.chart3.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart3.Legend.HorizontalIndent = 1;
            this.chart3.Legend.Margins.Bottom = 1;
            this.chart3.Legend.Margins.Left = 1;
            this.chart3.Legend.Margins.Right = 1;
            this.chart3.Legend.Margins.Top = 1;
            this.chart3.Legend.TextOffset = 0;
            this.chart3.Legend.VerticalIndent = 1;
            this.chart3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.chart3.Name = "chart3";
            this.chart3.Scripts.OnBeforePrint = "chart2_BeforePrint";
            this.chart3.SeriesDataMember = "SaldoDescripcion";
            this.chart3.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart3.SeriesTemplate.ArgumentDataMember = "FechaGrafica";
            pointSeriesLabel1.Font = new System.Drawing.Font("Arial", 6F);
            pointSeriesLabel1.LineVisible = true;
            pointSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart3.SeriesTemplate.Label = pointSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart3.SeriesTemplate.PointOptions = pointOptions1;
            this.chart3.SeriesTemplate.ValueDataMembersSerializable = "SaldoImporte";
            this.chart3.SeriesTemplate.View = lineSeriesView1;
            this.chart3.SizeF = new System.Drawing.SizeF(1049F, 274.0017F);
            // 
            // VentaCteCat
            // 
            this.VentaCteCat.DataSetName = "VentaCteCatDataSet";
            this.VentaCteCat.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // label52
            // 
            this.label52.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Utilidad")});
            this.label52.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label52.LocationFloat = new DevExpress.Utils.PointFloat(661.9999F, 5.666637F);
            this.label52.Name = "label52";
            this.label52.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label52.SizeF = new System.Drawing.SizeF(90.00009F, 18.00003F);
            this.label52.StylePriority.UseFont = false;
            this.label52.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:$#,#.00}";
            summary8.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label52.Summary = summary8;
            this.label52.Text = "label52";
            this.label52.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label44
            // 
            this.label44.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotal")});
            this.label44.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label44.LocationFloat = new DevExpress.Utils.PointFloat(571.9999F, 5.666637F);
            this.label44.Name = "label44";
            this.label44.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label44.SizeF = new System.Drawing.SizeF(90.00009F, 18.00003F);
            this.label44.StylePriority.UseFont = false;
            this.label44.StylePriority.UseTextAlignment = false;
            summary9.FormatString = "{0:$#,#.00}";
            summary9.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label44.Summary = summary9;
            this.label44.Text = "label44";
            this.label44.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label43
            // 
            this.label43.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PrecioTotal")});
            this.label43.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(132F, 5.666637F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label43.StylePriority.UseFont = false;
            this.label43.StylePriority.UseTextAlignment = false;
            summary10.FormatString = "{0:$#,#.00}";
            summary10.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label43.Summary = summary10;
            this.label43.Text = "label43";
            this.label43.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label6
            // 
            this.label6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SubTotal")});
            this.label6.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(222F, 5.666637F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label6.StylePriority.UseFont = false;
            this.label6.StylePriority.UseTextAlignment = false;
            summary11.FormatString = "{0:$#,#.00}";
            summary11.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label6.Summary = summary11;
            this.label6.Text = "label6";
            this.label6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label4
            // 
            this.label4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.DescuentosTotales")});
            this.label4.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(311.9999F, 5.666637F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseTextAlignment = false;
            summary12.FormatString = "{0:$#,#.00}";
            summary12.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label4.Summary = summary12;
            this.label4.Text = "label4";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label3
            // 
            this.label3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Impuestos")});
            this.label3.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(391.9999F, 5.666637F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(90.00003F, 18.00003F);
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseTextAlignment = false;
            summary13.FormatString = "{0:$#,#.00}";
            summary13.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label3.Summary = summary13;
            this.label3.Text = "label3";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label1
            // 
            this.label1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotal")});
            this.label1.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(482F, 5.666637F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(90.00009F, 18.00003F);
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseTextAlignment = false;
            summary14.FormatString = "{0:$#,#.00}";
            summary14.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label1.Summary = summary14;
            this.label1.Text = "label1";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line3
            // 
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(1049F, 5.666637F);
            // 
            // label8
            // 
            this.label8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotalMC")});
            this.label8.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(862F, 5.666637F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(97F, 18.00003F);
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseTextAlignment = false;
            summary15.FormatString = "{0:$#,#.00}";
            summary15.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label8.Summary = summary15;
            this.label8.Text = "label8";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label5
            // 
            this.label5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.UtilidadMC")});
            this.label5.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(959F, 5.666637F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(90F, 18.00003F);
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseTextAlignment = false;
            summary16.FormatString = "{0:$#,#.00}";
            summary16.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label5.Summary = summary16;
            this.label5.Text = "label5";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotalMC")});
            this.label7.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(752F, 5.666637F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(110F, 18F);
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseTextAlignment = false;
            summary17.FormatString = "{0:$#,#.00}";
            summary17.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label7.Summary = summary17;
            this.label7.Text = "label7";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label11
            // 
            this.label11.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(0F, 5.666605F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(49.16668F, 18.00003F);
            this.label11.StylePriority.UseFont = false;
            this.label11.StylePriority.UseTextAlignment = false;
            this.label11.Text = "Total en ";
            this.label11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label10
            // 
            this.label10.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Moneda")});
            this.label10.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(49.16668F, 5.666637F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(82.83341F, 18.00003F);
            this.label10.StyleName = "DataField";
            this.label10.StylePriority.UseFont = false;
            this.label10.StylePriority.UseTextAlignment = false;
            this.label10.Text = "label10";
            this.label10.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label56
            // 
            this.label56.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label56.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label56.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label56.LocationFloat = new DevExpress.Utils.PointFloat(1.000031F, 127.9584F);
            this.label56.Name = "label56";
            this.label56.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label56.SizeF = new System.Drawing.SizeF(483.8333F, 18.00001F);
            this.label56.StyleName = "Title";
            this.label56.StylePriority.UseFont = false;
            this.label56.StylePriority.UseForeColor = false;
            this.label56.StylePriority.UseTextAlignment = false;
            this.label56.Text = "label198";
            this.label56.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label61
            // 
            this.label61.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label61.LocationFloat = new DevExpress.Utils.PointFloat(484.8333F, 127.9584F);
            this.label61.Name = "label61";
            this.label61.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label61.SizeF = new System.Drawing.SizeF(74.16666F, 17.99997F);
            this.label61.StylePriority.UseFont = false;
            this.label61.Text = "De la Fecha";
            // 
            // label55
            // 
            this.label55.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label55.LocationFloat = new DevExpress.Utils.PointFloat(759F, 127.9584F);
            this.label55.Name = "label55";
            this.label55.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label55.SizeF = new System.Drawing.SizeF(92F, 18F);
            this.label55.StylePriority.UseFont = false;
            this.label55.Text = "Hasta la Fecha";
            // 
            // label53
            // 
            this.label53.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaDesde", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label53.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label53.LocationFloat = new DevExpress.Utils.PointFloat(559F, 127.9584F);
            this.label53.Name = "label53";
            this.label53.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label53.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label53.StylePriority.UseFont = false;
            this.label53.Text = "label53";
            // 
            // label54
            // 
            this.label54.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaHasta", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label54.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label54.LocationFloat = new DevExpress.Utils.PointFloat(851F, 127.9584F);
            this.label54.Name = "label54";
            this.label54.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label54.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label54.StylePriority.UseFont = false;
            this.label54.Text = "label54";
            // 
            // label57
            // 
            this.label57.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label57.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label57.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label57.LocationFloat = new DevExpress.Utils.PointFloat(369.2083F, 107.9584F);
            this.label57.Name = "label57";
            this.label57.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label57.SizeF = new System.Drawing.SizeF(368.7917F, 18F);
            this.label57.StyleName = "Title";
            this.label57.StylePriority.UseFont = false;
            this.label57.StylePriority.UseForeColor = false;
            this.label57.StylePriority.UseTextAlignment = false;
            this.label57.Text = "label57";
            this.label57.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label198
            // 
            this.label198.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label198.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label198.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label198.LocationFloat = new DevExpress.Utils.PointFloat(1.000039F, 107.9584F);
            this.label198.Name = "label198";
            this.label198.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label198.SizeF = new System.Drawing.SizeF(368.2083F, 18F);
            this.label198.StyleName = "Title";
            this.label198.StylePriority.UseFont = false;
            this.label198.StylePriority.UseForeColor = false;
            this.label198.StylePriority.UseTextAlignment = false;
            this.label198.Text = "label198";
            this.label198.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10.00001F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // line6
            // 
            this.line6.BorderColor = System.Drawing.Color.Gray;
            this.line6.ForeColor = System.Drawing.Color.Gray;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(1.000039F, 125.9584F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(1050F, 2F);
            this.line6.StylePriority.UseBorderColor = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // pageInfo3
            // 
            this.pageInfo3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo3.LocationFloat = new DevExpress.Utils.PointFloat(738F, 107.9584F);
            this.pageInfo3.Name = "pageInfo3";
            this.pageInfo3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo3.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo3.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo3.StyleName = "PageInfo";
            this.pageInfo3.StylePriority.UseFont = false;
            this.pageInfo3.StylePriority.UseTextAlignment = false;
            this.pageInfo3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label42
            // 
            this.label42.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(483.8333F, 152.2917F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(74.16666F, 17.99997F);
            this.label42.StylePriority.UseFont = false;
            this.label42.Text = "De la Fecha";
            // 
            // label63
            // 
            this.label63.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label63.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label63.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label63.LocationFloat = new DevExpress.Utils.PointFloat(0F, 152.2917F);
            this.label63.Name = "label63";
            this.label63.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label63.SizeF = new System.Drawing.SizeF(483.8333F, 18.00001F);
            this.label63.StyleName = "Title";
            this.label63.StylePriority.UseFont = false;
            this.label63.StylePriority.UseForeColor = false;
            this.label63.StylePriority.UseTextAlignment = false;
            this.label63.Text = "label198";
            this.label63.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label41
            // 
            this.label41.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label41.LocationFloat = new DevExpress.Utils.PointFloat(758F, 152.2917F);
            this.label41.Name = "label41";
            this.label41.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label41.SizeF = new System.Drawing.SizeF(92F, 18F);
            this.label41.StylePriority.UseFont = false;
            this.label41.Text = "Hasta la Fecha";
            // 
            // label34
            // 
            this.label34.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaHasta", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label34.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label34.LocationFloat = new DevExpress.Utils.PointFloat(850F, 152.2917F);
            this.label34.Name = "label34";
            this.label34.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label34.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label34.StylePriority.UseFont = false;
            this.label34.Text = "label54";
            // 
            // label40
            // 
            this.label40.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaDesde", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label40.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(558F, 152.2917F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label40.StylePriority.UseFont = false;
            this.label40.Text = "label53";
            // 
            // label62
            // 
            this.label62.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label62.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label62.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label62.LocationFloat = new DevExpress.Utils.PointFloat(369.2084F, 132.2917F);
            this.label62.Name = "label62";
            this.label62.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label62.SizeF = new System.Drawing.SizeF(368.7917F, 18F);
            this.label62.StyleName = "Title";
            this.label62.StylePriority.UseFont = false;
            this.label62.StylePriority.UseForeColor = false;
            this.label62.StylePriority.UseTextAlignment = false;
            this.label62.Text = "label57";
            this.label62.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // line8
            // 
            this.line8.BorderColor = System.Drawing.Color.Gray;
            this.line8.ForeColor = System.Drawing.Color.Gray;
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(1.000039F, 150.2917F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(1050F, 2F);
            this.line8.StylePriority.UseBorderColor = false;
            this.line8.StylePriority.UseForeColor = false;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(738F, 132.2917F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo1.StyleName = "PageInfo";
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label30
            // 
            this.label30.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label30.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label30.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(1.000039F, 132.2917F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(368.2083F, 18F);
            this.label30.StyleName = "Title";
            this.label30.StylePriority.UseFont = false;
            this.label30.StylePriority.UseForeColor = false;
            this.label30.StylePriority.UseTextAlignment = false;
            this.label30.Text = "label198";
            this.label30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.LocationFloat = new DevExpress.Utils.PointFloat(1.000039F, 21.875F);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // chart1
            // 
            this.chart1.AppearanceName = "Pastel Kit";
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart1.DataMember = "Table";
            this.chart1.DataSource = this.VentaCteCat;
            xYDiagram2.AxisX.Label.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            xYDiagram2.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram2.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram2.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram2.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram2.AxisY.VisibleInPanesSerializable = "-1";
            this.chart1.Diagram = xYDiagram2;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart1.Legend.HorizontalIndent = 0;
            this.chart1.Legend.TextOffset = 0;
            this.chart1.Legend.VerticalIndent = 0;
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 195.2501F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart1.SeriesDataMember = "SaldoDescripcionMC";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "FechaGrafica";
            pointSeriesLabel2.Font = new System.Drawing.Font("Arial", 6F);
            pointSeriesLabel2.LineVisible = true;
            pointSeriesLabel2.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart1.SeriesTemplate.Label = pointSeriesLabel2;
            pointOptions2.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions2;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "SaldoImporteMC";
            this.chart1.SeriesTemplate.View = lineSeriesView2;
            this.chart1.SizeF = new System.Drawing.SizeF(1049F, 486.04F);
            // 
            // pageBreak1
            // 
            this.pageBreak1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.pageBreak1.Name = "pageBreak1";
            // 
            // label29
            // 
            this.label29.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(450.9999F, 694.0818F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseTextAlignment = false;
            this.label29.Text = "Importe Total";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label29.Visible = false;
            // 
            // label27
            // 
            this.label27.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label27.LocationFloat = new DevExpress.Utils.PointFloat(360.9999F, 694.0818F);
            this.label27.Name = "label27";
            this.label27.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label27.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label27.StylePriority.UseFont = false;
            this.label27.StylePriority.UseTextAlignment = false;
            this.label27.Text = "Impuestos";
            this.label27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label27.Visible = false;
            // 
            // label58
            // 
            this.label58.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label58.LocationFloat = new DevExpress.Utils.PointFloat(720.9999F, 694.0818F);
            this.label58.Name = "label58";
            this.label58.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label58.SizeF = new System.Drawing.SizeF(110F, 18F);
            this.label58.StylePriority.UseFont = false;
            this.label58.StylePriority.UseTextAlignment = false;
            this.label58.Text = "Importe Total MC";
            this.label58.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label60
            // 
            this.label60.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label60.LocationFloat = new DevExpress.Utils.PointFloat(930.9999F, 694.0818F);
            this.label60.Name = "label60";
            this.label60.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label60.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label60.StylePriority.UseFont = false;
            this.label60.StylePriority.UseTextAlignment = false;
            this.label60.Text = "Utilidad MC";
            this.label60.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label59
            // 
            this.label59.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label59.LocationFloat = new DevExpress.Utils.PointFloat(830.9999F, 694.0818F);
            this.label59.Name = "label59";
            this.label59.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label59.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label59.StylePriority.UseFont = false;
            this.label59.StylePriority.UseTextAlignment = false;
            this.label59.Text = "Costo Total MC";
            this.label59.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label26
            // 
            this.label26.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label26.LocationFloat = new DevExpress.Utils.PointFloat(280.9999F, 694.0818F);
            this.label26.Name = "label26";
            this.label26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label26.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label26.StylePriority.UseFont = false;
            this.label26.StylePriority.UseTextAlignment = false;
            this.label26.Text = "Descuentos";
            this.label26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label26.Visible = false;
            // 
            // label16
            // 
            this.label16.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(630.9999F, 694.0818F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseTextAlignment = false;
            this.label16.Text = "Utilidad";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label16.Visible = false;
            // 
            // label15
            // 
            this.label15.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(190.9999F, 694.0818F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label15.StylePriority.UseFont = false;
            this.label15.StylePriority.UseTextAlignment = false;
            this.label15.Text = "SubTotal";
            this.label15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label15.Visible = false;
            // 
            // label17
            // 
            this.label17.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(0F, 694.0818F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.SizeF = new System.Drawing.SizeF(100.9999F, 18.00006F);
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseTextAlignment = false;
            this.label17.Text = "Moneda";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label17.Visible = false;
            // 
            // label22
            // 
            this.label22.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(100.9999F, 694.0818F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            this.label22.Text = "Precio Total";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label22.Visible = false;
            // 
            // label21
            // 
            this.label21.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(540.9999F, 694.0818F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label21.StylePriority.UseFont = false;
            this.label21.StylePriority.UseTextAlignment = false;
            this.label21.Text = "Costo Total";
            this.label21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label21.Visible = false;
            // 
            // line2
            // 
            this.line2.LocationFloat = new DevExpress.Utils.PointFloat(2.000077F, 717.7484F);
            this.line2.Name = "line2";
            this.line2.SizeF = new System.Drawing.SizeF(1049F, 2F);
            // 
            // label14
            // 
            this.label14.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotalMC")});
            this.label14.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(830.9998F, 719.7484F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseTextAlignment = false;
            summary18.FormatString = "{0:$#,#.00}";
            summary18.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label14.Summary = summary18;
            this.label14.Text = "label57";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label20
            // 
            this.label20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.UtilidadMC")});
            this.label20.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(930.9999F, 719.7484F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label20.StylePriority.UseFont = false;
            this.label20.StylePriority.UseTextAlignment = false;
            summary19.FormatString = "{0:$#,#.00}";
            summary19.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label20.Summary = summary19;
            this.label20.Text = "label52";
            this.label20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label9
            // 
            this.label9.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotalMC")});
            this.label9.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(720.9999F, 719.7484F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(110F, 18F);
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseTextAlignment = false;
            summary20.FormatString = "{0:$#,#.00}";
            summary20.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label9.Summary = summary20;
            this.label9.Text = "label6";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label12
            // 
            this.label12.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(0F, 719.7484F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(85.99982F, 18.00006F);
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseTextAlignment = false;
            this.label12.Text = "Gran Total en ";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label13
            // 
            this.label13.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Moneda")});
            this.label13.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(85.99981F, 719.7484F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(105.0001F, 18.00006F);
            this.label13.StyleName = "DataField";
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            this.label13.Text = "label10";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line7
            // 
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 691.9985F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(1049F, 2.083333F);
            // 
            // line1
            // 
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 712.0818F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(1049F, 5.666637F);
            // 
            // pageInfo4
            // 
            this.pageInfo4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo4.Format = "Página {0} de {1}";
            this.pageInfo4.LocationFloat = new DevExpress.Utils.PointFloat(668.6545F, 0F);
            this.pageInfo4.Name = "pageInfo4";
            this.pageInfo4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo4.SizeF = new System.Drawing.SizeF(381.3455F, 18F);
            this.pageInfo4.StyleName = "PageInfo";
            this.pageInfo4.StylePriority.UseFont = false;
            this.pageInfo4.StylePriority.UseTextAlignment = false;
            this.pageInfo4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pageInfo2
            // 
            this.pageInfo2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo2.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo2.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.StylePriority.UseFont = false;
            this.pageInfo2.StylePriority.UseTextAlignment = false;
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line5
            // 
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(1049F, 2.083333F);
            // 
            // line4
            // 
            this.line4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 20.08333F);
            this.line4.Name = "line4";
            this.line4.SizeF = new System.Drawing.SizeF(1049F, 5.666637F);
            // 
            // label37
            // 
            this.label37.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label37.LocationFloat = new DevExpress.Utils.PointFloat(482.0001F, 2.083333F);
            this.label37.Name = "label37";
            this.label37.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label37.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label37.StylePriority.UseFont = false;
            this.label37.StylePriority.UseTextAlignment = false;
            this.label37.Text = "Importe Total";
            this.label37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label36
            // 
            this.label36.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label36.LocationFloat = new DevExpress.Utils.PointFloat(391.9999F, 2.083333F);
            this.label36.Name = "label36";
            this.label36.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label36.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label36.StylePriority.UseFont = false;
            this.label36.StylePriority.UseTextAlignment = false;
            this.label36.Text = "Impuestos";
            this.label36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label48
            // 
            this.label48.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label48.LocationFloat = new DevExpress.Utils.PointFloat(959.0001F, 2.083333F);
            this.label48.Name = "label48";
            this.label48.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label48.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label48.StylePriority.UseFont = false;
            this.label48.StylePriority.UseTextAlignment = false;
            this.label48.Text = "Utilidad MC";
            this.label48.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label47
            // 
            this.label47.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label47.LocationFloat = new DevExpress.Utils.PointFloat(862F, 2.083333F);
            this.label47.Name = "label47";
            this.label47.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label47.SizeF = new System.Drawing.SizeF(97F, 18F);
            this.label47.StylePriority.UseFont = false;
            this.label47.StylePriority.UseTextAlignment = false;
            this.label47.Text = "Costo Total MC";
            this.label47.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label46
            // 
            this.label46.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(752F, 2.083333F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.SizeF = new System.Drawing.SizeF(110F, 18F);
            this.label46.StylePriority.UseFont = false;
            this.label46.StylePriority.UseTextAlignment = false;
            this.label46.Text = "Importe Total MC";
            this.label46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label33
            // 
            this.label33.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label33.LocationFloat = new DevExpress.Utils.PointFloat(1.000039F, 2.083333F);
            this.label33.Name = "label33";
            this.label33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label33.SizeF = new System.Drawing.SizeF(131F, 18F);
            this.label33.StylePriority.UseFont = false;
            this.label33.StylePriority.UseTextAlignment = false;
            this.label33.Text = "Categoría del Cliente";
            this.label33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label39
            // 
            this.label39.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label39.LocationFloat = new DevExpress.Utils.PointFloat(662.0001F, 2.083333F);
            this.label39.Name = "label39";
            this.label39.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label39.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label39.StylePriority.UseFont = false;
            this.label39.StylePriority.UseTextAlignment = false;
            this.label39.Text = "Utilidad";
            this.label39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label31
            // 
            this.label31.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(222F, 2.083333F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseTextAlignment = false;
            this.label31.Text = "Sub Total";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label35
            // 
            this.label35.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label35.LocationFloat = new DevExpress.Utils.PointFloat(312.0001F, 2.083333F);
            this.label35.Name = "label35";
            this.label35.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label35.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label35.StylePriority.UseFont = false;
            this.label35.StylePriority.UseTextAlignment = false;
            this.label35.Text = "Descuentos";
            this.label35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label32
            // 
            this.label32.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label32.LocationFloat = new DevExpress.Utils.PointFloat(132F, 2.083333F);
            this.label32.Name = "label32";
            this.label32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label32.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label32.StylePriority.UseFont = false;
            this.label32.StylePriority.UseTextAlignment = false;
            this.label32.Text = "Precio Total";
            this.label32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label38
            // 
            this.label38.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label38.LocationFloat = new DevExpress.Utils.PointFloat(572.0001F, 2.083333F);
            this.label38.Name = "label38";
            this.label38.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label38.SizeF = new System.Drawing.SizeF(90F, 18F);
            this.label38.StylePriority.UseFont = false;
            this.label38.StylePriority.UseTextAlignment = false;
            this.label38.Text = "Costo Total";
            this.label38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.SelectCommand = this.oleDbCommand1;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand1
            // 
            this.oleDbCommand1.CommandText = "SPINFORMEVENTACTECAT 1";
            this.oleDbCommand1.CommandTimeout = 0;
            this.oleDbCommand1.Connection = this.oleDbConnection1;
            // 
            // oleDbConnection1
            // 
            this.oleDbConnection1.ConnectionString = "Provider=SQLOLEDB;Data Source=.;Initial Catalog=INFORMES11;User ID=SA;";
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Maroon;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Maroon;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // InformeVentaCteCat
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.GroupHeader1,
                        this.GroupFooter1,
                        this.ReportHeader,
                        this.ReportFooter,
                        this.PageFooter,
                        this.GroupHeader3});
            this.DataAdapter = this.TableTableAdapter;
            this.DataMember = "Table";
            this.DataSource = this.VentaCteCat;
            this.Landscape = true;
            this.Margins = new System.Drawing.Printing.Margins(18, 31, 18, 54);
            this.Name = "InformeVentaCteCat";
            this.PageHeight = 850;
            this.PageWidth = 1100;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "EXEC spInformeVentaCteCat [EstacionTrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.VentaCteCat)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("VentaCteCatDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class VentaCteCatDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VentaCteCatDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected VentaCteCatDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            VentaCteCatDataSet cln = ((VentaCteCatDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "VentaCteCatDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            VentaCteCatDataSet ds = new VentaCteCatDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnIDInforme;
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnMoneda2;
            private global::System.Data.DataColumn columnCategoria;
            private global::System.Data.DataColumn columnCostoTotal;
            private global::System.Data.DataColumn columnPrecioTotal;
            private global::System.Data.DataColumn columnImporte;
            private global::System.Data.DataColumn columnDescuentosTotales;
            private global::System.Data.DataColumn columnSubTotal;
            private global::System.Data.DataColumn columnImpuestos;
            private global::System.Data.DataColumn columnImporteTotal;
            private global::System.Data.DataColumn columnUtilidad;
            private global::System.Data.DataColumn columnCostoTotalMC;
            private global::System.Data.DataColumn columnImporteTotalMC;
            private global::System.Data.DataColumn columnUtilidadMC;
            private global::System.Data.DataColumn columnSaldoDescripcion;
            private global::System.Data.DataColumn columnSaldoImporte;
            private global::System.Data.DataColumn columnSaldoDescripcionMC;
            private global::System.Data.DataColumn columnSaldoImporteMC;
            private global::System.Data.DataColumn columnGrafica1;
            private global::System.Data.DataColumn columnGrafica2;
            private global::System.Data.DataColumn columnReporte;
            private global::System.Data.DataColumn columnTotal;
            private global::System.Data.DataColumn columnContMoneda;
            private global::System.Data.DataColumn columnFechaGrafica;
            private global::System.Data.DataColumn columnFechaDesde;
            private global::System.Data.DataColumn columnFechaHasta;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnPeriodo;
            private global::System.Data.DataColumn columnEjercicio;
            private global::System.Data.DataColumn columnEtiqueta;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDInformeColumn {
                get {
                    return this.columnIDInforme;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Moneda2Column {
                get {
                    return this.columnMoneda2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoriaColumn {
                get {
                    return this.columnCategoria;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoTotalColumn {
                get {
                    return this.columnCostoTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioTotalColumn {
                get {
                    return this.columnPrecioTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteColumn {
                get {
                    return this.columnImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescuentosTotalesColumn {
                get {
                    return this.columnDescuentosTotales;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImpuestosColumn {
                get {
                    return this.columnImpuestos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteTotalColumn {
                get {
                    return this.columnImporteTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilidadColumn {
                get {
                    return this.columnUtilidad;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoTotalMCColumn {
                get {
                    return this.columnCostoTotalMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteTotalMCColumn {
                get {
                    return this.columnImporteTotalMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilidadMCColumn {
                get {
                    return this.columnUtilidadMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionColumn {
                get {
                    return this.columnSaldoDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteColumn {
                get {
                    return this.columnSaldoImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionMCColumn {
                get {
                    return this.columnSaldoDescripcionMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteMCColumn {
                get {
                    return this.columnSaldoImporteMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica1Column {
                get {
                    return this.columnGrafica1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica2Column {
                get {
                    return this.columnGrafica2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporteColumn {
                get {
                    return this.columnReporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContMonedaColumn {
                get {
                    return this.columnContMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaGraficaColumn {
                get {
                    return this.columnFechaGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaDesdeColumn {
                get {
                    return this.columnFechaDesde;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaHastaColumn {
                get {
                    return this.columnFechaHasta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoColumn {
                get {
                    return this.columnPeriodo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EjercicioColumn {
                get {
                    return this.columnEjercicio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtiquetaColumn {
                get {
                    return this.columnEtiqueta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        int Estacion, 
                        int IDInforme, 
                        string Empresa, 
                        string Moneda, 
                        string Moneda2, 
                        string Categoria, 
                        decimal CostoTotal, 
                        decimal PrecioTotal, 
                        decimal Importe, 
                        decimal DescuentosTotales, 
                        decimal SubTotal, 
                        decimal Impuestos, 
                        decimal ImporteTotal, 
                        decimal Utilidad, 
                        decimal CostoTotalMC, 
                        decimal ImporteTotalMC, 
                        decimal UtilidadMC, 
                        string SaldoDescripcion, 
                        decimal SaldoImporte, 
                        string SaldoDescripcionMC, 
                        decimal SaldoImporteMC, 
                        bool Grafica1, 
                        bool Grafica2, 
                        string Reporte, 
                        bool Total, 
                        string ContMoneda, 
                        string FechaGrafica, 
                        System.DateTime FechaDesde, 
                        System.DateTime FechaHasta, 
                        string Titulo, 
                        string EmpresaNombre, 
                        int Periodo, 
                        int Ejercicio, 
                        bool Etiqueta, 
                        bool VerGraficaDetalle) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        IDInforme,
                        Empresa,
                        Moneda,
                        Moneda2,
                        Categoria,
                        CostoTotal,
                        PrecioTotal,
                        Importe,
                        DescuentosTotales,
                        SubTotal,
                        Impuestos,
                        ImporteTotal,
                        Utilidad,
                        CostoTotalMC,
                        ImporteTotalMC,
                        UtilidadMC,
                        SaldoDescripcion,
                        SaldoImporte,
                        SaldoDescripcionMC,
                        SaldoImporteMC,
                        Grafica1,
                        Grafica2,
                        Reporte,
                        Total,
                        ContMoneda,
                        FechaGrafica,
                        FechaDesde,
                        FechaHasta,
                        Titulo,
                        EmpresaNombre,
                        Periodo,
                        Ejercicio,
                        Etiqueta,
                        VerGraficaDetalle};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnIDInforme = base.Columns["IDInforme"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnMoneda2 = base.Columns["Moneda2"];
                this.columnCategoria = base.Columns["Categoria"];
                this.columnCostoTotal = base.Columns["CostoTotal"];
                this.columnPrecioTotal = base.Columns["PrecioTotal"];
                this.columnImporte = base.Columns["Importe"];
                this.columnDescuentosTotales = base.Columns["DescuentosTotales"];
                this.columnSubTotal = base.Columns["SubTotal"];
                this.columnImpuestos = base.Columns["Impuestos"];
                this.columnImporteTotal = base.Columns["ImporteTotal"];
                this.columnUtilidad = base.Columns["Utilidad"];
                this.columnCostoTotalMC = base.Columns["CostoTotalMC"];
                this.columnImporteTotalMC = base.Columns["ImporteTotalMC"];
                this.columnUtilidadMC = base.Columns["UtilidadMC"];
                this.columnSaldoDescripcion = base.Columns["SaldoDescripcion"];
                this.columnSaldoImporte = base.Columns["SaldoImporte"];
                this.columnSaldoDescripcionMC = base.Columns["SaldoDescripcionMC"];
                this.columnSaldoImporteMC = base.Columns["SaldoImporteMC"];
                this.columnGrafica1 = base.Columns["Grafica1"];
                this.columnGrafica2 = base.Columns["Grafica2"];
                this.columnReporte = base.Columns["Reporte"];
                this.columnTotal = base.Columns["Total"];
                this.columnContMoneda = base.Columns["ContMoneda"];
                this.columnFechaGrafica = base.Columns["FechaGrafica"];
                this.columnFechaDesde = base.Columns["FechaDesde"];
                this.columnFechaHasta = base.Columns["FechaHasta"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnPeriodo = base.Columns["Periodo"];
                this.columnEjercicio = base.Columns["Ejercicio"];
                this.columnEtiqueta = base.Columns["Etiqueta"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnIDInforme = new global::System.Data.DataColumn("IDInforme", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDInforme);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnMoneda2 = new global::System.Data.DataColumn("Moneda2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda2);
                this.columnCategoria = new global::System.Data.DataColumn("Categoria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoria);
                this.columnCostoTotal = new global::System.Data.DataColumn("CostoTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoTotal);
                this.columnPrecioTotal = new global::System.Data.DataColumn("PrecioTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecioTotal);
                this.columnImporte = new global::System.Data.DataColumn("Importe", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporte);
                this.columnDescuentosTotales = new global::System.Data.DataColumn("DescuentosTotales", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescuentosTotales);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
                this.columnImpuestos = new global::System.Data.DataColumn("Impuestos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImpuestos);
                this.columnImporteTotal = new global::System.Data.DataColumn("ImporteTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteTotal);
                this.columnUtilidad = new global::System.Data.DataColumn("Utilidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilidad);
                this.columnCostoTotalMC = new global::System.Data.DataColumn("CostoTotalMC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoTotalMC);
                this.columnImporteTotalMC = new global::System.Data.DataColumn("ImporteTotalMC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteTotalMC);
                this.columnUtilidadMC = new global::System.Data.DataColumn("UtilidadMC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilidadMC);
                this.columnSaldoDescripcion = new global::System.Data.DataColumn("SaldoDescripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcion);
                this.columnSaldoImporte = new global::System.Data.DataColumn("SaldoImporte", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporte);
                this.columnSaldoDescripcionMC = new global::System.Data.DataColumn("SaldoDescripcionMC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcionMC);
                this.columnSaldoImporteMC = new global::System.Data.DataColumn("SaldoImporteMC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporteMC);
                this.columnGrafica1 = new global::System.Data.DataColumn("Grafica1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica1);
                this.columnGrafica2 = new global::System.Data.DataColumn("Grafica2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica2);
                this.columnReporte = new global::System.Data.DataColumn("Reporte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporte);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnContMoneda = new global::System.Data.DataColumn("ContMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContMoneda);
                this.columnFechaGrafica = new global::System.Data.DataColumn("FechaGrafica", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaGrafica);
                this.columnFechaDesde = new global::System.Data.DataColumn("FechaDesde", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaDesde);
                this.columnFechaHasta = new global::System.Data.DataColumn("FechaHasta", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaHasta);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnPeriodo = new global::System.Data.DataColumn("Periodo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodo);
                this.columnEjercicio = new global::System.Data.DataColumn("Ejercicio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio);
                this.columnEtiqueta = new global::System.Data.DataColumn("Etiqueta", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtiqueta);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VentaCteCatDataSet ds = new VentaCteCatDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.table_Table.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDInforme {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDInformeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IDInforme\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDInformeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Moneda2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Moneda2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Categoria {
                get {
                    try {
                        return ((string)(this[this.table_Table.CategoriaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Categoria\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CategoriaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostoTotal {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.CostoTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoTotal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoTotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PrecioTotal {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.PrecioTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PrecioTotal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PrecioTotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Importe {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Importe\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DescuentosTotales {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.DescuentosTotalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DescuentosTotales\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescuentosTotalesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SubTotal {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubTotal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubTotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Impuestos {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImpuestosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Impuestos\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImpuestosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ImporteTotal {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImporteTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ImporteTotal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImporteTotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Utilidad {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.UtilidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Utilidad\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UtilidadColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostoTotalMC {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.CostoTotalMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoTotalMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoTotalMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ImporteTotalMC {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImporteTotalMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ImporteTotalMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImporteTotalMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilidadMC {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.UtilidadMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UtilidadMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UtilidadMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.SaldoDescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoDescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SaldoImporte {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.SaldoImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcionMC {
                get {
                    try {
                        return ((string)(this[this.table_Table.SaldoDescripcionMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcionMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoDescripcionMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SaldoImporteMC {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.SaldoImporteMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporteMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoImporteMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica1 {
                get {
                    try {
                        return ((bool)(this[this.table_Table.Grafica1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica2 {
                get {
                    try {
                        return ((bool)(this[this.table_Table.Grafica2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reporte {
                get {
                    try {
                        return ((string)(this[this.table_Table.ReporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Reporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ReporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Total {
                get {
                    try {
                        return ((bool)(this[this.table_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContMoneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.ContMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ContMoneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ContMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FechaGrafica {
                get {
                    try {
                        return ((string)(this[this.table_Table.FechaGraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaGrafica\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaGraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaDesde {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaDesdeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaDesde\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaDesdeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaHasta {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaHastaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaHasta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaHastaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Periodo {
                get {
                    try {
                        return ((int)(this[this.table_Table.PeriodoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Periodo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PeriodoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio {
                get {
                    try {
                        return ((int)(this[this.table_Table.EjercicioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EjercicioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Etiqueta {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EtiquetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Etiqueta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EtiquetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.table_Table.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.table_Table.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.table_Table.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDInformeNull() {
                return this.IsNull(this.table_Table.IDInformeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDInformeNull() {
                this[this.table_Table.IDInformeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.table_Table.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.table_Table.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.table_Table.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.table_Table.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoneda2Null() {
                return this.IsNull(this.table_Table.Moneda2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoneda2Null() {
                this[this.table_Table.Moneda2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoriaNull() {
                return this.IsNull(this.table_Table.CategoriaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoriaNull() {
                this[this.table_Table.CategoriaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoTotalNull() {
                return this.IsNull(this.table_Table.CostoTotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoTotalNull() {
                this[this.table_Table.CostoTotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrecioTotalNull() {
                return this.IsNull(this.table_Table.PrecioTotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrecioTotalNull() {
                this[this.table_Table.PrecioTotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteNull() {
                return this.IsNull(this.table_Table.ImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteNull() {
                this[this.table_Table.ImporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescuentosTotalesNull() {
                return this.IsNull(this.table_Table.DescuentosTotalesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescuentosTotalesNull() {
                this[this.table_Table.DescuentosTotalesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.table_Table.SubTotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.table_Table.SubTotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImpuestosNull() {
                return this.IsNull(this.table_Table.ImpuestosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImpuestosNull() {
                this[this.table_Table.ImpuestosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteTotalNull() {
                return this.IsNull(this.table_Table.ImporteTotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteTotalNull() {
                this[this.table_Table.ImporteTotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilidadNull() {
                return this.IsNull(this.table_Table.UtilidadColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilidadNull() {
                this[this.table_Table.UtilidadColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoTotalMCNull() {
                return this.IsNull(this.table_Table.CostoTotalMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoTotalMCNull() {
                this[this.table_Table.CostoTotalMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteTotalMCNull() {
                return this.IsNull(this.table_Table.ImporteTotalMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteTotalMCNull() {
                this[this.table_Table.ImporteTotalMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilidadMCNull() {
                return this.IsNull(this.table_Table.UtilidadMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilidadMCNull() {
                this[this.table_Table.UtilidadMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionNull() {
                return this.IsNull(this.table_Table.SaldoDescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionNull() {
                this[this.table_Table.SaldoDescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteNull() {
                return this.IsNull(this.table_Table.SaldoImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteNull() {
                this[this.table_Table.SaldoImporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionMCNull() {
                return this.IsNull(this.table_Table.SaldoDescripcionMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionMCNull() {
                this[this.table_Table.SaldoDescripcionMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteMCNull() {
                return this.IsNull(this.table_Table.SaldoImporteMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteMCNull() {
                this[this.table_Table.SaldoImporteMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica1Null() {
                return this.IsNull(this.table_Table.Grafica1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica1Null() {
                this[this.table_Table.Grafica1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica2Null() {
                return this.IsNull(this.table_Table.Grafica2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica2Null() {
                this[this.table_Table.Grafica2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporteNull() {
                return this.IsNull(this.table_Table.ReporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporteNull() {
                this[this.table_Table.ReporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.table_Table.TotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.table_Table.TotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContMonedaNull() {
                return this.IsNull(this.table_Table.ContMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContMonedaNull() {
                this[this.table_Table.ContMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaGraficaNull() {
                return this.IsNull(this.table_Table.FechaGraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaGraficaNull() {
                this[this.table_Table.FechaGraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaDesdeNull() {
                return this.IsNull(this.table_Table.FechaDesdeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaDesdeNull() {
                this[this.table_Table.FechaDesdeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaHastaNull() {
                return this.IsNull(this.table_Table.FechaHastaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaHastaNull() {
                this[this.table_Table.FechaHastaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.table_Table.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.table_Table.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.table_Table.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.table_Table.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoNull() {
                return this.IsNull(this.table_Table.PeriodoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoNull() {
                this[this.table_Table.PeriodoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicioNull() {
                return this.IsNull(this.table_Table.EjercicioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicioNull() {
                this[this.table_Table.EjercicioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEtiquetaNull() {
                return this.IsNull(this.table_Table.EtiquetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEtiquetaNull() {
                this[this.table_Table.EtiquetaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.table_Table.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.table_Table.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
