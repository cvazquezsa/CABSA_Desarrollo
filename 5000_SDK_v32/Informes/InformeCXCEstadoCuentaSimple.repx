/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformeCXCEstadoCuentaSimple : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private DevExpress.XtraReports.UI.XRLabel label39;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.XRLabel label41;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.GroupHeaderBand groupHeaderBand2;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter4;
        private System.Data.SqlClient.SqlCommand sqlCommand1;
        private System.Data.SqlClient.SqlConnection sqlConnection1;
        private XtraReportSerialization.dsDatos_3DataSet dsDatos_3;
        private DevExpress.XtraReports.UI.XRLine line4;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox1;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRLabel label24;
        private DevExpress.XtraReports.UI.XRLabel label25;
        private DevExpress.XtraReports.UI.XRLabel label26;
        private DevExpress.XtraReports.UI.XRLabel label27;
        private DevExpress.XtraReports.UI.XRLine line2;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRLabel label38;
        private DevExpress.XtraReports.UI.XRLabel label37;
        private DevExpress.XtraReports.UI.XRLabel label36;
        private DevExpress.XtraReports.UI.XRLabel label35;
        private DevExpress.XtraReports.UI.XRLabel label34;
        private DevExpress.XtraReports.UI.XRLabel label33;
        private DevExpress.XtraReports.UI.XRLabel label48;
        private DevExpress.XtraReports.UI.GroupHeaderBand groupHeaderBand3;
        private DevExpress.XtraReports.UI.GroupFooterBand groupFooterBand2;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.GroupFooterBand groupFooterBand3;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.PageHeaderBand PageHeader;
        private DevExpress.XtraReports.UI.XRLabel label56;
        private DevExpress.XtraReports.UI.XRLabel label55;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.XRLabel label57;
        private DevExpress.XtraReports.UI.XRLine line9;
        private DevExpress.XtraReports.UI.XRLabel label51;
        private DevExpress.XtraReports.UI.XRLabel label50;
        private DevExpress.XtraReports.UI.XRLabel label52;
        private DevExpress.XtraReports.UI.XRLabel label54;
        private DevExpress.XtraReports.UI.XRLabel label53;
        private DevExpress.XtraReports.UI.PageFooterBand PageFooter;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLabel label28;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLine line6;
        private System.Data.SqlClient.SqlDataAdapter spCorteCxcEstadoCuentaSimpleTableAdapter;
        private System.Data.SqlClient.SqlCommand sqlCommand2;
        private System.Data.SqlClient.SqlConnection sqlConnection2;
        private XtraReportSerialization.DatosDataSet Datos;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField EtiquetaLimiteCreditoMoneda;
        private DevExpress.XtraReports.UI.CalculatedField Saldo;
        private DevExpress.XtraReports.UI.CalculatedField PaginaActual;
        private DevExpress.XtraReports.UI.CalculatedField TextoTotalMoneda;
        private DevExpress.XtraReports.UI.CalculatedField TotalAplica;
        private XtraReportSerialization.dsDatos_2DataSet dsDatos_2;
        private System.Data.OleDb.OleDbDataAdapter oleDbDataAdapter1;
        private System.Data.OleDb.OleDbCommand oleDbCommand1;
        private System.Data.OleDb.OleDbConnection oleDbConnection1;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter3;
        private System.Data.SqlClient.SqlCommand sqlCommand3;
        private System.Data.SqlClient.SqlConnection sqlConnection3;
        private System.Data.OleDb.OleDbDataAdapter TableTableAdapter;
        private System.Data.OleDb.OleDbCommand oleDbCommand2;
        private System.Data.OleDb.OleDbConnection oleDbConnection2;
        private System.Data.OleDb.OleDbDataAdapter oleDbDataAdapter2;
        private System.Data.OleDb.OleDbCommand oleDbCommand3;
        private System.Data.OleDb.OleDbConnection oleDbConnection3;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter1;
        private System.Data.SqlClient.SqlCommand sqlCommand4;
        private System.Data.SqlClient.SqlConnection sqlConnection4;
        private XtraReportSerialization.dsDatos_1DataSet dsDatos_1;
        private XtraReportSerialization.dsDatosDataSet dsDatos;
        private XtraReportSerialization.GraficaDataSet Grafica;
        private System.Data.SqlClient.SqlDataAdapter sqlDataAdapter2;
        private System.Data.SqlClient.SqlCommand sqlCommand5;
        private System.Data.SqlClient.SqlConnection sqlConnection5;
        private DevExpress.XtraReports.UI.GroupFooterBand groupFooterBand1;
        private System.Resources.ResourceManager _resources;
        public InformeCXCEstadoCuentaSimple() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAACAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsHkhuldAAAAACsAAAB+AQAAJ" +
                        "iQAdABoAGkAcwAuAFMAYwByAGkAcAB0AHMAUwBvAHUAcgBjAGUAAAAAACJwAGkAYwB0AHUAcgBlAEIAb" +
                        "wB4ADEALgBJAG0AYQBnAGUAiRAAAAGGIURpbSBCYW5kZXJhSW1wcmltaXJFbmNhYmV6YWRvUGFnaW5hI" +
                        "GFzIGJvb2xlYW4gPSBUcnVlDQpEaW0gaVBhZ2luYUFjdHVhbCBhcyBpbnRlZ2VyID0gMQ0KDQpQcml2Y" +
                        "XRlIFN1YiBEZXRhaWxfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBc" +
                        "yBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q" +
                        "29sdW1uVmFsdWUoIkdyYWZpY2EiKSA9IEZhbHNlIFRIRU4gICAgIA0KICAgICBlLkNhbmNlbCA9IEZhb" +
                        "HNlDQogIEVMU0UNCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICBFTkQgSUYgDQoNCkVuZCBTdWINC" +
                        "g0KUHJpdmF0ZSBTdWIgZ3JvdXBGb290ZXJCYW5kMl9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT" +
                        "2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KD" +
                        "QogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYSIpID0gRmFsc2UgVEhFTiAgICAgDQogI" +
                        "CAgIGUuQ2FuY2VsID0gRmFsc2UNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogIEVOR" +
                        "CBJRiANCg0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBncm91cEZvb3RlckJhbmQzX0JlZm9yZVByaW50K" +
                        "EJ5VmFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuU" +
                        "HJpbnRFdmVudEFyZ3MpDQoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJHcmFmaWNhIikgPSBGY" +
                        "WxzZSBUSEVOICAgICANCiAgICAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTFNFDQogICAgIGUuQ2FuY2VsI" +
                        "D0gVHJ1ZSAgICANCiAgRU5EIElGIA0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViIGdyb3VwRm9vdGVyQ" +
                        "mFuZDNfQWZ0ZXJQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5Fd" +
                        "mVudEFyZ3MpDQoNCiAgQmFuZGVyYUltcHJpbWlyRW5jYWJlemFkb1BhZ2luYSA9IFRydWUNCg0KRW5kI" +
                        "FN1Yg0KDQpQcml2YXRlIFN1YiBQYWdlSGVhZGVyX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBcyBPY" +
                        "mplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpDQogI" +
                        "ElGIEJhbmRlcmFJbXByaW1pckVuY2FiZXphZG9QYWdpbmEgID0gVHJ1ZSBUSEVOICAgICANCiAgICAgZ" +
                        "S5DYW5jZWwgPSBUcnVlDQogICAgIGlQYWdpbmFBY3R1YWwgPSAxDQogIEVMU0UNCiAgICAgZS5DYW5jZ" +
                        "WwgPSBGYWxzZSAgICANCiAgICAgaVBhZ2luYUFjdHVhbCA9IGlQYWdpbmFBY3R1YWwgKyAxDQogIEVOR" +
                        "CBJRiANCiAgQmFuZGVyYUltcHJpbWlyRW5jYWJlemFkb1BhZ2luYSA9IEZhbHNlDQpFbmQgU3ViDQoNC" +
                        "lByaXZhdGUgU3ViIFBhZ2luYUFjdHVhbF9HZXRWYWx1ZShCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCe" +
                        "VZhbCBlIEFzIERldkV4cHJlc3MuWHRyYVJlcG9ydHMuVUkuR2V0VmFsdWVFdmVudEFyZ3MpDQogIGUuV" +
                        "mFsdWU9IlDDoWdpbmEgIiArIENTdHIoaVBhZ2luYUFjdHVhbCkNCkVuZCBTdWINCg0KUHJpdmF0ZSBTd" +
                        "WIgY2hhcnQxX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzd" +
                        "GVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpDQoNCiAgJ1NpIGVsIHZhbG9yIGRlbCBjY" +
                        "W1wbyBDbGllbnRlIGVzIG51bGwgbm8gc2UgbXVlc3RyYSAgDQogIElGIEdldEN1cnJlbnRDb2x1bW5WY" +
                        "Wx1ZSgiQ2xpZW50ZSIpIElTIE5PVEhJTkcNCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgICBSR" +
                        "VRVUk4NCiAgRU5EIElGDQoNCiAgJ0RlZmluZSB1bmEgRnVlbnRlIHBhcmEgZWwgdMOtdHVsbyBkZSBsY" +
                        "SBncsOhZmljYQ0KICBEaW0gRnVlbnRlVGl0dWxvIEFzIE5ldyBGb250KCJBcmlhbCIsMTAsRm9udFN0e" +
                        "WxlLkJvbGQpDQogICdHZW5lcmEgdW4gb2JqZXRvIHF1ZSByZXByZXNlbnRhIGEgbGEgZ3LDoWZpY2ENC" +
                        "iAgRGltIEdyYWZpY2ExIEFzIFhSQ2hhcnQgPSBDVHlwZShzZW5kZXIsWFJDaGFydCkNCg0KICdTaSBlb" +
                        "CB2YWxvciBkZWwgY2FtcG8gVmVyR3JhZmljYURldGFsbGUgZXMgMCBubyBzZSBtdWVzdHJhIA0KICBJR" +
                        "iBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlZlckdyYWZpY2FEZXRhbGxlIikgPSAwIFRIRU4NCiAgICBHc" +
                        "mFmaWNhMS52aXNpYmxlID0gRmFsc2UNCiAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogICAgUkVUVVJOD" +
                        "QogIEVORCBJRg0KDQogICdHdWFyZGEgZWwgdmFsb3IgZGUgbGEgY29sdW1uYSBjbGllbnRlDQogIERpb" +
                        "SBDdWVudGEgQXMgU3RyaW5nID0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJDbGllbnRlIikuVG9TdHJpb" +
                        "mcNCg0KICAnR3VhcmRhIGVsIHZhbG9yIGRlIGxhIGNvbHVtbmEgTW9uZWRhQ29udGFibGUNCiAgRGltI" +
                        "E1vbmVkYUNvbnRhYmxlIEFzIFN0cmluZyA9IEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiTW9uZWRhQ29ud" +
                        "GFibGUiKS5Ub1N0cmluZw0KDQogICdHZW5lcmEgdW4gb2JqZXRvIHF1ZSByZXByZXNlbnRhIGEgbGEgc" +
                        "GxhbnRpbGxhIHNlIHNlcmllcyBhdXRvY3JlYWRhcw0KICBEaW0gUGxhbnRpbGxhIEFzIFNlcmllc0Jhc" +
                        "2UgPSBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZQ0KDQogICdHZW5lcmEgdW4gb2JqZXRvIHRpcG8gVMOtd" +
                        "HVsbw0KICBEaW0gVGl0dWxvMSBBcyBOZXcgQ2hhcnRUaXRsZSgpDQogIFRpdHVsbzEuVGV4dCA9ICJSZ" +
                        "XN1bWVuICIgKyBDdWVudGEgKyAiIChJbXBvcnRlcyBlbiAiICsgTW9uZWRhQ29udGFibGUgKyAiKSINC" +
                        "iAgVGl0dWxvMS5Gb250ID0gRnVlbnRlVGl0dWxvDQoNCiAgJ0xpbXBpYSBsb3MgdMOtdHVsb3MgZGUgb" +
                        "GEgZ3LDoWZpY2ENCiAgR3JhZmljYTEuVGl0bGVzLkNsZWFyKCkNCg0KICAnQWdyZWdhIGVsIFTDrXR1b" +
                        "G8gYSBsYSBncsOhZmljYQ0KICAnR3JhZmljYTEuVGl0bGVzLkFkZFJhbmdlKE5ldyBDaGFydFRpdGxlK" +
                        "Ckge1RpdHVsbzF9KQ0KICBHcmFmaWNhMS5UaXRsZXMuQWRkKFRpdHVsbzEpDQoNCiAgJ0NyZWEgZG9zI" +
                        "G9iamV0b3MgdGlwbyBmaWx0cm8geSBsb3MgaW5pY2lhbGl6YSBjb24gbG9zIGZpbHRyb3MgbmVjZXNhc" +
                        "mlvcw0KICBEaW0gRmlsdHJvMSBBcyBOZXcgRGF0YUZpbHRlcigiQ3VlbnRhIiwiU3lzdGVtLlN0cmluZ" +
                        "yIsRGF0YUZpbHRlckNvbmRpdGlvbi5FcXVhbCxDdWVudGEpDQogIERpbSBGaWx0cm8yIEFzIE5ldyBEY" +
                        "XRhRmlsdGVyKCJHcmFmaWNhIiwiU3lzdGVtLkJvb2xlYW4iLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1Y" +
                        "WwsVHJ1ZSkNCiAgRGltIEZpbHRybzMgQXMgTmV3IERhdGFGaWx0ZXIoIk1vZHVsbyIsIlN5c3RlbS5Td" +
                        "HJpbmciLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsIkNYQyIpDQoNCiAgJ0xpbXBpYSBsb3MgZmlsd" +
                        "HJvcyBkZSBsYSBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkNsZWFyKCkNCg0KICAnU" +
                        "G9uZSBlbCBDb25qdWN0aW9uTW9kZSBhIEFuZA0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnNDb25qdW5jd" +
                        "Glvbk1vZGUgPSBDb25qdW5jdGlvblR5cGVzLkFuZA0KDQogICdBZ3JlZ2EgbG9zIGZpbHRyb3MgYSBsY" +
                        "SBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0cm8xKQ0KICBQbGFudGlsb" +
                        "GEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzIpDQogIFBsYW50aWxsYS5EYXRhRmlsdGVycy5BZGQoRmlsd" +
                        "HJvMykNCg0KICAnT2N1bHRhIG8gbXVlc3RyYSBsYXMgZXRpcXVldGFzIGRlIGxhIGdyYWZpY2ENCiAgS" +
                        "UYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJFdGlxdWV0YSIpID0gRmFsc2UgVEhFTg0KICAgICBHcmFma" +
                        "WNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gRmFsc2UNCiAgRUxTRQ0KICAgICBHcmFma" +
                        "WNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gVHJ1ZQ0KICBFTkQgSUYNCg0KRW5kIFN1Y" +
                        "g0KDQoNCg0KUHJpdmF0ZSBTdWIgZ3JvdXBIZWFkZXJCYW5kMl9CZWZvcmVQcmludChCeVZhbCBzZW5kZ" +
                        "XIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBc" +
                        "mdzKQ0KICAnR3VhcmRhIGVsIHZhbG9yIGRlIGxhIGNvbHVtbmEgY2xpZW50ZQ0KICAnQ3VlbnRhID0gR" +
                        "2V0Q3VycmVudENvbHVtblZhbHVlKCJDbGllbnRlIikuVG9TdHJpbmcNCg0KICAnR3VhcmRhIGVsIHZhb" +
                        "G9yIGRlIGxhIGNvbHVtbmEgTW9uZWRhQ29udGFibGUNCiAgJ01vbmVkYUNvbnRhYmxlID0gR2V0Q3Vyc" +
                        "mVudENvbHVtblZhbHVlKCJNb25lZGFDb250YWJsZSIpLlRvU3RyaW5nDQoNCkVuZCBTdWINCkAAAQAAA" +
                        "P////8BAAAAAAAAAAwCAAAAUVN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9b" +
                        "mV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQUBAAAAFVN5c3RlbS5EcmF3aW5nL" +
                        "kJpdG1hcAEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABawQAAAv/Y/+AAEEpGSUYAAQEBAJYAlgAA/+4AD" +
                        "kFkb2JlAGQAAAAAAf/hEZZFeGlmAABNTQAqAAAACAAHARIAAwAAAAEAAQAAARoABQAAAAEAAABiARsAB" +
                        "QAAAAEAAABqASgAAwAAAAEAAgAAATEAAgAAABwAAAByATIAAgAAABQAAACOh2kABAAAAAEAAACiAAAAw" +
                        "gCWAAAAAQAAAJYAAAABAABBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MAMjAxMTowMToxOCAwOTo1M" +
                        "TowNgAAAqACAAQAAAABAAABYqADAAQAAAABAAAAgQAAAAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAA" +
                        "AEQARsABQAAAAEAAAEYASgAAwAAAAEAAgAAAgEABAAAAAEAAAEgAgIABAAAAAEAABBuAAAAAAAAAEgAA" +
                        "AABAAAASAAAAAH/2P/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBELC" +
                        "gsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsNDg0QD" +
                        "g4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAE" +
                        "QgAOgCgAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYHCAkKCwEAAQUBA" +
                        "QEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGF" +
                        "JGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXiZfKzhMPTdePzRieUpIW0l" +
                        "cTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIEBAMEBQYHBwYFNQEAAhEDITESB" +
                        "EFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKygwcmNcLSRJNUoxdkRVU2dGXi8rOEw" +
                        "9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dXZ3eHl6e3x//aAAwDAQACEQMRAD8A9VSSS" +
                        "SUpYGFkfWd31kyKsqoN6S3f6btrQ3aI9B1VgPqvts/wzH/+B/o1d+sPVj0jpN2axrX2t2tpY6YL3kMbu" +
                        "2/mtn1HIf1Y6rl9W6QzMy6212Oe9oLJDXBrtnqNa4vcz9z6af7Uvb939Di4P8JZ7sfc9v8ASri/wXWSS" +
                        "STF6kkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklP//Q9VWf1rrWJ0fE9e/32PltFDT7rHfut/dY3" +
                        "/CWf4NN1vreJ0bE9e/32PltFDT7rHeA/dY3/CWf4Ncb0zpnUfrX1F+fnvLcVp22WNkCAf6Hh/usb/hbf" +
                        "/R/82lK+sfU8rN+q/Trspwddl5Ntzg0Q1orN1VdTP5DGOZ9JF6sOpdL6J9X+odPBZViU7rbRqA+8VPjI" +
                        "r/0NrvUb/X/ANHZ6Stf4wcGqjpXTxjsFVGPaaWVtEABzHFv/npdD0B1OX9XcEECyp+LXW9jgC0wwVWsc" +
                        "0/S+i5i0I5Bj5bBPh4gJz44nY8XFH/oNGWM5OZzRvhJhDhkNxXq/wCmw+r31hxet4u9n6PJrgZGOTq0/" +
                        "vN/fqf+Y9ay87670LO+rGa3q3SHOGIHaHVxqLj/ADF/+lxbPose7/i7P0vpW2dd9XvrDjdbxd7B6eTVA" +
                        "yKCZLSfzm/v1P8AzHqHmOXiI+9hPFhl/jY5fuyZcGeRkcWUcOWP+Lkj+/FL13rmJ0PB+25bXvrLxWG17" +
                        "Zkgu/wjq2fRY785XqrWXVMurMssaHtPk4bmrB+vHUcvpvSK8jDc1l/rta2xzGvLZZaS6sWh7Gv9uz6P0" +
                        "Fk9T6z9ZX9XwundNyhW/KxarA1zK9peW2WWuL31P2+2tNx8rPJESEoxB4vmP+b+a12TmYQkYkSlIcOkR" +
                        "+/8r26yuu/WDF6HXRZlV2WMveWTWGnbA3Fzg9zP+iubyOsfXToThb1djcvDs9rnsDBtJ/0dtLGenb+56" +
                        "9PpPWX9aH9XuxcfKysxud0u9xfg2bWMsgt3fpmU117bGN/RWfy/9GpsPJXkjxyhLHLrCXz/ANWP9Zizc" +
                        "5WORjGQnHpKPy/1pf1X01JcrV1P6w9Cw8rN+sdteSz2MxKa9oe607vbvrrqayvb9Pf6n0P+3KOPb/jC6" +
                        "pj/ALQx7a8ep4300Qxm5vb0m3V3P2u/M+02s/zFEOUkbPuYxAHh9wy9Epdosh5kChwTMyOLgA9cY95Pc" +
                        "Llfqh9Yc/qGN1LL6lYHsxiHtaxgaGM2vse1u33v+j+ej/Vf6y5PUbremdTq9DqOMJIALQ9rSGvlhnZaz" +
                        "c3d+Y/+cqWL9RbDX0jrVga15YzcGvEtMV2Ha9v5zE+OAxxZ4zA4x7XDLf55bxl/WWSziWTAYk8BGTiH9" +
                        "yP6Uf6r1nQut4nXMH7biNexgea3Ns27g5sH/BusZ9Fzfz1oriOn/W3qGN9VH9RySMrLdlHGolrWMH6Nt" +
                        "jfUZQKvYxrbP5f5iWOz/GFm4reoU5lQa8bq6QapIPG0Cmyn/ty9N+5zF8c4QAlwcUjpKX9Vd97ga4Yzm" +
                        "SOOojWMfF6/PzacDCvzb59LHY6x4aJMNG72zCH0nqdHVun09Qxw5tV0w10SC1zqntOwvZ9Nn7ywq+r9d" +
                        "t+rfU7eqYYx8rDY4V2WM9lhA/nPQs3sd6bvz/6PZ/g1Us+t2fhfVbBynxkdRznXNFr2gNArse11jq6vT" +
                        "a52z02MZ/1xNHKZCaHCfX7ehvXh9zi/u8K481jAs2PT7mo6cXB/jcT2iS4puP8A4xnUNzGZdVhcARQ00" +
                        "kkH/rP2b/2YXQ/V3P6ln9O9bqeKcTJa9zC0tczeBEWiqz31/S2f2E3Jy5hHiE4TANHglqE48/GeEwnCx" +
                        "Y4xoX//0ez+tf1ZPVWjNxDGfSzYGOPtsrBL/R93tqs3O/RWf2Lv9JTmfVP6z+gWdH6l+iDD6WPa4bC1w" +
                        "Oz7Jkt9uyxrvZXZ/wBbt/S/zvarm/rV9VWdUY7Mw2tbntbD2GA29oEenZPtbc1v81b/ANat/R/zKU3vr" +
                        "R0x3U+iZOPW3de0C2gcnfWd4a3/AIxu6r/rixP8XnV2W4tnSbHfpKSbscHvW8zY0f8AFXO/8GUfqp9aH" +
                        "se3pHVXODg70se6yQ4OB2fZMnd7vV3eyp7/APirP0n87n/WHoNwzn9V+rpdkVPsey5uI6X03615DW+md" +
                        "+y3c71P9H/xKuctKGTHLl5nh4jx45H9GbU5mM8eSOeA4uEcGSI/Sh/6C3Prd9azc5/RekzY6w+jkWsG4" +
                        "uLvYcXHaPpvf9Cx/wD1uv3/AM3qfVD6rno9TsvLM5+Q0NcwGW1Mnd6II+nZu/nbP+2v9JbD6p/VJnSWN" +
                        "zc1rX9Qc2GtEFtLSP5uv9613+Ft/wCtVfo/57pkM+aEYexg+T9OfXLL/vU4cMpT9/N8/wChDpij/wB88" +
                        "p/jI/5Bq/8ADLf/AD3cs8f+LTo3/hSr/wA9ZC6X6y4XTs7Bqxuoi30bMipjH06Ftjz6NTnH/RudZ6X0f" +
                        "8IqLmfV49TPVGC05PSH19PFTDLS5+2ijax3us2uynU79/5ln+jT8OUDCI1ImssdBpeXhjBZlxE5jKxvj" +
                        "l4/q/VJ0vrHWyzoHUW2NDgMa1wB8WtNjHf2Xt3LgM9trvqV0x/LGZN7PgXG1zB+D16Tc3Ez6MnDL22Me" +
                        "11OQ1jhubvG1zXbf5t+1yoYvS+iYHSn9IssZdiNDn2tyHsJ2ucSX2fQ2tbb9B/76Zy+cYogEEyGQT4f6" +
                        "vDKBX8xh9yRIIAMDC/63FxOJ9dr8fqvQKs3p1zcmnHua+7YZ2te19e61n069r3s9j2rP6Z0nE6hiMvb9" +
                        "Y7aXbQLKLH7XVkCPT2uvb7W/mO+gun6b9X+g9IybvQPv6g3YKLbA8Fg3ONdVb/dYz3e7f6qy2fVD6r9S" +
                        "sstqF2JtutxxS17Q0vpc5lhpZZ63s9m7+p/g1Njz44wMIynGETxRycEZaT/AEZRl/0mLJhnKfGRGUpDh" +
                        "lDjlH5f0oyim6H9U68XqdfV2dUOeWb2uMB24lvpe671LPoLH+pb2N6R1ykuAt9Iu9M87Qyxhd/n+1dZ9" +
                        "XukdL6Vi219NsN1dlhdY8vD/cAK9v6MNY3ZtWKKugnqVfVKunZllnVaXmljNgrs9av1sl7Weux9d3ou/" +
                        "SbnMZ/o/wBL+kTY5jP3YyMp6Q4ZcMYfzR9zhlH0/wBZMsIgMUogQ+fijcpj9cODi4vU5nQ7+jU/Uy39s" +
                        "VutxrM0sY2sEv8AULK3MdU4FuxzGte7dv8A/Sam36t41NTs/wCr3Xm01kAn1LPTj879PdSWbf8Ai7sVd" +
                        "DjdM6F0zG/5v2ML8bJY/IsfkOaWmH00w9/s2277afR9Nn+D/wBKqNv1B+rTsr0/XurtfLmY4tYTtH7nq" +
                        "12X7P7aeOYhxTPFOAnIz+UZMc4f3P0Vp5eXDAcMJmMRH5vbyQl/fc/E691Dqf1f63iZzm3vxKCW5LAAH" +
                        "B29sO2Btbv5v9E9rP0lafHu6A36m9Mp6015ZdbcKX1Al9bhbdvvDm/m1td7/wCc3/6GxdLR0boNPT7+k" +
                        "Y4Yyq+sm8NfNha4bPXe8l1nb2v+glR0Tojuljou1uVjYx9zHu3Pa5xNvqOeza+q13qOd7PTUZ5jFrwxn" +
                        "CPuDJUPQRHg4OIfu+teMGTS5RnL2zj9XqHFx8df4ryzvq99gqOd0Hr9VeOTP6S0Vt/65ZUXUWu/4zGW7" +
                        "9S+u5vWMK77aA63GeG+s0bQ8OG73NHs9Rn5+z+QqQ+on1Xc37U3KtNGrtwtrLIbO/8AS+nu2s2+79Kul" +
                        "6dg4GBito6fW2rH+k3YZ3bv8IXkudZu/fc5LmM2OWMxs5J3pOUBjlCuhl+knl8OSOQHTHCtYRmZxnfYf" +
                        "ov/0vVUkkklPOfWn6rN6mx2bhNDeoNb7maBt7QP5t8+1tzf8Dd/1q39H/Mz+qf1cf0il2RkuP2zJaBZU" +
                        "1x9Oto+jXtafTtub+ff/wBbp/R/zvQJJKUkkkkpp9YxLMzpt9FX88W76JMD1ayLsf3f8fXWsejoGcMzB" +
                        "usLNprN2fwYymm++k1t/PZ9p6lkW/8AoNSukSVjF7vtnhrhuV334f5f4bBl9rjHFfFQ27cTz31b6Pk4N" +
                        "lZyqrGW4+P9mNm6g0v9zX7qvs9dWVZucz1Wvzf0rPWu/PsssTV/V6cnDttxaXbMzNvyXENJLLnZDsYu0" +
                        "/SfTxvb/g/+tLoklJL3uOe10eLh4v3cm3/P/wANZH2uCN3w2K4q/eg8e/oXWvsGNhir3U00tre11UMfV" +
                        "e+9zbb7GnK2V0tx/sTcX8/1fWRn9A6sXZ23Y4Z4zaq3Pdrji59l1NtG0fzWbLWZv+H9T0P8HV6bOqSUh" +
                        "9/X+b+aV1+8sHs6fP8ALHf91x+gYFmM6+62m3HstbUwssOPt/RBwHpN6eyqvazf6XqWt9V9bKv9Gg4fS" +
                        "s6pn1fFjAD06pzMr3A7SaPQ9v7/AOkW8koD7nFP5dtauq9qfy/9TZRwcEL4qsVdcV+7D5v8Nyuo9K+29" +
                        "RZbbTXfjsxL6gLAHAWWOp2+x371bLPeslvR+tOfgNuqBOKcFxta6qIpDG5fr2uY7Nuyt3rsr9Oz7L9nf" +
                        "/pPUrt6tJOxe7wiuGq9PHff9FGT2+I3xXevDTxnR8N1uDi5FeGyurGszb7c6WbrGuGVj+g1rf0znPfYx" +
                        "13q/odmNX/Oez0lh9FzM3pWP9lxa8EDpgoNoc0faDace/Z+ja9/oenRb6j8lu/1Mt/6C2v1fV7NJTH3e" +
                        "I0I8XFprP8Aeyfven99ij7fCLMuHh10j+7D931f9285i9De+zHtux7Nv237RkVZRocIbi241d1dWE1uN" +
                        "/PPpZ/pf0XqrQ6RRlYTG4Rxm14wdk2Nsa9u1gdkPfi47aR+a7Gt3/8ABen6S00lXze5R4+Hh0quLh/T4" +
                        "eFnxcGnDxXrvw3+jxW//9n/7RjQUGhvdG9zaG9wIDMuMAA4QklNBCUAAAAAABAAAAAAAAAAAAAAAAAAA" +
                        "AAAOEJJTQQ6AAAAAACTAAAAEAAAAAEAAAAAAAtwcmludE91dHB1dAAAAAUAAAAAQ2xyU2VudW0AAAAAQ" +
                        "2xyUwAAAABSR0JDAAAAAEludGVlbnVtAAAAAEludGUAAAAAQ2xybQAAAABNcEJsYm9vbAEAAAAPcHJpb" +
                        "nRTaXh0ZWVuQml0Ym9vbAAAAAALcHJpbnRlck5hbWVURVhUAAAAAQAAADhCSU0EOwAAAAABsgAAABAAA" +
                        "AABAAAAAAAScHJpbnRPdXRwdXRPcHRpb25zAAAAEgAAAABDcHRuYm9vbAAAAAAAQ2xicmJvb2wAAAAAA" +
                        "FJnc01ib29sAAAAAABDcm5DYm9vbAAAAAAAQ250Q2Jvb2wAAAAAAExibHNib29sAAAAAABOZ3R2Ym9vb" +
                        "AAAAAAARW1sRGJvb2wAAAAAAEludHJib29sAAAAAABCY2tnT2JqYwAAAAEAAAAAAABSR0JDAAAAAwAAA" +
                        "ABSZCAgZG91YkBv4AAAAAAAAAAAAEdybiBkb3ViQG/gAAAAAAAAAAAAQmwgIGRvdWJAb+AAAAAAAAAAA" +
                        "ABCcmRUVW50RiNSbHQAAAAAAAAAAAAAAABCbGQgVW50RiNSbHQAAAAAAAAAAAAAAABSc2x0VW50RiNQe" +
                        "GxAYsAAAAAAAAAAAAp2ZWN0b3JEYXRhYm9vbAEAAAAAUGdQc2VudW0AAAAAUGdQcwAAAABQZ1BDAAAAA" +
                        "ExlZnRVbnRGI1JsdAAAAAAAAAAAAAAAAFRvcCBVbnRGI1JsdAAAAAAAAAAAAAAAAFNjbCBVbnRGI1ByY" +
                        "0BZAAAAAAAAOEJJTQPtAAAAAAAQAJYAAAABAAIAlgAAAAEAAjhCSU0EJgAAAAAADgAAAAAAAAAAAAA/g" +
                        "AAAOEJJTQQNAAAAAAAEAAAAeDhCSU0EGQAAAAAABAAAAB44QklNA/MAAAAAAAkAAAAAAAAAAAEAOEJJT" +
                        "ScQAAAAAAAKAAEAAAAAAAAAAjhCSU0D9QAAAAAASAAvZmYAAQBsZmYABgAAAAAAAQAvZmYAAQChmZoAB" +
                        "gAAAAAAAQAyAAAAAQBaAAAABgAAAAAAAQA1AAAAAQAtAAAABgAAAAAAAThCSU0D+AAAAAAAcAAA/////" +
                        "////////////////////////wPoAAAAAP////////////////////////////8D6AAAAAD//////////" +
                        "///////////////////A+gAAAAA/////////////////////////////wPoAAA4QklNBAAAAAAAAAIAA" +
                        "ThCSU0EAgAAAAAABAAAAAA4QklNBDAAAAAAAAIBAThCSU0ELQAAAAAABgABAAAAAzhCSU0ECAAAAAAAE" +
                        "AAAAAEAAAJAAAACQAAAAAA4QklNBB4AAAAAAAQAAAAAOEJJTQQaAAAAAANJAAAABgAAAAAAAAAAAAAAg" +
                        "QAAAWIAAAAKAFUAbgB0AGkAdABsAGUAZAAtADEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAA" +
                        "AAAAWIAAACBAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAEAAAAAAABudWxsA" +
                        "AAAAgAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0b" +
                        "G9uZwAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJnaHRsb25nAAABYgAAAAZzbGljZXNWbExzAAAAAU9ia" +
                        "mMAAAABAAAAAAAFc2xpY2UAAAASAAAAB3NsaWNlSURsb25nAAAAAAAAAAdncm91cElEbG9uZwAAAAAAA" +
                        "AAGb3JpZ2luZW51bQAAAAxFU2xpY2VPcmlnaW4AAAANYXV0b0dlbmVyYXRlZAAAAABUeXBlZW51bQAAA" +
                        "ApFU2xpY2VUeXBlAAAAAEltZyAAAAAGYm91bmRzT2JqYwAAAAEAAAAAAABSY3QxAAAABAAAAABUb3Agb" +
                        "G9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAAgQAAAABSZ2h0bG9uZwAAAWIAAAADd" +
                        "XJsVEVYVAAAAAEAAAAAAABudWxsVEVYVAAAAAEAAAAAAABNc2dlVEVYVAAAAAEAAAAAAAZhbHRUYWdUR" +
                        "VhUAAAAAQAAAAAADmNlbGxUZXh0SXNIVE1MYm9vbAEAAAAIY2VsbFRleHRURVhUAAAAAQAAAAAACWhvc" +
                        "npBbGlnbmVudW0AAAAPRVNsaWNlSG9yekFsaWduAAAAB2RlZmF1bHQAAAAJdmVydEFsaWduZW51bQAAA" +
                        "A9FU2xpY2VWZXJ0QWxpZ24AAAAHZGVmYXVsdAAAAAtiZ0NvbG9yVHlwZWVudW0AAAARRVNsaWNlQkdDb" +
                        "2xvclR5cGUAAAAATm9uZQAAAAl0b3BPdXRzZXRsb25nAAAAAAAAAApsZWZ0T3V0c2V0bG9uZwAAAAAAA" +
                        "AAMYm90dG9tT3V0c2V0bG9uZwAAAAAAAAALcmlnaHRPdXRzZXRsb25nAAAAAAA4QklNBCgAAAAAAAwAA" +
                        "AACP/AAAAAAAAA4QklNBBQAAAAAAAQAAAAEOEJJTQQMAAAAABCKAAAAAQAAAKAAAAA6AAAB4AAAbMAAA" +
                        "BBuABgAAf/Y/+0ADEFkb2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVD" +
                        "wwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUD" +
                        "g4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA6A" +
                        "KADASIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBA" +
                        "QAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQ" +
                        "iMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9" +
                        "KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhc" +
                        "SITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj8" +
                        "0aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1VJJJJSlgY" +
                        "WR9Z3fWTIqyqg3pLd/pu2tDdoj0HVWA+q+2z/DMf/4H+jV36w9WPSOk3ZrGtfa3a2ljpgveQxu7b+a2f" +
                        "Uch/VjquX1bpDMzLrbXY572gskNcGu2eo1ri9zP3Ppp/tS9v3f0OLg/wlnux9z2/wBKuL/BdZJJJMXqS" +
                        "SSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//9D1VZ/WutYnR8T17/fY+W0UNPusd+6391jf8JZ/g" +
                        "03W+t4nRsT17/fY+W0UNPusd4D91jf8JZ/g1xvTOmdR+tfUX5+e8txWnbZY2QIB/oeH+6xv+Ft/9H/za" +
                        "Ur6x9Tys36r9OuynB12Xk23ODRDWis3VV1M/kMY5n0kXqw6l0von1f6h08FlWJTuttGoD7xU+Miv/Q2u" +
                        "9Rv9f8A0dnpK1/jBwaqOldPGOwVUY9ppZW0QAHMcW/+el0PQHU5f1dwQQLKn4tdb2OALTDBVaxzT9L6L" +
                        "mLQjkGPlsE+HiAnPjidjxcUf+g0ZYzk5nNG+EmEOGQ3Fer/AKbD6vfWHF63i72fo8muBkY5OrT+839+p" +
                        "/5j1rLzvrvQs76sZrerdIc4YgdodXGouP8AMX/6XFs+ix7v+Ls/S+lbZ131e+sON1vF3sHp5NUDIoJkt" +
                        "J/Ob+/U/wDMeoeY5eIj72E8WGX+Njl+7JlwZ5GRxZRw5Y/4uSP78UvXeuYnQ8H7blte+svFYbXtmSC7/" +
                        "COrZ9FjvzleqtZdUy6syyxoe0+ThuasH68dRy+m9IryMNzWX+u1rbHMa8tllpLqxaHsa/27Po/QWT1Pr" +
                        "P1lf1fC6d03KFb8rFqsDXMr2l5bZZa4vfU/b7a03Hys8kRISjEHi+Y/5v5rXZOZhCRiRKUhw6RH7/yvb" +
                        "rK679YMXoddFmVXZYy95ZNYadsDcXOD3M/6K5vI6x9dOhOFvV2Ny8Oz2uewMG0n/R20sZ6dv7nr0+k9Z" +
                        "f1of1e7Fx8rKzG53S73F+DZtYyyC3d+mZTXXtsY39FZ/L/0amw8leSPHKEscusJfP8A1Y/1mLNzlY5GM" +
                        "ZCceko/L/Wl/VfTUlytXU/rD0LDys36x215LPYzEpr2h7rTu9u+uuprK9v09/qfQ/7co49v+MLqmP8At" +
                        "DHtrx6njfTRDGbm9vSbdXc/a78z7Taz/MUQ5SRs+5jEAeH3DL0Sl2iyHmQKHBMzI4uAD1xj3k9wuV+qH" +
                        "1hz+oY3UsvqVgezGIe1rGBoYza+x7W7fe/6P56P9V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa+WGdlrNzd35j" +
                        "/5ypYv1FsNfSOtWBrXljNwa8S0xXYdr2/nMT44DHFnjMDjHtcMt/nlvGX9ZZLOJZMBiTwEZOIf3I/pR/" +
                        "qvWdC63idcwftuI17GB5rc2zbuDmwf8G6xn0XN/PWiuI6f9beoY31Uf1HJIyst2UcaiWtYwfo22N9RlA" +
                        "q9jGts/l/mJY7P8YWbit6hTmVBrxurpBqkg8bQKbKf+3L037nMXxzhACXBxSOkpf1V33uBrhjOZI46iN" +
                        "Yx8Xr8/NpwMK/Nvn0sdjrHhokw0bvbMIfSep0dW6fT1DHDm1XTDXRILXOqe07C9n02fvLCr6v1236t9T" +
                        "t6phjHysNjhXZYz2WED+c9Czex3pu/P/o9n+DVSz63Z+F9VsHKfGR1HOdc0WvaA0Cux7XWOrq9NrnbPT" +
                        "Yxn/XE0cpkJocJ9ft6G9eH3OL+7wrjzWMCzY9PuajpxcH+NxPaJLim4/wDjGdQ3MZl1WFwBFDTSSQf+s" +
                        "/Zv/ZhdD9Xc/qWf071up4pxMlr3MLS1zN4ERaKrPfX9LZ/YTcnLmEeIThMA0eCWoTjz8Z4TCcLFjjGhf" +
                        "//R7P61/Vk9VaM3EMZ9LNgY4+2ysEv9H3e2qzc79FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY9rhsLXA7PsmS" +
                        "327LGu9ldn/AFu39L/O9qub+tX1VZ1RjszDa1ue1sPYYDb2gR6dk+1tzW/zVv8A1q39H/MpTe+tHTHdT" +
                        "6Jk49bd17QLaByd9Z3hrf8AjG7qv+uLE/xedXZbi2dJsd+kpJuxwe9bzNjR/wAVc7/wZR+qn1oex7ekd" +
                        "Vc4ODvSx7rJDg4HZ9kyd3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf1X6ul2RU+x7Lm4jpfTfrXkNb6Z37Ldzv" +
                        "U/0f/Eq5y0oZMcuXmeHiPHjkf0ZtTmYzx5I54Di4RwZIj9KH/oLc+t31rNzn9F6TNjrD6ORawbi4u9hx" +
                        "cdo+m9/0LH/APW6/f8Azep9UPquej1Oy8szn5DQ1zAZbUyd3ogj6dm7+ds/7a/0lsPqn9UmdJY3NzWtf" +
                        "1BzYa0QW0tI/m6/3rXf4W3/AK1V+j/numQz5oRh7GD5P059csv+9ThwylP383z/AKEOmKP/AHzyn+Mj/" +
                        "kGr/wAMt/8APdyzx/4tOjf+FKv/AD1kLpfrLhdOzsGrG6iLfRsyKmMfToW2PPo1Ocf9G51npfR/wiouZ" +
                        "9Xj1M9UYLTk9IfX08VMMtLn7aKNrHe6za7KdTv3/mWf6NPw5QMIjUiayx0Gl5eGMFmXETmMrG+OXj+r9" +
                        "UnS+sdbLOgdRbY0OAxrXAHxa02Md/Ze3cuAz22u+pXTH8sZk3s+BcbXMH4PXpNzcTPoycMvbYx7XU5DW" +
                        "OG5u8bXNdt/m37XKhi9L6JgdKf0iyxl2I0Ofa3Iewna5xJfZ9Da1tv0H/vpnL5xiiAQTIZBPh/q8MoFf" +
                        "zGH3JEggAwML/rcXE4n12vx+q9AqzenXNyace5r7thna17X17rWfTr2vez2Pas/pnScTqGIy9v1jtpdt" +
                        "AsosftdWQI9Pa69vtb+Y76C6fpv1f6D0jJu9A+/qDdgotsDwWDc411Vv91jPd7t/qrLZ9UPqv1Kyy2oX" +
                        "Ym263HFLXtDS+lzmWGllnrez2bv6n+DU2PPjjAwjKcYRPFHJwRlpP8ARlGX/SYsmGcp8ZEZSkOGUOOUf" +
                        "l/SjKKbof1Trxep19XZ1Q55Zva4wHbiW+l7rvUs+gsf6lvY3pHXKS4C30i70zztDLGF3+f7V1n1e6R0v" +
                        "pWLbX02w3V2WF1jy8P9wAr2/ow1jdm1Yoq6CepV9Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67H13ei79Jucxn" +
                        "+j/AEv6RNjmM/djIynpDhlwxh/NH3OGUfT/AFkywiAxSiBD5+KNymP1w4OLi9TmdDv6NT9TLf2xW63Gs" +
                        "zSxjawS/wBQsrcx1TgW7HMa17t2/wD9Jqbfq3jU1Oz/AKvdebTWQCfUs9OPzv091JZt/wCLuxV0ON0zo" +
                        "XTMb/m/Ywvxslj8ix+Q5paYfTTD3+zbbvtp9H02f4P/AEqo2/UH6tOyvT9e6u18uZji1hO0fuerXZfs/" +
                        "tp45iHFM8U4CcjP5Rkxzh/c/RWnl5cMBwwmYxEfm9vJCX99z8Tr3UOp/V/reJnObe/EoJbksAAcHb2w7" +
                        "YG1u/m/0T2s/SVp8e7oDfqb0ynrTXll1twpfUCX1uFt2+8Ob+bW13v/AJzf/obF0tHRug09Pv6RjhjKr" +
                        "6ybw182Frhs9d7yXWdva/6CVHROiO6WOi7W5WNjH3Me7c9rnE2+o57Nr6rXeo53s9NRnmMWvDGcI+4Ml" +
                        "Q9BEeDg4h+7614wZNLlGcvbOP1eocXHx1/ivLO+r32Co53Qev1V45M/pLRW3/rllRdRa7/jMZbv1L67m" +
                        "9YwrvtoDrcZ4b6zRtDw4bvc0ez1Gfn7P5CpD6ifVdzftTcq00au3C2sshs7/wBL6e7azb7v0q6Xp2DgY" +
                        "GK2jp9basf6Tdhndu/wheS51m799zkuYzY5YzGzknek5QGOUK6GX6SeXw5I5AdMcK1hGZnGd9h+i//S9" +
                        "VSSSSU859afqs3qbHZuE0N6g1vuZoG3tA/m3z7W3N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/bMloFlTXH062" +
                        "j6Ne1p9O25v59//AFun9H/O9AkkpSSSSSmn1jEszOm30VfzxbvokwPVrIux/d/x9dax6OgZwzMG6ws2m" +
                        "s3Z/BjKab76TW389n2nqWRb/wCg1K6RJWMXu+2eGuG5Xffh/l/hsGX2uMcV8VDbtxPPfVvo+Tg2VnKqs" +
                        "Zbj4/2Y2bqDS/3Nfuq+z11ZVm5zPVa/N/Ss9a78+yyxNX9XpycO23FpdszM2/JcQ0ksudkOxi7T9J9PG" +
                        "9v+D/60uiSUkve457XR4uHi/dybf8//AA1kfa4I3fDYrir96Dx7+hda+wY2GKvdTTS2t7XVQx9V773Nt" +
                        "vsacrZXS3H+xNxfz/V9ZGf0DqxdnbdjhnjNqrc92uOLn2XU20bR/NZstZm/4f1PQ/wdXps6pJSH39f5v" +
                        "5pXX7ywezp8/wAsd/3XH6BgWYzr7rabcey1tTCyw4+39EHAek3p7Kq9rN/pepa31X1sq/0aDh9KzqmfV" +
                        "8WMAPTqnMyvcDtJo9D2/v8A6RbySgPucU/l21q6r2p/L/1NlHBwQviqxV1xX7sPm/w3K6j0r7b1FlttN" +
                        "d+OzEvqAsAcBZY6nb7HfvVss96yW9H605+A26oE4pwXG1rqoikMbl+va5js27K3euyv07Psv2d/+k9Su" +
                        "3q0k7F7vCK4ar08d9/0UZPb4jfFd68NPGdHw3W4OLkV4bK6sazNvtzpZusa4ZWP6DWt/TOc99jHXer+h" +
                        "2Y1f857PSWH0XMzelY/2XFrwQOmCg2hzR9oNpx79n6Nr3+h6dFvqPyW7/Uy3/oLa/V9Xs0lMfd4jQjxc" +
                        "Wms/wB7J+96f32KPt8Isy4eHXSP7sP3fV/3bzmL0N77Me27Hs2/bftGRVlGhwhuLbjV3V1YTW4388+ln" +
                        "+l/ReqtDpFGVhMbhHGbXjB2TY2xr27WB2Q9+LjtpH5rsa3f/wAF6fpLTSVfN7lHj4eHSq4uH9Ph4WfFw" +
                        "acPFeu/Df6PFb//2ThCSU0EIQAAAAAAVQAAAAEBAAAADwBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoA" +
                        "G8AcAAAABMAQQBkAG8AYgBlACAAUABoAG8AdABvAHMAaABvAHAAIABDAFMANQAAAAEAOEJJTQQGAAAAA" +
                        "AAHAAcAAAABAQD/4Q3QaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49I" +
                        "u+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZ" +
                        "G9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyM" +
                        "DEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPg0KCTxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3d" +
                        "y53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+DQoJCTxyZGY6RGVzY3JpcHRpb24gcmRmO" +
                        "mFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6eG1wT" +
                        "U09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuY" +
                        "WRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiIHhtbG5zOmRjPSJodHRwOi8vcHVyb" +
                        "C5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL" +
                        "3Bob3Rvc2hvcC8xLjAvIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93c" +
                        "yIgeG1wOkNyZWF0ZURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcDpNZXRhZGF0YURhd" +
                        "GU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDExLTAxLTE4VDA5O" +
                        "jUxOjA2LTA2OjAwIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjM0NEMwOUFCMUEyM0UwMTE4MjAxQ" +
                        "jJBMDJFNDdDMTk4IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQ" +
                        "jJBMDJFNDdDMTk4IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MzM0QzA5QUIxQTIzR" +
                        "TAxMTgyMDFCMkEwMkU0N0MxOTgiIGRjOmZvcm1hdD0iaW1hZ2UvanBlZyIgcGhvdG9zaG9wOkNvbG9yT" +
                        "W9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xIj4NCgkJCTx4bXBNT" +
                        "TpIaXN0b3J5Pg0KCQkJCTxyZGY6U2VxPg0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZ" +
                        "CIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5O" +
                        "CIgc3RFdnQ6d2hlbj0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgc3RFdnQ6c29mdHdhcmVBZ2Vud" +
                        "D0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIi8+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uP" +
                        "SJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDozNDRDMDlBQjFBMjNFMDExODIwMUIyQTAyR" +
                        "TQ3QzE5OCIgc3RFdnQ6d2hlbj0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgc3RFdnQ6c29mdHdhc" +
                        "mVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiBzdEV2dDpjaGFuZ2VkPSIvIi8+DQoJC" +
                        "QkJPC9yZGY6U2VxPg0KCQkJPC94bXBNTTpIaXN0b3J5Pg0KCQk8L3JkZjpEZXNjcmlwdGlvbj4NCgk8L" +
                        "3JkZjpSREY+DQo8L3g6eG1wbWV0YT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3hwYWNrZXQgZ" +
                        "W5kPSd3Jz8+/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJAAYAM" +
                        "QAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAEAAPbWAAEAAAAA0y1IUCAgAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAzZGVzYwAAAYQAA" +
                        "ABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwAAAAUYlhZWgAAAkAAA" +
                        "AAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAAA9QAAAAkbHVtaQAAA/gAA" +
                        "AAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RSQwAABDwAAAgMYlRSQwAABDwAA" +
                        "AgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1QYWNrYXJkIENvbXBhbnkAAGRlc2MAA" +
                        "AAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAA" +
                        "RbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAA" +
                        "BjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNjAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAA" +
                        "AAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc" +
                        "3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY" +
                        "2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nI" +
                        "ENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25ka" +
                        "XRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AF" +
                        "F8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMAK" +
                        "AAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCyALcAv" +
                        "ADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIBWQFgAWcBb" +
                        "gF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4AkECSwJUAl0CZ" +
                        "wJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oDZgNyA34DigOWA6IDr" +
                        "gO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATTBOEE8AT+BQ0FHAUrBToFS" +
                        "QVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowGnQavBsAG0QbjBvUHBwcZBysHP" +
                        "QdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiqCL4I0gjnCPsJEAklCToJTwlkCXkJj" +
                        "wmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsLIgs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQ" +
                        "wxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3eDfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPX" +
                        "g96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4" +
                        "xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1" +
                        "hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbO" +
                        "xtjG4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogF" +
                        "SBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTgla" +
                        "CWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrN" +
                        "itpK50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxg" +
                        "jG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4U" +
                        "DiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/o" +
                        "j/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVHe" +
                        "0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9JT5NP3" +
                        "VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy" +
                        "1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2CqYPxhT2GiYfViS" +
                        "WKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFqSGqfavdrT2una/9sV" +
                        "2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQUdHB0zHUodYV14XY+dpt2+" +
                        "HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+wn8jf4R/5YBHgKiBCoFrgc2CM" +
                        "IKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZif6KZIrKizCLlov8jGOMyo0xjZiN/" +
                        "45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSVX5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaa" +
                        "JrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFHobaiJqKWowajdqPmpFakx6U4pammGqaLpv2nb" +
                        "qfgqFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuLa6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E" +
                        "7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsuu6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDW" +
                        "MPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP" +
                        "9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThz" +
                        "OJT4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx/" +
                        "/KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///9sAQwABAQEBA" +
                        "QEBAQEBAgEBAQICAQEBAQICAgICAgICAwIDAwMDAgMDBAQEBAQDBQUFBQUFBwcHBwcICAgICAgICAgI/" +
                        "9sAQwEBAQECAgIEAwMEBwUEBQcICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI";
                    resourceString += "CAgICAgICAgI/8AAEQgAgQFiAwERAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC" +
                        "//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJC" +
                        "hYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk" +
                        "5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29" +
                        "/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABA" +
                        "gMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR" +
                        "0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t" +
                        "7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/v4oAKACg" +
                        "AoAKACgBrukaPJI4jjjBeSRyAqqBkkk9AKAPxW8Zf8ABdD9lbwv8SbvwbpfhLxN4y8I6ZdPpV/8SfD8O" +
                        "nfY5SjlDPZ29xcxyzQZ5DtsJGSqkYzHOjRUmfsH4J8aeF/iP4Q8NePfBOsReIPCXi+yt/EPh3WrIny7i" +
                        "0uoxLG4DAMpweVYAqcggEEVZm0dRQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAGD4q0GHxV4Y8R+F7i5ezt/ElheaDPd2uPNi" +
                        "S8t3t2dN3G5Q+RnvQB/ET4z/wCCXH7b3hT4k3vw5svgZqvi/ZdGx0jxp4ZWKXQb2BpCsVwL6R0hgR1G4" +
                        "rOyMmcOFNY8rOpVEf2CfshfBXVP2dv2afg98GNd1OPV9d8DaSllr19ZktAb65nkvrhIWZULRRyzskbFQ" +
                        "SoBIB4rVI55O7PpCmSFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFA" +
                        "BQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQB/nr/APBRD9rHxn+1T+1H8" +
                        "T/Ft14vvdU+HfhzW77QPhBohuJRY2GjafcG0tpreAMUjkuFiE0rjksx5wBj/aDwV8OsLw9w/h6KpKNec" +
                        "FKq7auUldpvdqN+VLZJH+KXjd4j4riLiHEVnVcqEJuNJX0jCLsmlsnK3M3vdn9T/wDwQ4+LnxT+L37Ef" +
                        "2z4qa9eeKLvwR4s1b4f+Dtf8QSzXF5Podpp2m3kKyTzszyiGa7mhQk/KiKg4Wv8+fpZcN5flvFfLhIKC" +
                        "qUozko2SU3KadktFdRTfdtvqf6HfRI4lzHM+E+bFzc3TqyhCUrtuCjBq7ers5NLskl0P2Jr+ZT+nwoAK" +
                        "ACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACg" +
                        "AoAKACgAoAgurq2sra4vb24S0s7RHuru7unWOKKKNS7O7OQFVQCSScAUAfLH7XXxs0/4Y/sbfHL44eGt" +
                        "YhuYdO8Fajr/gjXbKVWgnu9SsDBpcscinDLJNcRFSOoPFfe+FvDyzbiPBYRq8Z1Y83+FO8v/JUz4DxV4" +
                        "ieU8N47Fp2lTpS5f8TVo/8AkzR/nK1/uCf4Yn92/wAD9Vs/+CfH/BJDwj47fRobjWfh74AX4nXWjahvj" +
                        "S68SeJj/asdtcuuHx9t1FIGIOQowvAFf5F8WYeXGfiRVw/M1GrX9nddKdP3W10+GLkvPc/1/wCEsRDgr" +
                        "w1pYjkTnSoe0s+tSp7yT6/HNRflsfT37FX7avwm/be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPl" +
                        "yYC+ZBJtYwThQsig8K6ui/A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003+geFPitlvFuWrE4Z2mrKc" +
                        "G/ehLs+6f2ZbNdmml9h1+Zn6cFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4Ao" +
                        "A/lI/4Kc/8ABTrUv2gNV1D9mv8AZv1d4fhK1wND8X+NNPk8mXxbcmQRfZoHJXbpwbgkkeeeT+7+/lKRv" +
                        "CFtWfpJ/wAFrtVh+Gf/AATV8QeBtLmMFlr+peD/AIa2wwdz29jexamFztbGV0wZ5GRxk5wf6c+iTlixH" +
                        "GlGbX8KFSX/AJLyf+3f1ufy79LvNHh+Cq0E7e1nTj/5Nz/+2/1sfxafDjwlL4++IfgPwLCzrN411nS/C" +
                        "UTQY3htSvorMFcgjOZOOK/1TzzMlg8FWxD2pwlL/wABTf6H+UOR5a8bjaOHW9ScY/8AgTS/U/tB/wCC7" +
                        "etaj4U/4J76l4e0DT7g6P4n8T+F/CGtDTY5XgtdOtpJtVjacoGCRefYQoGYgb2QZyQD/lz9EXCwxHGka" +
                        "lSS5oU6klfdydou3d2lJ6dE3sf6ofS/xdTDcFSp04vlnVpxdtlFXkr9leMVr1aW9j+RH9mH9p74s/sj/" +
                        "FnQ/i/8INcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD/Sbj7gHLuJMung8ZC8HqmvijL" +
                        "pKL6Nfc1o7ptH+aPh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1p8Rfh1djTdf" +
                        "00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p" +
                        "9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpwUAFABQBynjjxz4P+GnhPXPHfj7xHa" +
                        "eEvB/hqH+0Nd8Ra5KsFtbRbhGCzN3ZmCqo5ZiAASQKASPI/gN+1f+zz+05Brk3wM+KFl49fw2yJrthbw" +
                        "3tje2yyMyJI9rqcFtN5bFSFkCbTjg0k7jcWj6HpiCgAoAKACgD4G8R/8FQv2EPB/wAVdc+Cviz9oG08N" +
                        "fEbw1qk3gzX9J17RvEtpaWmo28xgkjl1GfTlslVXGDIZ9nfdiv2LA+APF+Jy6GOo4JzoTipxalTbcWrp" +
                        "qKnz7dOW/kfjWO+kFwfhcxnga2NUK8JOEk4VElJOzTm4cm/Xmt5n3rFLFPFFPBKs0EyrLDNEwZHRhkMp" +
                        "HBBHQ1+Pyi07Pc/Y4yTV1qmSVJQUAFABQAUAfFP/BRj4q+Mvgn+xJ+0T8Svh9qj6H4z0DQ1tdA1u2JWa" +
                        "ym1K/t9KNxCw+7LEtyXjbswB7V+qeCPD2FzXivBYXEx5qUp3kujUU5Wfk7WfkflPjjxFisp4Tx2Kw0uW" +
                        "rGFovqnKSjdeavdeZ/IT/wSt+IXj7xZ/wAFHv2cLrxT441jxLc6rq2qS6pceINTvbyS5b/hHNQOZWuZH" +
                        "Lngctmv9KPpCZNg8NwPjlSpQgoxjblilb347WWh/md9HfOsZieOsC61ac3Kcr80m7/u5b3ep/dxret6N" +
                        "4a0bVfEXiLVbbQtA0K2m1jW9b1iaO2tLO0tozNLNNLMVRI0RSzMxAAGTX+QZ/sOfPHwR/bL/Zj/AGjtf" +
                        "1vwr8Fvi9p3jjxJ4eja81PRLeK+s7nyEdY2mhTUYLczxKzKGki3KCRk8ikmmU4tH03TJCgAoAKACgD5d" +
                        "+M37an7Lf7PfizSPA3xi+MumeC/FutJHc2mhXEd7dzxQy52SXP9nwTi2jbadrzlFPY0m0Uotn0vp+oWG" +
                        "rWFlqulXsOp6XqcMeoabqWnyJNBcQTIJI5I5IyVdHUgqwJBByKZJboAKACgAoAKACgAoAKAILq6trK2u" +
                        "L29uEtLO0R7q7u7p1jiiijUuzuzkBVUAkknAFAH8n//AAVG/wCCo1z8cLnW/wBnv9nvW3tPg1aO2n+Of" +
                        "HOns0cviuWNsNBAwwV05SOT1nPJ/d4D5SkdFOnY/Jr9m7wB4n+J3x4+E3gvwj4an8W6xquvaW50XT4vN" +
                        "L2sF5HPcPJnCrFHEjPI7EKqgkkAVKLk9D+kj/g4ennh/Yn+G8cUzxR3XxP0SC5SNiokQeFvEUoVgOo3I" +
                        "rYPcA9q/sT6FcE+Kq91thp/+nKR/GP02ptcKUEnviYf+m6p/LR+xNbQXn7Zn7I9pdQrcWt18TvAVtcwS" +
                        "gMjxv4qsVZWB6gg4Nf6CeKs3HhfMmnZrDVv/Tcj/PTwngpcU5Ymrp4mj/6cif6K/jDwf4W+IHhbX/BPj" +
                        "bQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5r/EzLMzxGCxEK9CbhUg04yTs01s0z/cDM8sw+N" +
                        "w86FeCnSmmpRaumnumj+In/AIKh/wDBLzxT+xZ4puPiR8N7e68U/s0eKbry9H1iTfPdeGLqd/k07UX5J" +
                        "jJOLe4P3/uP+8wX/wBW/AHx+w/FOHWGxLUMfBarZVEvtR8/5o9N1pt/k19IL6PuI4UxDxWFTngJvR7um" +
                        "39ifl/LLrs9d/gf9mH9p74s/sj/ABZ0P4v/AAg1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0" +
                        "KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH434f+IGZcNZlDG4KdprRp/DOPWMl1T+9OzTTSZ" +
                        "/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui/5A+KfhZ" +
                        "mPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpwUA" +
                        "FAH5ff8Fd/A3jb4l/shT+A/h54cvfF3i7xP4p8O6fpPhzw/C89zdMJ5JiAifwqELsx4UAsSAM1M9i6b1" +
                        "PgD/gk5+wl+1z+zT+0xqnxC+Mnwuk8C+B9U8J6p4afUhr3h2+826ub6wuoYXt9K1C5m58gt8yYBXkg4q" +
                        "YxaZdSaaP6QK0MQoAKACgAoA/ztP+CiX/J9f7Wn/Y++I/8A04yV/td4Kf8AJI5b/wBeKf8A6Sj/ABE8b" +
                        "v8Akr8y/wCv9T/0pn9137E1zcXn7GX7I95eTvdXd18MfANzdXVy7PJJI/hWxZmZmJJYk5JPWv8AI7xVh" +
                        "GPFGZJKyWJrf+nJH+vnhRUlLhbLJSd28NR/9NxPp2vgj78KACgAoAKAPzi/4K4/8o6P2nv+wVpf/qR6d" +
                        "X7h9G7/AJLfAf4pf+m5n4Z9JX/kh8w/wx/9OQP5If8Agkd/ykX/AGYf+wrqn/qOajX+j30kf+SIx/8Ah" +
                        "j/6cgf5sfRq/wCS4y//ABS/9NzP7FP+CleieIfEv7EHx58OeE9Lu9b8Sa/Z6Tomi6LoUUs95eT3XiGwg" +
                        "WCKOAF3aTdt2gc5xX+N8tj/AGchufiZ/wAE1f8Agnp+2d8Dv2wPg18X/iZ8H5vBvw40eLXz4j1mfXfDc" +
                        "skUWoeF9RsrdZbOz1GW5O64miBXyiVOCwABIiMXc1nNNH9TVamAUAFABQAUAfyP/tvfsNfta/tNftt/t" +
                        "LeMvg78H7/xj4XtdW03TF8SX99pWk2cz2/h7T4jHbza7d2azeXgKwiLbcYOMYrKUW2dEZJI/o//AGKvh" +
                        "/45+FP7KfwL+HHxK0xtF8c+DNBt9B8RaRLdW16baWB3VYvOs5Z4nCptA2OQBwOlaR2MZPU+oaZIUAFAB" +
                        "QAUAFABQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/k//wCCo3/BUa5+OFzrf7Pf7" +
                        "PetvafBq0dtP8c+OdPZo5fFcsbYaCBhgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz40ePPDfwz+Gfhufx" +
                        "X408VzjT9H0fTwMscbnkkdsLHFGoLySOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiuCNfiD8QV" +
                        "jOFGRJ/Z+n+YA0dpGwGTgNKwDuBhETaMbHNOdz49/4OC9Dm1b9hrwxfxbtnhj4h6BrlzsUEbJNG1nTRu" +
                        "JIwN12OfXAr+tvoZ4tU+LakX9uhNf8Ak1OX/tp/If008I6nCNOS+xiIP/ySpH/24/ku/ZU8RxeD/wBqH" +
                        "9m7xbO6RQeFvH3g/wARzSXIZo1Sx8Q2lyS4QglQE5wc1/o14h4F4nh/HUVvOhVj98JI/wA3fDrHLC8QY" +
                        "Cs9oV6UvunFn+k5X+GJ/u2c34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoUeORHBBBB/D" +
                        "qOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gqH/wAEvPFP7Fnim4+JH" +
                        "w3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf/VvwB8fsPxTh1hsS1DHwWq2VRL7Uf" +
                        "P8Amj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf2nviz+yP8WdD+L/wg1w6bremn7" +
                        "JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH434f+" +
                        "IGZcNZlDG4KdprRp/DOPWMl1T+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ABE+HeoSo+o6B" +
                        "qLoT5cmAvmQSbWME4ULIoPCurov+QPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/7E+FPitlvFuWrE" +
                        "4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFAH57f8FQf2nPH/AOyV+yB43+K/wtW2i8fS3ul+D/DmrarCl" +
                        "zDp0up3PlvdeRKGSV441by1cFN5BYMoKt+0eAPAWD4j4lpYTF39jaUpJOzlyr4brVJu12tbXs09V+KfS" +
                        "B4/xvDfDNbGYS3trxjFtXUeZ/FZ6NpXsnpe101o/wAa/wDgjd+3l+1v+0j+1xqPw8+N3xovvH3g2Hwfr" +
                        "PiKLQtQstIt4xe217p8UUu6xtIHyqzOMbsc9K/p36TvhBw3kXDccTgcKqVV1YxunJ6NSutZNdEfy79F3" +
                        "xi4lz3iWWGx+KlVpKjOVmorVOKT0in1Z4B/wUh/4KQ/ttfBb9tr4+fDD4YfHzUPCXgPwlqGn2fh3w7Z6" +
                        "foc0drHNodldOqvdWUshzJKzfMx619l4HeB3Cma8KYPFYrBxqVqkZOUnKavacl0klsl0PjPHTx04syri" +
                        "zGYTCYyVOjTlFRiowdrwi+sW92+p8Qf8Pcf+Ci//Rz2q/8Agr8Of/K6v1f/AIlu4I/6AI/+BVP/AJM/J" +
                        "f8AiZXjj/oYS/8AAaf/AMgegfD/AP4LW/8ABQ/wNq0N/qHxhtPiNpyP50/hv4geH9FmtJjwMNLplvY3S" +
                        "jjok6/nXj5z9FfgrF03GOGdKX80JzTXyk5R++LPZyX6VvG+DqKUsUq0f5Zwg0/nFRl90kfux+zL/wAFV" +
                        "PAv/BQTwrdfAS88caj+xn+1FrcYXwL4n8Oy2GoaZqOoxoQgsm1aB45C7ffsZ0DspxFMzjcv8jcefR6xf" +
                        "BmIWYRpRzDL4/HGScZRj15uV3Vuk4uyesopaP8Ar/gH6ROD40w7y6VaWX5hJe5KLjKMpdOXmVnfrTkrt" +
                        "aRk3qvxu/aj/bV/4KzfsjfGPxJ8GPit+0ZqdtrWjEXmj61ZaV4eNhrOlyuy29/Zu+mgtDKEPUBlYMjAM" +
                        "rAf074f+FfhzxJllPG4TAxcJaNOU7xkt4y9/dfc1ZrRo/l3xC8VvEjhrNKmBxmOkpx1TUYWlF7Sj7mz+" +
                        "9O6eqZ+RHjzx14s+J3jPxP8Q/Hesv4h8ZeM7248R+J9duUhjku726kMssrLAkaAsxJwqge1f0llGUYbA" +
                        "YWnhsPHkpU0oxWuiWy1uz+aM4zfE5hiqmJxEuerUk5Semrerell9x9m+Dv+Cof7enw/8IeFfAfg/wDaK" +
                        "1LRPCPgnTbHwj4W0WDTdAkSz07TbVLO2gVprB3YRxRqoLMScckmvy/M/ADg/G4mpiK2BjKpUk5SfNPWU" +
                        "ndvSVtW76H6llf0guMcFhqeHoY6UaVOKjFcsNIxVktY30Stqf1uf8Ejv2qviz+1v+yUfiF8bDHd+M/Cf" +
                        "iPU/h3N4shtY7Ia3a2NjY3yXzxQJHCHzeNC5iUIWjJwDkV/nD9JDw8y7hviP6tgbqlOnGfLe/I25Llu7" +
                        "u3u3V9bP0P9J/o1eIuZcS8N/WcfZ1adSUOa1udJRfNZWV/ecXZWvHvc/Pb9vP8A4Lwaf8PPEOufCj9jv" +
                        "SNP8aa3o7yaXr/xp8Tq9zo8NwqlHTSrSJ0+0tGx/wCPiVhFuUhY5UIev2jwg+iHPG0YYvOpSpwlrGlHS" +
                        "TX9+WvLf+Ve9Z6yi9D8U8YvpgwwNeeDyWMak46Sqy1in/cjpzW/mfu3WkZLU/CXxV/wU/8A2/vGOpy6t" +
                        "qv7VHiqxuZSzmDwrdQ6HajdjhbfRorWIAY4+X+tf1zl3gHwbhafJDL6TX95Ob++Tb/E/kDMfpAcZ4qpz" +
                        "zzGqn/dagvugor8D374Df8ABa/9uj4OatYnxV49h+OfhGJ0F94X+KFrBLO8X3X8rUrNIbtJCPutI8igg" +
                        "EoeQfjuMPorcJZnTfsqLw1TpKm3b5wd429En5o+04O+ldxfldRe2rLE0usaiV/lNWkn6tryZ/WN+w7+3" +
                        "v8ABn9urwBc+Jvh9K/hzxr4cEUPj/4X65NG+paTLKPlkVkCi4tZCCI51UA4IZUYFR/nT4seD2acI4xUs" +
                        "T79KfwVEvdl5eUl1i/k2tT/AEd8JPGTK+L8E6uG9yrC3PTb96L7/wB6L6SS9UnocH/wVx/5R0ftPf8AY" +
                        "K0v/wBSPTq9j6N3/Jb4D/FL/wBNzPH+kr/yQ+Yf4Y/+nIH8kP8AwSO/5SL/ALMP/YV1T/1HNRr/AEe+k" +
                        "j/yRGP/AMMf/TkD/Nj6NX/JcZf/AIpf+m5n9pv7cnx08Sfs1fsm/G/43eDrG31DxX4F0lbnw5Bqys9st" +
                        "7e3sGmwyyopBdYmuBIUyN23GRnNf5a+E3CVDPeI8Jgazap1Ze9beyTk0u17Wv0vc/1U8XOL6+Q8N4vH0" +
                        "UnUpQ92+121FN97N3t1tY/m2/4Jgf8ABRr9tL4/ft5fBL4Y/Fv46Xvi/wAAeMH8UTeIfC82m6Ha285s/" +
                        "CGranAM2NlC6COeBHAVh90DpxX9y+Pvghwtk3CGLxWDwip1qfs+WXNNtXqwi95NO6bWvc/hP6P3jlxVn" +
                        "PGOEwmMxjqUantOaPLBJ2pTktopqzSenY/o+/bM/bP+EX7Efwpk+JfxRuZL++1KRtJ8DeBdGaP+09d1B" +
                        "VDmKASEKkcakNNM3youOrMit/D3hf4XZlxXmP1XCKyWs5v4YR7vu3sktW/JNr+6PFLxTyzhPLvrWLbbb" +
                        "tCC+Kcuy7Jbyb0S7tpP+Sn49f8ABcL9uH4u6nep4G8VWXwF8IyOwsvD/wAO7O3mvRFyF8/UtSjmnaQA8" +
                        "tD5Kn+6K/0d4P8Aon8J5bTXt6bxVXrKbaV/KEWlbyfM/M/za4x+lrxbmdR/V6iwtLpGCTdvOck3fzXKv" +
                        "I+OIf8AgoN+3NBqR1VP2t/iE10UEPlTeK9YktsKwb/j3knMOeOTsyRxnBNfpsvBnhJ0+T+zaFv+vcb/A" +
                        "H2v+J+Xx8auLlU5/wC0sRf/AK+St917fgfen7O3/Bd79sT4Vanp1n8Xp9O/aE8ExukV/Z+JLW20rW47c" +
                        "dfs2o6VDGpfvuuIZs9OOo/IONvoicM5jTlLBqWFq9HFuUL+cZN6f4ZRP2Lgj6YPFGXVIxxrji6XVSSjO" +
                        "3lOKWv+KMj+sj9k79rT4Q/tl/Cez+LXwf1KeXTBO2ieI/DutxLBqejanHEkz2l1GjOu4LIrK6MyMpBDH" +
                        "kD/ADo8RfDnMuF8xeDxkVzWvGS1jKOylF/JqzSae6P9H/DjxIyzinLVjMFJ8t7Si9JRlu4yWq2ad02mt" +
                        "mfzZ/8ABUn/AIKk/thfDL9sL4kfBj4MfEg/CvwJ8Kzp+hWlpoWn6Xc3Go3FzpdtqM11dTajbXDbt1wUR" +
                        "EKqFUcFiSf7m+j99H7hnH8M0MbjaHt61fmbblJKKUnFJKLXa7bu232sj+EvpC/SF4ny/ievgcDX9hRoc" +
                        "qSUYtybipNtyT72SVkku92f0R/sE/Evxf8AFT9jH9n/AOKHxM8RN4h8YeKvDseueKvEt+tvA1xN50oaV" +
                        "xAkUa/KozhQOK/inxgyLDZfxRjMLhYclKFS0Yq7srLTW7P7c8HM+xWY8K4LF4qfPVnTvKTsru710sj8Q" +
                        "P24f+C+GpaD4q1z4bfsY6PpuqWGiSyaZqHxv8WQtewXk0ZKu2kWe5EaJWHy3E+4SclY9u12/q/wn+h7T" +
                        "rYeGKzuUouSuqUXZpf35b37xjZrrK90v5M8W/pkVKOInhcjjGUYuzrSV03/AHI7W7SldPpG1m/xJ8Y/8" +
                        "FKv29vHN1dXmtftX+M7KW82+cng7VpPDsQ2sGGyLw+LJI+RzsUZHB4r+q8s8C+D8JFRhl1FpfzR5/xnz" +
                        "N/M/k7NPHjjLGScqmZVk3/LLkXyUOVL5HZ/DT/grB/wUB+F+oQXmmftIaz4rtUZXutI+JYtvEdvcIoA2" +
                        "M2rRzTIDt5MUiN15yTXl579HXg3MIOMsDCD707wa/8AAWk/mmvI9XIfpHcaZfNSjjp1F2qWqJ/+BJtfJ" +
                        "p+Z/Rb/AME9P+C1Xgv9qPxT4e+Cnx18L2/ws+NPiORdM8J6z4daaTw3r92VJECC6eSayuHIxHFI8iueB" +
                        "IGKof4m8afosYrh/Dzx2AqOthYK8lK3tILvpZSiurSTX8tk2f3B4J/SswvEOIhgcwpqhi5u0XG/s5vtr" +
                        "dwk+ibkn/NdpH7sV/Ix/XwUAQXV1bWVtcXt7cJaWdoj3V3d3TrHFFFGpdndnICqoBJJOAKAP5P/APgqN" +
                        "/wVGufjhc63+z3+z3rb2nwatHbT/HPjnT2aOXxXLG2GggYYK6cpHJ6znk/u8B8pSOinTsfjZ8Lvhd48+" +
                        "NHjzw38M/hn4bn8V+NPFc40/R9H08DLHG55JHbCxxRqC8kjkKigsxAFQkaN2P7Uf2Af2AfAf7FPgPe/k" +
                        "eK/jV4rgjX4g/EFYzhRkSf2fp/mANHaRsBk4DSsA7gYRE2jGxzTnc/QmqIPzd/4K5fDmb4l/wDBPT9o3" +
                        "TLODztR8MabZfEazYAkxp4d1W21a6bA/wCnWCYe2c1+5fRuztYDjTAyk/dnJwf/AG/FxX/kzR+FfSVyN" +
                        "4/gnHRiryhFTX/bklJ/+Spn8CFtcz2dxb3drM1vdWrpc208RKukiMGVlI6EEZFf7EzgpRaaumf4005uM" +
                        "k07NH+l78DPiVY/GT4L/Cf4s6dIklp8SPDujeNU8nojalp8V06YwMFGcqQRkEYNf4S8W5FPK80xODlvR" +
                        "qSh/wCAyav89z/enhHPoZplWGxkdq1OM/8AwKKdvlseqV88fRHN+MPB/hb4geFtf8E+NtAtfFPhHxTaz" +
                        "aJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmu7LMzxGCxEK9CbhUg04yTs01s0zhzPLMPjcPOhXgp0ppqUWrpp" +
                        "7po/iJ/4Kh/8EvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf8A1" +
                        "b8AfH7D8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf" +
                        "2nviz+yP8WdD+L/AMINcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD9h4+4By7iTLp4PG" +
                        "QvB6pr4oy6Si+jX3NaO6bR+N+H/AIgZlw1mUMbgp2mtGn8M49YyXVP707NNNJn99n7G/wC1f4E/bO+A/" +
                        "hn43eBLaXSE1CSbQfFnha/dZLjRtaswhubR5EAWQASJJHIAN0boxCklR/jt4neHeM4XzepgcQ1K1nGS2" +
                        "lB7St02aa6NNXa1f+ynhd4jYPirJ6ePw6cb3jKL3jNbxv13TT6pp2T0X1NX58foZ+M//BeL/lH94h/7G" +
                        "nwz/wClMlf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/YheIP/AE46XX9YfTJ/5" +
                        "JGP/X+H/pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy/8ATkz8+" +
                        "+kr/wAlxmH+KP8A6bgf0P8A/BNP9gP9jb4t/sOfs/8AxF+JP7Pfh/xh438T6dqN1r/iTV4Z2ubqSLXb6" +
                        "2RnKSqMhI1UcdBX8V+O3jFxPlvFmNw2FxtSnShKPLFNWV4Rfbuz+2vAbwa4XzLhHBYnFYKnUrTjLmk07" +
                        "u05Lv2SPXPj7/wRG/Yf+Lvh2/g8B+CpvgR41Mbf2T4s8AXd5LbLMANguNOv55beSMEfMIxG5z98cV83w" +
                        "d9K3izLa6eIqrE0usZpXt5TSUk/XmXkfS8ZfRN4SzOg1h6TwtXpKDdr+cJNxa9OV+Z/H3+07+zd8V/2M" +
                        "fjprfwk+IQOneKfC0kGveGPFOhvLHb6lYSSF7PUrGX5W2MYzgjDJIrIcMhA/wBLuAuOcu4oyiGMw2tOd" +
                        "1KLteL+1CS+fo001o0f5kcf8CZlwrm88HidKkLOMle0o/ZnF9tPVNNPVM/rU/YQ134C/wDBVX9l3wH4q" +
                        "/ai+GGi/Fb4x/Aqa5+GfizUfEcBNw0rxwTx3qmJ0bbewLG0n8PnLJtAHFf5yeLuDzjw84grUsqxE6GFx" +
                        "KVSKi9Oqcf+3HdLryuNz/STwfxmTeIvD1Gtm2HhXxWGbpyclr0alp/OrN9OZSsfye/tv+DfC/w7/a//A" +
                        "GkvAvgnRYfDfhHwl4x13QfDeg6cCsFnZ2188cUUYYkhVUYGTX+inhRmmIxvDWBxFebnVnRg5N7ttK7Z/" +
                        "nF4tZXh8DxNj8PQgoUqdacYxWySbskf18/sj/8ABOX9h7xx+yl+zH418W/s1+G9d8VeL/h74L8UeJtcv" +
                        "obgz3moah4bs7u4nkKzAF5JJGZsDqa/zV8SPG7izCcRY+hRx1SNOnXqxik1ZRjUkklp0Ssf6Z+Gvgbwl" +
                        "i+HMvr1sBTlUqYelKTad3KVOLbeu7bueCf8Fnvjvo37HP7Ingj9mL4BaRZfDI/Gtr/wrBpXgqCLT4tM8" +
                        "KWCxy6osMdqFCNeSXccTsRl1eY5LEkfY/Rd4Qq8T8S1c0zCTrfV7SvNuTlUd+S7e/KotpdGo9D436U/G" +
                        "FLhfhmjlWXRjR+s80bQSio042c7Jbczkk31Tl11P51f+CeH7CPi79vH40SeCLHU5PCnw48HQxeIPir47" +
                        "hhEz2NlK7JBb26OQjXV26MsQY4VVeQhghVv7Y8avF3DcIZX7eUeevUfLThe131b68sd3bdtLS91/EHgl" +
                        "4P4njHNfYRlyUKa5qk7XsuiXTmk9FfZJvW1n/Y/8Lv+CXH7BXwo8OQeHtL/AGa/Dfi9lh+yXuv/ABRsY" +
                        "fE2o3TldrytLrCziN2PP7lY1U/dVRxX+Y/EH0gOMMxrupPHVKet1Gm3TivK0bXX+Jtvq2f6hcPfR74Oy" +
                        "2gqUMBTqaWcqiVST87yvZ/4UkuiR+fP7e//AAQ/+DHxB8DeI/iD+yT4aT4X/F3RIZdYg+Humzynw/4hE" +
                        "SmR7aOG4ZxZ3LgYhaIrEWwroN3mL+zeD30r80wWLhh84qe2w0nbna9+Hm2viivtXvK2qbtZ/i3jH9EvK" +
                        "sbhKmJyen7HExV+RP3J26JP4ZP7NrRvo0r8y/mI/ZK/aP8AGv7H37RHgP4zeG2uYJ/CV8th418NoxhOq" +
                        "aJLKsWo6dMkmBmSMHZvHySqj43IMf3v4j8D4XibJK2Cq2anG8Jb8s18Ml6Pe28W1sz+APDbjrF8MZ3Rx" +
                        "1K6dOVpx25oP44v1W19pJPdH9o//BVDX9J8V/8ABMj9oHxRoF4uo6F4k8PaDr+i6hECFntLzXdMuIZBu" +
                        "AOGRwRmv8t/o+YOph+PcFSqK04VJxa7NQmmvvP9UvpEYylieAMbVpu8J04ST7pzg0/uP5Of+CR3/KRf9" +
                        "mH/ALCuqf8AqOajX+iv0kf+SIx/+GP/AKcgf5xfRq/5LjL/APFL/wBNzP63v+CuP/KOj9p7/sFaX/6ke" +
                        "nV/nD9G7/kt8B/il/6bmf6T/SV/5IfMP8Mf/TkD+Ur/AIIu/wDKS39mz/ucf/UB1yv9DvpR/wDJCY7/A" +
                        "Lhf+nqZ/nR9Ff8A5L3Af9xf/TNQ+o/+DhfX/E15+2L8PPDmpTyjwzoXgLTtQ8MWLhhAJL/WdTF1OmeC8" +
                        "jW6IxHaNR2r4D6F2DoR4Yr1Ype0lXkpPrpGHKvldterP0L6bGNry4ooUpN+zjQi4rp7058z9XZJ+iPMP" +
                        "+CVnhD/AIJf6/c6vdftqeLxF8UFvlTwf4V+JUl1pHgtbJFQrM17ZyrFLMXLB0vJI4wuMI/LD3/pCZlx/" +
                        "RjFZHS/2fl96VO0qt+3K1dK2zgm79VsfP8A0d8s8P60pPPav+0c3uxqXjSt35k7N33U2o26Pc/qw0v9i" +
                        "X9gHxp4TtpPD37MHws8QeF9VhVbDxB4Y8LeGpfPiB4eLULGDzCePvrLk+tf55YjxV4ywuJaqZhiYVIvW" +
                        "MqlTR+cW7fJo/0Vw/hPwZi8MnTy/CzpyWko06eq8pJX+aZ+UP7YX/BAT4aePAvif9j3xBb/AAh8TSzFt" +
                        "T8A+PrzUrvwzPG5LF7e5SK9vLV1JPykSoRgKI8c/wBE+Gf0xsfg/wB1nMHXp20nBRVReqvGMl5+6+7Z/" +
                        "OXid9DPAYz97ks1h6l9YTcnTfo7SlF+XvLskffv/BL39gzWf2DPgt4m8I+MvGNp4y+IPxB1ZfFXiu48M" +
                        "LONJsxBapaQW1q93HDLKFAZmleNMlsbBty3454/eL9LjDNKdajSdOjSjyx5rczu7tuzaXRJJvbfXT9m+" +
                        "j74O1eDsqqUa9VVK9WXNLlvyqyslG6TfVttK97W01/kz/4K4/8AKRf9p7/sK6X/AOo5p1f6L/Ru/wCSI" +
                        "wH+GX/pyZ/m/wDSV/5LjMP8Uf8A03A/oR/t7xN4a/4N/wCHVPCNzNZ6wfhlFpb3FiCZVsb/AFdbC+xt5" +
                        "ANrNKGbsMntX8Y/U6FfxkcKyTj9Zvr3Ubx/8mSP7U+uYih4MKdFtS+rW07SlaX/AJK2fyQfBex+E2pfF" +
                        "XwLY/HbXtW8M/CG4v4l8fa54HtIr3VYLAAs32eKZlXLMArPhiikuEkKhG/0f4prZlTy6tLAQjPEqPuKb" +
                        "tFvza++2l3o2k7r/NjhWjltTMaMcwnKGGcvfcFeSj5J/dfWy1Sk1Z/2w/sl/s7/APBIDx74WtLH9nbwD" +
                        "8MvjGIoBLdxeLrez8T+IgoC7pbq28VLPewFiM4aJFHIUAcV/lb4jca+JeDxDlmVbE4fXTlbpw9E6doP7" +
                        "2+7P9XPDbgjwyxmHUcto4bEaa8yVSfrJVLzX3Jdkdn8ef8AgkP+wn8c9Ev7SL4MWHwh8STIy6X4v+DEU" +
                        "egS2khHDfYrVRYyrnGVkgPHQqea8vhD6SfF2U1VJ4qVeHWNX30/+3n76+UvW56nGP0Z+D83pSisLHD1O" +
                        "kqXuNf9ur3H84+lj8uv2Xf+CC/xV+Df7Vfw8+Kvj74zeHdb+Fnwk8Q2HxE8NDwomqLr+q3Oi3seoWMdz" +
                        "a3dstvao0sSmbZczHaCq/e3L+/+IH0v8uzTh6vhMPhakcRXpuEubl5IqacZNNPmlo3a8Y66vaz/AJ98P" +
                        "vodZjlfEVDF4jFU5YehUU48vNzycGpRTTXLFXSvaUtNFvdf09V/A5/f4UAeKftFfBLR/wBoz4LeP/gvr" +
                        "viDUfC2m+O7I6XLr3hid4Lq3dZFmQkKyiWIsgEsLHbIhKnGchNDi7M/hb/ag/Zf+KX7JnxS1T4XfFHS/" +
                        "JuYd174b8SWSudO1rTi5WO7tJGAypxhlPzI2VYAisWrHVGVz2//AIJ4ftpt+xT8aJvF2qeFoPFPgTxrb" +
                        "w+F/H8cNtA2sWtis/mifT7iQBleNvmeHcEmAAbDKjo4uwpxuj+2z4d/ETwV8WPBXhz4i/DrxHbeK/Bni" +
                        "u2TVNC13S33RTRNkEEEBkdGBV0YBkYFWAYEVscrR2lAHN+MfCmi+PPCHirwP4ktvtnh3xnpt94U1+z+X" +
                        "97ZajavZzp8wYfNHIRyDXdlmY1cHiadek7TpyUk+zi7r8UcOaZdSxmGqYeqrwqRcZLupKz/AAZ/mnfFr" +
                        "4beIPg58UfiH8KPFURi8RfDnWdS8F6vuRoxJNp129qZEDZ+STZvQ5IKkEEg5r/dbhzPaOZ5fQxdL4K0I" +
                        "zXpJXt6rZ+Z/g1xJkVbK8wr4OsvfozlB+sW1f0e68j+wT/ggh+0Xa/E/wDZN1L4JapqAl8Xfs+apNp1v" +
                        "aynMj+Htcml1Oylyxy2yc3MOAMKqIO4Ff5o/TC4JlgOI446Ef3eKinf+/BKMl81yvzbZ/px9DjjiOYcN" +
                        "ywE5fvcJJq39ybcov5S5l5JI/dGv5JP67CgD+VD/gsP/wAFXtL8X2Pi79kH9m7VbfV/DF1v0D40/FC08" +
                        "u4gvtj4k0rTHO5TEGXE9wv3iNkZ25Zv9DfozfR2qYadPOczi41FrSpvRrtOfn/LHpu9bJf51fSd+kbTx" +
                        "UKuS5ZJSpv3atRap94Q8v5pddlpdv8Am68H+D/FPxA8U6B4J8E6BdeKfF3im6h0Tw94e0SF57q8up3CJ" +
                        "HGiAkkk/h1PFf3HmeZ4fBYedevNQpwTcpN2SS3bZ/CuWZZiMbiIUKEHOrNpRildtvZJH98X/BL79jvX/" +
                        "wBif9lrTPhj4z1OHUPH/izVrv4n+PYNMfzbSx1LUbO0sRaQyDiQQwWUSu4+Vn3Fcrgn/Hrx98TaPFXEE" +
                        "sVQi1RhFU4X0bjFyfM10u5NpbpWvqf7I/R+8MK3CfD0cLXknWqTdSdtUpSUVyp9bKKTezd7aH6JV+KH7" +
                        "cfjP/wXi/5R/eIf+xp8M/8ApTJX9P8A0Q/+Syh/16qfkj+W/phf8kXP/r7T/Nn4f/8ABv8Af8n16t/2I" +
                        "XiD/wBOOl1/WH0yf+SRj/1/h/6TM/kr6GH/ACV8v+vE/wD0qB8uf8Fcf+Ui/wC09/2FdL/9RzTq+/8Ao" +
                        "3f8kRgP8Mv/AE5M/PvpK/8AJcZh/ij/AOm4H9b3/BI7/lHR+zD/ANgrVP8A1I9Rr/OH6SP/ACW+P/xR/" +
                        "wDTcD/Sf6NX/JD5f/hl/wCnJn6O1+Hn7mfzVf8ABxv8OtEuPhx+zl8WktY4vEek63qfw6nvUUCaey1Cw" +
                        "/tONHIHzLFJZOUBPymRsfeNf3V9CHO6scdjsHd8koRnbonF8rfzUlfvZdj+DvpyZHSlgcDjLL2kZyp36" +
                        "tSXMl8nF27Xfc8U/wCDcHxFqcHxE/ag8JLMTo2p6L4d8RT27EkC5sb67tkZR0GUu2B9cD0r6n6cOCpvB" +
                        "ZfWt7ynOPyai/8A21Hyn0GMdUWOzCjf3ZQhL5pyS/CTPxl/4KBahBqf7cn7XFzbBhHH8RPFunt5oAPmW" +
                        "mtXFo/QnjdGce1f1D4NUXT4Ty1P/oHpv74J/qfy140VlU4uzNr/AKCKq+6bT/I/u3/Yd/5Mq/Y//wCyX" +
                        "fD/AP8AUTsK/wAi/Fj/AJKrM/8AsJrf+nJH+v8A4Sf8kpln/YNR/wDTcT+ab/g4we8P7SXwHjcyf2evg" +
                        "eR7UNu8rzm168Eu3tu2hN2O2Pav7r+hIo/2FjH9r234ckbfr+J/Bv04XL+3sGvs+x/Hnlf9PwPw6+G//" +
                        "C8fI1b/AIVD/wAJX9m3w/27/wAK3/tfZvw/lef/AGXxnG7bu98d6/rHPP7JvH657K+tvacvztzfjY/kj" +
                        "Iv7XtL6l7W2l/Z83yvy/hc9M/4zV/6qj/5dleD/AMYr/wBQ3/lM9/8A4yv/AKif/Kgf8Zq/9VR/8uyj/" +
                        "jFf+ob/AMph/wAZX/1E/wDlQ80ufgv8c7y4nvLz4T+LLq7une5urq50LWHkkkdizMzNASWJOST1r3ocU" +
                        "5TGKSxNJJf34/5ng1OFc3lJylhqrb/uS/yP67vj5Hrdv/wQSs7PxHbXFnrWnfC3wJpd9ZarE8FzCbW+0" +
                        "i2WOSORVZWRUCkMM8c81/mzwdKk/GBypNODxNZprVO6m7p+Z/pdxnGrHwcUaqamsNRTTVmrOmrNeR/Ot" +
                        "/wSO/5SL/sw/wDYV1T/ANRzUa/tj6SP/JEY/wDwx/8ATkD+Ifo1f8lxl/8Ail/6bmf1vf8ABXH/AJR0f" +
                        "tPf9grS/wD1I9Or/OH6N3/Jb4D/ABS/9NzP9J/pK/8AJD5h/hj/AOnIH8pX/BF3/lJb+zZ/3OP/AKgOu" +
                        "V/od9KP/khMd/3C/wDT1M/zo+iv/wAl7gP+4v8A6ZqH9ZH/AAUD/wCCd/wv/b18DaVp/iDUX8EfFDwUt" +
                        "w3w++JWmwLO9sLgAyWl5AWT7RaOyqxXcrIwyjDLh/8AOnwa8asw4PxcpU4+0w9S3PTbte20ov7MltezT" +
                        "WjTsrf6P+NHgjl/GODjGpL2eIp35KiV7X3jJac0Xva6aeqau0/5Kf2hP+CQ37c37Ps2o3k/wnm+K/hCx" +
                        "LyR+Mvg0z65E8SDcXeyiRb+IKvLF7cKOcMQCa/0c4L+kpwlnKjFYlUKr+zV9zX/ABfA/K0r+R/m1xr9G" +
                        "fi7JXKTwzr0l9ul7+n+Fe+vO8beZ8UfDv4yfHb9nnxFeXHwy+I3iX4Q+I7eURaxbeGtQ1DSZHkhOPLu4" +
                        "I3jEgB4KSqR6iv1TO+GMozqgliqFOvBrTmjGW/WL1t6pn5TkfFGcZJXbwteph5p68spR26SWl/Ro/YH9" +
                        "nb/AIL8/tUfDm707S/jtoWk/H3wmhSG+1FoIdA8RJGPl3R3Omxi1cqOSJLUs5Ay65Jr+aeNfoc8PY6Mp" +
                        "4CcsLU6K7nD5qT5l8pWXZ7H9N8EfTL4iwMowzCEcVT6uyhP5OK5X843fdbn9S/7J37XnwX/AGzfhjD8T" +
                        "/g1rUlxa28g0zxR4V1xI4NY0S+K7/s97BG8iqWX5kdGZHH3WOCB/n34i+GuacL494XGwSbV4yWsZrvF2" +
                        "XzTSa6rY/0L8N/EzKuKcvWLwU20naUXpKD7SV38mm0+j3P4o/8Agrj/AMpF/wBp7/sK6X/6jmnV/qh9G" +
                        "7/kiMB/hl/6cmf5S/SV/wCS4zD/ABR/9NwP67P+CcXhvQfGP/BNz9nPwl4p0mDXvDPifwU3h/xDoepxi" +
                        "W2vLK8e4t54ZUbhkkRyrD0Nf5t+OGOrYXjnHVqUnGpCtzRa3TVmmvNM/wBLPAzA0cVwJgaNaKlTnR5ZJ" +
                        "7NO6afk0fhT+2D/AMEBfiv4Y13W/F37IGr23xE8EXckl9Z/C3xXew2Gv6crtu+z293elLa7jTna0skUm" +
                        "MAiRssf648M/pjZdiKMKOcxdKqtHUim4S83FXlFvslJddFofyF4nfQzzHD1p1slkq1F6qnJqM4+Sk7Rk" +
                        "l3bi+mr1Pwx+JnwQ+PH7PHiCCz+Kfw08R/CfXbOcf2beeI9PvdODzRksr2tyyqkuNpKvE5HGQa/rXIeL" +
                        "Mozqi5YSvTrwa1UZKWn95br0aP5Fz/hLOMkrqOLw9ShNPRyi46/3Xs/VNn138DP+Cs37eHwGawtdH+N9" +
                        "78QfDljhf8AhFPjCv8AwkltJGvCx/aL1vtsaKBhViuUAHA4r814t+jnwhnF3PCKlN/ape4/Wy9xv1iz9" +
                        "M4R+khxhk/KoYt1aa+zV/eL0u/fS9JI/os/YP8A+C23wr/ac8U+HfhB8aPCyfBf4ueJJE0rw3qdrdfaP" +
                        "DOtXrnCQRS3G2W0nlJ2xRS71dsKJS7Kh/ibxe+ipmGQYeeMwNT6xhoK8la1SC7tLSSW7as0teWybP7g8" +
                        "HvpY5dn+IhgsdT+r4mbtF3vTm+iTesW9kndN6c12kfuZX8ln9chQAUAfMf7WH7J/wALf2v/AIW3/wANv" +
                        "iTYeTcw+ZfeDPGdjGh1HQtRKbVuLdmxlTgCWInbIvBwQrKmrlRlY/iM/ag/Zf8Ail+yZ8UtU+F3xR0vy" +
                        "bmHde+G/ElkrnTta04uVju7SRgMqcYZT8yNlWAIrFqx0xlc+mP+Cef/AAUM8a/sXeNRpGrm58V/AfxXc" +
                        "pJ438ERvuls5WxGdR04SEKlwigb0yFmUBWIIR0cZWJnC5/aH8O/iJ4K+LHgrw58Rfh14jtvFfgzxXbJq" +
                        "mha7pb7opomyCCCAyOjAq6MAyMCrAMCK2OZo7SgD+Pf/gv9+yrcfD/45eF/2oPDWllfCHxrt4/D3ja5t" +
                        "k/dW3ijSbZYkZ9qgL9rs40K9Szwysetf6YfQ48Qo4zKamVVZfvcO+aHnTk7/wDksm79lKKP8xvpm+Hcs" +
                        "Fm9PNaUf3WJXLPyqRVv/JopW7uMmfnB/wAE4P2urj9jL9qTwX8Tr+aZvh5rYbwN8WNOtNzGXQdQkTzJl" +
                        "QfektZUjuEA5bZsyAxr9w8cPDaPFHD9XCxS9vH36bf88dl6SV4vte/Q/DPAzxLlwtxDSxUm/YS9yol/J" +
                        "Ld27xdpLva3U/0GNK1XTNd0vTdb0XUIdW0bWbeHVdJ1XTZUmt7m2uIxNFLFJGSro6MGVgcEHIr/ABlxG" +
                        "HqUakqc4uMotpp6NNaNNdGmf7TYfEU61ONSnJSjJJprVNPVNPqmtj+W7/grn/wVz/tT/hJ/2Vf2VfE//" +
                        "Er/AH2gfGD4waBN/wAfXWKbStKmiP8Aquq3Fwp+flEOzcz/AOgP0bvo3ez9nm2bU/e0dKk1t2nNd+sYv" +
                        "bd62S/z2+kt9Jb2ntMoyip7usatWL37wg+3SUlvstLt/wA1fg/wf4p+IHinQPBPgnQLrxT4u8U3UOieH" +
                        "vD2iQvPdXl1O4RI40QEkkn8Op4r+6czzPD4LDzr15qFOCblJuySW7bP4PyzLMRjcRChQg51ZtKMUrtt7" +
                        "JI/t2/4Jef8EvPC37Fnha3+JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgff8AuJ+7yX/yk" +
                        "8fvH7EcU4h4bDNwwEHotnUa+1Ly/lj03eu3+sv0ffo+4fhTDrFYpKePmtXuqaf2Ief80uuy03/X6v5qP" +
                        "6aCgD8Z/wDgvF/yj+8Q/wDY0+Gf/SmSv6f+iH/yWUP+vVT8kfy39ML/AJIuf/X2n+bPw/8A+Df7/k+vV" +
                        "v8AsQvEH/px0uv6w+mT/wAkjH/r/D/0mZ/JX0MP+Svl/wBeJ/8ApUD5c/4K4/8AKRf9p7/sK6X/AOo5p" +
                        "1ff/Ru/5IjAf4Zf+nJn599JX/kuMw/xR/8ATcD+t7/gkd/yjo/Zh/7BWqf+pHqNf5w/SR/5LfH/AOKP/" +
                        "puB/pP9Gr/kh8v/AMMv/Tkz9Ha/Dz9zP57f+Di3/k2D4H/9j6v/AKj2o1/Z/wBCX/kf4v8A68f+3wP4q" +
                        "+nB/wAk/hP+v/8A7ZM+NP8Ag3H/AOS1/tH/APYraV/6djX6h9N7/kVYH/r7L/0k/LPoNf8AI2x3/XqP/" +
                        "pR+aX/BVr4c658Nf2/v2kbDWraSKPxVrjfEbQ7qVSqXNjr8KamjxkgBlRpXiJHRkYdQa/dfo8Z3Rx3Bu" +
                        "BlB/BDka7OD5dfWyfo0z8G+kXkdbAcZ4+NRfHP2ifdTXNp6NteqaP6Nf+CXP/BUb9mjxj+z98HPgJ8Tf" +
                        "H9j8Jvi58LdD0z4Zxaf45lTT9M1e00a2j02zns7+bbbl3hjjDQyOsm/dtVl+av4i+kB9H/PsLnOKzDC0" +
                        "ZV8NWnKpeHvSi5NykpRXvWTbs0mrWu09D+5Po+fSDyHFZLhcvxVaNDE0IRp2m+WMlFKMXGT927SV02ne" +
                        "9k1qc1/wXs/Zj1H4zfs7+Bv2ivAlsdc1L4DSXd14jTSgJvtHhTW0gaa7Bi3F1tZbeKTI4EbyOTgV3/Q/" +
                        "wCPYZXndbLcQ+WOJty30tUhe0fLmTa85KK6nB9MbgCea5JRzLDrmlhW3K2t6c7Xl58rSflFyfQ/n3/4J" +
                        "qft46t+wj8cJ/FN/p03iP4UfECG38N/Fbwxp5QXLW0Mxkt76134BuLQyOURiFdXdCVLB1/svx18IafF+" +
                        "UqlGShiaTcqcntdrWL/ALsrK73TSetrP+LvAbxhqcH5u60oueGqpRqRW9k9JL+9G7stmm1pe6/tg+FP7" +
                        "a37J3xq8NWfir4d/tA+FtWsLuNbmXT7/WLPTtTtN/8ADdWOoPDcwNntJGue2RzX+VvEXhXxHlVd0sTgq" +
                        "sWuqi5RfpKKcX8mz/VzhzxX4bzXDqthsbSlFrZyUZL/ABRk1JfNI9Q/4Xj8FP8AosHhb/woNJ/+P14H+" +
                        "qea/wDQNV/8Al/kfQf63ZT/ANBVL/wOP+Z6Hpeq6Xrmn2mraLqVvrGlX6efY6npc0dxbzITjdHJEWVhx" +
                        "1BrxcRh6lKbhOLjJbpqzXqme3h8TTrQU6clKL2ad0/Ro+DP+CqWhXviL/gnv+1Lp9gpee38OrrsgUFv3" +
                        "Ol6la6nMcD0jt2Oe1fr/wBHvGQocaZfKWzqW+couK/Fn479IjBzr8FZjGO6p3+UZRk/wTP43v8AgmD8U" +
                        "PDPwc/bz/Zw8feMtdh8M+GbLV7zQNW17UiiW1qmu6Le6CrzPIQsce68AeRiAi5YkAZr/Tnx8yCvmfB+O" +
                        "w9GDnUcFJJbvklGend+7our0P8ALz6P/EGHyvjHA4ivNQpqbi5PZc8JQ1fRe9q+i16H9gX/AAVslin/A" +
                        "OCcf7TU8EqzQTaTpMsM0TBkdG8RacQykcEEdDX+aX0cItccYBPfml/6RM/02+knJPgbHtapwj/6cgfyn" +
                        "f8ABF3/AJSW/s2f9zj/AOoDrlf6G/Sj/wCSEx3/AHC/9PUz/Or6K/8AyXuA/wC4v/pmofvl/wAFav8Ag" +
                        "qh8V/2JviP8Pvgz8FvCGi33ibxJoMfxJ8ReKvHkF1ewRWV1qV5plvb2tvaXNriTfYStI7sw2lQFzkj+P" +
                        "fo5fR7y7ivA1sbjqs1ThP2cYwaTuoxk2209LSVkra3u+h/ZP0kvpEZlwnjqGBwNKDqTh7SUpptWcpRSS" +
                        "TjreLu3fS1l1PQ/2F/+CzP7P/7SPhnS/D3xy8R6P8BPjjEfsWpaTr1y1j4c1V8gLNp19qDlI/MJA+zzy" +
                        "+YG4UyD5q8Txb+i/nOR15VMBCeKwm6aV5x8pxiru380Va2rUdj2/CH6UuS57h408fUhhcXs1J2hLzhKT" +
                        "sr/AMsne+ictz9Dvi/8DP2V/wBoXwwdY+Mvw98IfErw4sWbfxf4it9Pma3ibEe6DU1KyQg5A3Ryr25r8" +
                        "W4a4t4hyXEcmCr1aM7/AAxcld+cNn80z9t4m4R4dzvD8+OoUq0LfFJRdl5T3XyaP48f+CpXwE/4J3/BH" +
                        "W9Es/2Pfi1ceJPHl3etF4y+GuhalH4m8OaTp4hkO9NWLPIlwsoVDbtNO2CSxjKgP/pl9H7jDjXNqU5Zz" +
                        "hlCil7tRx9nOUrr7GzjbXmUYra3NfT/ADD+kLwbwRlNWEclxLnWcvfpqXtKcY2e09WpXsuVyk978ttfp" +
                        "b/g3Su/FCftQ/G6xtGn/wCEKufAL3fiBYwfsx1SHxDpqaeZD/f8qW72e26vhPptU8O+H8JJ29qq9o9+V" +
                        "wnzW8rqF/kfe/QfqYhcQYuMb+ydC8u3Mpw5b+dnO3zPgv8A4K4/8pF/2nv+wrpf/qOadX6/9G7/AJIjA" +
                        "f4Zf+nJn479JX/kuMw/xR/9NwP6lP2VvjVbfs5/8EgPhh8cbrRX8Rr8M/h5J4ng0CGUQfbLiKeZYIWlI" +
                        "bYjyMod9pKrkgEjB/z+8QuFpZ34l4jAKfJ7bEcvNvZNK7t1sr2XV9Uf6E+HfFccj8MsPj3Dn9jh+bl2u" +
                        "03ZX6Ju13rZdGflb+zP/wAHCXj+4+KUenftXeBNCtPhPrztB/wkXwp0/UotQ0B3PySvBdXt2bu3XpIqg" +
                        "SgZZd5Hlt/QfHn0MMHHL+bKK03iY/ZqSjyz8rqMeWXZv3ejtuv544B+mrjZZjy5vRgsNL7VOMuaHZtOU" +
                        "uaPdL3uqvs/6Qfh/wDGn9nH9pzwoW+H/wAQfC3xk8L61FtvdGsrqw1LcjLuMd1YzbpI2A5aOaMMO4r+H" +
                        "s54WzzIcR/tFGrh6kXo2nH5xktH6p2P7oyXirIs/wAN/s1eliKclqk1L5Si9V6NJn5N/t5fsOf8Eh9B8" +
                        "N+IPFHxY1PRP2YvFccUt3a3Pwj1K30/VJ5VBIjt/DkIuIbjLfeWG0DY/jUcj+i/CDxZ8Sa1eFLCRnjKd" +
                        "0v3kXKK83VdnH1c7eT2P5v8YvCPwzo0J1cZKGCqWbXspKMn5KkrqXooX81ufxsXTW1lrdy3hu+uZ7O0u" +
                        "nbQdTniFpePHHMfIlaOGWURyEAMVWRtp4DHGa/08pqUqS9qkm1qt1tqrtK6+Sv2P8uqjjCq/ZNtJ+69n" +
                        "vo7Juz9G7dz/TR+HUniCX4feBJfFiyJ4pl0bS5PEqXi7ZhqDWURuBIOzeZuyPWv8HM7VFY2sqNvZ88uW" +
                        "23Ld2t8j/fHI5VngqLrX9pyR5r781le/wAzsq8w9QKACgD5j/aw/ZP+Fv7X/wALb/4bfEmw8m5h8y+8G" +
                        "eM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/EZ+1B+y/8AFL9kz4pap8Lvijpfk3MO698N+JLJX" +
                        "Ona1pxcrHd2kjAZU4wyn5kbKsARWLVjpjK59Mf8E8/+ChnjX9i7xqNI1c3Piv4D+K7lJPG/giN90tnK2" +
                        "IzqOnCQhUuEUDemQsygKxBCOjjKxM4XP7Q/h38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdLfdFNE2QQ" +
                        "QQGR0YFXRgGRgVYBgRWxzNHlX7V37N/g39rL4C/ED4F+Nv9GsPF9rnR9cjQPNpWrWzCeyvYhlSTDMqll" +
                        "BG9NyE4Y19t4d8cYrhzOKOPoaum9V0lF6Si/Vdejs90fEeI3AuF4kyatl9fRVFo+sZLWMl6Pp1V1sz/A" +
                        "Dv/AI0fB/x38Avil42+D3xL0d9D8a+Ar6TRNZsnB2PtAeKeFiBvhnjZZYnHDIysODX+1PC3EuDzjL6WN" +
                        "wsualVjdP8ANPs07pro00f4k8VcMYzJsxq4LFR5atKVmvya7pqzT6ppn2L4d/4KeftP+Ff2Pp/2OtB8S" +
                        "/2f4WkmlsLbx3DJMNdtvDc8ZEmiwTA/Jbs5Pzj5whMQITivzLG+AmQYjiZZ1Up3qWvyacjmtqjXWVum1" +
                        "/eep+n4Hx/4gw3DDyWnUtTu1z686pvemn0jfrvb3VofB/g/wf4p+IHinQPBPgnQLrxT4u8U3UOieHvD2" +
                        "iQvPdXl1O4RI40QEkkn8Op4r9ezPM8PgsPOvXmoU4JuUm7JJbts/HssyzEY3EQoUIOdWbSjFK7beySP7" +
                        "dv+CXn/AAS88LfsWeFrf4kfEi3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/7ifu8l/8pPH7x" +
                        "+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/rL9H36PuH4Uw6xWKSnj5rV7qmn9iHn/ADS67LTf9fq/mo/po" +
                        "KACgD8wf+CwHwQ+Jfx8/Yf8d+D/AITeGLjxn4v0fUtH8Zx+FdHQy397a6bcl7hLWJfmmmVHLrEuWfBVA" +
                        "zEKf336NPFeAyfiyjWxlRU6UoyhzPZOS0u+ivpd6Ld2V2fz/wDSb4Sx+c8JVqODpupVjKM+Vayai9eVd" +
                        "XbWy1drK7sj8bP+CD37Kf7QHgv9pnxr8Y/iB8Ktc+HfgPQ/CmoeD49U8d6ZeaS97qepX9jLHDbRX8cTy" +
                        "hY7eR5HVSq4AJBYV/Tv0vPEPJsVkNLBYfEQq1pVYytCSlaMVJNtptLVpJPV622Z/Lv0PfDrOsJn9XG4n" +
                        "DTpUY0pRvOLjeUpRaSUkm9E22tFpfdHz1/wV6/Yy/aTuv26/id498HfBvxJ8Q/BfxdbSfEHg/xB4D0XU" +
                        "dXheSPR7PTri2mOnwyiKaO4gcBGIJQqw68fafRr8UMijwjh8PWxVOlVoc0ZRnOMX8UpJrmaummtV1uuh" +
                        "8T9Jjwsz6XF+IxFDC1KtKvyyjKEJSXwxi0+VOzUk9HurPqf1E/8E8/hF4y+BH7Fv7Pfws+IViNL8a+Gt" +
                        "DM/iPSMhnsrnUr641U20hUkeZCLkRyYJG5Tgkc1/APjTxLhc34pxuLwz5qU5+6+6ilG68na68mf6C+Cf" +
                        "DOKyfhXBYTErlqwh7y7OTcrPzV7PzR9m1+Xn6mfin/wXS/Z/wDiz8dv2VfB0vwj8G3vj7U/hv4rt/F/i" +
                        "Lw34ZglvNTbTZNLvNPea3toFaSby5J03qgLBSWxtViP6n+iTxlluUcQ1VjKqpRrUnGMpO0ebmjKzb0V0" +
                        "nZvS+m7R/Kf0vODMyzjh2k8HSdWVGqpSjFXly8so3SWrs2rpa212TPhL/g38+EHxa+Gvxh/aCvviL8Lv" +
                        "EXgGy1Pw1plpp15410TU9KiuJU1QuyRvfQxB2A5IBJxX679MniXLcdlmCjhsRTqtVJNqE4yt7vWzdj8f" +
                        "+hhwxmWAzTGyxOHqUlKnFJzhKKb5ul0rn68/wDBQv8A4Ju/C79vXwnps+paifAXxj8G28tn4E+JllALg" +
                        "CB3842N/BuQz2rOSygMGiYlkOGdH/mzwW8csw4PxMlGPtcLUd5027a7c0X0lbfS0krPZNf0x42eBWX8Y" +
                        "4aLlL2WKpq0KiV9N+WS6xvtreLd1u0/5Fv2hf8Aglj+23+zprc9jrnwX1L4ieHjJ5Gm+Ofg7bXXiPTLl" +
                        "ScB2WxiNzb5PGLmGM56ZyM/6R8F/SD4UzukpU8VGlO2sKrUJL73yy/7dkz/ADT42+jxxZkdVxqYSVaF9" +
                        "J0k6kX9y5o/9vRR/Ux/wRn+Enxt+HH7D0Pgv9ozw/f6U+t69rOo+CvAvj2JhdWHhS9srOFLWezu13wpJ" +
                        "cpdSiGRQdsmSAGxX+ff0oOJMqx3Fjr5bOMuWEVOcNnUTk+ZSWjajyrmXVeR/oX9FrhrNsDwkqGZwlHmq" +
                        "ScIT3VNqK5XF6pOXO+V9HtqfmL+3Z/wQX8Ux6/rXxK/Yokt9X0LVJZdSvvgX4hvIrO6sJJG3lNJvLxkh" +
                        "kg5O2K4kRkAwHkzgfvfhH9L/DujDC55eM42SrRV0/8AHFap+cU0+y6/gHi/9DvEKtPFZFaUJNt0ZNJr/" +
                        "BJ6NeUmmu76fhX4k/Yu/a98I6pPo3iH9mDx9p9/bkqVHhLXJopADt3RTQWzxyJkcMjEH1r+t8D4pcNYm" +
                        "mp08woNP/p5BP5pu69Grn8h47wr4mw1RwqZfXTX/TqbXyaVmvNOxgf8MrftP/8ARuHj3/wj/EP/AMiV2" +
                        "f8AEQsg/wCg6h/4Nh/8kcf/ABDviD/oAr/+Cp//ACJ/VL/wQL+Df7Rvwm+EXxvm+MvhnWvA3gPxVq2j3" +
                        "Xwt8H+OLe50+5S6tre8TVbyOzvEjljiuBJaqHIAcxkjoSf89/picT5HmOZYRYKpCpWhGXtJQakrNx5Iu" +
                        "Sum1abt0vqf6IfQ14XzzLcsxbx1OdKjOcXTjNOLulLnkouzSleCv15dD93vEvhzQ/GPhzxB4R8T6ZHrX" +
                        "hrxVZXfhzxDo94CYbuxvoGtZ4XAIO2SN2U89DX8h4DHVcLXhWpS5akGpRa3TTumvRn9g4/A0cVQnRqxU" +
                        "qc4uMk9mmrNP1Wh/C3+29/wSb/aQ/Zf+JGpR+APAOtfGX4M67dzyeAPGXgbT7nV7yC2Zi8dpqlvp8TyQ" +
                        "XMSYUyFBFL95Dncif62+FH0i8jz/AxeIrQw+KilzxnJRTfWUHJ2cX2vzR2fRv8AyI8Wfo4Z7w/j5LDUZ" +
                        "4jCyb5Jwi5NLpGairqSXW3LLdPdL9uvg7+zB+1V4j/4IlePPgH430O/k+L3iGxvtR+G3w78Vs8Oq2Wi2" +
                        "msWupWemSLdkGKV1tZDBC5GwSJGdmCF/lLibj7h6h4rUcwoTj9WhJKpOOsXNxcZTVt0uZczW9m1fd/1l" +
                        "wv4f8RV/Cetl1eEvrM4t04S0koKUZRg77N8r5U9rpO2y/Mr/gjV+x5+0roX7dvw++J/jL4MeI/h/wCCf" +
                        "hFb+IrzxXrnj7R7/RovO1Hw5qGgwW0B1GKHzZjLeKxRMlVUk4GK/efpPeJmRVuEa2Fo4qnVq13BRUJKT" +
                        "tGcZtvlbsrR3e7aSPwL6Lnhjn1HjChi6+FqUqVBTcnOMoK8oSgkuZK7vLZbJNs/oq/4KC/8E6vhd+3p4" +
                        "I0621q+Pgf4seDo5k+H/wATbCATvAkvzvZ3sO5PPtHfDbdwZG+ZGGXV/wCJ/BnxszDg/FycF7TDVLc9N" +
                        "u1/70X0kl8mtGtmv7f8afA/L+McJFVH7LE078lRK9r/AGZLrFvXunqnun/IR+0P/wAEr/22/wBnLU9Qj" +
                        "174M6j8QPC1mWa38f8AwhguPEOlzQjP711s4vtNuvHP2mGP8iCf9KOCvpB8KZ5Ti6eKjSqP7FVqEk+2r" +
                        "5Zf9uyZ/mdxt9HjizI6klUwsqtNfbpJzi130XNH/t6KPh//AIV38QPtX2H/AIQbWPtvmfZPsf8AZl75v" +
                        "m7tmzZ5ed2eMYzmv1j+2sHy83toW3vzL/M/JP7ExvNy+xnfa3K73+4+0v2ff+CXv7bP7RupadH4X+Ceq" +
                        "eDPDN8ymXx98Vre48PaRFC3/LZWvo1nuE7f6NFKc9uDj8t4z8fuFMkhJ1cXGpUX2KbU5X7aO0X/AInE/" +
                        "VeC/o+8WZ5UiqWElTpv7dROEbd9VeS/wqR/ZJ/wT/8A2Dvh/wDsG/CW68F+HdRPi3x54umh1r4m/EO5t" +
                        "0t5NSuoYzHDDDGCxjtLcO3lRszHLOxOWIH+YnjJ4vY3i/MlXqR9nRppqnC9+VPdt9ZS0u7LZLof6ieDH" +
                        "g9guDstdClL2lao06k7W5mtkl0jHWyu92+p/Ml/wVt/Y0/ae1L9u/4p+NvCnwS8SePvCPxbn0rWvBHiH" +
                        "wDo2oazbXGNJs9OkgkbT4pRFOk0LKY5MEjDDKsDX95/Rw8T8gp8IYehWxdOlUoKSnGcoxa96Uk1zNXTT" +
                        "3Xmt0fwL9JPwt4gqcYYivRwlSrSruLhKEZST92MWnyp2aaej8nsz+pH9kH4CXngv9hv4Nfs9fGzw1a39" +
                        "zF4Ni8HfEnwbqPl3VsV1GCQ3djNsLI+1ZzE+0lSQcEjBr/P7xK4wjiuLcVmOBqNL2zlTktH7rXLJdVtd" +
                        "de5/oR4ZcGywvCOFy3HU037FRqQeq95Pmi+j3s7adj+c/8AbU/4IMfF7wHret+N/wBkSVfip8O7qR76D" +
                        "4Y6rdRW3ibSUdixhglu2SG+hjH3WMiTYwuyRgXP9t+Fn0vstxlKFDOP3Fdae0SvTl5tK7g310cet4rRf" +
                        "w94rfQ7zPB1p18m/f0G7+zbSqR8k3ZTS6O6l0tJ6v8AD7xn8BPjl8OtTfRfH3wc8U+C9WjJQ6f4o0DVb" +
                        "GU47qLmBNw7gjII5Ff1hlfGGU46nz4fFUqke8Zxf5M/krNeDs3wNTkxGFq05dpQkvzRqfD/APZp/aG+K" +
                        "2ow6V8N/gf4r8a3sz+Tjw9oGp3EcZyATLKkPlxqMjLOwA7mufOeOsly6DnicXSpr+9OK+5Xu/kdGS8B5" +
                        "3mM1DC4SrUf92En97tZfM/oq/4Jvf8ABEPxf4O8d+FPjv8AthRWenyeEbi38R+DvgfYTW+ovJfwMJYZt" +
                        "YnhMlv5cTgOtvEz7zjzGCho3/ifxx+ldhsVhKmX5Nd+0TjKq046PRqmnZ3a05mlbom7Nf2/4F/RMxOFx" +
                        "lPMM6svZtSjRTUveWqdRq8bJ68qbv1aV0/6gK/gQ/0CCgAoAKACgD5j/aw/ZP8Ahb+1/wDC2/8Aht8Sb" +
                        "DybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Rn7UH7L/AMUv2TPilqnwu+KOl+Tc";
                    resourceString += "w7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrn1N/wAE5f8AgoX4n/Yw8cSaF4lN14m+AvjKZ" +
                        "T4w8KQuXk0y5bag1OwRuBKqgCWMYEqDB+ZUKuMrEzhc/tA8EeN/CXxJ8JeH/HngPxBbeKfB/im2j1fQN" +
                        "f0iQSW9zbyDhlPBBBBVlYBlYFWAIIrY5mj8jP8AgqV/wTt8M/t3/DGx+M/wRutPvPjv4J0+VvCmsaTPB" +
                        "LZ+LtJgMkv9lvcxP5XmByxtZidquSjkKxZP6a+jp46z4Xxn1XFNvA1Xr/07k9OdLt/Mluldaqz/AJh+k" +
                        "f4DQ4pwf1rCpLHUY6f9PIrXkb6P+RvRN2dk7r+MjT/hD8U9U+JMPwcsfh3rM3xWnvh4aX4dNp10msrf5" +
                        "2mB7SRFkRx1YMowOTgc1/qTW4ly+ngXjZV4fV1Hm5+Zctu/Ns/kf5V0eGcxqY9YKNCf1ly5eTlfPzduX" +
                        "dP12P7Vf+CXn/BLzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/uJ+7yX/A" +
                        "MsfH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/qx9H36PuH4Uw6xWKSnj5rV7qmn9iHn/NLrstN/wBfq" +
                        "/mo/poKACgAoA8J/aZ+O+k/syfA7x98dtf8Maj4x0L4dwW2qazoHhP7OdQktp76CyeSIXckUZEIm819z" +
                        "j5FbGTgH67gPhCpn2bUcBTqRpzqtpSlfluk3Z2TetrLTdo+P4+4wpZBlFbMKlOVSFJJuMbc1m0rq7S0v" +
                        "d67Jmj4R+Ofgfxd8ANA/aQgnk074d654Tg+MUkt6E8+00qTShq8glVGKiSKPIcA4DAjNYZlwli8NnM8s" +
                        "avXjVdLTZy5uVW8m9vI6Ms4uwmJyaGZptUJUlV13UeXmd/NLfzPFv2IP23fht+3Z8NPEvxK+G+gap4Vt" +
                        "fCmty+CNW0DxkLMXqyx2VtfJMBYzzp5Ui3O1SWB3Kwxxz9V4r+FOO4Rx9PC4mcZucOdON7Wu1bVJ3Vtf" +
                        "Jo+U8JfFnAcYYCpisLCUFCbg4zte9k76Nqzvp5pmz8GP2vvBPx0+P8A+0V8BPBfhnVDdfs03Fhonjfxz" +
                        "efYxpM+o33mKLW28qZ5S6Pbzq+9FwYz6iuXijw1xeUZNgswr1I2xibhBX5lFW1elrNOLVm9zq4W8TcJm" +
                        "+dY7LqFOV8G0pzduVyd9Fre6akndLZn1rX5wfpIUAFABQAUAFAHwj/wUR/bH1L9hv4BWfxo0rwHB8Rbq" +
                        "68Qad4JPh/UL+TTY1S+tru4MvmxwXByv2bG3bznrxX674KeGNPi3OHgZ1nSSpynzKPNs4q1rrv3Px/xu" +
                        "8UKnCOTLHQoqs3UjDlcuXdSd72fbsfd1fkR+wBQAUAfPX7VX7Rfhf8AZN+Avjz9oHxnod/4k8NeAP7L/" +
                        "tLRfDAtzfTf2rrNpokflfa5Io/lkvFZssPlBxzgV9p4e8E4jiPOKOXUJxhUq81nK9lyxlN3sm9o223Pi" +
                        "vETjjD8N5NWzGvCU6dLluo2u+acYK12lvJPfY+VviH/AMFGNW8G3Hg5/C37Enxo+MWg+NfDeg/EnTPF3" +
                        "wm8Iy6xpSw69p6aglq1zbuUM8KyBZVUkA9zX6FkvglTxSq+1zXB4edOpOm41KnLK8JON7PWztofnWd+O" +
                        "NTCul7LKcZiIVKcKilSpc0bTipWutLq9n5ng3w//wCCzOmfFnQn8U/Cv9hL45fEvwzHcSaVJ4j+H/hOP" +
                        "WbBbqFVeSE3GnTzRiRQ6ll3ZAIyORX1+c/RfqZdW9li83wVGpa/LOpyuz2dpJO2m58fkv0paeZUfa4TJ" +
                        "8bWp3tzQpc6ut1eLavqtD9m9PumvrCxvmtZLJryGK6ayvF2TQmRA+yRezLnBHrX8vVqfJNxveztdbP0P" +
                        "6lo1OeClZq6vZ7r1PjL/gn/APta6j+2t+ztpvxy1TwRD8Pru/1bVPDZ8O2F8+oxqunSrGJPOkhgJL7um" +
                        "3iv1Hxk8OIcK53LAQquqlGMuZrl+Lpa7/M/LfBjxJnxXkkcfOiqTc5R5U+b4et7Lf0Ptmvyo/VwoAKAC" +
                        "gAoAKACgAoAKACgAoAKACgAoAKACgD5j/aw/ZP+Fv7X/wALb/4bfEmw8m5h8y+8GeM7GNDqOhaiU2rcW" +
                        "7NjKnAEsRO2ReDghWVNXKjKx/EZ+1B+y/8AFL9kz4pap8Lvijpfk3MO698N+JLJXOna1pxcrHd2kjAZU" +
                        "4wyn5kbKsARWLVjpjK5d+G37YH7Q3wj+EHxA+BfgD4jXeg/Dn4kY/tzSYDmW33/AC3H2KY/PbfaU+Sfy" +
                        "yN68Gi4OKPtT/gmZ/wUL+Lf7NXijTPglbeCtQ+Nfw28falFDpPw70Bi+tafqV24jaTSRJlG8370lu5VG" +
                        "Ybg0ZLszjKxM4XP7HbOGC4NvrM2k/2fqtzbRwzC7W3N3DGf3vkSSQNIp2MTkK7LnJBPWun2suXlu7b26" +
                        "X7nF7KPNzWXNa1+tuxo1BoFABQAUAFAHmfxp+G2n/GP4P8AxS+EuqlF0/4l+HtY8C3M0wJEQ1XT5bISc" +
                        "AkFDIGBHIIBHNe9wtnk8szPD4yHxUakZ/8AgMk7fO1jwOKsihmmWYjBz+GtTlD/AMCi1f5XufzWeBf2j" +
                        "PEmm/8ABDPxX8Jg0kfxesvFN7+xFZ6JcELdvea3rQvXs2UnkjTLuaFcf3Mdia/unN+CKFTxap4z/mGdJ" +
                        "YtvpaELc3/gyKl8/Q/hDKOOK9PwiqYPX60qrwiXW853cf8AwXJx+Xkz6T/YusPD3/BPn9tH9s39nbVLo" +
                        "Wfw3svhd4U/aF0CZh5aTweD9AhstWnjL4y8ss87OTy3l7j0NfC+KVatxnwtleZQV67xNSjLydWbcE/JJ" +
                        "RS7Xsfd+FdGhwVxVmuWTdqCw1OvHzVKCU2vNtyb72ueG/s+ftCeLf2NP+CbHjL9rldNsr79of8Abw+J2" +
                        "q6n4JPid/LtYbzVbu6t4rm781kzb2/2K7ulZiFYyoGIVq+s4z4Lw3FHHVLJ+ZrBZZhoqfLu1FJtR/vS5" +
                        "oR01XK7K6PkeCuNcTwtwHVznli8dmeJk4c2ycm0nL+7HlnLXR8yu7M7f40/Gz9or9kP4b6L+0xon/BTj" +
                        "wz+1d4q8OXukyfGT9nqeTwidL1Wy1K9htJ49Gi0mZriIwPMo3RorbA0p2hTGfK4W4VyTiXHTyupkFTA0" +
                        "5qXsq/73mi4ptOo5Lld0no21e0dW1I9birizPOGcDDNKfEFPHVIOPtaH7rlkpNJqmovmVm1qkna8tEnF" +
                        "/0R+DvFOl+OfCHhXxrobmTRfGGm2PinR5JMbmtdQtUu4idpIyUkHQ1/FOZ5fUwmJqUKnx05OL9Yuz/FH" +
                        "9u5XmNPF4anXp/BUipL0krr8Gfg58N/GX7fn7XX7Uf7b/wH8C/tOv8AA/4RfA/xpf2J+IFr4f03Vtagg" +
                        "uZ7m103RtPWQWqrCotJZp5jIZRhF3ANz/XueZXwdw3w/lOYYjAfWcTiaKfJzyjBtJOdSW+vvJRVuXd20" +
                        "P48yLNOM+JuIc3y/D5h9Ww2GrNc6hGU0m2oU47ae63J35tlfU5f9nb4gf8ABST9or4jfHH9hvWf2m9O+" +
                        "HV/+y7qt1bfED9pvRNAs7/xTr9hczmDSbSC1d4IIg4hkmluARMF2IxLBi/ocbZNwNkmBwmfQwEqqxsVy" +
                        "YdzcacGlecm9W7XSUdY3u1pa3n8EZ1x3nmOxeQTzCNF4KT58QoKVSabtCKjolezblpK1k9b3+uf+Ccf7" +
                        "QH7QF78Zf2qv2Mf2mfG8PxV8e/s0XunXPhX4qw2kdndazoupK5X7VHbjYHRDA65LSfvGVmbZuP5t438G" +
                        "5NDK8uzvK6ToUcYpc1O91Gcf5W9dXzLovdTSV7H6V4GcaZ1PNMxyPNayr1sG48tS1nOEv5ktLpcr6v3m" +
                        "m3a58sftXeJ/j/+zv4f8e+O9W/4LE6JN+0J4FtrvxdpP7Pk+j+DdNsb+Gzja4Glf2XHPNN500a7IZJYi" +
                        "ZH4wCdy/oXh3gMmzutRw8OGZ/UqrUXW5qsmm9OfnslZPVpPReln+eeI2YZ1klGtiJ8UQ+u0k5Khy0oqS" +
                        "WvJyXbu1om1q9Ot1w//AAU9+O11+01/wR3+AXx01HTIdG1f4heJPDWpa9pmneZ9mi1G3s9YsbsQiYlhE" +
                        "Z4HKBiSFwCW6n1vAPhGOQ+JuMwEZOUaVOok3u4t03G9utmr+fRHkfSA4wln/hhgswlFRlVqU20tlJKop" +
                        "Wvra6dvLq9z7F0v9ob47ft5ftST+D/2U/iFdfC79jr9n6+k0r4yfHjw5badcXXjPXkCu2k6RJqMVynkq" +
                        "hX98icKxkJIaAP+Y4jgvKOEOH1Wzaiq2Z4qN6VGTklSh/PNRad7/Zb3XLpabX6hh+Ns44x4hdDKK7oZX" +
                        "hZWq1oqLdWf8lNyTVrfaS2fNreCfFfHT9qf4jfHX9sr4k/st+A/2rNE/Y0+DH7P1jYn4n/FHUJtCj8Q+" +
                        "Itf1KETrp+mtr0qLHFACRI8YDKyNuLB0Ferwj4e4HKOGKGa4jLp5hisVJ+zppT5IQi7c0+Rat9E9GmrW" +
                        "szyeL/ETHZxxTXynD5jDL8LhYr2lRuHPOclflhzvRLq1qmne90dd+w5+0/8TrD9rX4n/sT/ABM+P2lft" +
                        "YeHtM8NRfF74N/H3w3/AGSbuSwW5gs7nTNSOiySwvNG0+QzNv8AkJYlZEVPN8WeAcBPhzD55hcHLAzdT" +
                        "2VWjLmtezanDnSaTtstNVbVNv0/CPxAzCHEmIyLFY2GOhGn7WlWjy35bpOE+RtNq+710bbtJJeo/wDBa" +
                        "L/lGl+0n/3J3/qfaHXz/wBFz/ku8D/3F/8ATNQ+h+lR/wAkFj/+4X/p6mfZn7K3/JsH7OH/AGIXg/8A9" +
                        "R60r8w8Qv8Akf47/r/V/wDS5H6l4d/8k/gP+vFL/wBIiflz/wAG/wB/yYpq3/Y++IP/AE3aXX7/APTJ/" +
                        "wCSuj/14h/6VM/nv6GH/JIS/wCv8/8A0mB+4Ffygf1qfyuf8Esfgp+238dP2NWsvhF+1JF+y38L/C2t6" +
                        "3B4Pj8N+H7fV9W8R63I8dzPPfXVxNG1taRFkhRIcljvLKQFz/oR9IPirhTKOJ+bGZe8biJwhzc03GMIa" +
                        "pKKSfNJ6tt7aJPe3+d/0eOFOLM34X5cHmCwWHhOfLywUpVJ6NuTbXLFaJJb6tra/wCoX/BOH9pn4+/tQ" +
                        "fs7fHPwP8TvEFlpX7TXwL1vXfgpf/EK2sIJbSTUobRkstSmtYkigkaK43iSNFVXEYO0bzX4D44cB5PkG" +
                        "d4SvhYOWAxMIVVC7vyt+9BN3avG1m22r76H9BeBnH2c8QZHjMPipxjmGGnOk52VuZL3ZtKydpXukknbZ" +
                        "XPgH9qb47fHP9jvRLr4reGv+CtGg/tE/GPwPqNh/wAJ/wDs16tp3hKG11a2udQhtLi2t9P0ieeS0eHzN" +
                        "8iAJIIgzq6FRu/ZPD7hHKeJqqwlXhyeEwtSMuSupVG4tRbTcpJKSdrJ6rmsmnfT8Y8Q+L834YpPF0uJI" +
                        "YvFUpR56DjSSknJJpRi24tXu1o+W7TVtfp3/gox+2J+0R4HsP8Agnj4p/ZZ1MaZrH7SuposHgbVo7aaz" +
                        "1qXWbTR30yyvHmiEgjEt+A5jaNiCeRwR8D4I+GWSYuedUs2jzRwcfjV04KLqc8o2dr2jpe68mff+OPif" +
                        "neEhklXKZcssZL4HZqbkqfJGV1e15a2s/NHFftN6B/wUw/Yo+G4/a9b9suP9oSHwTcafqnxs+COteFtO" +
                        "0vQH068uorWVNOa1LSCKGSZVLqsMmzMmRgofV4DxnAnFWO/sb+y/qrqKSpVVUlKfMk2ue+l2lezclf3e" +
                        "zPK4+wXHvCmA/tn+1Vi1TcXVounGMOVtJ8ltbJu10ou3vdLHT/tv/tkftEWvjD/AIJn6/8Asf6+tvF+2" +
                        "JY63LZ+CPFkNs+k3UmqaboT6VPqDCB50WxbWGmmEbjIjwR1rz/CjwxySWGz6nnMLvAShecW+ZcsqnOo6" +
                        "2fPyWV097noeLXijnccVkFTJZ2WYRnaEkuV80afI5aXXJ7RylZraxxf7Tr/APBRr/gnl4X0X9q/UP2uW" +
                        "/aq+Hmj6lpdh8ePhZ4s8M6botnHaajdJZiXT2szMYIzNKsStGY2R2QssilkHq8BLgjjXETyiOW/Uq8oy" +
                        "dGpGpKbvFXtK9ruybad00mk4uzPK4/fHPBOHhnEsz+vUIyiq1OVOMFaTteNr2V2krWabTakro9l/a6/b" +
                        "b8XeKfjV8Af2Xf2f/jZof7OVh8XfCkHx7+In7R/xAGlN/ZHhe/ST7Fa6fFq0qW7Xlx5ZJDHI3IVYDew+" +
                        "X8NvCnDYfKsZmuY4SeLlQqujChDm96orczk4rm5Y3/B3T0R9T4l+LGJxGa4LKcuxcMJHEUlWnXny+7Td" +
                        "+VRUny80rfirNas8/8AhN+0p8Tf2dv21fgj+z1rv7Ymm/ttfAr9pW21PS9D8SCXQLrxD4T8R6dD5ypPL" +
                        "oMspeC4LRqvmkAh2KgeUxf2eI+BcBnfCuLzGnlksuxeDcW4++oVISdtFNKzjq9Oyu3zK3i8N8eY/JOK8" +
                        "JltTNI5lg8YpJS9xzpzir6uDd1LRa93ZLld+P8Ahl8RP2/P2tf2s/24f2dvAf7Ssfwa+EPwV8ZXEV98Q" +
                        "oNC03VPEOnWNxdXtnp2jaYkggRY5fscskk7N5i+WAG+Yq3p59knB3DnDmU5liMB9YxOIoq0OeUYSaUXO" +
                        "pPd3XMkor3XfbS68zIM84z4k4kzfLcPj/q+Gw1Z3nyRlOKbkoU4LRWfK25P3lZa62f0Z+wB8cf2l9D/A" +
                        "Gm/2lv2Fv2ovHa/GPxN8ErHTPHXgL4vLZW+nz6hol+tuwW5jgHzMy30DKWZmRhIjO4CkfEeMnCeRVchw" +
                        "GfZVR+r08TKUJ0ruSjNX2b/AMMl0TXK0lqfceDHF2fUc/x+QZtW+sVMNGM4VbKLlB23S3+KL6tPmTb0P" +
                        "2Dr+aD+nAoAKACgAoAKACgD5j/aw/ZP+Fv7X/wtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASx" +
                        "E7ZF4OCFZU1cqMrH8Vnx0/Y0+O/wG+O9v8As+6/4Pudf8Za/cpafDybw1BLcW/iW3uJfKgnsCBlgx4dT" +
                        "80bZD4INYtHSpJo/qW/4Jt/8E2/DX7IHhqD4g/EGC28S/tEeJbby9V1WPbPbeHLadfmsLBuQXIOJ5x9/" +
                        "wC6vyZL6RjYwnO5+rNWZhQAUAFABQAUAFAH8w+lfsnfF1P+CuurfDF/A2qj9l5fiZH+24fFg069XQxrE" +
                        "Ph+XVY0S4KfZy39oXQtzHnICnAxX974jxFy1+G0cV7aP9ofVvqnLzLn5XNRel+b4FzX8z+AcP4cZmvEu" +
                        "WF9jL+z/rP1vm5Xycyg5LX4fjly230PTf8Agtt8G/jXc/En4H/GD4AeCNX8aeIvHnhXxf8Asx/ES28Ja" +
                        "deX7ro2rxYtln+xxvsjY6ldHc+FDAdcnHg/RU4nyqOBxeDzGrCnClVpYiHNJL3ovW12rv3IaLWx730se" +
                        "Fs1lj8JjcuozqTq0quHnyxcvdktL2Tsvfnq9LpH0X/wUE/YS8YeK/2CPgV8Jfgd4btfHXi/9k+68LeI9" +
                        "F8DXaRvF4ltdC0qTSb238qbYkrziXz2ViDJtZRlnAPxPgz4u4bD8YYvGY+o6VLHKpFzW9NzkpRd1slbl" +
                        "TW109kfceNPg/isTwbg8HgKaq1cC6clB7VFCLjJWdrt35mnvZrdnzL4P+M//BMTxBa6LoWr/wDBLfxJp" +
                        "fxeujbafr/wl0r4Qpf39lfS/u5FVwsPmQpIrgOVVyqk+WDlR95mfC3H1GU6kOIKcsMrtVHibJrp3s2ra" +
                        "Xau/i6nwWV8VeH9eMKc+HqkcU7KVJYXmkn17XSd9bJtL4U9D+ijRtH0rw9pGlaBoWnQ6Poeh20Gj6NpO" +
                        "mxrDb2tpbRLBDDFGgCqiIoVVAwAMV/E+KxNSvVlUqScpybbb1bb1bb7tn9vYXC06FKNOnFRhFJJLRJLR" +
                        "JLslsflB/wTr8FeMvC/7Un/AAVC1jxL4S1Pw7pPi74lW2q+FNU12wurS31S1EurEzWklwiLPGN6/NGSO" +
                        "RzzX9FeNma4XEcP8PwpVIzlTw7Ukmm4u0NJJPR+TP5x8D8qxWH4h4gnVpShGpiE4txaUleesW1qvNHM/" +
                        "sLeBfG/h7/go1/wU48UeIPB2q6H4Z8W6l4dl8K+ItY0+7trHU0ia93taXE8axzBdwyUY4zXd4t5vhK/B" +
                        "GQUqdWMqlOM+aKkm4/D8STuvmcHhDk+LoccZ/VqUpRp1JQ5ZOLSl8Xwtqz+R5n8Nfh18dLX9vr/AIK1+" +
                        "I/AfhfVfDviDxp4Gt9O+CfjbU7G4tNNu/EI8PQRWTW15cpHBIY7kLu2vgYOcYr3s9zvKJcHcOUsRUjOF" +
                        "Os3VgmnJQ53zXirtXjfoeDkOR5vHjLiSrh6coTqUEqU2moufIuW0nZO0rddD8//AIFax8JPDH7E3xP/A" +
                        "Gbrf9hjxj42/wCCg3jDR/Gng/xxrOu+BTdapa6jrUeoW0eqza1qieZawW1tKCqLtYyoQAS5lP7Jxdhsy" +
                        "xHFWHzN5vSp5LTnSlBKtaLjHlbgqcdJOUlu7rlflyn4vwhistw/CeIytZRWqZ1UhVjNujeSlPmSm6ktY" +
                        "qMXsrPmW2vM/Sv2gfhF8WNV/wCCFn7Lnw90v4YeItS8faP4ltbnVvA9houpTaxaxpqPiIs01nHCZkUCR" +
                        "clkH3h6ivD4N4ly6n4t5hiZ4imqMqbtNziov3aW0r2ez69D3uNOGcyqeEOX4aGHqOtGorwUJOS96rvG1" +
                        "1uunU+pvGXwV8Zf8Es/2pfCXxq/Zj+HOt+Mf2OPjn9i8A/Hv4KfD+z1HW7zw5f2cBS31e0t4RPO4ChpQ" +
                        "SGyfNiZl82Ir+e5ZxVhfEHh+pgc0rwp5nhrzo1ZuMFNN6wk3ZLWy6fZkk+WV/0PNOFMV4ecQ0sdlVCdT" +
                        "K8TaFalBSm4SS0nFK7el31+1Ftc0beRfGz4S+Av2bP25fjb8dv2j/2Srr9qX9lL9qGDSvGHhr4j6L4Xi" +
                        "8TXng7WYrcLNDPbSqrQRSmRy2dpdBEV3ujqPpeFeI8ZnvCWEwGWZksFmOCcoyg6ns1VjfRprdqytvZ81" +
                        "7JpnzPFfDeDyHi7F5hmeWvG5djVGUaip+0dKSWqaeyd3fa65bXaaP0H/YX179ifx98QfFev/sv/ALIWp" +
                        "fBq/wDDukxRyfFnWPAA8K2Oo2+oTI0llaXbfNI48tHkQhcjBG4DI/GPFvB8VYPBU6ea5lHEKcv4are0c" +
                        "XFaSlHpu0nr2dj9r8IsZwpjcbUqZVlksO4R/iOj7NSUnrGMur0Ta07q50X/AAV78K+KPG3/AATu/aF8M" +
                        "eDPDd/4u8S6n/wif9m+HvDFncX99ceT450a4k8qC0SSR9kcbO2FOFBJ4Bri+jXmOHwnGuCq16kadNe0v" +
                        "KTUUr0aiV27JXbt6nb9JjLsRi+CMbSoU5VKkvZ2jFOTdq1NuyV27JN+h9c/szaff6T+zf8As+6VqtlNp" +
                        "mp6Z4I8KafqWm6hG8M9vPDoNrHJHJHIAyOjAhlIBBGDX5tx5WhUzzGzg04utUaa1TTm7NPqmfpXANGdP" +
                        "IsFCacZRo0009GmoRumujR+a/8AwQu8C+N/h5+xVqmg+P8AwdqvgfXX8b67qCaL4w0+70y7MEmn6aqSC" +
                        "G9jjfYxQgNjBwfSv3T6W2b4TG8VRqYerGpD2MFeMlJX5p6XTaufhH0Q8nxeC4UlTxFKVKftpu0ouLtyw" +
                        "1s0nY/Zav5gP6kPyO/4IleCvGXgH9hbQfD3jvwlqfgrX4/EviK7k0PxbYXWm3ixS3EZRzDeRxuFYDg4w" +
                        "a/pD6Vea4XGcXTqYepGpD2cFeLUls+qbR/NX0T8qxWC4QhTxFKVOftJu0ouLtddGkz4O+EHwj/aYg/Zc" +
                        "/4LFaF8NfBWv+GviZ488f6zqHw/huNO1CxvNZ0mTVpXvxpnmJG87XFgZo4TFnczKBkkV+v8S8SZC+IOG" +
                        "KmKqwnQpUIqfvRajLlXLz725Z8rd9knc/HuGeGs/XD/ABRTwtKpDEVa83D3ZJzjzPm5Nr80OZK27asfN" +
                        "vjjV/gh44/4JxT/ALN37Ln7C/i24/aJh0Tw9H8aPGreA2jv9GvtG1PT9W1ee51iaJrm5kuprXZDBGcmO" +
                        "QAKgQR19zlOGzbCccLM81zeksFzz9lD22klKMowSgnyxUU7uT6rd35j4TNsTlOL4GeWZTlFV45Qh7Wfs" +
                        "feg4SjKbdRrmk5NWjFdHskuU+i/+CiV/wCN/BHgH/gibqfhXwbP4j+JHhDUfC1/4c+H14Gs7m/1vT7Lw" +
                        "vJb6c4uApieWeNYjvA2k89K+J8FKOExeM4qjVqqFCpGopTWqUJOteStuknfTc+48bq2LwmD4TnRpOden" +
                        "Km4wejc4qjaDvs3JW12PW/2vf25fEX7bPwV139kH9l79m/4it8afjE1j4U8c2vxK8MzaJZeELAXsU94d" +
                        "RuJpHjjb935RdsIoYtu3BVPzfhr4S0OFc1hnOa47D/VcPeUPZ1FN1XZqPKkrve9t3a1rXa+l8TPF2vxZ" +
                        "lU8lynAYj63iLRn7Sm4Kkrpy523ZbWvsrt3vZPh/wDgoL4b8Xfsq+Pf+CL3hL4WeFZ/iz4r+AkfiDQdL" +
                        "8KaQFiu/Ef9gab4VgvI4AwOJ7qKGUoApO9hhScA+t4M47DcQ4Pimti6ioU8U4Nye0OeVZxb8otq/ktWt" +
                        "zyfGnAYnh3GcK0cJTdephedKK3qckaKkl5ySdvN6J7G/wDtn/tdeIf+Ci3wnh/Yu/ZV+APjtvF/xX1TQ" +
                        "4Piv4g+KXhu40PTfB+nabqdvrDfbp3aVUkWe2jLnO3YGCF3ZVPH4XeG1HgnMXnebYyh7KhGfs405qcqs" +
                        "pRcfdWl1Zu3W9m7JNnZ4p+JdfjjLVkeUYKv7WvKHtJVKbhGlGMlL3nrZ3Sv0tdK7aRH+2r+ydZ/s+/tI" +
                        "fs+ftK6v+zdL+1x+zL4W8BaZ+z58Y/Aun6PHrmr6YdCtpLaz1mOzkJB/dLEN7fKux0d08xGD8LPEWWdZ" +
                        "HjcshjlgcfOvKtSm5ckZc7TlTcvW+m7umk+VonxV8OI5LnuCzSeAePwEKEaFWCjzyjyJqNRR9La7KzTa" +
                        "5kz6M/ZN8Y/8E6fin8bfBtl+zv+w9qfhPxdpcd34ns/i3efDNND0vQJrGKQbZdRfmKd2Bjj2qQWyu7OA" +
                        "fiPEbLONsvyqrLMs2jOlK0XTVfnlNO20eqW7621sfc+G+acD5jm1KOW5RKnVjeSqvD8kYNX3n0bei6X0" +
                        "uWf+CcHgXxv4W/bV/4Kv694n8Har4c0Lxl430DUPCGta9p93Z2mqwR6h4nZ5LOa4jRJ0UTIS0ZIG5fUV" +
                        "Hjhm+ExHCvDtOlVjOdOjNSSkm4vlo6SSd09Hv2ZfgXk+Lw/FfEdSrSlCFStBxbi0pLmraxbVmtVtfdHS" +
                        "/B7wV4ysf8Agsb+1t45vfCWp2fgrWvhr4a0rRvGF1YXUel3d1Eui74Ybt0EMki+W25VYkYORwa4eJs1w" +
                        "s/DHLaEakXVjiKjcbrmSftNXG90tVrY7+GMqxUPFDMsRKlJUpYemlJxfK2vZ3Slazej0TPpP9hr9sDX/" +
                        "wBsbwR4+8Ya/wDAXW/gLN4K8Q3Hge20fxlNJcNfpBBHKZleWzsisiF9ksQVgjYG9s8fC+LPhpR4YxdGj" +
                        "TxkMUqlNTvFWtdtW+KWj3Turroj7zwj8Ta3FGErVqmDnhXTqOFpO97JO/wx1WzVnZ9Wfb1flB+shQAUA" +
                        "FABQAUAFAGReeH9B1HVdG13UNEtL7XPDv2j/hH9ZvLaGW7sPtkYhn+zzOpeLzUAV9hG4cHIoA16ACgAo" +
                        "AKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAPz1/bS/ZA8b/ALS/xe/Yl" +
                        "+InhTxNpWg6Z+zF49tPiv4tsfEJuxPqFnb6ppV80Np9mhlXzStg4HmFRkjnrj9o8LfEvCZDlma4atTlK" +
                        "WMoOnFxtaLcZq8rtae8trs/FPFXwyxefZnlOJo1Ixjgq6qSUr3klKDtGyevuvey2P0Kr8XP2s+Df2oP2" +
                        "UfGXxz/AGmP2IPjd4e8R6ZpGgfsvax4l8R+LtJ1k3QvNQi1qLS44ls/IikTchsW3eYyjkYzzX6/wD4iY" +
                        "XKchzbA1ISlPGwpxi1a0eRzvzXaevMrWTPx3xA8OcVm+f5Rj6dSMYYKdSUk73kpqFuWya05Xe7R95V+Q" +
                        "H7EFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAf/9kL";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.PointSeriesLabel pointSeriesLabel1 = new DevExpress.XtraCharts.PointSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.PointOptions pointOptions2 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView1 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.groupHeaderBand2 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.groupHeaderBand3 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.groupFooterBand2 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.groupFooterBand3 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.PageHeader = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.PageFooter = new DevExpress.XtraReports.UI.PageFooterBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.label39 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.label41 = new DevExpress.XtraReports.UI.XRLabel();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.line4 = new DevExpress.XtraReports.UI.XRLine();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.label24 = new DevExpress.XtraReports.UI.XRLabel();
            this.label25 = new DevExpress.XtraReports.UI.XRLabel();
            this.label26 = new DevExpress.XtraReports.UI.XRLabel();
            this.label27 = new DevExpress.XtraReports.UI.XRLabel();
            this.line2 = new DevExpress.XtraReports.UI.XRLine();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.label38 = new DevExpress.XtraReports.UI.XRLabel();
            this.label37 = new DevExpress.XtraReports.UI.XRLabel();
            this.label36 = new DevExpress.XtraReports.UI.XRLabel();
            this.label35 = new DevExpress.XtraReports.UI.XRLabel();
            this.label34 = new DevExpress.XtraReports.UI.XRLabel();
            this.label33 = new DevExpress.XtraReports.UI.XRLabel();
            this.label48 = new DevExpress.XtraReports.UI.XRLabel();
            this.dsDatos_3 = new XtraReportSerialization.dsDatos_3DataSet();
            this.sqlDataAdapter4 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand1 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection1 = new System.Data.SqlClient.SqlConnection();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label56 = new DevExpress.XtraReports.UI.XRLabel();
            this.label55 = new DevExpress.XtraReports.UI.XRLabel();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.label57 = new DevExpress.XtraReports.UI.XRLabel();
            this.line9 = new DevExpress.XtraReports.UI.XRLine();
            this.label51 = new DevExpress.XtraReports.UI.XRLabel();
            this.label50 = new DevExpress.XtraReports.UI.XRLabel();
            this.label52 = new DevExpress.XtraReports.UI.XRLabel();
            this.label54 = new DevExpress.XtraReports.UI.XRLabel();
            this.label53 = new DevExpress.XtraReports.UI.XRLabel();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.label28 = new DevExpress.XtraReports.UI.XRLabel();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.spCorteCxcEstadoCuentaSimpleTableAdapter = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand2 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection2 = new System.Data.SqlClient.SqlConnection();
            this.Datos = new XtraReportSerialization.DatosDataSet();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.EtiquetaLimiteCreditoMoneda = new DevExpress.XtraReports.UI.CalculatedField();
            this.Saldo = new DevExpress.XtraReports.UI.CalculatedField();
            this.PaginaActual = new DevExpress.XtraReports.UI.CalculatedField();
            this.TextoTotalMoneda = new DevExpress.XtraReports.UI.CalculatedField();
            this.TotalAplica = new DevExpress.XtraReports.UI.CalculatedField();
            this.dsDatos_2 = new XtraReportSerialization.dsDatos_2DataSet();
            this.oleDbDataAdapter1 = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand1 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection1 = new System.Data.OleDb.OleDbConnection();
            this.sqlDataAdapter3 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand3 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection3 = new System.Data.SqlClient.SqlConnection();
            this.TableTableAdapter = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand2 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection2 = new System.Data.OleDb.OleDbConnection();
            this.oleDbDataAdapter2 = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand3 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection3 = new System.Data.OleDb.OleDbConnection();
            this.sqlDataAdapter1 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand4 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection4 = new System.Data.SqlClient.SqlConnection();
            this.dsDatos_1 = new XtraReportSerialization.dsDatos_1DataSet();
            this.dsDatos = new XtraReportSerialization.dsDatosDataSet();
            this.Grafica = new XtraReportSerialization.GraficaDataSet();
            this.sqlDataAdapter2 = new System.Data.SqlClient.SqlDataAdapter();
            this.sqlCommand5 = new System.Data.SqlClient.SqlCommand();
            this.sqlConnection5 = new System.Data.SqlClient.SqlConnection();
            this.groupFooterBand1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.Datos)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.Grafica)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label5,
                        this.label29,
                        this.label49,
                        this.label39,
                        this.label40,
                        this.label41,
                        this.label42,
                        this.label43});
            this.Detail.HeightF = 19.00002F;
            this.Detail.Name = "Detail";
            this.Detail.Scripts.OnBeforePrint = "Detail_BeforePrint";
            this.Detail.StyleName = "DataField";
            // 
            // groupHeaderBand2
            // 
            this.groupHeaderBand2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label10,
                        this.label11,
                        this.label7,
                        this.label9,
                        this.chart1,
                        this.line4,
                        this.label13,
                        this.pictureBox1,
                        this.label12,
                        this.label3,
                        this.label4,
                        this.label2,
                        this.label1,
                        this.label16,
                        this.label17,
                        this.label18,
                        this.label19,
                        this.label20,
                        this.label21,
                        this.label22,
                        this.label23,
                        this.label24,
                        this.label25,
                        this.label26,
                        this.label27,
                        this.line2,
                        this.line1,
                        this.label38,
                        this.label37,
                        this.label36,
                        this.label35,
                        this.label34,
                        this.label33,
                        this.label48});
            this.groupHeaderBand2.Font = new System.Drawing.Font("Arial", 9.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.groupHeaderBand2.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Cuenta", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("DireccionNormalizada1", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("DireccionNormalizada2", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("DireccionNormalizada3", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("DireccionNormalizada4", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("DireccionNormalizada5", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("DireccionNormalizada6", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("DireccionNormalizada7", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("DireccionNormalizada8", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("ClienteCreditoDias", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("ClienteCondicionPago", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("ClienteLimiteCredito", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("ClienteLimiteCreditoMoneda", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.groupHeaderBand2.HeightF = 450F;
            this.groupHeaderBand2.Level = 2;
            this.groupHeaderBand2.Name = "groupHeaderBand2";
            this.groupHeaderBand2.PageBreak = DevExpress.XtraReports.UI.PageBreak.BeforeBand;
            this.groupHeaderBand2.Scripts.OnBeforePrint = "groupHeaderBand2_BeforePrint";
            this.groupHeaderBand2.StylePriority.UseFont = false;
            this.groupHeaderBand2.StylePriority.UseTextAlignment = false;
            this.groupHeaderBand2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // groupHeaderBand3
            // 
            this.groupHeaderBand3.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Aplica", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("AplicaID", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.groupHeaderBand3.HeightF = 0F;
            this.groupHeaderBand3.Name = "groupHeaderBand3";
            // 
            // groupFooterBand2
            // 
            this.groupFooterBand2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label8,
                        this.label31,
                        this.label6,
                        this.label46});
            this.groupFooterBand2.HeightF = 29.99999F;
            this.groupFooterBand2.KeepTogether = true;
            this.groupFooterBand2.Name = "groupFooterBand2";
            this.groupFooterBand2.Scripts.OnBeforePrint = "groupFooterBand2_BeforePrint";
            // 
            // groupFooterBand3
            // 
            this.groupFooterBand3.HeightF = 0F;
            this.groupFooterBand3.Level = 2;
            this.groupFooterBand3.Name = "groupFooterBand3";
            this.groupFooterBand3.PrintAtBottom = true;
            this.groupFooterBand3.Scripts.OnAfterPrint = "groupFooterBand3_AfterPrint";
            this.groupFooterBand3.Scripts.OnBeforePrint = "groupFooterBand3_BeforePrint";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 28F;
            this.topMarginBand1.Name = "topMarginBand1";
            this.topMarginBand1.Scripts.OnBeforePrint = "topMarginBand1_BeforePrint";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 30F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // PageHeader
            // 
            this.PageHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label56,
                        this.label55,
                        this.line8,
                        this.label57,
                        this.line9,
                        this.label51,
                        this.label50,
                        this.label52,
                        this.label54,
                        this.label53});
            this.PageHeader.HeightF = 37.29165F;
            this.PageHeader.Name = "PageHeader";
            this.PageHeader.Scripts.OnBeforePrint = "PageHeader_BeforePrint";
            // 
            // PageFooter
            // 
            this.PageFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label45,
                        this.line5,
                        this.pageInfo1});
            this.PageFooter.HeightF = 25F;
            this.PageFooter.Name = "PageFooter";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Moneda", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 0F;
            this.GroupHeader1.Level = 1;
            this.GroupHeader1.Name = "GroupHeader1";
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label14,
                        this.label28,
                        this.label30,
                        this.label15,
                        this.line6});
            this.GroupFooter1.HeightF = 30F;
            this.GroupFooter1.Level = 1;
            this.GroupFooter1.Name = "GroupFooter1";
            // 
            // label5
            // 
            this.label5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Saldo", "{0:C2}")});
            this.label5.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(669.8802F, 0F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(119.3901F, 18.00003F);
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseTextAlignment = false;
            this.label5.Text = "label5";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label29
            // 
            this.label29.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Abono", "{0:C2}")});
            this.label29.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(549.8801F, 3.051758E-05F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseTextAlignment = false;
            this.label29.Text = "label29";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label49
            // 
            this.label49.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Referencia")});
            this.label49.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(179.3751F, 0F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(90.38542F, 18.00003F);
            this.label49.StylePriority.UseFont = false;
            this.label49.StylePriority.UseTextAlignment = false;
            this.label49.Text = "label49";
            this.label49.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label39
            // 
            this.label39.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Mov")});
            this.label39.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label39.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.label39.Name = "label39";
            this.label39.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label39.SizeF = new System.Drawing.SizeF(100F, 18.00003F);
            this.label39.StylePriority.UseFont = false;
            this.label39.StylePriority.UseTextAlignment = false;
            this.label39.Text = "label39";
            this.label39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label40
            // 
            this.label40.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.MovID")});
            this.label40.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(100F, 0.9999593F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.SizeF = new System.Drawing.SizeF(79.27019F, 18.00003F);
            this.label40.StylePriority.UseFont = false;
            this.label40.StylePriority.UseTextAlignment = false;
            this.label40.Text = "label40";
            this.label40.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label41
            // 
            this.label41.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Fecha", "{0:dd/MM/yyyy}")});
            this.label41.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label41.LocationFloat = new DevExpress.Utils.PointFloat(269.8801F, 0F);
            this.label41.Name = "label41";
            this.label41.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label41.SizeF = new System.Drawing.SizeF(80F, 18.00003F);
            this.label41.StylePriority.UseFont = false;
            this.label41.StylePriority.UseTextAlignment = false;
            this.label41.Text = "label41";
            this.label41.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label42
            // 
            this.label42.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Vencimiento", "{0:dd/MM/yyyy}")});
            this.label42.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(349.8801F, 0F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(80F, 18.00003F);
            this.label42.StylePriority.UseFont = false;
            this.label42.StylePriority.UseTextAlignment = false;
            this.label42.Text = "label42";
            this.label42.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label43
            // 
            this.label43.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Cargo", "{0:C2}")});
            this.label43.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(429.8802F, 3.051758E-05F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label43.StylePriority.UseFont = false;
            this.label43.StylePriority.UseTextAlignment = false;
            this.label43.Text = "label43";
            this.label43.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label10
            // 
            this.label10.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(485.8401F, 122.4583F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(92F, 18F);
            this.label10.StylePriority.UseFont = false;
            this.label10.Text = "Hasta la Fecha";
            // 
            // label11
            // 
            this.label11.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(211.6734F, 122.4583F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(74.16666F, 17.99997F);
            this.label11.StylePriority.UseFont = false;
            this.label11.Text = "De la Fecha";
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.FechaHasta", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label7.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(577.8401F, 122.4583F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(211.4302F, 18F);
            this.label7.StylePriority.UseFont = false;
            this.label7.Text = "label7";
            // 
            // label9
            // 
            this.label9.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.FechaDesde", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label9.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(285.8401F, 122.4583F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label9.StylePriority.UseFont = false;
            this.label9.Text = "label9";
            // 
            // chart1
            // 
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart1.DataAdapter = this.sqlDataAdapter4;
            this.chart1.DataMember = "Table";
            this.chart1.DataSource = this.dsDatos_3;
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            this.chart1.Diagram = xYDiagram1;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(392.8854F, 156.25F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart1.SeriesDataMember = "Moneda";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "SaldoDescripcion";
            pointSeriesLabel1.Antialiasing = true;
            pointSeriesLabel1.Font = new System.Drawing.Font("Arial", 6F);
            pointSeriesLabel1.LineVisible = true;
            pointSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.JustifyAroundPoint;
            this.chart1.SeriesTemplate.Label = pointSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.LegendPointOptions = pointOptions1;
            pointOptions2.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions2;
            this.chart1.SeriesTemplate.SynchronizePointOptions = false;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "SaldoImporte";
            this.chart1.SeriesTemplate.View = lineSeriesView1;
            this.chart1.SizeF = new System.Drawing.SizeF(396.875F, 250.875F);
            this.chart1.Tag = "SELECT * FROM ESTADOCUENTAGRAFICA WHERE ESTACION = [EstacionTrabajo] AND MODULO =" +
                " \'CXC\'";
            // 
            // line4
            // 
            this.line4.BorderColor = System.Drawing.Color.Gray;
            this.line4.ForeColor = System.Drawing.Color.Gray;
            this.line4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 118.375F);
            this.line4.Name = "line4";
            this.line4.SizeF = new System.Drawing.SizeF(789.8804F, 4.083328F);
            this.line4.StylePriority.UseBorderColor = false;
            this.line4.StylePriority.UseForeColor = false;
            // 
            // label13
            // 
            this.label13.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.EmpresaNombre")});
            this.label13.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(450F, 100.375F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(339.2704F, 18F);
            this.label13.StyleName = "DataField";
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            this.label13.Text = "label13";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.LocationFloat = new DevExpress.Utils.PointFloat(10.28055F, 0F);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // label12
            // 
            this.label12.Font = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label12.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(0F, 97.95833F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(368.2083F, 18F);
            this.label12.StyleName = "Title";
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseForeColor = false;
            this.label12.StylePriority.UseTextAlignment = false;
            this.label12.Text = "Estado de Cuenta Simplificado - Clientes";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label3
            // 
            this.label3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(669.7605F, 422F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseTextAlignment = false;
            this.label3.Text = "Saldo";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label4
            // 
            this.label4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.EtiquetaLimiteCreditoMoneda")});
            this.label4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 389.125F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(229.7605F, 17.99997F);
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "label4";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label2
            // 
            this.label2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label2.ForeColor = System.Drawing.Color.Black;
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 371.125F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(229.7605F, 18F);
            this.label2.StyleName = "FieldCaption";
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseForeColor = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.Text = "Condición de pago";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label1
            // 
            this.label1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label1.ForeColor = System.Drawing.Color.Black;
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 353.125F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(229.7605F, 18F);
            this.label1.StyleName = "FieldCaption";
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseForeColor = false;
            this.label1.StylePriority.UseTextAlignment = false;
            this.label1.Text = "Días de crédito";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label16
            // 
            this.label16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Cuenta")});
            this.label16.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(0F, 156.25F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(381.734F, 18F);
            this.label16.StyleName = "DataField";
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseTextAlignment = false;
            this.label16.Text = "label16";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label17
            // 
            this.label17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.DireccionNormalizada1")});
            this.label17.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(0F, 174.25F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.SizeF = new System.Drawing.SizeF(381.734F, 18F);
            this.label17.StyleName = "DataField";
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseTextAlignment = false;
            this.label17.Text = "label17";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.DireccionNormalizada2")});
            this.label18.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(0F, 192.25F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(381.7339F, 18F);
            this.label18.StyleName = "DataField";
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            this.label18.Text = "label18";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.DireccionNormalizada3")});
            this.label19.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(0F, 210.25F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.SizeF = new System.Drawing.SizeF(381.734F, 18F);
            this.label19.StyleName = "DataField";
            this.label19.StylePriority.UseFont = false;
            this.label19.StylePriority.UseTextAlignment = false;
            this.label19.Text = "label19";
            this.label19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label20
            // 
            this.label20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.DireccionNormalizada4")});
            this.label20.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(0F, 228.25F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(381.734F, 18F);
            this.label20.StyleName = "DataField";
            this.label20.StylePriority.UseFont = false;
            this.label20.Text = "label20";
            // 
            // label21
            // 
            this.label21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.DireccionNormalizada5")});
            this.label21.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(0F, 246.25F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(381.734F, 18F);
            this.label21.StyleName = "DataField";
            this.label21.StylePriority.UseFont = false;
            this.label21.StylePriority.UseTextAlignment = false;
            this.label21.Text = "label21";
            this.label21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label22
            // 
            this.label22.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.DireccionNormalizada6")});
            this.label22.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(0F, 264.25F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.SizeF = new System.Drawing.SizeF(381.7339F, 18F);
            this.label22.StyleName = "DataField";
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            this.label22.Text = "label22";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label23
            // 
            this.label23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.DireccionNormalizada7")});
            this.label23.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(0F, 282.25F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(381.734F, 18F);
            this.label23.StyleName = "DataField";
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseTextAlignment = false;
            this.label23.Text = "label23";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label24
            // 
            this.label24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.DireccionNormalizada8")});
            this.label24.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label24.LocationFloat = new DevExpress.Utils.PointFloat(0F, 300.25F);
            this.label24.Name = "label24";
            this.label24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label24.SizeF = new System.Drawing.SizeF(381.734F, 18F);
            this.label24.StyleName = "DataField";
            this.label24.StylePriority.UseFont = false;
            this.label24.StylePriority.UseTextAlignment = false;
            this.label24.Text = "label24";
            this.label24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label25
            // 
            this.label25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.ClienteCreditoDias")});
            this.label25.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label25.LocationFloat = new DevExpress.Utils.PointFloat(229.8801F, 353.125F);
            this.label25.Name = "label25";
            this.label25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label25.SizeF = new System.Drawing.SizeF(151.8539F, 18F);
            this.label25.StyleName = "DataField";
            this.label25.StylePriority.UseFont = false;
            this.label25.StylePriority.UseTextAlignment = false;
            this.label25.Text = "label25";
            this.label25.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label26
            // 
            this.label26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.ClienteCondicionPago")});
            this.label26.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label26.LocationFloat = new DevExpress.Utils.PointFloat(229.8801F, 371.125F);
            this.label26.Name = "label26";
            this.label26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label26.SizeF = new System.Drawing.SizeF(151.8539F, 18F);
            this.label26.StyleName = "DataField";
            this.label26.StylePriority.UseFont = false;
            this.label26.StylePriority.UseTextAlignment = false;
            this.label26.Text = "label26";
            this.label26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label27
            // 
            this.label27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.ClienteLimiteCredito", "{0:C2}")});
            this.label27.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label27.LocationFloat = new DevExpress.Utils.PointFloat(229.9999F, 389.125F);
            this.label27.Name = "label27";
            this.label27.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label27.SizeF = new System.Drawing.SizeF(151.7341F, 18F);
            this.label27.StyleName = "DataField";
            this.label27.StylePriority.UseFont = false;
            this.label27.StylePriority.UseTextAlignment = false;
            this.label27.Text = "label27";
            this.label27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line2
            // 
            this.line2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 440F);
            this.line2.Name = "line2";
            this.line2.SizeF = new System.Drawing.SizeF(790.0001F, 2.083328F);
            // 
            // line1
            // 
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 420F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(790.0001F, 2F);
            // 
            // label38
            // 
            this.label38.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label38.LocationFloat = new DevExpress.Utils.PointFloat(549.7606F, 422F);
            this.label38.Name = "label38";
            this.label38.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label38.SizeF = new System.Drawing.SizeF(119.9998F, 18.00003F);
            this.label38.StylePriority.UseFont = false;
            this.label38.StylePriority.UseTextAlignment = false;
            this.label38.Text = "Abono";
            this.label38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label37
            // 
            this.label37.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label37.LocationFloat = new DevExpress.Utils.PointFloat(429.7605F, 422F);
            this.label37.Name = "label37";
            this.label37.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label37.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label37.StylePriority.UseFont = false;
            this.label37.StylePriority.UseTextAlignment = false;
            this.label37.Text = "Cargo";
            this.label37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label36
            // 
            this.label36.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label36.LocationFloat = new DevExpress.Utils.PointFloat(349.7605F, 422F);
            this.label36.Name = "label36";
            this.label36.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label36.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label36.StylePriority.UseFont = false;
            this.label36.StylePriority.UseTextAlignment = false;
            this.label36.Text = "Vencimiento";
            this.label36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label35
            // 
            this.label35.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label35.LocationFloat = new DevExpress.Utils.PointFloat(269.7605F, 422F);
            this.label35.Name = "label35";
            this.label35.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label35.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label35.StylePriority.UseFont = false;
            this.label35.StylePriority.UseTextAlignment = false;
            this.label35.Text = "Fecha";
            this.label35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label34
            // 
            this.label34.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label34.LocationFloat = new DevExpress.Utils.PointFloat(100F, 422F);
            this.label34.Name = "label34";
            this.label34.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label34.SizeF = new System.Drawing.SizeF(79.27019F, 18.00003F);
            this.label34.StylePriority.UseFont = false;
            this.label34.StylePriority.UseTextAlignment = false;
            this.label34.Text = "Consecutivo";
            this.label34.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label33
            // 
            this.label33.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label33.LocationFloat = new DevExpress.Utils.PointFloat(0F, 422F);
            this.label33.Name = "label33";
            this.label33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label33.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label33.StylePriority.UseFont = false;
            this.label33.StylePriority.UseTextAlignment = false;
            this.label33.Text = "Movimiento";
            this.label33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label48
            // 
            this.label48.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label48.LocationFloat = new DevExpress.Utils.PointFloat(179.3751F, 422F);
            this.label48.Name = "label48";
            this.label48.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label48.SizeF = new System.Drawing.SizeF(90.38539F, 18.00003F);
            this.label48.StylePriority.UseFont = false;
            this.label48.StylePriority.UseTextAlignment = false;
            this.label48.Text = "Referencia";
            this.label48.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // dsDatos_3
            // 
            this.dsDatos_3.DataSetName = "dsDatos_3DataSet";
            this.dsDatos_3.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // sqlDataAdapter4
            // 
            this.sqlDataAdapter4.SelectCommand = this.sqlCommand1;
            this.sqlDataAdapter4.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand1
            // 
            this.sqlCommand1.CommandText = "SELECT * FROM ESTADOCUENTAGRAFICA WHERE ESTACION = 1 AND MODULO = \'CXC\'";
            this.sqlCommand1.CommandTimeout = 0;
            this.sqlCommand1.Connection = this.sqlConnection1;
            // 
            // sqlConnection1
            // 
            this.sqlConnection1.ConnectionString = "Data Source=NOLIVERA;Initial Catalog=V4600;User ID=SA;";
            this.sqlConnection1.FireInfoMessageEventOnUserErrors = false;
            // 
            // label8
            // 
            this.label8.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(224)))), ((int)(((byte)(224)))), ((int)(((byte)(224)))));
            this.label8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Saldo", "{0:C2}")});
            this.label8.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label8.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(669.8802F, 0F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(119.6406F, 18.00003F);
            this.label8.StyleName = "FieldCaption";
            this.label8.StylePriority.UseBackColor = false;
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseForeColor = false;
            this.label8.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:C2}";
            summary1.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label8.Summary = summary1;
            this.label8.Text = "label8";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label31
            // 
            this.label31.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(224)))), ((int)(((byte)(224)))), ((int)(((byte)(224)))));
            this.label31.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Abono", "{0:C2}")});
            this.label31.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label31.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(549.9999F, 0F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(119.8803F, 18.00003F);
            this.label31.StyleName = "FieldCaption";
            this.label31.StylePriority.UseBackColor = false;
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseForeColor = false;
            this.label31.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:C2}";
            summary2.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label31.Summary = summary2;
            this.label31.Text = "label31";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label6
            // 
            this.label6.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(224)))), ((int)(((byte)(224)))), ((int)(((byte)(224)))));
            this.label6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.TotalAplica")});
            this.label6.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label6.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(429.2703F, 18.00003F);
            this.label6.StylePriority.UseBackColor = false;
            this.label6.StylePriority.UseFont = false;
            this.label6.StylePriority.UseForeColor = false;
            this.label6.StylePriority.UseTextAlignment = false;
            this.label6.Text = "label6";
            this.label6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label46
            // 
            this.label46.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(224)))), ((int)(((byte)(224)))), ((int)(((byte)(224)))));
            this.label46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Cargo", "{0:C2}")});
            this.label46.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label46.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(430F, 0F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.SizeF = new System.Drawing.SizeF(119.8803F, 18.00003F);
            this.label46.StyleName = "FieldCaption";
            this.label46.StylePriority.UseBackColor = false;
            this.label46.StylePriority.UseFont = false;
            this.label46.StylePriority.UseForeColor = false;
            this.label46.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:C2}";
            summary3.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label46.Summary = summary3;
            this.label46.Text = "label46";
            this.label46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label56
            // 
            this.label56.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label56.LocationFloat = new DevExpress.Utils.PointFloat(550F, 9.375F);
            this.label56.Name = "label56";
            this.label56.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label56.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label56.StylePriority.UseFont = false;
            this.label56.StylePriority.UseTextAlignment = false;
            this.label56.Text = "Abono";
            this.label56.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label55
            // 
            this.label55.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label55.LocationFloat = new DevExpress.Utils.PointFloat(429.0307F, 9.375F);
            this.label55.Name = "label55";
            this.label55.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label55.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label55.StylePriority.UseFont = false;
            this.label55.StylePriority.UseTextAlignment = false;
            this.label55.Text = "Cargo";
            this.label55.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line8
            // 
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(0F, 7.375F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(790.0001F, 2F);
            // 
            // label57
            // 
            this.label57.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label57.LocationFloat = new DevExpress.Utils.PointFloat(670.0001F, 9.375F);
            this.label57.Name = "label57";
            this.label57.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label57.SizeF = new System.Drawing.SizeF(119.2702F, 18F);
            this.label57.StylePriority.UseFont = false;
            this.label57.StylePriority.UseTextAlignment = false;
            this.label57.Text = "Saldo";
            this.label57.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line9
            // 
            this.line9.LocationFloat = new DevExpress.Utils.PointFloat(0F, 27.375F);
            this.line9.Name = "line9";
            this.line9.SizeF = new System.Drawing.SizeF(790.0001F, 2.083328F);
            // 
            // label51
            // 
            this.label51.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label51.LocationFloat = new DevExpress.Utils.PointFloat(179.2702F, 9.374969F);
            this.label51.Name = "label51";
            this.label51.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label51.SizeF = new System.Drawing.SizeF(90.38542F, 18.00003F);
            this.label51.StylePriority.UseFont = false;
            this.label51.StylePriority.UseTextAlignment = false;
            this.label51.Text = "Referencia";
            this.label51.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label50
            // 
            this.label50.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label50.LocationFloat = new DevExpress.Utils.PointFloat(0F, 9.375F);
            this.label50.Name = "label50";
            this.label50.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label50.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label50.StylePriority.UseFont = false;
            this.label50.StylePriority.UseTextAlignment = false;
            this.label50.Text = "Movimiento";
            this.label50.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label52
            // 
            this.label52.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label52.LocationFloat = new DevExpress.Utils.PointFloat(100F, 9.374969F);
            this.label52.Name = "label52";
            this.label52.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label52.SizeF = new System.Drawing.SizeF(79.2702F, 18F);
            this.label52.StylePriority.UseFont = false;
            this.label52.StylePriority.UseTextAlignment = false;
            this.label52.Text = "Consecutivo";
            this.label52.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label54
            // 
            this.label54.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label54.LocationFloat = new DevExpress.Utils.PointFloat(349.2703F, 9.375F);
            this.label54.Name = "label54";
            this.label54.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label54.SizeF = new System.Drawing.SizeF(79.76041F, 18F);
            this.label54.StylePriority.UseFont = false;
            this.label54.StylePriority.UseTextAlignment = false;
            this.label54.Text = "Vencimiento";
            this.label54.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label53
            // 
            this.label53.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label53.LocationFloat = new DevExpress.Utils.PointFloat(269.6556F, 9.374969F);
            this.label53.Name = "label53";
            this.label53.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label53.SizeF = new System.Drawing.SizeF(79.61465F, 18F);
            this.label53.StylePriority.UseFont = false;
            this.label53.StylePriority.UseTextAlignment = false;
            this.label53.Text = "Fecha";
            this.label53.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label45
            // 
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.PaginaActual")});
            this.label45.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(549.8803F, 4.083316F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.SizeF = new System.Drawing.SizeF(239.8801F, 18.00003F);
            this.label45.StylePriority.UseFont = false;
            this.label45.StylePriority.UseTextAlignment = false;
            this.label45.Text = "label45";
            this.label45.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line5
            // 
            this.line5.BorderColor = System.Drawing.Color.Gray;
            this.line5.ForeColor = System.Drawing.Color.Gray;
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(790F, 4.083316F);
            this.line5.StylePriority.UseBorderColor = false;
            this.line5.StylePriority.UseForeColor = false;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 4.083316F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo1.StyleName = "PageInfo";
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label14
            // 
            this.label14.BackColor = System.Drawing.Color.Transparent;
            this.label14.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Saldo", "{0:C2}")});
            this.label14.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label14.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(670.0001F, 2.083333F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(119.2701F, 18.00003F);
            this.label14.StyleName = "FieldCaption";
            this.label14.StylePriority.UseBackColor = false;
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseForeColor = false;
            this.label14.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:C2}";
            summary4.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label14.Summary = summary4;
            this.label14.Text = "label14";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label28
            // 
            this.label28.BackColor = System.Drawing.Color.Transparent;
            this.label28.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Abono", "{0:C2}")});
            this.label28.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label28.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label28.LocationFloat = new DevExpress.Utils.PointFloat(550F, 2.083328F);
            this.label28.Name = "label28";
            this.label28.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label28.SizeF = new System.Drawing.SizeF(120F, 18.00003F);
            this.label28.StyleName = "FieldCaption";
            this.label28.StylePriority.UseBackColor = false;
            this.label28.StylePriority.UseFont = false;
            this.label28.StylePriority.UseForeColor = false;
            this.label28.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:C2}";
            summary5.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label28.Summary = summary5;
            this.label28.Text = "label28";
            this.label28.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label30
            // 
            this.label30.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.TextoTotalMoneda")});
            this.label30.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.083328F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(179.2702F, 18.00003F);
            this.label30.StylePriority.UseFont = false;
            this.label30.Text = "label30";
            // 
            // label15
            // 
            this.label15.BackColor = System.Drawing.Color.Transparent;
            this.label15.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "spCorteCXCEstadoCuentaSimple.Cargo", "{0:C2}")});
            this.label15.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label15.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(430F, 2.083328F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(120F, 18.00003F);
            this.label15.StyleName = "FieldCaption";
            this.label15.StylePriority.UseBackColor = false;
            this.label15.StylePriority.UseFont = false;
            this.label15.StylePriority.UseForeColor = false;
            this.label15.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:C2}";
            summary6.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label15.Summary = summary6;
            this.label15.Text = "label15";
            this.label15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line6
            // 
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(790.0001F, 2.083328F);
            // 
            // spCorteCxcEstadoCuentaSimpleTableAdapter
            // 
            this.spCorteCxcEstadoCuentaSimpleTableAdapter.SelectCommand = this.sqlCommand2;
            this.spCorteCxcEstadoCuentaSimpleTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "spCorteCXCEstadoCuentaSimple", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand2
            // 
            this.sqlCommand2.CommandText = "EXEC SPCORTECXCESTADOCUENTASIMPLE 1";
            this.sqlCommand2.CommandTimeout = 0;
            this.sqlCommand2.Connection = this.sqlConnection2;
            // 
            // sqlConnection2
            // 
            this.sqlConnection2.ConnectionString = "Data Source=NOLIVERA;Initial Catalog=V4600;User ID=SA;";
            this.sqlConnection2.FireInfoMessageEventOnUserErrors = false;
            // 
            // Datos
            // 
            this.Datos.DataSetName = "DatosDataSet";
            this.Datos.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Maroon;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Maroon;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // EtiquetaLimiteCreditoMoneda
            // 
            this.EtiquetaLimiteCreditoMoneda.DataMember = "spCorteCXCEstadoCuentaSimple";
            this.EtiquetaLimiteCreditoMoneda.DataSource = this.Datos;
            this.EtiquetaLimiteCreditoMoneda.Expression = "Concat(\'Límite de Crédito (\',[ClienteLimiteCreditoMoneda],\')\')";
            this.EtiquetaLimiteCreditoMoneda.FieldType = DevExpress.XtraReports.UI.FieldType.String;
            this.EtiquetaLimiteCreditoMoneda.Name = "EtiquetaLimiteCreditoMoneda";
            this.EtiquetaLimiteCreditoMoneda.Scripts.OnGetValue = "EtiquetaLimiteCreditoMoneda_GetValue";
            // 
            // Saldo
            // 
            this.Saldo.DataMember = "spCorteCXCEstadoCuentaSimple";
            this.Saldo.DataSource = this.Datos;
            this.Saldo.Expression = "Iif(IsNull([Cargo])=False,[Cargo],0.0) - Iif(IsNull([Abono])=False,[Abono],0.0)";
            this.Saldo.Name = "Saldo";
            // 
            // PaginaActual
            // 
            this.PaginaActual.DataMember = "spCorteCXCEstadoCuentaSimple";
            this.PaginaActual.DataSource = this.Datos;
            this.PaginaActual.FieldType = DevExpress.XtraReports.UI.FieldType.String;
            this.PaginaActual.Name = "PaginaActual";
            this.PaginaActual.Scripts.OnGetValue = "PaginaActual_GetValue";
            // 
            // TextoTotalMoneda
            // 
            this.TextoTotalMoneda.DataMember = "spCorteCXCEstadoCuentaSimple";
            this.TextoTotalMoneda.DataSource = this.Datos;
            this.TextoTotalMoneda.Expression = "Concat(\'Total \',[Moneda] )";
            this.TextoTotalMoneda.Name = "TextoTotalMoneda";
            // 
            // TotalAplica
            // 
            this.TotalAplica.DataMember = "spCorteCXCEstadoCuentaSimple";
            this.TotalAplica.DataSource = this.Datos;
            this.TotalAplica.Expression = "Concat(\'Saldo \',[Aplica],\' \',[AplicaID] )";
            this.TotalAplica.Name = "TotalAplica";
            // 
            // dsDatos_2
            // 
            this.dsDatos_2.DataSetName = "dsDatos_2DataSet";
            this.dsDatos_2.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // oleDbDataAdapter1
            // 
            this.oleDbDataAdapter1.SelectCommand = this.oleDbCommand1;
            this.oleDbDataAdapter1.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "*", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand1
            // 
            this.oleDbCommand1.CommandText = "SELECT * FROM ESTADOCUENTAGRAFICA WHERE ESTACION = 1";
            this.oleDbCommand1.CommandTimeout = 0;
            this.oleDbCommand1.Connection = this.oleDbConnection1;
            // 
            // oleDbConnection1
            // 
            this.oleDbConnection1.ConnectionString = "Provider=SQLOLEDB;Data Source=.;Initial Catalog=INFORMES;User ID=SA;Password=";
            // 
            // sqlDataAdapter3
            // 
            this.sqlDataAdapter3.SelectCommand = this.sqlCommand3;
            this.sqlDataAdapter3.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand3
            // 
            this.sqlCommand3.CommandTimeout = 0;
            this.sqlCommand3.Connection = this.sqlConnection3;
            // 
            // sqlConnection3
            // 
            this.sqlConnection3.ConnectionString = "Data Source=.;Initial Catalog=INFORMES;User ID=SA;Password=";
            this.sqlConnection3.FireInfoMessageEventOnUserErrors = false;
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.SelectCommand = this.oleDbCommand2;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand2
            // 
            this.oleDbCommand2.CommandText = "EXEC spCorteCXCESTADOCUENTASIMPLE 1";
            this.oleDbCommand2.Connection = this.oleDbConnection2;
            // 
            // oleDbConnection2
            // 
            this.oleDbConnection2.ConnectionString = "Provider=SQLNCLI;Server=ABRAHAMROMANO;Database=VERSION3500;Uid=SA;";
            // 
            // oleDbDataAdapter2
            // 
            this.oleDbDataAdapter2.SelectCommand = this.oleDbCommand3;
            this.oleDbDataAdapter2.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "*", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand3
            // 
            this.oleDbCommand3.CommandText = "SELECT * FROM ESTADOCUENTAGRAFICA";
            this.oleDbCommand3.Connection = this.oleDbConnection3;
            // 
            // oleDbConnection3
            // 
            this.oleDbConnection3.ConnectionString = "Provider=SQLNCLI;Server=ABRAHAMROMANO;Database=VERSION3500;Uid=SA;";
            // 
            // sqlDataAdapter1
            // 
            this.sqlDataAdapter1.SelectCommand = this.sqlCommand4;
            this.sqlDataAdapter1.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand4
            // 
            this.sqlCommand4.CommandText = "SELECT * FROM ESTADOCUENTAGRAFICA WHERE ESTACION =    2";
            this.sqlCommand4.CommandTimeout = 0;
            this.sqlCommand4.Connection = this.sqlConnection4;
            // 
            // sqlConnection4
            // 
            this.sqlConnection4.ConnectionString = "Data Source=AIBANEZ;Initial Catalog=METALICA4500;User ID=SA;Password=";
            this.sqlConnection4.FireInfoMessageEventOnUserErrors = false;
            // 
            // dsDatos_1
            // 
            this.dsDatos_1.DataSetName = "dsDatos_1DataSet";
            this.dsDatos_1.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // dsDatos
            // 
            this.dsDatos.DataSetName = "dsDatosDataSet";
            this.dsDatos.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // Grafica
            // 
            this.Grafica.DataSetName = "GraficaDataSet";
            this.Grafica.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // sqlDataAdapter2
            // 
            this.sqlDataAdapter2.SelectCommand = this.sqlCommand5;
            this.sqlDataAdapter2.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // sqlCommand5
            // 
            this.sqlCommand5.CommandText = "SELECT * FROM ESTADOCUENTAGRAFICA WHERE ESTACION =  1";
            this.sqlCommand5.CommandTimeout = 0;
            this.sqlCommand5.Connection = this.sqlConnection5;
            // 
            // sqlConnection5
            // 
            this.sqlConnection5.ConnectionString = "Data Source=.;Initial Catalog=INFORMES;User ID=SA;Password=";
            this.sqlConnection5.FireInfoMessageEventOnUserErrors = false;
            // 
            // groupFooterBand1
            // 
            this.groupFooterBand1.HeightF = 1F;
            this.groupFooterBand1.Name = "groupFooterBand1";
            // 
            // InformeCXCEstadoCuentaSimple
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.groupHeaderBand2,
                        this.groupHeaderBand3,
                        this.groupFooterBand2,
                        this.groupFooterBand3,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.PageHeader,
                        this.PageFooter,
                        this.GroupHeader1,
                        this.GroupFooter1});
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.EtiquetaLimiteCreditoMoneda,
                        this.Saldo,
                        this.PaginaActual,
                        this.TextoTotalMoneda,
                        this.TotalAplica});
            this.DataAdapter = this.spCorteCxcEstadoCuentaSimpleTableAdapter;
            this.DataMember = "spCorteCxcEstadoCuentaSimple";
            this.DataSource = this.Datos;
            this.Margins = new System.Drawing.Printing.Margins(30, 30, 28, 30);
            this.Name = "InformeCXCEstadoCuentaSimple";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.Scripts.OnPrintProgress = "InformeCXCEstadoCuentaSimple_PrintProgress";
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "EXEC spCorteCxcEstadoCuentaSimple [EstacionTrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.Datos)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos_1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dsDatos)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.Grafica)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatos_3DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatos_3DataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatos_3DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatos_3DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatos_3DataSet cln = ((dsDatos_3DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatos_3DataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatos_3DataSet ds = new dsDatos_3DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnModulo;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnCuenta;
            private global::System.Data.DataColumn columnSaldoDescripcion;
            private global::System.Data.DataColumn columnSaldoImporte;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuloColumn {
                get {
                    return this.columnModulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CuentaColumn {
                get {
                    return this.columnCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionColumn {
                get {
                    return this.columnSaldoDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteColumn {
                get {
                    return this.columnSaldoImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(int Estacion, string Empresa, int ID, bool Grafica, string Modulo, string Moneda, string Cuenta, string SaldoDescripcion, double SaldoImporte) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        Empresa,
                        ID,
                        Grafica,
                        Modulo,
                        Moneda,
                        Cuenta,
                        SaldoDescripcion,
                        SaldoImporte};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnID = base.Columns["ID"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnModulo = base.Columns["Modulo"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnCuenta = base.Columns["Cuenta"];
                this.columnSaldoDescripcion = base.Columns["SaldoDescripcion"];
                this.columnSaldoImporte = base.Columns["SaldoImporte"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnModulo = new global::System.Data.DataColumn("Modulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModulo);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnCuenta = new global::System.Data.DataColumn("Cuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta);
                this.columnSaldoDescripcion = new global::System.Data.DataColumn("SaldoDescripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcion);
                this.columnSaldoImporte = new global::System.Data.DataColumn("SaldoImporte", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporte);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatos_3DataSet ds = new dsDatos_3DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.table_Table.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica {
                get {
                    try {
                        return ((bool)(this[this.table_Table.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.ModuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Modulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ModuloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta {
                get {
                    try {
                        return ((string)(this[this.table_Table.CuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cuenta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.SaldoDescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoDescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoImporte {
                get {
                    try {
                        return ((double)(this[this.table_Table.SaldoImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.table_Table.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.table_Table.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.table_Table.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.table_Table.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table_Table.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table_Table.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.table_Table.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.table_Table.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuloNull() {
                return this.IsNull(this.table_Table.ModuloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuloNull() {
                this[this.table_Table.ModuloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.table_Table.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.table_Table.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuentaNull() {
                return this.IsNull(this.table_Table.CuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuentaNull() {
                this[this.table_Table.CuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionNull() {
                return this.IsNull(this.table_Table.SaldoDescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionNull() {
                this[this.table_Table.SaldoDescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteNull() {
                return this.IsNull(this.table_Table.SaldoImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteNull() {
                this[this.table_Table.SaldoImporteColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DatosDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DatosDataSet : global::System.Data.DataSet {
        private spCorteCxcEstadoCuentaSimpleDataTable tablespCorteCxcEstadoCuentaSimple;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DatosDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DatosDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spCorteCxcEstadoCuentaSimple"] != null)) {
                    base.Tables.Add(new spCorteCxcEstadoCuentaSimpleDataTable(ds.Tables["spCorteCxcEstadoCuentaSimple"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spCorteCxcEstadoCuentaSimpleDataTable spCorteCxcEstadoCuentaSimple {
            get {
                return this.tablespCorteCxcEstadoCuentaSimple;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DatosDataSet cln = ((DatosDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spCorteCxcEstadoCuentaSimple"] != null)) {
                    base.Tables.Add(new spCorteCxcEstadoCuentaSimpleDataTable(ds.Tables["spCorteCxcEstadoCuentaSimple"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablespCorteCxcEstadoCuentaSimple = ((spCorteCxcEstadoCuentaSimpleDataTable)(base.Tables["spCorteCxcEstadoCuentaSimple"]));
            if ((initTable == true)) {
                if ((this.tablespCorteCxcEstadoCuentaSimple != null)) {
                    this.tablespCorteCxcEstadoCuentaSimple.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DatosDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespCorteCxcEstadoCuentaSimple = new spCorteCxcEstadoCuentaSimpleDataTable();
            base.Tables.Add(this.tablespCorteCxcEstadoCuentaSimple);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializespCorteCxcEstadoCuentaSimple() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DatosDataSet ds = new DatosDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void spCorteCxcEstadoCuentaSimpleRowChangeEventHandler(object sender, spCorteCxcEstadoCuentaSimpleRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spCorteCxcEstadoCuentaSimpleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnAuxiliarID;
            private global::System.Data.DataColumn columnModuloID;
            private global::System.Data.DataColumn columnModulo;
            private global::System.Data.DataColumn columnCuenta;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnEfectivo;
            private global::System.Data.DataColumn columnConsumos;
            private global::System.Data.DataColumn columnVales;
            private global::System.Data.DataColumn columnRedondeo;
            private global::System.Data.DataColumn columnClienteEnviarA;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnSaldoDescripcion;
            private global::System.Data.DataColumn columnSaldoImporte;
            private global::System.Data.DataColumn columnVencimiento;
            private global::System.Data.DataColumn columnReferencia;
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnRama;
            private global::System.Data.DataColumn columnSubCuenta;
            private global::System.Data.DataColumn columnEjercicio;
            private global::System.Data.DataColumn columnPeriodo;
            private global::System.Data.DataColumn columnFecha;
            private global::System.Data.DataColumn columnGrupo;
            private global::System.Data.DataColumn columnMov;
            private global::System.Data.DataColumn columnMovID;
            private global::System.Data.DataColumn columnCargo;
            private global::System.Data.DataColumn columnAbono;
            private global::System.Data.DataColumn columnAplica;
            private global::System.Data.DataColumn columnAplicaID;
            private global::System.Data.DataColumn columnAcumulado;
            private global::System.Data.DataColumn columnConciliado;
            private global::System.Data.DataColumn columnEsCancelacion;
            private global::System.Data.DataColumn columnTipoCambio;
            private global::System.Data.DataColumn columnFechaConciliacion;
            private global::System.Data.DataColumn columnSucursal;
            private global::System.Data.DataColumn columnCliente;
            private global::System.Data.DataColumn columnNombre;
            private global::System.Data.DataColumn columnNombreCorto;
            private global::System.Data.DataColumn columnNumero;
            private global::System.Data.DataColumn columnTipo;
            private global::System.Data.DataColumn columnDireccion;
            private global::System.Data.DataColumn columnEntreCalles;
            private global::System.Data.DataColumn columnPlano;
            private global::System.Data.DataColumn columnObservaciones;
            private global::System.Data.DataColumn columnColonia;
            private global::System.Data.DataColumn columnCodigoPostal;
            private global::System.Data.DataColumn columnPoblacion;
            private global::System.Data.DataColumn columnEstado;
            private global::System.Data.DataColumn columnPais;
            private global::System.Data.DataColumn columnZona;
            private global::System.Data.DataColumn columnRFC;
            private global::System.Data.DataColumn columnTelefonos;
            private global::System.Data.DataColumn columnFax;
            private global::System.Data.DataColumn columnPedirTono;
            private global::System.Data.DataColumn columnContacto1;
            private global::System.Data.DataColumn columnContacto2;
            private global::System.Data.DataColumn columneMail1;
            private global::System.Data.DataColumn columneMail2;
            private global::System.Data.DataColumn columnDirInternet;
            private global::System.Data.DataColumn columnCategoria;
            private global::System.Data.DataColumn columnFamilia;
            private global::System.Data.DataColumn columnCredito;
            private global::System.Data.DataColumn columnCteGrupo;
            private global::System.Data.DataColumn columnDiaRevision1;
            private global::System.Data.DataColumn columnDiaRevision2;
            private global::System.Data.DataColumn columnHorarioRevision;
            private global::System.Data.DataColumn columnDiaPago1;
            private global::System.Data.DataColumn columnDiaPago2;
            private global::System.Data.DataColumn columnHorarioPago;
            private global::System.Data.DataColumn columnZonaImpuesto;
            private global::System.Data.DataColumn columnPedidosParciales;
            private global::System.Data.DataColumn columnClase;
            private global::System.Data.DataColumn columnEstatus;
            private global::System.Data.DataColumn columnUltimoCambio;
            private global::System.Data.DataColumn columnAlta;
            private global::System.Data.DataColumn columnConciliar;
            private global::System.Data.DataColumn columnDescuento;
            private global::System.Data.DataColumn columnProyecto;
            private global::System.Data.DataColumn columnAgente;
            private global::System.Data.DataColumn columnAgenteServicio;
            private global::System.Data.DataColumn columnEnviarA;
            private global::System.Data.DataColumn columnFormaEnvio;
            private global::System.Data.DataColumn columnCondicion;
            private global::System.Data.DataColumn columnRuta;
            private global::System.Data.DataColumn columnListaPrecios;
            private global::System.Data.DataColumn columnDefMoneda;
            private global::System.Data.DataColumn columnVtasConsignacion;
            private global::System.Data.DataColumn columnAlmacenVtasConsignacion;
            private global::System.Data.DataColumn columnMensaje;
            private global::System.Data.DataColumn columnExtencion1;
            private global::System.Data.DataColumn columnExtencion2;
            private global::System.Data.DataColumn columnCURP;
            private global::System.Data.DataColumn columnDireccionNormalizada1;
            private global::System.Data.DataColumn columnDireccionNormalizada2;
            private global::System.Data.DataColumn columnDireccionNormalizada3;
            private global::System.Data.DataColumn columnDireccionNormalizada4;
            private global::System.Data.DataColumn columnDireccionNormalizada5;
            private global::System.Data.DataColumn columnDireccionNormalizada6;
            private global::System.Data.DataColumn columnDireccionNormalizada7;
            private global::System.Data.DataColumn columnDireccionNormalizada8;
            private global::System.Data.DataColumn columnCreditoEspecial;
            private global::System.Data.DataColumn columnCreditoConDias;
            private global::System.Data.DataColumn columnCreditoDias;
            private global::System.Data.DataColumn columnConDias;
            private global::System.Data.DataColumn columnDias;
            private global::System.Data.DataColumn columnCreditoConCondiciones;
            private global::System.Data.DataColumn columnCreditoCondiciones;
            private global::System.Data.DataColumn columnCondiciones;
            private global::System.Data.DataColumn columnConCondiciones;
            private global::System.Data.DataColumn columnCreditoConLimite;
            private global::System.Data.DataColumn columnCreditoLimite;
            private global::System.Data.DataColumn columnConLimiteCredito;
            private global::System.Data.DataColumn columnLimiteCredito;
            private global::System.Data.DataColumn columnCreditoMoneda;
            private global::System.Data.DataColumn columnMonedaCredito;
            private global::System.Data.DataColumn columnMonedaContable;
            private global::System.Data.DataColumn columnEtiqueta;
            private global::System.Data.DataColumn columnFechaDesde;
            private global::System.Data.DataColumn columnFechaHasta;
            private global::System.Data.DataColumn columnClienteLimiteCredito;
            private global::System.Data.DataColumn columnClienteLimiteCreditoMoneda;
            private global::System.Data.DataColumn columnClienteCondicionPago;
            private global::System.Data.DataColumn columnClienteCreditoDias;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spCorteCxcEstadoCuentaSimpleDataTable() {
                this.TableName = "spCorteCxcEstadoCuentaSimple";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spCorteCxcEstadoCuentaSimpleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected spCorteCxcEstadoCuentaSimpleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuxiliarIDColumn {
                get {
                    return this.columnAuxiliarID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuloIDColumn {
                get {
                    return this.columnModuloID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuloColumn {
                get {
                    return this.columnModulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CuentaColumn {
                get {
                    return this.columnCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EfectivoColumn {
                get {
                    return this.columnEfectivo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsumosColumn {
                get {
                    return this.columnConsumos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValesColumn {
                get {
                    return this.columnVales;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RedondeoColumn {
                get {
                    return this.columnRedondeo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteEnviarAColumn {
                get {
                    return this.columnClienteEnviarA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionColumn {
                get {
                    return this.columnSaldoDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteColumn {
                get {
                    return this.columnSaldoImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VencimientoColumn {
                get {
                    return this.columnVencimiento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenciaColumn {
                get {
                    return this.columnReferencia;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RamaColumn {
                get {
                    return this.columnRama;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubCuentaColumn {
                get {
                    return this.columnSubCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EjercicioColumn {
                get {
                    return this.columnEjercicio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoColumn {
                get {
                    return this.columnPeriodo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrupoColumn {
                get {
                    return this.columnGrupo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovColumn {
                get {
                    return this.columnMov;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovIDColumn {
                get {
                    return this.columnMovID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargoColumn {
                get {
                    return this.columnCargo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonoColumn {
                get {
                    return this.columnAbono;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AplicaColumn {
                get {
                    return this.columnAplica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AplicaIDColumn {
                get {
                    return this.columnAplicaID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcumuladoColumn {
                get {
                    return this.columnAcumulado;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConciliadoColumn {
                get {
                    return this.columnConciliado;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EsCancelacionColumn {
                get {
                    return this.columnEsCancelacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoCambioColumn {
                get {
                    return this.columnTipoCambio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaConciliacionColumn {
                get {
                    return this.columnFechaConciliacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SucursalColumn {
                get {
                    return this.columnSucursal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteColumn {
                get {
                    return this.columnCliente;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreCortoColumn {
                get {
                    return this.columnNombreCorto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DireccionColumn {
                get {
                    return this.columnDireccion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntreCallesColumn {
                get {
                    return this.columnEntreCalles;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlanoColumn {
                get {
                    return this.columnPlano;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColoniaColumn {
                get {
                    return this.columnColonia;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoPostalColumn {
                get {
                    return this.columnCodigoPostal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoblacionColumn {
                get {
                    return this.columnPoblacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaisColumn {
                get {
                    return this.columnPais;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZonaColumn {
                get {
                    return this.columnZona;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RFCColumn {
                get {
                    return this.columnRFC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefonosColumn {
                get {
                    return this.columnTelefonos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PedirTonoColumn {
                get {
                    return this.columnPedirTono;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Contacto1Column {
                get {
                    return this.columnContacto1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Contacto2Column {
                get {
                    return this.columnContacto2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eMail1Column {
                get {
                    return this.columneMail1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eMail2Column {
                get {
                    return this.columneMail2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DirInternetColumn {
                get {
                    return this.columnDirInternet;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoriaColumn {
                get {
                    return this.columnCategoria;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamiliaColumn {
                get {
                    return this.columnFamilia;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditoColumn {
                get {
                    return this.columnCredito;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CteGrupoColumn {
                get {
                    return this.columnCteGrupo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiaRevision1Column {
                get {
                    return this.columnDiaRevision1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiaRevision2Column {
                get {
                    return this.columnDiaRevision2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HorarioRevisionColumn {
                get {
                    return this.columnHorarioRevision;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiaPago1Column {
                get {
                    return this.columnDiaPago1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiaPago2Column {
                get {
                    return this.columnDiaPago2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HorarioPagoColumn {
                get {
                    return this.columnHorarioPago;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZonaImpuestoColumn {
                get {
                    return this.columnZonaImpuesto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PedidosParcialesColumn {
                get {
                    return this.columnPedidosParciales;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClaseColumn {
                get {
                    return this.columnClase;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstatusColumn {
                get {
                    return this.columnEstatus;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UltimoCambioColumn {
                get {
                    return this.columnUltimoCambio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AltaColumn {
                get {
                    return this.columnAlta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConciliarColumn {
                get {
                    return this.columnConciliar;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescuentoColumn {
                get {
                    return this.columnDescuento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProyectoColumn {
                get {
                    return this.columnProyecto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgenteColumn {
                get {
                    return this.columnAgente;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgenteServicioColumn {
                get {
                    return this.columnAgenteServicio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnviarAColumn {
                get {
                    return this.columnEnviarA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormaEnvioColumn {
                get {
                    return this.columnFormaEnvio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CondicionColumn {
                get {
                    return this.columnCondicion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RutaColumn {
                get {
                    return this.columnRuta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListaPreciosColumn {
                get {
                    return this.columnListaPrecios;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DefMonedaColumn {
                get {
                    return this.columnDefMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VtasConsignacionColumn {
                get {
                    return this.columnVtasConsignacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlmacenVtasConsignacionColumn {
                get {
                    return this.columnAlmacenVtasConsignacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MensajeColumn {
                get {
                    return this.columnMensaje;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Extencion1Column {
                get {
                    return this.columnExtencion1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Extencion2Column {
                get {
                    return this.columnExtencion2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CURPColumn {
                get {
                    return this.columnCURP;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DireccionNormalizada1Column {
                get {
                    return this.columnDireccionNormalizada1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DireccionNormalizada2Column {
                get {
                    return this.columnDireccionNormalizada2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DireccionNormalizada3Column {
                get {
                    return this.columnDireccionNormalizada3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DireccionNormalizada4Column {
                get {
                    return this.columnDireccionNormalizada4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DireccionNormalizada5Column {
                get {
                    return this.columnDireccionNormalizada5;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DireccionNormalizada6Column {
                get {
                    return this.columnDireccionNormalizada6;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DireccionNormalizada7Column {
                get {
                    return this.columnDireccionNormalizada7;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DireccionNormalizada8Column {
                get {
                    return this.columnDireccionNormalizada8;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditoEspecialColumn {
                get {
                    return this.columnCreditoEspecial;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditoConDiasColumn {
                get {
                    return this.columnCreditoConDias;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditoDiasColumn {
                get {
                    return this.columnCreditoDias;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConDiasColumn {
                get {
                    return this.columnConDias;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiasColumn {
                get {
                    return this.columnDias;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditoConCondicionesColumn {
                get {
                    return this.columnCreditoConCondiciones;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditoCondicionesColumn {
                get {
                    return this.columnCreditoCondiciones;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CondicionesColumn {
                get {
                    return this.columnCondiciones;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConCondicionesColumn {
                get {
                    return this.columnConCondiciones;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditoConLimiteColumn {
                get {
                    return this.columnCreditoConLimite;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditoLimiteColumn {
                get {
                    return this.columnCreditoLimite;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConLimiteCreditoColumn {
                get {
                    return this.columnConLimiteCredito;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LimiteCreditoColumn {
                get {
                    return this.columnLimiteCredito;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditoMonedaColumn {
                get {
                    return this.columnCreditoMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaCreditoColumn {
                get {
                    return this.columnMonedaCredito;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaContableColumn {
                get {
                    return this.columnMonedaContable;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtiquetaColumn {
                get {
                    return this.columnEtiqueta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaDesdeColumn {
                get {
                    return this.columnFechaDesde;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaHastaColumn {
                get {
                    return this.columnFechaHasta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteLimiteCreditoColumn {
                get {
                    return this.columnClienteLimiteCredito;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteLimiteCreditoMonedaColumn {
                get {
                    return this.columnClienteLimiteCreditoMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteCondicionPagoColumn {
                get {
                    return this.columnClienteCondicionPago;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteCreditoDiasColumn {
                get {
                    return this.columnClienteCreditoDias;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spCorteCxcEstadoCuentaSimpleRow this[int index] {
                get {
                    return ((spCorteCxcEstadoCuentaSimpleRow)(this.Rows[index]));
                }
            }
            public event spCorteCxcEstadoCuentaSimpleRowChangeEventHandler spCorteCxcEstadoCuentaSimpleRowChanging;
            public event spCorteCxcEstadoCuentaSimpleRowChangeEventHandler spCorteCxcEstadoCuentaSimpleRowChanged;
            public event spCorteCxcEstadoCuentaSimpleRowChangeEventHandler spCorteCxcEstadoCuentaSimpleRowDeleting;
            public event spCorteCxcEstadoCuentaSimpleRowChangeEventHandler spCorteCxcEstadoCuentaSimpleRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddspCorteCxcEstadoCuentaSimpleRow(spCorteCxcEstadoCuentaSimpleRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spCorteCxcEstadoCuentaSimpleRow AddspCorteCxcEstadoCuentaSimpleRow(
                        string EmpresaNombre, 
                        int ID, 
                        int Estacion, 
                        int AuxiliarID, 
                        int ModuloID, 
                        string Modulo, 
                        string Cuenta, 
                        string Moneda, 
                        decimal Efectivo, 
                        decimal Consumos, 
                        decimal Vales, 
                        decimal Redondeo, 
                        int ClienteEnviarA, 
                        bool Grafica, 
                        string SaldoDescripcion, 
                        decimal SaldoImporte, 
                        System.DateTime Vencimiento, 
                        string Referencia, 
                        string Empresa, 
                        string Rama, 
                        string SubCuenta, 
                        int Ejercicio, 
                        int Periodo, 
                        System.DateTime Fecha, 
                        string Grupo, 
                        string Mov, 
                        string MovID, 
                        decimal Cargo, 
                        decimal Abono, 
                        string Aplica, 
                        string AplicaID, 
                        bool Acumulado, 
                        bool Conciliado, 
                        bool EsCancelacion, 
                        double TipoCambio, 
                        System.DateTime FechaConciliacion, 
                        int Sucursal, 
                        string Cliente, 
                        string Nombre, 
                        string NombreCorto, 
                        int Numero, 
                        string Tipo, 
                        string Direccion, 
                        string EntreCalles, 
                        string Plano, 
                        string Observaciones, 
                        string Colonia, 
                        string CodigoPostal, 
                        string Poblacion, 
                        string Estado, 
                        string Pais, 
                        string Zona, 
                        string RFC, 
                        string Telefonos, 
                        string Fax, 
                        bool PedirTono, 
                        string Contacto1, 
                        string Contacto2, 
                        string eMail1, 
                        string eMail2, 
                        string DirInternet, 
                        string Categoria, 
                        string Familia, 
                        string Credito, 
                        string CteGrupo, 
                        string DiaRevision1, 
                        string DiaRevision2, 
                        string HorarioRevision, 
                        string DiaPago1, 
                        string DiaPago2, 
                        string HorarioPago, 
                        string ZonaImpuesto, 
                        bool PedidosParciales, 
                        string Clase, 
                        string Estatus, 
                        System.DateTime UltimoCambio, 
                        System.DateTime Alta, 
                        bool Conciliar, 
                        string Descuento, 
                        string Proyecto, 
                        string Agente, 
                        string AgenteServicio, 
                        int EnviarA, 
                        string FormaEnvio, 
                        string Condicion, 
                        string Ruta, 
                        int ListaPrecios, 
                        string DefMoneda, 
                        bool VtasConsignacion, 
                        string AlmacenVtasConsignacion, 
                        string Mensaje, 
                        string Extencion1, 
                        string Extencion2, 
                        string CURP, 
                        string DireccionNormalizada1, 
                        string DireccionNormalizada2, 
                        string DireccionNormalizada3, 
                        string DireccionNormalizada4, 
                        string DireccionNormalizada5, 
                        string DireccionNormalizada6, 
                        string DireccionNormalizada7, 
                        string DireccionNormalizada8, 
                        bool CreditoEspecial, 
                        bool CreditoConDias, 
                        int CreditoDias, 
                        bool ConDias, 
                        int Dias, 
                        bool CreditoConCondiciones, 
                        string CreditoCondiciones, 
                        string Condiciones, 
                        bool ConCondiciones, 
                        bool CreditoConLimite, 
                        decimal CreditoLimite, 
                        bool ConLimiteCredito, 
                        decimal LimiteCredito, 
                        string CreditoMoneda, 
                        string MonedaCredito, 
                        string MonedaContable, 
                        bool Etiqueta, 
                        System.DateTime FechaDesde, 
                        System.DateTime FechaHasta, 
                        decimal ClienteLimiteCredito, 
                        string ClienteLimiteCreditoMoneda, 
                        string ClienteCondicionPago, 
                        int ClienteCreditoDias, 
                        bool VerGraficaDetalle) {
                spCorteCxcEstadoCuentaSimpleRow rowspCorteCxcEstadoCuentaSimpleRow = ((spCorteCxcEstadoCuentaSimpleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmpresaNombre,
                        ID,
                        Estacion,
                        AuxiliarID,
                        ModuloID,
                        Modulo,
                        Cuenta,
                        Moneda,
                        Efectivo,
                        Consumos,
                        Vales,
                        Redondeo,
                        ClienteEnviarA,
                        Grafica,
                        SaldoDescripcion,
                        SaldoImporte,
                        Vencimiento,
                        Referencia,
                        Empresa,
                        Rama,
                        SubCuenta,
                        Ejercicio,
                        Periodo,
                        Fecha,
                        Grupo,
                        Mov,
                        MovID,
                        Cargo,
                        Abono,
                        Aplica,
                        AplicaID,
                        Acumulado,
                        Conciliado,
                        EsCancelacion,
                        TipoCambio,
                        FechaConciliacion,
                        Sucursal,
                        Cliente,
                        Nombre,
                        NombreCorto,
                        Numero,
                        Tipo,
                        Direccion,
                        EntreCalles,
                        Plano,
                        Observaciones,
                        Colonia,
                        CodigoPostal,
                        Poblacion,
                        Estado,
                        Pais,
                        Zona,
                        RFC,
                        Telefonos,
                        Fax,
                        PedirTono,
                        Contacto1,
                        Contacto2,
                        eMail1,
                        eMail2,
                        DirInternet,
                        Categoria,
                        Familia,
                        Credito,
                        CteGrupo,
                        DiaRevision1,
                        DiaRevision2,
                        HorarioRevision,
                        DiaPago1,
                        DiaPago2,
                        HorarioPago,
                        ZonaImpuesto,
                        PedidosParciales,
                        Clase,
                        Estatus,
                        UltimoCambio,
                        Alta,
                        Conciliar,
                        Descuento,
                        Proyecto,
                        Agente,
                        AgenteServicio,
                        EnviarA,
                        FormaEnvio,
                        Condicion,
                        Ruta,
                        ListaPrecios,
                        DefMoneda,
                        VtasConsignacion,
                        AlmacenVtasConsignacion,
                        Mensaje,
                        Extencion1,
                        Extencion2,
                        CURP,
                        DireccionNormalizada1,
                        DireccionNormalizada2,
                        DireccionNormalizada3,
                        DireccionNormalizada4,
                        DireccionNormalizada5,
                        DireccionNormalizada6,
                        DireccionNormalizada7,
                        DireccionNormalizada8,
                        CreditoEspecial,
                        CreditoConDias,
                        CreditoDias,
                        ConDias,
                        Dias,
                        CreditoConCondiciones,
                        CreditoCondiciones,
                        Condiciones,
                        ConCondiciones,
                        CreditoConLimite,
                        CreditoLimite,
                        ConLimiteCredito,
                        LimiteCredito,
                        CreditoMoneda,
                        MonedaCredito,
                        MonedaContable,
                        Etiqueta,
                        FechaDesde,
                        FechaHasta,
                        ClienteLimiteCredito,
                        ClienteLimiteCreditoMoneda,
                        ClienteCondicionPago,
                        ClienteCreditoDias,
                        VerGraficaDetalle};
                rowspCorteCxcEstadoCuentaSimpleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspCorteCxcEstadoCuentaSimpleRow);
                return rowspCorteCxcEstadoCuentaSimpleRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                spCorteCxcEstadoCuentaSimpleDataTable cln = ((spCorteCxcEstadoCuentaSimpleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spCorteCxcEstadoCuentaSimpleDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnID = base.Columns["ID"];
                this.columnEstacion = base.Columns["Estacion"];
                this.columnAuxiliarID = base.Columns["AuxiliarID"];
                this.columnModuloID = base.Columns["ModuloID"];
                this.columnModulo = base.Columns["Modulo"];
                this.columnCuenta = base.Columns["Cuenta"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnEfectivo = base.Columns["Efectivo"];
                this.columnConsumos = base.Columns["Consumos"];
                this.columnVales = base.Columns["Vales"];
                this.columnRedondeo = base.Columns["Redondeo"];
                this.columnClienteEnviarA = base.Columns["ClienteEnviarA"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnSaldoDescripcion = base.Columns["SaldoDescripcion"];
                this.columnSaldoImporte = base.Columns["SaldoImporte"];
                this.columnVencimiento = base.Columns["Vencimiento"];
                this.columnReferencia = base.Columns["Referencia"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnRama = base.Columns["Rama"];
                this.columnSubCuenta = base.Columns["SubCuenta"];
                this.columnEjercicio = base.Columns["Ejercicio"];
                this.columnPeriodo = base.Columns["Periodo"];
                this.columnFecha = base.Columns["Fecha"];
                this.columnGrupo = base.Columns["Grupo"];
                this.columnMov = base.Columns["Mov"];
                this.columnMovID = base.Columns["MovID"];
                this.columnCargo = base.Columns["Cargo"];
                this.columnAbono = base.Columns["Abono"];
                this.columnAplica = base.Columns["Aplica"];
                this.columnAplicaID = base.Columns["AplicaID"];
                this.columnAcumulado = base.Columns["Acumulado"];
                this.columnConciliado = base.Columns["Conciliado"];
                this.columnEsCancelacion = base.Columns["EsCancelacion"];
                this.columnTipoCambio = base.Columns["TipoCambio"];
                this.columnFechaConciliacion = base.Columns["FechaConciliacion"];
                this.columnSucursal = base.Columns["Sucursal"];
                this.columnCliente = base.Columns["Cliente"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnNombreCorto = base.Columns["NombreCorto"];
                this.columnNumero = base.Columns["Numero"];
                this.columnTipo = base.Columns["Tipo"];
                this.columnDireccion = base.Columns["Direccion"];
                this.columnEntreCalles = base.Columns["EntreCalles"];
                this.columnPlano = base.Columns["Plano"];
                this.columnObservaciones = base.Columns["Observaciones"];
                this.columnColonia = base.Columns["Colonia"];
                this.columnCodigoPostal = base.Columns["CodigoPostal"];
                this.columnPoblacion = base.Columns["Poblacion"];
                this.columnEstado = base.Columns["Estado"];
                this.columnPais = base.Columns["Pais"];
                this.columnZona = base.Columns["Zona"];
                this.columnRFC = base.Columns["RFC"];
                this.columnTelefonos = base.Columns["Telefonos"];
                this.columnFax = base.Columns["Fax"];
                this.columnPedirTono = base.Columns["PedirTono"];
                this.columnContacto1 = base.Columns["Contacto1"];
                this.columnContacto2 = base.Columns["Contacto2"];
                this.columneMail1 = base.Columns["eMail1"];
                this.columneMail2 = base.Columns["eMail2"];
                this.columnDirInternet = base.Columns["DirInternet"];
                this.columnCategoria = base.Columns["Categoria"];
                this.columnFamilia = base.Columns["Familia"];
                this.columnCredito = base.Columns["Credito"];
                this.columnCteGrupo = base.Columns["CteGrupo"];
                this.columnDiaRevision1 = base.Columns["DiaRevision1"];
                this.columnDiaRevision2 = base.Columns["DiaRevision2"];
                this.columnHorarioRevision = base.Columns["HorarioRevision"];
                this.columnDiaPago1 = base.Columns["DiaPago1"];
                this.columnDiaPago2 = base.Columns["DiaPago2"];
                this.columnHorarioPago = base.Columns["HorarioPago"];
                this.columnZonaImpuesto = base.Columns["ZonaImpuesto"];
                this.columnPedidosParciales = base.Columns["PedidosParciales"];
                this.columnClase = base.Columns["Clase"];
                this.columnEstatus = base.Columns["Estatus"];
                this.columnUltimoCambio = base.Columns["UltimoCambio"];
                this.columnAlta = base.Columns["Alta"];
                this.columnConciliar = base.Columns["Conciliar"];
                this.columnDescuento = base.Columns["Descuento"];
                this.columnProyecto = base.Columns["Proyecto"];
                this.columnAgente = base.Columns["Agente"];
                this.columnAgenteServicio = base.Columns["AgenteServicio"];
                this.columnEnviarA = base.Columns["EnviarA"];
                this.columnFormaEnvio = base.Columns["FormaEnvio"];
                this.columnCondicion = base.Columns["Condicion"];
                this.columnRuta = base.Columns["Ruta"];
                this.columnListaPrecios = base.Columns["ListaPrecios"];
                this.columnDefMoneda = base.Columns["DefMoneda"];
                this.columnVtasConsignacion = base.Columns["VtasConsignacion"];
                this.columnAlmacenVtasConsignacion = base.Columns["AlmacenVtasConsignacion"];
                this.columnMensaje = base.Columns["Mensaje"];
                this.columnExtencion1 = base.Columns["Extencion1"];
                this.columnExtencion2 = base.Columns["Extencion2"];
                this.columnCURP = base.Columns["CURP"];
                this.columnDireccionNormalizada1 = base.Columns["DireccionNormalizada1"];
                this.columnDireccionNormalizada2 = base.Columns["DireccionNormalizada2"];
                this.columnDireccionNormalizada3 = base.Columns["DireccionNormalizada3"];
                this.columnDireccionNormalizada4 = base.Columns["DireccionNormalizada4"];
                this.columnDireccionNormalizada5 = base.Columns["DireccionNormalizada5"];
                this.columnDireccionNormalizada6 = base.Columns["DireccionNormalizada6"];
                this.columnDireccionNormalizada7 = base.Columns["DireccionNormalizada7"];
                this.columnDireccionNormalizada8 = base.Columns["DireccionNormalizada8"];
                this.columnCreditoEspecial = base.Columns["CreditoEspecial"];
                this.columnCreditoConDias = base.Columns["CreditoConDias"];
                this.columnCreditoDias = base.Columns["CreditoDias"];
                this.columnConDias = base.Columns["ConDias"];
                this.columnDias = base.Columns["Dias"];
                this.columnCreditoConCondiciones = base.Columns["CreditoConCondiciones"];
                this.columnCreditoCondiciones = base.Columns["CreditoCondiciones"];
                this.columnCondiciones = base.Columns["Condiciones"];
                this.columnConCondiciones = base.Columns["ConCondiciones"];
                this.columnCreditoConLimite = base.Columns["CreditoConLimite"];
                this.columnCreditoLimite = base.Columns["CreditoLimite"];
                this.columnConLimiteCredito = base.Columns["ConLimiteCredito"];
                this.columnLimiteCredito = base.Columns["LimiteCredito"];
                this.columnCreditoMoneda = base.Columns["CreditoMoneda"];
                this.columnMonedaCredito = base.Columns["MonedaCredito"];
                this.columnMonedaContable = base.Columns["MonedaContable"];
                this.columnEtiqueta = base.Columns["Etiqueta"];
                this.columnFechaDesde = base.Columns["FechaDesde"];
                this.columnFechaHasta = base.Columns["FechaHasta"];
                this.columnClienteLimiteCredito = base.Columns["ClienteLimiteCredito"];
                this.columnClienteLimiteCreditoMoneda = base.Columns["ClienteLimiteCreditoMoneda"];
                this.columnClienteCondicionPago = base.Columns["ClienteCondicionPago"];
                this.columnClienteCreditoDias = base.Columns["ClienteCreditoDias"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnAuxiliarID = new global::System.Data.DataColumn("AuxiliarID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuxiliarID);
                this.columnModuloID = new global::System.Data.DataColumn("ModuloID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModuloID);
                this.columnModulo = new global::System.Data.DataColumn("Modulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModulo);
                this.columnCuenta = new global::System.Data.DataColumn("Cuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnEfectivo = new global::System.Data.DataColumn("Efectivo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEfectivo);
                this.columnConsumos = new global::System.Data.DataColumn("Consumos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumos);
                this.columnVales = new global::System.Data.DataColumn("Vales", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVales);
                this.columnRedondeo = new global::System.Data.DataColumn("Redondeo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedondeo);
                this.columnClienteEnviarA = new global::System.Data.DataColumn("ClienteEnviarA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteEnviarA);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnSaldoDescripcion = new global::System.Data.DataColumn("SaldoDescripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcion);
                this.columnSaldoImporte = new global::System.Data.DataColumn("SaldoImporte", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporte);
                this.columnVencimiento = new global::System.Data.DataColumn("Vencimiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVencimiento);
                this.columnReferencia = new global::System.Data.DataColumn("Referencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferencia);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnRama = new global::System.Data.DataColumn("Rama", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRama);
                this.columnSubCuenta = new global::System.Data.DataColumn("SubCuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCuenta);
                this.columnEjercicio = new global::System.Data.DataColumn("Ejercicio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio);
                this.columnPeriodo = new global::System.Data.DataColumn("Periodo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodo);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.columnGrupo = new global::System.Data.DataColumn("Grupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrupo);
                this.columnMov = new global::System.Data.DataColumn("Mov", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMov);
                this.columnMovID = new global::System.Data.DataColumn("MovID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovID);
                this.columnCargo = new global::System.Data.DataColumn("Cargo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargo);
                this.columnAbono = new global::System.Data.DataColumn("Abono", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbono);
                this.columnAplica = new global::System.Data.DataColumn("Aplica", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAplica);
                this.columnAplicaID = new global::System.Data.DataColumn("AplicaID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAplicaID);
                this.columnAcumulado = new global::System.Data.DataColumn("Acumulado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcumulado);
                this.columnConciliado = new global::System.Data.DataColumn("Conciliado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConciliado);
                this.columnEsCancelacion = new global::System.Data.DataColumn("EsCancelacion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEsCancelacion);
                this.columnTipoCambio = new global::System.Data.DataColumn("TipoCambio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoCambio);
                this.columnFechaConciliacion = new global::System.Data.DataColumn("FechaConciliacion", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaConciliacion);
                this.columnSucursal = new global::System.Data.DataColumn("Sucursal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSucursal);
                this.columnCliente = new global::System.Data.DataColumn("Cliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCliente);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnNombreCorto = new global::System.Data.DataColumn("NombreCorto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombreCorto);
                this.columnNumero = new global::System.Data.DataColumn("Numero", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columnDireccion = new global::System.Data.DataColumn("Direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion);
                this.columnEntreCalles = new global::System.Data.DataColumn("EntreCalles", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntreCalles);
                this.columnPlano = new global::System.Data.DataColumn("Plano", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlano);
                this.columnObservaciones = new global::System.Data.DataColumn("Observaciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservaciones);
                this.columnColonia = new global::System.Data.DataColumn("Colonia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColonia);
                this.columnCodigoPostal = new global::System.Data.DataColumn("CodigoPostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoPostal);
                this.columnPoblacion = new global::System.Data.DataColumn("Poblacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoblacion);
                this.columnEstado = new global::System.Data.DataColumn("Estado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstado);
                this.columnPais = new global::System.Data.DataColumn("Pais", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPais);
                this.columnZona = new global::System.Data.DataColumn("Zona", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZona);
                this.columnRFC = new global::System.Data.DataColumn("RFC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFC);
                this.columnTelefonos = new global::System.Data.DataColumn("Telefonos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefonos);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnPedirTono = new global::System.Data.DataColumn("PedirTono", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPedirTono);
                this.columnContacto1 = new global::System.Data.DataColumn("Contacto1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContacto1);
                this.columnContacto2 = new global::System.Data.DataColumn("Contacto2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContacto2);
                this.columneMail1 = new global::System.Data.DataColumn("eMail1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneMail1);
                this.columneMail2 = new global::System.Data.DataColumn("eMail2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneMail2);
                this.columnDirInternet = new global::System.Data.DataColumn("DirInternet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirInternet);
                this.columnCategoria = new global::System.Data.DataColumn("Categoria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoria);
                this.columnFamilia = new global::System.Data.DataColumn("Familia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilia);
                this.columnCredito = new global::System.Data.DataColumn("Credito", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredito);
                this.columnCteGrupo = new global::System.Data.DataColumn("CteGrupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCteGrupo);
                this.columnDiaRevision1 = new global::System.Data.DataColumn("DiaRevision1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiaRevision1);
                this.columnDiaRevision2 = new global::System.Data.DataColumn("DiaRevision2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiaRevision2);
                this.columnHorarioRevision = new global::System.Data.DataColumn("HorarioRevision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHorarioRevision);
                this.columnDiaPago1 = new global::System.Data.DataColumn("DiaPago1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiaPago1);
                this.columnDiaPago2 = new global::System.Data.DataColumn("DiaPago2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiaPago2);
                this.columnHorarioPago = new global::System.Data.DataColumn("HorarioPago", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHorarioPago);
                this.columnZonaImpuesto = new global::System.Data.DataColumn("ZonaImpuesto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZonaImpuesto);
                this.columnPedidosParciales = new global::System.Data.DataColumn("PedidosParciales", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPedidosParciales);
                this.columnClase = new global::System.Data.DataColumn("Clase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClase);
                this.columnEstatus = new global::System.Data.DataColumn("Estatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstatus);
                this.columnUltimoCambio = new global::System.Data.DataColumn("UltimoCambio", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUltimoCambio);
                this.columnAlta = new global::System.Data.DataColumn("Alta", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlta);
                this.columnConciliar = new global::System.Data.DataColumn("Conciliar", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConciliar);
                this.columnDescuento = new global::System.Data.DataColumn("Descuento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescuento);
                this.columnProyecto = new global::System.Data.DataColumn("Proyecto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProyecto);
                this.columnAgente = new global::System.Data.DataColumn("Agente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgente);
                this.columnAgenteServicio = new global::System.Data.DataColumn("AgenteServicio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgenteServicio);
                this.columnEnviarA = new global::System.Data.DataColumn("EnviarA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnviarA);
                this.columnFormaEnvio = new global::System.Data.DataColumn("FormaEnvio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormaEnvio);
                this.columnCondicion = new global::System.Data.DataColumn("Condicion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondicion);
                this.columnRuta = new global::System.Data.DataColumn("Ruta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuta);
                this.columnListaPrecios = new global::System.Data.DataColumn("ListaPrecios", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListaPrecios);
                this.columnDefMoneda = new global::System.Data.DataColumn("DefMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefMoneda);
                this.columnVtasConsignacion = new global::System.Data.DataColumn("VtasConsignacion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVtasConsignacion);
                this.columnAlmacenVtasConsignacion = new global::System.Data.DataColumn("AlmacenVtasConsignacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlmacenVtasConsignacion);
                this.columnMensaje = new global::System.Data.DataColumn("Mensaje", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMensaje);
                this.columnExtencion1 = new global::System.Data.DataColumn("Extencion1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtencion1);
                this.columnExtencion2 = new global::System.Data.DataColumn("Extencion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtencion2);
                this.columnCURP = new global::System.Data.DataColumn("CURP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURP);
                this.columnDireccionNormalizada1 = new global::System.Data.DataColumn("DireccionNormalizada1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccionNormalizada1);
                this.columnDireccionNormalizada2 = new global::System.Data.DataColumn("DireccionNormalizada2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccionNormalizada2);
                this.columnDireccionNormalizada3 = new global::System.Data.DataColumn("DireccionNormalizada3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccionNormalizada3);
                this.columnDireccionNormalizada4 = new global::System.Data.DataColumn("DireccionNormalizada4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccionNormalizada4);
                this.columnDireccionNormalizada5 = new global::System.Data.DataColumn("DireccionNormalizada5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccionNormalizada5);
                this.columnDireccionNormalizada6 = new global::System.Data.DataColumn("DireccionNormalizada6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccionNormalizada6);
                this.columnDireccionNormalizada7 = new global::System.Data.DataColumn("DireccionNormalizada7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccionNormalizada7);
                this.columnDireccionNormalizada8 = new global::System.Data.DataColumn("DireccionNormalizada8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccionNormalizada8);
                this.columnCreditoEspecial = new global::System.Data.DataColumn("CreditoEspecial", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditoEspecial);
                this.columnCreditoConDias = new global::System.Data.DataColumn("CreditoConDias", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditoConDias);
                this.columnCreditoDias = new global::System.Data.DataColumn("CreditoDias", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditoDias);
                this.columnConDias = new global::System.Data.DataColumn("ConDias", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConDias);
                this.columnDias = new global::System.Data.DataColumn("Dias", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDias);
                this.columnCreditoConCondiciones = new global::System.Data.DataColumn("CreditoConCondiciones", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditoConCondiciones);
                this.columnCreditoCondiciones = new global::System.Data.DataColumn("CreditoCondiciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditoCondiciones);
                this.columnCondiciones = new global::System.Data.DataColumn("Condiciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondiciones);
                this.columnConCondiciones = new global::System.Data.DataColumn("ConCondiciones", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConCondiciones);
                this.columnCreditoConLimite = new global::System.Data.DataColumn("CreditoConLimite", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditoConLimite);
                this.columnCreditoLimite = new global::System.Data.DataColumn("CreditoLimite", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditoLimite);
                this.columnConLimiteCredito = new global::System.Data.DataColumn("ConLimiteCredito", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConLimiteCredito);
                this.columnLimiteCredito = new global::System.Data.DataColumn("LimiteCredito", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLimiteCredito);
                this.columnCreditoMoneda = new global::System.Data.DataColumn("CreditoMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditoMoneda);
                this.columnMonedaCredito = new global::System.Data.DataColumn("MonedaCredito", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonedaCredito);
                this.columnMonedaContable = new global::System.Data.DataColumn("MonedaContable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonedaContable);
                this.columnEtiqueta = new global::System.Data.DataColumn("Etiqueta", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtiqueta);
                this.columnFechaDesde = new global::System.Data.DataColumn("FechaDesde", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaDesde);
                this.columnFechaHasta = new global::System.Data.DataColumn("FechaHasta", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaHasta);
                this.columnClienteLimiteCredito = new global::System.Data.DataColumn("ClienteLimiteCredito", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteLimiteCredito);
                this.columnClienteLimiteCreditoMoneda = new global::System.Data.DataColumn("ClienteLimiteCreditoMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteLimiteCreditoMoneda);
                this.columnClienteCondicionPago = new global::System.Data.DataColumn("ClienteCondicionPago", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteCondicionPago);
                this.columnClienteCreditoDias = new global::System.Data.DataColumn("ClienteCreditoDias", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteCreditoDias);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spCorteCxcEstadoCuentaSimpleRow NewspCorteCxcEstadoCuentaSimpleRow() {
                return ((spCorteCxcEstadoCuentaSimpleRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spCorteCxcEstadoCuentaSimpleRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(spCorteCxcEstadoCuentaSimpleRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spCorteCxcEstadoCuentaSimpleRowChanged != null)) {
                    this.spCorteCxcEstadoCuentaSimpleRowChanged(this, new spCorteCxcEstadoCuentaSimpleRowChangeEvent(((spCorteCxcEstadoCuentaSimpleRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spCorteCxcEstadoCuentaSimpleRowChanging != null)) {
                    this.spCorteCxcEstadoCuentaSimpleRowChanging(this, new spCorteCxcEstadoCuentaSimpleRowChangeEvent(((spCorteCxcEstadoCuentaSimpleRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spCorteCxcEstadoCuentaSimpleRowDeleted != null)) {
                    this.spCorteCxcEstadoCuentaSimpleRowDeleted(this, new spCorteCxcEstadoCuentaSimpleRowChangeEvent(((spCorteCxcEstadoCuentaSimpleRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spCorteCxcEstadoCuentaSimpleRowDeleting != null)) {
                    this.spCorteCxcEstadoCuentaSimpleRowDeleting(this, new spCorteCxcEstadoCuentaSimpleRowChangeEvent(((spCorteCxcEstadoCuentaSimpleRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovespCorteCxcEstadoCuentaSimpleRow(spCorteCxcEstadoCuentaSimpleRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatosDataSet ds = new DatosDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spCorteCxcEstadoCuentaSimpleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class spCorteCxcEstadoCuentaSimpleRow : global::System.Data.DataRow {
            private spCorteCxcEstadoCuentaSimpleDataTable tablespCorteCxcEstadoCuentaSimple;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal spCorteCxcEstadoCuentaSimpleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespCorteCxcEstadoCuentaSimple = ((spCorteCxcEstadoCuentaSimpleDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'spCorteCxcEstadoCuentaSimple\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AuxiliarID {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.AuxiliarIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AuxiliarID\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.AuxiliarIDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModuloID {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.ModuloIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ModuloID\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ModuloIDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modulo {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ModuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Modulo\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ModuloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.CuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cuenta\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Efectivo {
                get {
                    try {
                        return ((decimal)(this[this.tablespCorteCxcEstadoCuentaSimple.EfectivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Efectivo\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EfectivoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Consumos {
                get {
                    try {
                        return ((decimal)(this[this.tablespCorteCxcEstadoCuentaSimple.ConsumosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Consumos\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ConsumosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Vales {
                get {
                    try {
                        return ((decimal)(this[this.tablespCorteCxcEstadoCuentaSimple.ValesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Vales\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ValesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Redondeo {
                get {
                    try {
                        return ((decimal)(this[this.tablespCorteCxcEstadoCuentaSimple.RedondeoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Redondeo\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.RedondeoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClienteEnviarA {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.ClienteEnviarAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ClienteEnviarA\' de la tabla \'spCorteCxcEstadoCuentaSimple" +
                                "\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ClienteEnviarAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcion {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.SaldoDescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcion\' de la tabla \'spCorteCxcEstadoCuentaSimp" +
                                "le\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.SaldoDescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SaldoImporte {
                get {
                    try {
                        return ((decimal)(this[this.tablespCorteCxcEstadoCuentaSimple.SaldoImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporte\' de la tabla \'spCorteCxcEstadoCuentaSimple\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.SaldoImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Vencimiento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespCorteCxcEstadoCuentaSimple.VencimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Vencimiento\' de la tabla \'spCorteCxcEstadoCuentaSimple\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.VencimientoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Referencia {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ReferenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Referencia\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ReferenciaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rama {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.RamaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Rama\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.RamaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubCuenta {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.SubCuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubCuenta\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.SubCuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.EjercicioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EjercicioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Periodo {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.PeriodoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Periodo\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.PeriodoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespCorteCxcEstadoCuentaSimple.FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fecha\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.FechaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grupo {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.GrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grupo\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.GrupoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mov {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.MovColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Mov\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.MovColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MovID {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.MovIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MovID\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.MovIDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cargo {
                get {
                    try {
                        return ((decimal)(this[this.tablespCorteCxcEstadoCuentaSimple.CargoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cargo\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CargoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Abono {
                get {
                    try {
                        return ((decimal)(this[this.tablespCorteCxcEstadoCuentaSimple.AbonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Abono\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.AbonoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Aplica {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.AplicaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Aplica\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.AplicaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AplicaID {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.AplicaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AplicaID\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.AplicaIDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Acumulado {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.AcumuladoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Acumulado\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.AcumuladoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Conciliado {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.ConciliadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Conciliado\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ConciliadoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EsCancelacion {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.EsCancelacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EsCancelacion\' de la tabla \'spCorteCxcEstadoCuentaSimple\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EsCancelacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TipoCambio {
                get {
                    try {
                        return ((double)(this[this.tablespCorteCxcEstadoCuentaSimple.TipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TipoCambio\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.TipoCambioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaConciliacion {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespCorteCxcEstadoCuentaSimple.FechaConciliacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaConciliacion\' de la tabla \'spCorteCxcEstadoCuentaSim" +
                                "ple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.FechaConciliacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Sucursal {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.SucursalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Sucursal\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.SucursalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cliente {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cliente\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ClienteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Nombre\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.NombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombreCorto {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.NombreCortoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NombreCorto\' de la tabla \'spCorteCxcEstadoCuentaSimple\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.NombreCortoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Numero {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.NumeroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Numero\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.NumeroColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Tipo\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.TipoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DireccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DireccionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EntreCalles {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.EntreCallesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EntreCalles\' de la tabla \'spCorteCxcEstadoCuentaSimple\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EntreCallesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Plano {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.PlanoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Plano\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.PlanoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ObservacionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Observaciones\' de la tabla \'spCorteCxcEstadoCuentaSimple\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ObservacionesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Colonia {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ColoniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Colonia\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ColoniaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodigoPostal {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.CodigoPostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CodigoPostal\' de la tabla \'spCorteCxcEstadoCuentaSimple\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CodigoPostalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Poblacion {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.PoblacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Poblacion\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.PoblacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Estado {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.EstadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estado\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EstadoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pais {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.PaisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Pais\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.PaisColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zona {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ZonaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Zona\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ZonaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RFC {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.RFCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'RFC\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.RFCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telefonos {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.TelefonosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Telefonos\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.TelefonosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Fax\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.FaxColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PedirTono {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.PedirTonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PedirTono\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.PedirTonoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contacto1 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.Contacto1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Contacto1\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.Contacto1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contacto2 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.Contacto2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Contacto2\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.Contacto2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eMail1 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.eMail1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'eMail1\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.eMail1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string eMail2 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.eMail2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'eMail2\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.eMail2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DirInternet {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DirInternetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DirInternet\' de la tabla \'spCorteCxcEstadoCuentaSimple\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DirInternetColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Categoria {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.CategoriaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Categoria\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CategoriaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Familia {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.FamiliaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Familia\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.FamiliaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Credito {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.CreditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Credito\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CreditoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CteGrupo {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.CteGrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CteGrupo\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CteGrupoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiaRevision1 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DiaRevision1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DiaRevision1\' de la tabla \'spCorteCxcEstadoCuentaSimple\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DiaRevision1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiaRevision2 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DiaRevision2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DiaRevision2\' de la tabla \'spCorteCxcEstadoCuentaSimple\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DiaRevision2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HorarioRevision {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.HorarioRevisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'HorarioRevision\' de la tabla \'spCorteCxcEstadoCuentaSimpl" +
                                "e\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.HorarioRevisionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiaPago1 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DiaPago1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DiaPago1\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DiaPago1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiaPago2 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DiaPago2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DiaPago2\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DiaPago2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HorarioPago {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.HorarioPagoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'HorarioPago\' de la tabla \'spCorteCxcEstadoCuentaSimple\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.HorarioPagoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZonaImpuesto {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ZonaImpuestoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ZonaImpuesto\' de la tabla \'spCorteCxcEstadoCuentaSimple\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ZonaImpuestoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PedidosParciales {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.PedidosParcialesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PedidosParciales\' de la tabla \'spCorteCxcEstadoCuentaSimp" +
                                "le\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.PedidosParcialesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clase {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ClaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Clase\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ClaseColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Estatus {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.EstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estatus\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EstatusColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UltimoCambio {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespCorteCxcEstadoCuentaSimple.UltimoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UltimoCambio\' de la tabla \'spCorteCxcEstadoCuentaSimple\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.UltimoCambioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Alta {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespCorteCxcEstadoCuentaSimple.AltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Alta\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.AltaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Conciliar {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.ConciliarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Conciliar\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ConciliarColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descuento {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DescuentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descuento\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DescuentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Proyecto {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ProyectoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Proyecto\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ProyectoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Agente {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.AgenteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Agente\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.AgenteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgenteServicio {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.AgenteServicioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AgenteServicio\' de la tabla \'spCorteCxcEstadoCuentaSimple" +
                                "\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.AgenteServicioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EnviarA {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.EnviarAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EnviarA\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EnviarAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FormaEnvio {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.FormaEnvioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FormaEnvio\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.FormaEnvioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condicion {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.CondicionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Condicion\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CondicionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ruta {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.RutaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ruta\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.RutaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ListaPrecios {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.ListaPreciosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ListaPrecios\' de la tabla \'spCorteCxcEstadoCuentaSimple\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ListaPreciosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DefMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DefMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DefMoneda\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DefMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VtasConsignacion {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.VtasConsignacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VtasConsignacion\' de la tabla \'spCorteCxcEstadoCuentaSimp" +
                                "le\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.VtasConsignacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AlmacenVtasConsignacion {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.AlmacenVtasConsignacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'AlmacenVtasConsignacion\' de la tabla \'spCorteCxcEstadoCue" +
                                "ntaSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.AlmacenVtasConsignacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mensaje {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.MensajeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Mensaje\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.MensajeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Extencion1 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.Extencion1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Extencion1\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.Extencion1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Extencion2 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.Extencion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Extencion2\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.Extencion2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURP {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.CURPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CURP\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CURPColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DireccionNormalizada1 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DireccionNormalizada1\' de la tabla \'spCorteCxcEstadoCuent" +
                                "aSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DireccionNormalizada2 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DireccionNormalizada2\' de la tabla \'spCorteCxcEstadoCuent" +
                                "aSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DireccionNormalizada3 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DireccionNormalizada3\' de la tabla \'spCorteCxcEstadoCuent" +
                                "aSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DireccionNormalizada4 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DireccionNormalizada4\' de la tabla \'spCorteCxcEstadoCuent" +
                                "aSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DireccionNormalizada5 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DireccionNormalizada5\' de la tabla \'spCorteCxcEstadoCuent" +
                                "aSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada5Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DireccionNormalizada6 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DireccionNormalizada6\' de la tabla \'spCorteCxcEstadoCuent" +
                                "aSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada6Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DireccionNormalizada7 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DireccionNormalizada7\' de la tabla \'spCorteCxcEstadoCuent" +
                                "aSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada7Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DireccionNormalizada8 {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DireccionNormalizada8\' de la tabla \'spCorteCxcEstadoCuent" +
                                "aSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada8Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CreditoEspecial {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.CreditoEspecialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CreditoEspecial\' de la tabla \'spCorteCxcEstadoCuentaSimpl" +
                                "e\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CreditoEspecialColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CreditoConDias {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.CreditoConDiasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CreditoConDias\' de la tabla \'spCorteCxcEstadoCuentaSimple" +
                                "\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CreditoConDiasColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CreditoDias {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.CreditoDiasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CreditoDias\' de la tabla \'spCorteCxcEstadoCuentaSimple\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CreditoDiasColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ConDias {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.ConDiasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ConDias\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ConDiasColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Dias {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.DiasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Dias\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.DiasColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CreditoConCondiciones {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.CreditoConCondicionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CreditoConCondiciones\' de la tabla \'spCorteCxcEstadoCuent" +
                                "aSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CreditoConCondicionesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreditoCondiciones {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.CreditoCondicionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CreditoCondiciones\' de la tabla \'spCorteCxcEstadoCuentaSi" +
                                "mple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CreditoCondicionesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condiciones {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.CondicionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Condiciones\' de la tabla \'spCorteCxcEstadoCuentaSimple\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CondicionesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ConCondiciones {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.ConCondicionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ConCondiciones\' de la tabla \'spCorteCxcEstadoCuentaSimple" +
                                "\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ConCondicionesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CreditoConLimite {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.CreditoConLimiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CreditoConLimite\' de la tabla \'spCorteCxcEstadoCuentaSimp" +
                                "le\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CreditoConLimiteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CreditoLimite {
                get {
                    try {
                        return ((decimal)(this[this.tablespCorteCxcEstadoCuentaSimple.CreditoLimiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CreditoLimite\' de la tabla \'spCorteCxcEstadoCuentaSimple\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CreditoLimiteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ConLimiteCredito {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.ConLimiteCreditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ConLimiteCredito\' de la tabla \'spCorteCxcEstadoCuentaSimp" +
                                "le\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ConLimiteCreditoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LimiteCredito {
                get {
                    try {
                        return ((decimal)(this[this.tablespCorteCxcEstadoCuentaSimple.LimiteCreditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'LimiteCredito\' de la tabla \'spCorteCxcEstadoCuentaSimple\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.LimiteCreditoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreditoMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.CreditoMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CreditoMoneda\' de la tabla \'spCorteCxcEstadoCuentaSimple\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.CreditoMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonedaCredito {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.MonedaCreditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MonedaCredito\' de la tabla \'spCorteCxcEstadoCuentaSimple\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.MonedaCreditoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MonedaContable {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.MonedaContableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MonedaContable\' de la tabla \'spCorteCxcEstadoCuentaSimple" +
                                "\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.MonedaContableColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Etiqueta {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.EtiquetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Etiqueta\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.EtiquetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaDesde {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespCorteCxcEstadoCuentaSimple.FechaDesdeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaDesde\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.FechaDesdeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaHasta {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespCorteCxcEstadoCuentaSimple.FechaHastaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaHasta\' de la tabla \'spCorteCxcEstadoCuentaSimple\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.FechaHastaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ClienteLimiteCredito {
                get {
                    try {
                        return ((decimal)(this[this.tablespCorteCxcEstadoCuentaSimple.ClienteLimiteCreditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ClienteLimiteCredito\' de la tabla \'spCorteCxcEstadoCuenta" +
                                "Simple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ClienteLimiteCreditoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClienteLimiteCreditoMoneda {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ClienteLimiteCreditoMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ClienteLimiteCreditoMoneda\' de la tabla \'spCorteCxcEstado" +
                                "CuentaSimple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ClienteLimiteCreditoMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClienteCondicionPago {
                get {
                    try {
                        return ((string)(this[this.tablespCorteCxcEstadoCuentaSimple.ClienteCondicionPagoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ClienteCondicionPago\' de la tabla \'spCorteCxcEstadoCuenta" +
                                "Simple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ClienteCondicionPagoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClienteCreditoDias {
                get {
                    try {
                        return ((int)(this[this.tablespCorteCxcEstadoCuentaSimple.ClienteCreditoDiasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ClienteCreditoDias\' de la tabla \'spCorteCxcEstadoCuentaSi" +
                                "mple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.ClienteCreditoDiasColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.tablespCorteCxcEstadoCuentaSimple.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'spCorteCxcEstadoCuentaSim" +
                                "ple\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tablespCorteCxcEstadoCuentaSimple.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuxiliarIDNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.AuxiliarIDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuxiliarIDNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.AuxiliarIDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuloIDNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ModuloIDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuloIDNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ModuloIDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuloNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ModuloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuloNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ModuloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuentaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuentaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEfectivoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EfectivoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEfectivoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EfectivoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumosNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ConsumosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsumosNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ConsumosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValesNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ValesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValesNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ValesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRedondeoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.RedondeoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRedondeoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.RedondeoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClienteEnviarANull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ClienteEnviarAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClienteEnviarANull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ClienteEnviarAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.SaldoDescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.SaldoDescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.SaldoImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.SaldoImporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVencimientoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.VencimientoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVencimientoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.VencimientoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenciaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ReferenciaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenciaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ReferenciaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRamaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.RamaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRamaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.RamaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubCuentaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.SubCuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubCuentaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.SubCuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicioNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EjercicioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicioNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EjercicioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.PeriodoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.PeriodoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.FechaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.FechaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrupoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.GrupoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrupoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.GrupoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.MovColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.MovColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovIDNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.MovIDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovIDNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.MovIDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CargoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CargoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.AbonoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.AbonoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAplicaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.AplicaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAplicaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.AplicaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAplicaIDNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.AplicaIDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAplicaIDNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.AplicaIDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcumuladoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.AcumuladoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcumuladoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.AcumuladoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConciliadoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ConciliadoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConciliadoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ConciliadoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEsCancelacionNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EsCancelacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEsCancelacionNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EsCancelacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoCambioNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.TipoCambioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoCambioNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.TipoCambioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaConciliacionNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.FechaConciliacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaConciliacionNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.FechaConciliacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSucursalNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.SucursalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSucursalNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.SucursalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClienteNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ClienteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClienteNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ClienteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.NombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.NombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreCortoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.NombreCortoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreCortoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.NombreCortoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.NumeroColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.NumeroColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.TipoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.TipoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DireccionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DireccionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntreCallesNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EntreCallesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntreCallesNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EntreCallesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlanoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.PlanoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlanoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.PlanoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObservacionesNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ObservacionesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObservacionesNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ObservacionesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColoniaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ColoniaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColoniaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ColoniaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoPostalNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CodigoPostalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoPostalNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CodigoPostalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoblacionNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.PoblacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoblacionNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.PoblacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstadoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EstadoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstadoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EstadoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaisNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.PaisColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaisNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.PaisColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZonaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ZonaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZonaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ZonaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRFCNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.RFCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRFCNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.RFCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefonosNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.TelefonosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefonosNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.TelefonosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.FaxColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.FaxColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPedirTonoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.PedirTonoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPedirTonoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.PedirTonoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContacto1Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.Contacto1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContacto1Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.Contacto1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContacto2Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.Contacto2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContacto2Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.Contacto2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseMail1Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.eMail1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteMail1Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.eMail1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseMail2Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.eMail2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteMail2Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.eMail2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirInternetNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DirInternetColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirInternetNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DirInternetColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoriaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CategoriaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoriaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CategoriaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamiliaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.FamiliaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamiliaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.FamiliaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CreditoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CreditoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCteGrupoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CteGrupoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCteGrupoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CteGrupoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiaRevision1Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DiaRevision1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiaRevision1Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DiaRevision1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiaRevision2Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DiaRevision2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiaRevision2Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DiaRevision2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHorarioRevisionNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.HorarioRevisionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHorarioRevisionNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.HorarioRevisionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiaPago1Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DiaPago1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiaPago1Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DiaPago1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiaPago2Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DiaPago2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiaPago2Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DiaPago2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHorarioPagoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.HorarioPagoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHorarioPagoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.HorarioPagoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZonaImpuestoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ZonaImpuestoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZonaImpuestoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ZonaImpuestoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPedidosParcialesNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.PedidosParcialesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPedidosParcialesNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.PedidosParcialesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClaseNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ClaseColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClaseNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ClaseColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstatusNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EstatusColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstatusNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EstatusColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUltimoCambioNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.UltimoCambioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUltimoCambioNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.UltimoCambioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAltaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.AltaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAltaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.AltaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConciliarNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ConciliarColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConciliarNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ConciliarColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescuentoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DescuentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescuentoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DescuentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProyectoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ProyectoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProyectoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ProyectoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgenteNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.AgenteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgenteNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.AgenteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgenteServicioNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.AgenteServicioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgenteServicioNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.AgenteServicioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnviarANull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EnviarAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnviarANull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EnviarAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormaEnvioNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.FormaEnvioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormaEnvioNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.FormaEnvioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondicionNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CondicionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondicionNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CondicionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRutaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.RutaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRutaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.RutaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListaPreciosNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ListaPreciosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListaPreciosNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ListaPreciosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefMonedaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DefMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDefMonedaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DefMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVtasConsignacionNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.VtasConsignacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVtasConsignacionNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.VtasConsignacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlmacenVtasConsignacionNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.AlmacenVtasConsignacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlmacenVtasConsignacionNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.AlmacenVtasConsignacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMensajeNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.MensajeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMensajeNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.MensajeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtencion1Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.Extencion1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtencion1Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.Extencion1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtencion2Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.Extencion2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtencion2Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.Extencion2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCURPNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CURPColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCURPNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CURPColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNormalizada1Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNormalizada1Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNormalizada2Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNormalizada2Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNormalizada3Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNormalizada3Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNormalizada4Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNormalizada4Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNormalizada5Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada5Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNormalizada5Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada5Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNormalizada6Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada6Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNormalizada6Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada6Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNormalizada7Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada7Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNormalizada7Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada7Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNormalizada8Null() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada8Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNormalizada8Null() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DireccionNormalizada8Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditoEspecialNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CreditoEspecialColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditoEspecialNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CreditoEspecialColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditoConDiasNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CreditoConDiasColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditoConDiasNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CreditoConDiasColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditoDiasNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CreditoDiasColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditoDiasNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CreditoDiasColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConDiasNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ConDiasColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConDiasNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ConDiasColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiasNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.DiasColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiasNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.DiasColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditoConCondicionesNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CreditoConCondicionesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditoConCondicionesNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CreditoConCondicionesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditoCondicionesNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CreditoCondicionesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditoCondicionesNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CreditoCondicionesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondicionesNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CondicionesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondicionesNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CondicionesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConCondicionesNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ConCondicionesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConCondicionesNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ConCondicionesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditoConLimiteNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CreditoConLimiteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditoConLimiteNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CreditoConLimiteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditoLimiteNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CreditoLimiteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditoLimiteNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CreditoLimiteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConLimiteCreditoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ConLimiteCreditoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConLimiteCreditoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ConLimiteCreditoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLimiteCreditoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.LimiteCreditoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLimiteCreditoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.LimiteCreditoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditoMonedaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.CreditoMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditoMonedaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.CreditoMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaCreditoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.MonedaCreditoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaCreditoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.MonedaCreditoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaContableNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.MonedaContableColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaContableNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.MonedaContableColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEtiquetaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.EtiquetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEtiquetaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.EtiquetaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaDesdeNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.FechaDesdeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaDesdeNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.FechaDesdeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaHastaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.FechaHastaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaHastaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.FechaHastaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClienteLimiteCreditoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ClienteLimiteCreditoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClienteLimiteCreditoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ClienteLimiteCreditoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClienteLimiteCreditoMonedaNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ClienteLimiteCreditoMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClienteLimiteCreditoMonedaNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ClienteLimiteCreditoMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClienteCondicionPagoNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ClienteCondicionPagoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClienteCondicionPagoNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ClienteCondicionPagoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClienteCreditoDiasNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.ClienteCreditoDiasColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClienteCreditoDiasNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.ClienteCreditoDiasColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.tablespCorteCxcEstadoCuentaSimple.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.tablespCorteCxcEstadoCuentaSimple.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class spCorteCxcEstadoCuentaSimpleRowChangeEvent : global::System.EventArgs {
            private spCorteCxcEstadoCuentaSimpleRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spCorteCxcEstadoCuentaSimpleRowChangeEvent(spCorteCxcEstadoCuentaSimpleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public spCorteCxcEstadoCuentaSimpleRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatos_2DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatos_2DataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatos_2DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatos_2DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatos_2DataSet cln = ((dsDatos_2DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatos_2DataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatos_2DataSet ds = new dsDatos_2DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnModulo;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnCuenta;
            private global::System.Data.DataColumn columnSaldoDescripcion;
            private global::System.Data.DataColumn columnSaldoImporte;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuloColumn {
                get {
                    return this.columnModulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CuentaColumn {
                get {
                    return this.columnCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionColumn {
                get {
                    return this.columnSaldoDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteColumn {
                get {
                    return this.columnSaldoImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(int Estacion, string Empresa, int ID, bool Grafica, string Modulo, string Moneda, string Cuenta, string SaldoDescripcion, double SaldoImporte) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        Empresa,
                        ID,
                        Grafica,
                        Modulo,
                        Moneda,
                        Cuenta,
                        SaldoDescripcion,
                        SaldoImporte};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnID = base.Columns["ID"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnModulo = base.Columns["Modulo"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnCuenta = base.Columns["Cuenta"];
                this.columnSaldoDescripcion = base.Columns["SaldoDescripcion"];
                this.columnSaldoImporte = base.Columns["SaldoImporte"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnModulo = new global::System.Data.DataColumn("Modulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModulo);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnCuenta = new global::System.Data.DataColumn("Cuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta);
                this.columnSaldoDescripcion = new global::System.Data.DataColumn("SaldoDescripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcion);
                this.columnSaldoImporte = new global::System.Data.DataColumn("SaldoImporte", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporte);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatos_2DataSet ds = new dsDatos_2DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.table_Table.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica {
                get {
                    try {
                        return ((bool)(this[this.table_Table.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.ModuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Modulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ModuloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta {
                get {
                    try {
                        return ((string)(this[this.table_Table.CuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cuenta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.SaldoDescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoDescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoImporte {
                get {
                    try {
                        return ((double)(this[this.table_Table.SaldoImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.table_Table.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.table_Table.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.table_Table.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.table_Table.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table_Table.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table_Table.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.table_Table.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.table_Table.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuloNull() {
                return this.IsNull(this.table_Table.ModuloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuloNull() {
                this[this.table_Table.ModuloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.table_Table.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.table_Table.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuentaNull() {
                return this.IsNull(this.table_Table.CuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuentaNull() {
                this[this.table_Table.CuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionNull() {
                return this.IsNull(this.table_Table.SaldoDescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionNull() {
                this[this.table_Table.SaldoDescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteNull() {
                return this.IsNull(this.table_Table.SaldoImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteNull() {
                this[this.table_Table.SaldoImporteColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatos_1DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatos_1DataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatos_1DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatos_1DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatos_1DataSet cln = ((dsDatos_1DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatos_1DataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatos_1DataSet ds = new dsDatos_1DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnModulo;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnCuenta;
            private global::System.Data.DataColumn columnSaldoDescripcion;
            private global::System.Data.DataColumn columnSaldoImporte;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuloColumn {
                get {
                    return this.columnModulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CuentaColumn {
                get {
                    return this.columnCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionColumn {
                get {
                    return this.columnSaldoDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteColumn {
                get {
                    return this.columnSaldoImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(int Estacion, string Empresa, int ID, bool Grafica, string Modulo, string Moneda, string Cuenta, string SaldoDescripcion, double SaldoImporte) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        Empresa,
                        ID,
                        Grafica,
                        Modulo,
                        Moneda,
                        Cuenta,
                        SaldoDescripcion,
                        SaldoImporte};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnID = base.Columns["ID"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnModulo = base.Columns["Modulo"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnCuenta = base.Columns["Cuenta"];
                this.columnSaldoDescripcion = base.Columns["SaldoDescripcion"];
                this.columnSaldoImporte = base.Columns["SaldoImporte"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnModulo = new global::System.Data.DataColumn("Modulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModulo);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnCuenta = new global::System.Data.DataColumn("Cuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta);
                this.columnSaldoDescripcion = new global::System.Data.DataColumn("SaldoDescripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcion);
                this.columnSaldoImporte = new global::System.Data.DataColumn("SaldoImporte", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporte);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatos_1DataSet ds = new dsDatos_1DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.table_Table.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica {
                get {
                    try {
                        return ((bool)(this[this.table_Table.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.ModuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Modulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ModuloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta {
                get {
                    try {
                        return ((string)(this[this.table_Table.CuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cuenta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.SaldoDescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoDescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoImporte {
                get {
                    try {
                        return ((double)(this[this.table_Table.SaldoImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.table_Table.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.table_Table.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.table_Table.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.table_Table.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table_Table.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table_Table.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.table_Table.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.table_Table.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuloNull() {
                return this.IsNull(this.table_Table.ModuloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuloNull() {
                this[this.table_Table.ModuloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.table_Table.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.table_Table.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuentaNull() {
                return this.IsNull(this.table_Table.CuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuentaNull() {
                this[this.table_Table.CuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionNull() {
                return this.IsNull(this.table_Table.SaldoDescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionNull() {
                this[this.table_Table.SaldoDescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteNull() {
                return this.IsNull(this.table_Table.SaldoImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteNull() {
                this[this.table_Table.SaldoImporteColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDatosDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDatosDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDatosDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDatosDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDatosDataSet cln = ((dsDatosDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDatosDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDatosDataSet ds = new dsDatosDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnModulo;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnCuenta;
            private global::System.Data.DataColumn columnSaldoDescripcion;
            private global::System.Data.DataColumn columnSaldoImporte;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuloColumn {
                get {
                    return this.columnModulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CuentaColumn {
                get {
                    return this.columnCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionColumn {
                get {
                    return this.columnSaldoDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteColumn {
                get {
                    return this.columnSaldoImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(int Estacion, string Empresa, int ID, bool Grafica, string Modulo, string Moneda, string Cuenta, string SaldoDescripcion, double SaldoImporte) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        Empresa,
                        ID,
                        Grafica,
                        Modulo,
                        Moneda,
                        Cuenta,
                        SaldoDescripcion,
                        SaldoImporte};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnID = base.Columns["ID"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnModulo = base.Columns["Modulo"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnCuenta = base.Columns["Cuenta"];
                this.columnSaldoDescripcion = base.Columns["SaldoDescripcion"];
                this.columnSaldoImporte = base.Columns["SaldoImporte"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnModulo = new global::System.Data.DataColumn("Modulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModulo);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnCuenta = new global::System.Data.DataColumn("Cuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta);
                this.columnSaldoDescripcion = new global::System.Data.DataColumn("SaldoDescripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcion);
                this.columnSaldoImporte = new global::System.Data.DataColumn("SaldoImporte", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporte);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDatosDataSet ds = new dsDatosDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.table_Table.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica {
                get {
                    try {
                        return ((bool)(this[this.table_Table.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.ModuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Modulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ModuloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta {
                get {
                    try {
                        return ((string)(this[this.table_Table.CuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cuenta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.SaldoDescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoDescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoImporte {
                get {
                    try {
                        return ((double)(this[this.table_Table.SaldoImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.table_Table.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.table_Table.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.table_Table.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.table_Table.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table_Table.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table_Table.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.table_Table.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.table_Table.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuloNull() {
                return this.IsNull(this.table_Table.ModuloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuloNull() {
                this[this.table_Table.ModuloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.table_Table.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.table_Table.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuentaNull() {
                return this.IsNull(this.table_Table.CuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuentaNull() {
                this[this.table_Table.CuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionNull() {
                return this.IsNull(this.table_Table.SaldoDescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionNull() {
                this[this.table_Table.SaldoDescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteNull() {
                return this.IsNull(this.table_Table.SaldoImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteNull() {
                this[this.table_Table.SaldoImporteColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GraficaDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GraficaDataSet : global::System.Data.DataSet {
        private @__DataTable table__;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GraficaDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected GraficaDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["*"] != null)) {
                    base.Tables.Add(new @__DataTable(ds.Tables["*"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public @__DataTable __ {
            get {
                return this.table__;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            GraficaDataSet cln = ((GraficaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["*"] != null)) {
                    base.Tables.Add(new @__DataTable(ds.Tables["*"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table__ = ((@__DataTable)(base.Tables["*"]));
            if ((initTable == true)) {
                if ((this.table__ != null)) {
                    this.table__.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "GraficaDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table__ = new @__DataTable();
            base.Tables.Add(this.table__);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize__() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GraficaDataSet ds = new GraficaDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void @__RowChangeEventHandler(object sender, @__RowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class @__DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnGrafica;
            private global::System.Data.DataColumn columnModulo;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnCuenta;
            private global::System.Data.DataColumn columnSaldoDescripcion;
            private global::System.Data.DataColumn columnSaldoImporte;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public @__DataTable() {
                this.TableName = "*";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal @__DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected @__DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaColumn {
                get {
                    return this.columnGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModuloColumn {
                get {
                    return this.columnModulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CuentaColumn {
                get {
                    return this.columnCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionColumn {
                get {
                    return this.columnSaldoDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteColumn {
                get {
                    return this.columnSaldoImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public @__Row this[int index] {
                get {
                    return ((@__Row)(this.Rows[index]));
                }
            }
            public event @__RowChangeEventHandler @__RowChanging;
            public event @__RowChangeEventHandler @__RowChanged;
            public event @__RowChangeEventHandler @__RowDeleting;
            public event @__RowChangeEventHandler @__RowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add__Row(@__Row row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public @__Row Add__Row(int Estacion, string Empresa, int ID, bool Grafica, string Modulo, string Moneda, string Cuenta, string SaldoDescripcion, double SaldoImporte) {
                @__Row row__Row = ((@__Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        Empresa,
                        ID,
                        Grafica,
                        Modulo,
                        Moneda,
                        Cuenta,
                        SaldoDescripcion,
                        SaldoImporte};
                row__Row.ItemArray = columnValuesArray;
                this.Rows.Add(row__Row);
                return row__Row;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                @__DataTable cln = ((@__DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new @__DataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnID = base.Columns["ID"];
                this.columnGrafica = base.Columns["Grafica"];
                this.columnModulo = base.Columns["Modulo"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnCuenta = base.Columns["Cuenta"];
                this.columnSaldoDescripcion = base.Columns["SaldoDescripcion"];
                this.columnSaldoImporte = base.Columns["SaldoImporte"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnGrafica = new global::System.Data.DataColumn("Grafica", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica);
                this.columnModulo = new global::System.Data.DataColumn("Modulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModulo);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnCuenta = new global::System.Data.DataColumn("Cuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta);
                this.columnSaldoDescripcion = new global::System.Data.DataColumn("SaldoDescripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcion);
                this.columnSaldoImporte = new global::System.Data.DataColumn("SaldoImporte", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporte);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public @__Row New__Row() {
                return ((@__Row)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new @__Row(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(@__Row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.@__RowChanged != null)) {
                    this.@__RowChanged(this, new @__RowChangeEvent(((@__Row)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.@__RowChanging != null)) {
                    this.@__RowChanging(this, new @__RowChangeEvent(((@__Row)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.@__RowDeleted != null)) {
                    this.@__RowDeleted(this, new @__RowChangeEvent(((@__Row)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.@__RowDeleting != null)) {
                    this.@__RowDeleting(this, new @__RowChangeEvent(((@__Row)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove__Row(@__Row row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GraficaDataSet ds = new GraficaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "__DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class @__Row : global::System.Data.DataRow {
            private @__DataTable table__;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal @__Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table__ = ((@__DataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.table__.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'*\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table__.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.table__.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'*\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table__.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table__.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'*\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table__.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica {
                get {
                    try {
                        return ((bool)(this[this.table__.GraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica\' de la tabla \'*\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table__.GraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modulo {
                get {
                    try {
                        return ((string)(this[this.table__.ModuloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Modulo\' de la tabla \'*\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table__.ModuloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.table__.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'*\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table__.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta {
                get {
                    try {
                        return ((string)(this[this.table__.CuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cuenta\' de la tabla \'*\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table__.CuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcion {
                get {
                    try {
                        return ((string)(this[this.table__.SaldoDescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcion\' de la tabla \'*\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table__.SaldoDescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SaldoImporte {
                get {
                    try {
                        return ((double)(this[this.table__.SaldoImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporte\' de la tabla \'*\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table__.SaldoImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.table__.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.table__.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.table__.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.table__.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table__.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table__.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaNull() {
                return this.IsNull(this.table__.GraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaNull() {
                this[this.table__.GraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModuloNull() {
                return this.IsNull(this.table__.ModuloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModuloNull() {
                this[this.table__.ModuloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.table__.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.table__.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuentaNull() {
                return this.IsNull(this.table__.CuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuentaNull() {
                this[this.table__.CuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionNull() {
                return this.IsNull(this.table__.SaldoDescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionNull() {
                this[this.table__.SaldoDescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteNull() {
                return this.IsNull(this.table__.SaldoImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteNull() {
                this[this.table__.SaldoImporteColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class @__RowChangeEvent : global::System.EventArgs {
            private @__Row eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public @__RowChangeEvent(@__Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public @__Row Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
