/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformemisUtilidadAgentes : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label78;
        private DevExpress.XtraReports.UI.XRLabel label72;
        private DevExpress.XtraReports.UI.XRLabel label58;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.XRLabel label55;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.PageFooterBand pageFooterBand1;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.ReportHeaderBand reportHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label32;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.XRLabel label41;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo3;
        private DevExpress.XtraReports.UI.XRLabel label198;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private XtraReportSerialization.RepVentaNetaDataSet RepVentaNeta;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRLabel label98;
        private DevExpress.XtraReports.UI.XRLabel label97;
        private DevExpress.XtraReports.UI.XRLabel label77;
        private DevExpress.XtraReports.UI.XRLabel label71;
        private DevExpress.XtraReports.UI.XRLabel label48;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLabel label81;
        private DevExpress.XtraReports.UI.XRLabel label75;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label57;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter2;
        private DevExpress.XtraReports.UI.XRLabel label80;
        private DevExpress.XtraReports.UI.XRLabel label74;
        private DevExpress.XtraReports.UI.XRLabel label63;
        private DevExpress.XtraReports.UI.XRLabel label64;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLabel label62;
        private DevExpress.XtraReports.UI.XRLabel label59;
        private DevExpress.XtraReports.UI.XRLabel label60;
        private DevExpress.XtraReports.UI.XRLabel label61;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter3;
        private DevExpress.XtraReports.UI.XRLabel label84;
        private DevExpress.XtraReports.UI.XRLabel label70;
        private DevExpress.XtraReports.UI.XRLabel label79;
        private DevExpress.XtraReports.UI.XRLabel label73;
        private DevExpress.XtraReports.UI.XRLabel label52;
        private DevExpress.XtraReports.UI.XRLabel label53;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.XRLabel label51;
        private DevExpress.XtraReports.UI.XRLabel label47;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private DevExpress.XtraReports.UI.XRLabel label50;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter4;
        private DevExpress.XtraReports.UI.XRLabel label82;
        private DevExpress.XtraReports.UI.XRLabel label76;
        private DevExpress.XtraReports.UI.XRLabel label68;
        private DevExpress.XtraReports.UI.XRLabel label69;
        private DevExpress.XtraReports.UI.XRLine line10;
        private DevExpress.XtraReports.UI.XRLabel label67;
        private DevExpress.XtraReports.UI.XRLabel label54;
        private DevExpress.XtraReports.UI.XRLabel label65;
        private DevExpress.XtraReports.UI.XRLabel label66;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader2;
        private DevExpress.XtraReports.UI.XRLine line12;
        private DevExpress.XtraReports.UI.XRLine line11;
        private DevExpress.XtraReports.UI.XRLabel label92;
        private DevExpress.XtraReports.UI.XRLabel label91;
        private DevExpress.XtraReports.UI.XRLabel label94;
        private DevExpress.XtraReports.UI.XRLabel label93;
        private DevExpress.XtraReports.UI.XRLabel label90;
        private DevExpress.XtraReports.UI.XRLabel label87;
        private DevExpress.XtraReports.UI.XRLabel label86;
        private DevExpress.XtraReports.UI.XRLabel label89;
        private DevExpress.XtraReports.UI.XRLabel label88;
        private System.Data.OleDb.OleDbDataAdapter TableTableAdapter;
        private System.Data.OleDb.OleDbCommand oleDbCommand1;
        private System.Data.OleDb.OleDbConnection oleDbConnection1;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField Movimiento;
        private DevExpress.XtraReports.UI.CalculatedField PorcentajeC;
        private DevExpress.XtraReports.UI.CalculatedField PorcentajeCD;
        private DevExpress.XtraReports.UI.CalculatedField PorcentajeSubTotal;
        private DevExpress.XtraReports.UI.CalculatedField CostoTotal;
        private DevExpress.XtraReports.UI.CalculatedField ImporteTotal;
        private DevExpress.XtraReports.UI.CalculatedField PorcentajeTotal;
        private System.Resources.ResourceManager _resources;
        public InformemisUtilidadAgentes() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAACAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsHnWR03AAAAACsAAAB+AQAAJ" +
                        "iQAdABoAGkAcwAuAFMAYwByAGkAcAB0AHMAUwBvAHUAcgBjAGUAAAAAACJwAGkAYwB0AHUAcgBlAEIAb" +
                        "wB4ADIALgBJAG0AYQBnAGUALg0AAAGrGg0KRElNIENvc3RvVG90YWwxIEFTIERPVUJMRSA9IDANCkRJT" +
                        "SBJbXBvcnRlVG90YWwxIEFTIERPVUJMRSA9IDANCkRJTSBDb3N0b1N1YlRvdGFsMSBBUyBET1VCTEUgP" +
                        "SAwDQpESU0gSW1wb3J0ZVN1YlRvdGFsMSBBUyBET1VCTEUgPSAwDQpESU0gQ2FudGlkYWRUb3RhbDEgQ" +
                        "VMgRE9VQkxFID0gMA0KRElNIFV0aWxpZGFkVG90YWwxIEFTIERPVUJMRSA9IDANCkRJTSBDb21pc2lvb" +
                        "lRvdGFsMSBBUyBET1VCTEUgPSAwDQoNClByaXZhdGUgU3ViIFBhZ2VIZWFkZXJfQmVmb3JlUHJpbnQoQ" +
                        "nlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5Qc" +
                        "mludEV2ZW50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkdyYWZpY2EyIikgPSAxI" +
                        "FRIRU4NCiAgICAgZS5DYW5jZWwgPSBUcnVlDQogIEVMU0UNCiAgICBlLkNhbmNlbCA9IEZhbHNlDQogI" +
                        "EVORCBJRg0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViIEdyb3VwSGVhZGVyMV9CZWZvcmVQcmludChCe" +
                        "VZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlBya" +
                        "W50RXZlbnRBcmdzKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYTEiKSA9IDEgV" +
                        "EhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRQ0KICAgICBJRiBHZXRDdXJyZW50Q29sdW1uV" +
                        "mFsdWUoIkRlc2dsb3NhciIpID0gIlNpIiBUSEVODQogICAgICAgIGUuQ2FuY2VsID0gVHJ1ZQ0KICAgI" +
                        "CBFTFNFDQogICAgICAgIGUuQ2FuY2VsID0gRmFsc2UNCiAgICAgRU5EIElGIA0KICBFTkQgSUYgDQoNC" +
                        "kVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgRGV0YWlsX0JlZm9yZVByaW50XzEoQnlWYWwgc2VuZGVyIEFzI" +
                        "E9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNC" +
                        "g0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkdyYWZpY2ExIikgPSAxIFRIRU4NCiAgICAgZS5DY" +
                        "W5jZWwgPSBUcnVlDQogIEVMU0UNCiAgICAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJEZXNnbG9zY" +
                        "XIiKSA9ICJObyIgVEhFTg0KICAgICAgICBlLkNhbmNlbCA9IFRydWUNCiAgICAgRUxTRQ0KICAgICAgI" +
                        "CBlLkNhbmNlbCA9IEZhbHNlDQogICAgIEVORCBJRiANCiAgRU5EIElGIA0KDQpFbmQgU3ViDQoNClBya" +
                        "XZhdGUgU3ViIGxhYmVsOTRfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZ" +
                        "SBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KICAgSUYgR2V0Q3Vyc" +
                        "mVudENvbHVtblZhbHVlKCJEZXNnbG9zYXIyIikgPSAiTm8iIFRIRU4NCiAgICAgIGUuQ2FuY2VsID0gV" +
                        "HJ1ZQ0KICAgRUxTRQ0KICAgICAgZS5DYW5jZWwgPSBGYWxzZQ0KICAgRU5EIElGIA0KDQpFbmQgU3ViD" +
                        "QoNCg0KUHJpdmF0ZSBTdWIgY2hhcnQxX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBcyBPYmplY3QsI" +
                        "EJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpDQoNCiAnU2kgZ" +
                        "WwgdmFsb3IgZGVsIGNhbXBvIEFnZW50ZSBlcyBudWxsIG5vIHNlIG11ZXN0cmEgDQogIElGIEdldEN1c" +
                        "nJlbnRDb2x1bW5WYWx1ZSgiQWdlbnRlIikgSVMgTk9USElORyBUSEVODQogICAgIGUuQ2FuY2VsID0gV" +
                        "HJ1ZSAgICANCiAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0dlbmVyYSB1biBvYmpldG8gcXVlIHJlc" +
                        "HJlc2VudGEgYSBsYSBncsOhZmljYQ0KICBEaW0gR3JhZmljYTEgQXMgWFJDaGFydCA9IENUeXBlKHNlb" +
                        "mRlcixYUkNoYXJ0KQ0KDQogICdPY3VsdGEgbyBtdWVzdHJhIGxhcyBldGlxdWV0YXMgZGUgbGEgZ3JhZ" +
                        "mljYQ0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkV0aXF1ZXRhIikgPSBGYWxzZSBUSEVODQogI" +
                        "CAgIEdyYWZpY2ExLlNlcmllc1RlbXBsYXRlLkxhYmVsLlZpc2libGUgPSBGYWxzZQ0KICBFTFNFDQogI" +
                        "CAgIEdyYWZpY2ExLlNlcmllc1RlbXBsYXRlLkxhYmVsLlZpc2libGUgPSBUcnVlDQogIEVORCBJRg0KD" +
                        "QpFbmQgU3ViDQoNCg0KUHJpdmF0ZSBTdWIgUG9yY2VudGFqZVN1YlRvdGFsX0dldFZhbHVlKEJ5VmFsI" +
                        "HNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgRGV2RXhwcmVzcy5YdHJhUmVwb3J0cy5VSS5HZXRWY" +
                        "Wx1ZUV2ZW50QXJncykNCiAgDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiQ29zdG9OZXRvIikgP" +
                        "D4gMCBUSEVODQogICAgZS52YWx1ZSA9IChHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkltcG9ydGVOZXRvI" +
                        "ikvR2V0Q3VycmVudENvbHVtblZhbHVlKCJDb3N0b05ldG8iKSktMQ0KICBFTFNFDQogICAgZS52YWx1Z" +
                        "SA9IDENCiAgRU5EIElGDQoNCkVuZCBTdWINCg0KDQpQcml2YXRlIFN1YiBDb3N0b1RvdGFsX0dldFZhb" +
                        "HVlKEJ5VmFsIHNlbmRlciBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgRGV2RXhwcmVzcy5YdHJhUmVwb3J0c" +
                        "y5VSS5HZXRWYWx1ZUV2ZW50QXJncykNCg0KICBDYW50aWRhZFRvdGFsMSA9IENhbnRpZGFkVG90YWwxI" +
                        "CsgR2V0Q3VycmVudENvbHVtblZhbHVlKCJDYW50aWRhZE5ldGEiKQ0KICBVdGlsaWRhZFRvdGFsMSA9I" +
                        "FV0aWxpZGFkVG90YWwxICsgR2V0Q3VycmVudENvbHVtblZhbHVlKCJVdGlsaWRhZCIpDQogIElGIEdld" +
                        "EN1cnJlbnRDb2x1bW5WYWx1ZSgiQ29taXNpb25OZXRhIikuVG9TdHJpbmcgPSAiIg0KICAgIENvbWlza" +
                        "W9uVG90YWwxID0gQ29taXNpb25Ub3RhbDENCiAgRUxTRQ0KICAgIENvbWlzaW9uVG90YWwxID0gQ29ta" +
                        "XNpb25Ub3RhbDEgKyBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkNvbWlzaW9uTmV0YSIpDQogIEVORCBJR" +
                        "g0KDQogIENvc3RvVG90YWwxID0gQ29zdG9Ub3RhbDEgKyBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkNvc" +
                        "3RvTmV0byIpDQogIGUudmFsdWUgPSBDb3N0b1RvdGFsMQ0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViI" +
                        "EltcG9ydGVUb3RhbF9HZXRWYWx1ZShCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIERld" +
                        "kV4cHJlc3MuWHRyYVJlcG9ydHMuVUkuR2V0VmFsdWVFdmVudEFyZ3MpDQoNCiAgSW1wb3J0ZVRvdGFsM" +
                        "SA9IEltcG9ydGVUb3RhbDErIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiSW1wb3J0ZU5ldG8iKQ0KICBlL" +
                        "nZhbHVlID0gSW1wb3J0ZVRvdGFsMQ0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViIFBvcmNlbnRhamVUb" +
                        "3RhbF9HZXRWYWx1ZShCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIERldkV4cHJlc3MuW" +
                        "HRyYVJlcG9ydHMuVUkuR2V0VmFsdWVFdmVudEFyZ3MpDQoNCiAgSUYgQ29zdG9Ub3RhbDEgPD4gMCBUS" +
                        "EVODQogICAgZS52YWx1ZSA9IChJbXBvcnRlVG90YWwxL0Nvc3RvVG90YWwxKS0xDQogIEVMU0UNCiAgI" +
                        "CBlLnZhbHVlID0gMQ0KICBFTkQgSUYNCg0KRW5kIFN1Yg0KQAABAAAA/////wEAAAAAAAAADAIAAABRU" +
                        "3lzdGVtLkRyYXdpbmcsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb" +
                        "2tlbj1iMDNmNWY3ZjExZDUwYTNhBQEAAAAVU3lzdGVtLkRyYXdpbmcuQml0bWFwAQAAAAREYXRhBwICA" +
                        "AAACQMAAAAPAwAAAFrBAAAC/9j/4AAQSkZJRgABAQEAlgCWAAD/7gAOQWRvYmUAZAAAAAAB/+ERlkV4a" +
                        "WYAAE1NACoAAAAIAAcBEgADAAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACA" +
                        "AABMQACAAAAHAAAAHIBMgACAAAAFAAAAI6HaQAEAAAAAQAAAKIAAADCAJYAAAABAAAAlgAAAAEAAEFkb" +
                        "2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cwAyMDExOjAxOjE4IDA5OjUxOjA2AAACoAIABAAAAAEAAAFio" +
                        "AMABAAAAAEAAACBAAAAAAAAAAYBAwADAAAAAQAGAAABGgAFAAAAAQAAARABGwAFAAAAAQAAARgBKAADA" +
                        "AAAAQACAAACAQAEAAAAAQAAASACAgAEAAAAAQAAEG4AAAAAAAAASAAAAAEAAABIAAAAAf/Y/+0ADEFkb" +
                        "2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMVExMYEQwMD" +
                        "AwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMD" +
                        "BERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA6AKADASIAAhEBAxEB/90AB" +
                        "AAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGB" +
                        "wgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclk" +
                        "lPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1" +
                        "ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8" +
                        "DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5" +
                        "fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1VJJJJSlgYWR9Z3fWTIqyqg3pLd/pu" +
                        "2tDdoj0HVWA+q+2z/DMf/4H+jV36w9WPSOk3ZrGtfa3a2ljpgveQxu7b+a2fUch/VjquX1bpDMzLrbXY" +
                        "572gskNcGu2eo1ri9zP3Ppp/tS9v3f0OLg/wlnux9z2/wBKuL/BdZJJJMXqSSSSUpJJJJSkkkklKSSSS" +
                        "UpJJJJSkkkklKSSSSU//9D1VZ/WutYnR8T17/fY+W0UNPusd+6391jf8JZ/g03W+t4nRsT17/fY+W0UN" +
                        "Pusd4D91jf8JZ/g1xvTOmdR+tfUX5+e8txWnbZY2QIB/oeH+6xv+Ft/9H/zaUr6x9Tys36r9OuynB12X" +
                        "k23ODRDWis3VV1M/kMY5n0kXqw6l0von1f6h08FlWJTuttGoD7xU+Miv/Q2u9Rv9f8A0dnpK1/jBwaqO" +
                        "ldPGOwVUY9ppZW0QAHMcW/+el0PQHU5f1dwQQLKn4tdb2OALTDBVaxzT9L6LmLQjkGPlsE+HiAnPjidj" +
                        "xcUf+g0ZYzk5nNG+EmEOGQ3Fer/AKbD6vfWHF63i72fo8muBkY5OrT+839+p/5j1rLzvrvQs76sZrerd" +
                        "Ic4YgdodXGouP8AMX/6XFs+ix7v+Ls/S+lbZ131e+sON1vF3sHp5NUDIoJktJ/Ob+/U/wDMeoeY5eIj7" +
                        "2E8WGX+Njl+7JlwZ5GRxZRw5Y/4uSP78UvXeuYnQ8H7blte+svFYbXtmSC7/COrZ9FjvzleqtZdUy6sy" +
                        "yxoe0+ThuasH68dRy+m9IryMNzWX+u1rbHMa8tllpLqxaHsa/27Po/QWT1PrP1lf1fC6d03KFb8rFqsD" +
                        "XMr2l5bZZa4vfU/b7a03Hys8kRISjEHi+Y/5v5rXZOZhCRiRKUhw6RH7/yvbrK679YMXoddFmVXZYy95" +
                        "ZNYadsDcXOD3M/6K5vI6x9dOhOFvV2Ny8Oz2uewMG0n/R20sZ6dv7nr0+k9Zf1of1e7Fx8rKzG53S73F" +
                        "+DZtYyyC3d+mZTXXtsY39FZ/L/0amw8leSPHKEscusJfP8A1Y/1mLNzlY5GMZCceko/L/Wl/VfTUlytX" +
                        "U/rD0LDys36x215LPYzEpr2h7rTu9u+uuprK9v09/qfQ/7co49v+MLqmP8AtDHtrx6njfTRDGbm9vSbd" +
                        "Xc/a78z7Taz/MUQ5SRs+5jEAeH3DL0Sl2iyHmQKHBMzI4uAD1xj3k9wuV+qH1hz+oY3UsvqVgezGIe1r" +
                        "GBoYza+x7W7fe/6P56P9V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa+WGdlrNzd35j/5ypYv1FsNfSOtWBrXlj" +
                        "Nwa8S0xXYdr2/nMT44DHFnjMDjHtcMt/nlvGX9ZZLOJZMBiTwEZOIf3I/pR/qvWdC63idcwftuI17GB5" +
                        "rc2zbuDmwf8G6xn0XN/PWiuI6f9beoY31Uf1HJIyst2UcaiWtYwfo22N9RlAq9jGts/l/mJY7P8YWbit" +
                        "6hTmVBrxurpBqkg8bQKbKf+3L037nMXxzhACXBxSOkpf1V33uBrhjOZI46iNYx8Xr8/NpwMK/Nvn0sdj" +
                        "rHhokw0bvbMIfSep0dW6fT1DHDm1XTDXRILXOqe07C9n02fvLCr6v1236t9Tt6phjHysNjhXZYz2WED+" +
                        "c9Czex3pu/P/o9n+DVSz63Z+F9VsHKfGR1HOdc0WvaA0Cux7XWOrq9NrnbPTYxn/XE0cpkJocJ9ft6G9" +
                        "eH3OL+7wrjzWMCzY9PuajpxcH+NxPaJLim4/wDjGdQ3MZl1WFwBFDTSSQf+s/Zv/ZhdD9Xc/qWf071up" +
                        "4pxMlr3MLS1zN4ERaKrPfX9LZ/YTcnLmEeIThMA0eCWoTjz8Z4TCcLFjjGhf//R7P61/Vk9VaM3EMZ9L" +
                        "NgY4+2ysEv9H3e2qzc79FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY9rhsLXA7PsmS327LGu9ldn/AFu39L/O9" +
                        "qub+tX1VZ1RjszDa1ue1sPYYDb2gR6dk+1tzW/zVv8A1q39H/MpTe+tHTHdT6Jk49bd17QLaByd9Z3hr" +
                        "f8AjG7qv+uLE/xedXZbi2dJsd+kpJuxwe9bzNjR/wAVc7/wZR+qn1oex7ekdVc4ODvSx7rJDg4HZ9kyd" +
                        "3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf1X6ul2RU+x7Lm4jpfTfrXkNb6Z37LdzvU/0f/Eq5y0oZMcuXmeHi" +
                        "PHjkf0ZtTmYzx5I54Di4RwZIj9KH/oLc+t31rNzn9F6TNjrD6ORawbi4u9hxcdo+m9/0LH/APW6/f8Az" +
                        "ep9UPquej1Oy8szn5DQ1zAZbUyd3ogj6dm7+ds/7a/0lsPqn9UmdJY3NzWtf1BzYa0QW0tI/m6/3rXf4" +
                        "W3/AK1V+j/numQz5oRh7GD5P059csv+9ThwylP383z/AKEOmKP/AHzyn+Mj/kGr/wAMt/8APdyzx/4tO" +
                        "jf+FKv/AD1kLpfrLhdOzsGrG6iLfRsyKmMfToW2PPo1Ocf9G51npfR/wiouZ9Xj1M9UYLTk9IfX08VMM" +
                        "tLn7aKNrHe6za7KdTv3/mWf6NPw5QMIjUiayx0Gl5eGMFmXETmMrG+OXj+r9UnS+sdbLOgdRbY0OAxrX" +
                        "AHxa02Md/Ze3cuAz22u+pXTH8sZk3s+BcbXMH4PXpNzcTPoycMvbYx7XU5DWOG5u8bXNdt/m37XKhi9L" +
                        "6JgdKf0iyxl2I0Ofa3Iewna5xJfZ9Da1tv0H/vpnL5xiiAQTIZBPh/q8MoFfzGH3JEggAwML/rcXE4n1" +
                        "2vx+q9AqzenXNyace5r7thna17X17rWfTr2vez2Pas/pnScTqGIy9v1jtpdtAsosftdWQI9Pa69vtb+Y" +
                        "76C6fpv1f6D0jJu9A+/qDdgotsDwWDc411Vv91jPd7t/qrLZ9UPqv1Kyy2oXYm263HFLXtDS+lzmWGll" +
                        "nrez2bv6n+DU2PPjjAwjKcYRPFHJwRlpP8ARlGX/SYsmGcp8ZEZSkOGUOOUfl/SjKKbof1Trxep19XZ1" +
                        "Q55Zva4wHbiW+l7rvUs+gsf6lvY3pHXKS4C30i70zztDLGF3+f7V1n1e6R0vpWLbX02w3V2WF1jy8P9w" +
                        "Ar2/ow1jdm1Yoq6CepV9Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67H13ei79Jucxn+j/AEv6RNjmM/djIynpD" +
                        "hlwxh/NH3OGUfT/AFkywiAxSiBD5+KNymP1w4OLi9TmdDv6NT9TLf2xW63GszSxjawS/wBQsrcx1TgW7" +
                        "HMa17t2/wD9Jqbfq3jU1Oz/AKvdebTWQCfUs9OPzv091JZt/wCLuxV0ON0zoXTMb/m/Ywvxslj8ix+Q5" +
                        "paYfTTD3+zbbvtp9H02f4P/AEqo2/UH6tOyvT9e6u18uZji1hO0fuerXZfs/tp45iHFM8U4CcjP5Rkxz" +
                        "h/c/RWnl5cMBwwmYxEfm9vJCX99z8Tr3UOp/V/reJnObe/EoJbksAAcHb2w7YG1u/m/0T2s/SVp8e7oD" +
                        "fqb0ynrTXll1twpfUCX1uFt2+8Ob+bW13v/AJzf/obF0tHRug09Pv6RjhjKr6ybw182Frhs9d7yXWdva" +
                        "/6CVHROiO6WOi7W5WNjH3Me7c9rnE2+o57Nr6rXeo53s9NRnmMWvDGcI+4MlQ9BEeDg4h+7614wZNLlG" +
                        "cvbOP1eocXHx1/ivLO+r32Co53Qev1V45M/pLRW3/rllRdRa7/jMZbv1L67m9YwrvtoDrcZ4b6zRtDw4" +
                        "bvc0ez1Gfn7P5CpD6ifVdzftTcq00au3C2sshs7/wBL6e7azb7v0q6Xp2DgYGK2jp9basf6Tdhndu/wh" +
                        "eS51m799zkuYzY5YzGzknek5QGOUK6GX6SeXw5I5AdMcK1hGZnGd9h+i//S9VSSSSU859afqs3qbHZuE" +
                        "0N6g1vuZoG3tA/m3z7W3N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/bMloFlTXH062j6Ne1p9O25v59//AFun9" +
                        "H/O9AkkpSSSSSmn1jEszOm30VfzxbvokwPVrIux/d/x9dax6OgZwzMG6ws2ms3Z/BjKab76TW389n2nq" +
                        "WRb/wCg1K6RJWMXu+2eGuG5Xffh/l/hsGX2uMcV8VDbtxPPfVvo+Tg2VnKqsZbj4/2Y2bqDS/3Nfuq+z" +
                        "11ZVm5zPVa/N/Ss9a78+yyxNX9XpycO23FpdszM2/JcQ0ksudkOxi7T9J9PG9v+D/60uiSUkve457XR4" +
                        "uHi/dybf8//AA1kfa4I3fDYrir96Dx7+hda+wY2GKvdTTS2t7XVQx9V773NtvsacrZXS3H+xNxfz/V9Z" +
                        "Gf0DqxdnbdjhnjNqrc92uOLn2XU20bR/NZstZm/4f1PQ/wdXps6pJSH39f5v5pXX7ywezp8/wAsd/3XH" +
                        "6BgWYzr7rabcey1tTCyw4+39EHAek3p7Kq9rN/pepa31X1sq/0aDh9KzqmfV8WMAPTqnMyvcDtJo9D2/" +
                        "v8A6RbySgPucU/l21q6r2p/L/1NlHBwQviqxV1xX7sPm/w3K6j0r7b1FlttNd+OzEvqAsAcBZY6nb7Hf" +
                        "vVss96yW9H605+A26oE4pwXG1rqoikMbl+va5js27K3euyv07Psv2d/+k9Su3q0k7F7vCK4ar08d9/0U" +
                        "ZPb4jfFd68NPGdHw3W4OLkV4bK6sazNvtzpZusa4ZWP6DWt/TOc99jHXer+h2Y1f857PSWH0XMzelY/2" +
                        "XFrwQOmCg2hzR9oNpx79n6Nr3+h6dFvqPyW7/Uy3/oLa/V9Xs0lMfd4jQjxcWms/wB7J+96f32KPt8Is" +
                        "y4eHXSP7sP3fV/3bzmL0N77Me27Hs2/bftGRVlGhwhuLbjV3V1YTW4388+ln+l/ReqtDpFGVhMbhHGbX" +
                        "jB2TY2xr27WB2Q9+LjtpH5rsa3f/wAF6fpLTSVfN7lHj4eHSq4uH9Ph4WfFwacPFeu/Df6PFb//2f/tG" +
                        "NBQaG90b3Nob3AgMy4wADhCSU0EJQAAAAAAEAAAAAAAAAAAAAAAAAAAAAA4QklNBDoAAAAAAJMAAAAQA" +
                        "AAAAQAAAAAAC3ByaW50T3V0cHV0AAAABQAAAABDbHJTZW51bQAAAABDbHJTAAAAAFJHQkMAAAAASW50Z" +
                        "WVudW0AAAAASW50ZQAAAABDbHJtAAAAAE1wQmxib29sAQAAAA9wcmludFNpeHRlZW5CaXRib29sAAAAA" +
                        "AtwcmludGVyTmFtZVRFWFQAAAABAAAAOEJJTQQ7AAAAAAGyAAAAEAAAAAEAAAAAABJwcmludE91dHB1d" +
                        "E9wdGlvbnMAAAASAAAAAENwdG5ib29sAAAAAABDbGJyYm9vbAAAAAAAUmdzTWJvb2wAAAAAAENybkNib" +
                        "29sAAAAAABDbnRDYm9vbAAAAAAATGJsc2Jvb2wAAAAAAE5ndHZib29sAAAAAABFbWxEYm9vbAAAAAAAS" +
                        "W50cmJvb2wAAAAAAEJja2dPYmpjAAAAAQAAAAAAAFJHQkMAAAADAAAAAFJkICBkb3ViQG/gAAAAAAAAA" +
                        "AAAR3JuIGRvdWJAb+AAAAAAAAAAAABCbCAgZG91YkBv4AAAAAAAAAAAAEJyZFRVbnRGI1JsdAAAAAAAA" +
                        "AAAAAAAAEJsZCBVbnRGI1JsdAAAAAAAAAAAAAAAAFJzbHRVbnRGI1B4bEBiwAAAAAAAAAAACnZlY3Rvc" +
                        "kRhdGFib29sAQAAAABQZ1BzZW51bQAAAABQZ1BzAAAAAFBnUEMAAAAATGVmdFVudEYjUmx0AAAAAAAAA" +
                        "AAAAAAAVG9wIFVudEYjUmx0AAAAAAAAAAAAAAAAU2NsIFVudEYjUHJjQFkAAAAAAAA4QklNA+0AAAAAA" +
                        "BAAlgAAAAEAAgCWAAAAAQACOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNBA0AAAAAAAQAAAB4O" +
                        "EJJTQQZAAAAAAAEAAAAHjhCSU0D8wAAAAAACQAAAAAAAAAAAQA4QklNJxAAAAAAAAoAAQAAAAAAAAACO" +
                        "EJJTQP1AAAAAABIAC9mZgABAGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABADIAAAABAFoAAAAGA" +
                        "AAAAAABADUAAAABAC0AAAAGAAAAAAABOEJJTQP4AAAAAABwAAD/////////////////////////////A" +
                        "+gAAAAA/////////////////////////////wPoAAAAAP////////////////////////////8D6AAAA" +
                        "AD/////////////////////////////A+gAADhCSU0EAAAAAAAAAgABOEJJTQQCAAAAAAAEAAAAADhCS" +
                        "U0EMAAAAAAAAgEBOEJJTQQtAAAAAAAGAAEAAAADOEJJTQQIAAAAAAAQAAAAAQAAAkAAAAJAAAAAADhCS" +
                        "U0EHgAAAAAABAAAAAA4QklNBBoAAAAAA0kAAAAGAAAAAAAAAAAAAACBAAABYgAAAAoAVQBuAHQAaQB0A" +
                        "GwAZQBkAC0AMQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABYgAAAIEAAAAAAAAAAAAAA" +
                        "AAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5kc09iamMAA" +
                        "AABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tbG9uZ" +
                        "wAAAIEAAAAAUmdodGxvbmcAAAFiAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVzbGljZQAAA" +
                        "BIAAAAHc2xpY2VJRGxvbmcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlnaW5lbnVtAAAADEVTb" +
                        "GljZU9yaWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZVR5cGUAAAAASW1nI" +
                        "AAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAAAAAAABMZWZ0bG9uZ" +
                        "wAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJnaHRsb25nAAABYgAAAAN1cmxURVhUAAAAAQAAAAAAAG51b" +
                        "GxURVhUAAAAAQAAAAAAAE1zZ2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABAAAAAAAOY2VsbFRle" +
                        "HRJc0hUTUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWduZW51bQAAAA9FU2xpY" +
                        "2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VTbGljZVZlcnRBbGlnbgAAA" +
                        "AdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51bQAAABFFU2xpY2VCR0NvbG9yVHlwZQAAAABOb25lAAAAC" +
                        "XRvcE91dHNldGxvbmcAAAAAAAAACmxlZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b21PdXRzZXRsb25nA" +
                        "AAAAAAAAAtyaWdodE91dHNldGxvbmcAAAAAADhCSU0EKAAAAAAADAAAAAI/8AAAAAAAADhCSU0EFAAAA" +
                        "AAABAAAAAQ4QklNBAwAAAAAEIoAAAABAAAAoAAAADoAAAHgAABswAAAEG4AGAAB/9j/7QAMQWRvYmVfQ" +
                        "00AAf/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwME" +
                        "QwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMD" +
                        "AwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACEQEDEQH/3QAEAAr/x" +
                        "AE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKC" +
                        "xAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh8" +
                        "WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3R" +
                        "1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4" +
                        "XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmd" +
                        "oaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMirKqDekt3+m7a0N2i" +
                        "PQdVYD6r7bP8Mx//gf6NXfrD1Y9I6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5fVukMzMuttdjnvaCy" +
                        "Q1wa7Z6jWuL3M/c+mn+1L2/d/Q4uD/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkklKSSSSUpJJJJSkkkk" +
                        "lKSSSSUpJJJJT//0PVVn9a61idHxPXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGxPXv99j5bRQ0+6x3g" +
                        "P3WN/wln+DXG9M6Z1H619Rfn57y3FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzfqv067KcHXZeTbc4N" +
                        "ENaKzdVXUz+QxjmfSRerDqXS+ifV/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2ekrX+MHBqo6V08Y7" +
                        "BVRj2mllbRAAcxxb/56XQ9AdTl/V3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+WwT4eICc+OJ2PFxR/6" +
                        "DRljOTmc0b4SYQ4ZDcV6v8ApsPq99YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u9Czvqxmt6t0hzhiB" +
                        "2h1cai4/wAxf/pcWz6LHu/4uz9L6VtnXfV76w43W8Xewenk1QMigmS0n85v79T/AMx6h5jl4iPvYTxYZ" +
                        "f42OX7smXBnkZHFlHDlj/i5I/vxS9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/OV6q1l1TLqzLLGh7T" +
                        "5OG5qwfrx1HL6b0ivIw3NZf67Wtscxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3TcoVvysWqwNcyvaX" +
                        "ltllri99T9vtrTcfKzyREhKMQeL5j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh10WZVdljL3lk1hp2" +
                        "wNxc4Pcz/orm8jrH106E4W9XY3Lw7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXHysrMbndLvcX4Nm1j" +
                        "LILd36ZlNde2xjf0Vn8v/RqbDyV5I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9aX9V9NSXK1dT+sPQ" +
                        "sPKzfrHbXks9jMSmvaHutO727666msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9NEMZub29Jt1dz9rv" +
                        "zPtNrP8xRDlJGz7mMQB4fcMvRKXaLIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy+pWB7MYh7WsYGhjN" +
                        "r7Htbt97/o/no/1X+suT1G63pnU6vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw19I61YGteWM3BrxL" +
                        "TFdh2vb+cxPjgMcWeMwOMe1wy3+eW8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1zB+24jXsYHmtzbNu" +
                        "4ObB/wbrGfRc389aK4jp/1t6hjfVR/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+Yljs/xhZuK3qFOZU" +
                        "GvG6ukGqSDxtApsp/7cvTfucxfHOEAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82nAwr82+fSx2OseGiT" +
                        "DRu9swh9J6nR1bp9PUMcObVdMNdEgtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2OFdljPZYQP5z0LN7" +
                        "Hem78/+j2f4NVLPrdn4X1Wwcp8ZHUc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRymQmhwn1+3ob14fc4v" +
                        "7vCuPNYwLNj0+5qOnFwf43E9okuKbj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1dz+pZ/TvW6ninEyW" +
                        "vcwtLXM3gRFoqs99f0tn9hNycuYR4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9WT1VozcQxn0s2Bjj7" +
                        "bKwS/0fd7arNzv0Vn9i7/SU5n1T+s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2f8AW7f0v872q5v61" +
                        "fVVnVGOzMNrW57Ww9hgNvaBHp2T7W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3XtAtoHJ31neGt/wCMb" +
                        "uq/64sT/F51dluLZ0mx36Skm7HB71vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHuskODgdn2TJ3e71d3" +
                        "sqe/wD4qz9J/O5/1h6DcM5/Vfq6XZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnLShkxy5eZ4eI8eOR/" +
                        "Rm1OZjPHkjngOLhHBkiP0of+gtz63fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qsf8A9br9/wDN6n1Q+" +
                        "q56PU7LyzOfkNDXMBltTJ3eiCPp2bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS0j+br/etd/hbf8Ar" +
                        "VX6P+e6ZDPmhGHsYPk/Tn1yy/71OHDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/wA93LPH/i06N/4Uq" +
                        "/8APWQul+suF07OwasbqIt9GzIqYx9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1RgtOT0h9fTxUwy0ufto" +
                        "o2sd7rNrsp1O/f+ZZ/o0/DlAwiNSJrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6B1FtjQ4DGtcAfFrT" +
                        "Yx39l7dy4DPba76ldMfyxmTez4Fxtcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc123+bftcqGL0vomB0p" +
                        "/SLLGXYjQ59rch7CdrnEl9n0NrW2/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCADAwv+txcTifXa/H6r" +
                        "0CrN6dc3Jpx7mvu2GdrXtfXutZ9Ova97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZAj09rr2+1v5jvoLp+" +
                        "m/V/oPSMm70D7+oN2Ci2wPBYNzjXVW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte0NL6XOZYaWWet7PZ" +
                        "u/qf4NTY8+OMDCMpxhE8UcnBGWk/wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/VOvF6nX1dnVDnlm9" +
                        "rjAduJb6Xuu9Sz6Cx/qW9jekdcpLgLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDdXZYXWPLw/3ACvb+j" +
                        "DWN2bViiroJ6lX1Srp2ZZZ1Wl5pYzYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2OYz92MjKekOGXDGH" +
                        "80fc4ZR9P8AWTLCIDFKIEPn4o3KY/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/AFCytzHVOBbscxrXu" +
                        "3b/AP0mpt+reNTU7P8Aq915tNZAJ9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC/GyWPyLH5Dmlph9N" +
                        "MPf7Ntu+2n0fTZ/g/8ASqjb9Qfq07K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzxTgJyM/lGTHOH9z9F" +
                        "aeXlwwHDCZjER+b28kJf33PxOvdQ6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RPaz9JWnx7ugN+pvTK" +
                        "etNeWXW3Cl9QJfW4W3b7w5v5tbXe/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWuGz13vJdZ29r/oJUd" +
                        "E6I7pY6LtblY2Mfcx7tz2ucTb6jns2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH7vrXjBk0uUZy9s4/" +
                        "V6hxcfHX+K8s76vfYKjndB6/VXjkz+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOtxnhvrNG0PDhu9zR7" +
                        "PUZ+fs/kKkPqJ9V3N+1NyrTRq7cLayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx/pN2Gd27/CF5LnWb" +
                        "v33OS5jNjljMbOSd6TlAY5QroZfpJ5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1p+qzepsdm4TQ3qDW" +
                        "+5mgbe0D+bfPtbc3/A3f9at/R/zM/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07bm/n3/8AW6f0f870C" +
                        "SSlJJJJKafWMSzM6bfRV/PFu+iTA9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppvvpNbfz2faepZFv/A" +
                        "KDUrpElYxe77Z4a4bld9+H+X+GwZfa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZuoNL/c1+6r7PXVlWb" +
                        "nM9Vr839Kz1rvz7LLE1f1enJw7bcWl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6JJSS97jntdHi4eL93" +
                        "Jt/z/8ADWR9rgjd8NiuKv3oPHv6F1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLcf7E3F/P9X1kZ/QOr" +
                        "F2dt2OGeM2qtz3a44ufZdTbRtH81my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7Onz/ACx3/dcfoGBZj" +
                        "Ovutptx7LW1MLLDj7f0QcB6Tensqr2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9OqczK9wO0mj0Pb+/wDpF" +
                        "vJKA+5xT+XbWrqvan8v/U2UcHBC+KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCwBwFljqdvsd+9Wyz3" +
                        "rJb0frTn4DbqgTinBcbWuqiKQxuX69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8IrhqvTx33/RRk9viN" +
                        "8V3rw08Z0fDdbg4uRXhsrqxrM2+3Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9JYfRczN6Vj/ZcWvBA" +
                        "6YKDaHNH2g2nHv2fo2vf6Hp0W+o/Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn73p/fYo+3wizLh4dd" +
                        "I/uw/d9X/dvOYvQ3vsx7bsezb9t+0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0OkUZWExuEcZteMHZNj" +
                        "bGvbtYHZD34uO2kfmuxrd//AAXp+ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/o8Vv//ZOEJJTQQhA" +
                        "AAAAABVAAAAAQEAAAAPAEEAZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwAAAAEwBBAGQAbwBiAGUAI" +
                        "ABQAGgAbwB0AG8AcwBoAG8AcAAgAEMAUwA1AAAAAQA4QklNBAYAAAAAAAcABwAAAAEBAP/hDdBodHRwO" +
                        "i8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2Voa" +
                        "Uh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4Onhtc" +
                        "HRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvMTItMTc6MzI6MDAgI" +
                        "CAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyL" +
                        "XJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wP" +
                        "SJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlL" +
                        "mNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zV" +
                        "HlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xL" +
                        "jEvIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8iIHhtc" +
                        "DpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXA6Q3JlYXRlRGF0ZT0iM" +
                        "jAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxMS0wMS0xOFQwOTo1M" +
                        "TowNi0wNjowMCIgeG1wOk1vZGlmeURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcE1NO" +
                        "kluc3RhbmNlSUQ9InhtcC5paWQ6MzQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHhtcE1NO" +
                        "kRvY3VtZW50SUQ9InhtcC5kaWQ6MzM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHhtcE1NO" +
                        "k9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5O" +
                        "CIgZGM6Zm9ybWF0PSJpbWFnZS9qcGVnIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIiBwaG90b3Nob3A6S" +
                        "UNDUHJvZmlsZT0ic1JHQiBJRUM2MTk2Ni0yLjEiPg0KCQkJPHhtcE1NOkhpc3Rvcnk+DQoJCQkJPHJkZ" +
                        "jpTZXE+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEP" +
                        "SJ4bXAuaWlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3aGVuPSIyMDExL" +
                        "TAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ" +
                        "1M1IFdpbmRvd3MiLz4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0Y" +
                        "W5jZUlEPSJ4bXAuaWlkOjM0NEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2dDp3aGVuP" +
                        "SIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b" +
                        "3Nob3AgQ1M1IFdpbmRvd3MiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4NCgkJCQk8L3JkZjpTZXE+DQoJCQk8L" +
                        "3htcE1NOkhpc3Rvcnk+DQoJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJERj4NCjwveDp4bXBtZ" +
                        "XRhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/eHBhY2tldCBlbmQ9J3cnPz7/4gxYSUNDX1BST" +
                        "0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJRUMgc" +
                        "1JHQgAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia3B0A" +
                        "AACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkA" +
                        "AACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoA" +
                        "AAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdod" +
                        "CAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2MTk2N" +
                        "i0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAAA" +
                        "AAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EA" +
                        "AC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBodHRwOi8vd" +
                        "3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjA" +
                        "AAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAA" +
                        "AAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxO" +
                        "TY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yL" +
                        "jEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAEEwsAA1yeA" +
                        "AAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AAAACc" +
                        "2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUA" +
                        "FkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrA" +
                        "PAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxA" +
                        "bkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBA" +
                        "ssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgB" +
                        "C0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVB" +
                        "eUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB" +
                        "/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUC" +
                        "moKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mD" +
                        "UANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhE" +
                        "H4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGF" +
                        "CcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF9IX9xgbG" +
                        "EAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9ocAhwqHFIcexyjH" +
                        "Mwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYIMQg8CEcIUghdSGhI" +
                        "c4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ" +
                        "0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRLAUsOSxuLKIs1y0ML" +
                        "UEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M" +
                        "7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0O" +
                        "rI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQ" +
                        "jBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwS" +
                        "jdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8U" +
                        "sdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW" +
                        "+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9Z" +
                        "ZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b" +
                        "9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGe" +
                        "qV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrh" +
                        "g6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5Gok" +
                        "hGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5An" +
                        "q6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1q" +
                        "+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm40blKu" +
                        "cK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGxsPHQce/y" +
                        "D3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY1" +
                        "1zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmDeaW5" +
                        "x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb79" +
                        "4r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////2wBDAAEBAQEBAQEBAQECAQEBAgIBAQEBAgICA" +
                        "gICAgIDAgMDAwMCAwMEBAQEBAMFBQUFBQUHBwcHBwgICAgICAgICAj/2wBDAQEBAQICAgQDAwQHBQQFB" +
                        "wgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAj/wAARCACBAWIDA" +
                        "REAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAA" +
                        "AF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q" +
                        "0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKzt" +
                        "LW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBA" +
                        "QAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIF" +
                        "EKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpa" +
                        "nN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2" +
                        "Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/igAoAKACgAoAKAGu6Ro8kjiOOMF5JHIC" +
                        "qoGSST0AoA/Fbxl/wAF0P2VvC/xJu/Bul+EvE3jLwjpl0+lX/xJ8Pw6d9jlKOUM9nb3FzHLNBnkO2wkZ" +
                        "KqRjMc6NFSZ+wfgnxp4X+I/hDw1498E6xF4g8JeL7K38Q+HdasifLuLS6jEsbgMAynB5VgCpyCAQRVmb" +
                        "R1FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAYPirQYfFXhjxH4XuLl7O38SWF5oM93a482JLy3e3Z03cblD5Ge9AH8RPjP/A" +
                        "IJcftveFPiTe/Dmy+Bmq+L9l0bHSPGnhlYpdBvYGkKxXAvpHSGBHUbis7IyZw4U1jys6lUR/YJ+yF8Fd" +
                        "U/Z2/Zp+D3wY13U49X13wNpKWWvX1mS0BvrmeS+uEhZlQtFHLOyRsVBKgEgHitUjnk7s+kKZIUAFABQ";
                    resourceString += "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFAH+ev8A8FEP2sfGf7VP7UfxP8W3Xi+91T4d+HNbvtA+EGiG4" +
                        "lFjYaNp9wbS2mt4AxSOS4WITSuOSzHnAGP9oPBXw6wvD3D+Hoqko15wUqrtq5SV2m92o35Utkkf4peN3" +
                        "iPiuIuIcRWdVyoQm40lfSMIuyaWycrcze92f1P/APBDj4ufFP4vfsR/bPipr154ou/BHizVvh/4O1/xB" +
                        "LNcXk+h2mnabeQrJPOzPKIZruaFCT8qIqDha/z5+llw3l+W8V8uEgoKpSjOSjZJTcpp2S0V1FN922+p/" +
                        "od9EjiXMcz4T5sXNzdOrKEJSu24KMGrt6uzk0uySXQ/Ymv5lP6fCgAoAKACgAoAKACgAoAKACgAoAKAC" +
                        "gAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgCC6uraytri9vbhLS" +
                        "ztEe6u7u6dY4ooo1Ls7s5AVVAJJJwBQB8sftdfGzT/hj+xt8cvjh4a1iG5h07wVqOv+CNdspVaCe71Kw" +
                        "MGlyxyKcMsk1xEVI6g8V974W8PLNuI8FhGrxnVjzf4U7y/8lTPgPFXiJ5Tw3jsWnaVOlLl/xNWj/wCTN" +
                        "H+crX+4J/hif3b/AAP1Wz/4J8f8EkPCPjt9GhuNZ+HvgBfiddaNqG+NLrxJ4mP9qx21y64fH23UUgYg5" +
                        "CjC8AV/kXxZh5cZ+JFXD8zUatf2d10p0/dbXT4YuS89z/X/AISxEOCvDWliOROdKh7Sz61KnvJPr8c1F" +
                        "+Wx9PfsVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L8D4p" +
                        "+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf6B4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpw" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFAEF1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+Uj/gpz/wAFOtS/aA1XUP2a/" +
                        "wBm/V3h+ErXA0Pxf400+TyZfFtyZBF9mgcldunBuCSR555P7v7+UpG8IW1Z+kn/AAWu1WH4Z/8ABNXxB" +
                        "4G0uYwWWv6l4P8AhrbDB3Pb2N7FqYXO1sZXTBnkZHGTnB/pz6JOWLEcaUZtfwoVJf8AkvJ/7d/W5/Lv0" +
                        "u80eH4KrQTt7WdOP/k3P/7b/Wx/Fp8OPCUvj74h+A/AsLOs3jXWdL8JRNBjeG1K+iswVyCM5k44r/VPP" +
                        "MyWDwVbEPanCUv/AAFN/of5Q5HlrxuNo4db1Jxj/wCBNL9T+0H/AILt61qPhT/gnvqXh7QNPuDo/ifxP" +
                        "4X8Ia0NNjleC1062km1WNpygYJF59hCgZiBvZBnJAP+XP0RcLDEcaRqVJLmhTqSV93J2i7d3aUnp0Tex" +
                        "/qh9L/F1MNwVKnTi+WdWnF22UVeSv2V4xWvVpb2P5Ef2Yf2nviz+yP8WdD+L/wg1w6bremn7JrOjXe99" +
                        "O1nTndWmsb6FWXzIZNo7hlYB0KuqsP9JuPuAcu4ky6eDxkLweqa+KMukovo19zWjum0f5o+H/iBmXDWZ" +
                        "QxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJ" +
                        "gL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqyn" +
                        "Bv3oS7Pun9mWzXZppfYdfmZ+nBQAUAFAHKeOPHPg/4aeE9c8d+PvEdp4S8H+Gof7Q13xFrkqwW1tFuEY" +
                        "LM3dmYKqjlmIABJAoBI8j+A37V/7PP7TkGuTfAz4oWXj1/DbImu2FvDe2N7bLIzIkj2upwW03lsVIWQJ" +
                        "tOODSTuNxaPoemIKACgAoAKAPgbxH/wVC/YQ8H/ABV1z4K+LP2gbTw18RvDWqTeDNf0nXtG8S2lpaajb" +
                        "zGCSOXUZ9OWyVVcYMhn2d92K/YsD4A8X4nLoY6jgnOhOKnFqVNtxaumoqfPt05b+R+NY76QXB+FzGeBr" +
                        "Y1Qrwk4SThUSUk7NObhyb9ea3mfesUsU8UU8EqzQTKssM0TBkdGGQykcEEdDX4/KLTs9z9jjJNXWqZJU" +
                        "lBQAUAFABQB8U/8FGPir4y+Cf7En7RPxK+H2qPofjPQNDW10DW7YlZrKbUr+30o3ELD7ssS3JeNuzAHt" +
                        "X6p4I8PYXNeK8FhcTHmpSneS6NRTlZ+TtZ+R+U+OPEWKynhPHYrDS5asYWi+qcpKN15q915n8hP/BK34" +
                        "hePvFn/AAUe/ZwuvFPjjWPEtzqurapLqlx4g1O9vJLlv+Ec1A5la5kcueBy2a/0o+kJk2Dw3A+OVKlCC" +
                        "jGNuWKVvfjtZaH+Z30d86xmJ46wLrVpzcpyvzSbv+7lvd6n93Gt63o3hrRtV8ReItVttC0DQrabWNb1v" +
                        "WJo7a0s7S2jM0s00sxVEjRFLMzEAAZNf5Bn+w588fBH9sv9mP8AaO1/W/CvwW+L2neOPEnh6NrzU9Et4" +
                        "r6zufIR1jaaFNRgtzPErMoaSLcoJGTyKSaZTi0fTdMkKACgAoAKAPl34zftqfst/s9+LNI8DfGL4y6Z4" +
                        "L8W60kdzaaFcR3t3PFDLnZJc/2fBOLaNtp2vOUU9jSbRSi2fS+n6hYatYWWq6Vew6npepwx6hpupafIk" +
                        "0FxBMgkjkjkjJV0dSCrAkEHIpklugAoAKACgAoAKACgAoAgurq2sra4vb24S0s7RHuru7unWOKKKNS7O" +
                        "7OQFVQCSScAUAfyf/8ABUb/AIKjXPxwudb/AGe/2e9be0+DVo7af458c6ezRy+K5Y2w0EDDBXTlI5PWc" +
                        "8n93gPlKR0U6dj8mv2bvAHif4nfHj4TeC/CPhqfxbrGq69pbnRdPi80vawXkc9w8mcKsUcSM8jsQqqCS" +
                        "QBUouT0P6SP+Dh6eeH9if4bxxTPFHdfE/RILlI2KiRB4W8RShWA6jcitg9wD2r+xPoVwT4qr3W2Gn/6c" +
                        "pH8Y/Tam1wpQSe+Jh/6bqn8tH7E1tBeftmfsj2l1Ctxa3XxO8BW1zBKAyPG/iqxVlYHqCDg1/oJ4qzce" +
                        "F8yadmsNW/9NyP89PCeClxTliauniaP/pyJ/or+MPB/hb4geFtf8E+NtAtfFPhHxTazaJ4h8Pa3Ck9re" +
                        "Ws6FHjkRwQQQfw6jmv8TMszPEYLEQr0JuFSDTjJOzTWzTP9wMzyzD43DzoV4KdKaalFq6ae6aP4if8Ag" +
                        "qH/AMEvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf/AFb8AfH7D" +
                        "8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf2nviz+y" +
                        "P8AFnQ/i/8ACDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa" +
                        "+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1p8Rfh1dj" +
                        "Tdf00Raf8RPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfaj" +
                        "un3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAfl9/wV38DeNviX+yFP4D+Hn" +
                        "hy98XeLvE/inw7p+k+HPD8Lz3N0wnkmICJ/CoQuzHhQCxIAzUz2LpvU+AP+CTn7CX7XP7NP7TGqfEL4y" +
                        "fC6TwL4H1Twnqnhp9SGveHb7zbq5vrC6hhe30rULmbnyC3zJgFeSDipjFpl1Jpo/pArQxCgAoAKACgD/" +
                        "O0/4KJf8n1/taf9j74j/wDTjJX+13gp/wAkjlv/AF4p/wDpKP8AETxu/wCSvzL/AK/1P/Smf3XfsTXNx" +
                        "efsZfsj3l5O91d3Xwx8A3N1dXLs8kkj+FbFmZmYkliTkk9a/wAjvFWEY8UZkkrJYmt/6ckf6+eFFSUuF" +
                        "sslJ3bw1H/03E+na+CPvwoAKACgAoA/OL/grj/yjo/ae/7BWl/+pHp1fuH0bv8Akt8B/il/6bmfhn0lf" +
                        "+SHzD/DH/05A/kh/wCCR3/KRf8AZh/7Cuqf+o5qNf6PfSR/5IjH/wCGP/pyB/mx9Gr/AJLjL/8AFL/03" +
                        "M/sU/4KV6J4h8S/sQfHnw54T0u71vxJr9npOiaLouhRSz3l5PdeIbCBYIo4AXdpN23aBznFf43y2P8AZ" +
                        "yG5+Jn/AATV/wCCen7Z3wO/bA+DXxf+Jnwfm8G/DjR4tfPiPWZ9d8NyyRRah4X1Gyt1ls7PUZbk7riaI" +
                        "FfKJU4LAAEiIxdzWc00f1NVqYBQAUAFABQB/I/+29+w1+1r+01+23+0t4y+Dvwfv/GPhe11bTdMXxJf3" +
                        "2laTZzPb+HtPiMdvNrt3ZrN5eArCIttxg4xispRbZ0Rkkj+j/8AYq+H/jn4U/sp/Av4cfErTG0Xxz4M0" +
                        "G30HxFpEt1bXptpYHdVi86zlnicKm0DY5AHA6VpHYxk9T6hpkhQAUAFABQAUAFAEF1dW1lbXF7e3CWln" +
                        "aI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+T//AIKjf8FRrn44XOt/s9/s9629p8GrR20/xz4509mjl8Vyx" +
                        "thoIGGCunKRyes55P7vAfKUjop07H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0fR9PAyxxueSR2wsc" +
                        "UagvJI5CooLMQBUJGjdj+1H9gH9gHwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6f5gDR2kbAZOA0rAO" +
                        "4GERNoxsc053Pj3/g4L0ObVv2GvDF/Fu2eGPiHoGuXOxQRsk0bWdNG4kjA3XY59cCv62+hni1T4tqRf2" +
                        "6E1/wCTU5f+2n8h/TTwjqcI05L7GIg//JKkf/bj+S79lTxHF4P/AGof2bvFs7pFB4W8feD/ABHNJchmj" +
                        "VLHxDaXJLhCCVATnBzX+jXiHgXieH8dRW86FWP3wkj/ADd8OscsLxBgKz2hXpS+6cWf6Tlf4Yn+7Zzfj" +
                        "Dwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8RgsRCvQm4VINOMk7N" +
                        "NbNM4czyzD43DzoV4KdKaalFq6ae6aP4if+Cof/AAS88U/sWeKbj4kfDe3uvFP7NHim68vR9Yk3z3Xhi" +
                        "6nf5NO1F+SYyTi3uD9/7j/vMF/9W/AHx+w/FOHWGxLUMfBarZVEvtR8/wCaPTdabf5NfSC+j7iOFMQ8V" +
                        "hU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk" +
                        "2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49YyXVP" +
                        "707NNNJn95/7FX7avwm/be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6u" +
                        "i/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2" +
                        "HX5mfpwUAfnt/wVB/ac8f8A7JX7IHjf4r/C1baLx9Le6X4P8OatqsKXMOnS6nc+W915EoZJXjjVvLVwU" +
                        "3kFgygq37R4A8BYPiPiWlhMXf2NpSkk7OXKvhutUm7Xa1tezT1X4p9IHj/G8N8M1sZhLe2vGMW1dR5n8" +
                        "Vno2leyel7XTWj/ABr/AOCN37eX7W/7SP7XGo/Dz43fGi+8feDYfB+s+IotC1Cy0i3jF7bXunxRS7rG0" +
                        "gfKrM4xuxz0r+nfpO+EHDeRcNxxOBwqpVXVjG6cno1K61k10R/Lv0XfGLiXPeJZYbH4qVWkqM5WaitU4" +
                        "pPSKfVngH/BSH/gpD+218Fv22vj58MPhh8fNQ8JeA/CWoafZ+HfDtnp+hzR2sc2h2V06q91ZSyHMkrN8" +
                        "zHrX2Xgd4HcKZrwpg8VisHGpWqRk5Scpq9pyXSSWyXQ+M8dPHTizKuLMZhMJjJU6NOUVGKjB2vCL6xb3" +
                        "b6nxB/w9x/4KL/9HPar/wCCvw5/8rq/V/8AiW7gj/oAj/4FU/8Akz8l/wCJleOP+hhL/wABp/8AyB6B8" +
                        "P8A/gtb/wAFD/A2rQ3+ofGG0+I2nI/nT+G/iB4f0Wa0mPAw0umW9jdKOOiTr+dePnP0V+CsXTcY4Z0pf" +
                        "zQnNNfKTlH74s9nJfpW8b4OopSxSrR/lnCDT+cVGX3SR+7H7Mv/AAVU8C/8FBPCt18BLzxxqP7Gf7UWt" +
                        "xhfAvifw7LYahpmo6jGhCCybVoHjkLt9+xnQOynEUzONy/yNx59HrF8GYhZhGlHMMvj8cZJxlGPXm5Xd" +
                        "W6Ti7J6yilo/wCv+AfpE4PjTDvLpVpZfmEl7kouMoyl05eZWd+tOSu1pGTeq/G79qP9tX/grN+yN8Y/E" +
                        "nwY+K37Rmp22taMReaPrVlpXh42Gs6XK7Lb39m76aC0MoQ9QGVgyMAysB/Tvh/4V+HPEmWU8bhMDFwlo" +
                        "05TvGS3jL3919zVmtGj+XfELxW8SOGs0qYHGY6SnHVNRhaUXtKPubP707p6pn5EePPHXiz4neM/E/xD8" +
                        "d6y/iHxl4zvbjxH4n125SGOS7vbqQyyyssCRoCzEnCqB7V/SWUZRhsBhaeGw8eSlTSjFa6JbLW7P5ozj" +
                        "N8TmGKqYnES56tSTlJ6at6t6WX3H2b4O/4Kh/t6fD/wh4V8B+D/ANorUtE8I+CdNsfCPhbRYNN0CRLPT" +
                        "tNtUs7aBWmsHdhHFGqgsxJxySa/L8z8AOD8biamIrYGMqlSTlJ809ZSd29JW1bvofqWV/SC4xwWGp4eh" +
                        "jpRpU4qMVyw0jFWS1jfRK2p/W5/wSO/aq+LP7W/7JR+IXxsMd34z8J+I9T+Hc3iyG1jshrdrY2NjfJfP" +
                        "FAkcIfN40LmJQhaMnAORX+cP0kPDzLuG+I/q2BuqU6cZ8t78jbkuW7u7e7dX1s/Q/0n+jV4i5lxLw39Z" +
                        "x9nVp1JQ5rW50lF81lZX95xdla8e9z89v28/wDgvBp/w88Q658KP2O9I0/xprejvJpev/GnxOr3Ojw3C" +
                        "qUdNKtInT7S0bH/AI+JWEW5SFjlQh6/aPCD6Ic8bRhi86lKnCWsaUdJNf35a8t/5V71nrKL0PxTxi+mD" +
                        "DA154PJYxqTjpKrLWKf9yOnNb+Z+7daRktT8JfFX/BT/wDb+8Y6nLq2q/tUeKrG5lLOYPCt1DodqN2OF" +
                        "t9GitYgBjj5f61/XOXeAfBuFp8kMvpNf3k5v75Nv8T+QMx+kBxniqnPPMaqf91qC+6CivwPfvgN/wAFr" +
                        "/26Pg5q1ifFXj2H45+EYnQX3hf4oWsEs7xfdfytSs0hu0kI+60jyKCASh5B+O4w+itwlmdN+yovDVOkq" +
                        "bdvnB3jb0Sfmj7Tg76V3F+V1F7assTS6xqJX+U1aSfq2vJn9Y37Dv7e/wAGf26vAFz4m+H0r+HPGvhwR" +
                        "Q+P/hfrk0b6lpMso+WRWQKLi1kIIjnVQDghlRgVH+dPix4PZpwjjFSxPv0p/BUS92Xl5SXWL+Ta1P8AR" +
                        "3wk8ZMr4vwTq4b3KsLc9Nv3ovv/AHovpJL1Sehwf/BXH/lHR+09/wBgrS//AFI9Or2Po3f8lvgP8Uv/A" +
                        "E3M8f6Sv/JD5h/hj/6cgfyQ/wDBI7/lIv8Asw/9hXVP/Uc1Gv8AR76SP/JEY/8Awx/9OQP82Po1f8lxl" +
                        "/8Ail/6bmf2m/tyfHTxJ+zV+yb8b/jd4OsbfUPFfgXSVufDkGrKz2y3t7ewabDLKikF1ia4EhTI3bcZG" +
                        "c1/lr4TcJUM94jwmBrNqnVl71t7JOTS7Xta/S9z/VTxc4vr5Dw3i8fRSdSlD3b7XbUU33s3e3W1j+bb/" +
                        "gmB/wAFGv20vj9+3l8Evhj8W/jpe+L/AAB4wfxRN4h8Lzabodrbzmz8IatqcAzY2ULoI54EcBWH3QOnF" +
                        "f3L4++CHC2TcIYvFYPCKnWp+z5Zc021erCL3k07pta9z+E/o/eOXFWc8Y4TCYzGOpRqe05o8sEnalOS2" +
                        "imrNJ6dj+j79sz9s/4RfsR/CmT4l/FG5kv77UpG0nwN4F0Zo/7T13UFUOYoBIQqRxqQ00zfKi46syK38" +
                        "PeF/hdmXFeY/VcIrJazm/hhHu+7eyS1b8k2v7o8UvFPLOE8u+tYtttu0IL4py7LslvJvRLu2k/5Kfj1/" +
                        "wAFwv24fi7qd6ngbxVZfAXwjI7Cy8P/AA7s7ea9EXIXz9S1KOadpADy0Pkqf7or/R3g/wCifwnltNe3p" +
                        "vFVesptpX8oRaVvJ8z8z/NrjH6WvFuZ1H9XqLC0ukYJN285yTd/Ncq8j44h/wCCg37c0GpHVU/a3+ITX" +
                        "RQQ+VN4r1iS2wrBv+PeScw545OzJHGcE1+my8GeEnT5P7NoW/69xv8Afa/4n5fHxq4uVTn/ALSxF/8Ar" +
                        "5K33Xt+B96fs7f8F3v2xPhVqenWfxen079oTwTG6RX9n4ktbbStbjtx1+zajpUMal++64hmz046j8g42" +
                        "+iJwzmNOUsGpYWr0cW5Qv5xk3p/hlE/YuCPpg8UZdUjHGuOLpdVJKM7eU4pa/4oyP6yP2Tv2tPhD+2X8" +
                        "J7P4tfB/Up5dME7aJ4j8O63EsGp6NqccSTPaXUaM67gsisrozIykEMeQP8AOjxF8Ocy4XzF4PGRXNa8Z" +
                        "LWMo7KUX8mrNJp7o/0f8OPEjLOKctWMwUny3tKL0lGW7jJarZp3Taa2Z/Nn/wAFSf8AgqT+2F8Mv2wvi" +
                        "R8GPgx8SD8K/AnwrOn6FaWmhafpdzcajcXOl22ozXV1NqNtcNu3XBREQqoVRwWJJ/ub6P30fuGcfwzQx" +
                        "uNoe3rV+ZtuUkopScUkotdrtu7bfayP4S+kL9IXifL+J6+BwNf2FGhypJRi3JuKk23JPvZJWSS73Z/RH" +
                        "+wT8S/F/wAVP2Mf2f8A4ofEzxE3iHxh4q8Ox654q8S3628DXE3nShpXECRRr8qjOFA4r+KfGDIsNl/FG" +
                        "MwuFhyUoVLRiruystNbs/tzwcz7FZjwrgsXip89WdO8pOyu7vXSyPxA/bh/4L4aloPirXPht+xjo+m6p" +
                        "YaJLJpmofG/xZC17BeTRkq7aRZ7kRolYfLcT7hJyVj27Xb+r/Cf6HtOth4YrO5Si5K6pRdml/flvfvGN" +
                        "musr3S/kzxb+mRUo4ieFyOMZRi7OtJXTf8AcjtbtKV0+kbWb/Enxj/wUq/b28c3V1ea1+1f4zspbzb5y" +
                        "eDtWk8OxDawYbIvD4skj5HOxRkcHiv6ryzwL4PwkVGGXUWl/NHn/GfM38z+Ts08eOMsZJyqZlWTf8suR" +
                        "fJQ5Uvkdn8NP+CsH/BQH4X6hBeaZ+0hrPiu1Rle60j4li28R29wigDYzatHNMgO3kxSI3XnJNeXnv0de" +
                        "Dcwg4ywMIPvTvBr/wABaT+aa8j1ch+kdxpl81KOOnUXapaon/4Em18mn5n9Fv8AwT0/4LVeC/2o/FPh7" +
                        "4KfHXwvb/Cz40+I5F0zwnrPh1ppPDev3ZUkQILp5JrK4cjEcUjyK54EgYqh/ibxp+ixiuH8PPHYCo62F" +
                        "gryUre0gu+llKK6tJNfy2TZ/cHgn9KzC8Q4iGBzCmqGLm7Rcb+zm+2t3CT6JuSf812kfuxX8jH9fBQBB" +
                        "dXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/k/8A+Co3/BUa5+OFzrf7Pf7PetvafBq0d" +
                        "tP8c+OdPZo5fFcsbYaCBhgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz40ePPDfwz+GfhufxX408VzjT9H" +
                        "0fTwMscbnkkdsLHFGoLySOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiuCNfiD8QVjOFGRJ/Z+n" +
                        "+YA0dpGwGTgNKwDuBhETaMbHNOdz9Caog/N3/grl8OZviX/AME9P2jdMs4PO1Hwxptl8RrNgCTGnh3Vb" +
                        "bVrpsD/AKdYJh7ZzX7l9G7O1gONMDKT92cnB/8Ab8XFf+TNH4V9JXI3j+CcdGKvKEVNf9uSUn/5KmfwI" +
                        "W1zPZ3Fvd2szW91aulzbTxEq6SIwZWUjoQRkV/sTOClFpq6Z/jTTm4yTTs0f6XvwM+JVj8ZPgv8J/izp" +
                        "0iSWnxI8O6N41TyeiNqWnxXTpjAwUZypBGQRg1/hLxbkU8rzTE4OW9GpKH/AIDJq/z3P96eEc+hmmVYb" +
                        "GR2rU4z/wDAop2+Wx6pXzx9Ec34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoUeORHBBBB" +
                        "/DqOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gqH/wS88U/sWeKbj4k" +
                        "fDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/wDVvwB8fsPxTh1hsS1DHwWq2VRL7" +
                        "UfP+aPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v8Awg1w6brem" +
                        "n7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH434" +
                        "f8AiBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf32fsb/ALV/gT9s74D+Gfjd4EtpdITUJJtB8WeFr91ku" +
                        "NG1qzCG5tHkQBZABIkkcgA3RujEKSVH+O3id4d4zhfN6mBxDUrWcZLaUHtK3TZpro01drV/7KeF3iNg+" +
                        "Ksnp4/DpxveMoveM1vG/XdNPqmnZPRfU1fnx+hn4z/8F4v+Uf3iH/safDP/AKUyV/T/ANEP/ksof9eqn" +
                        "5I/lv6YX/JFz/6+0/zZ+H//AAb/AH/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+kzP5K+hh/wAlfL/rx" +
                        "P8A9KgfLn/BXH/lIv8AtPf9hXS//Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGYf4o/wDpuB/Q/wD8E" +
                        "0/2A/2Nvi3+w5+z/wDEX4k/s9+H/GHjfxPp2o3Wv+JNXhna5upItdvrZGcpKoyEjVRx0FfxX47eMXE+W" +
                        "8WY3DYXG1KdKEo8sU1ZXhF9u7P7a8BvBrhfMuEcFicVgqdStOMuaTTu7Tku/ZI9c+Pv/BEb9h/4u+Hb+" +
                        "DwH4Km+BHjUxt/ZPizwBd3ktsswA2C406/nlt5IwR8wjEbnP3xxXzfB30reLMtrp4iqsTS6xmle3lNJS" +
                        "T9eZeR9Lxl9E3hLM6DWHpPC1ekoN2v5wk3Fr05X5n8ff7Tv7N3xX/Yx+Omt/CT4hA6d4p8LSQa94Y8U6" +
                        "G8sdvqVhJIXs9SsZflbYxjOCMMkishwyED/AEu4C45y7ijKIYzDa053Uou14v7UJL5+jTTWjR/mRx/wJ" +
                        "mXCubzweJ0qQs4yV7Sj9mcX209U009Uz+tT9hDXfgL/AMFVf2XfAfir9qL4YaL8VvjH8Cprn4Z+LNR8R" +
                        "wE3DSvHBPHeqYnRtt7AsbSfw+csm0AcV/nJ4u4POPDziCtSyrEToYXEpVIqL06px/7cd0uvK43P9JPB/" +
                        "GZN4i8PUa2bYeFfFYZunJyWvRqWn86s305lKx/J7+2/4N8L/Dv9r/8AaS8C+CdFh8N+EfCXjHXdB8N6D" +
                        "pwKwWdnbXzxxRRhiSFVRgZNf6KeFGaYjG8NYHEV5udWdGDk3u20rtn+cXi1leHwPE2Pw9CChSp1pxjFb" +
                        "JJuyR/Xz+yP/wAE5f2HvHH7KX7MfjXxb+zX4b13xV4v+HvgvxR4m1y+huDPeahqHhuzu7ieQrMAXkkkZ" +
                        "mwOpr/NXxI8buLMJxFj6FHHVI06derGKTVlGNSSSWnRKx/pn4a+BvCWL4cy+vWwFOVSph6UpNp3cpU4t" +
                        "t67tu54J/wWe+O+jfsc/sieCP2YvgFpFl8Mj8a2v/CsGleCoItPi0zwpYLHLqiwx2oUI15JdxxOxGXV5" +
                        "jksSR9j9F3hCrxPxLVzTMJOt9XtK825OVR35Lt78qi2l0aj0PjfpT8YUuF+GaOVZdGNH6zzRtBKKjTjZ" +
                        "zsltzOSTfVOXXU/nV/4J4fsI+Lv28fjRJ4IsdTk8KfDjwdDF4g+KvjuGETPY2UrskFvbo5CNdXboyxBj" +
                        "hVV5CGCFW/tjxq8XcNwhlft5R569R8tOF7XfVvryx3dt20tL3X8QeCXg/ieMc19hGXJQprmqTtey6JdO" +
                        "aT0V9km9bWf9j/wu/4JcfsFfCjw5B4e0v8AZr8N+L2WH7Je6/8AFGxh8TajdOV2vK0usLOI3Y8/uVjVT" +
                        "91VHFf5j8QfSA4wzGu6k8dUp63UabdOK8rRtdf4m2+rZ/qFw99Hvg7LaCpQwFOppZyqJVJPzvK9n/hSS" +
                        "6JH58/t7/8ABD/4MfEHwN4j+IP7JPhpPhf8XdEhl1iD4e6bPKfD/iERKZHto4bhnFncuBiFoisRbCug3" +
                        "eYv7N4PfSvzTBYuGHzip7bDSdudr34eba+KK+1e8rapu1n+LeMf0S8qxuEqYnJ6fscTFX5E/cnbok/hk" +
                        "/s2tG+jSvzL+Yj9kr9o/wAa/sfftEeA/jN4ba5gn8JXy2HjXw2jGE6poksqxajp0ySYGZIwdm8fJKqPj" +
                        "cgx/e/iPwPheJskrYKrZqcbwlvyzXwyXo97bxbWzP4A8NuOsXwxndHHUrp05WnHbmg/ji/VbX2kk90f2" +
                        "j/8FUNf0nxX/wAEyP2gfFGgXi6joXiTw9oOv6LqEQIWe0vNd0y4hkG4A4ZHBGa/y3+j5g6mH49wVKorT" +
                        "hUnFrs1Caa+8/1S+kRjKWJ4AxtWm7wnThJPunODT+4/k5/4JHf8pF/2Yf8AsK6p/wCo5qNf6K/SR/5Ij" +
                        "H/4Y/8ApyB/nF9Gr/kuMv8A8Uv/AE3M/re/4K4/8o6P2nv+wVpf/qR6dX+cP0bv+S3wH+KX/puZ/pP9J" +
                        "X/kh8w/wx/9OQP5Sv8Agi7/AMpLf2bP+5x/9QHXK/0O+lH/AMkJjv8AuF/6epn+dH0V/wDkvcB/3F/9M" +
                        "1D6j/4OF9f8TXn7Yvw88OalPKPDOheAtO1DwxYuGEAkv9Z1MXU6Z4LyNbojEdo1HavgPoXYOhHhivVil" +
                        "7SVeSk+ukYcq+V216s/QvpsY2vLiihSk37ONCLiunvTnzP1dkn6I8w/4JWeEP8Agl/r9zq91+2p4vEXx" +
                        "QW+VPB/hX4lSXWkeC1skVCszXtnKsUsxcsHS8kjjC4wj8sPf+kJmXH9GMVkdL/Z+X3pU7Sq37crV0rbO" +
                        "Cbv1Wx8/wDR3yzw/rSk89q/7Rze7GpeNK3fmTs3fdTajbo9z+rDS/2Jf2AfGnhO2k8PfswfCzxB4X1WF" +
                        "VsPEHhjwt4al8+IHh4tQsYPMJ4++suT61/nliPFXjLC4lqpmGJhUi9YyqVNH5xbt8mj/RXD+E/BmLwyd" +
                        "PL8LOnJaSjTp6ryklf5pn5Q/thf8EBPhp48C+J/2PfEFv8ACHxNLMW1PwD4+vNSu/DM8bksXt7lIr28t" +
                        "XUk/KRKhGAojxz/AET4Z/TGx+D/AHWcwdenbScFFVF6q8YyXn7r7tn85eJ30M8BjP3uSzWHqX1hNydN+" +
                        "jtKUX5e8uyR9+/8Evf2DNZ/YM+C3ibwj4y8Y2njL4g/EHVl8VeK7jwws40mzEFqlpBbWr3ccMsoUBmaV" +
                        "40yWxsG3Lfjnj94v0uMM0p1qNJ06NKPLHmtzO7u27NpdEkm9t9dP2b6Pvg7V4OyqpRr1VUr1Zc0uW/Kr" +
                        "KyUbpN9W20r3tbTX+TP/grj/wApF/2nv+wrpf8A6jmnV/ov9G7/AJIjAf4Zf+nJn+b/ANJX/kuMw/xR/" +
                        "wDTcD+hH+3vE3hr/g3/AIdU8I3M1nrB+GUWlvcWIJlWxv8AV1sL7G3kA2s0oZuwye1fxj9ToV/GRwrJO" +
                        "P1m+vdRvH/yZI/tT65iKHgwp0W1L6tbTtKVpf8AkrZ/JB8F7H4Tal8VfAtj8dte1bwz8Ibi/iXx9rnge" +
                        "0ivdVgsACzfZ4pmVcswCs+GKKS4SQqEb/R/imtmVPLq0sBCM8So+4pu0W/Nr77aXejaTuv82OFaOW1Mx" +
                        "oxzCcoYZy99wV5KPkn919bLVKTVn/bD+yX+zv8A8EgPHvha0sf2dvAPwy+MYigEt3F4ut7PxP4iCgLul" +
                        "urbxUs97AWIzhokUchQBxX+VviNxr4l4PEOWZVsTh9dOVunD0Tp2g/vb7s/1c8NuCPDLGYdRy2jhsRpr" +
                        "zJVJ+slUvNfcl2R2fx5/wCCQ/7Cfxz0S/tIvgxYfCHxJMjLpfi/4MRR6BLaSEcN9itVFjKucZWSA8dCp" +
                        "5ry+EPpJ8XZTVUnipV4dY1ffT/7efvr5S9bnqcY/Rn4PzelKKwscPU6Spe41/26vcfzj6WPy6/Zd/4IL" +
                        "/FX4N/tV/Dz4q+PvjN4d1v4WfCTxDYfETw0PCiaouv6rc6Lex6hYx3Nrd2y29qjSxKZtlzMdoKr97cv7" +
                        "/4gfS/y7NOHq+Ew+FqRxFem4S5uXkippxk00+aWjdrxjrq9rP8An3w++h1mOV8RUMXiMVTlh6FRTjy83" +
                        "PJwalFNNcsVdK9pS00W91/T1X8Dn9/hQB4p+0V8EtH/AGjPgt4/+C+u+INR8Lab47sjpcuveGJ3gurd1" +
                        "kWZCQrKJYiyASwsdsiEqcZyE0OLsz+Fv9qD9l/4pfsmfFLVPhd8UdL8m5h3XvhvxJZK507WtOLlY7u0k" +
                        "YDKnGGU/MjZVgCKxasdUZXPb/8Agnh+2m37FPxom8Xap4Wg8U+BPGtvD4X8fxw20Daxa2Kz+aJ9PuJAG" +
                        "V42+Z4dwSYABsMqOji7CnG6P7bPh38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdLfdFNE2QQQQGR0YFX" +
                        "RgGRgVYBgRWxytHaUAc34x8KaL488IeKvA/iS2+2eHfGem33hTX7P5f3tlqNq9nOnzBh80chHINd2WZj" +
                        "VweJp16TtOnJST7OLuvxRw5pl1LGYaph6qvCpFxku6krP8ABn+ad8Wvht4g+DnxR+Ifwo8VRGLxF8OdZ" +
                        "1LwXq+5GjEk2nXb2pkQNn5JNm9DkgqQQSDmv91uHM9o5nl9DF0vgrQjNekle3qtn5n+DXEmRVsrzCvg6" +
                        "y9+jOUH6xbV/R7ryP7BP+CCH7Rdr8T/ANk3UvglqmoCXxd+z5qk2nW9rKcyP4e1yaXU7KXLHLbJzcw4A" +
                        "wqog7gV/mj9MLgmWA4jjjoR/d4qKd/78EoyXzXK/Ntn+nH0OOOI5hw3LATl+9wkmrf3Jtyi/lLmXkkj9" +
                        "0a/kk/rsKAP5UP+Cw//AAVe0vxfY+Lv2Qf2btVt9X8MXW/QPjT8ULTy7iC+2PiTStMc7lMQZcT3C/eI2" +
                        "Rnblm/0N+jN9Haphp085zOLjUWtKm9Gu05+f8sem71sl/nV9J36RtPFQq5LlklKm/dq1Fqn3hDy/ml12" +
                        "Wl2/wCbrwf4P8U/EDxToHgnwToF14p8XeKbqHRPD3h7RIXnury6ncIkcaICSST+HU8V/ceZ5nh8Fh516" +
                        "81CnBNyk3ZJLdtn8K5ZlmIxuIhQoQc6s2lGKV229kkf3xf8Evv2O9f/AGJ/2WtM+GPjPU4dQ8f+LNWu/" +
                        "if49g0x/NtLHUtRs7SxFpDIOJBDBZRK7j5WfcVyuCf8evH3xNo8VcQSxVCLVGEVThfRuMXJ8zXS7k2lu" +
                        "la+p/sj9H7wwrcJ8PRwteSdapN1J21SlJRXKn1sopN7N3tofolX4oftx+M//BeL/lH94h/7Gnwz/wClM" +
                        "lf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/YheIP/AE46XX9YfTJ/5JGP/X+H/" +
                        "pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy/8ATkz8++kr/wAlx" +
                        "mH+KP8A6bgf1vf8Ejv+UdH7MP8A2CtU/wDUj1Gv84fpI/8AJb4//FH/ANNwP9J/o1f8kPl/+GX/AKcmf" +
                        "o7X4efuZ/NV/wAHG/w60S4+HH7OXxaS1ji8R6Trep/Dqe9RQJp7LULD+040cgfMsUlk5QE/KZGx941/d" +
                        "X0Ic7qxx2Owd3yShGduicXyt/NSV+9l2P4O+nJkdKWBwOMsvaRnKnfq1JcyXycXbtd9zxT/AINwfEWpw" +
                        "fET9qDwksxOjanovh3xFPbsSQLmxvru2RlHQZS7YH1wPSvqfpw4Km8Fl9a3vKc4/JqL/wDbUfKfQYx1R" +
                        "Y7MKN/dlCEvmnJL8JM/GX/goFqEGp/tyftcXNsGEcfxE8W6e3mgA+Zaa1cWj9CeN0Zx7V/UPg1RdPhPL" +
                        "U/+gem/vgn+p/LXjRWVTi7M2v8AoIqr7ptP8j+7f9h3/kyr9j//ALJd8P8A/wBROwr/ACL8WP8Akqsz/" +
                        "wCwmt/6ckf6/wDhJ/ySmWf9g1H/ANNxP5pv+DjB7w/tJfAeNzJ/Z6+B5HtQ27yvObXrwS7e27aE3Y7Y9" +
                        "q/uv6Eij/YWMf2vbfhyRt+v4n8G/Thcv7ewa+z7H8eeV/0/A/Dr4b/8Lx8jVv8AhUP/AAlf2bfD/bv/A" +
                        "Arf+19m/D+V5/8AZfGcbtu73x3r+sc8/sm8frnsr629py/O3N+Nj+SMi/te0vqXtbaX9nzfK/L+Fz0z/" +
                        "jNX/qqP/l2V4P8Axiv/AFDf+Uz3/wDjK/8AqJ/8qB/xmr/1VH/y7KP+MV/6hv8AymH/ABlf/UT/AOVDz" +
                        "S5+C/xzvLie8vPhP4suru6d7m6urnQtYeSSR2LMzM0BJYk5JPWvehxTlMYpLE0kl/fj/meDU4VzeUnKW" +
                        "Gqtv+5L/I/ru+Pket2//BBKzs/EdtcWetad8LfAml31lqsTwXMJtb7SLZY5I5FVlZFQKQwzxzzX+bPB0" +
                        "qT8YHKk04PE1mmtU7qbun5n+l3GcasfBxRqpqaw1FNNWas6as15H863/BI7/lIv+zD/ANhXVP8A1HNRr" +
                        "+2PpI/8kRj/APDH/wBOQP4h+jV/yXGX/wCKX/puZ/W9/wAFcf8AlHR+09/2CtL/APUj06v84fo3f8lvg" +
                        "P8AFL/03M/0n+kr/wAkPmH+GP8A6cgfylf8EXf+Ulv7Nn/c4/8AqA65X+h30o/+SEx3/cL/ANPUz/Oj6" +
                        "K//ACXuA/7i/wDpmof1kf8ABQP/AIJ3/C/9vXwNpWn+INRfwR8UPBS3DfD74labAs72wuADJaXkBZPtF" +
                        "o7KrFdysjDKMMuH/wA6fBrxqzDg/FylTj7TD1Lc9Nu17bSi/syW17NNaNOyt/o/40eCOX8Y4OMakvZ4i" +
                        "nfkqJXtfeMlpzRe9rpp6pq7T/kp/aE/4JDftzfs+zajeT/Ceb4r+ELEvJH4y+DTPrkTxINxd7KJFv4gq" +
                        "8sXtwo5wxAJr/Rzgv6SnCWcqMViVQqv7NX3Nf8AF8D8rSv5H+bXGv0Z+LslcpPDOvSX26Xv6f4V7687x" +
                        "t5nxR8O/jJ8dv2efEV5cfDL4jeJfhD4jt5RFrFt4a1DUNJkeSE48u7gjeMSAHgpKpHqK/VM74YyjOqCW" +
                        "KoU68GtOaMZb9YvW3qmflOR8UZxkldvC16mHmnryylHbpJaX9Gj9gf2dv8Agvz+1R8ObvTtL+O2haT8f" +
                        "fCaFIb7UWgh0DxEkY+XdHc6bGLVyo5IktSzkDLrkmv5p41+hzw9joyngJywtTorucPmpPmXylZdnsf03" +
                        "wR9MviLAyjDMIRxVPq7KE/k4rlfzjd91uf1L/snftefBf8AbN+GMPxP+DWtSXFrbyDTPFHhXXEjg1jRL" +
                        "4rv+z3sEbyKpZfmR0ZkcfdY4IH+ffiL4a5pwvj3hcbBJtXjJaxmu8XZfNNJrqtj/Qvw38TMq4py9YvBT" +
                        "bSdpRekoPtJXfyabT6Pc/ij/wCCuP8AykX/AGnv+wrpf/qOadX+qH0bv+SIwH+GX/pyZ/lL9JX/AJLjM" +
                        "P8AFH/03A/rs/4JxeG9B8Y/8E3P2c/CXinSYNe8M+J/BTeH/EOh6nGJba8srx7i3nhlRuGSRHKsPQ1/m" +
                        "344Y6theOcdWpScakK3NFrdNWaa80z/AEs8DMDRxXAmBo1oqVOdHlkns07pp+TR+FP7YP8AwQF+K/hjX" +
                        "db8XfsgavbfETwRdySX1n8LfFd7DYa/pyu277Pb3d6UtruNOdrSyRSYwCJGyx/rjwz+mNl2Iowo5zF0q" +
                        "q0dSKbhLzcVeUW+yUl10Wh/IXid9DPMcPWnWyWSrUXqqcmozj5KTtGSXduL6avU/DH4mfBD48fs8eIIL" +
                        "P4p/DTxH8J9ds5x/Zt54j0+904PNGSyva3LKqS42kq8TkcZBr+tch4syjOqLlhK9OvBrVRkpaf3luvRo" +
                        "/kXP+Es4ySuo4vD1KE09HKLjr/dez9U2fXfwM/4Kzft4fAZrC10f433vxB8OWOF/wCEU+MK/wDCSW0ka" +
                        "8LH9ovW+2xooGFWK5QAcDivzXi36OfCGcXc8IqU39ql7j9bL3G/WLP0zhH6SHGGT8qhi3Vpr7NX94vS7" +
                        "99L0kj+iz9g/wD4LbfCv9pzxT4d+EHxo8LJ8F/i54kkTSvDep2t19o8M61eucJBFLcbZbSeUnbFFLvV2" +
                        "wolLsqH+JvF76KmYZBh54zA1PrGGgryVrVILu0tJJbtqzS15bJs/uDwe+ljl2f4iGCx1P6viZu0Xe9Ob" +
                        "6JN6xb2Sd03pzXaR+5lfyWf1yFABQB8x/tYfsn/AAt/a/8Ahbf/AA2+JNh5NzD5l94M8Z2MaHUdC1Ept" +
                        "W4t2bGVOAJYidsi8HBCsqauVGVj+Iz9qD9l/wCKX7JnxS1T4XfFHS/JuYd174b8SWSudO1rTi5WO7tJG" +
                        "AypxhlPzI2VYAisWrHTGVz6Y/4J5/8ABQzxr+xd41GkaubnxX8B/FdyknjfwRG+6WzlbEZ1HThIQqXCK" +
                        "BvTIWZQFYghHRxlYmcLn9ofw7+Ingr4seCvDnxF+HXiO28V+DPFdsmqaFrulvuimibIIIIDI6MCrowDI" +
                        "wKsAwIrY5mjtKAP49/+C/37Ktx8P/jl4X/ag8NaWV8IfGu3j8PeNrm2T91beKNJtliRn2qAv2uzjQr1L" +
                        "PDKx61/ph9DjxCjjMpqZVVl+9w75oedOTv/AOSybv2Uoo/zG+mb4dywWb081pR/dYlcs/KpFW/8milbu" +
                        "4yZ+cH/AATg/a6uP2Mv2pPBfxOv5pm+HmthvA3xY0603MZdB1CRPMmVB96S1lSO4QDltmzIDGv3Dxw8N" +
                        "o8UcP1cLFL28ffpt/zx2XpJXi+179D8M8DPEuXC3ENLFSb9hL3KiX8kt3bvF2ku9rdT/QY0rVdM13S9N" +
                        "1vRdQh1bRtZt4dV0nVdNlSa3uba4jE0UsUkZKujowZWBwQciv8AGXEYepRqSpzi4yi2mno01o010aZ/t" +
                        "Nh8RTrU41KclKMkmmtU09U0+qa2P5bv+Cuf/BXP+1P+En/ZV/ZV8T/8Sv8AfaB8YPjBoE3/AB9dYptK0" +
                        "qaI/wCq6rcXCn5+UQ7NzP8A6A/Ru+jd7P2ebZtT97R0qTW3ac136xi9t3rZL/Pb6S30lvae0yjKKnu6x" +
                        "q1YvfvCD7dJSW+y0u3/ADV+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASSSfw6n" +
                        "iv7pzPM8PgsPOvXmoU4JuUm7JJbts/g/LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5/wS88LfsWeFrf4kf" +
                        "Ei3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/wC4n7vJf/KTx+8fsRxTiHhsM3DAQei2dRr7U" +
                        "vL+WPTd67f6y/R9+j7h+FMOsVikp4+a1e6pp/Yh5/zS67LTf9fq/mo/poKAPxn/AOC8X/KP7xD/ANjT4" +
                        "Z/9KZK/p/6If/JZQ/69VPyR/Lf0wv8Aki5/9faf5s/D/wD4N/v+T69W/wCxC8Qf+nHS6/rD6ZP/ACSMf" +
                        "+v8P/SZn8lfQw/5K+X/AF4n/wClQPlz/grj/wApF/2nv+wrpf8A6jmnV9/9G7/kiMB/hl/6cmfn30lf+" +
                        "S4zD/FH/wBNwP63v+CR3/KOj9mH/sFap/6keo1/nD9JH/kt8f8A4o/+m4H+k/0av+SHy/8Awy/9OTP0d" +
                        "r8PP3M/nt/4OLf+TYPgf/2Pq/8AqPajX9n/AEJf+R/i/wDrx/7fA/ir6cH/ACT+E/6//wDtkz40/wCDc" +
                        "f8A5LX+0f8A9itpX/p2NfqH03v+RVgf+vsv/ST8s+g1/wAjbHf9eo/+lH5pf8FWvhzrnw1/b+/aRsNat" +
                        "pIo/FWuN8RtDupVKpc2OvwpqaPGSAGVGleIkdGRh1Br91+jxndHHcG4GUH8EORrs4Pl19bJ+jTPwb6Re" +
                        "R1sBxnj41F8c/aJ91Nc2no216po/o1/4Jc/8FRv2aPGP7P3wc+AnxN8f2Pwm+Lnwt0PTPhnFp/jmVNP0" +
                        "zV7TRraPTbOezv5ttuXeGOMNDI6yb921WX5q/iL6QH0f8+wuc4rMMLRlXw1acql4e9KLk3KSlFe9ZNuz" +
                        "Sata7T0P7k+j59IPIcVkuFy/FVo0MTQhGnab5YyUUoxcZP3btJXTad72TWpzX/Bez9mPUfjN+zv4G/aK" +
                        "8CWx1zUvgNJd3XiNNKAm+0eFNbSBprsGLcXW1lt4pMjgRvI5OBXf9D/AI9hled1stxD5Y4m3LfS1SF7R" +
                        "8uZNrzkorqcH0xuAJ5rklHMsOuaWFbcra3pzteXnytJ+UXJ9D+ff/gmp+3jq37CPxwn8U3+nTeI/hR8Q" +
                        "Ibfw38VvDGnlBctbQzGS3vrXfgG4tDI5RGIV1d0JUsHX+y/HXwhp8X5SqUZKGJpNypye12tYv8Auysrv" +
                        "dNJ62s/4u8BvGGpwfm7rSi54aqlGpFb2T0kv70buy2abWl7r+2D4U/trfsnfGrw1Z+Kvh3+0D4W1awu4" +
                        "1uZdPv9Ys9O1O03/wAN1Y6g8NzA2e0ka57ZHNf5W8ReFfEeVV3SxOCqxa6qLlF+kopxfybP9XOHPFfhv" +
                        "NcOq2GxtKUWtnJRkv8AFGTUl80j1D/hePwU/wCiweFv/Cg0n/4/Xgf6p5r/ANA1X/wCX+R9B/rdlP8A0" +
                        "FUv/A4/5noel6rpeuafaatoupW+saVfp59jqelzR3FvMhON0ckRZWHHUGvFxGHqUpuE4uMlumrNeqZ7e" +
                        "HxNOtBTpyUovZp3T9Gj4M/4KpaFe+Iv+Ce/7Uun2Cl57fw6uuyBQW/c6XqVrqcxwPSO3Y57V+v/AEe8Z" +
                        "Chxpl8pbOpb5yi4r8Wfjv0iMHOvwVmMY7qnf5RlGT/BM/je/wCCYPxQ8M/Bz9vP9nDx94y12Hwz4ZstX" +
                        "vNA1bXtSKJbWqa7ot7oKvM8hCxx7rwB5GICLliQBmv9OfHzIK+Z8H47D0YOdRwUklu+SUZ6d37ui6vQ/" +
                        "wAvPo/8QYfK+McDiK81CmpuLk9lzwlDV9F72r6LXof2Bf8ABWyWKf8A4Jx/tNTwSrNBNpOkywzRMGR0b" +
                        "xFpxDKRwQR0Nf5pfRwi1xxgE9+aX/pEz/Tb6Sck+Bse1qnCP/pyB/Kd/wAEXf8AlJb+zZ/3OP8A6gOuV" +
                        "/ob9KP/AJITHf8AcL/09TP86vor/wDJe4D/ALi/+mah++X/AAVq/wCCqHxX/Ym+I/w++DPwW8IaLfeJv" +
                        "Emgx/EnxF4q8eQXV7BFZXWpXmmW9va29pc2uJN9hK0juzDaVAXOSP49+jl9HvLuK8DWxuOqzVOE/ZxjB" +
                        "pO6jGTbbT0tJWStre76H9k/SS+kRmXCeOoYHA0oOpOHtJSmm1ZylFJJOOt4u7d9LWXU9D/YX/4LM/s//" +
                        "tI+GdL8PfHLxHo/wE+OMR+xalpOvXLWPhzVXyAs2nX2oOUj8wkD7PPL5gbhTIPmrxPFv6L+c5HXlUwEJ" +
                        "4rCbppXnHynGKu7fzRVratR2Pb8IfpS5LnuHjTx9SGFxezUnaEvOEpOyv8Ayyd76Jy3P0O+L/wM/ZX/A" +
                        "GhfDB1j4y/D3wh8SvDixZt/F/iK30+ZreJsR7oNTUrJCDkDdHKvbmvxbhri3iHJcRyYKvVozv8ADFyV3" +
                        "5w2fzTP23ibhHh3O8Pz46hSrQt8UlF2XlPdfJo/jx/4KlfAT/gnf8Edb0Sz/Y9+LVx4k8eXd60XjL4a6" +
                        "FqUfibw5pOniGQ701Ys8iXCyhUNu007YJLGMqA/+mX0fuMONc2pTlnOGUKKXu1HH2c5SuvsbONteZRit" +
                        "rc19P8AMP6QvBvBGU1YRyXEudZy9+mpe0pxjZ7T1aley5XKT3vy21+lv+DdK78UJ+1D8brG0af/AIQq5" +
                        "8Avd+IFjB+zHVIfEOmpp5kP9/ypbvZ7bq+E+m1Tw74fwknb2qr2j35XCfNbyuoX+R979B+piFxBi4xv7" +
                        "J0Ly7cynDlv52c7fM+C/wDgrj/ykX/ae/7Cul/+o5p1fr/0bv8AkiMB/hl/6cmfjv0lf+S4zD/FH/03A" +
                        "/qU/ZW+NVt+zn/wSA+GHxxutFfxGvwz+HknieDQIZRB9suIp5lghaUhtiPIyh32kquSASMH/P7xC4Wln" +
                        "fiXiMAp8ntsRy829k0ru3WyvZdX1R/oT4d8VxyPwyw+PcOf2OH5uXa7Tdlfom7Xetl0Z+Vv7M//AAcJe" +
                        "P7j4pR6d+1d4E0K0+E+vO0H/CRfCnT9Si1DQHc/JK8F1e3Zu7dekiqBKBll3keW39B8efQwwccv5sorT" +
                        "eJj9mpKPLPyuox5Zdm/d6O26/njgH6auNlmPLm9GCw0vtU4y5odm05S5o90ve6q+z/pB+H/AMaf2cf2n" +
                        "PChb4f/ABB8LfGTwvrUW290ayurDUtyMu4x3VjNukjYDlo5oww7iv4eznhbPMhxH+0UauHqRejacfnGS" +
                        "0fqnY/ujJeKsiz/AA3+zV6WIpyWqTUvlKL1Xo0mfk3+3l+w5/wSH0Hw34g8UfFjU9E/Zi8VxxS3drc/C" +
                        "PUrfT9UnlUEiO38OQi4huMt95YbQNj+NRyP6L8IPFnxJrV4UsJGeMp3S/eRcorzdV2cfVzt5PY/m/xi8" +
                        "I/DOjQnVxkoYKpZteykoyfkqSupeihfzW5/GxdNbWWt3LeG765ns7S6dtB1OeIWl48ccx8iVo4ZZRHIQ" +
                        "AxVZG2ngMcZr/TympSpL2qSbWq3W2qu0rr5K/Y/y6qOMKr9k20n7r2e+jsm7P0bt3P9NH4dSeIJfh94E" +
                        "l8WLInimXRtLk8SpeLtmGoNZRG4Eg7N5m7I9a/wcztUVjayo29nzy5bbct3a3yP98cjlWeCoutf2nJHm" +
                        "vvzWV7/ADOyrzD1AoAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE" +
                        "7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqw" +
                        "BFYtWOmMrn0x/wTz/4KGeNf2LvGo0jVzc+K/gP4ruUk8b+CI33S2crYjOo6cJCFS4RQN6ZCzKArEEI6O" +
                        "MrEzhc/tD+HfxE8FfFjwV4c+Ivw68R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdGAZGBVgGBFbHM0eVf" +
                        "tXfs3+Df2svgL8QPgX42/0aw8X2udH1yNA82latbMJ7K9iGVJMMyqWUEb03IThjX23h3xxiuHM4o4+hq" +
                        "6b1XSUXpKL9V16Oz3R8R4jcC4XiTJq2X19FUWj6xktYyXo+nVXWzP8AO/8AjR8H/HfwC+KXjb4PfEvR3" +
                        "0Pxr4CvpNE1mycHY+0B4p4WIG+GeNlliccMjKw4Nf7U8LcS4POMvpY3Cy5qVWN0/wA0+zTumujTR/iTx" +
                        "VwxjMmzGrgsVHlq0pWa/JrumrNPqmmfYvh3/gp5+0/4V/Y+n/Y60HxL/Z/haSaWwtvHcMkw1228NzxkS" +
                        "aLBMD8luzk/OPnCExAhOK/Msb4CZBiOJlnVSnepa/JpyOa2qNdZW6bX956n6fgfH/iDDcMPJadS1O7XP" +
                        "rzqm96afSN+u9vdWh8H+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7hEjjRASSSfw6niv1" +
                        "7M8zw+Cw869eahTgm5Sbsklu2z8eyzLMRjcRChQg51ZtKMUrtt7JI/t2/4Jef8ABLzwt+xZ4Wt/iR8SL" +
                        "e18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/uJ+7yX/yk8fvH7EcU4h4bDNwwEHotnUa+1Ly/l" +
                        "j03eu3+sv0ffo+4fhTDrFYpKePmtXuqaf2Ief8ANLrstN/1+r+aj+mgoAKAPzB/4LAfBD4l/Hz9h/x34" +
                        "P8AhN4YuPGfi/R9S0fxnH4V0dDLf3trptyXuEtYl+aaZUcusS5Z8FUDMQp/ffo08V4DJ+LKNbGVFTpSj" +
                        "KHM9k5LS76K+l3ot3ZXZ/P/ANJvhLH5zwlWo4Om6lWMoz5VrJqL15V1dtbLV2sruyPxs/4IPfsp/tAeC" +
                        "/2mfGvxj+IHwq1z4d+A9D8Kah4Pj1Tx3pl5pL3up6lf2MscNtFfxxPKFjt5HkdVKrgAkFhX9O/S88Q8m" +
                        "xWQ0sFh8RCrWlVjK0JKVoxUk22m0tWkk9XrbZn8u/Q98Os6wmf1cbicNOlRjSlG84uN5SlFpJSSb0Tba" +
                        "0Wl90fPX/BXr9jL9pO6/br+J3j3wd8G/EnxD8F/F1tJ8QeD/EHgPRdR1eF5I9Hs9OuLaY6fDKIpo7iBw" +
                        "EYglCrDrx9p9GvxQyKPCOHw9bFU6VWhzRlGc4xfxSkmuZq6aa1XW66HxP0mPCzPpcX4jEUMLUq0q/LKM" +
                        "oQlJfDGLT5U7NST0e6s+p/UT/wTz+EXjL4EfsW/s9/Cz4hWI0vxr4a0Mz+I9IyGeyudSvrjVTbSFSR5k" +
                        "IuRHJgkblOCRzX8A+NPEuFzfinG4vDPmpTn7r7qKUbrydrryZ/oL4J8M4rJ+FcFhMSuWrCHvLs5Nys/N" +
                        "Xs/NH2bX5efqZ+Kf/BdL9n/AOLPx2/ZV8HS/CPwbe+PtT+G/iu38X+IvDfhmCW81NtNk0u8095re2gVp" +
                        "JvLknTeqAsFJbG1WI/qf6JPGWW5RxDVWMqqlGtScYyk7R5uaMrNvRXSdm9L6btH8p/S84MzLOOHaTwdJ" +
                        "1ZUaqlKMVeXLyyjdJauzaulrbXZM+Ev+Dfz4QfFr4a/GH9oK++Ivwu8ReAbLU/DWmWmnXnjXRNT0qK4l" +
                        "TVC7JG99DEHYDkgEnFfrv0yeJctx2WYKOGxFOq1Uk2oTjK3u9bN2Px/6GHDGZYDNMbLE4epSUqcUnOEo" +
                        "pvm6XSufrz/AMFC/wDgm78Lv29fCemz6lqJ8BfGPwbby2fgT4mWUAuAIHfzjY38G5DPas5LKAwaJiWQ4" +
                        "Z0f+bPBbxyzDg/EyUY+1wtR3nTbtrtzRfSVt9LSSs9k1/THjZ4FZfxjhouUvZYqmrQqJX035ZLrG+2t4" +
                        "t3W7T/kW/aF/wCCWP7bf7Omtz2OufBfUviJ4eMnkab45+DttdeI9MuVJwHZbGI3Nvk8YuYYznpnIz/pH" +
                        "wX9IPhTO6SlTxUaU7awqtQkvvfLL/t2TP8ANPjb6PHFmR1XGphJVoX0nSTqRf3Lmj/29FH9TH/BGf4Sf" +
                        "G34cfsPQ+C/2jPD9/pT63r2s6j4K8C+PYmF1YeFL2ys4UtZ7O7XfCklyl1KIZFB2yZIAbFf59/Sg4kyr" +
                        "HcWOvls4y5YRU5w2dROT5lJaNqPKuZdV5H+hf0WuGs2wPCSoZnCUeapJwhPdU2orlcXqk5c75X0e2p+Y" +
                        "v7dn/BBfxTHr+tfEr9iiS31fQtUll1K++BfiG8is7qwkkbeU0m8vGSGSDk7YriRGQDAeTOB+9+Ef0v8O" +
                        "6MMLnl4zjZKtFXT/wAcVqn5xTT7Lr+AeL/0O8Qq08VkVpQk23Rk0mv8Eno15Saa7vp+FfiT9i79r3wjq" +
                        "k+jeIf2YPH2n39uSpUeEtcmikAO3dFNBbPHImRwyMQfWv63wPilw1iaanTzCg0/+nkE/mm7r0aufyHjv" +
                        "CvibDVHCpl9dNf9OptfJpWa807GB/wyt+0//wBG4ePf/CP8Q/8AyJXZ/wARCyD/AKDqH/g2H/yRx/8AE" +
                        "O+IP+gCv/4Kn/8AIn9Uv/BAv4N/tG/Cb4RfG+b4y+Gda8DeA/FWraPdfC3wf44t7nT7lLq2t7xNVvI7O" +
                        "8SOWOK4ElqocgBzGSOhJ/z3+mJxPkeY5lhFgqkKlaEZe0lBqSs3Hki5K6bVpu3S+p/oh9DXhfPMtyzFv" +
                        "HU50qM5xdOM04u6UueSi7NKV4K/Xl0P3e8S+HND8Y+HPEHhHxPpketeGvFVld+HPEOj3gJhu7G+ga1nh" +
                        "cAg7ZI3ZTz0NfyHgMdVwteFalLlqQalFrdNO6a9Gf2Dj8DRxVCdGrFSpzi4yT2aas0/VaH8Lf7b3/BJv" +
                        "9pD9l/4kalH4A8A618Zfgzrt3PJ4A8ZeBtPudXvILZmLx2mqW+nxPJBcxJhTIUEUv3kOdyJ/rb4UfSLy" +
                        "PP8DF4itDD4qKXPGclFN9ZQcnZxfa/NHZ9G/wDIjxZ+jhnvD+PksNRniMLJvknCLk0ukZqKupJdbcst0" +
                        "90v26+Dv7MH7VXiP/giV48+AfjfQ7+T4veIbG+1H4bfDvxWzw6rZaLaaxa6lZ6ZIt2QYpXW1kMELkbBI" +
                        "kZ2YIX+UuJuPuHqHitRzChOP1aEkqk46xc3FxlNW3S5lzNb2bV93/WXC/h/xFX8J62XV4S+szi3ThLSS" +
                        "gpRlGDvs3yvlT2uk7bL8yv+CNX7Hn7Suhft2/D74n+Mvgx4j+H/AIJ+EVv4ivPFeuePtHv9Gi87UfDmo" +
                        "aDBbQHUYofNmMt4rFEyVVSTgYr95+k94mZFW4RrYWjiqdWrXcFFQkpO0Zxm2+VuytHd7tpI/AvoueGOf" +
                        "UeMKGLr4WpSpUFNyc4ygryhKCS5kru8tlsk2z+ir/goL/wTq+F37engjTrbWr4+B/ix4OjmT4f/ABNsI" +
                        "BO8CS/O9new7k8+0d8Nt3Bkb5kYZdX/AIn8GfGzMOD8XJwXtMNUtz027X/vRfSSXya0a2a/t/xp8D8v4" +
                        "xwkVUfssTTvyVEr2v8AZkusW9e6eqe6f8hH7Q//AASv/bb/AGctT1CPXvgzqPxA8LWZZrfx/wDCGC48Q" +
                        "6XNCM/vXWzi+0268c/aYY/yIJ/0o4K+kHwpnlOLp4qNKo/sVWoST7avll/27Jn+Z3G30eOLMjqSVTCyq" +
                        "019uknOLXfRc0f+3oo+H/8AhXfxA+1fYf8AhBtY+2+Z9k+x/wBmXvm+bu2bNnl53Z4xjOa/WP7awfLze" +
                        "2hbe/Mv8z8k/sTG83L7Gd9rcrvf7j7S/Z9/4Je/ts/tG6lp0fhf4J6p4M8M3zKZfH3xWt7jw9pEULf8t" +
                        "la+jWe4Tt/o0Upz24OPy3jPx+4UySEnVxcalRfYptTlfto7Rf8AicT9V4L+j7xZnlSKpYSVOm/t1E4Rt" +
                        "31V5L/CpH9kn/BP/wDYO+H/AOwb8JbrwX4d1E+LfHni6aHWvib8Q7m3S3k1K6hjMcMMMYLGO0tw7eVGz" +
                        "Mcs7E5Ygf5ieMni9jeL8yVepH2dGmmqcL35U9231lLS7stkuh/qJ4MeD2C4Oy10KUvaVqjTqTtbma2SX" +
                        "SMdbK73b6n8yX/BW39jT9p7Uv27/in428KfBLxJ4+8I/FufSta8EeIfAOjahrNtcY0mz06SCRtPilEU6" +
                        "TQspjkwSMMMqwNf3n9HDxPyCnwhh6FbF06VSgpKcZyjFr3pSTXM1dNPdea3R/Av0k/C3iCpxhiK9HCVK" +
                        "tKu4uEoRlJP3YxafKnZpp6PyezP6kf2QfgJeeC/2G/g1+z18bPDVrf3MXg2Lwd8SfBuo+XdWxXUYJDd2" +
                        "M2wsj7VnMT7SVJBwSMGv8/vErjCOK4txWY4Go0vbOVOS0futcsl1W1117n+hHhlwbLC8I4XLcdTTfsVG" +
                        "pB6r3k+aL6Peztp2P5z/wBtT/ggx8XvAet6343/AGRJV+Knw7upHvoPhjqt1FbeJtJR2LGGCW7ZIb6GM" +
                        "fdYyJNjC7JGBc/234WfS+y3GUoUM4/cV1p7RK9OXm0ruDfXRx63itF/D3it9DvM8HWnXyb9/Qbv7NtKp" +
                        "HyTdlNLo7qXS0nq/wAPvGfwE+OXw61N9F8ffBzxT4L1aMlDp/ijQNVsZTjuouYE3DuCMgjkV/WGV8YZT" +
                        "jqfPh8VSqR7xnF/kz+Ss14OzfA1OTEYWrTl2lCS/NGp8P8A9mn9ob4rajDpXw3+B/ivxrezP5OPD2gan" +
                        "cRxnIBMsqQ+XGoyMs7ADua58546yXLoOeJxdKmv704r7le7+R0ZLwHneYzUMLhKtR/3YSf3u1l8z+ir/" +
                        "gm9/wAEQ/F/g7x34U+O/wC2FFZ6fJ4RuLfxH4O+B9hNb6i8l/Awlhm1ieEyW/lxOA628TPvOPMYKGjf+" +
                        "J/HH6V2GxWEqZfk137ROMqrTjo9GqadndrTmaVuibs1/b/gX9EzE4XGU8wzqy9m1KNFNS95ap1Grxsnr" +
                        "ypu/VpXT/qAr+BD/QIKACgAoAKAPmP9rD9k/wCFv7X/AMLb/wCG3xJsPJuYfMvvBnjOxjQ6joWolNq3F" +
                        "uzYypwBLETtkXg4IVlTVyoysfxGftQfsv8AxS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXKx3dpIwGV" +
                        "OMMp+ZGyrAEVi1Y6YyufU3/AATl/wCChfif9jDxxJoXiU3Xib4C+MplPjDwpC5eTTLltqDU7BG4EqqAJ" +
                        "YxgSoMH5lQq4ysTOFz+0DwR438JfEnwl4f8eeA/EFt4p8H+KbaPV9A1/SJBJb3NvIOGU8EEEFWVgGVgV" +
                        "YAgitjmaPyM/wCCpX/BO3wz+3f8MbH4z/BG60+8+O/gnT5W8KaxpM8Etn4u0mAyS/2W9zE/leYHLG1mJ" +
                        "2q5KOQrFk/pr6OnjrPhfGfVcU28DVev/TuT050u38yW6V1qrP8AmH6R/gNDinB/WsKksdRjp/08iteRv" +
                        "o/5G9E3Z2Tuv4yNP+EPxT1T4kw/Byx+HeszfFae+Hhpfh02nXSayt/naYHtJEWRHHVgyjA5OBzX+pNbi" +
                        "XL6eBeNlXh9XUebn5ly2782z+R/lXR4ZzGpj1go0J/WXLl5OV8/N25d0/XY/tV/4Jef8EvPC37Fnha3+" +
                        "JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgff+4n7vJf8Ayx8fvH7EcU4h4bDNwwEHotnUa" +
                        "+1Ly/lj03eu3+rH0ffo+4fhTDrFYpKePmtXuqaf2Ief80uuy03/AF+r+aj+mgoAKACgDwn9pn476T+zJ" +
                        "8DvH3x21/wxqPjHQvh3BbaprOgeE/s51CS2nvoLJ5IhdyRRkQibzX3OPkVsZOAfruA+EKmfZtRwFOpGn" +
                        "Oq2lKV+W6TdnZN62stN2j4/j7jClkGUVswqU5VIUkm4xtzWbSurtLS93rsmaPhH45+B/F3wA0D9pCCeT" +
                        "Tvh3rnhOD4xSS3oTz7TSpNKGryCVUYqJIo8hwDgMCM1hmXCWLw2czyxq9eNV0tNnLm5Vbyb28joyzi7C" +
                        "YnJoZmm1QlSVXXdR5eZ380t/M8W/Yg/bd+G37dnw08S/Er4b6BqnhW18Ka3L4I1bQPGQsxerLHZW18kw" +
                        "FjPOnlSLc7VJYHcrDHHP1Xiv4U47hHH08LiZxm5w5043ta7VtUndW18mj5Twl8WcBxhgKmKwsJQUJuDj" +
                        "O172Tvo2rO+nmmbPwY/a+8E/HT4/wD7RXwE8F+GdUN1+zTcWGieN/HN59jGkz6jfeYotbbypnlLo9vO";
                    resourceString += "r70XBjPqK5eKPDXF5Rk2CzCvUjbGJuEFfmUVbV6Ws04tWb3OrhbxNwmb51jsuoU5XwbSnN25XJ30Wt7pq" +
                        "Sd0tmfWtfnB+khQAUAFABQAUAfCP/BRH9sfUv2G/gFZ/GjSvAcHxFurrxBp3gk+H9Qv5NNjVL62u7gy+" +
                        "bHBcHK/ZsbdvOevFfrvgp4Y0+Lc4eBnWdJKnKfMo82zirWuu/c/H/G7xQqcI5MsdCiqzdSMOVy5d1J3v" +
                        "Z9ux93V+RH7AFABQB89ftVftF+F/wBk34C+PP2gfGeh3/iTw14A/sv+0tF8MC3N9N/aus2miR+V9rkij" +
                        "+WS8Vmyw+UHHOBX2nh7wTiOI84o5dQnGFSrzWcr2XLGU3eyb2jbbc+K8ROOMPw3k1bMa8JTp0uW6ja75" +
                        "pxgrXaW8k99j5W+If8AwUY1bwbceDn8LfsSfGj4xaD418N6D8SdM8XfCbwjLrGlLDr2npqCWrXNu5Qzw" +
                        "rIFlVSQD3NfoWS+CVPFKr7XNcHh506k6bjUqcsrwk43s9bO2h+dZ3441MK6XsspxmIhUpwqKVKlzRtOK" +
                        "la60ur2fmeDfD//AILM6Z8WdCfxT8K/2Evjl8S/DMdxJpUniP4f+E49ZsFuoVV5ITcadPNGJFDqWXdkA" +
                        "jI5FfX5z9F+pl1b2WLzfBUalr8s6nK7PZ2kk7abnx+S/Slp5lR9rhMnxtane3NClzq63V4tq+q0P2b0+" +
                        "6a+sLG+a1ksmvIYrprK8XZNCZED7JF7MucEetfy9Wp8k3G97O11s/Q/qWjU54KVmrq9nuvU+Mv+Cf8A+" +
                        "1rqP7a37O2m/HLVPBEPw+u7/VtU8Nnw7YXz6jGq6dKsYk86SGAkvu6beK/UfGTw4hwrncsBCq6qUYy5m" +
                        "uX4ulrv8z8t8GPEmfFeSRx86KpNzlHlT5vh63st/Q+2a/Kj9XCgAoAKACgAoAKACgAoAKACgAoAKACgA" +
                        "oAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8" +
                        "Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrl34bftg" +
                        "ftDfCP4QfED4F+APiNd6D8OfiRj+3NJgOZbff8ALcfYpj89t9pT5J/LI3rwaLg4o+1P+CZn/BQv4t/s1" +
                        "eKNM+CVt4K1D41/Dbx9qUUOk/DvQGL61p+pXbiNpNJEmUbzfvSW7lUZhuDRkuzOMrEzhc/sds4YLg2+s" +
                        "zaT/Z+q3NtHDMLtbc3cMZ/e+RJJA0inYxOQrsuckE9a6fay5eW7tvbpfucXso83NZc1rX627GjUGgUAF" +
                        "ABQAUAeZ/Gn4baf8Y/g/wDFL4S6qUXT/iX4e1jwLczTAkRDVdPlshJwCQUMgYEcggEc173C2eTyzM8Pj" +
                        "IfFRqRn/wCAyTt87WPA4qyKGaZZiMHP4a1OUP8AwKLV/le5/NZ4F/aM8Sab/wAEM/FfwmDSR/F6y8U3v" +
                        "7EVnolwQt295retC9ezZSeSNMu5oVx/cx2Jr+6c34IoVPFqnjP+YZ0li2+loQtzf+DIqXz9D+EMo44r0" +
                        "/CKpg9frSqvCJdbzndx/wDBcnH5eTPpP9i6w8Pf8E+f20f2zf2dtUuhZ/Dey+F3hT9oXQJmHlpPB4P0C" +
                        "Gy1aeMvjLyyzzs5PLeXuPQ18L4pVq3GfC2V5lBXrvE1KMvJ1ZtwT8klFLtex934V0aHBXFWa5ZN2oLDU" +
                        "68fNUoJTa823Jvva54b+z5+0J4t/Y0/4JseMv2uV02yvv2h/wBvD4narqfgk+J38u1hvNVu7q3iubvzW" +
                        "TNvb/Yru6VmIVjKgYhWr6zjPgvDcUcdUsn5msFlmGip8u7UUm1H+9LmhHTVcrsro+R4K41xPC3AdXOeW" +
                        "Lx2Z4mThzbJybScv7seWctdHzK7szt/jT8bP2iv2Q/hvov7TGif8FOPDP7V3irw5e6TJ8ZP2ep5PCJ0v" +
                        "VbLUr2G0nj0aLSZmuIjA8yjdGitsDSnaFMZ8rhbhXJOJcdPK6mQVMDTmpeyr/veaLim06jkuV3SejbV7" +
                        "R1bUj1uKuLM84ZwMM0p8QU8dUg4+1ofuuWSk0mqai+ZWbWqSdry0ScX/RH4O8U6X458IeFfGuhuZNF8Y" +
                        "abY+KdHkkxua11C1S7iJ2kjJSQdDX8U5nl9TCYmpQqfHTk4v1i7P8Uf27leY08Xhqden8FSKkvSSuvwZ" +
                        "+Dnw38Zft+ftdftR/tv/AfwL+06/wAD/hF8D/Gl/Yn4gWvh/TdW1qCC5nubXTdG09ZBaqsKi0lmnmMhl" +
                        "GEXcA3P9e55lfB3DfD+U5hiMB9ZxOJop8nPKMG0k51Jb6+8lFW5d3bQ/jzIs04z4m4hzfL8PmH1bDYas" +
                        "1zqEZTSbahTjtp7rcnfm2V9Tl/2dviB/wAFJP2iviN8cf2G9Z/ab074dX/7Luq3Vt8QP2m9E0Czv/FOv" +
                        "2FzOYNJtILV3ggiDiGSaW4BEwXYjEsGL+hxtk3A2SYHCZ9DASqrGxXJh3NxpwaV5yb1btdJR1je7Wlre" +
                        "fwRnXHeeY7F5BPMI0XgpPnxCgpVJpu0IqOiV7NuWkrWT1vf65/4Jx/tAftAXvxl/aq/Yx/aZ8bw/FXx7" +
                        "+zRe6dc+FfirDaR2d1rOi6krlftUduNgdEMDrktJ+8ZWZtm4/m3jfwbk0Mry7O8rpOhRxilzU73UZx/l" +
                        "b11fMui91NJXsfpXgZxpnU80zHI81rKvWwbjy1LWc4S/mS0ulyvq/eabdrnyx+1d4n+P/7O/h/x7471b" +
                        "/gsTok37QngW2u/F2k/s+T6P4N02xv4bONrgaV/Zcc803nTRrshkliJkfjAJ3L+heHeAybO61HDw4Zn9" +
                        "SqtRdbmqyab05+eyVk9Wk9F6Wf554jZhnWSUa2InxRD67STkqHLSipJa8nJdu7WibWr063XD/8ABT347" +
                        "XX7TX/BHf4BfHTUdMh0bV/iF4k8Nalr2mad5n2aLUbez1ixuxCJiWERngcoGJIXAJbqfW8A+EY5D4m4z" +
                        "ARk5RpU6iTe7i3Tcb262av59EeR9IDjCWf+GGCzCUVGVWpTbS2Ukqila+trp28ur3PsXS/2hvjt+3l+1" +
                        "JP4P/ZT+IV18Lv2Ov2fr6TSvjJ8ePDltp1xdeM9eQK7aTpEmoxXKeSqFf3yJwrGQkhoA/5jiOC8o4Q4f" +
                        "VbNqKrZnio3pUZOSVKH881Fp3v9lvdculptfqGH42zjjHiF0MoruhleFlarWiot1Z/yU3JNWt9pLZ82t" +
                        "4J8V8dP2p/iN8df2yviT+y34D/as0T9jT4Mfs/WNifif8UdQm0KPxD4i1/UoROun6a2vSoscUAJEjxgM" +
                        "rI24sHQV6vCPh7gco4YoZriMunmGKxUn7OmlPkhCLtzT5Fq30T0aatazPJ4v8RMdnHFNfKcPmMMvwuFi" +
                        "vaVG4c85yV+WHO9EurWqad73R137Dn7T/xOsP2tfif+xP8AEz4/aV+1h4e0zw1F8Xvg38ffDf8AZJu5L" +
                        "BbmCzudM1I6LJLC80bT5DM2/wCQliVkRU83xZ4BwE+HMPnmFwcsDN1PZVaMua17NqcOdJpO2y01VtU2/" +
                        "T8I/EDMIcSYjIsVjYY6EaftaVaPLfluk4T5G02r7vXRtu0kl6j/AMFov+UaX7Sf/cnf+p9odfP/AEXP+" +
                        "S7wP/cX/wBM1D6H6VH/ACQWP/7hf+nqZ9mfsrf8mwfs4f8AYheD/wD1HrSvzDxC/wCR/jv+v9X/ANLkf" +
                        "qXh3/yT+A/68Uv/AEiJ+XP/AAb/AH/Jimrf9j74g/8ATdpdfv8A9Mn/AJK6P/XiH/pUz+e/oYf8khL/A" +
                        "K/z/wDSYH7gV/KB/Wp/K5/wSx+Cn7bfx0/Y1ay+EX7UkX7Lfwv8La3rcHg+Pw34ft9X1bxHrcjx3M899" +
                        "dXE0bW1pEWSFEhyWO8spAXP+hH0g+KuFMo4n5sZl7xuInCHNzTcYwhqkopJ80nq23tok97f53/R44U4s" +
                        "zfhflweYLBYeE58vLBSlUno25NtcsVoklvq2tr/AKhf8E4f2mfj7+1B+zt8c/A/xO8QWWlftNfAvW9d+" +
                        "Cl/8QrawgltJNShtGSy1Ka1iSKCRorjeJI0VVcRg7RvNfgPjhwHk+QZ3hK+Fg5YDEwhVULu/K370E3dq" +
                        "8bWbbavvof0F4GcfZzxBkeMw+KnGOYYac6TnZW5kvdm0rJ2le6SSdtlc+Af2pvjt8c/2O9Euvit4a/4K" +
                        "0aD+0T8Y/A+o2H/AAn/AOzXq2neEobXVra51CG0uLa30/SJ55LR4fM3yIAkgiDOroVG79k8PuEcp4mqr" +
                        "CVeHJ4TC1Iy5K6lUbi1FtNykkpJ2snquayad9PxjxD4vzfhik8XS4khi8VSlHnoONJKSckmlGLbi1e7W" +
                        "j5btNW1+nf+CjH7Yn7RHgew/wCCePin9lnUxpmsftK6miweBtWjtprPWpdZtNHfTLK8eaISCMS34DmNo" +
                        "2IJ5HBHwPgj4ZZJi551SzaPNHBx+NXTgoupzyjZ2vaOl7ryZ9/44+J+d4SGSVcplyyxkvgdmpuSp8kZX" +
                        "V7Xlraz80cV+03oH/BTD9ij4bj9r1v2y4/2hIfBNxp+qfGz4I614W07S9AfTry6itZU05rUtIIoZJlUu" +
                        "qwybMyZGCh9XgPGcCcVY7+xv7L+quopKlVVSUp8yTa576XaV7NyV/d7M8rj7Bce8KYD+2f7VWLVNxdWi" +
                        "6cYw5W0nyW1sm7XSi7e90sdP+2/+2R+0Ra+MP8Agmfr/wCx/r628X7Yljrctn4I8WQ2z6TdSappuhPpU" +
                        "+oMIHnRbFtYaaYRuMiPBHWvP8KPDHJJYbPqecwu8BKF5xb5lyyqc6jrZ8/JZXT3ueh4teKOdxxWQVMln" +
                        "ZZhGdoSS5XzRp8jlpdcntHKVmtrHF/tOv8A8FGv+CeXhfRf2r9Q/a5b9qr4eaPqWl2Hx4+Fnizwzpui2" +
                        "cdpqN0lmJdPazMxgjM0qxK0ZjZHZCyyKWQerwEuCONcRPKI5b9SryjJ0akakpu8Ve0r2u7Jtp3TSaTi7" +
                        "M8rj98c8E4eGcSzP69QjKKrU5U4wVpO142vZXaStZptNqSuj2X9rr9tvxd4p+NXwB/Zd/Z/+Nmh/s5WH" +
                        "xd8KQfHv4iftH/EAaU39keF79JPsVrp8WrSpbteXHlkkMcjchVgN7D5fw28KcNh8qxma5jhJ4uVCq6MK" +
                        "EOb3qitzOTiubljf8HdPRH1PiX4sYnEZrgspy7FwwkcRSVadefL7tN35VFSfLzSt+Ks1qzz/wCE37Snx" +
                        "N/Z2/bV+CP7PWu/tiab+218Cv2lbbU9L0PxIJdAuvEPhPxHp0PnKk8ugyyl4LgtGq+aQCHYqB5TF/Z4j" +
                        "4FwGd8K4vMaeWSy7F4Nxbj76hUhJ20U0rOOr07K7fMreLw3x5j8k4rwmW1M0jmWDxiklL3HOnOKvq4N3" +
                        "UtFr3dkuV34/wCGXxE/b8/a1/az/bh/Z28B/tKx/Br4Q/BXxlcRX3xCg0LTdU8Q6dY3F1e2enaNpiSCB" +
                        "Fjl+xyySTs3mL5YAb5irenn2ScHcOcOZTmWIwH1jE4iirQ55RhJpRc6k93dcySivdd9tLrzMgzzjPiTi" +
                        "TN8tw+P+r4bDVnefJGU4puShTgtFZ8rbk/eVlrrZ/Rn7AHxx/aX0P8Aab/aW/YW/ai8dr8Y/E3wSsdM8" +
                        "deAvi8tlb6fPqGiX627BbmOAfMzLfQMpZmZGEiM7gKR8R4ycJ5FVyHAZ9lVH6vTxMpQnSu5KM1fZv8Aw" +
                        "yXRNcrSWp9x4McXZ9Rz/H5Bm1b6xUw0YzhVsouUHbdLf4ovq0+ZNvQ/YOv5oP6cCgAoAKACgAoAKAPmP" +
                        "9rD9k/4W/tf/C2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxWfHT9jT4" +
                        "7/Ab472/wCz7r/g+51/xlr9ylp8PJvDUEtxb+Jbe4l8qCewIGWDHh1PzRtkPgg1i0dKkmj+pb/gm3/wT" +
                        "b8NfsgeGoPiD8QYLbxL+0R4ltvL1XVY9s9t4ctp1+awsG5Bcg4nnH3/ALq/JkvpGNjCc7n6s1ZmFABQA" +
                        "UAFABQAUAfzD6V+yd8XU/4K66t8MX8DaqP2Xl+Jkf7bh8WDTr1dDGsQ+H5dVjRLgp9nLf2hdC3MecgKc" +
                        "DFf3viPEXLX4bRxXto/2h9W+qcvMuflc1F6X5vgXNfzP4Bw/hxma8S5YX2Mv7P+s/W+blfJzKDktfh+O" +
                        "XLbfQ9N/wCC23wb+Ndz8Sfgf8YPgB4I1fxp4i8eeFfF/wCzH8RLbwlp15fuujavFi2Wf7HG+yNjqV0dz" +
                        "4UMB1yceD9FTifKo4HF4PMasKcKVWliIc0kvei9bXau/chotbHvfSx4WzWWPwmNy6jOpOrSq4efLFy92" +
                        "S0vZOy9+er0ukfRf/BQT9hLxh4r/YI+BXwl+B3hu18deL/2T7rwt4j0XwNdpG8XiW10LSpNJvbfyptiS" +
                        "vOJfPZWIMm1lGWcA/E+DPi7hsPxhi8Zj6jpUscqkXNb03OSlF3WyVuVNbXT2R9x40+D+KxPBuDweApqr" +
                        "VwLpyUHtUUIuMlZ2u3fmae9mt2fMvg/4z/8ExPEFrouhav/AMEt/Eml/F66Ntp+v/CXSvhCl/f2V9L+7" +
                        "kVXCw+ZCkiuA5VXKqT5YOVH3mZ8LcfUZTqQ4gpywyu1UeJsmunezatpdq7+LqfBZXxV4f14wpz4eqRxT" +
                        "spUlheaSfXtdJ31sm0vhT0P6KNG0fSvD2kaVoGhadDo+h6HbQaPo2k6bGsNva2ltEsEMMUaAKqIihVUD" +
                        "AAxX8T4rE1K9WVSpJynJttvVtvVtvu2f29hcLToUo06cVGEUkktEktEkuyWx+UH/BOvwV4y8L/tSf8AB" +
                        "ULWPEvhLU/Duk+LviVbar4U1TXbC6tLfVLUS6sTNaSXCIs8Y3r80ZI5HPNf0V42ZrhcRw/w/ClUjOVPD" +
                        "tSSabi7Q0kk9H5M/nHwPyrFYfiHiCdWlKEamITi3FpSV56xbWq80cz+wt4F8b+Hv+CjX/BTjxR4g8Har" +
                        "ofhnxbqXh2Xwr4i1jT7u2sdTSJr3e1pcTxrHMF3DJRjjNd3i3m+Er8EZBSp1YyqU4z5oqSbj8PxJO6+Z" +
                        "weEOT4uhxxn9WpSlGnUlDlk4tKXxfC2rP5Hmfw1+HXx0tf2+v8AgrX4j8B+F9V8O+IPGnga3074J+NtT" +
                        "sbi00278Qjw9BFZNbXlykcEhjuQu7a+Bg5xivez3O8olwdw5SxFSM4U6zdWCaclDnfNeKu1eN+h4OQ5H" +
                        "m8eMuJKuHpyhOpQSpTaai58i5bSdk7St10Pz/8AgVrHwk8MfsTfE/8AZut/2GPGPjb/AIKDeMNH8aeD/" +
                        "HGs674FN1qlrqOtR6hbR6rNrWqJ5lrBbW0oKou1jKhABLmU/snF2GzLEcVYfM3m9KnktOdKUEq1ouMeV" +
                        "uCpx0k5SW7uuV+XKfi/CGKy3D8J4jK1lFapnVSFWM26N5KU+ZKbqS1ioxeys+Zba8z9K/aB+EXxY1X/A" +
                        "IIWfsufD3S/hh4i1Lx9o/iW1udW8D2Gi6lNrFrGmo+IizTWccJmRQJFyWQfeHqK8Pg3iXLqfi3mGJniK" +
                        "aoypu03OKi/dpbSvZ7Pr0Pe404ZzKp4Q5fhoYeo60aivBQk5L3qu8bXW66dT6m8ZfBXxl/wSz/al8JfG" +
                        "r9mP4c634x/Y4+Of2LwD8e/gp8P7PUdbvPDl/ZwFLfV7S3hE87gKGlBIbJ82JmXzYiv57lnFWF8QeH6m" +
                        "BzSvCnmeGvOjVm4wU03rCTdktbLp9mST5ZX/Q804UxXh5xDSx2VUJ1MrxNoVqUFKbhJLScUrt6XfX7UW" +
                        "1zRt5F8bPhL4C/Zs/bl+Nvx2/aP/ZKuv2pf2Uv2oYNK8YeGviPovheLxNeeDtZitws0M9tKqtBFKZHLZ" +
                        "2l0ERXe6Oo+l4V4jxme8JYTAZZmSwWY4JyjKDqezVWN9Gmt2rK29nzXsmmfM8V8N4PIeLsXmGZ5a8bl2" +
                        "NUZRqKn7R0pJapp7J3d9rrltdpo/Qf9hfXv2J/H3xB8V6/+y/8Ashal8Gr/AMO6TFHJ8WdY8ADwrY6jb" +
                        "6hMjSWVpdt80jjy0eRCFyMEbgMj8Y8W8HxVg8FTp5rmUcQpy/hqt7RxcVpKUem7SevZ2P2vwixnCmNxt" +
                        "SplWWSw7hH+I6Ps1JSesYy6vRNrTurnRf8ABXvwr4o8bf8ABO79oXwx4M8N3/i7xLqf/CJ/2b4e8MWdx" +
                        "f31x5PjnRriTyoLRJJH2Rxs7YU4UEngGuL6NeY4fCca4KrXqRp017S8pNRSvRqJXbsldu3qdv0mMuxGL" +
                        "4IxtKhTlUqS9naMU5N2rU27JXbsk36H1z+zNp9/pP7N/wCz7pWq2U2manpngjwpp+pabqEbwz288Og2s" +
                        "ckckcgDI6MCGUgEEYNfm3HlaFTPMbODTi61RprVNObs0+qZ+lcA0Z08iwUJpxlGjTTT0aahG6a6NH5r/" +
                        "wDBC7wL43+Hn7FWqaD4/wDB2q+B9dfxvruoJovjDT7vTLswSafpqpIIb2ON9jFCA2MHB9K/dPpbZvhMb" +
                        "xVGph6sakPYwV4yUlfmnpdNq5+EfRDyfF4LhSVPEUpUp+2m7Si4u3LDWzSdj9lq/mA/qQ/I7/giV4K8Z" +
                        "eAf2FtB8PeO/CWp+Ctfj8S+IruTQ/FthdabeLFLcRlHMN5HG4VgODjBr+kPpV5rhcZxdOph6kakPZwV4" +
                        "tSWz6ptH81fRPyrFYLhCFPEUpU5+0m7Si4u110aTPg74QfCP9piD9lz/gsVoXw18Fa/4a+Jnjzx/rOof" +
                        "D+G407ULG81nSZNWle/GmeYkbztcWBmjhMWdzMoGSRX6/xLxJkL4g4YqYqrCdClQip+9FqMuVcvPvbln" +
                        "yt32Sdz8e4Z4az9cP8AFFPC0qkMRVrzcPdknOPM+bk2vzQ5krbtqx82+ONX+CHjj/gnFP8As3fsufsL+" +
                        "Lbj9omHRPD0fxo8at4DaO/0a+0bU9P1bV57nWJomubmS6mtdkMEZyY5AAqBBHX3OU4bNsJxwszzXN6Sw" +
                        "XPP2UPbaSUoyjBKCfLFRTu5Pqt3fmPhM2xOU4vgZ5ZlOUVXjlCHtZ+x96DhKMpt1GuaTk1aMV0eyS5T6" +
                        "L/4KJX/AI38EeAf+CJup+FfBs/iP4keENR8LX/hz4fXgazub/W9PsvC8lvpzi4CmJ5Z41iO8DaTz0r4n" +
                        "wUo4TF4ziqNWqoUKkailNapQk615K26Sd9Nz7jxurYvCYPhOdGk516cqbjB6NziqNoO+zclbXY9b/a9/" +
                        "bl8Rfts/BXXf2Qf2Xv2b/iK3xp+MTWPhTxza/ErwzNoll4QsBexT3h1G4mkeONv3flF2wihi27cFU/N+" +
                        "GvhLQ4VzWGc5rjsP9Vw95Q9nUU3Vdmo8qSu9723drWtdr6XxM8Xa/FmVTyXKcBiPreItGftKbgqSunLn" +
                        "bdlta+yu3e9k+H/AOCgvhvxd+yr49/4IveEvhZ4Vn+LPiv4CR+INB0vwppAWK78R/2BpvhWC8jgDA4nu" +
                        "ooZSgCk72GFJwD63gzjsNxDg+Ka2LqKhTxTg3J7Q55VnFvyi2r+S1a3PJ8acBieHcZwrRwlN16mF50or" +
                        "epyRoqSXnJJ283onsb/AO2f+114h/4KLfCeH9i79lX4A+O28X/FfVNDg+K/iD4peG7jQ9N8H6dpup2+s" +
                        "N9undpVSRZ7aMuc7dgYIXdlU8fhd4bUeCcxed5tjKHsqEZ+zjTmpyqylFx91aXVm7db2bsk2dnin4l1+" +
                        "OMtWR5Rgq/ta8oe0lUpuEaUYyUveetndK/S10rtpEf7av7J1n+z7+0h+z5+0rq/7N0v7XH7MvhbwFpn7" +
                        "Pnxj8C6fo8euavph0K2ktrPWY7OQkH90sQ3t8q7HR3TzEYPws8RZZ1keNyyGOWBx868q1KblyRlztOVN" +
                        "y9b6bu6aT5WifFXw4jkue4LNJ4B4/AQoRoVYKPPKPImo1FH0trsrNNrmTPoz9k3xj/wTp+Kfxt8G2X7O" +
                        "/7D2p+E/F2lx3fiez+Ld58M00PS9AmsYpBtl1F+Yp3YGOPapBbK7s4B+I8Rss42y/KqssyzaM6UrRdNV" +
                        "+eU07bR6pbvrbWx9z4b5pwPmObUo5blEqdWN5Kq8PyRg1fefRt6LpfS5Z/4JweBfG/hb9tX/gq/r3ifw" +
                        "dqvhzQvGXjfQNQ8Ia1r2n3dnaarBHqHidnks5riNEnRRMhLRkgbl9RUeOGb4TEcK8O06VWM506M1JKSb" +
                        "i+WjpJJ3T0e/Zl+BeT4vD8V8R1KtKUIVK0HFuLSkuatrFtWa1W190dL8HvBXjKx/wCCxv7W3jm98JanZ" +
                        "+Cta+GvhrStG8YXVhdR6Xd3US6Lvhhu3QQySL5bblViRg5HBrh4mzXCz8MctoRqRdWOIqNxuuZJ+01cb" +
                        "3S1Wtjv4YyrFQ8UMyxEqUlSlh6aUnF8ra9ndKVrN6PRM+k/2Gv2wNf/AGxvBHj7xhr/AMBdb+As3grxD" +
                        "ceB7bR/GU0lw1+kEEcpmV5bOyKyIX2SxBWCNgb2zx8L4s+GlHhjF0aNPGQxSqU1O8Va121b4paPdO6uu" +
                        "iPvPCPxNrcUYStWqYOeFdOo4Wk73sk7/DHVbNWdn1Z9vV+UH6yFABQAUAFABQAUAZF54f0HUdV0bXdQ0" +
                        "S0vtc8O/aP+Ef1m8toZbuw+2RiGf7PM6l4vNQBX2EbhwcigDXoAKACgAoAKACgAoAKACgAoAKACgAoAK" +
                        "ACgAoAKACgAoAKACgAoAKACgAoAKACgAoA/PX9tL9kDxv8AtL/F79iX4ieFPE2laDpn7MXj20+K/i2x8" +
                        "Qm7E+oWdvqmlXzQ2n2aGVfNK2DgeYVGSOeuP2jwt8S8JkOWZrhq1OUpYyg6cXG1otxmryu1p7y2uz8U8" +
                        "VfDLF59meU4mjUjGOCrqpJSveSUoO0bJ6+697LY/Qqvxc/az4N/ag/ZR8ZfHP8AaY/Yg+N3h7xHpmkaB" +
                        "+y9rHiXxH4u0nWTdC81CLWotLjiWz8iKRNyGxbd5jKORjPNfr/APiJhcpyHNsDUhKU8bCnGLVrR5HO/N" +
                        "dp68ytZM/HfEDw5xWb5/lGPp1Ixhgp1JSTveSmoW5bJrTld7tH3lX5AfsQUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFA" +
                        "BQAUAFABQAUAFABQB//2Qs=";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.StackedBarSeriesLabel stackedBarSeriesLabel1 = new DevExpress.XtraCharts.StackedBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.StackedBarSeriesView stackedBarSeriesView1 = new DevExpress.XtraCharts.StackedBarSeriesView();
            DevExpress.XtraCharts.ChartTitle chartTitle1 = new DevExpress.XtraCharts.ChartTitle();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary10 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary11 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary12 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary13 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary14 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary15 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary16 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary17 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary18 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary19 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary20 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary21 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary22 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary23 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary24 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary25 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary26 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary27 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary28 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary29 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary30 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary31 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary32 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary33 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary34 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary35 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary36 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary37 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary38 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary39 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary40 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary41 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary42 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary43 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.pageFooterBand1 = new DevExpress.XtraReports.UI.PageFooterBand();
            this.reportHeaderBand1 = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupFooter2 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupFooter3 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupFooter4 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupHeader2 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.label78 = new DevExpress.XtraReports.UI.XRLabel();
            this.label72 = new DevExpress.XtraReports.UI.XRLabel();
            this.label58 = new DevExpress.XtraReports.UI.XRLabel();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label55 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label32 = new DevExpress.XtraReports.UI.XRLabel();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label41 = new DevExpress.XtraReports.UI.XRLabel();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo3 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label198 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.RepVentaNeta = new XtraReportSerialization.RepVentaNetaDataSet();
            this.label98 = new DevExpress.XtraReports.UI.XRLabel();
            this.label97 = new DevExpress.XtraReports.UI.XRLabel();
            this.label77 = new DevExpress.XtraReports.UI.XRLabel();
            this.label71 = new DevExpress.XtraReports.UI.XRLabel();
            this.label48 = new DevExpress.XtraReports.UI.XRLabel();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label81 = new DevExpress.XtraReports.UI.XRLabel();
            this.label75 = new DevExpress.XtraReports.UI.XRLabel();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label57 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.label80 = new DevExpress.XtraReports.UI.XRLabel();
            this.label74 = new DevExpress.XtraReports.UI.XRLabel();
            this.label63 = new DevExpress.XtraReports.UI.XRLabel();
            this.label64 = new DevExpress.XtraReports.UI.XRLabel();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.label62 = new DevExpress.XtraReports.UI.XRLabel();
            this.label59 = new DevExpress.XtraReports.UI.XRLabel();
            this.label60 = new DevExpress.XtraReports.UI.XRLabel();
            this.label61 = new DevExpress.XtraReports.UI.XRLabel();
            this.label84 = new DevExpress.XtraReports.UI.XRLabel();
            this.label70 = new DevExpress.XtraReports.UI.XRLabel();
            this.label79 = new DevExpress.XtraReports.UI.XRLabel();
            this.label73 = new DevExpress.XtraReports.UI.XRLabel();
            this.label52 = new DevExpress.XtraReports.UI.XRLabel();
            this.label53 = new DevExpress.XtraReports.UI.XRLabel();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.label51 = new DevExpress.XtraReports.UI.XRLabel();
            this.label47 = new DevExpress.XtraReports.UI.XRLabel();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.label50 = new DevExpress.XtraReports.UI.XRLabel();
            this.label82 = new DevExpress.XtraReports.UI.XRLabel();
            this.label76 = new DevExpress.XtraReports.UI.XRLabel();
            this.label68 = new DevExpress.XtraReports.UI.XRLabel();
            this.label69 = new DevExpress.XtraReports.UI.XRLabel();
            this.line10 = new DevExpress.XtraReports.UI.XRLine();
            this.label67 = new DevExpress.XtraReports.UI.XRLabel();
            this.label54 = new DevExpress.XtraReports.UI.XRLabel();
            this.label65 = new DevExpress.XtraReports.UI.XRLabel();
            this.label66 = new DevExpress.XtraReports.UI.XRLabel();
            this.line12 = new DevExpress.XtraReports.UI.XRLine();
            this.line11 = new DevExpress.XtraReports.UI.XRLine();
            this.label92 = new DevExpress.XtraReports.UI.XRLabel();
            this.label91 = new DevExpress.XtraReports.UI.XRLabel();
            this.label94 = new DevExpress.XtraReports.UI.XRLabel();
            this.label93 = new DevExpress.XtraReports.UI.XRLabel();
            this.label90 = new DevExpress.XtraReports.UI.XRLabel();
            this.label87 = new DevExpress.XtraReports.UI.XRLabel();
            this.label86 = new DevExpress.XtraReports.UI.XRLabel();
            this.label89 = new DevExpress.XtraReports.UI.XRLabel();
            this.label88 = new DevExpress.XtraReports.UI.XRLabel();
            this.TableTableAdapter = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand1 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection1 = new System.Data.OleDb.OleDbConnection();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.Movimiento = new DevExpress.XtraReports.UI.CalculatedField();
            this.PorcentajeC = new DevExpress.XtraReports.UI.CalculatedField();
            this.PorcentajeCD = new DevExpress.XtraReports.UI.CalculatedField();
            this.PorcentajeSubTotal = new DevExpress.XtraReports.UI.CalculatedField();
            this.CostoTotal = new DevExpress.XtraReports.UI.CalculatedField();
            this.ImporteTotal = new DevExpress.XtraReports.UI.CalculatedField();
            this.PorcentajeTotal = new DevExpress.XtraReports.UI.CalculatedField();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label78,
                        this.label72,
                        this.label58,
                        this.label45,
                        this.label46,
                        this.label55,
                        this.label40,
                        this.label42,
                        this.label43});
            this.Detail.HeightF = 20.50002F;
            this.Detail.Name = "Detail";
            this.Detail.Scripts.OnBeforePrint = "Detail_BeforePrint_1";
            // 
            // pageFooterBand1
            // 
            this.pageFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line7,
                        this.pageInfo2,
                        this.pageInfo1});
            this.pageFooterBand1.HeightF = 24.25003F;
            this.pageFooterBand1.Name = "pageFooterBand1";
            // 
            // reportHeaderBand1
            // 
            this.reportHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label6,
                        this.label8,
                        this.label5,
                        this.label2,
                        this.label3,
                        this.label32,
                        this.label30,
                        this.label31,
                        this.label29,
                        this.label41,
                        this.line6,
                        this.pageInfo3,
                        this.label198,
                        this.pictureBox2});
            this.reportHeaderBand1.HeightF = 175.5833F;
            this.reportHeaderBand1.Name = "reportHeaderBand1";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 38F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 63F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart1});
            this.ReportFooter.HeightF = 512.709F;
            this.ReportFooter.Name = "ReportFooter";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label98,
                        this.label97,
                        this.label77,
                        this.label71,
                        this.label48,
                        this.label16,
                        this.label11,
                        this.label9,
                        this.label1,
                        this.label4});
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Orden1", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending),
                        new DevExpress.XtraReports.UI.GroupField("Agente", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 20.50003F;
            this.GroupHeader1.KeepTogether = true;
            this.GroupHeader1.Name = "GroupHeader1";
            this.GroupHeader1.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label81,
                        this.label75,
                        this.line3,
                        this.label14,
                        this.label18,
                        this.label57,
                        this.label7,
                        this.label12,
                        this.label13});
            this.GroupFooter1.HeightF = 23.00002F;
            this.GroupFooter1.KeepTogether = true;
            this.GroupFooter1.Level = 1;
            this.GroupFooter1.Name = "GroupFooter1";
            this.GroupFooter1.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            // 
            // GroupFooter2
            // 
            this.GroupFooter2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label80,
                        this.label74,
                        this.label63,
                        this.label64,
                        this.line5,
                        this.label62,
                        this.label59,
                        this.label60,
                        this.label61});
            this.GroupFooter2.HeightF = 25.50001F;
            this.GroupFooter2.KeepTogether = true;
            this.GroupFooter2.Name = "GroupFooter2";
            this.GroupFooter2.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            // 
            // GroupFooter3
            // 
            this.GroupFooter3.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label84,
                        this.label70,
                        this.label79,
                        this.label73,
                        this.label52,
                        this.label53,
                        this.line8,
                        this.label51,
                        this.label47,
                        this.label49,
                        this.label50});
            this.GroupFooter3.HeightF = 27.08333F;
            this.GroupFooter3.KeepTogether = true;
            this.GroupFooter3.Name = "GroupFooter3";
            this.GroupFooter3.Scripts.OnBeforePrint = "Detail_BeforePrint_1";
            // 
            // GroupFooter4
            // 
            this.GroupFooter4.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label82,
                        this.label76,
                        this.label68,
                        this.label69,
                        this.line10,
                        this.label67,
                        this.label54,
                        this.label65,
                        this.label66});
            this.GroupFooter4.HeightF = 39.58333F;
            this.GroupFooter4.KeepTogether = true;
            this.GroupFooter4.Level = 2;
            this.GroupFooter4.Name = "GroupFooter4";
            this.GroupFooter4.Scripts.OnBeforePrint = "Detail_BeforePrint_1";
            // 
            // GroupHeader2
            // 
            this.GroupHeader2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line12,
                        this.line11,
                        this.label92,
                        this.label91,
                        this.label94,
                        this.label93,
                        this.label90,
                        this.label87,
                        this.label86,
                        this.label89,
                        this.label88});
            this.GroupHeader2.HeightF = 23.95833F;
            this.GroupHeader2.KeepTogether = true;
            this.GroupHeader2.Level = 1;
            this.GroupHeader2.Name = "GroupHeader2";
            this.GroupHeader2.RepeatEveryPage = true;
            // 
            // label78
            // 
            this.label78.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ComisionNetaD", "{0:$#,#.00}")});
            this.label78.Font = new System.Drawing.Font("Arial", 6F);
            this.label78.LocationFloat = new DevExpress.Utils.PointFloat(761.0001F, 0F);
            this.label78.Name = "label78";
            this.label78.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label78.SizeF = new System.Drawing.SizeF(63F, 18F);
            this.label78.StylePriority.UseFont = false;
            this.label78.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:$#,#.00}";
            this.label78.Summary = summary1;
            this.label78.Text = "label78";
            this.label78.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label72
            // 
            this.label72.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorcentajeCD", "{0:#,#.00%;(#,#.00%)}")});
            this.label72.Font = new System.Drawing.Font("Arial", 6F);
            this.label72.LocationFloat = new DevExpress.Utils.PointFloat(699.9998F, 0F);
            this.label72.Name = "label72";
            this.label72.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label72.SizeF = new System.Drawing.SizeF(61F, 18F);
            this.label72.StylePriority.UseFont = false;
            this.label72.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:$#,#.00}";
            this.label72.Summary = summary2;
            this.label72.Text = "label72";
            this.label72.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label58
            // 
            this.label58.CanGrow = false;
            this.label58.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Movimiento")});
            this.label58.Font = new System.Drawing.Font("Arial", 6F);
            this.label58.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.label58.Name = "label58";
            this.label58.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label58.SizeF = new System.Drawing.SizeF(100F, 18F);
            this.label58.StylePriority.UseFont = false;
            this.label58.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:$#,#.00}";
            this.label58.Summary = summary3;
            this.label58.Text = "label58";
            this.label58.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label58.WordWrap = false;
            // 
            // label45
            // 
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteNetoD", "{0:$#,#.00}")});
            this.label45.Font = new System.Drawing.Font("Arial", 6F);
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(509.9997F, 0F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.SizeF = new System.Drawing.SizeF(95.00006F, 18F);
            this.label45.StylePriority.UseFont = false;
            this.label45.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:$#,#.00}";
            this.label45.Summary = summary4;
            this.label45.Text = "label45";
            this.label45.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label46
            // 
            this.label46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoNetoD", "{0:$#,#.00}")});
            this.label46.Font = new System.Drawing.Font("Arial", 6F);
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(430F, 0F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.SizeF = new System.Drawing.SizeF(79.99973F, 18F);
            this.label46.StylePriority.UseFont = false;
            this.label46.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:$#,#.00}";
            this.label46.Summary = summary5;
            this.label46.Text = "label46";
            this.label46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label55
            // 
            this.label55.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.UtilidadD", "{0:$#,#.00}")});
            this.label55.Font = new System.Drawing.Font("Arial", 6F);
            this.label55.LocationFloat = new DevExpress.Utils.PointFloat(604.9998F, 0F);
            this.label55.Name = "label55";
            this.label55.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label55.SizeF = new System.Drawing.SizeF(95F, 18F);
            this.label55.StylePriority.UseFont = false;
            this.label55.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:$#,#.00}";
            this.label55.Summary = summary6;
            this.label55.Text = "label55";
            this.label55.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label40
            // 
            this.label40.CanGrow = false;
            this.label40.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Nombre")});
            this.label40.Font = new System.Drawing.Font("Arial", 6F);
            this.label40.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(170F, 0F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label40.StyleName = "Title";
            this.label40.StylePriority.UseFont = false;
            this.label40.StylePriority.UseForeColor = false;
            this.label40.StylePriority.UseTextAlignment = false;
            this.label40.Text = "label4";
            this.label40.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label40.WordWrap = false;
            // 
            // label42
            // 
            this.label42.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNetaD", "{0:#,#.00}")});
            this.label42.Font = new System.Drawing.Font("Arial", 6F);
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(370F, 0F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label42.StylePriority.UseFont = false;
            this.label42.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:$#,#.00}";
            this.label42.Summary = summary7;
            this.label42.Text = "label42";
            this.label42.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label43
            // 
            this.label43.CanGrow = false;
            this.label43.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Agente")});
            this.label43.Font = new System.Drawing.Font("Arial", 6F);
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(100F, 0F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label43.StylePriority.UseFont = false;
            this.label43.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:$#,#.00}";
            this.label43.Summary = summary8;
            this.label43.Text = "label9";
            this.label43.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label43.WordWrap = false;
            // 
            // line7
            // 
            this.line7.BorderColor = System.Drawing.Color.Gray;
            this.line7.ForeColor = System.Drawing.Color.Gray;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(822.0002F, 2.166621F);
            this.line7.StylePriority.UseBorderColor = false;
            this.line7.StylePriority.UseForeColor = false;
            // 
            // pageInfo2
            // 
            this.pageInfo2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo2.Format = "Página {0} de {1}";
            this.pageInfo2.LocationFloat = new DevExpress.Utils.PointFloat(440.6547F, 2.16662F);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo2.SizeF = new System.Drawing.SizeF(381.3455F, 18F);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.StylePriority.UseFont = false;
            this.pageInfo2.StylePriority.UseTextAlignment = false;
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.166621F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo1.StyleName = "PageInfo";
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label6
            // 
            this.label6.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(449.5836F, 137.7916F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(74.16666F, 17.99997F);
            this.label6.StylePriority.UseFont = false;
            this.label6.Text = "De la Fecha";
            // 
            // label8
            // 
            this.label8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label8.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label8.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(0F, 137.7916F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(449.5836F, 18F);
            this.label8.StyleName = "Title";
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseForeColor = false;
            this.label8.StylePriority.UseTextAlignment = false;
            this.label8.Text = "label198";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label5
            // 
            this.label5.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(431.7503F, 155.7916F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(92F, 18F);
            this.label5.StylePriority.UseFont = false;
            this.label5.Text = "Hasta la Fecha";
            // 
            // label2
            // 
            this.label2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaA", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(523.7502F, 155.7916F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(298.9166F, 18F);
            this.label2.StylePriority.UseFont = false;
            this.label2.Text = "label2";
            // 
            // label3
            // 
            this.label3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaD", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold);
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(523.7502F, 137.7916F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(298.2499F, 18F);
            this.label3.StylePriority.UseFont = false;
            this.label3.Text = "label3";
            // 
            // label32
            // 
            this.label32.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label32.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label32.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label32.LocationFloat = new DevExpress.Utils.PointFloat(509.0001F, 23.66664F);
            this.label32.Name = "label32";
            this.label32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label32.SizeF = new System.Drawing.SizeF(313.6666F, 18.00001F);
            this.label32.StyleName = "Title";
            this.label32.StylePriority.UseFont = false;
            this.label32.StylePriority.UseForeColor = false;
            this.label32.StylePriority.UseTextAlignment = false;
            this.label32.Text = "label41";
            this.label32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label30
            // 
            this.label30.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion4")});
            this.label30.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(509.0001F, 77.66666F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(313.6667F, 18F);
            this.label30.StylePriority.UseFont = false;
            this.label30.StylePriority.UseTextAlignment = false;
            this.label30.Text = "label31";
            this.label30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label31
            // 
            this.label31.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(509.0001F, 59.66666F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseTextAlignment = false;
            this.label31.Text = "[Direccion3]";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label29
            // 
            this.label29.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion2")});
            this.label29.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(509.0001F, 41.66667F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseTextAlignment = false;
            this.label29.Text = "[Direccion2]";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label41
            // 
            this.label41.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label41.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label41.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label41.LocationFloat = new DevExpress.Utils.PointFloat(271.9996F, 117.7916F);
            this.label41.Name = "label41";
            this.label41.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label41.SizeF = new System.Drawing.SizeF(330.0004F, 18.00001F);
            this.label41.StyleName = "Title";
            this.label41.StylePriority.UseFont = false;
            this.label41.StylePriority.UseForeColor = false;
            this.label41.StylePriority.UseTextAlignment = false;
            this.label41.Text = "label41";
            this.label41.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.label41.Visible = false;
            // 
            // line6
            // 
            this.line6.BorderColor = System.Drawing.Color.Gray;
            this.line6.ForeColor = System.Drawing.Color.Gray;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 135.7916F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line6.StylePriority.UseBorderColor = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // pageInfo3
            // 
            this.pageInfo3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo3.LocationFloat = new DevExpress.Utils.PointFloat(602.0001F, 117.7916F);
            this.pageInfo3.Name = "pageInfo3";
            this.pageInfo3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo3.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo3.SizeF = new System.Drawing.SizeF(219.9999F, 17.99999F);
            this.pageInfo3.StyleName = "PageInfo";
            this.pageInfo3.StylePriority.UseFont = false;
            this.pageInfo3.StylePriority.UseTextAlignment = false;
            this.pageInfo3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label198
            // 
            this.label198.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label198.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label198.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label198.LocationFloat = new DevExpress.Utils.PointFloat(0.6663284F, 117.7916F);
            this.label198.Name = "label198";
            this.label198.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label198.SizeF = new System.Drawing.SizeF(271.3333F, 17.99999F);
            this.label198.StyleName = "Title";
            this.label198.StylePriority.UseFont = false;
            this.label198.StylePriority.UseForeColor = false;
            this.label198.StylePriority.UseTextAlignment = false;
            this.label198.Text = "label198";
            this.label198.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(0.6663284F, 10F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // chart1
            // 
            this.chart1.AppearanceName = "Pastel Kit";
            this.chart1.AutoBindingSettingsEnabled = false;
            this.chart1.AutoLayoutSettingsEnabled = false;
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart1.DataMember = "Table";
            this.chart1.DataSource = this.RepVentaNeta;
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram1.LabelsResolveOverlappingMinIndent = -2;
            this.chart1.Diagram = xYDiagram1;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart1.Legend.HorizontalIndent = 0;
            this.chart1.Legend.TextOffset = 0;
            this.chart1.Legend.VerticalIndent = 0;
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(2.499874F, 0F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart1.SeriesDataMember = "GraficaSerie";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "GraficaArgumento";
            this.chart1.SeriesTemplate.DataFilters.ClearAndAddRange(new DevExpress.XtraCharts.DataFilter[] {
                        new DevExpress.XtraCharts.DataFilter("Grafica1", "System.Int32", DevExpress.XtraCharts.DataFilterCondition.Equal, 1)});
            stackedBarSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart1.SeriesTemplate.Label = stackedBarSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions1;
            this.chart1.SeriesTemplate.SeriesPointsSortingKey = DevExpress.XtraCharts.SeriesPointKey.Value_1;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "GraficaValor";
            this.chart1.SeriesTemplate.View = stackedBarSeriesView1;
            this.chart1.SizeF = new System.Drawing.SizeF(820.0001F, 502.7091F);
            chartTitle1.Font = new System.Drawing.Font("Arial", 12F);
            chartTitle1.Text = "Resumen Agentes";
            this.chart1.Titles.AddRange(new DevExpress.XtraCharts.ChartTitle[] {
                        chartTitle1});
            // 
            // RepVentaNeta
            // 
            this.RepVentaNeta.DataSetName = "RepVentaNetaDataSet";
            this.RepVentaNeta.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // label98
            // 
            this.label98.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotal")});
            this.label98.Font = new System.Drawing.Font("Times New Roman", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label98.LocationFloat = new DevExpress.Utils.PointFloat(9.999998F, 9.999974F);
            this.label98.Name = "label98";
            this.label98.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label98.SizeF = new System.Drawing.SizeF(64.99963F, 8.000024F);
            this.label98.StylePriority.UseFont = false;
            this.label98.Text = "label84";
            this.label98.Visible = false;
            // 
            // label97
            // 
            this.label97.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotal")});
            this.label97.Font = new System.Drawing.Font("Times New Roman", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label97.LocationFloat = new DevExpress.Utils.PointFloat(9.999998F, 0F);
            this.label97.Name = "label97";
            this.label97.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label97.SizeF = new System.Drawing.SizeF(64.99963F, 8.000024F);
            this.label97.StylePriority.UseFont = false;
            this.label97.Text = "[CostoTotal]";
            this.label97.Visible = false;
            // 
            // label77
            // 
            this.label77.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ComisionNeta", "{0:$#,#.00}")});
            this.label77.Font = new System.Drawing.Font("Arial", 6F);
            this.label77.LocationFloat = new DevExpress.Utils.PointFloat(761.0001F, 0F);
            this.label77.Name = "label77";
            this.label77.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label77.SizeF = new System.Drawing.SizeF(63.49988F, 18F);
            this.label77.StylePriority.UseFont = false;
            this.label77.StylePriority.UseTextAlignment = false;
            summary9.FormatString = "{0:$#,#.00}";
            this.label77.Summary = summary9;
            this.label77.Text = "label77";
            this.label77.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label71
            // 
            this.label71.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorcentajeC", "{0:#,#.00%;(#,#.00%)}")});
            this.label71.Font = new System.Drawing.Font("Arial", 6F);
            this.label71.LocationFloat = new DevExpress.Utils.PointFloat(700.0001F, 0F);
            this.label71.Name = "label71";
            this.label71.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label71.SizeF = new System.Drawing.SizeF(61F, 18F);
            this.label71.StylePriority.UseFont = false;
            this.label71.StylePriority.UseTextAlignment = false;
            summary10.FormatString = "{0:$#,#.00}";
            this.label71.Summary = summary10;
            this.label71.Text = "label71";
            this.label71.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label48
            // 
            this.label48.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Utilidad", "{0:$#,#.00}")});
            this.label48.Font = new System.Drawing.Font("Arial", 6F);
            this.label48.LocationFloat = new DevExpress.Utils.PointFloat(604.9998F, 0F);
            this.label48.Name = "label48";
            this.label48.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label48.SizeF = new System.Drawing.SizeF(95F, 18F);
            this.label48.StylePriority.UseFont = false;
            this.label48.StylePriority.UseTextAlignment = false;
            summary11.FormatString = "{0:$#,#.00}";
            this.label48.Summary = summary11;
            this.label48.Text = "label11";
            this.label48.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label16
            // 
            this.label16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoNeto", "{0:$#,#.00}")});
            this.label16.Font = new System.Drawing.Font("Arial", 6F);
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(430F, 0F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(79.99973F, 18F);
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseTextAlignment = false;
            summary12.FormatString = "{0:$#,#.00}";
            this.label16.Summary = summary12;
            this.label16.Text = "label16";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label11
            // 
            this.label11.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteNeto", "{0:$#,#.00}")});
            this.label11.Font = new System.Drawing.Font("Arial", 6F);
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(509.9997F, 0F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(95.00006F, 18F);
            this.label11.StylePriority.UseFont = false;
            this.label11.StylePriority.UseTextAlignment = false;
            summary13.FormatString = "{0:$#,#.00}";
            this.label11.Summary = summary13;
            this.label11.Text = "label11";
            this.label11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label9
            // 
            this.label9.CanGrow = false;
            this.label9.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Agente")});
            this.label9.Font = new System.Drawing.Font("Arial", 6F);
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(100F, 0F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseTextAlignment = false;
            summary14.FormatString = "{0:$#,#.00}";
            this.label9.Summary = summary14;
            this.label9.Text = "[Agente]";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label9.WordWrap = false;
            // 
            // label1
            // 
            this.label1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNeta", "{0:#,#.00}")});
            this.label1.Font = new System.Drawing.Font("Arial", 6F);
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(370F, 0F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseTextAlignment = false;
            summary15.FormatString = "{0:$#,#.00}";
            this.label1.Summary = summary15;
            this.label1.Text = "label1";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label4
            // 
            this.label4.CanGrow = false;
            this.label4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Nombre")});
            this.label4.Font = new System.Drawing.Font("Arial", 6F);
            this.label4.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(170F, 0F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label4.StyleName = "Title";
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseForeColor = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "label4";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label4.WordWrap = false;
            // 
            // label81
            // 
            this.label81.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ComisionNeta")});
            this.label81.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label81.LocationFloat = new DevExpress.Utils.PointFloat(761.0001F, 2.000014F);
            this.label81.Name = "label81";
            this.label81.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label81.SizeF = new System.Drawing.SizeF(63.49994F, 18F);
            this.label81.StylePriority.UseFont = false;
            this.label81.StylePriority.UseTextAlignment = false;
            summary16.FormatString = "{0:$#,#.00}";
            summary16.IgnoreNullValues = true;
            summary16.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label81.Summary = summary16;
            this.label81.Text = "label81";
            this.label81.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label75
            // 
            this.label75.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorcentajeTotal", "{0:#,#.00%;(#,#.00%)}")});
            this.label75.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label75.LocationFloat = new DevExpress.Utils.PointFloat(700.0001F, 2.000002F);
            this.label75.Name = "label75";
            this.label75.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label75.SizeF = new System.Drawing.SizeF(61F, 18F);
            this.label75.StylePriority.UseFont = false;
            this.label75.StylePriority.UseTextAlignment = false;
            summary17.FormatString = "{0:$#,#.00}";
            this.label75.Summary = summary17;
            this.label75.Text = "label75";
            this.label75.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line3
            // 
            this.line3.BorderColor = System.Drawing.Color.Gray;
            this.line3.ForeColor = System.Drawing.Color.Gray;
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(0.6666263F, 0F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line3.StylePriority.UseBorderColor = false;
            this.line3.StylePriority.UseForeColor = false;
            // 
            // label14
            // 
            this.label14.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteNeto")});
            this.label14.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(510F, 2F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(94.99994F, 18F);
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseTextAlignment = false;
            summary18.FormatString = "{0:$#,#.00}";
            summary18.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label14.Summary = summary18;
            this.label14.Text = "label14";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoNeto")});
            this.label18.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(430F, 2F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(79.99973F, 18F);
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            summary19.FormatString = "{0:$#,#.00}";
            summary19.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label18.Summary = summary19;
            this.label18.Text = "label18";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label57
            // 
            this.label57.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Utilidad")});
            this.label57.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label57.LocationFloat = new DevExpress.Utils.PointFloat(605.0001F, 2F);
            this.label57.Name = "label57";
            this.label57.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label57.SizeF = new System.Drawing.SizeF(95F, 18F);
            this.label57.StylePriority.UseFont = false;
            this.label57.StylePriority.UseTextAlignment = false;
            summary20.FormatString = "{0:$#,#.00}";
            summary20.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label57.Summary = summary20;
            this.label57.Text = "label57";
            this.label57.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label7
            // 
            this.label7.CanGrow = false;
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Nombre")});
            this.label7.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label7.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(170F, 2F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label7.StyleName = "Title";
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseForeColor = false;
            this.label7.StylePriority.UseTextAlignment = false;
            this.label7.Text = "label4";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label7.Visible = false;
            this.label7.WordWrap = false;
            // 
            // label12
            // 
            this.label12.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNeta")});
            this.label12.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(370F, 2F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseTextAlignment = false;
            summary21.FormatString = "{0:#,#.00}";
            summary21.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label12.Summary = summary21;
            this.label12.Text = "label12";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label13
            // 
            this.label13.CanGrow = false;
            this.label13.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(100F, 2F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            summary22.FormatString = "{0:$#,#.00}";
            this.label13.Summary = summary22;
            this.label13.Text = "Total General";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label13.WordWrap = false;
            // 
            // label80
            // 
            this.label80.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ComisionNeta")});
            this.label80.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label80.LocationFloat = new DevExpress.Utils.PointFloat(761.0001F, 2.000014F);
            this.label80.Name = "label80";
            this.label80.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label80.SizeF = new System.Drawing.SizeF(62.99988F, 18F);
            this.label80.StylePriority.UseFont = false;
            this.label80.StylePriority.UseTextAlignment = false;
            summary23.FormatString = "{0:$#,#.00}";
            summary23.IgnoreNullValues = true;
            summary23.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label80.Summary = summary23;
            this.label80.Text = "label80";
            this.label80.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label74
            // 
            this.label74.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorcentajeSubTotal", "{0:#,#.00%;(#,#.00%)}")});
            this.label74.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label74.LocationFloat = new DevExpress.Utils.PointFloat(700.0001F, 2F);
            this.label74.Name = "label74";
            this.label74.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label74.SizeF = new System.Drawing.SizeF(61F, 18F);
            this.label74.StylePriority.UseFont = false;
            this.label74.StylePriority.UseTextAlignment = false;
            summary24.FormatString = "{0:$#,#.00}";
            this.label74.Summary = summary24;
            this.label74.Text = "label74";
            this.label74.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label63
            // 
            this.label63.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoNeto")});
            this.label63.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label63.LocationFloat = new DevExpress.Utils.PointFloat(430F, 2F);
            this.label63.Name = "label63";
            this.label63.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label63.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label63.StylePriority.UseFont = false;
            this.label63.StylePriority.UseTextAlignment = false;
            summary25.FormatString = "{0:$#,#.00}";
            summary25.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label63.Summary = summary25;
            this.label63.Text = "label63";
            this.label63.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label64
            // 
            this.label64.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteNeto")});
            this.label64.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label64.LocationFloat = new DevExpress.Utils.PointFloat(510F, 2F);
            this.label64.Name = "label64";
            this.label64.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label64.SizeF = new System.Drawing.SizeF(94.99994F, 18F);
            this.label64.StylePriority.UseFont = false;
            this.label64.StylePriority.UseTextAlignment = false;
            summary26.FormatString = "{0:$#,#.00}";
            summary26.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label64.Summary = summary26;
            this.label64.Text = "label64";
            this.label64.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line5
            // 
            this.line5.BorderColor = System.Drawing.Color.Gray;
            this.line5.ForeColor = System.Drawing.Color.Gray;
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(2.499878F, 0F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line5.StylePriority.UseBorderColor = false;
            this.line5.StylePriority.UseForeColor = false;
            // 
            // label62
            // 
            this.label62.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Utilidad")});
            this.label62.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label62.LocationFloat = new DevExpress.Utils.PointFloat(605.0001F, 2F);
            this.label62.Name = "label62";
            this.label62.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label62.SizeF = new System.Drawing.SizeF(95F, 18F);
            this.label62.StylePriority.UseFont = false;
            this.label62.StylePriority.UseTextAlignment = false;
            summary27.FormatString = "{0:$#,#.00}";
            summary27.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label62.Summary = summary27;
            this.label62.Text = "label62";
            this.label62.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label59
            // 
            this.label59.CanGrow = false;
            this.label59.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label59.LocationFloat = new DevExpress.Utils.PointFloat(100F, 2F);
            this.label59.Name = "label59";
            this.label59.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label59.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label59.StylePriority.UseFont = false;
            this.label59.StylePriority.UseTextAlignment = false;
            summary28.FormatString = "{0:$#,#.00}";
            this.label59.Summary = summary28;
            this.label59.Text = "Total";
            this.label59.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label59.WordWrap = false;
            // 
            // label60
            // 
            this.label60.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNeta")});
            this.label60.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label60.LocationFloat = new DevExpress.Utils.PointFloat(370F, 2F);
            this.label60.Name = "label60";
            this.label60.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label60.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label60.StylePriority.UseFont = false;
            this.label60.StylePriority.UseTextAlignment = false;
            summary29.FormatString = "{0:#,#.00}";
            summary29.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label60.Summary = summary29;
            this.label60.Text = "label60";
            this.label60.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label61
            // 
            this.label61.CanGrow = false;
            this.label61.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Agente")});
            this.label61.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label61.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label61.LocationFloat = new DevExpress.Utils.PointFloat(170F, 2F);
            this.label61.Name = "label61";
            this.label61.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label61.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label61.StyleName = "Title";
            this.label61.StylePriority.UseFont = false;
            this.label61.StylePriority.UseForeColor = false;
            this.label61.StylePriority.UseTextAlignment = false;
            this.label61.Text = "label61";
            this.label61.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label61.WordWrap = false;
            // 
            // label84
            // 
            this.label84.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotal")});
            this.label84.Font = new System.Drawing.Font("Times New Roman", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label84.LocationFloat = new DevExpress.Utils.PointFloat(10.00001F, 14.50001F);
            this.label84.Name = "label84";
            this.label84.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label84.SizeF = new System.Drawing.SizeF(64.99963F, 8.000024F);
            this.label84.StylePriority.UseFont = false;
            this.label84.Text = "label84";
            this.label84.Visible = false;
            // 
            // label70
            // 
            this.label70.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotal")});
            this.label70.Font = new System.Drawing.Font("Times New Roman", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label70.LocationFloat = new DevExpress.Utils.PointFloat(10.00001F, 4.000014F);
            this.label70.Name = "label70";
            this.label70.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label70.SizeF = new System.Drawing.SizeF(64.99963F, 8.000024F);
            this.label70.StylePriority.UseFont = false;
            this.label70.Text = "[CostoTotal]";
            this.label70.Visible = false;
            // 
            // label79
            // 
            this.label79.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ComisionNetaD")});
            this.label79.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label79.LocationFloat = new DevExpress.Utils.PointFloat(761.0001F, 2.000014F);
            this.label79.Name = "label79";
            this.label79.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label79.SizeF = new System.Drawing.SizeF(63.49982F, 18F);
            this.label79.StylePriority.UseFont = false;
            this.label79.StylePriority.UseTextAlignment = false;
            summary30.FormatString = "{0:$#,#.00}";
            summary30.IgnoreNullValues = true;
            summary30.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label79.Summary = summary30;
            this.label79.Text = "label79";
            this.label79.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label73
            // 
            this.label73.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorcentajeSubTotal", "{0:#,#.00%;(#,#.00%)}")});
            this.label73.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label73.LocationFloat = new DevExpress.Utils.PointFloat(700.0001F, 2F);
            this.label73.Name = "label73";
            this.label73.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label73.SizeF = new System.Drawing.SizeF(61F, 18F);
            this.label73.StylePriority.UseFont = false;
            this.label73.StylePriority.UseTextAlignment = false;
            summary31.FormatString = "{0:$#,#.00}";
            this.label73.Summary = summary31;
            this.label73.Text = "label73";
            this.label73.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label52
            // 
            this.label52.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoNetoD")});
            this.label52.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label52.LocationFloat = new DevExpress.Utils.PointFloat(430F, 2F);
            this.label52.Name = "label52";
            this.label52.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label52.SizeF = new System.Drawing.SizeF(79.99973F, 18F);
            this.label52.StylePriority.UseFont = false;
            this.label52.StylePriority.UseTextAlignment = false;
            summary32.FormatString = "{0:$#,#.00}";
            summary32.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label52.Summary = summary32;
            this.label52.Text = "label52";
            this.label52.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label53
            // 
            this.label53.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteNetoD")});
            this.label53.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label53.LocationFloat = new DevExpress.Utils.PointFloat(509.9998F, 2F);
            this.label53.Name = "label53";
            this.label53.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label53.SizeF = new System.Drawing.SizeF(95F, 18F);
            this.label53.StylePriority.UseFont = false;
            this.label53.StylePriority.UseTextAlignment = false;
            summary33.FormatString = "{0:$#,#.00}";
            summary33.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label53.Summary = summary33;
            this.label53.Text = "label53";
            this.label53.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line8
            // 
            this.line8.BorderColor = System.Drawing.Color.Gray;
            this.line8.ForeColor = System.Drawing.Color.Gray;
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(2.000122F, 0F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line8.StylePriority.UseBorderColor = false;
            this.line8.StylePriority.UseForeColor = false;
            // 
            // label51
            // 
            this.label51.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.UtilidadD")});
            this.label51.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label51.LocationFloat = new DevExpress.Utils.PointFloat(605.0001F, 2F);
            this.label51.Name = "label51";
            this.label51.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label51.SizeF = new System.Drawing.SizeF(95F, 18F);
            this.label51.StylePriority.UseFont = false;
            this.label51.StylePriority.UseTextAlignment = false;
            summary34.FormatString = "{0:$#,#.00}";
            summary34.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label51.Summary = summary34;
            this.label51.Text = "label51";
            this.label51.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label47
            // 
            this.label47.CanGrow = false;
            this.label47.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label47.LocationFloat = new DevExpress.Utils.PointFloat(100F, 2F);
            this.label47.Name = "label47";
            this.label47.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label47.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label47.StylePriority.UseFont = false;
            this.label47.StylePriority.UseTextAlignment = false;
            summary35.FormatString = "{0:$#,#.00}";
            this.label47.Summary = summary35;
            this.label47.Text = "Total";
            this.label47.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label47.WordWrap = false;
            // 
            // label49
            // 
            this.label49.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNetaD")});
            this.label49.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(370F, 2F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label49.StylePriority.UseFont = false;
            this.label49.StylePriority.UseTextAlignment = false;
            summary36.FormatString = "{0:#,#.00}";
            summary36.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label49.Summary = summary36;
            this.label49.Text = "label49";
            this.label49.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label50
            // 
            this.label50.CanGrow = false;
            this.label50.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Agente")});
            this.label50.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label50.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label50.LocationFloat = new DevExpress.Utils.PointFloat(170F, 2F);
            this.label50.Name = "label50";
            this.label50.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label50.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label50.StyleName = "Title";
            this.label50.StylePriority.UseFont = false;
            this.label50.StylePriority.UseForeColor = false;
            this.label50.StylePriority.UseTextAlignment = false;
            this.label50.Text = "label50";
            this.label50.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label50.WordWrap = false;
            // 
            // label82
            // 
            this.label82.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ComisionNetaD")});
            this.label82.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label82.LocationFloat = new DevExpress.Utils.PointFloat(761.0001F, 1.999982F);
            this.label82.Name = "label82";
            this.label82.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label82.SizeF = new System.Drawing.SizeF(62.99988F, 18.00003F);
            this.label82.StylePriority.UseFont = false;
            this.label82.StylePriority.UseTextAlignment = false;
            summary37.FormatString = "{0:$#,#.00}";
            summary37.IgnoreNullValues = true;
            summary37.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label82.Summary = summary37;
            this.label82.Text = "label82";
            this.label82.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label76
            // 
            this.label76.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorcentajeTotal", "{0:#,#.00%;(#,#.00%)}")});
            this.label76.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label76.LocationFloat = new DevExpress.Utils.PointFloat(700.0001F, 2F);
            this.label76.Name = "label76";
            this.label76.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label76.SizeF = new System.Drawing.SizeF(61F, 18F);
            this.label76.StylePriority.UseFont = false;
            this.label76.StylePriority.UseTextAlignment = false;
            summary38.FormatString = "{0:$#,#.00}";
            this.label76.Summary = summary38;
            this.label76.Text = "label76";
            this.label76.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label68
            // 
            this.label68.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoNetoD")});
            this.label68.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label68.LocationFloat = new DevExpress.Utils.PointFloat(430.0002F, 2F);
            this.label68.Name = "label68";
            this.label68.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label68.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label68.StylePriority.UseFont = false;
            this.label68.StylePriority.UseTextAlignment = false;
            summary39.FormatString = "{0:$#,#.00}";
            summary39.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label68.Summary = summary39;
            this.label68.Text = "label68";
            this.label68.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label69
            // 
            this.label69.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteNetoD")});
            this.label69.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label69.LocationFloat = new DevExpress.Utils.PointFloat(510.0002F, 2F);
            this.label69.Name = "label69";
            this.label69.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label69.SizeF = new System.Drawing.SizeF(94.99994F, 18.00003F);
            this.label69.StylePriority.UseFont = false;
            this.label69.StylePriority.UseTextAlignment = false;
            summary40.FormatString = "{0:$#,#.00}";
            summary40.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label69.Summary = summary40;
            this.label69.Text = "label69";
            this.label69.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line10
            // 
            this.line10.BorderColor = System.Drawing.Color.Gray;
            this.line10.ForeColor = System.Drawing.Color.Gray;
            this.line10.LocationFloat = new DevExpress.Utils.PointFloat(0.666666F, 0F);
            this.line10.Name = "line10";
            this.line10.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line10.StylePriority.UseBorderColor = false;
            this.line10.StylePriority.UseForeColor = false;
            // 
            // label67
            // 
            this.label67.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.UtilidadD")});
            this.label67.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label67.LocationFloat = new DevExpress.Utils.PointFloat(605.0001F, 2F);
            this.label67.Name = "label67";
            this.label67.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label67.SizeF = new System.Drawing.SizeF(95F, 18F);
            this.label67.StylePriority.UseFont = false;
            this.label67.StylePriority.UseTextAlignment = false;
            summary41.FormatString = "{0:$#,#.00}";
            summary41.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label67.Summary = summary41;
            this.label67.Text = "label67";
            this.label67.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label54
            // 
            this.label54.CanGrow = false;
            this.label54.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label54.LocationFloat = new DevExpress.Utils.PointFloat(100F, 2F);
            this.label54.Name = "label54";
            this.label54.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label54.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label54.StylePriority.UseFont = false;
            this.label54.StylePriority.UseTextAlignment = false;
            summary42.FormatString = "{0:$#,#.00}";
            this.label54.Summary = summary42;
            this.label54.Text = "Total General";
            this.label54.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label54.WordWrap = false;
            // 
            // label65
            // 
            this.label65.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CantidadNetaD")});
            this.label65.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label65.LocationFloat = new DevExpress.Utils.PointFloat(370.0001F, 2F);
            this.label65.Name = "label65";
            this.label65.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label65.SizeF = new System.Drawing.SizeF(60F, 18.00003F);
            this.label65.StylePriority.UseFont = false;
            this.label65.StylePriority.UseTextAlignment = false;
            summary43.FormatString = "{0:#,#.00}";
            summary43.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label65.Summary = summary43;
            this.label65.Text = "label65";
            this.label65.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label66
            // 
            this.label66.CanGrow = false;
            this.label66.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Nombre")});
            this.label66.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Bold);
            this.label66.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label66.LocationFloat = new DevExpress.Utils.PointFloat(170F, 2F);
            this.label66.Name = "label66";
            this.label66.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label66.SizeF = new System.Drawing.SizeF(200F, 18.00003F);
            this.label66.StyleName = "Title";
            this.label66.StylePriority.UseFont = false;
            this.label66.StylePriority.UseForeColor = false;
            this.label66.StylePriority.UseTextAlignment = false;
            this.label66.Text = "label4";
            this.label66.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label66.Visible = false;
            this.label66.WordWrap = false;
            // 
            // line12
            // 
            this.line12.BorderColor = System.Drawing.Color.Gray;
            this.line12.ForeColor = System.Drawing.Color.Gray;
            this.line12.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line12.Name = "line12";
            this.line12.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line12.StylePriority.UseBorderColor = false;
            this.line12.StylePriority.UseForeColor = false;
            // 
            // line11
            // 
            this.line11.BorderColor = System.Drawing.Color.Gray;
            this.line11.ForeColor = System.Drawing.Color.Gray;
            this.line11.LocationFloat = new DevExpress.Utils.PointFloat(6.103516E-05F, 20F);
            this.line11.Name = "line11";
            this.line11.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line11.StylePriority.UseBorderColor = false;
            this.line11.StylePriority.UseForeColor = false;
            // 
            // label92
            // 
            this.label92.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label92.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label92.LocationFloat = new DevExpress.Utils.PointFloat(761.0001F, 2F);
            this.label92.Name = "label92";
            this.label92.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label92.SizeF = new System.Drawing.SizeF(60.99988F, 18F);
            this.label92.StyleName = "Title";
            this.label92.StylePriority.UseFont = false;
            this.label92.StylePriority.UseForeColor = false;
            this.label92.StylePriority.UseTextAlignment = false;
            this.label92.Text = "Comisión";
            this.label92.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label91
            // 
            this.label91.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label91.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label91.LocationFloat = new DevExpress.Utils.PointFloat(604.9997F, 2F);
            this.label91.Name = "label91";
            this.label91.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label91.SizeF = new System.Drawing.SizeF(95F, 18F);
            this.label91.StyleName = "Title";
            this.label91.StylePriority.UseFont = false;
            this.label91.StylePriority.UseForeColor = false;
            this.label91.StylePriority.UseTextAlignment = false;
            this.label91.Text = "Utilidad";
            this.label91.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label94
            // 
            this.label94.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label94.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label94.LocationFloat = new DevExpress.Utils.PointFloat(0.6663284F, 2F);
            this.label94.Name = "label94";
            this.label94.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label94.Scripts.OnBeforePrint = "label94_BeforePrint";
            this.label94.SizeF = new System.Drawing.SizeF(99.33337F, 18F);
            this.label94.StyleName = "Title";
            this.label94.StylePriority.UseFont = false;
            this.label94.StylePriority.UseForeColor = false;
            this.label94.StylePriority.UseTextAlignment = false;
            this.label94.Text = "Movimiento";
            this.label94.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label93
            // 
            this.label93.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label93.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label93.LocationFloat = new DevExpress.Utils.PointFloat(700.0001F, 2F);
            this.label93.Name = "label93";
            this.label93.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label93.SizeF = new System.Drawing.SizeF(61F, 18F);
            this.label93.StyleName = "Title";
            this.label93.StylePriority.UseFont = false;
            this.label93.StylePriority.UseForeColor = false;
            this.label93.StylePriority.UseTextAlignment = false;
            this.label93.Text = "%";
            this.label93.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label90
            // 
            this.label90.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label90.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label90.LocationFloat = new DevExpress.Utils.PointFloat(509.9997F, 2F);
            this.label90.Name = "label90";
            this.label90.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label90.SizeF = new System.Drawing.SizeF(95F, 18F);
            this.label90.StyleName = "Title";
            this.label90.StylePriority.UseFont = false;
            this.label90.StylePriority.UseForeColor = false;
            this.label90.StylePriority.UseTextAlignment = false;
            this.label90.Text = "Importe Venta";
            this.label90.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label87
            // 
            this.label87.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label87.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label87.LocationFloat = new DevExpress.Utils.PointFloat(99.99969F, 2F);
            this.label87.Name = "label87";
            this.label87.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label87.SizeF = new System.Drawing.SizeF(70F, 18F);
            this.label87.StyleName = "Title";
            this.label87.StylePriority.UseFont = false;
            this.label87.StylePriority.UseForeColor = false;
            this.label87.StylePriority.UseTextAlignment = false;
            this.label87.Text = "Agente";
            this.label87.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label86
            // 
            this.label86.CanGrow = false;
            this.label86.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label86.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label86.LocationFloat = new DevExpress.Utils.PointFloat(169.9997F, 2F);
            this.label86.Name = "label86";
            this.label86.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label86.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label86.StyleName = "Title";
            this.label86.StylePriority.UseFont = false;
            this.label86.StylePriority.UseForeColor = false;
            this.label86.StylePriority.UseTextAlignment = false;
            this.label86.Text = "Nombre";
            this.label86.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label86.WordWrap = false;
            // 
            // label89
            // 
            this.label89.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label89.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label89.LocationFloat = new DevExpress.Utils.PointFloat(369.9997F, 2F);
            this.label89.Name = "label89";
            this.label89.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label89.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label89.StyleName = "Title";
            this.label89.StylePriority.UseFont = false;
            this.label89.StylePriority.UseForeColor = false;
            this.label89.StylePriority.UseTextAlignment = false;
            this.label89.Text = "Cantidad";
            this.label89.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label88
            // 
            this.label88.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label88.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label88.LocationFloat = new DevExpress.Utils.PointFloat(429.9997F, 2F);
            this.label88.Name = "label88";
            this.label88.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label88.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.label88.StyleName = "Title";
            this.label88.StylePriority.UseFont = false;
            this.label88.StylePriority.UseForeColor = false;
            this.label88.StylePriority.UseTextAlignment = false;
            this.label88.Text = "Costo";
            this.label88.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.SelectCommand = this.oleDbCommand1;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand1
            // 
            this.oleDbCommand1.CommandText = "SPINFORMEMIS_SPUTILIDADAGENTES 1";
            this.oleDbCommand1.CommandTimeout = 0;
            this.oleDbCommand1.Connection = this.oleDbConnection1;
            // 
            // oleDbConnection1
            // 
            this.oleDbConnection1.ConnectionString = "Provider=SQLOLEDB;Data Source=.;Initial Catalog=INFORMES11;User ID=SA;";
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Maroon;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Maroon;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // Movimiento
            // 
            this.Movimiento.DataMember = "Table";
            this.Movimiento.DataSource = this.RepVentaNeta;
            this.Movimiento.Expression = "[Mov] + \' \'  + [MovID]";
            this.Movimiento.Name = "Movimiento";
            // 
            // PorcentajeC
            // 
            this.PorcentajeC.DataMember = "Table";
            this.PorcentajeC.DataSource = this.RepVentaNeta;
            this.PorcentajeC.Expression = "Iif([CostoNeto]  !=  0.00,(([ImporteNeto]/[CostoNeto])-1)*1 ,1 )";
            this.PorcentajeC.Name = "PorcentajeC";
            // 
            // PorcentajeCD
            // 
            this.PorcentajeCD.DataMember = "Table";
            this.PorcentajeCD.DataSource = this.RepVentaNeta;
            this.PorcentajeCD.Expression = "Iif([CostoNetoD] != 0.00,(([ImporteNetoD]/[CostoNetoD])-1)*1 ,1 )";
            this.PorcentajeCD.Name = "PorcentajeCD";
            // 
            // PorcentajeSubTotal
            // 
            this.PorcentajeSubTotal.DataMember = "Table";
            this.PorcentajeSubTotal.DataSource = this.RepVentaNeta;
            this.PorcentajeSubTotal.Name = "PorcentajeSubTotal";
            this.PorcentajeSubTotal.Scripts.OnGetValue = "PorcentajeSubTotal_GetValue";
            // 
            // CostoTotal
            // 
            this.CostoTotal.DataMember = "Table";
            this.CostoTotal.DataSource = this.RepVentaNeta;
            this.CostoTotal.Name = "CostoTotal";
            this.CostoTotal.Scripts.OnGetValue = "CostoTotal_GetValue";
            // 
            // ImporteTotal
            // 
            this.ImporteTotal.DataMember = "Table";
            this.ImporteTotal.DataSource = this.RepVentaNeta;
            this.ImporteTotal.Name = "ImporteTotal";
            this.ImporteTotal.Scripts.OnGetValue = "ImporteTotal_GetValue";
            // 
            // PorcentajeTotal
            // 
            this.PorcentajeTotal.DataMember = "Table";
            this.PorcentajeTotal.DataSource = this.RepVentaNeta;
            this.PorcentajeTotal.Name = "PorcentajeTotal";
            this.PorcentajeTotal.Scripts.OnGetValue = "PorcentajeTotal_GetValue";
            // 
            // InformemisUtilidadAgentes
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.pageFooterBand1,
                        this.reportHeaderBand1,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.ReportFooter,
                        this.GroupHeader1,
                        this.GroupFooter1,
                        this.GroupFooter2,
                        this.GroupFooter3,
                        this.GroupFooter4,
                        this.GroupHeader2});
            this.Bookmark = "InformemisUtilidadAgentes";
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.Movimiento,
                        this.PorcentajeC,
                        this.PorcentajeCD,
                        this.PorcentajeSubTotal,
                        this.CostoTotal,
                        this.ImporteTotal,
                        this.PorcentajeTotal});
            this.DataAdapter = this.TableTableAdapter;
            this.DataMember = "Table";
            this.DataSource = this.RepVentaNeta;
            this.DisplayName = "Informemis_spUtilidadAgentes";
            this.Margins = new System.Drawing.Printing.Margins(12, 12, 38, 63);
            this.Name = "InformemisUtilidadAgentes";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "EXEC spInformemis_spUtilidadAgentes [EstacionTrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepVentaNetaDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepVentaNetaDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepVentaNetaDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepVentaNetaDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepVentaNetaDataSet cln = ((RepVentaNetaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepVentaNetaDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnAgente;
            private global::System.Data.DataColumn columnNombre;
            private global::System.Data.DataColumn columnMov;
            private global::System.Data.DataColumn columnMovID;
            private global::System.Data.DataColumn columnDescuentoGlobal;
            private global::System.Data.DataColumn columnCantidadNeta;
            private global::System.Data.DataColumn columnImporteBruto;
            private global::System.Data.DataColumn columnImporteNeto;
            private global::System.Data.DataColumn columnCostoNeto;
            private global::System.Data.DataColumn columnComisionNeta;
            private global::System.Data.DataColumn columnUtilidad;
            private global::System.Data.DataColumn columnUtilidadPor;
            private global::System.Data.DataColumn columnDescuentoGlobalD;
            private global::System.Data.DataColumn columnCantidadNetaD;
            private global::System.Data.DataColumn columnImporteBrutoD;
            private global::System.Data.DataColumn columnImporteNetoD;
            private global::System.Data.DataColumn columnCostoNetoD;
            private global::System.Data.DataColumn columnComisionNetaD;
            private global::System.Data.DataColumn columnUtilidadD;
            private global::System.Data.DataColumn columnUtilidadPorD;
            private global::System.Data.DataColumn columnPorcentaje;
            private global::System.Data.DataColumn columnPorcentajeD;
            private global::System.Data.DataColumn columnDesglosar;
            private global::System.Data.DataColumn columnDesglosar2;
            private global::System.Data.DataColumn columnFechaD;
            private global::System.Data.DataColumn columnFechaA;
            private global::System.Data.DataColumn columnOrden1;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor;
            private global::System.Data.DataColumn columnGrafica1;
            private global::System.Data.DataColumn columnGrafica2;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnReporte;
            private global::System.Data.DataColumn columnDireccion2;
            private global::System.Data.DataColumn columnDireccion3;
            private global::System.Data.DataColumn columnDireccion4;
            private global::System.Data.DataColumn columnGraficaSerie;
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnEtiqueta;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgenteColumn {
                get {
                    return this.columnAgente;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovColumn {
                get {
                    return this.columnMov;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovIDColumn {
                get {
                    return this.columnMovID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescuentoGlobalColumn {
                get {
                    return this.columnDescuentoGlobal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadNetaColumn {
                get {
                    return this.columnCantidadNeta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteBrutoColumn {
                get {
                    return this.columnImporteBruto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteNetoColumn {
                get {
                    return this.columnImporteNeto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoNetoColumn {
                get {
                    return this.columnCostoNeto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComisionNetaColumn {
                get {
                    return this.columnComisionNeta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilidadColumn {
                get {
                    return this.columnUtilidad;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilidadPorColumn {
                get {
                    return this.columnUtilidadPor;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescuentoGlobalDColumn {
                get {
                    return this.columnDescuentoGlobalD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadNetaDColumn {
                get {
                    return this.columnCantidadNetaD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteBrutoDColumn {
                get {
                    return this.columnImporteBrutoD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteNetoDColumn {
                get {
                    return this.columnImporteNetoD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoNetoDColumn {
                get {
                    return this.columnCostoNetoD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComisionNetaDColumn {
                get {
                    return this.columnComisionNetaD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilidadDColumn {
                get {
                    return this.columnUtilidadD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilidadPorDColumn {
                get {
                    return this.columnUtilidadPorD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PorcentajeColumn {
                get {
                    return this.columnPorcentaje;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PorcentajeDColumn {
                get {
                    return this.columnPorcentajeD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesglosarColumn {
                get {
                    return this.columnDesglosar;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Desglosar2Column {
                get {
                    return this.columnDesglosar2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaDColumn {
                get {
                    return this.columnFechaD;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaAColumn {
                get {
                    return this.columnFechaA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Orden1Column {
                get {
                    return this.columnOrden1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValorColumn {
                get {
                    return this.columnGraficaValor;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica1Column {
                get {
                    return this.columnGrafica1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica2Column {
                get {
                    return this.columnGrafica2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporteColumn {
                get {
                    return this.columnReporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion2Column {
                get {
                    return this.columnDireccion2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion3Column {
                get {
                    return this.columnDireccion3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion4Column {
                get {
                    return this.columnDireccion4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaSerieColumn {
                get {
                    return this.columnGraficaSerie;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtiquetaColumn {
                get {
                    return this.columnEtiqueta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        string Agente, 
                        string Nombre, 
                        string Mov, 
                        string MovID, 
                        float DescuentoGlobal, 
                        float CantidadNeta, 
                        decimal ImporteBruto, 
                        decimal ImporteNeto, 
                        decimal CostoNeto, 
                        decimal ComisionNeta, 
                        decimal Utilidad, 
                        float UtilidadPor, 
                        float DescuentoGlobalD, 
                        float CantidadNetaD, 
                        decimal ImporteBrutoD, 
                        decimal ImporteNetoD, 
                        decimal CostoNetoD, 
                        decimal ComisionNetaD, 
                        decimal UtilidadD, 
                        float UtilidadPorD, 
                        double Porcentaje, 
                        double PorcentajeD, 
                        string Desglosar, 
                        string Desglosar2, 
                        System.DateTime FechaD, 
                        System.DateTime FechaA, 
                        int Orden1, 
                        string GraficaArgumento, 
                        double GraficaValor, 
                        int Grafica1, 
                        int Grafica2, 
                        string Titulo, 
                        string Reporte, 
                        string Direccion2, 
                        string Direccion3, 
                        string Direccion4, 
                        string GraficaSerie, 
                        string EmpresaNombre, 
                        bool Etiqueta, 
                        bool VerGraficaDetalle) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Agente,
                        Nombre,
                        Mov,
                        MovID,
                        DescuentoGlobal,
                        CantidadNeta,
                        ImporteBruto,
                        ImporteNeto,
                        CostoNeto,
                        ComisionNeta,
                        Utilidad,
                        UtilidadPor,
                        DescuentoGlobalD,
                        CantidadNetaD,
                        ImporteBrutoD,
                        ImporteNetoD,
                        CostoNetoD,
                        ComisionNetaD,
                        UtilidadD,
                        UtilidadPorD,
                        Porcentaje,
                        PorcentajeD,
                        Desglosar,
                        Desglosar2,
                        FechaD,
                        FechaA,
                        Orden1,
                        GraficaArgumento,
                        GraficaValor,
                        Grafica1,
                        Grafica2,
                        Titulo,
                        Reporte,
                        Direccion2,
                        Direccion3,
                        Direccion4,
                        GraficaSerie,
                        EmpresaNombre,
                        Etiqueta,
                        VerGraficaDetalle};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAgente = base.Columns["Agente"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnMov = base.Columns["Mov"];
                this.columnMovID = base.Columns["MovID"];
                this.columnDescuentoGlobal = base.Columns["DescuentoGlobal"];
                this.columnCantidadNeta = base.Columns["CantidadNeta"];
                this.columnImporteBruto = base.Columns["ImporteBruto"];
                this.columnImporteNeto = base.Columns["ImporteNeto"];
                this.columnCostoNeto = base.Columns["CostoNeto"];
                this.columnComisionNeta = base.Columns["ComisionNeta"];
                this.columnUtilidad = base.Columns["Utilidad"];
                this.columnUtilidadPor = base.Columns["UtilidadPor"];
                this.columnDescuentoGlobalD = base.Columns["DescuentoGlobalD"];
                this.columnCantidadNetaD = base.Columns["CantidadNetaD"];
                this.columnImporteBrutoD = base.Columns["ImporteBrutoD"];
                this.columnImporteNetoD = base.Columns["ImporteNetoD"];
                this.columnCostoNetoD = base.Columns["CostoNetoD"];
                this.columnComisionNetaD = base.Columns["ComisionNetaD"];
                this.columnUtilidadD = base.Columns["UtilidadD"];
                this.columnUtilidadPorD = base.Columns["UtilidadPorD"];
                this.columnPorcentaje = base.Columns["Porcentaje"];
                this.columnPorcentajeD = base.Columns["PorcentajeD"];
                this.columnDesglosar = base.Columns["Desglosar"];
                this.columnDesglosar2 = base.Columns["Desglosar2"];
                this.columnFechaD = base.Columns["FechaD"];
                this.columnFechaA = base.Columns["FechaA"];
                this.columnOrden1 = base.Columns["Orden1"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor = base.Columns["GraficaValor"];
                this.columnGrafica1 = base.Columns["Grafica1"];
                this.columnGrafica2 = base.Columns["Grafica2"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnReporte = base.Columns["Reporte"];
                this.columnDireccion2 = base.Columns["Direccion2"];
                this.columnDireccion3 = base.Columns["Direccion3"];
                this.columnDireccion4 = base.Columns["Direccion4"];
                this.columnGraficaSerie = base.Columns["GraficaSerie"];
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnEtiqueta = base.Columns["Etiqueta"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAgente = new global::System.Data.DataColumn("Agente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgente);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnMov = new global::System.Data.DataColumn("Mov", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMov);
                this.columnMovID = new global::System.Data.DataColumn("MovID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovID);
                this.columnDescuentoGlobal = new global::System.Data.DataColumn("DescuentoGlobal", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescuentoGlobal);
                this.columnCantidadNeta = new global::System.Data.DataColumn("CantidadNeta", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadNeta);
                this.columnImporteBruto = new global::System.Data.DataColumn("ImporteBruto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteBruto);
                this.columnImporteNeto = new global::System.Data.DataColumn("ImporteNeto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteNeto);
                this.columnCostoNeto = new global::System.Data.DataColumn("CostoNeto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoNeto);
                this.columnComisionNeta = new global::System.Data.DataColumn("ComisionNeta", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComisionNeta);
                this.columnUtilidad = new global::System.Data.DataColumn("Utilidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilidad);
                this.columnUtilidadPor = new global::System.Data.DataColumn("UtilidadPor", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilidadPor);
                this.columnDescuentoGlobalD = new global::System.Data.DataColumn("DescuentoGlobalD", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescuentoGlobalD);
                this.columnCantidadNetaD = new global::System.Data.DataColumn("CantidadNetaD", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidadNetaD);
                this.columnImporteBrutoD = new global::System.Data.DataColumn("ImporteBrutoD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteBrutoD);
                this.columnImporteNetoD = new global::System.Data.DataColumn("ImporteNetoD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteNetoD);
                this.columnCostoNetoD = new global::System.Data.DataColumn("CostoNetoD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoNetoD);
                this.columnComisionNetaD = new global::System.Data.DataColumn("ComisionNetaD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComisionNetaD);
                this.columnUtilidadD = new global::System.Data.DataColumn("UtilidadD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilidadD);
                this.columnUtilidadPorD = new global::System.Data.DataColumn("UtilidadPorD", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilidadPorD);
                this.columnPorcentaje = new global::System.Data.DataColumn("Porcentaje", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentaje);
                this.columnPorcentajeD = new global::System.Data.DataColumn("PorcentajeD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentajeD);
                this.columnDesglosar = new global::System.Data.DataColumn("Desglosar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesglosar);
                this.columnDesglosar2 = new global::System.Data.DataColumn("Desglosar2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesglosar2);
                this.columnFechaD = new global::System.Data.DataColumn("FechaD", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaD);
                this.columnFechaA = new global::System.Data.DataColumn("FechaA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaA);
                this.columnOrden1 = new global::System.Data.DataColumn("Orden1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrden1);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor = new global::System.Data.DataColumn("GraficaValor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor);
                this.columnGrafica1 = new global::System.Data.DataColumn("Grafica1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica1);
                this.columnGrafica2 = new global::System.Data.DataColumn("Grafica2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica2);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnReporte = new global::System.Data.DataColumn("Reporte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporte);
                this.columnDireccion2 = new global::System.Data.DataColumn("Direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion2);
                this.columnDireccion3 = new global::System.Data.DataColumn("Direccion3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion3);
                this.columnDireccion4 = new global::System.Data.DataColumn("Direccion4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion4);
                this.columnGraficaSerie = new global::System.Data.DataColumn("GraficaSerie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaSerie);
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnEtiqueta = new global::System.Data.DataColumn("Etiqueta", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtiqueta);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Agente {
                get {
                    try {
                        return ((string)(this[this.table_Table.AgenteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Agente\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.AgenteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Nombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mov {
                get {
                    try {
                        return ((string)(this[this.table_Table.MovColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Mov\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MovColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MovID {
                get {
                    try {
                        return ((string)(this[this.table_Table.MovIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MovID\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MovIDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DescuentoGlobal {
                get {
                    try {
                        return ((float)(this[this.table_Table.DescuentoGlobalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DescuentoGlobal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescuentoGlobalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float CantidadNeta {
                get {
                    try {
                        return ((float)(this[this.table_Table.CantidadNetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CantidadNeta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CantidadNetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ImporteBruto {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImporteBrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ImporteBruto\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImporteBrutoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ImporteNeto {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImporteNetoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ImporteNeto\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImporteNetoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostoNeto {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.CostoNetoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoNeto\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoNetoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ComisionNeta {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ComisionNetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ComisionNeta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ComisionNetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Utilidad {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.UtilidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Utilidad\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UtilidadColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float UtilidadPor {
                get {
                    try {
                        return ((float)(this[this.table_Table.UtilidadPorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UtilidadPor\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UtilidadPorColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float DescuentoGlobalD {
                get {
                    try {
                        return ((float)(this[this.table_Table.DescuentoGlobalDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DescuentoGlobalD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescuentoGlobalDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float CantidadNetaD {
                get {
                    try {
                        return ((float)(this[this.table_Table.CantidadNetaDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CantidadNetaD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CantidadNetaDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ImporteBrutoD {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImporteBrutoDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ImporteBrutoD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImporteBrutoDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ImporteNetoD {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImporteNetoDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ImporteNetoD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImporteNetoDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostoNetoD {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.CostoNetoDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoNetoD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoNetoDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ComisionNetaD {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ComisionNetaDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ComisionNetaD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ComisionNetaDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilidadD {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.UtilidadDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UtilidadD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UtilidadDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float UtilidadPorD {
                get {
                    try {
                        return ((float)(this[this.table_Table.UtilidadPorDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UtilidadPorD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UtilidadPorDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Porcentaje {
                get {
                    try {
                        return ((double)(this[this.table_Table.PorcentajeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Porcentaje\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PorcentajeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PorcentajeD {
                get {
                    try {
                        return ((double)(this[this.table_Table.PorcentajeDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PorcentajeD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PorcentajeDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desglosar {
                get {
                    try {
                        return ((string)(this[this.table_Table.DesglosarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Desglosar\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DesglosarColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desglosar2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Desglosar2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Desglosar2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Desglosar2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaD {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaD\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaA\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Orden1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Orden1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Orden1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Orden1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor {
                get {
                    try {
                        return ((double)(this[this.table_Table.GraficaValorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaValorColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Grafica1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica2 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Grafica2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reporte {
                get {
                    try {
                        return ((string)(this[this.table_Table.ReporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Reporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ReporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion3 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion4 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaSerie {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaSerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaSerie\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaSerieColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Etiqueta {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EtiquetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Etiqueta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EtiquetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.table_Table.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgenteNull() {
                return this.IsNull(this.table_Table.AgenteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgenteNull() {
                this[this.table_Table.AgenteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.table_Table.NombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.table_Table.NombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovNull() {
                return this.IsNull(this.table_Table.MovColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovNull() {
                this[this.table_Table.MovColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovIDNull() {
                return this.IsNull(this.table_Table.MovIDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovIDNull() {
                this[this.table_Table.MovIDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescuentoGlobalNull() {
                return this.IsNull(this.table_Table.DescuentoGlobalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescuentoGlobalNull() {
                this[this.table_Table.DescuentoGlobalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadNetaNull() {
                return this.IsNull(this.table_Table.CantidadNetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadNetaNull() {
                this[this.table_Table.CantidadNetaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteBrutoNull() {
                return this.IsNull(this.table_Table.ImporteBrutoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteBrutoNull() {
                this[this.table_Table.ImporteBrutoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteNetoNull() {
                return this.IsNull(this.table_Table.ImporteNetoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteNetoNull() {
                this[this.table_Table.ImporteNetoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoNetoNull() {
                return this.IsNull(this.table_Table.CostoNetoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoNetoNull() {
                this[this.table_Table.CostoNetoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComisionNetaNull() {
                return this.IsNull(this.table_Table.ComisionNetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComisionNetaNull() {
                this[this.table_Table.ComisionNetaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilidadNull() {
                return this.IsNull(this.table_Table.UtilidadColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilidadNull() {
                this[this.table_Table.UtilidadColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilidadPorNull() {
                return this.IsNull(this.table_Table.UtilidadPorColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilidadPorNull() {
                this[this.table_Table.UtilidadPorColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescuentoGlobalDNull() {
                return this.IsNull(this.table_Table.DescuentoGlobalDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescuentoGlobalDNull() {
                this[this.table_Table.DescuentoGlobalDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadNetaDNull() {
                return this.IsNull(this.table_Table.CantidadNetaDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadNetaDNull() {
                this[this.table_Table.CantidadNetaDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteBrutoDNull() {
                return this.IsNull(this.table_Table.ImporteBrutoDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteBrutoDNull() {
                this[this.table_Table.ImporteBrutoDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteNetoDNull() {
                return this.IsNull(this.table_Table.ImporteNetoDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteNetoDNull() {
                this[this.table_Table.ImporteNetoDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoNetoDNull() {
                return this.IsNull(this.table_Table.CostoNetoDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoNetoDNull() {
                this[this.table_Table.CostoNetoDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComisionNetaDNull() {
                return this.IsNull(this.table_Table.ComisionNetaDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComisionNetaDNull() {
                this[this.table_Table.ComisionNetaDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilidadDNull() {
                return this.IsNull(this.table_Table.UtilidadDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilidadDNull() {
                this[this.table_Table.UtilidadDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilidadPorDNull() {
                return this.IsNull(this.table_Table.UtilidadPorDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilidadPorDNull() {
                this[this.table_Table.UtilidadPorDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorcentajeNull() {
                return this.IsNull(this.table_Table.PorcentajeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorcentajeNull() {
                this[this.table_Table.PorcentajeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorcentajeDNull() {
                return this.IsNull(this.table_Table.PorcentajeDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorcentajeDNull() {
                this[this.table_Table.PorcentajeDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesglosarNull() {
                return this.IsNull(this.table_Table.DesglosarColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesglosarNull() {
                this[this.table_Table.DesglosarColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesglosar2Null() {
                return this.IsNull(this.table_Table.Desglosar2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesglosar2Null() {
                this[this.table_Table.Desglosar2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaDNull() {
                return this.IsNull(this.table_Table.FechaDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaDNull() {
                this[this.table_Table.FechaDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaANull() {
                return this.IsNull(this.table_Table.FechaAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaANull() {
                this[this.table_Table.FechaAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrden1Null() {
                return this.IsNull(this.table_Table.Orden1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrden1Null() {
                this[this.table_Table.Orden1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.table_Table.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.table_Table.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValorNull() {
                return this.IsNull(this.table_Table.GraficaValorColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValorNull() {
                this[this.table_Table.GraficaValorColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica1Null() {
                return this.IsNull(this.table_Table.Grafica1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica1Null() {
                this[this.table_Table.Grafica1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica2Null() {
                return this.IsNull(this.table_Table.Grafica2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica2Null() {
                this[this.table_Table.Grafica2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.table_Table.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.table_Table.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporteNull() {
                return this.IsNull(this.table_Table.ReporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporteNull() {
                this[this.table_Table.ReporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion2Null() {
                return this.IsNull(this.table_Table.Direccion2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion2Null() {
                this[this.table_Table.Direccion2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion3Null() {
                return this.IsNull(this.table_Table.Direccion3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion3Null() {
                this[this.table_Table.Direccion3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion4Null() {
                return this.IsNull(this.table_Table.Direccion4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion4Null() {
                this[this.table_Table.Direccion4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaSerieNull() {
                return this.IsNull(this.table_Table.GraficaSerieColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaSerieNull() {
                this[this.table_Table.GraficaSerieColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.table_Table.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.table_Table.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEtiquetaNull() {
                return this.IsNull(this.table_Table.EtiquetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEtiquetaNull() {
                this[this.table_Table.EtiquetaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.table_Table.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.table_Table.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
