/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformeVentaNeta : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label52;
        private DevExpress.XtraReports.UI.XRLabel label28;
        private DevExpress.XtraReports.UI.XRLabel label25;
        private DevExpress.XtraReports.UI.XRLabel label24;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.PageFooterBand pageFooterBand1;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.ReportHeaderBand reportHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label61;
        private DevExpress.XtraReports.UI.XRLabel label56;
        private DevExpress.XtraReports.UI.XRLabel label55;
        private DevExpress.XtraReports.UI.XRLabel label54;
        private DevExpress.XtraReports.UI.XRLabel label53;
        private DevExpress.XtraReports.UI.XRLabel label41;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo3;
        private DevExpress.XtraReports.UI.XRLabel label198;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.PageHeaderBand PageHeader;
        private DevExpress.XtraReports.UI.XRLabel label37;
        private DevExpress.XtraReports.UI.XRLabel label36;
        private DevExpress.XtraReports.UI.XRLabel label38;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.XRLabel label39;
        private DevExpress.XtraReports.UI.XRLabel label35;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRLabel label32;
        private DevExpress.XtraReports.UI.XRLabel label34;
        private DevExpress.XtraReports.UI.XRLabel label33;
        private DevExpress.XtraReports.UI.XRLine line2;
        private DevExpress.XtraReports.UI.XRLine line4;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRChart chart3;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.XRLabel label26;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRLabel label57;
        private DevExpress.XtraReports.UI.XRLabel label58;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private DevExpress.XtraReports.UI.XRLabel label44;
        private DevExpress.XtraReports.UI.XRLabel label48;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private DevExpress.XtraReports.UI.XRLabel label59;
        private DevExpress.XtraReports.UI.XRLabel label47;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox1;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo4;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRLabel label63;
        private DevExpress.XtraReports.UI.XRLine line9;
        private DevExpress.XtraReports.UI.XRLabel label50;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLabel label69;
        private DevExpress.XtraReports.UI.XRLine line11;
        private DevExpress.XtraReports.UI.XRLine line10;
        private DevExpress.XtraReports.UI.XRLabel label72;
        private DevExpress.XtraReports.UI.XRLabel label71;
        private DevExpress.XtraReports.UI.XRLabel label62;
        private DevExpress.XtraReports.UI.XRLabel label65;
        private DevExpress.XtraReports.UI.XRPageBreak pageBreak1;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader2;
        private DevExpress.XtraReports.UI.XRLabel label27;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.XRLabel label51;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private System.Data.OleDb.OleDbDataAdapter TableTableAdapter;
        private System.Data.OleDb.OleDbCommand oleDbCommand1;
        private System.Data.OleDb.OleDbConnection oleDbConnection1;
        private XtraReportSerialization.RepVentaNetaDataSet RepVentaNeta;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField Movimiento;
        private DevExpress.XtraReports.UI.CalculatedField Utilidad;
        private System.Resources.ResourceManager _resources;
        public InformeVentaNeta() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAADAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsHnWR035IbpXQAAAABSAAAAK" +
                        "wAAAK0BAAAmJAB0AGgAaQBzAC4AUwBjAHIAaQBwAHQAcwBTAG8AdQByAGMAZQAAAAAAInAAaQBjAHQAd" +
                        "QByAGUAQgBvAHgAMQAuAEkAbQBhAGcAZQATFAAAInAAaQBjAHQAdQByAGUAQgBvAHgAMgAuAEkAbQBhA" +
                        "GcAZQAQ1gAAAZAoDQpQcml2YXRlIFN1YiBHcmFuVG90YWxfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyI" +
                        "EFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJnc" +
                        "ykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlRvdGFsIikgPSBGYWxzZSBUSEVOICAgICANC" +
                        "iAgICAgZS5DYW5jZWwgPSBUcnVlDQogIEVMU0UNCiAgICAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTkQgS" +
                        "UYgDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgRGV0YWlsX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlc" +
                        "iBBcyBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ" +
                        "3MpDQoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJUb3RhbCIpID0gRmFsc2UgQU5EIEdldEN1c" +
                        "nJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYTEiKSA9IEZhbHNlIFRIRU4gICAgIA0KICAgICBlLkNhbmNlb" +
                        "CA9IEZhbHNlDQogIEVMU0UNCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICBFTkQgSUYgDQoNCkVuZ" +
                        "CBTdWINCg0KUHJpdmF0ZSBTdWIgR3JvdXBGb290ZXIxX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBc" +
                        "yBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpD" +
                        "QoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJUb3RhbCIpID0gRmFsc2UgVEhFTiAgICAgDQogI" +
                        "CAgIGUuQ2FuY2VsID0gRmFsc2UNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogIEVOR" +
                        "CBJRiANCg0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBjaGFydDFfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZ" +
                        "GVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50Q" +
                        "XJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkNvbnRNb25lZGEiKSBJUyBOT1RISU5HI" +
                        "FRIRU4NCiAgICAgZS5DYW5jZWwgPSBUcnVlICAgIA0KICAgIFJFVFVSTg0KICBFTkQgSUYNCg0KICAnR" +
                        "2VuZXJhIHVuIG9iamV0byBxdWUgcmVwcmVzZW50YSBhIGxhIGdyw6FmaWNhDQogIERpbSBHcmFmaWNhM" +
                        "SBBcyBYUkNoYXJ0ID0gQ1R5cGUoc2VuZGVyLFhSQ2hhcnQpDQoNCiAgJ0d1YXJkYSBlbCB2YWxvciBkZ" +
                        "SBsYSBjb2x1bW5hIENvbnRNb25lZGENCiAgRGltIENvbnRNb25lZGEgQXMgU3RyaW5nID0gR2V0Q3Vyc" +
                        "mVudENvbHVtblZhbHVlKCJDb250TW9uZWRhIikuVG9TdHJpbmcNCg0KICAnR2VuZXJhIHVuIG9iamV0b" +
                        "yBxdWUgcmVwcmVzZW50YSBhIGxhIHBsYW50aWxsYSBzZSBzZXJpZXMgYXV0b2NyZWFkYXMNCiAgRGltI" +
                        "FBsYW50aWxsYSBBcyBTZXJpZXNCYXNlID0gR3JhZmljYTEuU2VyaWVzVGVtcGxhdGUNCg0KICAnR2VuZ" +
                        "XJhIHVuIG9iamV0byB0aXBvIFTDrXR1bG8NCiAgRGltIFRpdHVsbzEgQXMgTmV3IENoYXJ0VGl0bGUoK" +
                        "Q0KICBUaXR1bG8xLlRleHQgPSAiUmVzdW1lbiBNb25lZGEgQ29udGFibGUgKCIgKyBDb250TW9uZWRhL" +
                        "lRyaW0gKyAiKSINCiAgVGl0dWxvMS5Gb250ID0gTmV3IEZvbnQoVGl0dWxvMS5Gb250LlNpemUsMjApD" +
                        "QoNCiAgJ0xpbXBpYSBsb3MgdMOtdHVsb3MgZGUgbGEgZ3LDoWZpY2ENCiAgR3JhZmljYTEuVGl0bGVzL" +
                        "kNsZWFyKCkNCg0KICAnQWdyZWdhIGVsIFTDrXR1bG8gYSBsYSBncsOhZmljYQ0KICBHcmFmaWNhMS5Ua" +
                        "XRsZXMuQWRkUmFuZ2UoTmV3IENoYXJ0VGl0bGUoKSB7VGl0dWxvMX0pDQoNCiAgJ0NyZWEgZG9zIG9ia" +
                        "mV0b3MgdGlwbyBmaWx0cm8geSBsb3MgaW5pY2lhbGl6YSBjb24gbG9zIGZpbHRyb3MgbmVjZXNhcmlvc" +
                        "w0KICBEaW0gRmlsdHJvMSBBcyBOZXcgRGF0YUZpbHRlcigiTW9uZWRhIiwiU3lzdGVtLlN0cmluZyIsR" +
                        "GF0YUZpbHRlckNvbmRpdGlvbi5FcXVhbCxDb250TW9uZWRhKQ0KICBEaW0gRmlsdHJvMiBBcyBOZXcgR" +
                        "GF0YUZpbHRlcigiR3JhZmljYTEiLCJTeXN0ZW0uQm9vbGVhbiIsRGF0YUZpbHRlckNvbmRpdGlvbi5Fc" +
                        "XVhbCxUcnVlKQ0KICBEaW0gRmlsdHJvMyBBcyBOZXcgRGF0YUZpbHRlcigiR3JhZmljYTIiLCJTeXN0Z" +
                        "W0uQm9vbGVhbiIsRGF0YUZpbHRlckNvbmRpdGlvbi5FcXVhbCxUcnVlKQ0KDQogICdMaW1waWEgbG9zI" +
                        "GZpbHRyb3MgZGUgbGEgcGxhbnRpbGxhDQogIFBsYW50aWxsYS5EYXRhRmlsdGVycy5DbGVhcigpDQoNC" +
                        "iAgJ1BvbmUgZWwgQ29uanVjdGlvbk1vZGUgYSBBbmQNCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzQ29ua" +
                        "nVuY3Rpb25Nb2RlID0gQ29uanVuY3Rpb25UeXBlcy5BbmQNCg0KICAnQWdyZWdhIGxvcyBmaWx0cm9zI" +
                        "GEgbGEgcGxhbnRpbGxhDQogIFBsYW50aWxsYS5EYXRhRmlsdGVycy5BZGQoRmlsdHJvMSkNCiAgUGxhb" +
                        "nRpbGxhLkRhdGFGaWx0ZXJzLkFkZChGaWx0cm8yKQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkK" +
                        "EZpbHRybzMpDQoNCiAgJ09jdWx0YSBvIG11ZXN0cmEgbGFzIGV0aXF1ZXRhcyBkZSBsYSBncmFmaWNhD" +
                        "QogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiRXRpcXVldGEiKSA9IEZhbHNlIFRIRU4NCiAgICAgR" +
                        "3JhZmljYTEuU2VyaWVzVGVtcGxhdGUuTGFiZWwuVmlzaWJsZSA9IEZhbHNlDQogIEVMU0UNCiAgICAgR" +
                        "3JhZmljYTEuU2VyaWVzVGVtcGxhdGUuTGFiZWwuVmlzaWJsZSA9IFRydWUNCiAgRU5EIElGDQoNCkVuZ" +
                        "CBTdWINCg0KDQpQcml2YXRlIFN1YiBjaGFydDJfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9ia" +
                        "mVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KI" +
                        "CBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIk1vbmVkYSIpIElTIE5PVEhJTkcgVEhFTg0KICAgICBlL" +
                        "kNhbmNlbCA9IFRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQogICdHZW5lcmEgdW4gb2JqZ" +
                        "XRvIHF1ZSByZXByZXNlbnRhIGEgbGEgZ3LDoWZpY2ENCiAgRGltIEdyYWZpY2ExIEFzIFhSQ2hhcnQgP" +
                        "SBDVHlwZShzZW5kZXIsWFJDaGFydCkNCg0KICdTaSBlbCB2YWxvciBkZWwgY2FtcG8gVmVyR3JhZmljY" +
                        "URldGFsbGUgZXMgMCBubyBzZSBtdWVzdHJhIA0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlZlc" +
                        "kdyYWZpY2FEZXRhbGxlIikgPSAwIFRIRU4NCiAgICBHcmFmaWNhMS52aXNpYmxlID0gRmFsc2UNCiAgI" +
                        "CBlLkNhbmNlbCA9IFRydWUgICAgDQogICAgUkVUVVJODQogIEVORCBJRg0KDQogICdHdWFyZGEgZWwgd" +
                        "mFsb3IgZGUgbGEgY29sdW1uYSBNb25lZGENCiAgRGltIE1vbmVkYSBBcyBTdHJpbmcgPSBHZXRDdXJyZ" +
                        "W50Q29sdW1uVmFsdWUoIk1vbmVkYSIpLlRvU3RyaW5nDQoNCiAgJ0dlbmVyYSB1biBvYmpldG8gcXVlI" +
                        "HJlcHJlc2VudGEgYSBsYSBwbGFudGlsbGEgc2Ugc2VyaWVzIGF1dG9jcmVhZGFzDQogIERpbSBQbGFud" +
                        "GlsbGEgQXMgU2VyaWVzQmFzZSA9IEdyYWZpY2ExLlNlcmllc1RlbXBsYXRlDQoNCiAgJ0dlbmVyYSB1b" +
                        "iBvYmpldG8gdGlwbyBUw610dWxvDQogIERpbSBUaXR1bG8xIEFzIE5ldyBDaGFydFRpdGxlKCkNCiAgV" +
                        "Gl0dWxvMS5UZXh0ID0gIlJlc3VtZW4gIiArIE1vbmVkYQ0KICBUaXR1bG8xLkZvbnQgPSBOZXcgRm9ud" +
                        "ChUaXR1bG8xLkZvbnQuU2l6ZSwxMCkNCg0KICAnTGltcGlhIGxvcyB0w610dWxvcyBkZSBsYSBncsOhZ" +
                        "mljYQ0KICBHcmFmaWNhMS5UaXRsZXMuQ2xlYXIoKQ0KDQogICdBZ3JlZ2EgZWwgVMOtdHVsbyBhIGxhI" +
                        "Gdyw6FmaWNhDQogIEdyYWZpY2ExLlRpdGxlcy5BZGRSYW5nZShOZXcgQ2hhcnRUaXRsZSgpIHtUaXR1b" +
                        "G8xfSkNCg0KICAnQ3JlYSBkb3Mgb2JqZXRvcyB0aXBvIGZpbHRybyB5IGxvcyBpbmljaWFsaXphIGNvb" +
                        "iBsb3MgZmlsdHJvcyBuZWNlc2FyaW9zDQogIERpbSBGaWx0cm8xIEFzIE5ldyBEYXRhRmlsdGVyKCJNb" +
                        "25lZGEiLCJTeXN0ZW0uU3RyaW5nIixEYXRhRmlsdGVyQ29uZGl0aW9uLkVxdWFsLE1vbmVkYSkNCiAgR" +
                        "GltIEZpbHRybzIgQXMgTmV3IERhdGFGaWx0ZXIoIkdyYWZpY2ExIiwiU3lzdGVtLkJvb2xlYW4iLERhd" +
                        "GFGaWx0ZXJDb25kaXRpb24uRXF1YWwsVHJ1ZSkNCiAgRGltIEZpbHRybzMgQXMgTmV3IERhdGFGaWx0Z" +
                        "XIoIkdyYWZpY2EyIiwiU3lzdGVtLkJvb2xlYW4iLERhdGFGaWx0ZXJDb25kaXRpb24uRXF1YWwsRmFsc" +
                        "2UpDQoNCiAgJ0xpbXBpYSBsb3MgZmlsdHJvcyBkZSBsYSBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhd" +
                        "GFGaWx0ZXJzLkNsZWFyKCkNCg0KICAnUG9uZSBlbCBDb25qdWN0aW9uTW9kZSBhIEFuZA0KICBQbGFud" +
                        "GlsbGEuRGF0YUZpbHRlcnNDb25qdW5jdGlvbk1vZGUgPSBDb25qdW5jdGlvblR5cGVzLkFuZA0KDQogI" +
                        "CdBZ3JlZ2EgbG9zIGZpbHRyb3MgYSBsYSBwbGFudGlsbGENCiAgUGxhbnRpbGxhLkRhdGFGaWx0ZXJzL" +
                        "kFkZChGaWx0cm8xKQ0KICBQbGFudGlsbGEuRGF0YUZpbHRlcnMuQWRkKEZpbHRybzIpDQogIFBsYW50a" +
                        "WxsYS5EYXRhRmlsdGVycy5BZGQoRmlsdHJvMykNCg0KICAnT2N1bHRhIG8gbXVlc3RyYSBsYXMgZXRpc" +
                        "XVldGFzIGRlIGxhIGdyYWZpY2ENCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJFdGlxdWV0YSIpI" +
                        "D0gRmFsc2UgVEhFTg0KICAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gR" +
                        "mFsc2UNCiAgRUxTRQ0KICAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gV" +
                        "HJ1ZQ0KICBFTkQgSUYNCg0KRW5kIFN1Yg0KDQpQcml2YXRlIFN1YiBHcm91cEhlYWRlcjJfQmVmb3JlU" +
                        "HJpbnQoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5Qcmlud" +
                        "GluZy5QcmludEV2ZW50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlRvdGFsIikgP" +
                        "SBGYWxzZSBUSEVOICAgICANCiAgICAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTFNFDQogICAgIGUuQ2FuY" +
                        "2VsID0gVHJ1ZSAgICANCiAgRU5EIElGIA0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViIFJlcG9ydEZvb" +
                        "3Rlcl9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIFN5c3RlbS5Ec" +
                        "mF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1Z" +
                        "SgiVG90YWwiKSA9IFRydWUgVEhFTiAgICAgDQogICAgIGUuQ2FuY2VsID0gRmFsc2UNCiAgRUxTRQ0KI" +
                        "CAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogIEVORCBJRiANCg0KRW5kIFN1Yg0KQAABAAAA/////wEAA" +
                        "AAAAAAADAIAAABRU3lzdGVtLkRyYXdpbmcsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsL" +
                        "CBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhBQEAAAAVU3lzdGVtLkRyYXdpbmcuQml0bWFwA" +
                        "QAAAAREYXRhBwICAAAACQMAAAAPAwAAAFrBAAAC/9j/4AAQSkZJRgABAQEAlgCWAAD/7gAOQWRvYmUAZ" +
                        "AAAAAAB/+ERlkV4aWYAAE1NACoAAAAIAAcBEgADAAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAA" +
                        "GoBKAADAAAAAQACAAABMQACAAAAHAAAAHIBMgACAAAAFAAAAI6HaQAEAAAAAQAAAKIAAADCAJYAAAABA" +
                        "AAAlgAAAAEAAEFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cwAyMDExOjAxOjE4IDA5OjUxOjA2AAACo" +
                        "AIABAAAAAEAAAFioAMABAAAAAEAAACBAAAAAAAAAAYBAwADAAAAAQAGAAABGgAFAAAAAQAAARABGwAFA" +
                        "AAAAQAAARgBKAADAAAAAQACAAACAQAEAAAAAQAAASACAgAEAAAAAQAAEG4AAAAAAAAASAAAAAEAAABIA" +
                        "AAAAf/Y/+0ADEFkb2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMD" +
                        "xUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OF" +
                        "BQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA6AKADA" +
                        "SIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAA" +
                        "AAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkF" +
                        "VLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1x" +
                        "dXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITB" +
                        "TKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUp" +
                        "IW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwD1VJJJJSlgYWR9Z" +
                        "3fWTIqyqg3pLd/pu2tDdoj0HVWA+q+2z/DMf/4H+jV36w9WPSOk3ZrGtfa3a2ljpgveQxu7b+a2fUch/" +
                        "VjquX1bpDMzLrbXY572gskNcGu2eo1ri9zP3Ppp/tS9v3f0OLg/wlnux9z2/wBKuL/BdZJJJMXqSSSSU" +
                        "pJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//9D1VZ/WutYnR8T17/fY+W0UNPusd+6391jf8JZ/g03W+" +
                        "t4nRsT17/fY+W0UNPusd4D91jf8JZ/g1xvTOmdR+tfUX5+e8txWnbZY2QIB/oeH+6xv+Ft/9H/zaUr6x" +
                        "9Tys36r9OuynB12Xk23ODRDWis3VV1M/kMY5n0kXqw6l0von1f6h08FlWJTuttGoD7xU+Miv/Q2u9Rv9" +
                        "f8A0dnpK1/jBwaqOldPGOwVUY9ppZW0QAHMcW/+el0PQHU5f1dwQQLKn4tdb2OALTDBVaxzT9L6LmLQj" +
                        "kGPlsE+HiAnPjidjxcUf+g0ZYzk5nNG+EmEOGQ3Fer/AKbD6vfWHF63i72fo8muBkY5OrT+839+p/5j1" +
                        "rLzvrvQs76sZrerdIc4YgdodXGouP8AMX/6XFs+ix7v+Ls/S+lbZ131e+sON1vF3sHp5NUDIoJktJ/Ob" +
                        "+/U/wDMeoeY5eIj72E8WGX+Njl+7JlwZ5GRxZRw5Y/4uSP78UvXeuYnQ8H7blte+svFYbXtmSC7/COrZ" +
                        "9FjvzleqtZdUy6syyxoe0+ThuasH68dRy+m9IryMNzWX+u1rbHMa8tllpLqxaHsa/27Po/QWT1PrP1lf" +
                        "1fC6d03KFb8rFqsDXMr2l5bZZa4vfU/b7a03Hys8kRISjEHi+Y/5v5rXZOZhCRiRKUhw6RH7/yvbrK67" +
                        "9YMXoddFmVXZYy95ZNYadsDcXOD3M/6K5vI6x9dOhOFvV2Ny8Oz2uewMG0n/R20sZ6dv7nr0+k9Zf1of" +
                        "1e7Fx8rKzG53S73F+DZtYyyC3d+mZTXXtsY39FZ/L/0amw8leSPHKEscusJfP8A1Y/1mLNzlY5GMZCce" +
                        "ko/L/Wl/VfTUlytXU/rD0LDys36x215LPYzEpr2h7rTu9u+uuprK9v09/qfQ/7co49v+MLqmP8AtDHtr" +
                        "x6njfTRDGbm9vSbdXc/a78z7Taz/MUQ5SRs+5jEAeH3DL0Sl2iyHmQKHBMzI4uAD1xj3k9wuV+qH1hz+" +
                        "oY3UsvqVgezGIe1rGBoYza+x7W7fe/6P56P9V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa+WGdlrNzd35j/5yp" +
                        "Yv1FsNfSOtWBrXljNwa8S0xXYdr2/nMT44DHFnjMDjHtcMt/nlvGX9ZZLOJZMBiTwEZOIf3I/pR/qvWd" +
                        "C63idcwftuI17GB5rc2zbuDmwf8G6xn0XN/PWiuI6f9beoY31Uf1HJIyst2UcaiWtYwfo22N9RlAq9jG" +
                        "ts/l/mJY7P8YWbit6hTmVBrxurpBqkg8bQKbKf+3L037nMXxzhACXBxSOkpf1V33uBrhjOZI46iNYx8X" +
                        "r8/NpwMK/Nvn0sdjrHhokw0bvbMIfSep0dW6fT1DHDm1XTDXRILXOqe07C9n02fvLCr6v1236t9Tt6ph" +
                        "jHysNjhXZYz2WED+c9Czex3pu/P/o9n+DVSz63Z+F9VsHKfGR1HOdc0WvaA0Cux7XWOrq9NrnbPTYxn/" +
                        "XE0cpkJocJ9ft6G9eH3OL+7wrjzWMCzY9PuajpxcH+NxPaJLim4/wDjGdQ3MZl1WFwBFDTSSQf+s/Zv/" +
                        "ZhdD9Xc/qWf071up4pxMlr3MLS1zN4ERaKrPfX9LZ/YTcnLmEeIThMA0eCWoTjz8Z4TCcLFjjGhf//R7" +
                        "P61/Vk9VaM3EMZ9LNgY4+2ysEv9H3e2qzc79FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY9rhsLXA7PsmS327L" +
                        "Gu9ldn/AFu39L/O9qub+tX1VZ1RjszDa1ue1sPYYDb2gR6dk+1tzW/zVv8A1q39H/MpTe+tHTHdT6Jk4" +
                        "9bd17QLaByd9Z3hrf8AjG7qv+uLE/xedXZbi2dJsd+kpJuxwe9bzNjR/wAVc7/wZR+qn1oex7ekdVc4O" +
                        "DvSx7rJDg4HZ9kyd3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf1X6ul2RU+x7Lm4jpfTfrXkNb6Z37LdzvU/0f" +
                        "/Eq5y0oZMcuXmeHiPHjkf0ZtTmYzx5I54Di4RwZIj9KH/oLc+t31rNzn9F6TNjrD6ORawbi4u9hxcdo+" +
                        "m9/0LH/APW6/f8Azep9UPquej1Oy8szn5DQ1zAZbUyd3ogj6dm7+ds/7a/0lsPqn9UmdJY3NzWtf1BzY" +
                        "a0QW0tI/m6/3rXf4W3/AK1V+j/numQz5oRh7GD5P059csv+9ThwylP383z/AKEOmKP/AHzyn+Mj/kGr/" +
                        "wAMt/8APdyzx/4tOjf+FKv/AD1kLpfrLhdOzsGrG6iLfRsyKmMfToW2PPo1Ocf9G51npfR/wiouZ9Xj1" +
                        "M9UYLTk9IfX08VMMtLn7aKNrHe6za7KdTv3/mWf6NPw5QMIjUiayx0Gl5eGMFmXETmMrG+OXj+r9UnS+" +
                        "sdbLOgdRbY0OAxrXAHxa02Md/Ze3cuAz22u+pXTH8sZk3s+BcbXMH4PXpNzcTPoycMvbYx7XU5DWOG5u" +
                        "8bXNdt/m37XKhi9L6JgdKf0iyxl2I0Ofa3Iewna5xJfZ9Da1tv0H/vpnL5xiiAQTIZBPh/q8MoFfzGH3" +
                        "JEggAwML/rcXE4n12vx+q9AqzenXNyace5r7thna17X17rWfTr2vez2Pas/pnScTqGIy9v1jtpdtAsos" +
                        "ftdWQI9Pa69vtb+Y76C6fpv1f6D0jJu9A+/qDdgotsDwWDc411Vv91jPd7t/qrLZ9UPqv1Kyy2oXYm26" +
                        "3HFLXtDS+lzmWGllnrez2bv6n+DU2PPjjAwjKcYRPFHJwRlpP8ARlGX/SYsmGcp8ZEZSkOGUOOUfl/Sj" +
                        "KKbof1Trxep19XZ1Q55Zva4wHbiW+l7rvUs+gsf6lvY3pHXKS4C30i70zztDLGF3+f7V1n1e6R0vpWLb" +
                        "X02w3V2WF1jy8P9wAr2/ow1jdm1Yoq6CepV9Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67H13ei79Jucxn+j/A" +
                        "Ev6RNjmM/djIynpDhlwxh/NH3OGUfT/AFkywiAxSiBD5+KNymP1w4OLi9TmdDv6NT9TLf2xW63GszSxj" +
                        "awS/wBQsrcx1TgW7HMa17t2/wD9Jqbfq3jU1Oz/AKvdebTWQCfUs9OPzv091JZt/wCLuxV0ON0zoXTMb" +
                        "/m/Ywvxslj8ix+Q5paYfTTD3+zbbvtp9H02f4P/AEqo2/UH6tOyvT9e6u18uZji1hO0fuerXZfs/tp45" +
                        "iHFM8U4CcjP5Rkxzh/c/RWnl5cMBwwmYxEfm9vJCX99z8Tr3UOp/V/reJnObe/EoJbksAAcHb2w7YG1u" +
                        "/m/0T2s/SVp8e7oDfqb0ynrTXll1twpfUCX1uFt2+8Ob+bW13v/AJzf/obF0tHRug09Pv6RjhjKr6ybw" +
                        "182Frhs9d7yXWdva/6CVHROiO6WOi7W5WNjH3Me7c9rnE2+o57Nr6rXeo53s9NRnmMWvDGcI+4MlQ9BE" +
                        "eDg4h+7614wZNLlGcvbOP1eocXHx1/ivLO+r32Co53Qev1V45M/pLRW3/rllRdRa7/jMZbv1L67m9Ywr" +
                        "vtoDrcZ4b6zRtDw4bvc0ez1Gfn7P5CpD6ifVdzftTcq00au3C2sshs7/wBL6e7azb7v0q6Xp2DgYGK2j" +
                        "p9basf6Tdhndu/wheS51m799zkuYzY5YzGzknek5QGOUK6GX6SeXw5I5AdMcK1hGZnGd9h+i//S9VSSS" +
                        "SU859afqs3qbHZuE0N6g1vuZoG3tA/m3z7W3N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/bMloFlTXH062j6Ne" +
                        "1p9O25v59//AFun9H/O9AkkpSSSSSmn1jEszOm30VfzxbvokwPVrIux/d/x9dax6OgZwzMG6ws2ms3Z/" +
                        "BjKab76TW389n2nqWRb/wCg1K6RJWMXu+2eGuG5Xffh/l/hsGX2uMcV8VDbtxPPfVvo+Tg2VnKqsZbj4" +
                        "/2Y2bqDS/3Nfuq+z11ZVm5zPVa/N/Ss9a78+yyxNX9XpycO23FpdszM2/JcQ0ksudkOxi7T9J9PG9v+D" +
                        "/60uiSUkve457XR4uHi/dybf8//AA1kfa4I3fDYrir96Dx7+hda+wY2GKvdTTS2t7XVQx9V773Ntvsac" +
                        "rZXS3H+xNxfz/V9ZGf0DqxdnbdjhnjNqrc92uOLn2XU20bR/NZstZm/4f1PQ/wdXps6pJSH39f5v5pXX" +
                        "7ywezp8/wAsd/3XH6BgWYzr7rabcey1tTCyw4+39EHAek3p7Kq9rN/pepa31X1sq/0aDh9KzqmfV8WMA" +
                        "PTqnMyvcDtJo9D2/v8A6RbySgPucU/l21q6r2p/L/1NlHBwQviqxV1xX7sPm/w3K6j0r7b1FlttNd+Oz" +
                        "EvqAsAcBZY6nb7HfvVss96yW9H605+A26oE4pwXG1rqoikMbl+va5js27K3euyv07Psv2d/+k9Su3q0k" +
                        "7F7vCK4ar08d9/0UZPb4jfFd68NPGdHw3W4OLkV4bK6sazNvtzpZusa4ZWP6DWt/TOc99jHXer+h2Y1f" +
                        "857PSWH0XMzelY/2XFrwQOmCg2hzR9oNpx79n6Nr3+h6dFvqPyW7/Uy3/oLa/V9Xs0lMfd4jQjxcWms/" +
                        "wB7J+96f32KPt8Isy4eHXSP7sP3fV/3bzmL0N77Me27Hs2/bftGRVlGhwhuLbjV3V1YTW4388+ln+l/R" +
                        "eqtDpFGVhMbhHGbXjB2TY2xr27WB2Q9+LjtpH5rsa3f/wAF6fpLTSVfN7lHj4eHSq4uH9Ph4WfFwacPF" +
                        "eu/Df6PFb//2f/tGNBQaG90b3Nob3AgMy4wADhCSU0EJQAAAAAAEAAAAAAAAAAAAAAAAAAAAAA4QklNB" +
                        "DoAAAAAAJMAAAAQAAAAAQAAAAAAC3ByaW50T3V0cHV0AAAABQAAAABDbHJTZW51bQAAAABDbHJTAAAAA" +
                        "FJHQkMAAAAASW50ZWVudW0AAAAASW50ZQAAAABDbHJtAAAAAE1wQmxib29sAQAAAA9wcmludFNpeHRlZ" +
                        "W5CaXRib29sAAAAAAtwcmludGVyTmFtZVRFWFQAAAABAAAAOEJJTQQ7AAAAAAGyAAAAEAAAAAEAAAAAA" +
                        "BJwcmludE91dHB1dE9wdGlvbnMAAAASAAAAAENwdG5ib29sAAAAAABDbGJyYm9vbAAAAAAAUmdzTWJvb" +
                        "2wAAAAAAENybkNib29sAAAAAABDbnRDYm9vbAAAAAAATGJsc2Jvb2wAAAAAAE5ndHZib29sAAAAAABFb" +
                        "WxEYm9vbAAAAAAASW50cmJvb2wAAAAAAEJja2dPYmpjAAAAAQAAAAAAAFJHQkMAAAADAAAAAFJkICBkb" +
                        "3ViQG/gAAAAAAAAAAAAR3JuIGRvdWJAb+AAAAAAAAAAAABCbCAgZG91YkBv4AAAAAAAAAAAAEJyZFRVb" +
                        "nRGI1JsdAAAAAAAAAAAAAAAAEJsZCBVbnRGI1JsdAAAAAAAAAAAAAAAAFJzbHRVbnRGI1B4bEBiwAAAA" +
                        "AAAAAAACnZlY3RvckRhdGFib29sAQAAAABQZ1BzZW51bQAAAABQZ1BzAAAAAFBnUEMAAAAATGVmdFVud" +
                        "EYjUmx0AAAAAAAAAAAAAAAAVG9wIFVudEYjUmx0AAAAAAAAAAAAAAAAU2NsIFVudEYjUHJjQFkAAAAAA" +
                        "AA4QklNA+0AAAAAABAAlgAAAAEAAgCWAAAAAQACOEJJTQQmAAAAAAAOAAAAAAAAAAAAAD+AAAA4QklNB" +
                        "A0AAAAAAAQAAAB4OEJJTQQZAAAAAAAEAAAAHjhCSU0D8wAAAAAACQAAAAAAAAAAAQA4QklNJxAAAAAAA" +
                        "AoAAQAAAAAAAAACOEJJTQP1AAAAAABIAC9mZgABAGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABA" +
                        "DIAAAABAFoAAAAGAAAAAAABADUAAAABAC0AAAAGAAAAAAABOEJJTQP4AAAAAABwAAD//////////////" +
                        "///////////////A+gAAAAA/////////////////////////////wPoAAAAAP///////////////////" +
                        "/////////8D6AAAAAD/////////////////////////////A+gAADhCSU0EAAAAAAAAAgABOEJJTQQCA" +
                        "AAAAAAEAAAAADhCSU0EMAAAAAAAAgEBOEJJTQQtAAAAAAAGAAEAAAADOEJJTQQIAAAAAAAQAAAAAQAAA" +
                        "kAAAAJAAAAAADhCSU0EHgAAAAAABAAAAAA4QklNBBoAAAAAA0kAAAAGAAAAAAAAAAAAAACBAAABYgAAA" +
                        "AoAVQBuAHQAaQB0AGwAZQBkAC0AMQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABYgAAA" +
                        "IEAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAAB" +
                        "mJvdW5kc09iamMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAA" +
                        "AAAAABCdG9tbG9uZwAAAIEAAAAAUmdodGxvbmcAAAFiAAAABnNsaWNlc1ZsTHMAAAABT2JqYwAAAAEAA" +
                        "AAAAAVzbGljZQAAABIAAAAHc2xpY2VJRGxvbmcAAAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlna" +
                        "W5lbnVtAAAADEVTbGljZU9yaWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZ" +
                        "VR5cGUAAAAASW1nIAAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAA" +
                        "AAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJnaHRsb25nAAABYgAAAAN1cmxURVhUA" +
                        "AAAAQAAAAAAAG51bGxURVhUAAAAAQAAAAAAAE1zZ2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABA" +
                        "AAAAAAOY2VsbFRleHRJc0hUTUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWduZ" +
                        "W51bQAAAA9FU2xpY2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAAD0VTbGljZ" +
                        "VZlcnRBbGlnbgAAAAdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51bQAAABFFU2xpY2VCR0NvbG9yVHlwZ" +
                        "QAAAABOb25lAAAACXRvcE91dHNldGxvbmcAAAAAAAAACmxlZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b" +
                        "21PdXRzZXRsb25nAAAAAAAAAAtyaWdodE91dHNldGxvbmcAAAAAADhCSU0EKAAAAAAADAAAAAI/8AAAA" +
                        "AAAADhCSU0EFAAAAAAABAAAAAQ4QklNBAwAAAAAEIoAAAABAAAAoAAAADoAAAHgAABswAAAEG4AGAAB/" +
                        "9j/7QAMQWRvYmVfQ00AAf/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTE" +
                        "xUTExgRDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4OD" +
                        "g4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACE" +
                        "QEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAA" +
                        "AEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiM" +
                        "zRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1V" +
                        "mZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRF" +
                        "KGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVx" +
                        "NTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMi" +
                        "rKqDekt3+m7a0N2iPQdVYD6r7bP8Mx//gf6NXfrD1Y9I6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5f" +
                        "VukMzMuttdjnvaCyQ1wa7Z6jWuL3M/c+mn+1L2/d/Q4uD/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkkl" +
                        "KSSSSUpJJJJSkkkklKSSSSUpJJJJT//0PVVn9a61idHxPXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGx" +
                        "PXv99j5bRQ0+6x3gP3WN/wln+DXG9M6Z1H619Rfn57y3FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzf" +
                        "qv067KcHXZeTbc4NENaKzdVXUz+QxjmfSRerDqXS+ifV/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2" +
                        "ekrX+MHBqo6V08Y7BVRj2mllbRAAcxxb/56XQ9AdTl/V3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+Ww" +
                        "T4eICc+OJ2PFxR/6DRljOTmc0b4SYQ4ZDcV6v8ApsPq99YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u" +
                        "9Czvqxmt6t0hzhiB2h1cai4/wAxf/pcWz6LHu/4uz9L6VtnXfV76w43W8Xewenk1QMigmS0n85v79T/A" +
                        "Mx6h5jl4iPvYTxYZf42OX7smXBnkZHFlHDlj/i5I/vxS9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/O" +
                        "V6q1l1TLqzLLGh7T5OG5qwfrx1HL6b0ivIw3NZf67Wtscxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3" +
                        "TcoVvysWqwNcyvaXltllri99T9vtrTcfKzyREhKMQeL5j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh" +
                        "10WZVdljL3lk1hp2wNxc4Pcz/orm8jrH106E4W9XY3Lw7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXH" +
                        "ysrMbndLvcX4Nm1jLILd36ZlNde2xjf0Vn8v/RqbDyV5I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9" +
                        "aX9V9NSXK1dT+sPQsPKzfrHbXks9jMSmvaHutO727666msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9" +
                        "NEMZub29Jt1dz9rvzPtNrP8xRDlJGz7mMQB4fcMvRKXaLIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy" +
                        "+pWB7MYh7WsYGhjNr7Htbt97/o/no/1X+suT1G63pnU6vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw" +
                        "19I61YGteWM3BrxLTFdh2vb+cxPjgMcWeMwOMe1wy3+eW8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1" +
                        "zB+24jXsYHmtzbNu4ObB/wbrGfRc389aK4jp/1t6hjfVR/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+" +
                        "Yljs/xhZuK3qFOZUGvG6ukGqSDxtApsp/7cvTfucxfHOEAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82n" +
                        "Awr82+fSx2OseGiTDRu9swh9J6nR1bp9PUMcObVdMNdEgtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2" +
                        "OFdljPZYQP5z0LN7Hem78/+j2f4NVLPrdn4X1Wwcp8ZHUc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRym" +
                        "Qmhwn1+3ob14fc4v7vCuPNYwLNj0+5qOnFwf43E9okuKbj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1" +
                        "dz+pZ/TvW6ninEyWvcwtLXM3gRFoqs99f0tn9hNycuYR4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9W" +
                        "T1VozcQxn0s2Bjj7bKwS/0fd7arNzv0Vn9i7/SU5n1T+s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2" +
                        "f8AW7f0v872q5v61fVVnVGOzMNrW57Ww9hgNvaBHp2T7W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3Xt" +
                        "AtoHJ31neGt/wCMbuq/64sT/F51dluLZ0mx36Skm7HB71vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHu" +
                        "skODgdn2TJ3e71d3sqe/wD4qz9J/O5/1h6DcM5/Vfq6XZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnL" +
                        "Shkxy5eZ4eI8eOR/Rm1OZjPHkjngOLhHBkiP0of+gtz63fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qs" +
                        "f8A9br9/wDN6n1Q+q56PU7LyzOfkNDXMBltTJ3eiCPp2bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS" +
                        "0j+br/etd/hbf8ArVX6P+e6ZDPmhGHsYPk/Tn1yy/71OHDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/" +
                        "wA93LPH/i06N/4Uq/8APWQul+suF07OwasbqIt9GzIqYx9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1Rgt" +
                        "OT0h9fTxUwy0uftoo2sd7rNrsp1O/f+ZZ/o0/DlAwiNSJrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6" +
                        "B1FtjQ4DGtcAfFrTYx39l7dy4DPba76ldMfyxmTez4Fxtcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc12" +
                        "3+bftcqGL0vomB0p/SLLGXYjQ59rch7CdrnEl9n0NrW2/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCAD" +
                        "Awv+txcTifXa/H6r0CrN6dc3Jpx7mvu2GdrXtfXutZ9Ova97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZA" +
                        "j09rr2+1v5jvoLp+m/V/oPSMm70D7+oN2Ci2wPBYNzjXVW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte" +
                        "0NL6XOZYaWWet7PZu/qf4NTY8+OMDCMpxhE8UcnBGWk/wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/" +
                        "VOvF6nX1dnVDnlm9rjAduJb6Xuu9Sz6Cx/qW9jekdcpLgLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDd" +
                        "XZYXWPLw/3ACvb+jDWN2bViiroJ6lX1Srp2ZZZ1Wl5pYzYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2" +
                        "OYz92MjKekOGXDGH80fc4ZR9P8AWTLCIDFKIEPn4o3KY/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/A" +
                        "FCytzHVOBbscxrXu3b/AP0mpt+reNTU7P8Aq915tNZAJ9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC" +
                        "/GyWPyLH5Dmlph9NMPf7Ntu+2n0fTZ/g/8ASqjb9Qfq07K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzx" +
                        "TgJyM/lGTHOH9z9FaeXlwwHDCZjER+b28kJf33PxOvdQ6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RP" +
                        "az9JWnx7ugN+pvTKetNeWXW3Cl9QJfW4W3b7w5v5tbXe/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWu" +
                        "Gz13vJdZ29r/oJUdE6I7pY6LtblY2Mfcx7tz2ucTb6jns2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH" +
                        "7vrXjBk0uUZy9s4/V6hxcfHX+K8s76vfYKjndB6/VXjkz+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOt" +
                        "xnhvrNG0PDhu9zR7PUZ+fs/kKkPqJ9V3N+1NyrTRq7cLayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx" +
                        "/pN2Gd27/CF5LnWbv33OS5jNjljMbOSd6TlAY5QroZfpJ5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1" +
                        "p+qzepsdm4TQ3qDW+5mgbe0D+bfPtbc3/A3f9at/R/zM/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07b" +
                        "m/n3/8AW6f0f870CSSlJJJJKafWMSzM6bfRV/PFu+iTA9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppv" +
                        "vpNbfz2faepZFv/AKDUrpElYxe77Z4a4bld9+H+X+GwZfa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZu" +
                        "oNL/c1+6r7PXVlWbnM9Vr839Kz1rvz7LLE1f1enJw7bcWl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6J" +
                        "JSS97jntdHi4eL93Jt/z/8ADWR9rgjd8NiuKv3oPHv6F1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLc" +
                        "f7E3F/P9X1kZ/QOrF2dt2OGeM2qtz3a44ufZdTbRtH81my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7O" +
                        "nz/ACx3/dcfoGBZjOvutptx7LW1MLLDj7f0QcB6Tensqr2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9Oqcz" +
                        "K9wO0mj0Pb+/wDpFvJKA+5xT+XbWrqvan8v/U2UcHBC+KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCw" +
                        "BwFljqdvsd+9Wyz3rJb0frTn4DbqgTinBcbWuqiKQxuX69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8I" +
                        "rhqvTx33/RRk9viN8V3rw08Z0fDdbg4uRXhsrqxrM2+3Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9J" +
                        "YfRczN6Vj/ZcWvBA6YKDaHNH2g2nHv2fo2vf6Hp0W+o/Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn7" +
                        "3p/fYo+3wizLh4ddI/uw/d9X/dvOYvQ3vsx7bsezb9t+0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0Ok" +
                        "UZWExuEcZteMHZNjbGvbtYHZD34uO2kfmuxrd//AAXp+ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/" +
                        "o8Vv//ZOEJJTQQhAAAAAABVAAAAAQEAAAAPAEEAZABvAGIAZQAgAFAAaABvAHQAbwBzAGgAbwBwAAAAE" +
                        "wBBAGQAbwBiAGUAIABQAGgAbwB0AG8AcwBoAG8AcAAgAEMAUwA1AAAAAQA4QklNBAYAAAAAAAcABwAAA" +
                        "AEBAP/hDdBodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZ" +
                        "D0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zO" +
                        "m1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4xMzQ3NzcsIDIwMTAvMDIvM" +
                        "TItMTc6MzI6MDAgICAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZ" +
                        "y8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9I" +
                        "iIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0c" +
                        "DovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb" +
                        "20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kY" +
                        "y9lbGVtZW50cy8xLjEvIiB4bWxuczpwaG90b3Nob3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9za" +
                        "G9wLzEuMC8iIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXA6Q" +
                        "3JlYXRlRGF0ZT0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wOk1ldGFkYXRhRGF0ZT0iMjAxM" +
                        "S0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wOk1vZGlmeURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtM" +
                        "DY6MDAiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MzQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N" +
                        "0MxOTgiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MzM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N" +
                        "0MxOTgiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwM" +
                        "UIyQTAyRTQ3QzE5OCIgZGM6Zm9ybWF0PSJpbWFnZS9qcGVnIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzI" +
                        "iBwaG90b3Nob3A6SUNDUHJvZmlsZT0ic1JHQiBJRUM2MTk2Ni0yLjEiPg0KCQkJPHhtcE1NOkhpc3Rvc" +
                        "nk+DQoJCQkJPHJkZjpTZXE+DQoJCQkJCTxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2d" +
                        "DppbnN0YW5jZUlEPSJ4bXAuaWlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBzdEV2d" +
                        "Dp3aGVuPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZ" +
                        "SBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiLz4NCgkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkI" +
                        "iBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjM0NEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4I" +
                        "iBzdEV2dDp3aGVuPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50P" +
                        "SJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4NCgkJCQk8L3JkZ" +
                        "jpTZXE+DQoJCQk8L3htcE1NOkhpc3Rvcnk+DQoJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJER" +
                        "j4NCjwveDp4bXBtZXRhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/eHBhY2tldCBlbmQ9J3cnP" +
                        "z7/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwT" +
                        "VNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0A" +
                        "AAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kA" +
                        "AACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzA" +
                        "AAEDAAAACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0A" +
                        "AAAAENvcHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc" +
                        "1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogA" +
                        "AAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogA" +
                        "AAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAF" +
                        "klFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtI" +
                        "HNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR" +
                        "0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0a" +
                        "W9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpb" +
                        "iBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UA" +
                        "APtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3A" +
                        "DsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLA" +
                        "NAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDA" +
                        "YsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEA" +
                        "o4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA" +
                        "+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3B" +
                        "YYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B" +
                        "4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPC" +
                        "eUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyOD" +
                        "KcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD" +
                        "88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE" +
                        "2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF" +
                        "2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG" +
                        "9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYI" +
                        "MQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3J" +
                        "icmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRL" +
                        "AUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqM" +
                        "mMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFO" +
                        "UI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQ" +
                        "KZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLS" +
                        "JFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7";
                    resourceString += "UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4W" +
                        "gdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY" +
                        "5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gb" +
                        "bluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gRe" +
                        "G54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg" +
                        "7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j" +
                        "56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvn" +
                        "ByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEq" +
                        "Tepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5t" +
                        "vC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOx" +
                        "UvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1" +
                        "EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4" +
                        "+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9" +
                        "DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////2wBDAAEBAQEBAQEBAQECA" +
                        "QEBAgIBAQEBAgICAgICAgIDAgMDAwMCAwMEBAQEBAMFBQUFBQUHBwcHBwgICAgICAgICAj/2wBDAQEBA" +
                        "QICAgQDAwQHBQQFBwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC" +
                        "Aj/wAARCACBAWIDAREAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAA" +
                        "gEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJ" +
                        "icoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZm" +
                        "qKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAH" +
                        "wEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExB" +
                        "hJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVV" +
                        "ldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPEx" +
                        "cbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+/igAoAKACgAoAKAGu" +
                        "6Ro8kjiOOMF5JHICqoGSST0AoA/Fbxl/wAF0P2VvC/xJu/Bul+EvE3jLwjpl0+lX/xJ8Pw6d9jlKOUM9" +
                        "nb3FzHLNBnkO2wkZKqRjMc6NFSZ+wfgnxp4X+I/hDw1498E6xF4g8JeL7K38Q+HdasifLuLS6jEsbgMA" +
                        "ynB5VgCpyCAQRVmbR1FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAYPirQYfFXhjxH4XuLl7O38SWF5oM93a482JLy3e3Z03c" +
                        "blD5Ge9AH8RPjP/AIJcftveFPiTe/Dmy+Bmq+L9l0bHSPGnhlYpdBvYGkKxXAvpHSGBHUbis7IyZw4U1" +
                        "jys6lUR/YJ+yF8FdU/Z2/Zp+D3wY13U49X13wNpKWWvX1mS0BvrmeS+uEhZlQtFHLOyRsVBKgEgHitUj" +
                        "nk7s+kKZIUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFA" +
                        "BQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAH+ev8A8FEP2sfGf7VP7UfxP8W3Xi+91" +
                        "T4d+HNbvtA+EGiG4lFjYaNp9wbS2mt4AxSOS4WITSuOSzHnAGP9oPBXw6wvD3D+Hoqko15wUqrtq5SV2" +
                        "m92o35Utkkf4peN3iPiuIuIcRWdVyoQm40lfSMIuyaWycrcze92f1P/APBDj4ufFP4vfsR/bPipr154o" +
                        "u/BHizVvh/4O1/xBLNcXk+h2mnabeQrJPOzPKIZruaFCT8qIqDha/z5+llw3l+W8V8uEgoKpSjOSjZJT" +
                        "cpp2S0V1FN922+p/od9EjiXMcz4T5sXNzdOrKEJSu24KMGrt6uzk0uySXQ/Ymv5lP6fCgAoAKACgAoAK" +
                        "ACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACg" +
                        "CC6uraytri9vbhLSztEe6u7u6dY4ooo1Ls7s5AVVAJJJwBQB8sftdfGzT/hj+xt8cvjh4a1iG5h07wVq" +
                        "Ov+CNdspVaCe71KwMGlyxyKcMsk1xEVI6g8V974W8PLNuI8FhGrxnVjzf4U7y/8lTPgPFXiJ5Tw3jsWn" +
                        "aVOlLl/xNWj/wCTNH+crX+4J/hif3b/AAP1Wz/4J8f8EkPCPjt9GhuNZ+HvgBfiddaNqG+NLrxJ4mP9q" +
                        "x21y64fH23UUgYg5CjC8AV/kXxZh5cZ+JFXD8zUatf2d10p0/dbXT4YuS89z/X/AISxEOCvDWliOROdK" +
                        "h7Sz61KnvJPr8c1F+Wx9PfsVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1j" +
                        "BOFCyKDwrq6L8D4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf6B4U+K2W8W5asThnaaspwb96Euz7p/" +
                        "Zls12aaX2HX5mfpwUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFAEF1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+Uj/gpz/" +
                        "wAFOtS/aA1XUP2a/wBm/V3h+ErXA0Pxf400+TyZfFtyZBF9mgcldunBuCSR555P7v7+UpG8IW1Z+kn/A" +
                        "AWu1WH4Z/8ABNXxB4G0uYwWWv6l4P8AhrbDB3Pb2N7FqYXO1sZXTBnkZHGTnB/pz6JOWLEcaUZtfwoVJ" +
                        "f8AkvJ/7d/W5/Lv0u80eH4KrQTt7WdOP/k3P/7b/Wx/Fp8OPCUvj74h+A/AsLOs3jXWdL8JRNBjeG1K+" +
                        "iswVyCM5k44r/VPPMyWDwVbEPanCUv/AAFN/of5Q5HlrxuNo4db1Jxj/wCBNL9T+0H/AILt61qPhT/gn" +
                        "vqXh7QNPuDo/ifxP4X8Ia0NNjleC1062km1WNpygYJF59hCgZiBvZBnJAP+XP0RcLDEcaRqVJLmhTqSV" +
                        "93J2i7d3aUnp0Tex/qh9L/F1MNwVKnTi+WdWnF22UVeSv2V4xWvVpb2P5Ef2Yf2nviz+yP8WdD+L/wg1" +
                        "w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP9JuPuAcu4ky6eDxkLweqa+KMukovo19zWj" +
                        "um0f5o+H/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARP" +
                        "h3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT" +
                        "4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAFAHKeOPHPg/4aeE9c8d+PvEdp4S8H+Gof7" +
                        "Q13xFrkqwW1tFuEYLM3dmYKqjlmIABJAoBI8j+A37V/7PP7TkGuTfAz4oWXj1/DbImu2FvDe2N7bLIzI" +
                        "kj2upwW03lsVIWQJtOODSTuNxaPoemIKACgAoAKAPgbxH/wVC/YQ8H/ABV1z4K+LP2gbTw18RvDWqTeD" +
                        "Nf0nXtG8S2lpaajbzGCSOXUZ9OWyVVcYMhn2d92K/YsD4A8X4nLoY6jgnOhOKnFqVNtxaumoqfPt05b+" +
                        "R+NY76QXB+FzGeBrY1Qrwk4SThUSUk7NObhyb9ea3mfesUsU8UU8EqzQTKssM0TBkdGGQykcEEdDX4/K" +
                        "LTs9z9jjJNXWqZJUlBQAUAFABQB8U/8FGPir4y+Cf7En7RPxK+H2qPofjPQNDW10DW7YlZrKbUr+30o3" +
                        "ELD7ssS3JeNuzAHtX6p4I8PYXNeK8FhcTHmpSneS6NRTlZ+TtZ+R+U+OPEWKynhPHYrDS5asYWi+qcpK" +
                        "N15q915n8hP/BK34hePvFn/AAUe/ZwuvFPjjWPEtzqurapLqlx4g1O9vJLlv+Ec1A5la5kcueBy2a/0o" +
                        "+kJk2Dw3A+OVKlCCjGNuWKVvfjtZaH+Z30d86xmJ46wLrVpzcpyvzSbv+7lvd6n93Gt63o3hrRtV8ReI" +
                        "tVttC0DQrabWNb1vWJo7a0s7S2jM0s00sxVEjRFLMzEAAZNf5Bn+w588fBH9sv9mP8AaO1/W/CvwW+L2" +
                        "neOPEnh6NrzU9Et4r6zufIR1jaaFNRgtzPErMoaSLcoJGTyKSaZTi0fTdMkKACgAoAKAPl34zftqfst/" +
                        "s9+LNI8DfGL4y6Z4L8W60kdzaaFcR3t3PFDLnZJc/2fBOLaNtp2vOUU9jSbRSi2fS+n6hYatYWWq6Vew" +
                        "6npepwx6hpupafIk0FxBMgkjkjkjJV0dSCrAkEHIpklugAoAKACgAoAKACgAoAgurq2sra4vb24S0s7R" +
                        "Huru7unWOKKKNS7O7OQFVQCSScAUAfyf/8ABUb/AIKjXPxwudb/AGe/2e9be0+DVo7af458c6ezRy+K5" +
                        "Y2w0EDDBXTlI5PWc8n93gPlKR0U6dj8mv2bvAHif4nfHj4TeC/CPhqfxbrGq69pbnRdPi80vawXkc9w8" +
                        "mcKsUcSM8jsQqqCSQBUouT0P6SP+Dh6eeH9if4bxxTPFHdfE/RILlI2KiRB4W8RShWA6jcitg9wD2r+x" +
                        "PoVwT4qr3W2Gn/6cpH8Y/Tam1wpQSe+Jh/6bqn8tH7E1tBeftmfsj2l1Ctxa3XxO8BW1zBKAyPG/iqxV" +
                        "lYHqCDg1/oJ4qzceF8yadmsNW/9NyP89PCeClxTliauniaP/pyJ/or+MPB/hb4geFtf8E+NtAtfFPhHx" +
                        "TazaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmv8TMszPEYLEQr0JuFSDTjJOzTWzTP9wMzyzD43DzoV4KdKa" +
                        "alFq6ae6aP4if8AgqH/AMEvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+" +
                        "4/7zBf/AFb8AfH7D8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suu" +
                        "z13+B/2Yf2nviz+yP8AFnQ/i/8ACDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePu" +
                        "Acu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7av" +
                        "wm/be+E1p8Rfh1djTdf00Raf8RPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8NiV" +
                        "eDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAfl9/wV3" +
                        "8DeNviX+yFP4D+Hnhy98XeLvE/inw7p+k+HPD8Lz3N0wnkmICJ/CoQuzHhQCxIAzUz2LpvU+AP+CTn7C" +
                        "X7XP7NP7TGqfEL4yfC6TwL4H1Twnqnhp9SGveHb7zbq5vrC6hhe30rULmbnyC3zJgFeSDipjFpl1Jpo/" +
                        "pArQxCgAoAKACgD/O0/4KJf8n1/taf9j74j/wDTjJX+13gp/wAkjlv/AF4p/wDpKP8AETxu/wCSvzL/A" +
                        "K/1P/Smf3XfsTXNxefsZfsj3l5O91d3Xwx8A3N1dXLs8kkj+FbFmZmYkliTkk9a/wAjvFWEY8UZkkrJY" +
                        "mt/6ckf6+eFFSUuFsslJ3bw1H/03E+na+CPvwoAKACgAoA/OL/grj/yjo/ae/7BWl/+pHp1fuH0bv8Ak" +
                        "t8B/il/6bmfhn0lf+SHzD/DH/05A/kh/wCCR3/KRf8AZh/7Cuqf+o5qNf6PfSR/5IjH/wCGP/pyB/mx9" +
                        "Gr/AJLjL/8AFL/03M/sU/4KV6J4h8S/sQfHnw54T0u71vxJr9npOiaLouhRSz3l5PdeIbCBYIo4AXdpN" +
                        "23aBznFf43y2P8AZyG5+Jn/AATV/wCCen7Z3wO/bA+DXxf+Jnwfm8G/DjR4tfPiPWZ9d8NyyRRah4X1G" +
                        "yt1ls7PUZbk7riaIFfKJU4LAAEiIxdzWc00f1NVqYBQAUAFABQB/I/+29+w1+1r+01+23+0t4y+Dvwfv" +
                        "/GPhe11bTdMXxJf32laTZzPb+HtPiMdvNrt3ZrN5eArCIttxg4xispRbZ0Rkkj+j/8AYq+H/jn4U/sp/" +
                        "Av4cfErTG0Xxz4M0G30HxFpEt1bXptpYHdVi86zlnicKm0DY5AHA6VpHYxk9T6hpkhQAUAFABQAUAFAE" +
                        "F1dW1lbXF7e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+T//AIKjf8FRrn44XOt/s9/s9629p8GrR" +
                        "20/xz4509mjl8VyxthoIGGCunKRyes55P7vAfKUjop07H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0" +
                        "fR9PAyxxueSR2wscUagvJI5CooLMQBUJGjdj+1H9gH9gHwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6" +
                        "f5gDR2kbAZOA0rAO4GERNoxsc053Pj3/g4L0ObVv2GvDF/Fu2eGPiHoGuXOxQRsk0bWdNG4kjA3XY59c" +
                        "Cv62+hni1T4tqRf26E1/wCTU5f+2n8h/TTwjqcI05L7GIg//JKkf/bj+S79lTxHF4P/AGof2bvFs7pFB" +
                        "4W8feD/ABHNJchmjVLHxDaXJLhCCVATnBzX+jXiHgXieH8dRW86FWP3wkj/ADd8OscsLxBgKz2hXpS+6" +
                        "cWf6Tlf4Yn+7ZzfjDwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8R" +
                        "gsRCvQm4VINOMk7NNbNM4czyzD43DzoV4KdKaalFq6ae6aP4if+Cof/AAS88U/sWeKbj4kfDe3uvFP7N" +
                        "Him68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/9W/AHx+w/FOHWGxLUMfBarZVEvtR8/wCaPTdab" +
                        "f5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307" +
                        "WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/4gZlw1mUMb" +
                        "gp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+" +
                        "ZBJtYwThQsig8K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb9" +
                        "6Euz7p/Zls12aaX2HX5mfpwUAfnt/wVB/ac8f8A7JX7IHjf4r/C1baLx9Le6X4P8OatqsKXMOnS6nc+W" +
                        "915EoZJXjjVvLVwU3kFgygq37R4A8BYPiPiWlhMXf2NpSkk7OXKvhutUm7Xa1tezT1X4p9IHj/G8N8M1" +
                        "sZhLe2vGMW1dR5n8Vno2leyel7XTWj/ABr/AOCN37eX7W/7SP7XGo/Dz43fGi+8feDYfB+s+IotC1Cy0" +
                        "i3jF7bXunxRS7rG0gfKrM4xuxz0r+nfpO+EHDeRcNxxOBwqpVXVjG6cno1K61k10R/Lv0XfGLiXPeJZY" +
                        "bH4qVWkqM5WaitU4pPSKfVngH/BSH/gpD+218Fv22vj58MPhh8fNQ8JeA/CWoafZ+HfDtnp+hzR2sc2h" +
                        "2V06q91ZSyHMkrN8zHrX2Xgd4HcKZrwpg8VisHGpWqRk5Scpq9pyXSSWyXQ+M8dPHTizKuLMZhMJjJU6" +
                        "NOUVGKjB2vCL6xb3b6nxB/w9x/4KL/9HPar/wCCvw5/8rq/V/8AiW7gj/oAj/4FU/8Akz8l/wCJleOP+" +
                        "hhL/wABp/8AyB6B8P8A/gtb/wAFD/A2rQ3+ofGG0+I2nI/nT+G/iB4f0Wa0mPAw0umW9jdKOOiTr+deP" +
                        "nP0V+CsXTcY4Z0pfzQnNNfKTlH74s9nJfpW8b4OopSxSrR/lnCDT+cVGX3SR+7H7Mv/AAVU8C/8FBPCt" +
                        "18BLzxxqP7Gf7UWtxhfAvifw7LYahpmo6jGhCCybVoHjkLt9+xnQOynEUzONy/yNx59HrF8GYhZhGlHM" +
                        "Mvj8cZJxlGPXm5XdW6Ti7J6yilo/wCv+AfpE4PjTDvLpVpZfmEl7kouMoyl05eZWd+tOSu1pGTeq/G79" +
                        "qP9tX/grN+yN8Y/EnwY+K37Rmp22taMReaPrVlpXh42Gs6XK7Lb39m76aC0MoQ9QGVgyMAysB/Tvh/4V" +
                        "+HPEmWU8bhMDFwlo05TvGS3jL3919zVmtGj+XfELxW8SOGs0qYHGY6SnHVNRhaUXtKPubP707p6pn5Ee" +
                        "PPHXiz4neM/E/xD8d6y/iHxl4zvbjxH4n125SGOS7vbqQyyyssCRoCzEnCqB7V/SWUZRhsBhaeGw8eSl" +
                        "TSjFa6JbLW7P5ozjN8TmGKqYnES56tSTlJ6at6t6WX3H2b4O/4Kh/t6fD/wh4V8B+D/ANorUtE8I+CdN" +
                        "sfCPhbRYNN0CRLPTtNtUs7aBWmsHdhHFGqgsxJxySa/L8z8AOD8biamIrYGMqlSTlJ809ZSd29JW1bvo" +
                        "fqWV/SC4xwWGp4ehjpRpU4qMVyw0jFWS1jfRK2p/W5/wSO/aq+LP7W/7JR+IXxsMd34z8J+I9T+Hc3iy" +
                        "G1jshrdrY2NjfJfPFAkcIfN40LmJQhaMnAORX+cP0kPDzLuG+I/q2BuqU6cZ8t78jbkuW7u7e7dX1s/Q" +
                        "/0n+jV4i5lxLw39Zx9nVp1JQ5rW50lF81lZX95xdla8e9z89v28/wDgvBp/w88Q658KP2O9I0/xprejv" +
                        "Jpev/GnxOr3Ojw3CqUdNKtInT7S0bH/AI+JWEW5SFjlQh6/aPCD6Ic8bRhi86lKnCWsaUdJNf35a8t/5" +
                        "V71nrKL0PxTxi+mDDA154PJYxqTjpKrLWKf9yOnNb+Z+7daRktT8JfFX/BT/wDb+8Y6nLq2q/tUeKrG5" +
                        "lLOYPCt1DodqN2OFt9GitYgBjj5f61/XOXeAfBuFp8kMvpNf3k5v75Nv8T+QMx+kBxniqnPPMaqf91qC" +
                        "+6CivwPfvgN/wAFr/26Pg5q1ifFXj2H45+EYnQX3hf4oWsEs7xfdfytSs0hu0kI+60jyKCASh5B+O4w+" +
                        "itwlmdN+yovDVOkqbdvnB3jb0Sfmj7Tg76V3F+V1F7assTS6xqJX+U1aSfq2vJn9Y37Dv7e/wAGf26vA" +
                        "Fz4m+H0r+HPGvhwRQ+P/hfrk0b6lpMso+WRWQKLi1kIIjnVQDghlRgVH+dPix4PZpwjjFSxPv0p/BUS9" +
                        "2Xl5SXWL+Ta1P8AR3wk8ZMr4vwTq4b3KsLc9Nv3ovv/AHovpJL1Sehwf/BXH/lHR+09/wBgrS//AFI9O" +
                        "r2Po3f8lvgP8Uv/AE3M8f6Sv/JD5h/hj/6cgfyQ/wDBI7/lIv8Asw/9hXVP/Uc1Gv8AR76SP/JEY/8Aw" +
                        "x/9OQP82Po1f8lxl/8Ail/6bmf2m/tyfHTxJ+zV+yb8b/jd4OsbfUPFfgXSVufDkGrKz2y3t7ewabDLK" +
                        "ikF1ia4EhTI3bcZGc1/lr4TcJUM94jwmBrNqnVl71t7JOTS7Xta/S9z/VTxc4vr5Dw3i8fRSdSlD3b7X" +
                        "bUU33s3e3W1j+bb/gmB/wAFGv20vj9+3l8Evhj8W/jpe+L/AAB4wfxRN4h8Lzabodrbzmz8IatqcAzY2" +
                        "ULoI54EcBWH3QOnFf3L4++CHC2TcIYvFYPCKnWp+z5Zc021erCL3k07pta9z+E/o/eOXFWc8Y4TCYzGO" +
                        "pRqe05o8sEnalOS2imrNJ6dj+j79sz9s/4RfsR/CmT4l/FG5kv77UpG0nwN4F0Zo/7T13UFUOYoBIQqR" +
                        "xqQ00zfKi46syK38PeF/hdmXFeY/VcIrJazm/hhHu+7eyS1b8k2v7o8UvFPLOE8u+tYtttu0IL4py7Ls" +
                        "lvJvRLu2k/5Kfj1/wAFwv24fi7qd6ngbxVZfAXwjI7Cy8P/AA7s7ea9EXIXz9S1KOadpADy0Pkqf7or/" +
                        "R3g/wCifwnltNe3pvFVesptpX8oRaVvJ8z8z/NrjH6WvFuZ1H9XqLC0ukYJN285yTd/Ncq8j44h/wCCg" +
                        "37c0GpHVU/a3+ITXRQQ+VN4r1iS2wrBv+PeScw545OzJHGcE1+my8GeEnT5P7NoW/69xv8Afa/4n5fHx" +
                        "q4uVTn/ALSxF/8Ar5K33Xt+B96fs7f8F3v2xPhVqenWfxen079oTwTG6RX9n4ktbbStbjtx1+zajpUMa" +
                        "l++64hmz046j8g42+iJwzmNOUsGpYWr0cW5Qv5xk3p/hlE/YuCPpg8UZdUjHGuOLpdVJKM7eU4pa/4oy" +
                        "P6yP2Tv2tPhD+2X8J7P4tfB/Up5dME7aJ4j8O63EsGp6NqccSTPaXUaM67gsisrozIykEMeQP8AOjxF8" +
                        "Ocy4XzF4PGRXNa8ZLWMo7KUX8mrNJp7o/0f8OPEjLOKctWMwUny3tKL0lGW7jJarZp3Taa2Z/Nn/wAFS" +
                        "f8AgqT+2F8Mv2wviR8GPgx8SD8K/AnwrOn6FaWmhafpdzcajcXOl22ozXV1NqNtcNu3XBREQqoVRwWJJ" +
                        "/ub6P30fuGcfwzQxuNoe3rV+ZtuUkopScUkotdrtu7bfayP4S+kL9IXifL+J6+BwNf2FGhypJRi3JuKk" +
                        "23JPvZJWSS73Z/RH+wT8S/F/wAVP2Mf2f8A4ofEzxE3iHxh4q8Ox654q8S3628DXE3nShpXECRRr8qjO" +
                        "FA4r+KfGDIsNl/FGMwuFhyUoVLRiruystNbs/tzwcz7FZjwrgsXip89WdO8pOyu7vXSyPxA/bh/4L4al" +
                        "oPirXPht+xjo+m6pYaJLJpmofG/xZC17BeTRkq7aRZ7kRolYfLcT7hJyVj27Xb+r/Cf6HtOth4YrO5Si" +
                        "5K6pRdml/flvfvGNmusr3S/kzxb+mRUo4ieFyOMZRi7OtJXTf8AcjtbtKV0+kbWb/Enxj/wUq/b28c3V" +
                        "1ea1+1f4zspbzb5yeDtWk8OxDawYbIvD4skj5HOxRkcHiv6ryzwL4PwkVGGXUWl/NHn/GfM38z+Ts08e" +
                        "OMsZJyqZlWTf8suRfJQ5Uvkdn8NP+CsH/BQH4X6hBeaZ+0hrPiu1Rle60j4li28R29wigDYzatHNMgO3" +
                        "kxSI3XnJNeXnv0deDcwg4ywMIPvTvBr/wABaT+aa8j1ch+kdxpl81KOOnUXapaon/4Em18mn5n9Fv8Aw" +
                        "T0/4LVeC/2o/FPh74KfHXwvb/Cz40+I5F0zwnrPh1ppPDev3ZUkQILp5JrK4cjEcUjyK54EgYqh/ibxp" +
                        "+ixiuH8PPHYCo62FgryUre0gu+llKK6tJNfy2TZ/cHgn9KzC8Q4iGBzCmqGLm7Rcb+zm+2t3CT6JuSf8" +
                        "12kfuxX8jH9fBQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/k/8A+Co3/BUa5+OFz" +
                        "rf7Pf7PetvafBq0dtP8c+OdPZo5fFcsbYaCBhgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz40ePPDfwz+" +
                        "GfhufxX408VzjT9H0fTwMscbnkkdsLHFGoLySOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+R4r+NXiuCN" +
                        "fiD8QVjOFGRJ/Z+n+YA0dpGwGTgNKwDuBhETaMbHNOdz9Caog/N3/grl8OZviX/AME9P2jdMs4PO1Hwx" +
                        "ptl8RrNgCTGnh3VbbVrpsD/AKdYJh7ZzX7l9G7O1gONMDKT92cnB/8Ab8XFf+TNH4V9JXI3j+CcdGKvK" +
                        "EVNf9uSUn/5KmfwIW1zPZ3Fvd2szW91aulzbTxEq6SIwZWUjoQRkV/sTOClFpq6Z/jTTm4yTTs0f6Xvw" +
                        "M+JVj8ZPgv8J/izp0iSWnxI8O6N41TyeiNqWnxXTpjAwUZypBGQRg1/hLxbkU8rzTE4OW9GpKH/AIDJq" +
                        "/z3P96eEc+hmmVYbGR2rU4z/wDAop2+Wx6pXzx9Ec34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcK" +
                        "T2t5azoUeORHBBBB/DqOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gq" +
                        "H/wS88U/sWeKbj4kfDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/wDVvwB8fsPxT" +
                        "h1hsS1DHwWq2VRL7UfP+aPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/x" +
                        "Z0P4v8Awg1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijL" +
                        "pKL6Nfc1o7ptH434f8AiBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf32fsb/ALV/gT9s74D+Gfjd4Etpd" +
                        "ITUJJtB8WeFr91kuNG1qzCG5tHkQBZABIkkcgA3RujEKSVH+O3id4d4zhfN6mBxDUrWcZLaUHtK3TZpr" +
                        "o01drV/7KeF3iNg+Ksnp4/DpxveMoveM1vG/XdNPqmnZPRfU1fnx+hn4z/8F4v+Uf3iH/safDP/AKUyV" +
                        "/T/ANEP/ksof9eqn5I/lv6YX/JFz/6+0/zZ+H//AAb/AH/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+k" +
                        "zP5K+hh/wAlfL/rxP8A9KgfLn/BXH/lIv8AtPf9hXS//Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGY" +
                        "f4o/wDpuB/Q/wD8E0/2A/2Nvi3+w5+z/wDEX4k/s9+H/GHjfxPp2o3Wv+JNXhna5upItdvrZGcpKoyEj" +
                        "VRx0FfxX47eMXE+W8WY3DYXG1KdKEo8sU1ZXhF9u7P7a8BvBrhfMuEcFicVgqdStOMuaTTu7Tku/ZI9c" +
                        "+Pv/BEb9h/4u+Hb+DwH4Km+BHjUxt/ZPizwBd3ktsswA2C406/nlt5IwR8wjEbnP3xxXzfB30reLMtrp" +
                        "4iqsTS6xmle3lNJST9eZeR9Lxl9E3hLM6DWHpPC1ekoN2v5wk3Fr05X5n8ff7Tv7N3xX/Yx+Omt/CT4h" +
                        "A6d4p8LSQa94Y8U6G8sdvqVhJIXs9SsZflbYxjOCMMkishwyED/AEu4C45y7ijKIYzDa053Uou14v7UJ" +
                        "L5+jTTWjR/mRx/wJmXCubzweJ0qQs4yV7Sj9mcX209U009Uz+tT9hDXfgL/AMFVf2XfAfir9qL4YaL8V" +
                        "vjH8Cprn4Z+LNR8RwE3DSvHBPHeqYnRtt7AsbSfw+csm0AcV/nJ4u4POPDziCtSyrEToYXEpVIqL06px" +
                        "/7cd0uvK43P9JPB/GZN4i8PUa2bYeFfFYZunJyWvRqWn86s305lKx/J7+2/4N8L/Dv9r/8AaS8C+CdFh" +
                        "8N+EfCXjHXdB8N6DpwKwWdnbXzxxRRhiSFVRgZNf6KeFGaYjG8NYHEV5udWdGDk3u20rtn+cXi1leHwP" +
                        "E2Pw9CChSp1pxjFbJJuyR/Xz+yP/wAE5f2HvHH7KX7MfjXxb+zX4b13xV4v+HvgvxR4m1y+huDPeahqH" +
                        "huzu7ieQrMAXkkkZmwOpr/NXxI8buLMJxFj6FHHVI06derGKTVlGNSSSWnRKx/pn4a+BvCWL4cy+vWwF" +
                        "OVSph6UpNp3cpU4tt67tu54J/wWe+O+jfsc/sieCP2YvgFpFl8Mj8a2v/CsGleCoItPi0zwpYLHLqiwx" +
                        "2oUI15JdxxOxGXV5jksSR9j9F3hCrxPxLVzTMJOt9XtK825OVR35Lt78qi2l0aj0PjfpT8YUuF+GaOVZ" +
                        "dGNH6zzRtBKKjTjZzsltzOSTfVOXXU/nV/4J4fsI+Lv28fjRJ4IsdTk8KfDjwdDF4g+KvjuGETPY2Urs" +
                        "kFvbo5CNdXboyxBjhVV5CGCFW/tjxq8XcNwhlft5R569R8tOF7XfVvryx3dt20tL3X8QeCXg/ieMc19h" +
                        "GXJQprmqTtey6JdOaT0V9km9bWf9j/wu/4JcfsFfCjw5B4e0v8AZr8N+L2WH7Je6/8AFGxh8TajdOV2v" +
                        "K0usLOI3Y8/uVjVT91VHFf5j8QfSA4wzGu6k8dUp63UabdOK8rRtdf4m2+rZ/qFw99Hvg7LaCpQwFOpp" +
                        "ZyqJVJPzvK9n/hSS6JH58/t7/8ABD/4MfEHwN4j+IP7JPhpPhf8XdEhl1iD4e6bPKfD/iERKZHto4bhn" +
                        "FncuBiFoisRbCug3eYv7N4PfSvzTBYuGHzip7bDSdudr34eba+KK+1e8rapu1n+LeMf0S8qxuEqYnJ6f" +
                        "scTFX5E/cnbok/hk/s2tG+jSvzL+Yj9kr9o/wAa/sfftEeA/jN4ba5gn8JXy2HjXw2jGE6poksqxajp0" +
                        "ySYGZIwdm8fJKqPjcgx/e/iPwPheJskrYKrZqcbwlvyzXwyXo97bxbWzP4A8NuOsXwxndHHUrp05WnHb" +
                        "mg/ji/VbX2kk90f2j/8FUNf0nxX/wAEyP2gfFGgXi6joXiTw9oOv6LqEQIWe0vNd0y4hkG4A4ZHBGa/y" +
                        "3+j5g6mH49wVKorThUnFrs1Caa+8/1S+kRjKWJ4AxtWm7wnThJPunODT+4/k5/4JHf8pF/2Yf8AsK6p/" +
                        "wCo5qNf6K/SR/5IjH/4Y/8ApyB/nF9Gr/kuMv8A8Uv/AE3M/re/4K4/8o6P2nv+wVpf/qR6dX+cP0bv+" +
                        "S3wH+KX/puZ/pP9JX/kh8w/wx/9OQP5Sv8Agi7/AMpLf2bP+5x/9QHXK/0O+lH/AMkJjv8AuF/6epn+d" +
                        "H0V/wDkvcB/3F/9M1D6j/4OF9f8TXn7Yvw88OalPKPDOheAtO1DwxYuGEAkv9Z1MXU6Z4LyNbojEdo1H" +
                        "avgPoXYOhHhivVil7SVeSk+ukYcq+V216s/QvpsY2vLiihSk37ONCLiunvTnzP1dkn6I8w/4JWeEP8Ag" +
                        "l/r9zq91+2p4vEXxQW+VPB/hX4lSXWkeC1skVCszXtnKsUsxcsHS8kjjC4wj8sPf+kJmXH9GMVkdL/Z+" +
                        "X3pU7Sq37crV0rbOCbv1Wx8/wDR3yzw/rSk89q/7Rze7GpeNK3fmTs3fdTajbo9z+rDS/2Jf2AfGnhO2" +
                        "k8PfswfCzxB4X1WFVsPEHhjwt4al8+IHh4tQsYPMJ4++suT61/nliPFXjLC4lqpmGJhUi9YyqVNH5xbt" +
                        "8mj/RXD+E/BmLwydPL8LOnJaSjTp6ryklf5pn5Q/thf8EBPhp48C+J/2PfEFv8ACHxNLMW1PwD4+vNSu" +
                        "/DM8bksXt7lIr28tXUk/KRKhGAojxz/AET4Z/TGx+D/AHWcwdenbScFFVF6q8YyXn7r7tn85eJ30M8Bj" +
                        "P3uSzWHqX1hNydN+jtKUX5e8uyR9+/8Evf2DNZ/YM+C3ibwj4y8Y2njL4g/EHVl8VeK7jwws40mzEFql" +
                        "pBbWr3ccMsoUBmaV40yWxsG3Lfjnj94v0uMM0p1qNJ06NKPLHmtzO7u27NpdEkm9t9dP2b6Pvg7V4Oyq" +
                        "pRr1VUr1Zc0uW/KrKyUbpN9W20r3tbTX+TP/grj/wApF/2nv+wrpf8A6jmnV/ov9G7/AJIjAf4Zf+nJn" +
                        "+b/ANJX/kuMw/xR/wDTcD+hH+3vE3hr/g3/AIdU8I3M1nrB+GUWlvcWIJlWxv8AV1sL7G3kA2s0oZuwy" +
                        "e1fxj9ToV/GRwrJOP1m+vdRvH/yZI/tT65iKHgwp0W1L6tbTtKVpf8AkrZ/JB8F7H4Tal8VfAtj8dte1" +
                        "bwz8Ibi/iXx9rnge0ivdVgsACzfZ4pmVcswCs+GKKS4SQqEb/R/imtmVPLq0sBCM8So+4pu0W/Nr77aX" +
                        "ejaTuv82OFaOW1MxoxzCcoYZy99wV5KPkn919bLVKTVn/bD+yX+zv8A8EgPHvha0sf2dvAPwy+MYigEt" +
                        "3F4ut7PxP4iCgLulurbxUs97AWIzhokUchQBxX+VviNxr4l4PEOWZVsTh9dOVunD0Tp2g/vb7s/1c8Nu" +
                        "CPDLGYdRy2jhsRprzJVJ+slUvNfcl2R2fx5/wCCQ/7Cfxz0S/tIvgxYfCHxJMjLpfi/4MRR6BLaSEcN9" +
                        "itVFjKucZWSA8dCp5ry+EPpJ8XZTVUnipV4dY1ffT/7efvr5S9bnqcY/Rn4PzelKKwscPU6Spe41/26v" +
                        "cfzj6WPy6/Zd/4IL/FX4N/tV/Dz4q+PvjN4d1v4WfCTxDYfETw0PCiaouv6rc6Lex6hYx3Nrd2y29qjS" +
                        "xKZtlzMdoKr97cv7/4gfS/y7NOHq+Ew+FqRxFem4S5uXkippxk00+aWjdrxjrq9rP8An3w++h1mOV8RU" +
                        "MXiMVTlh6FRTjy83PJwalFNNcsVdK9pS00W91/T1X8Dn9/hQB4p+0V8EtH/AGjPgt4/+C+u+INR8Lab4" +
                        "7sjpcuveGJ3gurd1kWZCQrKJYiyASwsdsiEqcZyE0OLsz+Fv9qD9l/4pfsmfFLVPhd8UdL8m5h3Xvhvx" +
                        "JZK507WtOLlY7u0kYDKnGGU/MjZVgCKxasdUZXPb/8Agnh+2m37FPxom8Xap4Wg8U+BPGtvD4X8fxw20" +
                        "Daxa2Kz+aJ9PuJAGV42+Z4dwSYABsMqOji7CnG6P7bPh38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0LXdL" +
                        "fdFNE2QQQQGR0YFXRgGRgVYBgRWxytHaUAc34x8KaL488IeKvA/iS2+2eHfGem33hTX7P5f3tlqNq9nO" +
                        "nzBh80chHINd2WZjVweJp16TtOnJST7OLuvxRw5pl1LGYaph6qvCpFxku6krP8ABn+ad8Wvht4g+DnxR" +
                        "+Ifwo8VRGLxF8OdZ1LwXq+5GjEk2nXb2pkQNn5JNm9DkgqQQSDmv91uHM9o5nl9DF0vgrQjNekle3qtn" +
                        "5n+DXEmRVsrzCvg6y9+jOUH6xbV/R7ryP7BP+CCH7Rdr8T/ANk3UvglqmoCXxd+z5qk2nW9rKcyP4e1y" +
                        "aXU7KXLHLbJzcw4Awqog7gV/mj9MLgmWA4jjjoR/d4qKd/78EoyXzXK/Ntn+nH0OOOI5hw3LATl+9wkm" +
                        "rf3Jtyi/lLmXkkj90a/kk/rsKAP5UP+Cw//AAVe0vxfY+Lv2Qf2btVt9X8MXW/QPjT8ULTy7iC+2PiTS" +
                        "tMc7lMQZcT3C/eI2Rnblm/0N+jN9Haphp085zOLjUWtKm9Gu05+f8sem71sl/nV9J36RtPFQq5LlklKm" +
                        "/dq1Fqn3hDy/ml12Wl2/wCbrwf4P8U/EDxToHgnwToF14p8XeKbqHRPD3h7RIXnury6ncIkcaICSST+H" +
                        "U8V/ceZ5nh8Fh51681CnBNyk3ZJLdtn8K5ZlmIxuIhQoQc6s2lGKV229kkf3xf8Evv2O9f/AGJ/2WtM+" +
                        "GPjPU4dQ8f+LNWu/if49g0x/NtLHUtRs7SxFpDIOJBDBZRK7j5WfcVyuCf8evH3xNo8VcQSxVCLVGEVT" +
                        "hfRuMXJ8zXS7k2lula+p/sj9H7wwrcJ8PRwteSdapN1J21SlJRXKn1sopN7N3tofolX4oftx+M//BeL/" +
                        "lH94h/7Gnwz/wClMlf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/YheIP/AE46X" +
                        "X9YfTJ/5JGP/X+H/pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRGA/wy" +
                        "/8ATkz8++kr/wAlxmH+KP8A6bgf1vf8Ejv+UdH7MP8A2CtU/wDUj1Gv84fpI/8AJb4//FH/ANNwP9J/o" +
                        "1f8kPl/+GX/AKcmfo7X4efuZ/NV/wAHG/w60S4+HH7OXxaS1ji8R6Trep/Dqe9RQJp7LULD+040cgfMs" +
                        "Ulk5QE/KZGx941/dX0Ic7qxx2Owd3yShGduicXyt/NSV+9l2P4O+nJkdKWBwOMsvaRnKnfq1JcyXycXb" +
                        "td9zxT/AINwfEWpwfET9qDwksxOjanovh3xFPbsSQLmxvru2RlHQZS7YH1wPSvqfpw4Km8Fl9a3vKc4/" +
                        "JqL/wDbUfKfQYx1RY7MKN/dlCEvmnJL8JM/GX/goFqEGp/tyftcXNsGEcfxE8W6e3mgA+Zaa1cWj9CeN" +
                        "0Zx7V/UPg1RdPhPLU/+gem/vgn+p/LXjRWVTi7M2v8AoIqr7ptP8j+7f9h3/kyr9j//ALJd8P8A/wBRO" +
                        "wr/ACL8WP8Akqsz/wCwmt/6ckf6/wDhJ/ySmWf9g1H/ANNxP5pv+DjB7w/tJfAeNzJ/Z6+B5HtQ27yvO" +
                        "bXrwS7e27aE3Y7Y9q/uv6Eij/YWMf2vbfhyRt+v4n8G/Thcv7ewa+z7H8eeV/0/A/Dr4b/8Lx8jVv8Ah" +
                        "UP/AAlf2bfD/bv/AArf+19m/D+V5/8AZfGcbtu73x3r+sc8/sm8frnsr629py/O3N+Nj+SMi/te0vqXt" +
                        "baX9nzfK/L+Fz0z/jNX/qqP/l2V4P8Axiv/AFDf+Uz3/wDjK/8AqJ/8qB/xmr/1VH/y7KP+MV/6hv8Ay" +
                        "mH/ABlf/UT/AOVDzS5+C/xzvLie8vPhP4suru6d7m6urnQtYeSSR2LMzM0BJYk5JPWvehxTlMYpLE0kl" +
                        "/fj/meDU4VzeUnKWGqtv+5L/I/ru+Pket2//BBKzs/EdtcWetad8LfAml31lqsTwXMJtb7SLZY5I5FVl" +
                        "ZFQKQwzxzzX+bPB0qT8YHKk04PE1mmtU7qbun5n+l3GcasfBxRqpqaw1FNNWas6as15H863/BI7/lIv+" +
                        "zD/ANhXVP8A1HNRr+2PpI/8kRj/APDH/wBOQP4h+jV/yXGX/wCKX/puZ/W9/wAFcf8AlHR+09/2CtL/A" +
                        "PUj06v84fo3f8lvgP8AFL/03M/0n+kr/wAkPmH+GP8A6cgfylf8EXf+Ulv7Nn/c4/8AqA65X+h30o/+S" +
                        "Ex3/cL/ANPUz/Oj6K//ACXuA/7i/wDpmof1kf8ABQP/AIJ3/C/9vXwNpWn+INRfwR8UPBS3DfD74labA" +
                        "s72wuADJaXkBZPtFo7KrFdysjDKMMuH/wA6fBrxqzDg/FylTj7TD1Lc9Nu17bSi/syW17NNaNOyt/o/4" +
                        "0eCOX8Y4OMakvZ4infkqJXtfeMlpzRe9rpp6pq7T/kp/aE/4JDftzfs+zajeT/Ceb4r+ELEvJH4y+DTP" +
                        "rkTxINxd7KJFv4gq8sXtwo5wxAJr/Rzgv6SnCWcqMViVQqv7NX3Nf8AF8D8rSv5H+bXGv0Z+LslcpPDO" +
                        "vSX26Xv6f4V7687xt5nxR8O/jJ8dv2efEV5cfDL4jeJfhD4jt5RFrFt4a1DUNJkeSE48u7gjeMSAHgpK" +
                        "pHqK/VM74YyjOqCWKoU68GtOaMZb9YvW3qmflOR8UZxkldvC16mHmnryylHbpJaX9Gj9gf2dv8Agvz+1" +
                        "R8ObvTtL+O2haT8ffCaFIb7UWgh0DxEkY+XdHc6bGLVyo5IktSzkDLrkmv5p41+hzw9joyngJywtToru" +
                        "cPmpPmXylZdnsf03wR9MviLAyjDMIRxVPq7KE/k4rlfzjd91uf1L/snftefBf8AbN+GMPxP+DWtSXFrb" +
                        "yDTPFHhXXEjg1jRL4rv+z3sEbyKpZfmR0ZkcfdY4IH+ffiL4a5pwvj3hcbBJtXjJaxmu8XZfNNJrqtj/" +
                        "Qvw38TMq4py9YvBTbSdpRekoPtJXfyabT6Pc/ij/wCCuP8AykX/AGnv+wrpf/qOadX+qH0bv+SIwH+GX" +
                        "/pyZ/lL9JX/AJLjMP8AFH/03A/rs/4JxeG9B8Y/8E3P2c/CXinSYNe8M+J/BTeH/EOh6nGJba8srx7i3" +
                        "nhlRuGSRHKsPQ1/m344Y6theOcdWpScakK3NFrdNWaa80z/AEs8DMDRxXAmBo1oqVOdHlkns07pp+TR+" +
                        "FP7YP8AwQF+K/hjXdb8XfsgavbfETwRdySX1n8LfFd7DYa/pyu277Pb3d6UtruNOdrSyRSYwCJGyx/rj" +
                        "wz+mNl2Iowo5zF0qq0dSKbhLzcVeUW+yUl10Wh/IXid9DPMcPWnWyWSrUXqqcmozj5KTtGSXduL6avU/" +
                        "DH4mfBD48fs8eIILP4p/DTxH8J9ds5x/Zt54j0+904PNGSyva3LKqS42kq8TkcZBr+tch4syjOqLlhK9" +
                        "OvBrVRkpaf3luvRo/kXP+Es4ySuo4vD1KE09HKLjr/dez9U2fXfwM/4Kzft4fAZrC10f433vxB8OWOF/" +
                        "wCEU+MK/wDCSW0ka8LH9ovW+2xooGFWK5QAcDivzXi36OfCGcXc8IqU39ql7j9bL3G/WLP0zhH6SHGGT" +
                        "8qhi3Vpr7NX94vS799L0kj+iz9g/wD4LbfCv9pzxT4d+EHxo8LJ8F/i54kkTSvDep2t19o8M61eucJBF" +
                        "LcbZbSeUnbFFLvV2wolLsqH+JvF76KmYZBh54zA1PrGGgryVrVILu0tJJbtqzS15bJs/uDwe+ljl2f4i" +
                        "GCx1P6viZu0Xe9Ob6JN6xb2Sd03pzXaR+5lfyWf1yFABQB8x/tYfsn/AAt/a/8Ahbf/AA2+JNh5NzD5l" +
                        "94M8Z2MaHUdC1EptW4t2bGVOAJYidsi8HBCsqauVGVj+Iz9qD9l/wCKX7JnxS1T4XfFHS/JuYd174b8S" +
                        "WSudO1rTi5WO7tJGAypxhlPzI2VYAisWrHTGVz6Y/4J5/8ABQzxr+xd41GkaubnxX8B/FdyknjfwRG+6" +
                        "WzlbEZ1HThIQqXCKBvTIWZQFYghHRxlYmcLn9ofw7+Ingr4seCvDnxF+HXiO28V+DPFdsmqaFrulvuim" +
                        "ibIIIIDI6MCrowDIwKsAwIrY5mjtKAP49/+C/37Ktx8P/jl4X/ag8NaWV8IfGu3j8PeNrm2T91beKNJt" +
                        "liRn2qAv2uzjQr1LPDKx61/ph9DjxCjjMpqZVVl+9w75oedOTv/AOSybv2Uoo/zG+mb4dywWb081pR/d" +
                        "Ylcs/KpFW/8milbu4yZ+cH/AATg/a6uP2Mv2pPBfxOv5pm+HmthvA3xY0603MZdB1CRPMmVB96S1lSO4" +
                        "QDltmzIDGv3Dxw8No8UcP1cLFL28ffpt/zx2XpJXi+179D8M8DPEuXC3ENLFSb9hL3KiX8kt3bvF2ku9" +
                        "rdT/QY0rVdM13S9N1vRdQh1bRtZt4dV0nVdNlSa3uba4jE0UsUkZKujowZWBwQciv8AGXEYepRqSpzi4" +
                        "yi2mno01o010aZ/tNh8RTrU41KclKMkmmtU09U0+qa2P5bv+Cuf/BXP+1P+En/ZV/ZV8T/8Sv8AfaB8Y" +
                        "PjBoE3/AB9dYptK0qaI/wCq6rcXCn5+UQ7NzP8A6A/Ru+jd7P2ebZtT97R0qTW3ac136xi9t3rZL/Pb6" +
                        "S30lvae0yjKKnu6xq1YvfvCD7dJSW+y0u3/ADV+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891e" +
                        "XU7hEjjRASSSfw6niv7pzPM8PgsPOvXmoU4JuUm7JJbts/g/LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5" +
                        "/wS88LfsWeFrf4kfEi3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/wC4n7vJf/KTx+8fsRxTi" +
                        "HhsM3DAQei2dRr7UvL+WPTd67f6y/R9+j7h+FMOsVikp4+a1e6pp/Yh5/zS67LTf9fq/mo/poKAPxn/A" +
                        "OC8X/KP7xD/ANjT4Z/9KZK/p/6If/JZQ/69VPyR/Lf0wv8Aki5/9faf5s/D/wD4N/v+T69W/wCxC8Qf+" +
                        "nHS6/rD6ZP/ACSMf+v8P/SZn8lfQw/5K+X/AF4n/wClQPlz/grj/wApF/2nv+wrpf8A6jmnV9/9G7/ki" +
                        "MB/hl/6cmfn30lf+S4zD/FH/wBNwP63v+CR3/KOj9mH/sFap/6keo1/nD9JH/kt8f8A4o/+m4H+k/0av" +
                        "+SHy/8Awy/9OTP0dr8PP3M/nt/4OLf+TYPgf/2Pq/8AqPajX9n/AEJf+R/i/wDrx/7fA/ir6cH/ACT+E" +
                        "/6//wDtkz40/wCDcf8A5LX+0f8A9itpX/p2NfqH03v+RVgf+vsv/ST8s+g1/wAjbHf9eo/+lH5pf8FWv" +
                        "hzrnw1/b+/aRsNatpIo/FWuN8RtDupVKpc2OvwpqaPGSAGVGleIkdGRh1Br91+jxndHHcG4GUH8EORrs" +
                        "4Pl19bJ+jTPwb6ReR1sBxnj41F8c/aJ91Nc2no216po/o1/4Jc/8FRv2aPGP7P3wc+AnxN8f2Pwm+Lnw" +
                        "t0PTPhnFp/jmVNP0zV7TRraPTbOezv5ttuXeGOMNDI6yb921WX5q/iL6QH0f8+wuc4rMMLRlXw1acql4" +
                        "e9KLk3KSlFe9ZNuzSata7T0P7k+j59IPIcVkuFy/FVo0MTQhGnab5YyUUoxcZP3btJXTad72TWpzX/Be" +
                        "z9mPUfjN+zv4G/aK8CWx1zUvgNJd3XiNNKAm+0eFNbSBprsGLcXW1lt4pMjgRvI5OBXf9D/AI9hled1s" +
                        "txD5Y4m3LfS1SF7R8uZNrzkorqcH0xuAJ5rklHMsOuaWFbcra3pzteXnytJ+UXJ9D+ff/gmp+3jq37CP" +
                        "xwn8U3+nTeI/hR8QIbfw38VvDGnlBctbQzGS3vrXfgG4tDI5RGIV1d0JUsHX+y/HXwhp8X5SqUZKGJpN" +
                        "ypye12tYv8AuysrvdNJ62s/4u8BvGGpwfm7rSi54aqlGpFb2T0kv70buy2abWl7r+2D4U/trfsnfGrw1" +
                        "Z+Kvh3+0D4W1awu41uZdPv9Ys9O1O03/wAN1Y6g8NzA2e0ka57ZHNf5W8ReFfEeVV3SxOCqxa6qLlF+k" +
                        "opxfybP9XOHPFfhvNcOq2GxtKUWtnJRkv8AFGTUl80j1D/hePwU/wCiweFv/Cg0n/4/Xgf6p5r/ANA1X" +
                        "/wCX+R9B/rdlP8A0FUv/A4/5noel6rpeuafaatoupW+saVfp59jqelzR3FvMhON0ckRZWHHUGvFxGHqU" +
                        "puE4uMlumrNeqZ7eHxNOtBTpyUovZp3T9Gj4M/4KpaFe+Iv+Ce/7Uun2Cl57fw6uuyBQW/c6XqVrqcxw" +
                        "PSO3Y57V+v/AEe8ZChxpl8pbOpb5yi4r8Wfjv0iMHOvwVmMY7qnf5RlGT/BM/je/wCCYPxQ8M/Bz9vP9" +
                        "nDx94y12Hwz4ZstXvNA1bXtSKJbWqa7ot7oKvM8hCxx7rwB5GICLliQBmv9OfHzIK+Z8H47D0YOdRwUk" +
                        "lu+SUZ6d37ui6vQ/wAvPo/8QYfK+McDiK81CmpuLk9lzwlDV9F72r6LXof2Bf8ABWyWKf8A4Jx/tNTwS" +
                        "rNBNpOkywzRMGR0bxFpxDKRwQR0Nf5pfRwi1xxgE9+aX/pEz/Tb6Sck+Bse1qnCP/pyB/Kd/wAEXf8Al" +
                        "Jb+zZ/3OP8A6gOuV/ob9KP/AJITHf8AcL/09TP86vor/wDJe4D/ALi/+mah++X/AAVq/wCCqHxX/Ym+I" +
                        "/w++DPwW8IaLfeJvEmgx/EnxF4q8eQXV7BFZXWpXmmW9va29pc2uJN9hK0juzDaVAXOSP49+jl9HvLuK" +
                        "8DWxuOqzVOE/ZxjBpO6jGTbbT0tJWStre76H9k/SS+kRmXCeOoYHA0oOpOHtJSmm1ZylFJJOOt4u7d9L" +
                        "WXU9D/YX/4LM/s//tI+GdL8PfHLxHo/wE+OMR+xalpOvXLWPhzVXyAs2nX2oOUj8wkD7PPL5gbhTIPmr" +
                        "xPFv6L+c5HXlUwEJ4rCbppXnHynGKu7fzRVratR2Pb8IfpS5LnuHjTx9SGFxezUnaEvOEpOyv8Ayyd76" +
                        "Jy3P0O+L/wM/ZX/AGhfDB1j4y/D3wh8SvDixZt/F/iK30+ZreJsR7oNTUrJCDkDdHKvbmvxbhri3iHJc" +
                        "RyYKvVozv8ADFyV35w2fzTP23ibhHh3O8Pz46hSrQt8UlF2XlPdfJo/jx/4KlfAT/gnf8Edb0Sz/Y9+L" +
                        "Vx4k8eXd60XjL4a6FqUfibw5pOniGQ701Ys8iXCyhUNu007YJLGMqA/+mX0fuMONc2pTlnOGUKKXu1HH" +
                        "2c5SuvsbONteZRitrc19P8AMP6QvBvBGU1YRyXEudZy9+mpe0pxjZ7T1aley5XKT3vy21+lv+DdK78UJ" +
                        "+1D8brG0af/AIQq58Avd+IFjB+zHVIfEOmpp5kP9/ypbvZ7bq+E+m1Tw74fwknb2qr2j35XCfNbyuoX+" +
                        "R979B+piFxBi4xv7J0Ly7cynDlv52c7fM+C/wDgrj/ykX/ae/7Cul/+o5p1fr/0bv8AkiMB/hl/6cmfj" +
                        "v0lf+S4zD/FH/03A/qU/ZW+NVt+zn/wSA+GHxxutFfxGvwz+HknieDQIZRB9suIp5lghaUhtiPIyh32k" +
                        "quSASMH/P7xC4WlnfiXiMAp8ntsRy829k0ru3WyvZdX1R/oT4d8VxyPwyw+PcOf2OH5uXa7Tdlfom7Xe" +
                        "tl0Z+Vv7M//AAcJeP7j4pR6d+1d4E0K0+E+vO0H/CRfCnT9Si1DQHc/JK8F1e3Zu7dekiqBKBll3keW3" +
                        "9B8efQwwccv5sorTeJj9mpKPLPyuox5Zdm/d6O26/njgH6auNlmPLm9GCw0vtU4y5odm05S5o90ve6q+" +
                        "z/pB+H/AMaf2cf2nPChb4f/ABB8LfGTwvrUW290ayurDUtyMu4x3VjNukjYDlo5oww7iv4eznhbPMhxH" +
                        "+0UauHqRejacfnGS0fqnY/ujJeKsiz/AA3+zV6WIpyWqTUvlKL1Xo0mfk3+3l+w5/wSH0Hw34g8UfFjU" +
                        "9E/Zi8VxxS3drc/CPUrfT9UnlUEiO38OQi4huMt95YbQNj+NRyP6L8IPFnxJrV4UsJGeMp3S/eRcorzd" +
                        "V2cfVzt5PY/m/xi8I/DOjQnVxkoYKpZteykoyfkqSupeihfzW5/GxdNbWWt3LeG765ns7S6dtB1OeIWl" +
                        "48ccx8iVo4ZZRHIQAxVZG2ngMcZr/TympSpL2qSbWq3W2qu0rr5K/Y/y6qOMKr9k20n7r2e+jsm7P0bt" +
                        "3P9NH4dSeIJfh94El8WLInimXRtLk8SpeLtmGoNZRG4Eg7N5m7I9a/wcztUVjayo29nzy5bbct3a3yP9" +
                        "8cjlWeCoutf2nJHmvvzWV7/ADOyrzD1AoAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6F" +
                        "qJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd" +
                        "3aSMBlTjDKfmRsqwBFYtWOmMrn0x/wTz/4KGeNf2LvGo0jVzc+K/gP4ruUk8b+CI33S2crYjOo6cJCFS" +
                        "4RQN6ZCzKArEEI6OMrEzhc/tD+HfxE8FfFjwV4c+Ivw68R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdG" +
                        "AZGBVgGBFbHM0eVftXfs3+Df2svgL8QPgX42/0aw8X2udH1yNA82latbMJ7K9iGVJMMyqWUEb03IThjX" +
                        "23h3xxiuHM4o4+hq6b1XSUXpKL9V16Oz3R8R4jcC4XiTJq2X19FUWj6xktYyXo+nVXWzP8AO/8AjR8H/" +
                        "HfwC+KXjb4PfEvR30Pxr4CvpNE1mycHY+0B4p4WIG+GeNlliccMjKw4Nf7U8LcS4POMvpY3Cy5qVWN0/" +
                        "wA0+zTumujTR/iTxVwxjMmzGrgsVHlq0pWa/JrumrNPqmmfYvh3/gp5+0/4V/Y+n/Y60HxL/Z/haSaWw" +
                        "tvHcMkw1228NzxkSaLBMD8luzk/OPnCExAhOK/Msb4CZBiOJlnVSnepa/JpyOa2qNdZW6bX956n6fgfH" +
                        "/iDDcMPJadS1O7XPrzqm96afSN+u9vdWh8H+D/B/in4geKdA8E+CdAuvFPi7xTdQ6J4e8PaJC891eXU7" +
                        "hEjjRASSSfw6niv17M8zw+Cw869eahTgm5Sbsklu2z8eyzLMRjcRChQg51ZtKMUrtt7JI/t2/4Jef8AB" +
                        "Lzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/uJ+7yX/yk8fvH7EcU4h4bD" +
                        "NwwEHotnUa+1Ly/lj03eu3+sv0ffo+4fhTDrFYpKePmtXuqaf2Ief8ANLrstN/1+r+aj+mgoAKAPzB/4" +
                        "LAfBD4l/Hz9h/x34P8AhN4YuPGfi/R9S0fxnH4V0dDLf3trptyXuEtYl+aaZUcusS5Z8FUDMQp/ffo08" +
                        "V4DJ+LKNbGVFTpSjKHM9k5LS76K+l3ot3ZXZ/P/ANJvhLH5zwlWo4Om6lWMoz5VrJqL15V1dtbLV2sru" +
                        "yPxs/4IPfsp/tAeC/2mfGvxj+IHwq1z4d+A9D8Kah4Pj1Tx3pl5pL3up6lf2MscNtFfxxPKFjt5HkdVK" +
                        "rgAkFhX9O/S88Q8mxWQ0sFh8RCrWlVjK0JKVoxUk22m0tWkk9XrbZn8u/Q98Os6wmf1cbicNOlRjSlG8" +
                        "4uN5SlFpJSSb0Tba0Wl90fPX/BXr9jL9pO6/br+J3j3wd8G/EnxD8F/F1tJ8QeD/EHgPRdR1eF5I9Hs9" +
                        "OuLaY6fDKIpo7iBwEYglCrDrx9p9GvxQyKPCOHw9bFU6VWhzRlGc4xfxSkmuZq6aa1XW66HxP0mPCzPp" +
                        "cX4jEUMLUq0q/LKMoQlJfDGLT5U7NST0e6s+p/UT/wTz+EXjL4EfsW/s9/Cz4hWI0vxr4a0Mz+I9IyGe" +
                        "yudSvrjVTbSFSR5kIuRHJgkblOCRzX8A+NPEuFzfinG4vDPmpTn7r7qKUbrydrryZ/oL4J8M4rJ+FcFh" +
                        "MSuWrCHvLs5Nys/NXs/NH2bX5efqZ+Kf/BdL9n/AOLPx2/ZV8HS/CPwbe+PtT+G/iu38X+IvDfhmCW81" +
                        "NtNk0u8095re2gVpJvLknTeqAsFJbG1WI/qf6JPGWW5RxDVWMqqlGtScYyk7R5uaMrNvRXSdm9L6btH8" +
                        "p/S84MzLOOHaTwdJ1ZUaqlKMVeXLyyjdJauzaulrbXZM+Ev+Dfz4QfFr4a/GH9oK++Ivwu8ReAbLU/DW" +
                        "mWmnXnjXRNT0qK4lTVC7JG99DEHYDkgEnFfrv0yeJctx2WYKOGxFOq1Uk2oTjK3u9bN2Px/6GHDGZYDN" +
                        "MbLE4epSUqcUnOEopvm6XSufrz/AMFC/wDgm78Lv29fCemz6lqJ8BfGPwbby2fgT4mWUAuAIHfzjY38G" +
                        "5DPas5LKAwaJiWQ4Z0f+bPBbxyzDg/EyUY+1wtR3nTbtrtzRfSVt9LSSs9k1/THjZ4FZfxjhouUvZYqm" +
                        "rQqJX035ZLrG+2t4t3W7T/kW/aF/wCCWP7bf7Omtz2OufBfUviJ4eMnkab45+DttdeI9MuVJwHZbGI3N" +
                        "vk8YuYYznpnIz/pHwX9IPhTO6SlTxUaU7awqtQkvvfLL/t2TP8ANPjb6PHFmR1XGphJVoX0nSTqRf3Lm" +
                        "j/29FH9TH/BGf4SfG34cfsPQ+C/2jPD9/pT63r2s6j4K8C+PYmF1YeFL2ys4UtZ7O7XfCklyl1KIZFB2" +
                        "yZIAbFf59/Sg4kyrHcWOvls4y5YRU5w2dROT5lJaNqPKuZdV5H+hf0WuGs2wPCSoZnCUeapJwhPdU2or" +
                        "lcXqk5c75X0e2p+Yv7dn/BBfxTHr+tfEr9iiS31fQtUll1K++BfiG8is7qwkkbeU0m8vGSGSDk7YriRG" +
                        "QDAeTOB+9+Ef0v8O6MMLnl4zjZKtFXT/wAcVqn5xTT7Lr+AeL/0O8Qq08VkVpQk23Rk0mv8Eno15Saa7" +
                        "vp+FfiT9i79r3wjqk+jeIf2YPH2n39uSpUeEtcmikAO3dFNBbPHImRwyMQfWv63wPilw1iaanTzCg0/+" +
                        "nkE/mm7r0aufyHjvCvibDVHCpl9dNf9OptfJpWa807GB/wyt+0//wBG4ePf/CP8Q/8AyJXZ/wARCyD/A" +
                        "KDqH/g2H/yRx/8AEO+IP+gCv/4Kn/8AIn9Uv/BAv4N/tG/Cb4RfG+b4y+Gda8DeA/FWraPdfC3wf44t7" +
                        "nT7lLq2t7xNVvI7O8SOWOK4ElqocgBzGSOhJ/z3+mJxPkeY5lhFgqkKlaEZe0lBqSs3Hki5K6bVpu3S+" +
                        "p/oh9DXhfPMtyzFvHU50qM5xdOM04u6UueSi7NKV4K/Xl0P3e8S+HND8Y+HPEHhHxPpketeGvFVld+HP" +
                        "EOj3gJhu7G+ga1nhcAg7ZI3ZTz0NfyHgMdVwteFalLlqQalFrdNO6a9Gf2Dj8DRxVCdGrFSpzi4yT2aa" +
                        "s0/VaH8Lf7b3/BJv9pD9l/4kalH4A8A618Zfgzrt3PJ4A8ZeBtPudXvILZmLx2mqW+nxPJBcxJhTIUEU" +
                        "v3kOdyJ/rb4UfSLyPP8DF4itDD4qKXPGclFN9ZQcnZxfa/NHZ9G/wDIjxZ+jhnvD+PksNRniMLJvknCL" +
                        "k0ukZqKupJdbcst090v26+Dv7MH7VXiP/giV48+AfjfQ7+T4veIbG+1H4bfDvxWzw6rZaLaaxa6lZ6ZI" +
                        "t2QYpXW1kMELkbBIkZ2YIX+UuJuPuHqHitRzChOP1aEkqk46xc3FxlNW3S5lzNb2bV93/WXC/h/xFX8J" +
                        "62XV4S+szi3ThLSSgpRlGDvs3yvlT2uk7bL8yv+CNX7Hn7Suhft2/D74n+Mvgx4j+H/AIJ+EVv4ivPFe" +
                        "uePtHv9Gi87UfDmoaDBbQHUYofNmMt4rFEyVVSTgYr95+k94mZFW4RrYWjiqdWrXcFFQkpO0Zxm2+Vuy" +
                        "tHd7tpI/AvoueGOfUeMKGLr4WpSpUFNyc4ygryhKCS5kru8tlsk2z+ir/goL/wTq+F37engjTrbWr4+B" +
                        "/ix4OjmT4f/ABNsIBO8CS/O9new7k8+0d8Nt3Bkb5kYZdX/AIn8GfGzMOD8XJwXtMNUtz027X/vRfSSX" +
                        "ya0a2a/t/xp8D8v4xwkVUfssTTvyVEr2v8AZkusW9e6eqe6f8hH7Q//AASv/bb/AGctT1CPXvgzqPxA8" +
                        "LWZZrfx/wDCGC48Q6XNCM/vXWzi+0268c/aYY/yIJ/0o4K+kHwpnlOLp4qNKo/sVWoST7avll/27Jn+Z" +
                        "3G30eOLMjqSVTCyq019uknOLXfRc0f+3oo+H/8AhXfxA+1fYf8AhBtY+2+Z9k+x/wBmXvm+bu2bNnl53" +
                        "Z4xjOa/WP7awfLze2hbe/Mv8z8k/sTG83L7Gd9rcrvf7j7S/Z9/4Je/ts/tG6lp0fhf4J6p4M8M3zKZ";
                    resourceString += "fH3xWt7jw9pEULf8tla+jWe4Tt/o0Upz24OPy3jPx+4UySEnVxcalRfYptTlfto7Rf8AicT9V4L+j7xZn" +
                        "lSKpYSVOm/t1E4Rt31V5L/CpH9kn/BP/wDYO+H/AOwb8JbrwX4d1E+LfHni6aHWvib8Q7m3S3k1K6hjM" +
                        "cMMMYLGO0tw7eVGzMcs7E5Ygf5ieMni9jeL8yVepH2dGmmqcL35U9231lLS7stkuh/qJ4MeD2C4Oy10K" +
                        "UvaVqjTqTtbma2SXSMdbK73b6n8yX/BW39jT9p7Uv27/in428KfBLxJ4+8I/FufSta8EeIfAOjahrNtc" +
                        "Y0mz06SCRtPilEU6TQspjkwSMMMqwNf3n9HDxPyCnwhh6FbF06VSgpKcZyjFr3pSTXM1dNPdea3R/Av0" +
                        "k/C3iCpxhiK9HCVKtKu4uEoRlJP3YxafKnZpp6PyezP6kf2QfgJeeC/2G/g1+z18bPDVrf3MXg2Lwd8S" +
                        "fBuo+XdWxXUYJDd2M2wsj7VnMT7SVJBwSMGv8/vErjCOK4txWY4Go0vbOVOS0futcsl1W1117n+hHhlw" +
                        "bLC8I4XLcdTTfsVGpB6r3k+aL6Peztp2P5z/wBtT/ggx8XvAet6343/AGRJV+Knw7upHvoPhjqt1FbeJ" +
                        "tJR2LGGCW7ZIb6GMfdYyJNjC7JGBc/234WfS+y3GUoUM4/cV1p7RK9OXm0ruDfXRx63itF/D3it9DvM8" +
                        "HWnXyb9/Qbv7NtKpHyTdlNLo7qXS0nq/wAPvGfwE+OXw61N9F8ffBzxT4L1aMlDp/ijQNVsZTjuouYE3" +
                        "DuCMgjkV/WGV8YZTjqfPh8VSqR7xnF/kz+Ss14OzfA1OTEYWrTl2lCS/NGp8P8A9mn9ob4rajDpXw3+B" +
                        "/ivxrezP5OPD2gancRxnIBMsqQ+XGoyMs7ADua58546yXLoOeJxdKmv704r7le7+R0ZLwHneYzUMLhKt" +
                        "R/3YSf3u1l8z+ir/gm9/wAEQ/F/g7x34U+O/wC2FFZ6fJ4RuLfxH4O+B9hNb6i8l/Awlhm1ieEyW/lxO" +
                        "A628TPvOPMYKGjf+J/HH6V2GxWEqZfk137ROMqrTjo9GqadndrTmaVuibs1/b/gX9EzE4XGU8wzqy9m1" +
                        "KNFNS95ap1Grxsnrypu/VpXT/qAr+BD/QIKACgAoAKAPmP9rD9k/wCFv7X/AMLb/wCG3xJsPJuYfMvvB" +
                        "njOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxGftQfsv8AxS/ZM+KWqfC74o6X5NzDuvfDfiSyV" +
                        "zp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6YyufU3/AATl/wCChfif9jDxxJoXiU3Xib4C+MplPjDwpC5eT" +
                        "TLltqDU7BG4EqqAJYxgSoMH5lQq4ysTOFz+0DwR438JfEnwl4f8eeA/EFt4p8H+KbaPV9A1/SJBJb3Nv" +
                        "IOGU8EEEFWVgGVgVYAgitjmaPyM/wCCpX/BO3wz+3f8MbH4z/BG60+8+O/gnT5W8KaxpM8Etn4u0mAyS" +
                        "/2W9zE/leYHLG1mJ2q5KOQrFk/pr6OnjrPhfGfVcU28DVev/TuT050u38yW6V1qrP8AmH6R/gNDinB/W" +
                        "sKksdRjp/08iteRvo/5G9E3Z2Tuv4yNP+EPxT1T4kw/Byx+HeszfFae+Hhpfh02nXSayt/naYHtJEWRH" +
                        "HVgyjA5OBzX+pNbiXL6eBeNlXh9XUebn5ly2782z+R/lXR4ZzGpj1go0J/WXLl5OV8/N25d0/XY/tV/4" +
                        "Jef8EvPC37Fnha3+JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgff+4n7vJf8Ayx8fvH7Ec" +
                        "U4h4bDNwwEHotnUa+1Ly/lj03eu3+rH0ffo+4fhTDrFYpKePmtXuqaf2Ief80uuy03/AF+r+aj+mgoAK" +
                        "ACgDwn9pn476T+zJ8DvH3x21/wxqPjHQvh3BbaprOgeE/s51CS2nvoLJ5IhdyRRkQibzX3OPkVsZOAfr" +
                        "uA+EKmfZtRwFOpGnOq2lKV+W6TdnZN62stN2j4/j7jClkGUVswqU5VIUkm4xtzWbSurtLS93rsmaPhH4" +
                        "5+B/F3wA0D9pCCeTTvh3rnhOD4xSS3oTz7TSpNKGryCVUYqJIo8hwDgMCM1hmXCWLw2czyxq9eNV0tNn" +
                        "Lm5Vbyb28joyzi7CYnJoZmm1QlSVXXdR5eZ380t/M8W/Yg/bd+G37dnw08S/Er4b6BqnhW18Ka3L4I1b" +
                        "QPGQsxerLHZW18kwFjPOnlSLc7VJYHcrDHHP1Xiv4U47hHH08LiZxm5w5043ta7VtUndW18mj5Twl8Wc" +
                        "BxhgKmKwsJQUJuDjO172Tvo2rO+nmmbPwY/a+8E/HT4/wD7RXwE8F+GdUN1+zTcWGieN/HN59jGkz6jf" +
                        "eYotbbypnlLo9vOr70XBjPqK5eKPDXF5Rk2CzCvUjbGJuEFfmUVbV6Ws04tWb3OrhbxNwmb51jsuoU5X" +
                        "wbSnN25XJ30Wt7pqSd0tmfWtfnB+khQAUAFABQAUAfCP/BRH9sfUv2G/gFZ/GjSvAcHxFurrxBp3gk+H" +
                        "9Qv5NNjVL62u7gy+bHBcHK/ZsbdvOevFfrvgp4Y0+Lc4eBnWdJKnKfMo82zirWuu/c/H/G7xQqcI5Msd" +
                        "CiqzdSMOVy5d1J3vZ9ux93V+RH7AFABQB89ftVftF+F/wBk34C+PP2gfGeh3/iTw14A/sv+0tF8MC3N9" +
                        "N/aus2miR+V9rkij+WS8Vmyw+UHHOBX2nh7wTiOI84o5dQnGFSrzWcr2XLGU3eyb2jbbc+K8ROOMPw3k" +
                        "1bMa8JTp0uW6ja75pxgrXaW8k99j5W+If8AwUY1bwbceDn8LfsSfGj4xaD418N6D8SdM8XfCbwjLrGlL" +
                        "Dr2npqCWrXNu5QzwrIFlVSQD3NfoWS+CVPFKr7XNcHh506k6bjUqcsrwk43s9bO2h+dZ3441MK6Xsspx" +
                        "mIhUpwqKVKlzRtOKla60ur2fmeDfD//AILM6Z8WdCfxT8K/2Evjl8S/DMdxJpUniP4f+E49ZsFuoVV5I" +
                        "TcadPNGJFDqWXdkAjI5FfX5z9F+pl1b2WLzfBUalr8s6nK7PZ2kk7abnx+S/Slp5lR9rhMnxtane3NCl" +
                        "zq63V4tq+q0P2b0+6a+sLG+a1ksmvIYrprK8XZNCZED7JF7MucEetfy9Wp8k3G97O11s/Q/qWjU54KVm" +
                        "rq9nuvU+Mv+Cf8A+1rqP7a37O2m/HLVPBEPw+u7/VtU8Nnw7YXz6jGq6dKsYk86SGAkvu6beK/UfGTw4" +
                        "hwrncsBCq6qUYy5muX4ulrv8z8t8GPEmfFeSRx86KpNzlHlT5vh63st/Q+2a/Kj9XCgAoAKACgAoAKAC" +
                        "gAoAKACgAoAKACgAoAKAPmP9rD9k/4W/tf/AAtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE" +
                        "7ZF4OCFZU1cqMrH8Rn7UH7L/wAUv2TPilqnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqw" +
                        "BFYtWOmMrl34bftgftDfCP4QfED4F+APiNd6D8OfiRj+3NJgOZbff8ALcfYpj89t9pT5J/LI3rwaLg4o" +
                        "+1P+CZn/BQv4t/s1eKNM+CVt4K1D41/Dbx9qUUOk/DvQGL61p+pXbiNpNJEmUbzfvSW7lUZhuDRkuzOM" +
                        "rEzhc/sds4YLg2+szaT/Z+q3NtHDMLtbc3cMZ/e+RJJA0inYxOQrsuckE9a6fay5eW7tvbpfucXso83N" +
                        "Zc1rX627GjUGgUAFABQAUAeZ/Gn4baf8Y/g/wDFL4S6qUXT/iX4e1jwLczTAkRDVdPlshJwCQUMgYEcg" +
                        "gEc173C2eTyzM8PjIfFRqRn/wCAyTt87WPA4qyKGaZZiMHP4a1OUP8AwKLV/le5/NZ4F/aM8Sab/wAEM" +
                        "/FfwmDSR/F6y8U3v7EVnolwQt295retC9ezZSeSNMu5oVx/cx2Jr+6c34IoVPFqnjP+YZ0li2+loQtzf" +
                        "+DIqXz9D+EMo44r0/CKpg9frSqvCJdbzndx/wDBcnH5eTPpP9i6w8Pf8E+f20f2zf2dtUuhZ/Dey+F3h" +
                        "T9oXQJmHlpPB4P0CGy1aeMvjLyyzzs5PLeXuPQ18L4pVq3GfC2V5lBXrvE1KMvJ1ZtwT8klFLtex934V" +
                        "0aHBXFWa5ZN2oLDU68fNUoJTa823Jvva54b+z5+0J4t/Y0/4JseMv2uV02yvv2h/wBvD4narqfgk+J38" +
                        "u1hvNVu7q3iubvzWTNvb/Yru6VmIVjKgYhWr6zjPgvDcUcdUsn5msFlmGip8u7UUm1H+9LmhHTVcrsro" +
                        "+R4K41xPC3AdXOeWLx2Z4mThzbJybScv7seWctdHzK7szt/jT8bP2iv2Q/hvov7TGif8FOPDP7V3irw5" +
                        "e6TJ8ZP2ep5PCJ0vVbLUr2G0nj0aLSZmuIjA8yjdGitsDSnaFMZ8rhbhXJOJcdPK6mQVMDTmpeyr/vea" +
                        "Lim06jkuV3SejbV7R1bUj1uKuLM84ZwMM0p8QU8dUg4+1ofuuWSk0mqai+ZWbWqSdry0ScX/RH4O8U6X" +
                        "458IeFfGuhuZNF8YabY+KdHkkxua11C1S7iJ2kjJSQdDX8U5nl9TCYmpQqfHTk4v1i7P8Uf27leY08Xh" +
                        "qden8FSKkvSSuvwZ+Dnw38Zft+ftdftR/tv/AfwL+06/wAD/hF8D/Gl/Yn4gWvh/TdW1qCC5nubXTdG0" +
                        "9ZBaqsKi0lmnmMhlGEXcA3P9e55lfB3DfD+U5hiMB9ZxOJop8nPKMG0k51Jb6+8lFW5d3bQ/jzIs04z4" +
                        "m4hzfL8PmH1bDYas1zqEZTSbahTjtp7rcnfm2V9Tl/2dviB/wAFJP2iviN8cf2G9Z/ab074dX/7Luq3V" +
                        "t8QP2m9E0Czv/FOv2FzOYNJtILV3ggiDiGSaW4BEwXYjEsGL+hxtk3A2SYHCZ9DASqrGxXJh3NxpwaV5" +
                        "yb1btdJR1je7WlrefwRnXHeeY7F5BPMI0XgpPnxCgpVJpu0IqOiV7NuWkrWT1vf65/4Jx/tAftAXvxl/" +
                        "aq/Yx/aZ8bw/FXx7+zRe6dc+FfirDaR2d1rOi6krlftUduNgdEMDrktJ+8ZWZtm4/m3jfwbk0Mry7O8r" +
                        "pOhRxilzU73UZx/lb11fMui91NJXsfpXgZxpnU80zHI81rKvWwbjy1LWc4S/mS0ulyvq/eabdrnyx+1d" +
                        "4n+P/7O/h/x7471b/gsTok37QngW2u/F2k/s+T6P4N02xv4bONrgaV/Zcc803nTRrshkliJkfjAJ3L+h" +
                        "eHeAybO61HDw4Zn9SqtRdbmqyab05+eyVk9Wk9F6Wf554jZhnWSUa2InxRD67STkqHLSipJa8nJdu7Wi" +
                        "bWr063XD/8ABT347XX7TX/BHf4BfHTUdMh0bV/iF4k8Nalr2mad5n2aLUbez1ixuxCJiWERngcoGJIXA" +
                        "JbqfW8A+EY5D4m4zARk5RpU6iTe7i3Tcb262av59EeR9IDjCWf+GGCzCUVGVWpTbS2Ukqila+trp28ur" +
                        "3PsXS/2hvjt+3l+1JP4P/ZT+IV18Lv2Ov2fr6TSvjJ8ePDltp1xdeM9eQK7aTpEmoxXKeSqFf3yJwrGQ" +
                        "khoA/5jiOC8o4Q4fVbNqKrZnio3pUZOSVKH881Fp3v9lvdculptfqGH42zjjHiF0MoruhleFlarWiot1" +
                        "Z/yU3JNWt9pLZ82t4J8V8dP2p/iN8df2yviT+y34D/as0T9jT4Mfs/WNifif8UdQm0KPxD4i1/UoROun" +
                        "6a2vSoscUAJEjxgMrI24sHQV6vCPh7gco4YoZriMunmGKxUn7OmlPkhCLtzT5Fq30T0aatazPJ4v8RMd" +
                        "nHFNfKcPmMMvwuFivaVG4c85yV+WHO9EurWqad73R137Dn7T/xOsP2tfif+xP8AEz4/aV+1h4e0zw1F8" +
                        "Xvg38ffDf8AZJu5LBbmCzudM1I6LJLC80bT5DM2/wCQliVkRU83xZ4BwE+HMPnmFwcsDN1PZVaMua17N" +
                        "qcOdJpO2y01VtU2/T8I/EDMIcSYjIsVjYY6EaftaVaPLfluk4T5G02r7vXRtu0kl6j/AMFov+UaX7Sf/" +
                        "cnf+p9odfP/AEXP+S7wP/cX/wBM1D6H6VH/ACQWP/7hf+nqZ9mfsrf8mwfs4f8AYheD/wD1HrSvzDxC/" +
                        "wCR/jv+v9X/ANLkfqXh3/yT+A/68Uv/AEiJ+XP/AAb/AH/Jimrf9j74g/8ATdpdfv8A9Mn/AJK6P/XiH" +
                        "/pUz+e/oYf8khL/AK/z/wDSYH7gV/KB/Wp/K5/wSx+Cn7bfx0/Y1ay+EX7UkX7Lfwv8La3rcHg+Pw34f" +
                        "t9X1bxHrcjx3M899dXE0bW1pEWSFEhyWO8spAXP+hH0g+KuFMo4n5sZl7xuInCHNzTcYwhqkopJ80nq2" +
                        "3tok97f53/R44U4szfhflweYLBYeE58vLBSlUno25NtcsVoklvq2tr/AKhf8E4f2mfj7+1B+zt8c/A/x" +
                        "O8QWWlftNfAvW9d+Cl/8QrawgltJNShtGSy1Ka1iSKCRorjeJI0VVcRg7RvNfgPjhwHk+QZ3hK+Fg5YD" +
                        "EwhVULu/K370E3dq8bWbbavvof0F4GcfZzxBkeMw+KnGOYYac6TnZW5kvdm0rJ2le6SSdtlc+Af2pvjt" +
                        "8c/2O9Euvit4a/4K0aD+0T8Y/A+o2H/AAn/AOzXq2neEobXVra51CG0uLa30/SJ55LR4fM3yIAkgiDOr" +
                        "oVG79k8PuEcp4mqrCVeHJ4TC1Iy5K6lUbi1FtNykkpJ2snquayad9PxjxD4vzfhik8XS4khi8VSlHnoO" +
                        "NJKSckmlGLbi1e7Wj5btNW1+nf+CjH7Yn7RHgew/wCCePin9lnUxpmsftK6miweBtWjtprPWpdZtNHfT" +
                        "LK8eaISCMS34DmNo2IJ5HBHwPgj4ZZJi551SzaPNHBx+NXTgoupzyjZ2vaOl7ryZ9/44+J+d4SGSVcpl" +
                        "yyxkvgdmpuSp8kZXV7Xlraz80cV+03oH/BTD9ij4bj9r1v2y4/2hIfBNxp+qfGz4I614W07S9AfTry6i" +
                        "tZU05rUtIIoZJlUuqwybMyZGCh9XgPGcCcVY7+xv7L+quopKlVVSUp8yTa576XaV7NyV/d7M8rj7Bce8" +
                        "KYD+2f7VWLVNxdWi6cYw5W0nyW1sm7XSi7e90sdP+2/+2R+0Ra+MP8Agmfr/wCx/r628X7Yljrctn4I8" +
                        "WQ2z6TdSappuhPpU+oMIHnRbFtYaaYRuMiPBHWvP8KPDHJJYbPqecwu8BKF5xb5lyyqc6jrZ8/JZXT3u" +
                        "eh4teKOdxxWQVMlnZZhGdoSS5XzRp8jlpdcntHKVmtrHF/tOv8A8FGv+CeXhfRf2r9Q/a5b9qr4eaPqW" +
                        "l2Hx4+Fnizwzpui2cdpqN0lmJdPazMxgjM0qxK0ZjZHZCyyKWQerwEuCONcRPKI5b9SryjJ0akakpu8V" +
                        "e0r2u7Jtp3TSaTi7M8rj98c8E4eGcSzP69QjKKrU5U4wVpO142vZXaStZptNqSuj2X9rr9tvxd4p+NXw" +
                        "B/Zd/Z/+Nmh/s5WHxd8KQfHv4iftH/EAaU39keF79JPsVrp8WrSpbteXHlkkMcjchVgN7D5fw28KcNh8" +
                        "qxma5jhJ4uVCq6MKEOb3qitzOTiubljf8HdPRH1PiX4sYnEZrgspy7FwwkcRSVadefL7tN35VFSfLzSt" +
                        "+Ks1qzz/wCE37SnxN/Z2/bV+CP7PWu/tiab+218Cv2lbbU9L0PxIJdAuvEPhPxHp0PnKk8ugyyl4LgtG" +
                        "q+aQCHYqB5TF/Z4j4FwGd8K4vMaeWSy7F4Nxbj76hUhJ20U0rOOr07K7fMreLw3x5j8k4rwmW1M0jmWD" +
                        "xiklL3HOnOKvq4N3UtFr3dkuV34/wCGXxE/b8/a1/az/bh/Z28B/tKx/Br4Q/BXxlcRX3xCg0LTdU8Q6" +
                        "dY3F1e2enaNpiSCBFjl+xyySTs3mL5YAb5irenn2ScHcOcOZTmWIwH1jE4iirQ55RhJpRc6k93dcySiv" +
                        "dd9tLrzMgzzjPiTiTN8tw+P+r4bDVnefJGU4puShTgtFZ8rbk/eVlrrZ/Rn7AHxx/aX0P8Aab/aW/YW/" +
                        "ai8dr8Y/E3wSsdM8deAvi8tlb6fPqGiX627BbmOAfMzLfQMpZmZGEiM7gKR8R4ycJ5FVyHAZ9lVH6vTx" +
                        "MpQnSu5KM1fZv8AwyXRNcrSWp9x4McXZ9Rz/H5Bm1b6xUw0YzhVsouUHbdLf4ovq0+ZNvQ/YOv5oP6cC" +
                        "gAoAKACgAoAKAPmP9rD9k/4W/tf/C2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVl" +
                        "TVyoysfxWfHT9jT47/Ab472/wCz7r/g+51/xlr9ylp8PJvDUEtxb+Jbe4l8qCewIGWDHh1PzRtkPgg1i" +
                        "0dKkmj+pb/gm3/wTb8NfsgeGoPiD8QYLbxL+0R4ltvL1XVY9s9t4ctp1+awsG5Bcg4nnH3/ALq/JkvpG" +
                        "NjCc7n6s1ZmFABQAUAFABQAUAfzD6V+yd8XU/4K66t8MX8DaqP2Xl+Jkf7bh8WDTr1dDGsQ+H5dVjRLg" +
                        "p9nLf2hdC3MecgKcDFf3viPEXLX4bRxXto/2h9W+qcvMuflc1F6X5vgXNfzP4Bw/hxma8S5YX2Mv7P+s" +
                        "/W+blfJzKDktfh+OXLbfQ9N/wCC23wb+Ndz8Sfgf8YPgB4I1fxp4i8eeFfF/wCzH8RLbwlp15fuujavF" +
                        "i2Wf7HG+yNjqV0dz4UMB1yceD9FTifKo4HF4PMasKcKVWliIc0kvei9bXau/chotbHvfSx4WzWWPwmNy" +
                        "6jOpOrSq4efLFy92S0vZOy9+er0ukfRf/BQT9hLxh4r/YI+BXwl+B3hu18deL/2T7rwt4j0XwNdpG8Xi" +
                        "W10LSpNJvbfyptiSvOJfPZWIMm1lGWcA/E+DPi7hsPxhi8Zj6jpUscqkXNb03OSlF3WyVuVNbXT2R9x4" +
                        "0+D+KxPBuDweApqrVwLpyUHtUUIuMlZ2u3fmae9mt2fMvg/4z/8ExPEFrouhav/AMEt/Eml/F66Ntp+v" +
                        "/CXSvhCl/f2V9L+7kVXCw+ZCkiuA5VXKqT5YOVH3mZ8LcfUZTqQ4gpywyu1UeJsmunezatpdq7+LqfBZ" +
                        "XxV4f14wpz4eqRxTspUlheaSfXtdJ31sm0vhT0P6KNG0fSvD2kaVoGhadDo+h6HbQaPo2k6bGsNva2lt" +
                        "EsEMMUaAKqIihVUDAAxX8T4rE1K9WVSpJynJttvVtvVtvu2f29hcLToUo06cVGEUkktEktEkuyWx+UH/" +
                        "BOvwV4y8L/tSf8ABULWPEvhLU/Duk+LviVbar4U1TXbC6tLfVLUS6sTNaSXCIs8Y3r80ZI5HPNf0V42Z" +
                        "rhcRw/w/ClUjOVPDtSSabi7Q0kk9H5M/nHwPyrFYfiHiCdWlKEamITi3FpSV56xbWq80cz+wt4F8b+Hv" +
                        "+CjX/BTjxR4g8HarofhnxbqXh2Xwr4i1jT7u2sdTSJr3e1pcTxrHMF3DJRjjNd3i3m+Er8EZBSp1YyqU" +
                        "4z5oqSbj8PxJO6+ZweEOT4uhxxn9WpSlGnUlDlk4tKXxfC2rP5Hmfw1+HXx0tf2+v8AgrX4j8B+F9V8O" +
                        "+IPGnga3074J+NtTsbi00278Qjw9BFZNbXlykcEhjuQu7a+Bg5xivez3O8olwdw5SxFSM4U6zdWCaclD" +
                        "nfNeKu1eN+h4OQ5Hm8eMuJKuHpyhOpQSpTaai58i5bSdk7St10Pz/8AgVrHwk8MfsTfE/8AZut/2GPGP" +
                        "jb/AIKDeMNH8aeD/HGs674FN1qlrqOtR6hbR6rNrWqJ5lrBbW0oKou1jKhABLmU/snF2GzLEcVYfM3m9" +
                        "KnktOdKUEq1ouMeVuCpx0k5SW7uuV+XKfi/CGKy3D8J4jK1lFapnVSFWM26N5KU+ZKbqS1ioxeys+Zba" +
                        "8z9K/aB+EXxY1X/AIIWfsufD3S/hh4i1Lx9o/iW1udW8D2Gi6lNrFrGmo+IizTWccJmRQJFyWQfeHqK8" +
                        "Pg3iXLqfi3mGJniKaoypu03OKi/dpbSvZ7Pr0Pe404ZzKp4Q5fhoYeo60aivBQk5L3qu8bXW66dT6m8Z" +
                        "fBXxl/wSz/al8JfGr9mP4c634x/Y4+Of2LwD8e/gp8P7PUdbvPDl/ZwFLfV7S3hE87gKGlBIbJ82JmXz" +
                        "Yiv57lnFWF8QeH6mBzSvCnmeGvOjVm4wU03rCTdktbLp9mST5ZX/Q804UxXh5xDSx2VUJ1MrxNoVqUFK" +
                        "bhJLScUrt6XfX7UW1zRt5F8bPhL4C/Zs/bl+Nvx2/aP/ZKuv2pf2Uv2oYNK8YeGviPovheLxNeeDtZit" +
                        "ws0M9tKqtBFKZHLZ2l0ERXe6Oo+l4V4jxme8JYTAZZmSwWY4JyjKDqezVWN9Gmt2rK29nzXsmmfM8V8N" +
                        "4PIeLsXmGZ5a8bl2NUZRqKn7R0pJapp7J3d9rrltdpo/Qf9hfXv2J/H3xB8V6/+y/8Ashal8Gr/AMO6T" +
                        "FHJ8WdY8ADwrY6jb6hMjSWVpdt80jjy0eRCFyMEbgMj8Y8W8HxVg8FTp5rmUcQpy/hqt7RxcVpKUem7S" +
                        "evZ2P2vwixnCmNxtSplWWSw7hH+I6Ps1JSesYy6vRNrTurnRf8ABXvwr4o8bf8ABO79oXwx4M8N3/i7x" +
                        "Lqf/CJ/2b4e8MWdxf31x5PjnRriTyoLRJJH2Rxs7YU4UEngGuL6NeY4fCca4KrXqRp017S8pNRSvRqJX" +
                        "bsldu3qdv0mMuxGL4IxtKhTlUqS9naMU5N2rU27JXbsk36H1z+zNp9/pP7N/wCz7pWq2U2manpngjwpp" +
                        "+pabqEbwz288Og2sckckcgDI6MCGUgEEYNfm3HlaFTPMbODTi61RprVNObs0+qZ+lcA0Z08iwUJpxlGj" +
                        "TTT0aahG6a6NH5r/wDBC7wL43+Hn7FWqaD4/wDB2q+B9dfxvruoJovjDT7vTLswSafpqpIIb2ON9jFCA" +
                        "2MHB9K/dPpbZvhMbxVGph6sakPYwV4yUlfmnpdNq5+EfRDyfF4LhSVPEUpUp+2m7Si4u3LDWzSdj9lq/" +
                        "mA/qQ/I7/giV4K8ZeAf2FtB8PeO/CWp+Ctfj8S+IruTQ/FthdabeLFLcRlHMN5HG4VgODjBr+kPpV5rh" +
                        "cZxdOph6kakPZwV4tSWz6ptH81fRPyrFYLhCFPEUpU5+0m7Si4u110aTPg74QfCP9piD9lz/gsVoXw18" +
                        "Fa/4a+Jnjzx/rOofD+G407ULG81nSZNWle/GmeYkbztcWBmjhMWdzMoGSRX6/xLxJkL4g4YqYqrCdClQ" +
                        "ip+9FqMuVcvPvblnyt32Sdz8e4Z4az9cP8AFFPC0qkMRVrzcPdknOPM+bk2vzQ5krbtqx82+ONX+CHjj" +
                        "/gnFP8As3fsufsL+Lbj9omHRPD0fxo8at4DaO/0a+0bU9P1bV57nWJomubmS6mtdkMEZyY5AAqBBHX3O" +
                        "U4bNsJxwszzXN6SwXPP2UPbaSUoyjBKCfLFRTu5Pqt3fmPhM2xOU4vgZ5ZlOUVXjlCHtZ+x96DhKMpt1" +
                        "GuaTk1aMV0eyS5T6L/4KJX/AI38EeAf+CJup+FfBs/iP4keENR8LX/hz4fXgazub/W9PsvC8lvpzi4Cm" +
                        "J5Z41iO8DaTz0r4nwUo4TF4ziqNWqoUKkailNapQk615K26Sd9Nz7jxurYvCYPhOdGk516cqbjB6Nziq" +
                        "NoO+zclbXY9b/a9/bl8Rfts/BXXf2Qf2Xv2b/iK3xp+MTWPhTxza/ErwzNoll4QsBexT3h1G4mkeONv3" +
                        "flF2wihi27cFU/N+GvhLQ4VzWGc5rjsP9Vw95Q9nUU3Vdmo8qSu9723drWtdr6XxM8Xa/FmVTyXKcBiP" +
                        "reItGftKbgqSunLnbdlta+yu3e9k+H/AOCgvhvxd+yr49/4IveEvhZ4Vn+LPiv4CR+INB0vwppAWK78R" +
                        "/2BpvhWC8jgDA4nuooZSgCk72GFJwD63gzjsNxDg+Ka2LqKhTxTg3J7Q55VnFvyi2r+S1a3PJ8acBieH" +
                        "cZwrRwlN16mF50orepyRoqSXnJJ283onsb/AO2f+114h/4KLfCeH9i79lX4A+O28X/FfVNDg+K/iD4pe" +
                        "G7jQ9N8H6dpup2+sN9undpVSRZ7aMuc7dgYIXdlU8fhd4bUeCcxed5tjKHsqEZ+zjTmpyqylFx91aXVm" +
                        "7db2bsk2dnin4l1+OMtWR5Rgq/ta8oe0lUpuEaUYyUveetndK/S10rtpEf7av7J1n+z7+0h+z5+0rq/7" +
                        "N0v7XH7MvhbwFpn7Pnxj8C6fo8euavph0K2ktrPWY7OQkH90sQ3t8q7HR3TzEYPws8RZZ1keNyyGOWBx" +
                        "868q1KblyRlztOVNy9b6bu6aT5WifFXw4jkue4LNJ4B4/AQoRoVYKPPKPImo1FH0trsrNNrmTPoz9k3x" +
                        "j/wTp+Kfxt8G2X7O/7D2p+E/F2lx3fiez+Ld58M00PS9AmsYpBtl1F+Yp3YGOPapBbK7s4B+I8Rss42y" +
                        "/KqssyzaM6UrRdNV+eU07bR6pbvrbWx9z4b5pwPmObUo5blEqdWN5Kq8PyRg1fefRt6LpfS5Z/4JweBf" +
                        "G/hb9tX/gq/r3ifwdqvhzQvGXjfQNQ8Ia1r2n3dnaarBHqHidnks5riNEnRRMhLRkgbl9RUeOGb4TEcK" +
                        "8O06VWM506M1JKSbi+WjpJJ3T0e/Zl+BeT4vD8V8R1KtKUIVK0HFuLSkuatrFtWa1W190dL8HvBXjKx/" +
                        "wCCxv7W3jm98JanZ+Cta+GvhrStG8YXVhdR6Xd3US6Lvhhu3QQySL5bblViRg5HBrh4mzXCz8MctoRqR" +
                        "dWOIqNxuuZJ+01cb3S1Wtjv4YyrFQ8UMyxEqUlSlh6aUnF8ra9ndKVrN6PRM+k/2Gv2wNf/AGxvBHj7x" +
                        "hr/AMBdb+As3grxDceB7bR/GU0lw1+kEEcpmV5bOyKyIX2SxBWCNgb2zx8L4s+GlHhjF0aNPGQxSqU1O" +
                        "8Va121b4paPdO6uuiPvPCPxNrcUYStWqYOeFdOo4Wk73sk7/DHVbNWdn1Z9vV+UH6yFABQAUAFABQAUA" +
                        "ZF54f0HUdV0bXdQ0S0vtc8O/aP+Ef1m8toZbuw+2RiGf7PM6l4vNQBX2EbhwcigDXoAKACgAoAKACgAo" +
                        "AKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoA/PX9tL9kDxv8AtL/F79iX4ieFPE2la" +
                        "Dpn7MXj20+K/i2x8Qm7E+oWdvqmlXzQ2n2aGVfNK2DgeYVGSOeuP2jwt8S8JkOWZrhq1OUpYyg6cXG1o" +
                        "txmryu1p7y2uz8U8VfDLF59meU4mjUjGOCrqpJSveSUoO0bJ6+697LY/Qqvxc/az4N/ag/ZR8ZfHP8Aa" +
                        "Y/Yg+N3h7xHpmkaB+y9rHiXxH4u0nWTdC81CLWotLjiWz8iKRNyGxbd5jKORjPNfr/APiJhcpyHNsDUh" +
                        "KU8bCnGLVrR5HO/Ndp68ytZM/HfEDw5xWb5/lGPp1Ixhgp1JSTveSmoW5bJrTld7tH3lX5AfsQUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQB//2QtAAAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uR" +
                        "HJhd2luZywgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM" +
                        "2Y1ZjdmMTFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAA" +
                        "A8DAAAAWsEAAAL/2P/gABBKRklGAAEBAQCWAJYAAP/uAA5BZG9iZQBkAAAAAAH/4RGWRXhpZgAATU0AK" +
                        "gAAAAgABwESAAMAAAABAAEAAAEaAAUAAAABAAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAA" +
                        "AAcAAAAcgEyAAIAAAAUAAAAjodpAAQAAAABAAAAogAAAMIAlgAAAAEAAACWAAAAAQAAQWRvYmUgUGhvd" +
                        "G9zaG9wIENTNSBXaW5kb3dzADIwMTE6MDE6MTggMDk6NTE6MDYAAAKgAgAEAAAAAQAAAWKgAwAEAAAAA" +
                        "QAAAIEAAAAAAAAABgEDAAMAAAABAAYAAAEaAAUAAAABAAABEAEbAAUAAAABAAABGAEoAAMAAAABAAIAA" +
                        "AIBAAQAAAABAAABIAICAAQAAAABAAAQbgAAAAAAAABIAAAAAQAAAEgAAAAB/9j/7QAMQWRvYmVfQ00AA" +
                        "f/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMD" +
                        "AwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACEQEDEQH/3QAEAAr/xAE/A" +
                        "AABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAA" +
                        "QQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh8WNzN" +
                        "RaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3R1dnd" +
                        "4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCk" +
                        "kNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWp" +
                        "rbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMirKqDekt3+m7a0N2iPQdV" +
                        "YD6r7bP8Mx//gf6NXfrD1Y9I6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5fVukMzMuttdjnvaCyQ1wa" +
                        "7Z6jWuL3M/c+mn+1L2/d/Q4uD/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkklKSSSSUpJJJJSkkkklKSS" +
                        "SSUpJJJJT//0PVVn9a61idHxPXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGxPXv99j5bRQ0+6x3gP3WN" +
                        "/wln+DXG9M6Z1H619Rfn57y3FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzfqv067KcHXZeTbc4NENaK" +
                        "zdVXUz+QxjmfSRerDqXS+ifV/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2ekrX+MHBqo6V08Y7BVRj" +
                        "2mllbRAAcxxb/56XQ9AdTl/V3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+WwT4eICc+OJ2PFxR/6DRlj" +
                        "OTmc0b4SYQ4ZDcV6v8ApsPq99YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u9Czvqxmt6t0hzhiB2h1c" +
                        "ai4/wAxf/pcWz6LHu/4uz9L6VtnXfV76w43W8Xewenk1QMigmS0n85v79T/AMx6h5jl4iPvYTxYZf42O" +
                        "X7smXBnkZHFlHDlj/i5I/vxS9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/OV6q1l1TLqzLLGh7T5OG5" +
                        "qwfrx1HL6b0ivIw3NZf67Wtscxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3TcoVvysWqwNcyvaXltll" +
                        "ri99T9vtrTcfKzyREhKMQeL5j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh10WZVdljL3lk1hp2wNxc" +
                        "4Pcz/orm8jrH106E4W9XY3Lw7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXHysrMbndLvcX4Nm1jLILd" +
                        "36ZlNde2xjf0Vn8v/RqbDyV5I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9aX9V9NSXK1dT+sPQsPKz" +
                        "frHbXks9jMSmvaHutO727666msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9NEMZub29Jt1dz9rvzPtN" +
                        "rP8xRDlJGz7mMQB4fcMvRKXaLIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy+pWB7MYh7WsYGhjNr7Ht" +
                        "bt97/o/no/1X+suT1G63pnU6vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw19I61YGteWM3BrxLTFdh" +
                        "2vb+cxPjgMcWeMwOMe1wy3+eW8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1zB+24jXsYHmtzbNu4ObB" +
                        "/wbrGfRc389aK4jp/1t6hjfVR/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+Yljs/xhZuK3qFOZUGvG6" +
                        "ukGqSDxtApsp/7cvTfucxfHOEAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82nAwr82+fSx2OseGiTDRu9" +
                        "swh9J6nR1bp9PUMcObVdMNdEgtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2OFdljPZYQP5z0LN7Hem7" +
                        "8/+j2f4NVLPrdn4X1Wwcp8ZHUc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRymQmhwn1+3ob14fc4v7vCu" +
                        "PNYwLNj0+5qOnFwf43E9okuKbj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1dz+pZ/TvW6ninEyWvcwt" +
                        "LXM3gRFoqs99f0tn9hNycuYR4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9WT1VozcQxn0s2Bjj7bKwS" +
                        "/0fd7arNzv0Vn9i7/SU5n1T+s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2f8AW7f0v872q5v61fVVn" +
                        "VGOzMNrW57Ww9hgNvaBHp2T7W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3XtAtoHJ31neGt/wCMbuq/6" +
                        "4sT/F51dluLZ0mx36Skm7HB71vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHuskODgdn2TJ3e71d3sqe/" +
                        "wD4qz9J/O5/1h6DcM5/Vfq6XZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnLShkxy5eZ4eI8eOR/Rm1O" +
                        "ZjPHkjngOLhHBkiP0of+gtz63fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qsf8A9br9/wDN6n1Q+q56P" +
                        "U7LyzOfkNDXMBltTJ3eiCPp2bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS0j+br/etd/hbf8ArVX6P" +
                        "+e6ZDPmhGHsYPk/Tn1yy/71OHDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/wA93LPH/i06N/4Uq/8AP" +
                        "WQul+suF07OwasbqIt9GzIqYx9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1RgtOT0h9fTxUwy0uftoo2sd" +
                        "7rNrsp1O/f+ZZ/o0/DlAwiNSJrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6B1FtjQ4DGtcAfFrTYx39" +
                        "l7dy4DPba76ldMfyxmTez4Fxtcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc123+bftcqGL0vomB0p/SLL" +
                        "GXYjQ59rch7CdrnEl9n0NrW2/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCADAwv+txcTifXa/H6r0CrN" +
                        "6dc3Jpx7mvu2GdrXtfXutZ9Ova97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZAj09rr2+1v5jvoLp+m/V/" +
                        "oPSMm70D7+oN2Ci2wPBYNzjXVW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte0NL6XOZYaWWet7PZu/qf" +
                        "4NTY8+OMDCMpxhE8UcnBGWk/wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/VOvF6nX1dnVDnlm9rjAd" +
                        "uJb6Xuu9Sz6Cx/qW9jekdcpLgLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDdXZYXWPLw/3ACvb+jDWN2" +
                        "bViiroJ6lX1Srp2ZZZ1Wl5pYzYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2OYz92MjKekOGXDGH80fc" +
                        "4ZR9P8AWTLCIDFKIEPn4o3KY/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/AFCytzHVOBbscxrXu3b/A" +
                        "P0mpt+reNTU7P8Aq915tNZAJ9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC/GyWPyLH5Dmlph9NMPf7" +
                        "Ntu+2n0fTZ/g/8ASqjb9Qfq07K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzxTgJyM/lGTHOH9z9FaeXl" +
                        "wwHDCZjER+b28kJf33PxOvdQ6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RPaz9JWnx7ugN+pvTKetNe" +
                        "WXW3Cl9QJfW4W3b7w5v5tbXe/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWuGz13vJdZ29r/oJUdE6I7" +
                        "pY6LtblY2Mfcx7tz2ucTb6jns2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH7vrXjBk0uUZy9s4/V6hx" +
                        "cfHX+K8s76vfYKjndB6/VXjkz+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOtxnhvrNG0PDhu9zR7PUZ+" +
                        "fs/kKkPqJ9V3N+1NyrTRq7cLayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx/pN2Gd27/CF5LnWbv33O" +
                        "S5jNjljMbOSd6TlAY5QroZfpJ5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1p+qzepsdm4TQ3qDW+5mg" +
                        "be0D+bfPtbc3/A3f9at/R/zM/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07bm/n3/8AW6f0f870CSSlJ" +
                        "JJJKafWMSzM6bfRV/PFu+iTA9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppvvpNbfz2faepZFv/AKDUr" +
                        "pElYxe77Z4a4bld9+H+X+GwZfa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZuoNL/c1+6r7PXVlWbnM9V" +
                        "r839Kz1rvz7LLE1f1enJw7bcWl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6JJSS97jntdHi4eL93Jt/z" +
                        "/8ADWR9rgjd8NiuKv3oPHv6F1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLcf7E3F/P9X1kZ/QOrF2dt" +
                        "2OGeM2qtz3a44ufZdTbRtH81my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7Onz/ACx3/dcfoGBZjOvut" +
                        "ptx7LW1MLLDj7f0QcB6Tensqr2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9OqczK9wO0mj0Pb+/wDpFvJKA" +
                        "+5xT+XbWrqvan8v/U2UcHBC+KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCwBwFljqdvsd+9Wyz3rJb0" +
                        "frTn4DbqgTinBcbWuqiKQxuX69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8IrhqvTx33/RRk9viN8V3r" +
                        "w08Z0fDdbg4uRXhsrqxrM2+3Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9JYfRczN6Vj/ZcWvBA6YKD" +
                        "aHNH2g2nHv2fo2vf6Hp0W+o/Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn73p/fYo+3wizLh4ddI/uw" +
                        "/d9X/dvOYvQ3vsx7bsezb9t+0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0OkUZWExuEcZteMHZNjbGvb" +
                        "tYHZD34uO2kfmuxrd//AAXp+ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/o8Vv//Z/+0Y0FBob3Rvc" +
                        "2hvcCAzLjAAOEJJTQQlAAAAAAAQAAAAAAAAAAAAAAAAAAAAADhCSU0EOgAAAAAAkwAAABAAAAABAAAAA" +
                        "AALcHJpbnRPdXRwdXQAAAAFAAAAAENsclNlbnVtAAAAAENsclMAAAAAUkdCQwAAAABJbnRlZW51bQAAA" +
                        "ABJbnRlAAAAAENscm0AAAAATXBCbGJvb2wBAAAAD3ByaW50U2l4dGVlbkJpdGJvb2wAAAAAC3ByaW50Z" +
                        "XJOYW1lVEVYVAAAAAEAAAA4QklNBDsAAAAAAbIAAAAQAAAAAQAAAAAAEnByaW50T3V0cHV0T3B0aW9uc" +
                        "wAAABIAAAAAQ3B0bmJvb2wAAAAAAENsYnJib29sAAAAAABSZ3NNYm9vbAAAAAAAQ3JuQ2Jvb2wAAAAAA" +
                        "ENudENib29sAAAAAABMYmxzYm9vbAAAAAAATmd0dmJvb2wAAAAAAEVtbERib29sAAAAAABJbnRyYm9vb" +
                        "AAAAAAAQmNrZ09iamMAAAABAAAAAAAAUkdCQwAAAAMAAAAAUmQgIGRvdWJAb+AAAAAAAAAAAABHcm4gZ" +
                        "G91YkBv4AAAAAAAAAAAAEJsICBkb3ViQG/gAAAAAAAAAAAAQnJkVFVudEYjUmx0AAAAAAAAAAAAAAAAQ" +
                        "mxkIFVudEYjUmx0AAAAAAAAAAAAAAAAUnNsdFVudEYjUHhsQGLAAAAAAAAAAAAKdmVjdG9yRGF0YWJvb" +
                        "2wBAAAAAFBnUHNlbnVtAAAAAFBnUHMAAAAAUGdQQwAAAABMZWZ0VW50RiNSbHQAAAAAAAAAAAAAAABUb" +
                        "3AgVW50RiNSbHQAAAAAAAAAAAAAAABTY2wgVW50RiNQcmNAWQAAAAAAADhCSU0D7QAAAAAAEACWAAAAA" +
                        "QACAJYAAAABAAI4QklNBCYAAAAAAA4AAAAAAAAAAAAAP4AAADhCSU0EDQAAAAAABAAAAHg4QklNBBkAA" +
                        "AAAAAQAAAAeOEJJTQPzAAAAAAAJAAAAAAAAAAABADhCSU0nEAAAAAAACgABAAAAAAAAAAI4QklNA/UAA" +
                        "AAAAEgAL2ZmAAEAbGZmAAYAAAAAAAEAL2ZmAAEAoZmaAAYAAAAAAAEAMgAAAAEAWgAAAAYAAAAAAAEAN" +
                        "QAAAAEALQAAAAYAAAAAAAE4QklNA/gAAAAAAHAAAP////////////////////////////8D6AAAAAD//" +
                        "///////////////////////////A+gAAAAA/////////////////////////////wPoAAAAAP///////" +
                        "/////////////////////8D6AAAOEJJTQQAAAAAAAACAAE4QklNBAIAAAAAAAQAAAAAOEJJTQQwAAAAA" +
                        "AACAQE4QklNBC0AAAAAAAYAAQAAAAM4QklNBAgAAAAAABAAAAABAAACQAAAAkAAAAAAOEJJTQQeAAAAA" +
                        "AAEAAAAADhCSU0EGgAAAAADSQAAAAYAAAAAAAAAAAAAAIEAAAFiAAAACgBVAG4AdABpAHQAbABlAGQAL" +
                        "QAxAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAFiAAAAgQAAAAAAAAAAAAAAAAAAAAABA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAABAAAAABAAAAAAAAbnVsbAAAAAIAAAAGYm91bmRzT2JqYwAAAAEAAAAAA" +
                        "ABSY3QxAAAABAAAAABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAAgQAAA" +
                        "ABSZ2h0bG9uZwAAAWIAAAAGc2xpY2VzVmxMcwAAAAFPYmpjAAAAAQAAAAAABXNsaWNlAAAAEgAAAAdzb" +
                        "GljZUlEbG9uZwAAAAAAAAAHZ3JvdXBJRGxvbmcAAAAAAAAABm9yaWdpbmVudW0AAAAMRVNsaWNlT3JpZ" +
                        "2luAAAADWF1dG9HZW5lcmF0ZWQAAAAAVHlwZWVudW0AAAAKRVNsaWNlVHlwZQAAAABJbWcgAAAABmJvd" +
                        "W5kc09iamMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAA" +
                        "ABCdG9tbG9uZwAAAIEAAAAAUmdodGxvbmcAAAFiAAAAA3VybFRFWFQAAAABAAAAAAAAbnVsbFRFWFQAA" +
                        "AABAAAAAAAATXNnZVRFWFQAAAABAAAAAAAGYWx0VGFnVEVYVAAAAAEAAAAAAA5jZWxsVGV4dElzSFRNT" +
                        "GJvb2wBAAAACGNlbGxUZXh0VEVYVAAAAAEAAAAAAAlob3J6QWxpZ25lbnVtAAAAD0VTbGljZUhvcnpBb" +
                        "GlnbgAAAAdkZWZhdWx0AAAACXZlcnRBbGlnbmVudW0AAAAPRVNsaWNlVmVydEFsaWduAAAAB2RlZmF1b" +
                        "HQAAAALYmdDb2xvclR5cGVlbnVtAAAAEUVTbGljZUJHQ29sb3JUeXBlAAAAAE5vbmUAAAAJdG9wT3V0c" +
                        "2V0bG9uZwAAAAAAAAAKbGVmdE91dHNldGxvbmcAAAAAAAAADGJvdHRvbU91dHNldGxvbmcAAAAAAAAAC" +
                        "3JpZ2h0T3V0c2V0bG9uZwAAAAAAOEJJTQQoAAAAAAAMAAAAAj/wAAAAAAAAOEJJTQQUAAAAAAAEAAAAB" +
                        "DhCSU0EDAAAAAAQigAAAAEAAACgAAAAOgAAAeAAAGzAAAAQbgAYAAH/2P/tAAxBZG9iZV9DTQAB/+4AD" +
                        "kFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsNDg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAOgCgAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFA" +
                        "QEBAQEBAAAAAAAAAAMAAQIEBQYHCAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDA" +
                        "gQCBQcGCAUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKyg" +
                        "yZEk1RkRcKjdDYX0lXiZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent" +
                        "8fX5/cRAAICAQIEBAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY" +
                        "3M08SUGFqKygwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5" +
                        "vYnN0dXZ3eHl6e3x//aAAwDAQACEQMRAD8A9VSSSSUpYGFkfWd31kyKsqoN6S3f6btrQ3aI9B1VgPqvt" +
                        "s/wzH/+B/o1d+sPVj0jpN2axrX2t2tpY6YL3kMbu2/mtn1HIf1Y6rl9W6QzMy6212Oe9oLJDXBrtnqNa" +
                        "4vcz9z6af7Uvb939Di4P8JZ7sfc9v8ASri/wXWSSSTF6kkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkk" +
                        "kklP//Q9VWf1rrWJ0fE9e/32PltFDT7rHfut/dY3/CWf4NN1vreJ0bE9e/32PltFDT7rHeA/dY3/CWf4" +
                        "Ncb0zpnUfrX1F+fnvLcVp22WNkCAf6Hh/usb/hbf/R/82lK+sfU8rN+q/Trspwddl5Ntzg0Q1orN1VdT" +
                        "P5DGOZ9JF6sOpdL6J9X+odPBZViU7rbRqA+8VPjIr/0NrvUb/X/ANHZ6Stf4wcGqjpXTxjsFVGPaaWVt" +
                        "EABzHFv/npdD0B1OX9XcEECyp+LXW9jgC0wwVWsc0/S+i5i0I5Bj5bBPh4gJz44nY8XFH/oNGWM5OZzR" +
                        "vhJhDhkNxXq/wCmw+r31hxet4u9n6PJrgZGOTq0/vN/fqf+Y9ay87670LO+rGa3q3SHOGIHaHVxqLj/A" +
                        "DF/+lxbPose7/i7P0vpW2dd9XvrDjdbxd7B6eTVAyKCZLSfzm/v1P8AzHqHmOXiI+9hPFhl/jY5fuyZc" +
                        "GeRkcWUcOWP+Lkj+/FL13rmJ0PB+25bXvrLxWG17Zkgu/wjq2fRY785XqrWXVMurMssaHtPk4bmrB+vH" +
                        "UcvpvSK8jDc1l/rta2xzGvLZZaS6sWh7Gv9uz6P0Fk9T6z9ZX9XwundNyhW/KxarA1zK9peW2WWuL31P" +
                        "2+2tNx8rPJESEoxB4vmP+b+a12TmYQkYkSlIcOkR+/8r26yuu/WDF6HXRZlV2WMveWTWGnbA3Fzg9zP+" +
                        "iubyOsfXToThb1djcvDs9rnsDBtJ/0dtLGenb+569PpPWX9aH9XuxcfKysxud0u9xfg2bWMsgt3fpmU1" +
                        "17bGN/RWfy/9GpsPJXkjxyhLHLrCXz/ANWP9Zizc5WORjGQnHpKPy/1pf1X01JcrV1P6w9Cw8rN+sdte" +
                        "Sz2MxKa9oe607vbvrrqayvb9Pf6n0P+3KOPb/jC6pj/ALQx7a8ep4300Qxm5vb0m3V3P2u/M+02s/zFE" +
                        "OUkbPuYxAHh9wy9Epdosh5kChwTMyOLgA9cY95PcLlfqh9Yc/qGN1LL6lYHsxiHtaxgaGM2vse1u33v+" +
                        "j+ej/Vf6y5PUbremdTq9DqOMJIALQ9rSGvlhnZazc3d+Y/+cqWL9RbDX0jrVga15YzcGvEtMV2Ha9v5z" +
                        "E+OAxxZ4zA4x7XDLf55bxl/WWSziWTAYk8BGTiH9yP6Uf6r1nQut4nXMH7biNexgea3Ns27g5sH/BusZ" +
                        "9Fzfz1oriOn/W3qGN9VH9RySMrLdlHGolrWMH6NtjfUZQKvYxrbP5f5iWOz/GFm4reoU5lQa8bq6QapI" +
                        "PG0Cmyn/ty9N+5zF8c4QAlwcUjpKX9Vd97ga4YzmSOOojWMfF6/PzacDCvzb59LHY6x4aJMNG72zCH0n" +
                        "qdHVun09Qxw5tV0w10SC1zqntOwvZ9Nn7ywq+r9dt+rfU7eqYYx8rDY4V2WM9lhA/nPQs3sd6bvz/6PZ" +
                        "/g1Us+t2fhfVbBynxkdRznXNFr2gNArse11jq6vTa52z02MZ/1xNHKZCaHCfX7ehvXh9zi/u8K481jAs" +
                        "2PT7mo6cXB/jcT2iS4puP8A4xnUNzGZdVhcARQ00kkH/rP2b/2YXQ/V3P6ln9O9bqeKcTJa9zC0tczeB" +
                        "EWiqz31/S2f2E3Jy5hHiE4TANHglqE48/GeEwnCxY4xoX//0ez+tf1ZPVWjNxDGfSzYGOPtsrBL/R93t" +
                        "qs3O/RWf2Lv9JTmfVP6z+gWdH6l+iDD6WPa4bC1wOz7Jkt9uyxrvZXZ/wBbt/S/zvarm/rV9VWdUY7Mw" +
                        "2tbntbD2GA29oEenZPtbc1v81b/ANat/R/zKU3vrR0x3U+iZOPW3de0C2gcnfWd4a3/AIxu6r/rixP8X" +
                        "nV2W4tnSbHfpKSbscHvW8zY0f8AFXO/8GUfqp9aHse3pHVXODg70se6yQ4OB2fZMnd7vV3eyp7/APirP" +
                        "0n87n/WHoNwzn9V+rpdkVPsey5uI6X03615DW+md+y3c71P9H/xKuctKGTHLl5nh4jx45H9GbU5mM8eS" +
                        "OeA4uEcGSI/Sh/6C3Prd9azc5/RekzY6w+jkWsG4uLvYcXHaPpvf9Cx/wD1uv3/AM3qfVD6rno9TsvLM" +
                        "5+Q0NcwGW1Mnd6II+nZu/nbP+2v9JbD6p/VJnSWNzc1rX9Qc2GtEFtLSP5uv9613+Ft/wCtVfo/57pkM" +
                        "+aEYexg+T9OfXLL/vU4cMpT9/N8/wChDpij/wB88p/jI/5Bq/8ADLf/AD3cs8f+LTo3/hSr/wA9ZC6X6" +
                        "y4XTs7Bqxuoi30bMipjH06Ftjz6NTnH/RudZ6X0f8IqLmfV49TPVGC05PSH19PFTDLS5+2ijax3us2uy" +
                        "nU79/5ln+jT8OUDCI1ImssdBpeXhjBZlxE5jKxvjl4/q/VJ0vrHWyzoHUW2NDgMa1wB8WtNjHf2Xt3Lg" +
                        "M9trvqV0x/LGZN7PgXG1zB+D16Tc3Ez6MnDL22Me11OQ1jhubvG1zXbf5t+1yoYvS+iYHSn9IssZdiND" +
                        "n2tyHsJ2ucSX2fQ2tbb9B/76Zy+cYogEEyGQT4f6vDKBX8xh9yRIIAMDC/63FxOJ9dr8fqvQKs3p1zcm" +
                        "nHua+7YZ2te19e61n069r3s9j2rP6Z0nE6hiMvb9Y7aXbQLKLH7XVkCPT2uvb7W/mO+gun6b9X+g9Iyb" +
                        "vQPv6g3YKLbA8Fg3ONdVb/dYz3e7f6qy2fVD6r9SsstqF2JtutxxS17Q0vpc5lhpZZ63s9m7+p/g1Njz" +
                        "44wMIynGETxRycEZaT/AEZRl/0mLJhnKfGRGUpDhlDjlH5f0oyim6H9U68XqdfV2dUOeWb2uMB24lvpe" +
                        "671LPoLH+pb2N6R1ykuAt9Iu9M87Qyxhd/n+1dZ9XukdL6Vi219NsN1dlhdY8vD/cAK9v6MNY3ZtWKKu" +
                        "gnqVfVKunZllnVaXmljNgrs9av1sl7Weux9d3ou/SbnMZ/o/wBL+kTY5jP3YyMp6Q4ZcMYfzR9zhlH0/" +
                        "wBZMsIgMUogQ+fijcpj9cODi4vU5nQ7+jU/Uy39sVutxrM0sY2sEv8AULK3MdU4FuxzGte7dv8A/Sam3" +
                        "6t41NTs/wCr3Xm01kAn1LPTj879PdSWbf8Ai7sVdDjdM6F0zG/5v2ML8bJY/IsfkOaWmH00w9/s2277a" +
                        "fR9Nn+D/wBKqNv1B+rTsr0/XurtfLmY4tYTtH7nq12X7P7aeOYhxTPFOAnIz+UZMc4f3P0Vp5eXDAcMJ" +
                        "mMRH5vbyQl/fc/E691Dqf1f63iZzm3vxKCW5LAAHB29sO2Btbv5v9E9rP0lafHu6A36m9Mp6015ZdbcK" +
                        "X1Al9bhbdvvDm/m1td7/wCc3/6GxdLR0boNPT7+kY4Yyq+sm8NfNha4bPXe8l1nb2v+glR0Tojuljou1" +
                        "uVjYx9zHu3Pa5xNvqOeza+q13qOd7PTUZ5jFrwxnCPuDJUPQRHg4OIfu+teMGTS5RnL2zj9XqHFx8df4" +
                        "ryzvq99gqOd0Hr9VeOTP6S0Vt/65ZUXUWu/4zGW79S+u5vWMK77aA63GeG+s0bQ8OG73NHs9Rn5+z+Qq" +
                        "Q+on1Xc37U3KtNGrtwtrLIbO/8AS+nu2s2+79Kul6dg4GBito6fW2rH+k3YZ3bv8IXkudZu/fc5LmM2O" +
                        "WMxs5J3pOUBjlCuhl+knl8OSOQHTHCtYRmZxnfYfov/0vVUkkklPOfWn6rN6mx2bhNDeoNb7maBt7QP5" +
                        "t8+1tzf8Dd/1q39H/Mz+qf1cf0il2RkuP2zJaBZU1x9Oto+jXtafTtub+ff/wBbp/R/zvQJJKUkkkkpp" +
                        "9YxLMzpt9FX88W76JMD1ayLsf3f8fXWsejoGcMzBusLNprN2fwYymm++k1t/PZ9p6lkW/8AoNSukSVjF" +
                        "7vtnhrhuV334f5f4bBl9rjHFfFQ27cTz31b6Pk4NlZyqrGW4+P9mNm6g0v9zX7qvs9dWVZucz1Wvzf0r" +
                        "PWu/PsssTV/V6cnDttxaXbMzNvyXENJLLnZDsYu0/SfTxvb/g/+tLoklJL3uOe10eLh4v3cm3/P/wANZ" +
                        "H2uCN3w2K4q/eg8e/oXWvsGNhir3U00tre11UMfVe+9zbb7GnK2V0tx/sTcX8/1fWRn9A6sXZ23Y4Z4z" +
                        "aq3Pdrji59l1NtG0fzWbLWZv+H9T0P8HV6bOqSUh9/X+b+aV1+8sHs6fP8ALHf91x+gYFmM6+62m3Hst" +
                        "bUwssOPt/RBwHpN6eyqvazf6XqWt9V9bKv9Gg4fSs6pn1fFjAD06pzMr3A7SaPQ9v7/AOkW8koD7nFP5" +
                        "dtauq9qfy/9TZRwcEL4qsVdcV+7D5v8Nyuo9K+29RZbbTXfjsxL6gLAHAWWOp2+x371bLPeslvR+tOfg" +
                        "NuqBOKcFxta6qIpDG5fr2uY7Nuyt3rsr9Oz7L9nf/pPUrt6tJOxe7wiuGq9PHff9FGT2+I3xXevDTxnR" +
                        "8N1uDi5FeGyurGszb7c6WbrGuGVj+g1rf0znPfYx13q/odmNX/Oez0lh9FzM3pWP9lxa8EDpgoNoc0fa" +
                        "Dace/Z+ja9/oenRb6j8lu/1Mt/6C2v1fV7NJTH3eI0I8XFprP8Aeyfven99ij7fCLMuHh10j+7D931f9" +
                        "285i9De+zHtux7Nv237RkVZRocIbi241d1dWE1uN/PPpZ/pf0XqrQ6RRlYTG4Rxm14wdk2Nsa9u1gdkP" +
                        "fi47aR+a7Gt3/8ABen6S00lXze5R4+Hh0quLh/T4eFnxcGnDxXrvw3+jxW//9k4QklNBCEAAAAAAFUAA" +
                        "AABAQAAAA8AQQBkAG8AYgBlACAAUABoAG8AdABvAHMAaABvAHAAAAATAEEAZABvAGIAZQAgAFAAaABvA" +
                        "HQAbwBzAGgAbwBwACAAQwBTADUAAAABADhCSU0EBgAAAAAABwAHAAAAAQEA/+EN0Gh0dHA6Ly9ucy5hZ" +
                        "G9iZS5jb20veGFwLzEuMC8APD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6T" +
                        "lRjemtjOWQiPz4NCjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb" +
                        "2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgI" +
                        "j4NCgk8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5b" +
                        "nRheC1ucyMiPg0KCQk8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6L" +
                        "y9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhc" +
                        "C8xLjAvbW0vIiB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc" +
                        "291cmNlRXZlbnQjIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtb" +
                        "G5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b" +
                        "3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHhtcDpDcmVhdGVEYXRlPSIyMDExLTAxL" +
                        "TE4VDA5OjUxOjA2LTA2OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2O" +
                        "jAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wTU06SW5zdGFuY" +
                        "2VJRD0ieG1wLmlpZDozNDRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5OCIgeG1wTU06RG9jdW1lb" +
                        "nRJRD0ieG1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5OCIgeG1wTU06T3JpZ2luY" +
                        "WxEb2N1bWVudElEPSJ4bXAuZGlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBkYzpmb" +
                        "3JtYXQ9ImltYWdlL2pwZWciIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9ma" +
                        "WxlPSJzUkdCIElFQzYxOTY2LTIuMSI+DQoJCQk8eG1wTU06SGlzdG9yeT4NCgkJCQk8cmRmOlNlcT4NC" +
                        "gkJCQkJPHJkZjpsaSBzdEV2dDphY3Rpb249ImNyZWF0ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5pa" +
                        "WQ6MzM0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHN0RXZ0OndoZW49IjIwMTEtMDEtMThUM" +
                        "Dk6NTE6MDYtMDY6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2lu";
                    resourceString += "ZG93cyIvPg0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9I" +
                        "nhtcC5paWQ6MzQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHN0RXZ0OndoZW49IjIwMTEtM" +
                        "DEtMThUMDk6NTE6MDYtMDY6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDU" +
                        "zUgV2luZG93cyIgc3RFdnQ6Y2hhbmdlZD0iLyIvPg0KCQkJCTwvcmRmOlNlcT4NCgkJCTwveG1wTU06S" +
                        "GlzdG9yeT4NCgkJPC9yZGY6RGVzY3JpcHRpb24+DQoJPC9yZGY6UkRGPg0KPC94OnhtcG1ldGE+DQogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgPD94cGFja2V0IGVuZD0ndyc/Pv/iDFhJQ0NfUFJPRklMRQABA" +
                        "QAADEhMaW5vAhAAAG1udHJSR0IgWFlaIAfOAAIACQAGADEAAGFjc3BNU0ZUAAAAAElFQyBzUkdCAAAAA" +
                        "AAAAAAAAAABAAD21gABAAAAANMtSFAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAEWNwcnQAAAFQAAAAM2Rlc2MAAAGEAAAAbHd0cHQAAAHwAAAAFGJrcHQAAAIEAAAAF" +
                        "HJYWVoAAAIYAAAAFGdYWVoAAAIsAAAAFGJYWVoAAAJAAAAAFGRtbmQAAAJUAAAAcGRtZGQAAALEAAAAi" +
                        "HZ1ZWQAAANMAAAAhnZpZXcAAAPUAAAAJGx1bWkAAAP4AAAAFG1lYXMAAAQMAAAAJHRlY2gAAAQwAAAAD" +
                        "HJUUkMAAAQ8AAAIDGdUUkMAAAQ8AAAIDGJUUkMAAAQ8AAAIDHRleHQAAAAAQ29weXJpZ2h0IChjKSAxO" +
                        "Tk4IEhld2xldHQtUGFja2FyZCBDb21wYW55AABkZXNjAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAA" +
                        "AAAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAA81EAAQAAAAEWzFhZWiAAAAAAAAAAAAAAAAAAAAAAWFlaI" +
                        "AAAAAAAAG+iAAA49QAAA5BYWVogAAAAAAAAYpkAALeFAAAY2lhZWiAAAAAAAAAkoAAAD4QAALbPZGVzY" +
                        "wAAAAAAAAAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAAAAAAAAAAAAAWSUVDIGh0dHA6Ly93d3cuaWVjL" +
                        "mNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAAL" +
                        "klFQyA2MTk2Ni0yLjEgRGVmYXVsdCBSR0IgY29sb3VyIHNwYWNlIC0gc1JHQgAAAAAAAAAAAAAALklFQ" +
                        "yA2MTk2Ni0yLjEgRGVmYXVsdCBSR0IgY29sb3VyIHNwYWNlIC0gc1JHQgAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAABkZXNjAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xA" +
                        "AAAAAAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAdmlldwAAAAAAE6T+ABRfLgAQzxQAA+3MAAQTCwADXJ4AAAABWFlaI" +
                        "AAAAAAATAlWAFAAAABXH+dtZWFzAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAACjwAAAAJzaWcgAAAAA" +
                        "ENSVCBjdXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgALQAyADcAOwBAAEUASgBPAFQAWQBeAGMAa" +
                        "ABtAHIAdwB8AIEAhgCLAJAAlQCaAJ8ApACpAK4AsgC3ALwAwQDGAMsA0ADVANsA4ADlAOsA8AD2APsBA" +
                        "QEHAQ0BEwEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGpAbEBuQHBAckB0" +
                        "QHZAeEB6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2AsECywLVAuAC6" +
                        "wL1AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kEBgQTBCAELQQ7BEgEV" +
                        "QRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWWBaYFtQXFBdUF5QX2BgYGF" +
                        "gYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdhB3QHhgeZB6wHvwfSB+UH+AgLCB8IM" +
                        "ghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6Cc8J5Qn7ChEKJwo9ClQKagqBCpgKr" +
                        "grFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMMXAx1DI4MpwzADNkM8w0NDSYNQA1aDXQNj" +
                        "g2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9BD14Peg+WD7MPzw/sEAkQJhBDEGEQfhCbELkQ1" +
                        "xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQSoxLDEuMTAxMjE0MTYxODE6QTxRPlFAYUJxRJFGoUi" +
                        "xStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJFmwWjxayFtYW+hcdF0EXZReJF64X0hf3GBsYQBhlGIoYr" +
                        "xjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEadxqeGsUa7BsUGzsbYxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dR" +
                        "x1wHZkdwx3sHhYeQB5qHpQevh7pHxMfPh9pH5Qfvx/qIBUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciV" +
                        "SKCIq8i3SMKIzgjZiOUI8Ij8CQfJE0kfCSrJNolCSU4JWgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3" +
                        "CgNKD8ocSiiKNQpBik4KWspnSnQKgIqNSpoKpsqzysCKzYraSudK9EsBSw5LG4soizXLQwtQS12Last4" +
                        "S4WLkwugi63Lu4vJC9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0Z" +
                        "TSeNNg1EzVNNYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2OnQ6sjrvOy07a" +
                        "zuqO+g8JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC9" +
                        "0M6Q31DwEQDREdEikTORRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRLD" +
                        "EtTS5pL4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIxUnxSx1MTU19Tq" +
                        "lP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbhaB1pWWqZa9VtFW5Vb5Vw1XIZc1" +
                        "l0nXXhdyV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTpZT1lkmXnZj1mk" +
                        "mboZz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4SbmtuxG8eb3hv0XArcIZw4" +
                        "HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjMeSp5iXnnekZ6pXsEe2N7w" +
                        "nwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eDuoQdhICE44VHhauGDoZyhteHO" +
                        "4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7OjzaPnpAGkG6Q1pE/kaiSEZJ6kuOTT" +
                        "ZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+" +
                        "qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9p26n4KhSqMSpN6mpqhyqj6sCq3Wr6axcrNCtR" +
                        "K24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660JbSctRO1irYBtnm28Ldot+C4WbjRuUq5wro7urW7L" +
                        "runvCG8m70VvY++Cr6Evv+/er/1wHDA7MFnwePCX8Lbw1jD1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJu" +
                        "co4yrfLNsu2zDXMtc01zbXONs62zzfPuNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6" +
                        "Nls2fHadtr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLov" +
                        "OlG6dDqW+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw5fFy8f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5O" +
                        "PnH+lf65/t3/Af8mP0p/br+S/7c/23////bAEMAAQEBAQEBAQEBAQIBAQECAgEBAQECAgICAgICAgMCA" +
                        "wMDAwIDAwQEBAQEAwUFBQUFBQcHBwcHCAgICAgICAgICP/bAEMBAQEBAgICBAMDBAcFBAUHCAgICAgIC" +
                        "AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICP/AABEIAIEBYgMBEQACEQEDE" +
                        "QH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMAB" +
                        "BEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJS" +
                        "lNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6w" +
                        "sPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAA" +
                        "QIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJI" +
                        "zNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4e" +
                        "XqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5" +
                        "ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP7+KACgAoAKACgAoAa7pGjySOI44wXkkcgKqgZJJPQCg" +
                        "D8VvGX/AAXQ/ZW8L/Em78G6X4S8TeMvCOmXT6Vf/Enw/Dp32OUo5Qz2dvcXMcs0GeQ7bCRkqpGMxzo0V" +
                        "Jn7B+CfGnhf4j+EPDXj3wTrEXiDwl4vsrfxD4d1qyJ8u4tLqMSxuAwDKcHlWAKnIIBBFWZtHUUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQBg+KtBh8VeGPEfhe4uXs7fxJYXmgz3drjzYkvLd7dnTdxuUPkZ70AfxE+M/8Aglx+294U+" +
                        "JN78ObL4Gar4v2XRsdI8aeGVil0G9gaQrFcC+kdIYEdRuKzsjJnDhTWPKzqVRH9gn7IXwV1T9nb9mn4P" +
                        "fBjXdTj1fXfA2kpZa9fWZLQG+uZ5L64SFmVC0Ucs7JGxUEqASAeK1SOeTuz6QpkhQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAf56/wDwUQ/ax8Z/tU/tR/E/xbdeL73VPh34c1u+0D4QaIbiUWNho2n3B" +
                        "tLaa3gDFI5LhYhNK45LMecAY/2g8FfDrC8PcP4eiqSjXnBSqu2rlJXab3ajflS2SR/il43eI+K4i4hxF" +
                        "Z1XKhCbjSV9Iwi7JpbJytzN73Z/U/8A8EOPi58U/i9+xH9s+KmvXnii78EeLNW+H/g7X/EEs1xeT6Haa" +
                        "dpt5Csk87M8ohmu5oUJPyoioOFr/Pn6WXDeX5bxXy4SCgqlKM5KNklNymnZLRXUU33bb6n+h30SOJcxz" +
                        "PhPmxc3N06soQlK7bgowau3q7OTS7JJdD9ia/mU/p8KACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAC" +
                        "gAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAILq6trK2uL29uEtLO0R7q7u7p" +
                        "1jiiijUuzuzkBVUAkknAFAHyx+118bNP+GP7G3xy+OHhrWIbmHTvBWo6/4I12ylVoJ7vUrAwaXLHIpwy" +
                        "yTXERUjqDxX3vhbw8s24jwWEavGdWPN/hTvL/yVM+A8VeInlPDeOxadpU6UuX/E1aP/AJM0f5ytf7gn+" +
                        "GJ/dv8AA/VbP/gnx/wSQ8I+O30aG41n4e+AF+J11o2ob40uvEniY/2rHbXLrh8fbdRSBiDkKMLwBX+Rf" +
                        "FmHlxn4kVcPzNRq1/Z3XSnT91tdPhi5Lz3P9f8AhLEQ4K8NaWI5E50qHtLPrUqe8k+vxzUX5bH09+xV+" +
                        "2r8Jv23vhNafEX4dXY03X9NEWn/ABE+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurovwPin4WZjwpmLw" +
                        "2JV4O7hNL3Zx7rs19qO6fdNN/oHhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAFABQA" +
                        "UAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAQ" +
                        "XV1bWVtcXt7cJaWdoj3V3d3TrHFFFGpdndnICqoBJJOAKAP5SP+CnP/AAU61L9oDVdQ/Zr/AGb9XeH4S" +
                        "tcDQ/F/jTT5PJl8W3JkEX2aByV26cG4JJHnnk/u/v5SkbwhbVn6Sf8ABa7VYfhn/wAE1fEHgbS5jBZa/" +
                        "qXg/wCGtsMHc9vY3sWphc7WxldMGeRkcZOcH+nPok5YsRxpRm1/ChUl/wCS8n/t39bn8u/S7zR4fgqtB" +
                        "O3tZ04/+Tc//tv9bH8Wnw48JS+PviH4D8Cws6zeNdZ0vwlE0GN4bUr6KzBXIIzmTjiv9U88zJYPBVsQ9" +
                        "qcJS/8AAU3+h/lDkeWvG42jh1vUnGP/AIE0v1P7Qf8Agu3rWo+FP+Ce+peHtA0+4Oj+J/E/hfwhrQ02O" +
                        "V4LXTraSbVY2nKBgkXn2EKBmIG9kGckA/5c/RFwsMRxpGpUkuaFOpJX3cnaLt3dpSenRN7H+qH0v8XUw" +
                        "3BUqdOL5Z1acXbZRV5K/ZXjFa9WlvY/kR/Zh/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307WdOd1aax" +
                        "voVZfMhk2juGVgHQq6qw/0m4+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR/mj4f+IGZcNZlDG4KdprRp" +
                        "/DOPWMl1T+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ABE+HeoSo+o6BqLoT5cmAvmQSbWME" +
                        "4ULIoPCurov+QPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/7E+FPitlvFuWrE4Z2mrKcG/ehLs+6f" +
                        "2ZbNdmml9h1+Zn6cFABQAUAcp448c+D/hp4T1zx34+8R2nhLwf4ah/tDXfEWuSrBbW0W4Rgszd2ZgqqO" +
                        "WYgAEkCgEjyP4DftX/s8/tOQa5N8DPihZePX8Nsia7YW8N7Y3tssjMiSPa6nBbTeWxUhZAm044NJO43F" +
                        "o+h6YgoAKACgAoA+BvEf/BUL9hDwf8AFXXPgr4s/aBtPDXxG8NapN4M1/Sde0bxLaWlpqNvMYJI5dRn0" +
                        "5bJVVxgyGfZ33Yr9iwPgDxficuhjqOCc6E4qcWpU23Fq6aip8+3Tlv5H41jvpBcH4XMZ4GtjVCvCThJO" +
                        "FRJSTs05uHJv15reZ96xSxTxRTwSrNBMqywzRMGR0YZDKRwQR0Nfj8otOz3P2OMk1dapklSUFABQAUAF" +
                        "AHxT/wUY+KvjL4J/sSftE/Er4fao+h+M9A0NbXQNbtiVmsptSv7fSjcQsPuyxLcl427MAe1fqngjw9hc" +
                        "14rwWFxMealKd5Lo1FOVn5O1n5H5T448RYrKeE8disNLlqxhaL6pyko3Xmr3XmfyE/8ErfiF4+8Wf8AB" +
                        "R79nC68U+ONY8S3Oq6tqkuqXHiDU728kuW/4RzUDmVrmRy54HLZr/Sj6QmTYPDcD45UqUIKMY25YpW9+" +
                        "O1lof5nfR3zrGYnjrAutWnNynK/NJu/7uW93qf3ca3rejeGtG1XxF4i1W20LQNCtptY1vW9YmjtrSztL" +
                        "aMzSzTSzFUSNEUszMQABk1/kGf7Dnzx8Ef2y/2Y/wBo7X9b8K/Bb4vad448SeHo2vNT0S3ivrO58hHWN" +
                        "poU1GC3M8SsyhpItygkZPIpJplOLR9N0yQoAKACgAoA+XfjN+2p+y3+z34s0jwN8YvjLpngvxbrSR3Np" +
                        "oVxHe3c8UMudklz/Z8E4to22na85RT2NJtFKLZ9L6fqFhq1hZarpV7Dqel6nDHqGm6lp8iTQXEEyCSOS" +
                        "OSMlXR1IKsCQQcimSW6ACgAoAKACgAoAKACgCC6uraytri9vbhLSztEe6u7u6dY4ooo1Ls7s5AVVAJJJ" +
                        "wBQB/J//wAFRv8AgqNc/HC51v8AZ7/Z71t7T4NWjtp/jnxzp7NHL4rljbDQQMMFdOUjk9Zzyf3eA+UpH" +
                        "RTp2Pya/Zu8AeJ/id8ePhN4L8I+Gp/Fusarr2ludF0+LzS9rBeRz3DyZwqxRxIzyOxCqoJJAFSi5PQ/p" +
                        "I/4OHp54f2J/hvHFM8Ud18T9EguUjYqJEHhbxFKFYDqNyK2D3APav7E+hXBPiqvdbYaf/pykfxj9NqbX" +
                        "ClBJ74mH/puqfy0fsTW0F5+2Z+yPaXUK3FrdfE7wFbXMEoDI8b+KrFWVgeoIODX+gnirNx4XzJp2aw1b" +
                        "/03I/z08J4KXFOWJq6eJo/+nIn+iv4w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoUeORHB" +
                        "BBB/DqOa/xMyzM8RgsRCvQm4VINOMk7NNbNM/3AzPLMPjcPOhXgp0ppqUWrpp7po/iJ/wCCof8AwS88U" +
                        "/sWeKbj4kfDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/8AVvwB8fsPxTh1hsS1D" +
                        "HwWq2VRL7UfP+aPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/wAWdD+L/" +
                        "wAINcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD9h4+4By7iTLp4PGQvB6pr4oy6Si+jX" +
                        "3NaO6bR+N+H/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/x" +
                        "E+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurov+QPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/7E+" +
                        "FPitlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFABQB+X3/BXfwN42+Jf7IU/gP4eeHL3xd4u8T" +
                        "+KfDun6T4c8PwvPc3TCeSYgIn8KhC7MeFALEgDNTPYum9T4A/4JOfsJftc/s0/tMap8QvjJ8LpPAvgfV" +
                        "PCeqeGn1Ia94dvvNurm+sLqGF7fStQuZufILfMmAV5IOKmMWmXUmmj+kCtDEKACgAoAKAP87T/gol/yf" +
                        "X+1p/2PviP/ANOMlf7XeCn/ACSOW/8AXin/AOko/wARPG7/AJK/Mv8Ar/U/9KZ/dd+xNc3F5+xl+yPeX" +
                        "k73V3dfDHwDc3V1cuzySSP4VsWZmZiSWJOST1r/ACO8VYRjxRmSSslia3/pyR/r54UVJS4WyyUndvDUf" +
                        "/TcT6dr4I+/CgAoAKACgD84v+CuP/KOj9p7/sFaX/6kenV+4fRu/wCS3wH+KX/puZ+GfSV/5IfMP8Mf/" +
                        "TkD+SH/AIJHf8pF/wBmH/sK6p/6jmo1/o99JH/kiMf/AIY/+nIH+bH0av8AkuMv/wAUv/Tcz+xT/gpXo" +
                        "niHxL+xB8efDnhPS7vW/Emv2ek6Joui6FFLPeXk914hsIFgijgBd2k3bdoHOcV/jfLY/wBnIbn4mf8AB" +
                        "NX/AIJ6ftnfA79sD4NfF/4mfB+bwb8ONHi18+I9Zn13w3LJFFqHhfUbK3WWzs9RluTuuJogV8olTgsAA" +
                        "SIjF3NZzTR/U1WpgFABQAUAFAH8j/7b37DX7Wv7TX7bf7S3jL4O/B+/8Y+F7XVtN0xfEl/faVpNnM9v4" +
                        "e0+Ix282u3dms3l4CsIi23GDjGKylFtnRGSSP6P/wBir4f+OfhT+yn8C/hx8StMbRfHPgzQbfQfEWkS3" +
                        "Vtem2lgd1WLzrOWeJwqbQNjkAcDpWkdjGT1PqGmSFABQAUAFABQAUAQXV1bWVtcXt7cJaWdoj3V3d3Tr" +
                        "HFFFGpdndnICqoBJJOAKAP5P/8AgqN/wVGufjhc63+z3+z3rb2nwatHbT/HPjnT2aOXxXLG2GggYYK6c" +
                        "pHJ6znk/u8B8pSOinTsfjZ8Lvhd48+NHjzw38M/hn4bn8V+NPFc40/R9H08DLHG55JHbCxxRqC8kjkKi" +
                        "gsxAFQkaN2P7Uf2Af2AfAf7FPgPe/keK/jV4rgjX4g/EFYzhRkSf2fp/mANHaRsBk4DSsA7gYRE2jGxz" +
                        "Tnc+Pf+DgvQ5tW/Ya8MX8W7Z4Y+Iega5c7FBGyTRtZ00biSMDddjn1wK/rb6GeLVPi2pF/boTX/AJNTl" +
                        "/7afyH9NPCOpwjTkvsYiD/8kqR/9uP5Lv2VPEcXg/8Aah/Zu8WzukUHhbx94P8AEc0lyGaNUsfENpcku" +
                        "EIJUBOcHNf6NeIeBeJ4fx1FbzoVY/fCSP8AN3w6xywvEGArPaFelL7pxZ/pOV/hif7tnN+MPB/hb4geF" +
                        "tf8E+NtAtfFPhHxTazaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmu7LMzxGCxEK9CbhUg04yTs01s0zhzPLM" +
                        "PjcPOhXgp0ppqUWrpp7po/iJ/4Kh/8ABLzxT+xZ4puPiR8N7e68U/s0eKbry9H1iTfPdeGLqd/k07UX5" +
                        "JjJOLe4P3/uP+8wX/1b8AfH7D8U4dYbEtQx8FqtlUS+1Hz/AJo9N1pt/k19IL6PuI4UxDxWFTngJvR7u" +
                        "m39ifl/LLrs9d/gf9mH9p74s/sj/FnQ/i/8INcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCr" +
                        "qrD9h4+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR+N+H/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf3" +
                        "n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+Fm" +
                        "Y8KZi8NiVeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQB" +
                        "+e3/BUH9pzx/wDslfsgeN/iv8LVtovH0t7pfg/w5q2qwpcw6dLqdz5b3XkShkleONW8tXBTeQWDKCrft" +
                        "HgDwFg+I+JaWExd/Y2lKSTs5cq+G61SbtdrW17NPVfin0geP8bw3wzWxmEt7a8YxbV1HmfxWejaV7J6X" +
                        "tdNaP8AGv8A4I3ft5ftb/tI/tcaj8PPjd8aL7x94Nh8H6z4ii0LULLSLeMXtte6fFFLusbSB8qszjG7H" +
                        "PSv6d+k74QcN5Fw3HE4HCqlVdWMbpyejUrrWTXRH8u/Rd8YuJc94llhsfipVaSozlZqK1Tik9Ip9WeAf" +
                        "8FIf+CkP7bXwW/ba+Pnww+GHx81Dwl4D8Jahp9n4d8O2en6HNHaxzaHZXTqr3VlLIcySs3zMetfZeB3g" +
                        "dwpmvCmDxWKwcalapGTlJymr2nJdJJbJdD4zx08dOLMq4sxmEwmMlTo05RUYqMHa8IvrFvdvqfEH/D3H" +
                        "/gov/0c9qv/AIK/Dn/yur9X/wCJbuCP+gCP/gVT/wCTPyX/AImV44/6GEv/AAGn/wDIHoHw/wD+C1v/A" +
                        "AUP8DatDf6h8YbT4jacj+dP4b+IHh/RZrSY8DDS6Zb2N0o46JOv514+c/RX4KxdNxjhnSl/NCc018pOU" +
                        "fviz2cl+lbxvg6ilLFKtH+WcINP5xUZfdJH7sfsy/8ABVTwL/wUE8K3XwEvPHGo/sZ/tRa3GF8C+J/Ds" +
                        "thqGmajqMaEILJtWgeOQu337GdA7KcRTM43L/I3Hn0esXwZiFmEaUcwy+PxxknGUY9ebld1bpOLsnrKK" +
                        "Wj/AK/4B+kTg+NMO8ulWll+YSXuSi4yjKXTl5lZ3605K7WkZN6r8bv2o/21f+Cs37I3xj8SfBj4rftGa" +
                        "nba1oxF5o+tWWleHjYazpcrstvf2bvpoLQyhD1AZWDIwDKwH9O+H/hX4c8SZZTxuEwMXCWjTlO8ZLeMv" +
                        "f3X3NWa0aP5d8QvFbxI4azSpgcZjpKcdU1GFpRe0o+5s/vTunqmfkR488deLPid4z8T/EPx3rL+IfGXj" +
                        "O9uPEfifXblIY5Lu9upDLLKywJGgLMScKoHtX9JZRlGGwGFp4bDx5KVNKMVrolstbs/mjOM3xOYYqpic" +
                        "RLnq1JOUnpq3q3pZfcfZvg7/gqH+3p8P/CHhXwH4P8A2itS0Twj4J02x8I+FtFg03QJEs9O021SztoFa" +
                        "awd2EcUaqCzEnHJJr8vzPwA4PxuJqYitgYyqVJOUnzT1lJ3b0lbVu+h+pZX9ILjHBYanh6GOlGlTioxX" +
                        "LDSMVZLWN9Eran9bn/BI79qr4s/tb/slH4hfGwx3fjPwn4j1P4dzeLIbWOyGt2tjY2N8l88UCRwh83jQ" +
                        "uYlCFoycA5Ff5w/SQ8PMu4b4j+rYG6pTpxny3vyNuS5bu7t7t1fWz9D/Sf6NXiLmXEvDf1nH2dWnUlDm" +
                        "tbnSUXzWVlf3nF2Vrx73Pz2/bz/AOC8Gn/DzxDrnwo/Y70jT/Gmt6O8ml6/8afE6vc6PDcKpR00q0idP" +
                        "tLRsf8Aj4lYRblIWOVCHr9o8IPohzxtGGLzqUqcJaxpR0k1/flry3/lXvWesovQ/FPGL6YMMDXng8ljG" +
                        "pOOkqstYp/3I6c1v5n7t1pGS1Pwl8Vf8FP/ANv7xjqcurar+1R4qsbmUs5g8K3UOh2o3Y4W30aK1iAGO" +
                        "Pl/rX9c5d4B8G4WnyQy+k1/eTm/vk2/xP5AzH6QHGeKqc88xqp/3WoL7oKK/A9++A3/AAWv/bo+DmrWJ" +
                        "8VePYfjn4RidBfeF/ihawSzvF91/K1KzSG7SQj7rSPIoIBKHkH47jD6K3CWZ037Ki8NU6Spt2+cHeNvR" +
                        "J+aPtODvpXcX5XUXtqyxNLrGolf5TVpJ+ra8mf1jfsO/t7/AAZ/bq8AXPib4fSv4c8a+HBFD4/+F+uTR" +
                        "vqWkyyj5ZFZAouLWQgiOdVAOCGVGBUf50+LHg9mnCOMVLE+/Sn8FRL3ZeXlJdYv5NrU/wBHfCTxkyvi/" +
                        "BOrhvcqwtz02/ei+/8Aei+kkvVJ6HB/8Fcf+UdH7T3/AGCtL/8AUj06vY+jd/yW+A/xS/8ATczx/pK/8" +
                        "kPmH+GP/pyB/JD/AMEjv+Ui/wCzD/2FdU/9RzUa/wBHvpI/8kRj/wDDH/05A/zY+jV/yXGX/wCKX/puZ" +
                        "/ab+3J8dPEn7NX7Jvxv+N3g6xt9Q8V+BdJW58OQasrPbLe3t7BpsMsqKQXWJrgSFMjdtxkZzX+WvhNwl" +
                        "Qz3iPCYGs2qdWXvW3sk5NLte1r9L3P9VPFzi+vkPDeLx9FJ1KUPdvtdtRTfezd7dbWP5tv+CYH/AAUa/" +
                        "bS+P37eXwS+GPxb+Ol74v8AAHjB/FE3iHwvNpuh2tvObPwhq2pwDNjZQugjngRwFYfdA6cV/cvj74IcL" +
                        "ZNwhi8Vg8Iqdan7PllzTbV6sIveTTum1r3P4T+j945cVZzxjhMJjMY6lGp7TmjywSdqU5LaKas0np2P6" +
                        "Pv2zP2z/hF+xH8KZPiX8UbmS/vtSkbSfA3gXRmj/tPXdQVQ5igEhCpHGpDTTN8qLjqzIrfw94X+F2ZcV" +
                        "5j9VwislrOb+GEe77t7JLVvyTa/ujxS8U8s4Ty761i2227QgvinLsuyW8m9Eu7aT/kp+PX/AAXC/bh+L" +
                        "up3qeBvFVl8BfCMjsLLw/8ADuzt5r0RchfP1LUo5p2kAPLQ+Sp/uiv9HeD/AKJ/CeW017em8VV6ym2lf" +
                        "yhFpW8nzPzP82uMfpa8W5nUf1eosLS6Rgk3bznJN381yryPjiH/AIKDftzQakdVT9rf4hNdFBD5U3ivW" +
                        "JLbCsG/495JzDnjk7MkcZwTX6bLwZ4SdPk/s2hb/r3G/wB9r/ifl8fGri5VOf8AtLEX/wCvkrfde34H3" +
                        "p+zt/wXe/bE+FWp6dZ/F6fTv2hPBMbpFf2fiS1ttK1uO3HX7NqOlQxqX77riGbPTjqPyDjb6InDOY05S" +
                        "walhavRxblC/nGTen+GUT9i4I+mDxRl1SMca44ul1Ukozt5Tilr/ijI/rI/ZO/a0+EP7Zfwns/i18H9S" +
                        "nl0wTtoniPw7rcSwano2pxxJM9pdRozruCyKyujMjKQQx5A/wA6PEXw5zLhfMXg8ZFc1rxktYyjspRfy" +
                        "as0mnuj/R/w48SMs4py1YzBSfLe0ovSUZbuMlqtmndNprZn82f/AAVJ/wCCpP7YXwy/bC+JHwY+DHxIP" +
                        "wr8CfCs6foVpaaFp+l3NxqNxc6XbajNdXU2o21w27dcFERCqhVHBYkn+5vo/fR+4Zx/DNDG42h7etX5m" +
                        "25SSilJxSSi12u27tt9rI/hL6Qv0heJ8v4nr4HA1/YUaHKklGLcm4qTbck+9klZJLvdn9Ef7BPxL8X/A" +
                        "BU/Yx/Z/wDih8TPETeIfGHirw7HrnirxLfrbwNcTedKGlcQJFGvyqM4UDiv4p8YMiw2X8UYzC4WHJShU" +
                        "tGKu7Ky01uz+3PBzPsVmPCuCxeKnz1Z07yk7K7u9dLI/ED9uH/gvhqWg+Ktc+G37GOj6bqlhoksmmah8" +
                        "b/FkLXsF5NGSrtpFnuRGiVh8txPuEnJWPbtdv6v8J/oe062Hhis7lKLkrqlF2aX9+W9+8Y2a6yvdL+TP" +
                        "Fv6ZFSjiJ4XI4xlGLs60ldN/wByO1u0pXT6RtZv8SfGP/BSr9vbxzdXV5rX7V/jOylvNvnJ4O1aTw7EN" +
                        "rBhsi8PiySPkc7FGRweK/qvLPAvg/CRUYZdRaX80ef8Z8zfzP5OzTx44yxknKpmVZN/yy5F8lDlS+R2f" +
                        "w0/4Kwf8FAfhfqEF5pn7SGs+K7VGV7rSPiWLbxHb3CKANjNq0c0yA7eTFIjdeck15ee/R14NzCDjLAwg" +
                        "+9O8Gv/AAFpP5pryPVyH6R3GmXzUo46dRdqlqif/gSbXyafmf0W/wDBPT/gtV4L/aj8U+Hvgp8dfC9v8" +
                        "LPjT4jkXTPCes+HWmk8N6/dlSRAgunkmsrhyMRxSPIrngSBiqH+JvGn6LGK4fw88dgKjrYWCvJSt7SC7" +
                        "6WUorq0k1/LZNn9weCf0rMLxDiIYHMKaoYubtFxv7Ob7a3cJPom5J/zXaR+7FfyMf18FAEF1dW1lbXF7" +
                        "e3CWlnaI91d3d06xxRRRqXZ3ZyAqqASSTgCgD+T/wD4Kjf8FRrn44XOt/s9/s9629p8GrR20/xz4509m" +
                        "jl8VyxthoIGGCunKRyes55P7vAfKUjop07H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0fR9PAyxxue" +
                        "SR2wscUagvJI5CooLMQBUJGjdj+1H9gH9gHwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6f5gDR2kbAZ" +
                        "OA0rAO4GERNoxsc053P0JqiD83f+CuXw5m+Jf8AwT0/aN0yzg87UfDGm2XxGs2AJMaeHdVttWumwP8Ap" +
                        "1gmHtnNfuX0bs7WA40wMpP3ZycH/wBvxcV/5M0fhX0lcjeP4Jx0Yq8oRU1/25JSf/kqZ/AhbXM9ncW93" +
                        "azNb3Vq6XNtPESrpIjBlZSOhBGRX+xM4KUWmrpn+NNObjJNOzR/pe/Az4lWPxk+C/wn+LOnSJJafEjw7" +
                        "o3jVPJ6I2pafFdOmMDBRnKkEZBGDX+EvFuRTyvNMTg5b0akof8AgMmr/Pc/3p4Rz6GaZVhsZHatTjP/A" +
                        "MCinb5bHqlfPH0RzfjDwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM" +
                        "8RgsRCvQm4VINOMk7NNbNM4czyzD43DzoV4KdKaalFq6ae6aP4if+Cof/BLzxT+xZ4puPiR8N7e68U/s" +
                        "0eKbry9H1iTfPdeGLqd/k07UX5JjJOLe4P3/uP+8wX/ANW/AHx+w/FOHWGxLUMfBarZVEvtR8/5o9N1p" +
                        "t/k19IL6PuI4UxDxWFTngJvR7um39ifl/LLrs9d/gf9mH9p74s/sj/FnQ/i/wDCDXDput6afsms6Nd73" +
                        "07WdOd1aaxvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/wCIGZcNZ" +
                        "lDG4KdprRp/DOPWMl1T+9OzTTSZ/fZ+xv8AtX+BP2zvgP4Z+N3gS2l0hNQkm0HxZ4Wv3WS40bWrMIbm0" +
                        "eRAFkAEiSRyADdG6MQpJUf47eJ3h3jOF83qYHENStZxktpQe0rdNmmujTV2tX/sp4XeI2D4qyenj8OnG" +
                        "94yi94zW8b9d00+qadk9F9TV+fH6GfjP/wXi/5R/eIf+xp8M/8ApTJX9P8A0Q/+Syh/16qfkj+W/phf8" +
                        "kXP/r7T/Nn4f/8ABv8Af8n16t/2IXiD/wBOOl1/WH0yf+SRj/1/h/6TM/kr6GH/ACV8v+vE/wD0qB8uf" +
                        "8Fcf+Ui/wC09/2FdL/9RzTq+/8Ao3f8kRgP8Mv/AE5M/PvpK/8AJcZh/ij/AOm4H9D/APwTT/YD/Y2+L" +
                        "f7Dn7P/AMRfiT+z34f8YeN/E+najda/4k1eGdrm6ki12+tkZykqjISNVHHQV/Ffjt4xcT5bxZjcNhcbU" +
                        "p0oSjyxTVleEX27s/trwG8GuF8y4RwWJxWCp1K04y5pNO7tOS79kj1z4+/8ERv2H/i74dv4PAfgqb4Ee" +
                        "NTG39k+LPAF3eS2yzADYLjTr+eW3kjBHzCMRuc/fHFfN8HfSt4sy2uniKqxNLrGaV7eU0lJP15l5H0vG" +
                        "X0TeEszoNYek8LV6Sg3a/nCTcWvTlfmfx9/tO/s3fFf9jH46a38JPiEDp3inwtJBr3hjxTobyx2+pWEk" +
                        "hez1Kxl+VtjGM4IwySKyHDIQP8AS7gLjnLuKMohjMNrTndSi7Xi/tQkvn6NNNaNH+ZHH/AmZcK5vPB4n" +
                        "SpCzjJXtKP2ZxfbT1TTT1TP61P2ENd+Av8AwVV/Zd8B+Kv2ovhhovxW+MfwKmufhn4s1HxHATcNK8cE8" +
                        "d6pidG23sCxtJ/D5yybQBxX+cni7g848POIK1LKsROhhcSlUiovTqnH/tx3S68rjc/0k8H8Zk3iLw9Rr" +
                        "Zth4V8Vhm6cnJa9GpafzqzfTmUrH8nv7b/g3wv8O/2v/wBpLwL4J0WHw34R8JeMdd0Hw3oOnArBZ2dtf" +
                        "PHFFGGJIVVGBk1/op4UZpiMbw1gcRXm51Z0YOTe7bSu2f5xeLWV4fA8TY/D0IKFKnWnGMVskm7JH9fP7" +
                        "I//AATl/Ye8cfspfsx+NfFv7NfhvXfFXi/4e+C/FHibXL6G4M95qGoeG7O7uJ5CswBeSSRmbA6mv81fE" +
                        "jxu4swnEWPoUcdUjTp16sYpNWUY1JJJadErH+mfhr4G8JYvhzL69bAU5VKmHpSk2ndylTi23ru27ngn/" +
                        "BZ7476N+xz+yJ4I/Zi+AWkWXwyPxra/8KwaV4Kgi0+LTPClgscuqLDHahQjXkl3HE7EZdXmOSxJH2P0X" +
                        "eEKvE/EtXNMwk631e0rzbk5VHfku3vyqLaXRqPQ+N+lPxhS4X4Zo5Vl0Y0frPNG0EoqNONnOyW3M5JN9" +
                        "U5ddT+dX/gnh+wj4u/bx+NEngix1OTwp8OPB0MXiD4q+O4YRM9jZSuyQW9ujkI11dujLEGOFVXkIYIVb" +
                        "+2PGrxdw3CGV+3lHnr1Hy04Xtd9W+vLHd23bS0vdfxB4JeD+J4xzX2EZclCmuapO17Lol05pPRX2Sb1t" +
                        "Z/2P/C7/glx+wV8KPDkHh7S/wBmvw34vZYfsl7r/wAUbGHxNqN05Xa8rS6ws4jdjz+5WNVP3VUcV/mPx" +
                        "B9IDjDMa7qTx1SnrdRpt04rytG11/ibb6tn+oXD30e+DstoKlDAU6mlnKolUk/O8r2f+FJLokfnz+3v/" +
                        "wAEP/gx8QfA3iP4g/sk+Gk+F/xd0SGXWIPh7ps8p8P+IREpke2jhuGcWdy4GIWiKxFsK6Dd5i/s3g99K" +
                        "/NMFi4YfOKntsNJ252vfh5tr4or7V7ytqm7Wf4t4x/RLyrG4Spicnp+xxMVfkT9yduiT+GT+za0b6NK/" +
                        "Mv5iP2Sv2j/ABr+x9+0R4D+M3htrmCfwlfLYeNfDaMYTqmiSyrFqOnTJJgZkjB2bx8kqo+NyDH97+I/A" +
                        "+F4myStgqtmpxvCW/LNfDJej3tvFtbM/gDw246xfDGd0cdSunTlacduaD+OL9VtfaST3R/aP/wVQ1/Sf" +
                        "Ff/AATI/aB8UaBeLqOheJPD2g6/ouoRAhZ7S813TLiGQbgDhkcEZr/Lf6PmDqYfj3BUqitOFScWuzUJp" +
                        "r7z/VL6RGMpYngDG1abvCdOEk+6c4NP7j+Tn/gkd/ykX/Zh/wCwrqn/AKjmo1/or9JH/kiMf/hj/wCnI" +
                        "H+cX0av+S4y/wDxS/8ATcz+t7/grj/yjo/ae/7BWl/+pHp1f5w/Ru/5LfAf4pf+m5n+k/0lf+SHzD/DH" +
                        "/05A/lK/wCCLv8Aykt/Zs/7nH/1Adcr/Q76Uf8AyQmO/wC4X/p6mf50fRX/AOS9wH/cX/0zUPqP/g4X1" +
                        "/xNefti/Dzw5qU8o8M6F4C07UPDFi4YQCS/1nUxdTpngvI1uiMR2jUdq+A+hdg6EeGK9WKXtJV5KT66R" +
                        "hyr5XbXqz9C+mxja8uKKFKTfs40IuK6e9OfM/V2SfojzD/glZ4Q/wCCX+v3Or3X7ani8RfFBb5U8H+Ff" +
                        "iVJdaR4LWyRUKzNe2cqxSzFywdLySOMLjCPyw9/6QmZcf0YxWR0v9n5felTtKrftytXSts4Ju/VbHz/A" +
                        "NHfLPD+tKTz2r/tHN7sal40rd+ZOzd91NqNuj3P6sNL/Yl/YB8aeE7aTw9+zB8LPEHhfVYVWw8QeGPC3" +
                        "hqXz4geHi1Cxg8wnj76y5PrX+eWI8VeMsLiWqmYYmFSL1jKpU0fnFu3yaP9FcP4T8GYvDJ08vws6clpK" +
                        "NOnqvKSV/mmflD+2F/wQE+GnjwL4n/Y98QW/wAIfE0sxbU/APj681K78MzxuSxe3uUivby1dST8pEqEY" +
                        "CiPHP8ARPhn9MbH4P8AdZzB16dtJwUVUXqrxjJefuvu2fzl4nfQzwGM/e5LNYepfWE3J036O0pRfl7y7" +
                        "JH37/wS9/YM1n9gz4LeJvCPjLxjaeMviD8QdWXxV4ruPDCzjSbMQWqWkFtavdxwyyhQGZpXjTJbGwbct" +
                        "+OeP3i/S4wzSnWo0nTo0o8sea3M7u7bs2l0SSb2310/Zvo++DtXg7KqlGvVVSvVlzS5b8qsrJRuk31bb" +
                        "Sve1tNf5M/+CuP/ACkX/ae/7Cul/wDqOadX+i/0bv8AkiMB/hl/6cmf5v8A0lf+S4zD/FH/ANNwP6Ef7" +
                        "e8TeGv+Df8Ah1TwjczWesH4ZRaW9xYgmVbG/wBXWwvsbeQDazShm7DJ7V/GP1OhX8ZHCsk4/Wb691G8f" +
                        "/Jkj+1PrmIoeDCnRbUvq1tO0pWl/wCStn8kHwXsfhNqXxV8C2Px217VvDPwhuL+JfH2ueB7SK91WCwAL" +
                        "N9nimZVyzAKz4YopLhJCoRv9H+Ka2ZU8urSwEIzxKj7im7Rb82vvtpd6NpO6/zY4Vo5bUzGjHMJyhhnL" +
                        "33BXko+Sf3X1stUpNWf9sP7Jf7O/wDwSA8e+FrSx/Z28A/DL4xiKAS3cXi63s/E/iIKAu6W6tvFSz3sB" +
                        "YjOGiRRyFAHFf5W+I3GviXg8Q5ZlWxOH105W6cPROnaD+9vuz/Vzw24I8MsZh1HLaOGxGmvMlUn6yVS8" +
                        "19yXZHZ/Hn/AIJD/sJ/HPRL+0i+DFh8IfEkyMul+L/gxFHoEtpIRw32K1UWMq5xlZIDx0KnmvL4Q+knx" +
                        "dlNVSeKlXh1jV99P/t5++vlL1uepxj9Gfg/N6UorCxw9TpKl7jX/bq9x/OPpY/Lr9l3/ggv8Vfg3+1X8" +
                        "PPir4++M3h3W/hZ8JPENh8RPDQ8KJqi6/qtzot7HqFjHc2t3bLb2qNLEpm2XMx2gqv3ty/v/iB9L/Ls0" +
                        "4er4TD4WpHEV6bhLm5eSKmnGTTT5paN2vGOur2s/wCffD76HWY5XxFQxeIxVOWHoVFOPLzc8nBqUU01y" +
                        "xV0r2lLTRb3X9PVfwOf3+FAHin7RXwS0f8AaM+C3j/4L674g1HwtpvjuyOly694YneC6t3WRZkJCsoli" +
                        "LIBLCx2yISpxnITQ4uzP4W/2oP2X/il+yZ8UtU+F3xR0vybmHde+G/ElkrnTta04uVju7SRgMqcYZT8y" +
                        "NlWAIrFqx1Rlc9v/wCCeH7abfsU/GibxdqnhaDxT4E8a28Phfx/HDbQNrFrYrP5on0+4kAZXjb5nh3BJ" +
                        "gAGwyo6OLsKcbo/ts+HfxE8FfFjwV4c+Ivw68R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdGAZGBVgGB" +
                        "FbHK0dpQBzfjHwpovjzwh4q8D+JLb7Z4d8Z6bfeFNfs/l/e2Wo2r2c6fMGHzRyEcg13ZZmNXB4mnXpO0" +
                        "6clJPs4u6/FHDmmXUsZhqmHqq8KkXGS7qSs/wAGf5p3xa+G3iD4OfFH4h/CjxVEYvEXw51nUvBer7kaM" +
                        "STaddvamRA2fkk2b0OSCpBBIOa/3W4cz2jmeX0MXS+CtCM16SV7eq2fmf4NcSZFWyvMK+DrL36M5QfrF" +
                        "tX9HuvI/sE/4IIftF2vxP8A2TdS+CWqagJfF37PmqTadb2spzI/h7XJpdTspcsctsnNzDgDCqiDuBX+a" +
                        "P0wuCZYDiOOOhH93iop3/vwSjJfNcr822f6cfQ444jmHDcsBOX73CSat/cm3KL+UuZeSSP3Rr+ST+uwo" +
                        "A/lQ/4LD/8ABV7S/F9j4u/ZB/Zu1W31fwxdb9A+NPxQtPLuIL7Y+JNK0xzuUxBlxPcL94jZGduWb/Q36" +
                        "M30dqmGnTznM4uNRa0qb0a7Tn5/yx6bvWyX+dX0nfpG08VCrkuWSUqb92rUWqfeEPL+aXXZaXb/AJuvB" +
                        "/g/xT8QPFOgeCfBOgXXinxd4puodE8PeHtEhee6vLqdwiRxogJJJP4dTxX9x5nmeHwWHnXrzUKcE3KTd" +
                        "kkt22fwrlmWYjG4iFChBzqzaUYpXbb2SR/fF/wS+/Y71/8AYn/Za0z4Y+M9Th1Dx/4s1a7+J/j2DTH82" +
                        "0sdS1GztLEWkMg4kEMFlEruPlZ9xXK4J/x68ffE2jxVxBLFUItUYRVOF9G4xcnzNdLuTaW6Vr6n+yP0f" +
                        "vDCtwnw9HC15J1qk3UnbVKUlFcqfWyik3s3e2h+iVfih+3H4z/8F4v+Uf3iH/safDP/AKUyV/T/ANEP/" +
                        "ksof9eqn5I/lv6YX/JFz/6+0/zZ+H//AAb/AH/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+kzP5K+hh/" +
                        "wAlfL/rxP8A9KgfLn/BXH/lIv8AtPf9hXS//Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGYf4o/wDpu" +
                        "B/W9/wSO/5R0fsw/wDYK1T/ANSPUa/zh+kj/wAlvj/8Uf8A03A/0n+jV/yQ+X/4Zf8ApyZ+jtfh5+5n8" +
                        "1X/AAcb/DrRLj4cfs5fFpLWOLxHpOt6n8Op71FAmnstQsP7TjRyB8yxSWTlAT8pkbH3jX91fQhzurHHY" +
                        "7B3fJKEZ26JxfK381JX72XY/g76cmR0pYHA4yy9pGcqd+rUlzJfJxdu133PFP8Ag3B8RanB8RP2oPCSz" +
                        "E6Nqei+HfEU9uxJAubG+u7ZGUdBlLtgfXA9K+p+nDgqbwWX1re8pzj8mov/ANtR8p9BjHVFjswo392UI" +
                        "S+ackvwkz8Zf+CgWoQan+3J+1xc2wYRx/ETxbp7eaAD5lprVxaP0J43RnHtX9Q+DVF0+E8tT/6B6b++C" +
                        "f6n8teNFZVOLsza/wCgiqvum0/yP7t/2Hf+TKv2P/8Asl3w/wD/AFE7Cv8AIvxY/wCSqzP/ALCa3/pyR" +
                        "/r/AOEn/JKZZ/2DUf8A03E/mm/4OMHvD+0l8B43Mn9nr4Hke1DbvK85tevBLt7btoTdjtj2r+6/oSKP9" +
                        "hYx/a9t+HJG36/ifwb9OFy/t7Br7Psfx55X/T8D8Ovhv/wvHyNW/wCFQ/8ACV/Zt8P9u/8ACt/7X2b8P" +
                        "5Xn/wBl8Zxu27vfHev6xzz+ybx+ueyvrb2nL87c342P5IyL+17S+pe1tpf2fN8r8v4XPTP+M1f+qo/+X" +
                        "ZXg/wDGK/8AUN/5TPf/AOMr/wCon/yoH/Gav/VUf/Lso/4xX/qG/wDKYf8AGV/9RP8A5UPNLn4L/HO8u" +
                        "J7y8+E/iy6u7p3ubq6udC1h5JJHYszMzQEliTkk9a96HFOUxiksTSSX9+P+Z4NThXN5ScpYaq2/7kv8j" +
                        "+u74+R63b/8EErOz8R21xZ61p3wt8CaXfWWqxPBcwm1vtItljkjkVWVkVApDDPHPNf5s8HSpPxgcqTTg" +
                        "8TWaa1Tupu6fmf6XcZxqx8HFGqmprDUU01ZqzpqzXkfzrf8Ejv+Ui/7MP8A2FdU/wDUc1Gv7Y+kj/yRG" +
                        "P8A8Mf/AE5A/iH6NX/JcZf/AIpf+m5n9b3/AAVx/wCUdH7T3/YK0v8A9SPTq/zh+jd/yW+A/wAUv/Tcz" +
                        "/Sf6Sv/ACQ+Yf4Y/wDpyB/KV/wRd/5SW/s2f9zj/wCoDrlf6HfSj/5ITHf9wv8A09TP86Por/8AJe4D/" +
                        "uL/AOmah/WR/wAFA/8Agnf8L/29fA2laf4g1F/BHxQ8FLcN8PviVpsCzvbC4AMlpeQFk+0WjsqsV3KyM" +
                        "Mowy4f/ADp8GvGrMOD8XKVOPtMPUtz027XttKL+zJbXs01o07K3+j/jR4I5fxjg4xqS9niKd+Sole194" +
                        "yWnNF72umnqmrtP+Sn9oT/gkN+3N+z7NqN5P8J5viv4QsS8kfjL4NM+uRPEg3F3sokW/iCryxe3CjnDE" +
                        "Amv9HOC/pKcJZyoxWJVCq/s1fc1/wAXwPytK/kf5tca/Rn4uyVyk8M69Jfbpe/p/hXvrzvG3mfFHw7+M" +
                        "nx2/Z58RXlx8MviN4l+EPiO3lEWsW3hrUNQ0mR5ITjy7uCN4xIAeCkqkeor9UzvhjKM6oJYqhTrwa05o" +
                        "xlv1i9beqZ+U5HxRnGSV28LXqYeaevLKUduklpf0aP2B/Z2/wCC/P7VHw5u9O0v47aFpPx98JoUhvtRa" +
                        "CHQPESRj5d0dzpsYtXKjkiS1LOQMuuSa/mnjX6HPD2OjKeAnLC1Oiu5w+ak+ZfKVl2ex/TfBH0y+IsDK" +
                        "MMwhHFU+rsoT+TiuV/ON33W5/Uv+yd+158F/wBs34Yw/E/4Na1JcWtvINM8UeFdcSODWNEviu/7PewRv" +
                        "Iqll+ZHRmRx91jggf59+IvhrmnC+PeFxsEm1eMlrGa7xdl800muq2P9C/DfxMyrinL1i8FNtJ2lF6Sg+" +
                        "0ld/JptPo9z+KP/AIK4/wDKRf8Aae/7Cul/+o5p1f6ofRu/5IjAf4Zf+nJn+Uv0lf8AkuMw/wAUf/TcD" +
                        "+uz/gnF4b0Hxj/wTc/Zz8JeKdJg17wz4n8FN4f8Q6HqcYltryyvHuLeeGVG4ZJEcqw9DX+bfjhjq2F45" +
                        "x1alJxqQrc0Wt01ZprzTP8ASzwMwNHFcCYGjWipU50eWSezTumn5NH4U/tg/wDBAX4r+GNd1vxd+yBq9" +
                        "t8RPBF3JJfWfwt8V3sNhr+nK7bvs9vd3pS2u4052tLJFJjAIkbLH+uPDP6Y2XYijCjnMXSqrR1IpuEvN" +
                        "xV5Rb7JSXXRaH8heJ30M8xw9adbJZKtReqpyajOPkpO0ZJd24vpq9T8MfiZ8EPjx+zx4ggs/in8NPEfw" +
                        "n12znH9m3niPT73Tg80ZLK9rcsqpLjaSrxORxkGv61yHizKM6ouWEr068GtVGSlp/eW69Gj+Rc/4SzjJ" +
                        "K6ji8PUoTT0couOv917P1TZ9d/Az/grN+3h8BmsLXR/jfe/EHw5Y4X/AIRT4wr/AMJJbSRrwsf2i9b7b" +
                        "GigYVYrlABwOK/NeLfo58IZxdzwipTf2qXuP1svcb9Ys/TOEfpIcYZPyqGLdWmvs1f3i9Lv30vSSP6LP" +
                        "2D/APgtt8K/2nPFPh34QfGjwsnwX+LniSRNK8N6na3X2jwzrV65wkEUtxtltJ5SdsUUu9XbCiUuyof4m" +
                        "8XvoqZhkGHnjMDU+sYaCvJWtUgu7S0klu2rNLXlsmz+4PB76WOXZ/iIYLHU/q+Jm7Rd705vok3rFvZJ3" +
                        "TenNdpH7mV/JZ/XIUAFAHzH+1h+yf8AC39r/wCFt/8ADb4k2Hk3MPmX3gzxnYxodR0LUSm1bi3ZsZU4A" +
                        "liJ2yLwcEKypq5UZWP4jP2oP2X/AIpfsmfFLVPhd8UdL8m5h3XvhvxJZK507WtOLlY7u0kYDKnGGU/Mj" +
                        "ZVgCKxasdMZXPpj/gnn/wAFDPGv7F3jUaRq5ufFfwH8V3KSeN/BEb7pbOVsRnUdOEhCpcIoG9MhZlAVi" +
                        "CEdHGViZwuf2h/Dv4ieCvix4K8OfEX4deI7bxX4M8V2yapoWu6W+6KaJsggggMjowKujAMjAqwDAitjm" +
                        "aO0oA/j3/4L/fsq3Hw/+OXhf9qDw1pZXwh8a7ePw942ubZP3Vt4o0m2WJGfaoC/a7ONCvUs8MrHrX+mH" +
                        "0OPEKOMymplVWX73Dvmh505O/8A5LJu/ZSij/Mb6Zvh3LBZvTzWlH91iVyz8qkVb/yaKVu7jJn5wf8AB" +
                        "OD9rq4/Yy/ak8F/E6/mmb4ea2G8DfFjTrTcxl0HUJE8yZUH3pLWVI7hAOW2bMgMa/cPHDw2jxRw/VwsU" +
                        "vbx9+m3/PHZekleL7Xv0PwzwM8S5cLcQ0sVJv2EvcqJfyS3du8XaS72t1P9BjStV0zXdL03W9F1CHVtG" +
                        "1m3h1XSdV02VJre5triMTRSxSRkq6OjBlYHBByK/wAZcRh6lGpKnOLjKLaaejTWjTXRpn+02HxFOtTjU" +
                        "pyUoySaa1TT1TT6prY/lu/4K5/8Fc/7U/4Sf9lX9lXxP/xK/wB9oHxg+MGgTf8AH11im0rSpoj/AKrqt" +
                        "xcKfn5RDs3M/wDoD9G76N3s/Z5tm1P3tHSpNbdpzXfrGL23etkv89vpLfSW9p7TKMoqe7rGrVi9+8IPt" +
                        "0lJb7LS7f8ANX4P8H+KfiB4p0DwT4J0C68U+LvFN1Donh7w9okLz3V5dTuESONEBJJJ/DqeK/unM8zw+" +
                        "Cw869eahTgm5Sbsklu2z+D8syzEY3EQoUIOdWbSjFK7beySP7dv+CXn/BLzwt+xZ4Wt/iR8SLe18U/tL" +
                        "+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi4H3/ALifu8l/8pPH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt" +
                        "/rL9H36PuH4Uw6xWKSnj5rV7qmn9iHn/NLrstN/1+r+aj+mgoA/Gf8A4Lxf8o/vEP8A2NPhn/0pkr+n/" +
                        "oh/8llD/r1U/JH8t/TC/wCSLn/19p/mz8P/APg3+/5Pr1b/ALELxB/6cdLr+sPpk/8AJIx/6/w/9Jmfy" +
                        "V9DD/kr5f8AXif/AKVA+XP+CuP/ACkX/ae/7Cul/wDqOadX3/0bv+SIwH+GX/pyZ+ffSV/5LjMP8Uf/A" +
                        "E3A/re/4JHf8o6P2Yf+wVqn/qR6jX+cP0kf+S3x/wDij/6bgf6T/Rq/5IfL/wDDL/05M/R2vw8/cz+e3" +
                        "/g4t/5Ng+B//Y+r/wCo9qNf2f8AQl/5H+L/AOvH/t8D+Kvpwf8AJP4T/r//AO2TPjT/AINx/wDktf7R/" +
                        "wD2K2lf+nY1+ofTe/5FWB/6+y/9JPyz6DX/ACNsd/16j/6Ufml/wVa+HOufDX9v79pGw1q2kij8Va43x" +
                        "G0O6lUqlzY6/Cmpo8ZIAZUaV4iR0ZGHUGv3X6PGd0cdwbgZQfwQ5Guzg+XX1sn6NM/BvpF5HWwHGePjU" +
                        "Xxz9on3U1zaejbXqmj+jX/glz/wVG/Zo8Y/s/fBz4CfE3x/Y/Cb4ufC3Q9M+GcWn+OZU0/TNXtNGto9N" +
                        "s57O/m225d4Y4w0MjrJv3bVZfmr+IvpAfR/z7C5ziswwtGVfDVpyqXh70ouTcpKUV71k27NJq1rtPQ/u" +
                        "T6Pn0g8hxWS4XL8VWjQxNCEadpvljJRSjFxk/du0ldNp3vZNanNf8F7P2Y9R+M37O/gb9orwJbHXNS+A" +
                        "0l3deI00oCb7R4U1tIGmuwYtxdbWW3ikyOBG8jk4Fd/0P8Aj2GV53Wy3EPljibct9LVIXtHy5k2vOSiu" +
                        "pwfTG4AnmuSUcyw65pYVtytrenO15efK0n5Rcn0P59/+Can7eOrfsI/HCfxTf6dN4j+FHxAht/DfxW8M" +
                        "aeUFy1tDMZLe+td+Abi0MjlEYhXV3QlSwdf7L8dfCGnxflKpRkoYmk3KnJ7Xa1i/wC7Kyu900nraz/i7" +
                        "wG8YanB+butKLnhqqUakVvZPSS/vRu7LZptaXuv7YPhT+2t+yd8avDVn4q+Hf7QPhbVrC7jW5l0+/1iz" +
                        "07U7Tf/AA3VjqDw3MDZ7SRrntkc1/lbxF4V8R5VXdLE4KrFrqouUX6SinF/Js/1c4c8V+G81w6rYbG0p" +
                        "Ra2clGS/wAUZNSXzSPUP+F4/BT/AKLB4W/8KDSf/j9eB/qnmv8A0DVf/AJf5H0H+t2U/wDQVS/8Dj/m";
                    resourceString += "eh6Xqul65p9pq2i6lb6xpV+nn2Op6XNHcW8yE43RyRFlYcdQa8XEYepSm4Ti4yW6as16pnt4fE060FOnJ" +
                        "Si9mndP0aPgz/gqloV74i/4J7/tS6fYKXnt/Dq67IFBb9zpepWupzHA9I7djntX6/8AR7xkKHGmXyls6" +
                        "lvnKLivxZ+O/SIwc6/BWYxjuqd/lGUZP8Ez+N7/AIJg/FDwz8HP28/2cPH3jLXYfDPhmy1e80DVte1Io" +
                        "ltaprui3ugq8zyELHHuvAHkYgIuWJAGa/058fMgr5nwfjsPRg51HBSSW75JRnp3fu6Lq9D/AC8+j/xBh" +
                        "8r4xwOIrzUKam4uT2XPCUNX0Xvavoteh/YF/wAFbJYp/wDgnH+01PBKs0E2k6TLDNEwZHRvEWnEMpHBB" +
                        "HQ1/ml9HCLXHGAT35pf+kTP9NvpJyT4Gx7WqcI/+nIH8p3/AARd/wCUlv7Nn/c4/wDqA65X+hv0o/8Ak" +
                        "hMd/wBwv/T1M/zq+iv/AMl7gP8AuL/6ZqH75f8ABWr/AIKofFf9ib4j/D74M/Bbwhot94m8SaDH8SfEX" +
                        "irx5BdXsEVldaleaZb29rb2lza4k32ErSO7MNpUBc5I/j36OX0e8u4rwNbG46rNU4T9nGMGk7qMZNttP" +
                        "S0lZK2t7vof2T9JL6RGZcJ46hgcDSg6k4e0lKabVnKUUkk463i7t30tZdT0P9hf/gsz+z/+0j4Z0vw98" +
                        "cvEej/AT44xH7FqWk69ctY+HNVfICzadfag5SPzCQPs88vmBuFMg+avE8W/ov5zkdeVTAQnisJumlecf" +
                        "KcYq7t/NFWtq1HY9vwh+lLkue4eNPH1IYXF7NSdoS84Sk7K/wDLJ3vonLc/Q74v/Az9lf8AaF8MHWPjL" +
                        "8PfCHxK8OLFm38X+IrfT5mt4mxHug1NSskIOQN0cq9ua/FuGuLeIclxHJgq9WjO/wAMXJXfnDZ/NM/be" +
                        "JuEeHc7w/PjqFKtC3xSUXZeU918mj+PH/gqV8BP+Cd/wR1vRLP9j34tXHiTx5d3rReMvhroWpR+JvDmk" +
                        "6eIZDvTVizyJcLKFQ27TTtgksYyoD/6ZfR+4w41zalOWc4ZQope7UcfZzlK6+xs4215lGK2tzX0/wAw/" +
                        "pC8G8EZTVhHJcS51nL36al7SnGNntPVqV7LlcpPe/LbX6W/4N0rvxQn7UPxusbRp/8AhCrnwC934gWMH" +
                        "7MdUh8Q6amnmQ/3/Klu9ntur4T6bVPDvh/CSdvaqvaPflcJ81vK6hf5H3v0H6mIXEGLjG/snQvLtzKcO" +
                        "W/nZzt8z4L/AOCuP/KRf9p7/sK6X/6jmnV+v/Ru/wCSIwH+GX/pyZ+O/SV/5LjMP8Uf/TcD+pT9lb41W" +
                        "37Of/BID4YfHG60V/Ea/DP4eSeJ4NAhlEH2y4inmWCFpSG2I8jKHfaSq5IBIwf8/vELhaWd+JeIwCnye" +
                        "2xHLzb2TSu7dbK9l1fVH+hPh3xXHI/DLD49w5/Y4fm5drtN2V+ibtd62XRn5W/sz/8ABwl4/uPilHp37" +
                        "V3gTQrT4T687Qf8JF8KdP1KLUNAdz8krwXV7dm7t16SKoEoGWXeR5bf0Hx59DDBxy/myitN4mP2ako8s" +
                        "/K6jHll2b93o7br+eOAfpq42WY8ub0YLDS+1TjLmh2bTlLmj3S97qr7P+kH4f8Axp/Zx/ac8KFvh/8AE" +
                        "Hwt8ZPC+tRbb3RrK6sNS3Iy7jHdWM26SNgOWjmjDDuK/h7OeFs8yHEf7RRq4epF6Npx+cZLR+qdj+6Ml" +
                        "4qyLP8ADf7NXpYinJapNS+UovVejSZ+Tf7eX7Dn/BIfQfDfiDxR8WNT0T9mLxXHFLd2tz8I9St9P1SeV" +
                        "QSI7fw5CLiG4y33lhtA2P41HI/ovwg8WfEmtXhSwkZ4yndL95FyivN1XZx9XO3k9j+b/GLwj8M6NCdXG" +
                        "Shgqlm17KSjJ+SpK6l6KF/Nbn8bF01tZa3ct4bvrmeztLp20HU54haXjxxzHyJWjhllEchADFVkbaeAx" +
                        "xmv9PKalKkvapJtardbaq7Suvkr9j/Lqo4wqv2TbSfuvZ76Oybs/Ru3c/00fh1J4gl+H3gSXxYsieKZd" +
                        "G0uTxKl4u2Yag1lEbgSDs3mbsj1r/BzO1RWNrKjb2fPLltty3drfI/3xyOVZ4Ki61/ackea+/NZXv8AM" +
                        "7KvMPUCgAoA+Y/2sP2T/hb+1/8AC2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlT" +
                        "VyoysfxGftQfsv/ABS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6Yyu" +
                        "fTH/BPP/goZ41/Yu8ajSNXNz4r+A/iu5STxv4IjfdLZytiM6jpwkIVLhFA3pkLMoCsQQjo4ysTOFz+0P" +
                        "4d/ETwV8WPBXhz4i/DrxHbeK/Bniu2TVNC13S33RTRNkEEEBkdGBV0YBkYFWAYEVsczR5V+1d+zf4N/a" +
                        "y+AvxA+Bfjb/RrDxfa50fXI0DzaVq1swnsr2IZUkwzKpZQRvTchOGNfbeHfHGK4czijj6GrpvVdJReko" +
                        "v1XXo7PdHxHiNwLheJMmrZfX0VRaPrGS1jJej6dVdbM/wA7/wCNHwf8d/AL4peNvg98S9HfQ/GvgK+k0" +
                        "TWbJwdj7QHinhYgb4Z42WWJxwyMrDg1/tTwtxLg84y+ljcLLmpVY3T/ADT7NO6a6NNH+JPFXDGMybMau" +
                        "CxUeWrSlZr8mu6as0+qaZ9i+Hf+Cnn7T/hX9j6f9jrQfEv9n+FpJpbC28dwyTDXbbw3PGRJosEwPyW7O" +
                        "T84+cITECE4r8yxvgJkGI4mWdVKd6lr8mnI5rao11lbptf3nqfp+B8f+IMNww8lp1LU7tc+vOqb3pp9I" +
                        "367291aHwf4P8H+KfiB4p0DwT4J0C68U+LvFN1Donh7w9okLz3V5dTuESONEBJJJ/DqeK/XszzPD4LDz" +
                        "r15qFOCblJuySW7bPx7LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5/wAEvPC37Fnha3+JHxIt7XxT+0v4p" +
                        "tfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgff+4n7vJf/KTx+8fsRxTiHhsM3DAQei2dRr7UvL+WPTd67f6y/" +
                        "R9+j7h+FMOsVikp4+a1e6pp/Yh5/wA0uuy03/X6v5qP6aCgAoA/MH/gsB8EPiX8fP2H/Hfg/wCE3hi48" +
                        "Z+L9H1LR/GcfhXR0Mt/e2um3Je4S1iX5pplRy6xLlnwVQMxCn99+jTxXgMn4so1sZUVOlKMocz2TktLv" +
                        "or6Xei3dldn8/8A0m+EsfnPCVajg6bqVYyjPlWsmovXlXV21stXayu7I/Gz/gg9+yn+0B4L/aZ8a/GP4" +
                        "gfCrXPh34D0PwpqHg+PVPHemXmkve6nqV/Yyxw20V/HE8oWO3keR1UquACQWFf079LzxDybFZDSwWHxE" +
                        "KtaVWMrQkpWjFSTbabS1aST1ettmfy79D3w6zrCZ/VxuJw06VGNKUbzi43lKUWklJJvRNtrRaX3R89f8" +
                        "Fev2Mv2k7r9uv4nePfB3wb8SfEPwX8XW0nxB4P8QeA9F1HV4Xkj0ez064tpjp8MoimjuIHARiCUKsOvH" +
                        "2n0a/FDIo8I4fD1sVTpVaHNGUZzjF/FKSa5mrpprVdbrofE/SY8LM+lxfiMRQwtSrSr8soyhCUl8MYtP" +
                        "lTs1JPR7qz6n9RP/BPP4ReMvgR+xb+z38LPiFYjS/GvhrQzP4j0jIZ7K51K+uNVNtIVJHmQi5EcmCRuU" +
                        "4JHNfwD408S4XN+Kcbi8M+alOfuvuopRuvJ2uvJn+gvgnwzisn4VwWExK5asIe8uzk3Kz81ez80fZtfl" +
                        "5+pn4p/8F0v2f8A4s/Hb9lXwdL8I/Bt74+1P4b+K7fxf4i8N+GYJbzU202TS7zT3mt7aBWkm8uSdN6oC" +
                        "wUlsbVYj+p/ok8ZZblHENVYyqqUa1JxjKTtHm5oys29FdJ2b0vpu0fyn9LzgzMs44dpPB0nVlRqqUoxV" +
                        "5cvLKN0lq7Nq6Wttdkz4S/4N/PhB8Wvhr8Yf2gr74i/C7xF4BstT8NaZaadeeNdE1PSoriVNULskb30M" +
                        "QdgOSAScV+u/TJ4ly3HZZgo4bEU6rVSTahOMre71s3Y/H/oYcMZlgM0xssTh6lJSpxSc4Sim+bpdK5+v" +
                        "P8AwUL/AOCbvwu/b18J6bPqWonwF8Y/BtvLZ+BPiZZQC4Agd/ONjfwbkM9qzksoDBomJZDhnR/5s8FvH" +
                        "LMOD8TJRj7XC1HedNu2u3NF9JW30tJKz2TX9MeNngVl/GOGi5S9liqatColfTflkusb7a3i3dbtP+Rb9" +
                        "oX/AIJY/tt/s6a3PY658F9S+Inh4yeRpvjn4O2114j0y5UnAdlsYjc2+Txi5hjOemcjP+kfBf0g+FM7p" +
                        "KVPFRpTtrCq1CS+98sv+3ZM/wA0+Nvo8cWZHVcamElWhfSdJOpF/cuaP/b0Uf1Mf8EZ/hJ8bfhx+w9D4" +
                        "L/aM8P3+lPrevazqPgrwL49iYXVh4UvbKzhS1ns7td8KSXKXUohkUHbJkgBsV/n39KDiTKsdxY6+WzjL" +
                        "lhFTnDZ1E5PmUlo2o8q5l1Xkf6F/Ra4azbA8JKhmcJR5qknCE91TaiuVxeqTlzvlfR7an5i/t2f8EF/F" +
                        "Mev618Sv2KJLfV9C1SWXUr74F+IbyKzurCSRt5TSby8ZIZIOTtiuJEZAMB5M4H734R/S/w7owwueXjON" +
                        "kq0VdP/ABxWqfnFNPsuv4B4v/Q7xCrTxWRWlCTbdGTSa/wSejXlJpru+n4V+JP2Lv2vfCOqT6N4h/Zg8" +
                        "faff25KlR4S1yaKQA7d0U0Fs8ciZHDIxB9a/rfA+KXDWJpqdPMKDT/6eQT+abuvRq5/IeO8K+JsNUcKm" +
                        "X101/06m18mlZrzTsYH/DK37T//AEbh49/8I/xD/wDIldn/ABELIP8AoOof+DYf/JHH/wAQ74g/6AK//" +
                        "gqf/wAif1S/8EC/g3+0b8JvhF8b5vjL4Z1rwN4D8Vato918LfB/ji3udPuUura3vE1W8js7xI5Y4rgSW" +
                        "qhyAHMZI6En/Pf6YnE+R5jmWEWCqQqVoRl7SUGpKzceSLkrptWm7dL6n+iH0NeF88y3LMW8dTnSoznF0" +
                        "4zTi7pS55KLs0pXgr9eXQ/d7xL4c0Pxj4c8QeEfE+mR614a8VWV34c8Q6PeAmG7sb6BrWeFwCDtkjdlP" +
                        "PQ1/IeAx1XC14VqUuWpBqUWt007pr0Z/YOPwNHFUJ0asVKnOLjJPZpqzT9Vofwt/tvf8Em/2kP2X/iRq" +
                        "UfgDwDrXxl+DOu3c8ngDxl4G0+51e8gtmYvHaapb6fE8kFzEmFMhQRS/eQ53In+tvhR9IvI8/wMXiK0M" +
                        "Piopc8ZyUU31lBydnF9r80dn0b/AMiPFn6OGe8P4+Sw1GeIwsm+ScIuTS6Rmoq6kl1tyy3T3S/br4O/s" +
                        "wftVeI/+CJXjz4B+N9Dv5Pi94hsb7Ufht8O/FbPDqtlotprFrqVnpki3ZBildbWQwQuRsEiRnZghf5S4" +
                        "m4+4eoeK1HMKE4/VoSSqTjrFzcXGU1bdLmXM1vZtX3f9ZcL+H/EVfwnrZdXhL6zOLdOEtJKClGUYO+zf" +
                        "K+VPa6TtsvzK/4I1fseftK6F+3b8Pvif4y+DHiP4f8Agn4RW/iK88V654+0e/0aLztR8OahoMFtAdRih" +
                        "82Yy3isUTJVVJOBiv3n6T3iZkVbhGthaOKp1atdwUVCSk7RnGbb5W7K0d3u2kj8C+i54Y59R4woYuvha" +
                        "lKlQU3JzjKCvKEoJLmSu7y2WyTbP6Kv+Cgv/BOr4Xft6eCNOttavj4H+LHg6OZPh/8AE2wgE7wJL872d" +
                        "7DuTz7R3w23cGRvmRhl1f8AifwZ8bMw4PxcnBe0w1S3PTbtf+9F9JJfJrRrZr+3/GnwPy/jHCRVR+yxN" +
                        "O/JUSva/wBmS6xb17p6p7p/yEftD/8ABK/9tv8AZy1PUI9e+DOo/EDwtZlmt/H/AMIYLjxDpc0Iz+9db" +
                        "OL7Tbrxz9phj/Ign/Sjgr6QfCmeU4unio0qj+xVahJPtq+WX/bsmf5ncbfR44syOpJVMLKrTX26Sc4td" +
                        "9FzR/7eij4f/wCFd/ED7V9h/wCEG1j7b5n2T7H/AGZe+b5u7Zs2eXndnjGM5r9Y/trB8vN7aFt78y/zP" +
                        "yT+xMbzcvsZ32tyu9/uPtL9n3/gl7+2z+0bqWnR+F/gnqngzwzfMpl8ffFa3uPD2kRQt/y2Vr6NZ7hO3" +
                        "+jRSnPbg4/LeM/H7hTJISdXFxqVF9im1OV+2jtF/wCJxP1Xgv6PvFmeVIqlhJU6b+3UThG3fVXkv8Kkf" +
                        "2Sf8E//ANg74f8A7BvwluvBfh3UT4t8eeLpoda+JvxDubdLeTUrqGMxwwwxgsY7S3Dt5UbMxyzsTliB/" +
                        "mJ4yeL2N4vzJV6kfZ0aaapwvflT3bfWUtLuy2S6H+ongx4PYLg7LXQpS9pWqNOpO1uZrZJdIx1srvdvq" +
                        "fzJf8Fbf2NP2ntS/bv+Kfjbwp8EvEnj7wj8W59K1rwR4h8A6NqGs21xjSbPTpIJG0+KURTpNCymOTBIw" +
                        "wyrA1/ef0cPE/IKfCGHoVsXTpVKCkpxnKMWvelJNczV00915rdH8C/ST8LeIKnGGIr0cJUq0q7i4ShGU" +
                        "k/djFp8qdmmno/J7M/qR/ZB+Al54L/Yb+DX7PXxs8NWt/cxeDYvB3xJ8G6j5d1bFdRgkN3YzbCyPtWcx" +
                        "PtJUkHBIwa/z+8SuMI4ri3FZjgajS9s5U5LR+61yyXVbXXXuf6EeGXBssLwjhctx1NN+xUakHqveT5ov" +
                        "o97O2nY/nP/AG1P+CDHxe8B63rfjf8AZElX4qfDu6ke+g+GOq3UVt4m0lHYsYYJbtkhvoYx91jIk2MLs" +
                        "kYFz/bfhZ9L7LcZShQzj9xXWntEr05ebSu4N9dHHreK0X8PeK30O8zwdadfJv39Bu/s20qkfJN2U0uju" +
                        "pdLSer/AA+8Z/AT45fDrU30Xx98HPFPgvVoyUOn+KNA1WxlOO6i5gTcO4IyCORX9YZXxhlOOp8+HxVKp" +
                        "HvGcX+TP5KzXg7N8DU5MRhatOXaUJL80anw/wD2af2hvitqMOlfDf4H+K/Gt7M/k48PaBqdxHGcgEyyp" +
                        "D5cajIyzsAO5rnznjrJcug54nF0qa/vTivuV7v5HRkvAed5jNQwuEq1H/dhJ/e7WXzP6Kv+Cb3/AARD8" +
                        "X+DvHfhT47/ALYUVnp8nhG4t/Efg74H2E1vqLyX8DCWGbWJ4TJb+XE4DrbxM+848xgoaN/4n8cfpXYbF" +
                        "YSpl+TXftE4yqtOOj0app2d2tOZpW6JuzX9v+Bf0TMThcZTzDOrL2bUo0U1L3lqnUavGyevKm79WldP+" +
                        "oCv4EP9AgoAKACgAoA+Y/2sP2T/AIW/tf8Awtv/AIbfEmw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsR" +
                        "O2ReDghWVNXKjKx/EZ+1B+y/wDFL9kz4pap8Lvijpfk3MO698N+JLJXOna1pxcrHd2kjAZU4wyn5kbKs" +
                        "ARWLVjpjK59Tf8ABOX/AIKF+J/2MPHEmheJTdeJvgL4ymU+MPCkLl5NMuW2oNTsEbgSqoAljGBKgwfmV" +
                        "CrjKxM4XP7QPBHjfwl8SfCXh/x54D8QW3inwf4pto9X0DX9IkElvc28g4ZTwQQQVZWAZWBVgCCK2OZo/" +
                        "Iz/AIKlf8E7fDP7d/wxsfjP8EbrT7z47+CdPlbwprGkzwS2fi7SYDJL/Zb3MT+V5gcsbWYnarko5CsWT" +
                        "+mvo6eOs+F8Z9VxTbwNV6/9O5PTnS7fzJbpXWqs/wCYfpH+A0OKcH9awqSx1GOn/TyK15G+j/kb0TdnZ" +
                        "O6/jI0/4Q/FPVPiTD8HLH4d6zN8Vp74eGl+HTaddJrK3+dpge0kRZEcdWDKMDk4HNf6k1uJcvp4F42Ve" +
                        "H1dR5ufmXLbvzbP5H+VdHhnMamPWCjQn9ZcuXk5Xz83bl3T9dj+1X/gl5/wS88LfsWeFrf4kfEi3tfFP" +
                        "7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/7ifu8l/wDLHx+8fsRxTiHhsM3DAQei2dRr7UvL+WPTd" +
                        "67f6sfR9+j7h+FMOsVikp4+a1e6pp/Yh5/zS67LTf8AX6v5qP6aCgAoAKAPCf2mfjvpP7MnwO8ffHbX/" +
                        "DGo+MdC+HcFtqms6B4T+znUJLae+gsnkiF3JFGRCJvNfc4+RWxk4B+u4D4QqZ9m1HAU6kac6raUpX5bp" +
                        "N2dk3ray03aPj+PuMKWQZRWzCpTlUhSSbjG3NZtK6u0tL3euyZo+Efjn4H8XfADQP2kIJ5NO+HeueE4P" +
                        "jFJLehPPtNKk0oavIJVRiokijyHAOAwIzWGZcJYvDZzPLGr141XS02cublVvJvbyOjLOLsJicmhmabVC" +
                        "VJVdd1Hl5nfzS38zxb9iD9t34bft2fDTxL8SvhvoGqeFbXwprcvgjVtA8ZCzF6ssdlbXyTAWM86eVItz" +
                        "tUlgdysMcc/VeK/hTjuEcfTwuJnGbnDnTje1rtW1Sd1bXyaPlPCXxZwHGGAqYrCwlBQm4OM7XvZO+jas" +
                        "76eaZs/Bj9r7wT8dPj/APtFfATwX4Z1Q3X7NNxYaJ438c3n2MaTPqN95ii1tvKmeUuj286vvRcGM+orl" +
                        "4o8NcXlGTYLMK9SNsYm4QV+ZRVtXpazTi1Zvc6uFvE3CZvnWOy6hTlfBtKc3blcnfRa3umpJ3S2Z9a1+" +
                        "cH6SFABQAUAFABQB8I/8FEf2x9S/Yb+AVn8aNK8BwfEW6uvEGneCT4f1C/k02NUvra7uDL5scFwcr9mx" +
                        "t28568V+u+CnhjT4tzh4GdZ0kqcp8yjzbOKta679z8f8bvFCpwjkyx0KKrN1Iw5XLl3Une9n27H3dX5E" +
                        "fsAUAFAHz1+1V+0X4X/AGTfgL48/aB8Z6Hf+JPDXgD+y/7S0XwwLc3039q6zaaJH5X2uSKP5ZLxWbLD5" +
                        "Qcc4FfaeHvBOI4jzijl1CcYVKvNZyvZcsZTd7JvaNttz4rxE44w/DeTVsxrwlOnS5bqNrvmnGCtdpbyT" +
                        "32Plb4h/wDBRjVvBtx4Ofwt+xJ8aPjFoPjXw3oPxJ0zxd8JvCMusaUsOvaemoJatc27lDPCsgWVVJAPc" +
                        "1+hZL4JU8Uqvtc1weHnTqTpuNSpyyvCTjez1s7aH51nfjjUwrpeyynGYiFSnCopUqXNG04qVrrS6vZ+Z" +
                        "4N8P/8AgszpnxZ0J/FPwr/YS+OXxL8Mx3EmlSeI/h/4Tj1mwW6hVXkhNxp080YkUOpZd2QCMjkV9fnP0" +
                        "X6mXVvZYvN8FRqWvyzqcrs9naSTtpufH5L9KWnmVH2uEyfG1qd7c0KXOrrdXi2r6rQ/ZvT7pr6wsb5rW" +
                        "Sya8hiumsrxdk0JkQPskXsy5wR61/L1anyTcb3s7XWz9D+paNTngpWaur2e69T4y/4J/wD7Wuo/trfs7" +
                        "ab8ctU8EQ/D67v9W1Tw2fDthfPqMarp0qxiTzpIYCS+7pt4r9R8ZPDiHCudywEKrqpRjLma5fi6Wu/zP" +
                        "y3wY8SZ8V5JHHzoqk3OUeVPm+Hrey39D7Zr8qP1cKACgAoAKACgAoAKACgAoAKACgAoAKACgAoA+Y/2s" +
                        "P2T/hb+1/8AC2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxGftQfsv/A" +
                        "BS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6YyuXfht+2B+0N8I/hB8" +
                        "QPgX4A+I13oPw5+JGP7c0mA5lt9/wAtx9imPz232lPkn8sjevBouDij7U/4Jmf8FC/i3+zV4o0z4JW3g" +
                        "rUPjX8NvH2pRQ6T8O9AYvrWn6lduI2k0kSZRvN+9JbuVRmG4NGS7M4ysTOFz+x2zhguDb6zNpP9n6rc2" +
                        "0cMwu1tzdwxn975EkkDSKdjE5Cuy5yQT1rp9rLl5bu29ul+5xeyjzc1lzWtfrbsaNQaBQAUAFABQB5n8" +
                        "afhtp/xj+D/AMUvhLqpRdP+Jfh7WPAtzNMCRENV0+WyEnAJBQyBgRyCARzXvcLZ5PLMzw+Mh8VGpGf/A" +
                        "IDJO3ztY8DirIoZplmIwc/hrU5Q/wDAotX+V7n81ngX9ozxJpv/AAQz8V/CYNJH8XrLxTe/sRWeiXBC3" +
                        "b3mt60L17NlJ5I0y7mhXH9zHYmv7pzfgihU8WqeM/5hnSWLb6WhC3N/4MipfP0P4QyjjivT8IqmD1+tK" +
                        "q8Il1vOd3H/AMFycfl5M+k/2LrDw9/wT5/bR/bN/Z21S6Fn8N7L4XeFP2hdAmYeWk8Hg/QIbLVp4y+Mv" +
                        "LLPOzk8t5e49DXwvilWrcZ8LZXmUFeu8TUoy8nVm3BPySUUu17H3fhXRocFcVZrlk3agsNTrx81SglNr" +
                        "zbcm+9rnhv7Pn7Qni39jT/gmx4y/a5XTbK+/aH/AG8Pidqup+CT4nfy7WG81W7ureK5u/NZM29v9iu7p" +
                        "WYhWMqBiFavrOM+C8NxRx1SyfmawWWYaKny7tRSbUf70uaEdNVyuyuj5HgrjXE8LcB1c55YvHZniZOHN" +
                        "snJtJy/ux5Zy10fMruzO3+NPxs/aK/ZD+G+i/tMaJ/wU48M/tXeKvDl7pMnxk/Z6nk8InS9VstSvYbSe" +
                        "PRotJma4iMDzKN0aK2wNKdoUxnyuFuFck4lx08rqZBUwNOal7Kv+95ouKbTqOS5XdJ6NtXtHVtSPW4q4" +
                        "szzhnAwzSnxBTx1SDj7Wh+65ZKTSapqL5lZtapJ2vLRJxf9Efg7xTpfjnwh4V8a6G5k0Xxhptj4p0eST" +
                        "G5rXULVLuInaSMlJB0NfxTmeX1MJialCp8dOTi/WLs/xR/buV5jTxeGp16fwVIqS9JK6/Bn4OfDfxl+3" +
                        "5+11+1H+2/8B/Av7Tr/AAP+EXwP8aX9ifiBa+H9N1bWoILme5tdN0bT1kFqqwqLSWaeYyGUYRdwDc/17" +
                        "nmV8HcN8P5TmGIwH1nE4minyc8owbSTnUlvr7yUVbl3dtD+PMizTjPibiHN8vw+YfVsNhqzXOoRlNJtq" +
                        "FOO2nutyd+bZX1OX/Z2+IH/AAUk/aK+I3xx/Yb1n9pvTvh1f/su6rdW3xA/ab0TQLO/8U6/YXM5g0m0g" +
                        "tXeCCIOIZJpbgETBdiMSwYv6HG2TcDZJgcJn0MBKqsbFcmHc3GnBpXnJvVu10lHWN7taWt5/BGdcd55j" +
                        "sXkE8wjReCk+fEKClUmm7Qio6JXs25aStZPW9/rn/gnH+0B+0Be/GX9qr9jH9pnxvD8VfHv7NF7p1z4V" +
                        "+KsNpHZ3Ws6LqSuV+1R242B0QwOuS0n7xlZm2bj+beN/BuTQyvLs7yuk6FHGKXNTvdRnH+VvXV8y6L3U" +
                        "0lex+leBnGmdTzTMcjzWsq9bBuPLUtZzhL+ZLS6XK+r95pt2ufLH7V3if4//s7+H/HvjvVv+CxOiTftC" +
                        "eBba78XaT+z5Po/g3TbG/hs42uBpX9lxzzTedNGuyGSWImR+MAncv6F4d4DJs7rUcPDhmf1Kq1F1uarJ" +
                        "pvTn57JWT1aT0XpZ/nniNmGdZJRrYifFEPrtJOSoctKKklrycl27taJtavTrdcP/wAFPfjtdftNf8Ed/" +
                        "gF8dNR0yHRtX+IXiTw1qWvaZp3mfZotRt7PWLG7EImJYRGeBygYkhcAlup9bwD4RjkPibjMBGTlGlTqJ" +
                        "N7uLdNxvbrZq/n0R5H0gOMJZ/4YYLMJRUZValNtLZSSqKVr62unby6vc+xdL/aG+O37eX7Uk/g/9lP4h" +
                        "XXwu/Y6/Z+vpNK+Mnx48OW2nXF14z15ArtpOkSajFcp5KoV/fInCsZCSGgD/mOI4LyjhDh9Vs2oqtmeK" +
                        "jelRk5JUofzzUWne/2W91y6Wm1+oYfjbOOMeIXQyiu6GV4WVqtaKi3Vn/JTck1a32ktnza3gnxXx0/an" +
                        "+I3x1/bK+JP7LfgP9qzRP2NPgx+z9Y2J+J/xR1CbQo/EPiLX9ShE66fpra9KixxQAkSPGAysjbiwdBXq" +
                        "8I+HuByjhihmuIy6eYYrFSfs6aU+SEIu3NPkWrfRPRpq1rM8ni/xEx2ccU18pw+Ywy/C4WK9pUbhzznJ" +
                        "X5Yc70S6tapp3vdHXfsOftP/E6w/a1+J/7E/wATPj9pX7WHh7TPDUXxe+Dfx98N/wBkm7ksFuYLO50zU" +
                        "josksLzRtPkMzb/AJCWJWRFTzfFngHAT4cw+eYXBywM3U9lVoy5rXs2pw50mk7bLTVW1Tb9Pwj8QMwhx" +
                        "JiMixWNhjoRp+1pVo8t+W6ThPkbTavu9dG27SSXqP8AwWi/5RpftJ/9yd/6n2h18/8ARc/5LvA/9xf/A" +
                        "EzUPofpUf8AJBY//uF/6epn2Z+yt/ybB+zh/wBiF4P/APUetK/MPEL/AJH+O/6/1f8A0uR+peHf/JP4D" +
                        "/rxS/8ASIn5c/8ABv8Af8mKat/2PviD/wBN2l1+/wD0yf8Akro/9eIf+lTP57+hh/ySEv8Ar/P/ANJgf" +
                        "uBX8oH9an8rn/BLH4Kftt/HT9jVrL4RftSRfst/C/wtretweD4/Dfh+31fVvEetyPHczz311cTRtbWkR" +
                        "ZIUSHJY7yykBc/6EfSD4q4UyjifmxmXvG4icIc3NNxjCGqSiknzSerbe2iT3t/nf9HjhTizN+F+XB5gs" +
                        "Fh4Tny8sFKVSejbk21yxWiSW+ra2v8AqF/wTh/aZ+Pv7UH7O3xz8D/E7xBZaV+018C9b134KX/xCtrCC" +
                        "W0k1KG0ZLLUprWJIoJGiuN4kjRVVxGDtG81+A+OHAeT5BneEr4WDlgMTCFVQu78rfvQTd2rxtZttq++h" +
                        "/QXgZx9nPEGR4zD4qcY5hhpzpOdlbmS92bSsnaV7pJJ22Vz4B/am+O3xz/Y70S6+K3hr/grRoP7RPxj8" +
                        "D6jYf8ACf8A7Nerad4ShtdWtrnUIbS4trfT9InnktHh8zfIgCSCIM6uhUbv2Tw+4RyniaqsJV4cnhMLU" +
                        "jLkrqVRuLUW03KSSknayeq5rJp30/GPEPi/N+GKTxdLiSGLxVKUeeg40kpJySaUYtuLV7taPlu01bX6d" +
                        "/4KMftiftEeB7D/AIJ4+Kf2WdTGmax+0rqaLB4G1aO2ms9al1m00d9Msrx5ohIIxLfgOY2jYgnkcEfA+" +
                        "CPhlkmLnnVLNo80cHH41dOCi6nPKNna9o6XuvJn3/jj4n53hIZJVymXLLGS+B2am5KnyRldXteWtrPzR" +
                        "xX7Tegf8FMP2KPhuP2vW/bLj/aEh8E3Gn6p8bPgjrXhbTtL0B9OvLqK1lTTmtS0gihkmVS6rDJszJkYK" +
                        "H1eA8ZwJxVjv7G/sv6q6ikqVVVJSnzJNrnvpdpXs3JX93szyuPsFx7wpgP7Z/tVYtU3F1aLpxjDlbSfJ" +
                        "bWybtdKLt73Sx0/7b/7ZH7RFr4w/wCCZ+v/ALH+vrbxftiWOty2fgjxZDbPpN1Jqmm6E+lT6gwgedFsW" +
                        "1hpphG4yI8Eda8/wo8Mcklhs+p5zC7wEoXnFvmXLKpzqOtnz8lldPe56Hi14o53HFZBUyWdlmEZ2hJLl" +
                        "fNGnyOWl1ye0cpWa2scX+06/wDwUa/4J5eF9F/av1D9rlv2qvh5o+paXYfHj4WeLPDOm6LZx2mo3SWYl" +
                        "09rMzGCMzSrErRmNkdkLLIpZB6vAS4I41xE8ojlv1KvKMnRqRqSm7xV7Sva7sm2ndNJpOLszyuP3xzwT" +
                        "h4ZxLM/r1CMoqtTlTjBWk7Xja9ldpK1mm02pK6PZf2uv22/F3in41fAH9l39n/42aH+zlYfF3wpB8e/i" +
                        "J+0f8QBpTf2R4Xv0k+xWunxatKlu15ceWSQxyNyFWA3sPl/Dbwpw2HyrGZrmOEni5UKrowoQ5veqK3M5" +
                        "OK5uWN/wd09EfU+JfixicRmuCynLsXDCRxFJVp158vu03flUVJ8vNK34qzWrPP/AITftKfE39nb9tX4I" +
                        "/s9a7+2Jpv7bXwK/aVttT0vQ/Egl0C68Q+E/EenQ+cqTy6DLKXguC0ar5pAIdioHlMX9niPgXAZ3wri8" +
                        "xp5ZLLsXg3FuPvqFSEnbRTSs46vTsrt8yt4vDfHmPyTivCZbUzSOZYPGKSUvcc6c4q+rg3dS0Wvd2S5X" +
                        "fj/AIZfET9vz9rX9rP9uH9nbwH+0rH8GvhD8FfGVxFffEKDQtN1TxDp1jcXV7Z6do2mJIIEWOX7HLJJO" +
                        "zeYvlgBvmKt6efZJwdw5w5lOZYjAfWMTiKKtDnlGEmlFzqT3d1zJKK91320uvMyDPOM+JOJM3y3D4/6v" +
                        "hsNWd58kZTim5KFOC0VnytuT95WWutn9GfsAfHH9pfQ/wBpv9pb9hb9qLx2vxj8TfBKx0zx14C+Ly2Vv" +
                        "p8+oaJfrbsFuY4B8zMt9AylmZkYSIzuApHxHjJwnkVXIcBn2VUfq9PEylCdK7kozV9m/wDDJdE1ytJan" +
                        "3Hgxxdn1HP8fkGbVvrFTDRjOFWyi5Qdt0t/ii+rT5k29D9g6/mg/pwKACgAoAKACgAoA+Y/2sP2T/hb+" +
                        "1/8Lb/4bfEmw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/FZ8dP2NPjv8Bvjvb/A" +
                        "LPuv+D7nX/GWv3KWnw8m8NQS3Fv4lt7iXyoJ7AgZYMeHU/NG2Q+CDWLR0qSaP6lv+Cbf/BNvw1+yB4ag" +
                        "+IPxBgtvEv7RHiW28vVdVj2z23hy2nX5rCwbkFyDiecff8Aur8mS+kY2MJzufqzVmYUAFABQAUAFABQB" +
                        "/MPpX7J3xdT/grrq3wxfwNqo/ZeX4mR/tuHxYNOvV0MaxD4fl1WNEuCn2ct/aF0Lcx5yApwMV/e+I8Rc" +
                        "tfhtHFe2j/aH1b6py8y5+VzUXpfm+Bc1/M/gHD+HGZrxLlhfYy/s/6z9b5uV8nMoOS1+H45ctt9D03/A" +
                        "ILbfBv413PxJ+B/xg+AHgjV/GniLx54V8X/ALMfxEtvCWnXl+66Nq8WLZZ/scb7I2OpXR3PhQwHXJx4P" +
                        "0VOJ8qjgcXg8xqwpwpVaWIhzSS96L1tdq79yGi1se99LHhbNZY/CY3LqM6k6tKrh58sXL3ZLS9k7L356" +
                        "vS6R9F/8FBP2EvGHiv9gj4FfCX4HeG7Xx14v/ZPuvC3iPRfA12kbxeJbXQtKk0m9t/Km2JK84l89lYgy" +
                        "bWUZZwD8T4M+LuGw/GGLxmPqOlSxyqRc1vTc5KUXdbJW5U1tdPZH3HjT4P4rE8G4PB4CmqtXAunJQe1R" +
                        "Qi4yVna7d+Zp72a3Z8y+D/jP/wTE8QWui6Fq/8AwS38SaX8Xro22n6/8JdK+EKX9/ZX0v7uRVcLD5kKS" +
                        "K4DlVcqpPlg5UfeZnwtx9RlOpDiCnLDK7VR4mya6d7Nq2l2rv4up8FlfFXh/XjCnPh6pHFOylSWF5pJ9" +
                        "e10nfWybS+FPQ/oo0bR9K8PaRpWgaFp0Oj6HodtBo+jaTpsaw29raW0SwQwxRoAqoiKFVQMADFfxPisT" +
                        "Ur1ZVKknKcm229W29W2+7Z/b2FwtOhSjTpxUYRSSS0SS0SS7JbH5Qf8E6/BXjLwv+1J/wAFQtY8S+EtT" +
                        "8O6T4u+JVtqvhTVNdsLq0t9UtRLqxM1pJcIizxjevzRkjkc81/RXjZmuFxHD/D8KVSM5U8O1JJpuLtDS" +
                        "ST0fkz+cfA/KsVh+IeIJ1aUoRqYhOLcWlJXnrFtarzRzP7C3gXxv4e/4KNf8FOPFHiDwdquh+GfFupeH" +
                        "ZfCviLWNPu7ax1NImvd7WlxPGscwXcMlGOM13eLeb4SvwRkFKnVjKpTjPmipJuPw/Ek7r5nB4Q5Pi6HH" +
                        "Gf1alKUadSUOWTi0pfF8Las/keZ/DX4dfHS1/b6/wCCtfiPwH4X1Xw74g8aeBrfTvgn421OxuLTTbvxC" +
                        "PD0EVk1teXKRwSGO5C7tr4GDnGK97Pc7yiXB3DlLEVIzhTrN1YJpyUOd814q7V436Hg5Dkebx4y4kq4e" +
                        "nKE6lBKlNpqLnyLltJ2TtK3XQ/P/wCBWsfCTwx+xN8T/wBm63/YY8Y+Nv8AgoN4w0fxp4P8cazrvgU3W" +
                        "qWuo61HqFtHqs2taonmWsFtbSgqi7WMqEAEuZT+ycXYbMsRxVh8zeb0qeS050pQSrWi4x5W4KnHSTlJb" +
                        "u65X5cp+L8IYrLcPwniMrWUVqmdVIVYzbo3kpT5kpupLWKjF7Kz5ltrzP0r9oH4RfFjVf8AghZ+y58Pd" +
                        "L+GHiLUvH2j+JbW51bwPYaLqU2sWsaaj4iLNNZxwmZFAkXJZB94eorw+DeJcup+LeYYmeIpqjKm7Tc4q" +
                        "L92ltK9ns+vQ97jThnMqnhDl+Ghh6jrRqK8FCTkveq7xtdbrp1Pqbxl8FfGX/BLP9qXwl8av2Y/hzrfj" +
                        "H9jj45/YvAPx7+Cnw/s9R1u88OX9nAUt9XtLeETzuAoaUEhsnzYmZfNiK/nuWcVYXxB4fqYHNK8KeZ4a" +
                        "86NWbjBTTesJN2S1sun2ZJPllf9DzThTFeHnENLHZVQnUyvE2hWpQUpuEktJxSu3pd9ftRbXNG3kXxs+" +
                        "EvgL9mz9uX42/Hb9o/9kq6/al/ZS/ahg0rxh4a+I+i+F4vE154O1mK3CzQz20qq0EUpkctnaXQRFd7o6" +
                        "j6XhXiPGZ7wlhMBlmZLBZjgnKMoOp7NVY30aa3asrb2fNeyaZ8zxXw3g8h4uxeYZnlrxuXY1RlGoqftH" +
                        "Sklqmnsnd32uuW12mj9B/2F9e/Yn8ffEHxXr/7L/wCyFqXwav8Aw7pMUcnxZ1jwAPCtjqNvqEyNJZWl2" +
                        "3zSOPLR5EIXIwRuAyPxjxbwfFWDwVOnmuZRxCnL+Gq3tHFxWkpR6btJ69nY/a/CLGcKY3G1KmVZZLDuE" +
                        "f4jo+zUlJ6xjLq9E2tO6udF/wAFe/Cvijxt/wAE7v2hfDHgzw3f+LvEup/8In/Zvh7wxZ3F/fXHk+OdG" +
                        "uJPKgtEkkfZHGzthThQSeAa4vo15jh8JxrgqtepGnTXtLyk1FK9GolduyV27ep2/SYy7EYvgjG0qFOVS" +
                        "pL2doxTk3atTbslduyTfofXP7M2n3+k/s3/ALPularZTaZqemeCPCmn6lpuoRvDPbzw6DaxyRyRyAMjo" +
                        "wIZSAQRg1+bceVoVM8xs4NOLrVGmtU05uzT6pn6VwDRnTyLBQmnGUaNNNPRpqEbpro0fmv/AMELvAvjf" +
                        "4efsVapoPj/AMHar4H11/G+u6gmi+MNPu9MuzBJp+mqkghvY432MUIDYwcH0r90+ltm+ExvFUamHqxqQ" +
                        "9jBXjJSV+ael02rn4R9EPJ8XguFJU8RSlSn7abtKLi7csNbNJ2P2Wr+YD+pD8jv+CJXgrxl4B/YW0Hw9" +
                        "478Jan4K1+PxL4iu5ND8W2F1pt4sUtxGUcw3kcbhWA4OMGv6Q+lXmuFxnF06mHqRqQ9nBXi1JbPqm0fz" +
                        "V9E/KsVguEIU8RSlTn7SbtKLi7XXRpM+DvhB8I/2mIP2XP+CxWhfDXwVr/hr4mePPH+s6h8P4bjTtQsb" +
                        "zWdJk1aV78aZ5iRvO1xYGaOExZ3MygZJFfr/EvEmQviDhipiqsJ0KVCKn70Woy5Vy8+9uWfK3fZJ3Px7" +
                        "hnhrP1w/wAUU8LSqQxFWvNw92Sc48z5uTa/NDmStu2rHzb441f4IeOP+CcU/wCzd+y5+wv4tuP2iYdE8" +
                        "PR/Gjxq3gNo7/Rr7RtT0/VtXnudYmia5uZLqa12QwRnJjkACoEEdfc5Ths2wnHCzPNc3pLBc8/ZQ9tpJ" +
                        "SjKMEoJ8sVFO7k+q3d+Y+EzbE5Ti+BnlmU5RVeOUIe1n7H3oOEoym3Ua5pOTVoxXR7JLlPov/golf8Aj" +
                        "fwR4B/4Im6n4V8Gz+I/iR4Q1Hwtf+HPh9eBrO5v9b0+y8LyW+nOLgKYnlnjWI7wNpPPSvifBSjhMXjOK" +
                        "o1aqhQqRqKU1qlCTrXkrbpJ303PuPG6ti8Jg+E50aTnXpypuMHo3OKo2g77NyVtdj1v9r39uXxF+2z8F" +
                        "dd/ZB/Ze/Zv+IrfGn4xNY+FPHNr8SvDM2iWXhCwF7FPeHUbiaR442/d+UXbCKGLbtwVT834a+EtDhXNY" +
                        "ZzmuOw/1XD3lD2dRTdV2ajypK73vbd2ta12vpfEzxdr8WZVPJcpwGI+t4i0Z+0puCpK6cudt2W1r7K7d" +
                        "72T4f8A4KC+G/F37Kvj3/gi94S+FnhWf4s+K/gJH4g0HS/CmkBYrvxH/YGm+FYLyOAMDie6ihlKAKTvY" +
                        "YUnAPreDOOw3EOD4prYuoqFPFODcntDnlWcW/KLav5LVrc8nxpwGJ4dxnCtHCU3XqYXnSit6nJGipJec" +
                        "knbzeiexv8A7Z/7XXiH/got8J4f2Lv2VfgD47bxf8V9U0OD4r+IPil4buND03wfp2m6nb6w326d2lVJF" +
                        "ntoy5zt2Bghd2VTx+F3htR4JzF53m2MoeyoRn7ONOanKrKUXH3VpdWbt1vZuyTZ2eKfiXX44y1ZHlGCr" +
                        "+1ryh7SVSm4RpRjJS9562d0r9LXSu2kR/tq/snWf7Pv7SH7Pn7Sur/s3S/tcfsy+FvAWmfs+fGPwLp+j" +
                        "x65q+mHQraS2s9Zjs5CQf3SxDe3yrsdHdPMRg/CzxFlnWR43LIY5YHHzryrUpuXJGXO05U3L1vpu7ppP" +
                        "laJ8VfDiOS57gs0ngHj8BChGhVgo88o8iajUUfS2uys02uZM+jP2TfGP/BOn4p/G3wbZfs7/sPan4T8X" +
                        "aXHd+J7P4t3nwzTQ9L0CaxikG2XUX5indgY49qkFsruzgH4jxGyzjbL8qqyzLNozpStF01X55TTttHql" +
                        "u+ttbH3PhvmnA+Y5tSjluUSp1Y3kqrw/JGDV959G3oul9Lln/gnB4F8b+Fv21f+Cr+veJ/B2q+HNC8Ze" +
                        "N9A1DwhrWvafd2dpqsEeoeJ2eSzmuI0SdFEyEtGSBuX1FR44ZvhMRwrw7TpVYznTozUkpJuL5aOkkndP" +
                        "R79mX4F5Pi8PxXxHUq0pQhUrQcW4tKS5q2sW1ZrVbX3R0vwe8FeMrH/AILG/tbeOb3wlqdn4K1r4a+Gt" +
                        "K0bxhdWF1Hpd3dRLou+GG7dBDJIvltuVWJGDkcGuHibNcLPwxy2hGpF1Y4io3G65kn7TVxvdLVa2O/hj" +
                        "KsVDxQzLESpSVKWHppScXytr2d0pWs3o9Ez6T/Ya/bA1/8AbG8EePvGGv8AwF1v4CzeCvENx4HttH8ZT" +
                        "SXDX6QQRymZXls7IrIhfZLEFYI2BvbPHwviz4aUeGMXRo08ZDFKpTU7xVrXbVvilo907q66I+88I/E2t" +
                        "xRhK1apg54V06jhaTveyTv8MdVs1Z2fVn29X5QfrIUAFABQAUAFABQBkXnh/QdR1XRtd1DRLS+1zw79o" +
                        "/4R/Wby2hlu7D7ZGIZ/s8zqXi81AFfYRuHByKANegAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAK" +
                        "ACgAoAKACgAoAKACgAoAKACgD89f20v2QPG/wC0v8Xv2JfiJ4U8TaVoOmfsxePbT4r+LbHxCbsT6hZ2+" +
                        "qaVfNDafZoZV80rYOB5hUZI564/aPC3xLwmQ5ZmuGrU5SljKDpxcbWi3GavK7WnvLa7PxTxV8MsXn2Z5" +
                        "TiaNSMY4KuqklK95JSg7Rsnr7r3stj9Cq/Fz9rPg39qD9lHxl8c/wBpj9iD43eHvEemaRoH7L2seJfEf" +
                        "i7SdZN0LzUItai0uOJbPyIpE3IbFt3mMo5GM81+v8A+ImFynIc2wNSEpTxsKcYtWtHkc7812nrzK1kz8" +
                        "d8QPDnFZvn+UY+nUjGGCnUlJO95KahblsmtOV3u0feVfkB+xBQAUAFABQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFA" +
                        "BQAUAFAH//ZCw==";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.PointSeriesLabel pointSeriesLabel1 = new DevExpress.XtraCharts.PointSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView1 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram2 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.PointSeriesLabel pointSeriesLabel2 = new DevExpress.XtraCharts.PointSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions2 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView2 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary10 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary11 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.pageFooterBand1 = new DevExpress.XtraReports.UI.PageFooterBand();
            this.reportHeaderBand1 = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.PageHeader = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.GroupHeader2 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.label52 = new DevExpress.XtraReports.UI.XRLabel();
            this.label28 = new DevExpress.XtraReports.UI.XRLabel();
            this.label25 = new DevExpress.XtraReports.UI.XRLabel();
            this.label24 = new DevExpress.XtraReports.UI.XRLabel();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label61 = new DevExpress.XtraReports.UI.XRLabel();
            this.label56 = new DevExpress.XtraReports.UI.XRLabel();
            this.label55 = new DevExpress.XtraReports.UI.XRLabel();
            this.label54 = new DevExpress.XtraReports.UI.XRLabel();
            this.label53 = new DevExpress.XtraReports.UI.XRLabel();
            this.label41 = new DevExpress.XtraReports.UI.XRLabel();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo3 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label198 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.label37 = new DevExpress.XtraReports.UI.XRLabel();
            this.label36 = new DevExpress.XtraReports.UI.XRLabel();
            this.label38 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.label39 = new DevExpress.XtraReports.UI.XRLabel();
            this.label35 = new DevExpress.XtraReports.UI.XRLabel();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.label32 = new DevExpress.XtraReports.UI.XRLabel();
            this.label34 = new DevExpress.XtraReports.UI.XRLabel();
            this.label33 = new DevExpress.XtraReports.UI.XRLabel();
            this.line2 = new DevExpress.XtraReports.UI.XRLine();
            this.line4 = new DevExpress.XtraReports.UI.XRLine();
            this.chart3 = new DevExpress.XtraReports.UI.XRChart();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label26 = new DevExpress.XtraReports.UI.XRLabel();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label57 = new DevExpress.XtraReports.UI.XRLabel();
            this.label58 = new DevExpress.XtraReports.UI.XRLabel();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.label44 = new DevExpress.XtraReports.UI.XRLabel();
            this.label48 = new DevExpress.XtraReports.UI.XRLabel();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.label59 = new DevExpress.XtraReports.UI.XRLabel();
            this.label47 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.pageInfo4 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.label63 = new DevExpress.XtraReports.UI.XRLabel();
            this.line9 = new DevExpress.XtraReports.UI.XRLine();
            this.label50 = new DevExpress.XtraReports.UI.XRLabel();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.label69 = new DevExpress.XtraReports.UI.XRLabel();
            this.line11 = new DevExpress.XtraReports.UI.XRLine();
            this.line10 = new DevExpress.XtraReports.UI.XRLine();
            this.label72 = new DevExpress.XtraReports.UI.XRLabel();
            this.label71 = new DevExpress.XtraReports.UI.XRLabel();
            this.label62 = new DevExpress.XtraReports.UI.XRLabel();
            this.label65 = new DevExpress.XtraReports.UI.XRLabel();
            this.pageBreak1 = new DevExpress.XtraReports.UI.XRPageBreak();
            this.label27 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.label51 = new DevExpress.XtraReports.UI.XRLabel();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.TableTableAdapter = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand1 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection1 = new System.Data.OleDb.OleDbConnection();
            this.RepVentaNeta = new XtraReportSerialization.RepVentaNetaDataSet();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.Movimiento = new DevExpress.XtraReports.UI.CalculatedField();
            this.Utilidad = new DevExpress.XtraReports.UI.CalculatedField();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label52,
                        this.label28,
                        this.label25,
                        this.label24,
                        this.label23,
                        this.label2,
                        this.label19,
                        this.label18,
                        this.label4,
                        this.label3,
                        this.label1});
            this.Detail.HeightF = 18.00003F;
            this.Detail.Name = "Detail";
            this.Detail.Scripts.OnBeforePrint = "Detail_BeforePrint";
            // 
            // pageFooterBand1
            // 
            this.pageFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line7,
                        this.pageInfo2,
                        this.pageInfo1});
            this.pageFooterBand1.HeightF = 24.25003F;
            this.pageFooterBand1.Name = "pageFooterBand1";
            // 
            // reportHeaderBand1
            // 
            this.reportHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label61,
                        this.label56,
                        this.label55,
                        this.label54,
                        this.label53,
                        this.label41,
                        this.line6,
                        this.pageInfo3,
                        this.label198,
                        this.pictureBox2});
            this.reportHeaderBand1.HeightF = 168.2917F;
            this.reportHeaderBand1.Name = "reportHeaderBand1";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 25F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 22F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // PageHeader
            // 
            this.PageHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label37,
                        this.label36,
                        this.label38,
                        this.label40,
                        this.label39,
                        this.label35,
                        this.label31,
                        this.label30,
                        this.label32,
                        this.label34,
                        this.label33,
                        this.line2,
                        this.line4});
            this.PageHeader.HeightF = 24.25003F;
            this.PageHeader.Name = "PageHeader";
            this.PageHeader.PrintOn = DevExpress.XtraReports.UI.PrintOnPages.NotWithReportHeader;
            this.PageHeader.Visible = false;
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart3});
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Moneda", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 281.2934F;
            this.GroupHeader1.Level = 1;
            this.GroupHeader1.Name = "GroupHeader1";
            this.GroupHeader1.Scripts.OnBeforePrint = "GroupFooter1_BeforePrint";
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line8,
                        this.label9,
                        this.label8,
                        this.label7,
                        this.label29,
                        this.label26,
                        this.label5,
                        this.label12,
                        this.label6,
                        this.label10});
            this.GroupFooter1.HeightF = 20.08336F;
            this.GroupFooter1.Level = 1;
            this.GroupFooter1.Name = "GroupFooter1";
            this.GroupFooter1.Scripts.OnBeforePrint = "GroupFooter1_BeforePrint";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label57,
                        this.label58,
                        this.label49,
                        this.label44,
                        this.label48,
                        this.chart1,
                        this.label59,
                        this.label47,
                        this.pictureBox1,
                        this.pageInfo4,
                        this.line1,
                        this.label63,
                        this.line9,
                        this.label50,
                        this.label46,
                        this.label42,
                        this.label43,
                        this.label45,
                        this.label69,
                        this.line11,
                        this.line10,
                        this.label72,
                        this.label71,
                        this.label62,
                        this.label65,
                        this.pageBreak1});
            this.ReportFooter.HeightF = 761.6673F;
            this.ReportFooter.Name = "ReportFooter";
            this.ReportFooter.Scripts.OnBeforePrint = "ReportFooter_BeforePrint";
            // 
            // GroupHeader2
            // 
            this.GroupHeader2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label27,
                        this.label22,
                        this.label21,
                        this.label51,
                        this.line5,
                        this.line3,
                        this.label16,
                        this.label17,
                        this.label11,
                        this.label13,
                        this.label20,
                        this.label15,
                        this.label14});
            this.GroupHeader2.HeightF = 22.91667F;
            this.GroupHeader2.Name = "GroupHeader2";
            this.GroupHeader2.RepeatEveryPage = true;
            this.GroupHeader2.Scripts.OnBeforePrint = "GroupHeader2_BeforePrint";
            // 
            // label52
            // 
            this.label52.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotalMC", "{0:$#,#.00}")});
            this.label52.Font = new System.Drawing.Font("Arial", 7F);
            this.label52.LocationFloat = new DevExpress.Utils.PointFloat(992F, 0F);
            this.label52.Name = "label52";
            this.label52.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label52.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label52.StylePriority.UseFont = false;
            this.label52.StylePriority.UseTextAlignment = false;
            this.label52.Text = "label28";
            this.label52.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label28
            // 
            this.label28.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Utilidad", "{0:$#,#.00}")});
            this.label28.Font = new System.Drawing.Font("Arial", 7F);
            this.label28.LocationFloat = new DevExpress.Utils.PointFloat(822.0001F, 0F);
            this.label28.Name = "label28";
            this.label28.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label28.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label28.StylePriority.UseFont = false;
            this.label28.StylePriority.UseTextAlignment = false;
            this.label28.Text = "label28";
            this.label28.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label25
            // 
            this.label25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SubTotal", "{0:$#,#.00}")});
            this.label25.Font = new System.Drawing.Font("Arial", 7F);
            this.label25.LocationFloat = new DevExpress.Utils.PointFloat(585.7498F, 0F);
            this.label25.Name = "label25";
            this.label25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label25.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label25.StylePriority.UseFont = false;
            this.label25.StylePriority.UseTextAlignment = false;
            this.label25.Text = "label25";
            this.label25.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label24
            // 
            this.label24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotal", "{0:$#,#.00}")});
            this.label24.Font = new System.Drawing.Font("Arial", 7F);
            this.label24.LocationFloat = new DevExpress.Utils.PointFloat(737.0001F, 0F);
            this.label24.Name = "label24";
            this.label24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label24.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label24.StylePriority.UseFont = false;
            this.label24.StylePriority.UseTextAlignment = false;
            this.label24.Text = "label24";
            this.label24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label23
            // 
            this.label23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotal", "{0:$#,#.00}")});
            this.label23.Font = new System.Drawing.Font("Arial", 7F);
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(907.0002F, 0F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseTextAlignment = false;
            this.label23.Text = "label23";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label2
            // 
            this.label2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Impuestos", "{0:$#,#.00}")});
            this.label2.Font = new System.Drawing.Font("Arial", 7F);
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(670.7499F, 0F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(66.24976F, 18.00003F);
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.Text = "label2";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.DescuentosTotales", "{0:$#,#.00}")});
            this.label19.Font = new System.Drawing.Font("Arial", 7F);
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(510.7498F, 0F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.SizeF = new System.Drawing.SizeF(75.00006F, 18.00003F);
            this.label19.StylePriority.UseFont = false;
            this.label19.StylePriority.UseTextAlignment = false;
            this.label19.Text = "label19";
            this.label19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PrecioTotal", "{0:$#,#.00}")});
            this.label18.Font = new System.Drawing.Font("Arial", 7F);
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(425.7498F, 0F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            this.label18.Text = "label18";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label4
            // 
            this.label4.CanGrow = false;
            this.label4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ClienteNombre")});
            this.label4.Font = new System.Drawing.Font("Arial", 7F);
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(180F, 0F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(245.7498F, 18.00003F);
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "label4";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label4.WordWrap = false;
            // 
            // label3
            // 
            this.label3.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaEmision", "{0:dd/MM/yyyy}")});
            this.label3.Font = new System.Drawing.Font("Arial", 7F);
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(120F, 0F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseTextAlignment = false;
            this.label3.Text = "label3";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label1
            // 
            this.label1.CanGrow = false;
            this.label1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Movimiento")});
            this.label1.Font = new System.Drawing.Font("Arial", 7F);
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseTextAlignment = false;
            this.label1.Text = "label1";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label1.WordWrap = false;
            // 
            // line7
            // 
            this.line7.BorderColor = System.Drawing.Color.Gray;
            this.line7.ForeColor = System.Drawing.Color.Gray;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            this.line7.StylePriority.UseBorderColor = false;
            this.line7.StylePriority.UseForeColor = false;
            // 
            // pageInfo2
            // 
            this.pageInfo2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo2.Format = "Página {0} de {1}";
            this.pageInfo2.LocationFloat = new DevExpress.Utils.PointFloat(685.6545F, 2.083334F);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo2.SizeF = new System.Drawing.SizeF(381.3455F, 18F);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.StylePriority.UseFont = false;
            this.pageInfo2.StylePriority.UseTextAlignment = false;
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.083333F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo1.StyleName = "PageInfo";
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label61
            // 
            this.label61.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label61.LocationFloat = new DevExpress.Utils.PointFloat(509.9998F, 141.3749F);
            this.label61.Name = "label61";
            this.label61.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label61.SizeF = new System.Drawing.SizeF(74.16666F, 17.99997F);
            this.label61.StylePriority.UseFont = false;
            this.label61.Text = "De la Fecha";
            // 
            // label56
            // 
            this.label56.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label56.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label56.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label56.LocationFloat = new DevExpress.Utils.PointFloat(0F, 141.3749F);
            this.label56.Name = "label56";
            this.label56.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label56.SizeF = new System.Drawing.SizeF(483.8333F, 18.00001F);
            this.label56.StyleName = "Title";
            this.label56.StylePriority.UseFont = false;
            this.label56.StylePriority.UseForeColor = false;
            this.label56.StylePriority.UseTextAlignment = false;
            this.label56.Text = "label198";
            this.label56.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label55
            // 
            this.label55.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label55.LocationFloat = new DevExpress.Utils.PointFloat(784.2498F, 141.3749F);
            this.label55.Name = "label55";
            this.label55.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label55.SizeF = new System.Drawing.SizeF(92F, 18F);
            this.label55.StylePriority.UseFont = false;
            this.label55.Text = "Hasta la Fecha";
            // 
            // label54
            // 
            this.label54.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaHasta", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label54.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label54.LocationFloat = new DevExpress.Utils.PointFloat(876.2498F, 141.3749F);
            this.label54.Name = "label54";
            this.label54.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label54.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label54.StylePriority.UseFont = false;
            this.label54.Text = "label54";
            // 
            // label53
            // 
            this.label53.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaDesde", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label53.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label53.LocationFloat = new DevExpress.Utils.PointFloat(584.2498F, 141.3749F);
            this.label53.Name = "label53";
            this.label53.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label53.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label53.StylePriority.UseFont = false;
            this.label53.Text = "label53";
            // 
            // label41
            // 
            this.label41.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label41.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label41.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label41.LocationFloat = new DevExpress.Utils.PointFloat(368.2083F, 117.7916F);
            this.label41.Name = "label41";
            this.label41.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label41.SizeF = new System.Drawing.SizeF(395.7917F, 18.00001F);
            this.label41.StyleName = "Title";
            this.label41.StylePriority.UseFont = false;
            this.label41.StylePriority.UseForeColor = false;
            this.label41.StylePriority.UseTextAlignment = false;
            this.label41.Text = "label41";
            this.label41.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // line6
            // 
            this.line6.BorderColor = System.Drawing.Color.Gray;
            this.line6.ForeColor = System.Drawing.Color.Gray;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 135.7916F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(1077F, 5.583328F);
            this.line6.StylePriority.UseBorderColor = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // pageInfo3
            // 
            this.pageInfo3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo3.LocationFloat = new DevExpress.Utils.PointFloat(764F, 117.7916F);
            this.pageInfo3.Name = "pageInfo3";
            this.pageInfo3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo3.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo3.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo3.StyleName = "PageInfo";
            this.pageInfo3.StylePriority.UseFont = false;
            this.pageInfo3.StylePriority.UseTextAlignment = false;
            this.pageInfo3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label198
            // 
            this.label198.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label198.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label198.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label198.LocationFloat = new DevExpress.Utils.PointFloat(0F, 117.7916F);
            this.label198.Name = "label198";
            this.label198.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label198.SizeF = new System.Drawing.SizeF(368.2083F, 18F);
            this.label198.StyleName = "Title";
            this.label198.StylePriority.UseFont = false;
            this.label198.StylePriority.UseForeColor = false;
            this.label198.StylePriority.UseTextAlignment = false;
            this.label198.Text = "label198";
            this.label198.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // label37
            // 
            this.label37.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label37.LocationFloat = new DevExpress.Utils.PointFloat(991.2498F, 2.083333F);
            this.label37.Name = "label37";
            this.label37.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label37.SizeF = new System.Drawing.SizeF(85F, 18.00003F);
            this.label37.StylePriority.UseFont = false;
            this.label37.StylePriority.UseTextAlignment = false;
            this.label37.Text = "Importe M.C";
            this.label37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label36
            // 
            this.label36.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label36.LocationFloat = new DevExpress.Utils.PointFloat(670.0002F, 2.083333F);
            this.label36.Name = "label36";
            this.label36.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label36.SizeF = new System.Drawing.SizeF(67F, 18F);
            this.label36.StylePriority.UseFont = false;
            this.label36.StylePriority.UseTextAlignment = false;
            this.label36.Text = "Impuestos";
            this.label36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label38
            // 
            this.label38.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label38.LocationFloat = new DevExpress.Utils.PointFloat(906.9998F, 2.083333F);
            this.label38.Name = "label38";
            this.label38.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label38.SizeF = new System.Drawing.SizeF(84.25006F, 18F);
            this.label38.StylePriority.UseFont = false;
            this.label38.StylePriority.UseTextAlignment = false;
            this.label38.Text = "Importe Total";
            this.label38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label40
            // 
            this.label40.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(822.0002F, 2.083333F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label40.StylePriority.UseFont = false;
            this.label40.StylePriority.UseTextAlignment = false;
            this.label40.Text = "Utilidad";
            this.label40.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label39
            // 
            this.label39.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label39.LocationFloat = new DevExpress.Utils.PointFloat(737.0002F, 2.083333F);
            this.label39.Name = "label39";
            this.label39.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label39.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label39.StylePriority.UseFont = false;
            this.label39.StylePriority.UseTextAlignment = false;
            this.label39.Text = "Costo Total";
            this.label39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label35
            // 
            this.label35.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label35.LocationFloat = new DevExpress.Utils.PointFloat(424.9998F, 2.083333F);
            this.label35.Name = "label35";
            this.label35.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label35.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label35.StylePriority.UseFont = false;
            this.label35.StylePriority.UseTextAlignment = false;
            this.label35.Text = "Precio Total";
            this.label35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label31
            // 
            this.label31.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(180F, 2.083333F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(244.9998F, 18.00003F);
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseTextAlignment = false;
            this.label31.Text = "Cliente";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label30
            // 
            this.label30.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.083333F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label30.StylePriority.UseFont = false;
            this.label30.StylePriority.UseTextAlignment = false;
            this.label30.Text = "Movimiento";
            this.label30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label32
            // 
            this.label32.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label32.LocationFloat = new DevExpress.Utils.PointFloat(585.0002F, 2.083333F);
            this.label32.Name = "label32";
            this.label32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label32.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label32.StylePriority.UseFont = false;
            this.label32.StylePriority.UseTextAlignment = false;
            this.label32.Text = "SubTotal";
            this.label32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label34
            // 
            this.label34.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label34.LocationFloat = new DevExpress.Utils.PointFloat(509.9998F, 2.083333F);
            this.label34.Name = "label34";
            this.label34.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label34.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label34.StylePriority.UseFont = false;
            this.label34.StylePriority.UseTextAlignment = false;
            this.label34.Text = "Descuentos";
            this.label34.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label33
            // 
            this.label33.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label33.LocationFloat = new DevExpress.Utils.PointFloat(120F, 2.083333F);
            this.label33.Name = "label33";
            this.label33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label33.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label33.StylePriority.UseFont = false;
            this.label33.StylePriority.UseTextAlignment = false;
            this.label33.Text = "Emisión";
            this.label33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // line2
            // 
            this.line2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 20.08336F);
            this.line2.Name = "line2";
            this.line2.SizeF = new System.Drawing.SizeF(1077F, 2.083332F);
            // 
            // line4
            // 
            this.line4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line4.Name = "line4";
            this.line4.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            // 
            // chart3
            // 
            this.chart3.BorderColor = System.Drawing.Color.Black;
            this.chart3.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart3.DataMember = "Table";
            xYDiagram1.AxisX.Alignment = DevExpress.XtraCharts.AxisAlignment.Zero;
            xYDiagram1.AxisX.Label.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            this.chart3.Diagram = xYDiagram1;
            this.chart3.IndicatorsPaletteName = "Default";
            this.chart3.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart3.Legend.HorizontalIndent = 1;
            this.chart3.Legend.Margins.Bottom = 1;
            this.chart3.Legend.Margins.Left = 1;
            this.chart3.Legend.Margins.Right = 1;
            this.chart3.Legend.Margins.Top = 1;
            this.chart3.Legend.TextOffset = 0;
            this.chart3.Legend.VerticalIndent = 1;
            this.chart3.LocationFloat = new DevExpress.Utils.PointFloat(12.5F, 0F);
            this.chart3.Name = "chart3";
            this.chart3.Scripts.OnBeforePrint = "chart2_BeforePrint";
            this.chart3.SeriesDataMember = "SaldoDescripcion";
            this.chart3.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart3.SeriesTemplate.ArgumentDataMember = "FechaGrafica";
            pointSeriesLabel1.Font = new System.Drawing.Font("Arial", 6F);
            pointSeriesLabel1.LineVisible = true;
            pointSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart3.SeriesTemplate.Label = pointSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart3.SeriesTemplate.PointOptions = pointOptions1;
            this.chart3.SeriesTemplate.ValueDataMembersSerializable = "SaldoImporte";
            this.chart3.SeriesTemplate.View = lineSeriesView1;
            this.chart3.SizeF = new System.Drawing.SizeF(1049F, 274.0017F);
            // 
            // line8
            // 
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(0.0001220703F, 0F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            // 
            // label9
            // 
            this.label9.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.DescuentosTotales")});
            this.label9.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(509.9998F, 2.083333F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(75.75009F, 18.00003F);
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseTextAlignment = false;
            summary1.FormatString = "{0:$#,#.00}";
            summary1.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label9.Summary = summary1;
            this.label9.Text = "label9";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label8
            // 
            this.label8.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Impuestos")});
            this.label8.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(670.7499F, 2.083333F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(66.25024F, 18.00003F);
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseTextAlignment = false;
            summary2.FormatString = "{0:$#,#.00}";
            summary2.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label8.Summary = summary2;
            this.label8.Text = "label8";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SubTotal")});
            this.label7.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(585.7498F, 2.083333F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseTextAlignment = false;
            summary3.FormatString = "{0:$#,#.00}";
            summary3.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label7.Summary = summary3;
            this.label7.Text = "label7";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label29
            // 
            this.label29.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Utilidad")});
            this.label29.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(822.0002F, 2.083333F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseTextAlignment = false;
            summary4.FormatString = "{0:$#,#.00}";
            summary4.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label29.Summary = summary4;
            this.label29.Text = "label29";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label26
            // 
            this.label26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotal")});
            this.label26.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label26.LocationFloat = new DevExpress.Utils.PointFloat(737.0002F, 2.083333F);
            this.label26.Name = "label26";
            this.label26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label26.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label26.StylePriority.UseFont = false;
            this.label26.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:$#,#.00}";
            summary5.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label26.Summary = summary5;
            this.label26.Text = "label26";
            this.label26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label5
            // 
            this.label5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotal")});
            this.label5.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(907.0002F, 2.083333F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:$#,#.00}";
            summary6.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label5.Summary = summary6;
            this.label5.Text = "label5";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label12
            // 
            this.label12.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.083333F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(52.29166F, 18F);
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseTextAlignment = false;
            this.label12.Text = "Total en ";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label6
            // 
            this.label6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Moneda")});
            this.label6.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(52.29166F, 2.083333F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(137.7083F, 18.00003F);
            this.label6.StyleName = "DataField";
            this.label6.StylePriority.UseFont = false;
            this.label6.StylePriority.UseTextAlignment = false;
            this.label6.Text = "label10";
            this.label6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label10
            // 
            this.label10.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PrecioTotal")});
            this.label10.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(424.9998F, 2.083333F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label10.StylePriority.UseFont = false;
            this.label10.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:$#,#.00}";
            summary7.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label10.Summary = summary7;
            this.label10.Text = "label10";
            this.label10.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label57
            // 
            this.label57.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label57.LocationFloat = new DevExpress.Utils.PointFloat(509.9998F, 176.25F);
            this.label57.Name = "label57";
            this.label57.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label57.SizeF = new System.Drawing.SizeF(74.16666F, 17.99997F);
            this.label57.StylePriority.UseFont = false;
            this.label57.Text = "De la Fecha";
            // 
            // label58
            // 
            this.label58.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label58.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label58.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label58.LocationFloat = new DevExpress.Utils.PointFloat(0F, 176.25F);
            this.label58.Name = "label58";
            this.label58.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label58.SizeF = new System.Drawing.SizeF(483.8333F, 18.00001F);
            this.label58.StyleName = "Title";
            this.label58.StylePriority.UseFont = false;
            this.label58.StylePriority.UseForeColor = false;
            this.label58.StylePriority.UseTextAlignment = false;
            this.label58.Text = "label198";
            this.label58.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label49
            // 
            this.label49.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(784.2498F, 176.25F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(92F, 18F);
            this.label49.StylePriority.UseFont = false;
            this.label49.Text = "Hasta la Fecha";
            // 
            // label44
            // 
            this.label44.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaHasta", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label44.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label44.LocationFloat = new DevExpress.Utils.PointFloat(876.2498F, 176.25F);
            this.label44.Name = "label44";
            this.label44.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label44.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label44.StylePriority.UseFont = false;
            this.label44.Text = "label54";
            // 
            // label48
            // 
            this.label48.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.FechaDesde", "{0:dddd d\' de \'MMMM\' de \'yyyy}")});
            this.label48.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label48.LocationFloat = new DevExpress.Utils.PointFloat(584.2498F, 176.25F);
            this.label48.Name = "label48";
            this.label48.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label48.SizeF = new System.Drawing.SizeF(200F, 18F);
            this.label48.StylePriority.UseFont = false;
            this.label48.Text = "label53";
            // 
            // chart1
            // 
            this.chart1.AppearanceName = "Pastel Kit";
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart1.DataMember = "Table";
            xYDiagram2.AxisX.Label.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            xYDiagram2.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram2.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram2.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            xYDiagram2.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram2.AxisY.VisibleInPanesSerializable = "-1";
            this.chart1.Diagram = xYDiagram2;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart1.Legend.HorizontalIndent = 0;
            this.chart1.Legend.TextOffset = 0;
            this.chart1.Legend.VerticalIndent = 0;
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(12.49996F, 214.2516F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart1.SeriesDataMember = "SaldoDescripcionMC";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "FechaGrafica";
            pointSeriesLabel2.Font = new System.Drawing.Font("Arial", 6F);
            pointSeriesLabel2.LineVisible = true;
            pointSeriesLabel2.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart1.SeriesTemplate.Label = pointSeriesLabel2;
            pointOptions2.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions2;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "SaldoImporteMC";
            this.chart1.SeriesTemplate.View = lineSeriesView2;
            this.chart1.SizeF = new System.Drawing.SizeF(1049F, 486.04F);
            // 
            // label59
            // 
            this.label59.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label59.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label59.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label59.LocationFloat = new DevExpress.Utils.PointFloat(368.2081F, 156.25F);
            this.label59.Name = "label59";
            this.label59.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label59.SizeF = new System.Drawing.SizeF(395.7917F, 18.00001F);
            this.label59.StyleName = "Title";
            this.label59.StylePriority.UseFont = false;
            this.label59.StylePriority.UseForeColor = false;
            this.label59.StylePriority.UseTextAlignment = false;
            this.label59.Text = "label41";
            this.label59.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label47
            // 
            this.label47.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label47.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label47.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label47.LocationFloat = new DevExpress.Utils.PointFloat(0.0001220703F, 156.25F);
            this.label47.Name = "label47";
            this.label47.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label47.SizeF = new System.Drawing.SizeF(368.2083F, 18F);
            this.label47.StyleName = "Title";
            this.label47.StylePriority.UseFont = false;
            this.label47.StylePriority.UseForeColor = false;
            this.label47.StylePriority.UseTextAlignment = false;
            this.label47.Text = "label198";
            this.label47.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 43.75F);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // pageInfo4
            // 
            this.pageInfo4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo4.LocationFloat = new DevExpress.Utils.PointFloat(763.9998F, 156.25F);
            this.pageInfo4.Name = "pageInfo4";
            this.pageInfo4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo4.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo4.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo4.StyleName = "PageInfo";
            this.pageInfo4.StylePriority.UseFont = false;
            this.pageInfo4.StylePriority.UseTextAlignment = false;
            this.pageInfo4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line1
            // 
            this.line1.BorderColor = System.Drawing.Color.Gray;
            this.line1.ForeColor = System.Drawing.Color.Gray;
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 174.25F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(1077F, 2F);
            this.line1.StylePriority.UseBorderColor = false;
            this.line1.StylePriority.UseForeColor = false;
            // 
            // label63
            // 
            this.label63.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ImporteTotalMC", "{0:$#,#.00}")});
            this.label63.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label63.LocationFloat = new DevExpress.Utils.PointFloat(509.9997F, 741.5836F);
            this.label63.Name = "label63";
            this.label63.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label63.SizeF = new System.Drawing.SizeF(124.5833F, 18.00006F);
            this.label63.StylePriority.UseFont = false;
            this.label63.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:$#,#.00}";
            this.label63.Summary = summary8;
            this.label63.Text = "label63";
            this.label63.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line9
            // 
            this.line9.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 739.5003F);
            this.line9.Name = "line9";
            this.line9.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            // 
            // label50
            // 
            this.label50.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ID")});
            this.label50.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label50.LocationFloat = new DevExpress.Utils.PointFloat(189.9998F, 741.5836F);
            this.label50.Name = "label50";
            this.label50.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label50.SizeF = new System.Drawing.SizeF(95F, 18F);
            this.label50.StylePriority.UseFont = false;
            this.label50.StylePriority.UseTextAlignment = false;
            summary9.FormatString = "{0:$#,#.00}";
            this.label50.Summary = summary9;
            this.label50.Text = "label50";
            this.label50.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label50.Visible = false;
            // 
            // label46
            // 
            this.label46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.UtilidadMC", "{0:$#,#.00}")});
            this.label46.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(634.583F, 741.5836F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label46.StylePriority.UseFont = false;
            this.label46.StylePriority.UseTextAlignment = false;
            summary10.FormatString = "{0:$#,#.00}";
            this.label46.Summary = summary10;
            this.label46.Text = "label46";
            this.label46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label42
            // 
            this.label42.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.ContMoneda")});
            this.label42.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(84.58319F, 741.5836F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(105.4166F, 18.00003F);
            this.label42.StyleName = "DataField";
            this.label42.StylePriority.UseFont = false;
            this.label42.StylePriority.UseTextAlignment = false;
            this.label42.Text = "label42";
            this.label42.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label43
            // 
            this.label43.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 741.5836F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.SizeF = new System.Drawing.SizeF(84.58333F, 18.00003F);
            this.label43.StylePriority.UseFont = false;
            this.label43.StylePriority.UseTextAlignment = false;
            this.label43.Text = "Gran Total en";
            this.label43.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label45
            // 
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.CostoTotalMC", "{0:$#,#.00}")});
            this.label45.Font = new System.Drawing.Font("Arial", 7F, System.Drawing.FontStyle.Bold);
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(398.7501F, 741.5836F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.SizeF = new System.Drawing.SizeF(111.2497F, 17.99994F);
            this.label45.StylePriority.UseFont = false;
            this.label45.StylePriority.UseTextAlignment = false;
            summary11.FormatString = "{0:$#,#.00}";
            this.label45.Summary = summary11;
            this.label45.Text = "label45";
            this.label45.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label69
            // 
            this.label69.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label69.LocationFloat = new DevExpress.Utils.PointFloat(509.9997F, 716.8751F);
            this.label69.Name = "label69";
            this.label69.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label69.SizeF = new System.Drawing.SizeF(124.5833F, 18F);
            this.label69.StylePriority.UseFont = false;
            this.label69.StylePriority.UseTextAlignment = false;
            this.label69.Text = "Importe Total M.C";
            this.label69.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line11
            // 
            this.line11.LocationFloat = new DevExpress.Utils.PointFloat(0F, 734.8751F);
            this.line11.Name = "line11";
            this.line11.SizeF = new System.Drawing.SizeF(1077F, 2F);
            // 
            // line10
            // 
            this.line10.LocationFloat = new DevExpress.Utils.PointFloat(0F, 712.7917F);
            this.line10.Name = "line10";
            this.line10.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            // 
            // label72
            // 
            this.label72.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label72.LocationFloat = new DevExpress.Utils.PointFloat(634.583F, 716.8751F);
            this.label72.Name = "label72";
            this.label72.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label72.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label72.StylePriority.UseFont = false;
            this.label72.StylePriority.UseTextAlignment = false;
            this.label72.Text = "Utilidad MC";
            this.label72.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label71
            // 
            this.label71.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label71.LocationFloat = new DevExpress.Utils.PointFloat(398.7501F, 714.875F);
            this.label71.Name = "label71";
            this.label71.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label71.SizeF = new System.Drawing.SizeF(111.2497F, 18F);
            this.label71.StylePriority.UseFont = false;
            this.label71.StylePriority.UseTextAlignment = false;
            this.label71.Text = "Costo Total MC";
            this.label71.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label62
            // 
            this.label62.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label62.LocationFloat = new DevExpress.Utils.PointFloat(0.0001220703F, 714.875F);
            this.label62.Name = "label62";
            this.label62.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label62.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label62.StylePriority.UseFont = false;
            this.label62.StylePriority.UseTextAlignment = false;
            this.label62.Text = "Movimiento";
            this.label62.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label62.Visible = false;
            // 
            // label65
            // 
            this.label65.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label65.LocationFloat = new DevExpress.Utils.PointFloat(120.0001F, 714.875F);
            this.label65.Name = "label65";
            this.label65.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label65.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label65.StylePriority.UseFont = false;
            this.label65.StylePriority.UseTextAlignment = false;
            this.label65.Text = "Emisión";
            this.label65.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label65.Visible = false;
            // 
            // pageBreak1
            // 
            this.pageBreak1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 28.16668F);
            this.pageBreak1.Name = "pageBreak1";
            // 
            // label27
            // 
            this.label27.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label27.LocationFloat = new DevExpress.Utils.PointFloat(821.9998F, 2.083333F);
            this.label27.Name = "label27";
            this.label27.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label27.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label27.StylePriority.UseFont = false;
            this.label27.StylePriority.UseTextAlignment = false;
            this.label27.Text = "Utilidad";
            this.label27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label22
            // 
            this.label22.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(736.9998F, 2.083333F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            this.label22.Text = "Costo Total";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label21
            // 
            this.label21.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(906.9998F, 2.083333F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label21.StylePriority.UseFont = false;
            this.label21.StylePriority.UseTextAlignment = false;
            this.label21.Text = "Importe Total";
            this.label21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label51
            // 
            this.label51.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label51.LocationFloat = new DevExpress.Utils.PointFloat(991.9998F, 2.083333F);
            this.label51.Name = "label51";
            this.label51.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label51.SizeF = new System.Drawing.SizeF(85F, 18.00003F);
            this.label51.StylePriority.UseFont = false;
            this.label51.StylePriority.UseTextAlignment = false;
            this.label51.Text = "Importe M.C";
            this.label51.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // line5
            // 
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 20.08336F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(1077F, 2.083332F);
            // 
            // line3
            // 
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(1077F, 2.083333F);
            // 
            // label16
            // 
            this.label16.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(669.9998F, 2.083333F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(67F, 18F);
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseTextAlignment = false;
            this.label16.Text = "Impuestos";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label17
            // 
            this.label17.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(424.9998F, 2.083333F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseTextAlignment = false;
            this.label17.Text = "Precio Total";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label11
            // 
            this.label11.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(509.9998F, 2.083333F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(75F, 18F);
            this.label11.StylePriority.UseFont = false;
            this.label11.StylePriority.UseTextAlignment = false;
            this.label11.Text = "Descuentos";
            this.label11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label13
            // 
            this.label13.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(120F, 2.083333F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseTextAlignment = false;
            this.label13.Text = "Emisión";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label20
            // 
            this.label20.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(584.9998F, 2.083364F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(85F, 18F);
            this.label20.StylePriority.UseFont = false;
            this.label20.StylePriority.UseTextAlignment = false;
            this.label20.Text = "SubTotal";
            this.label20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label15
            // 
            this.label15.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(180F, 2.083333F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(244.9998F, 18.00003F);
            this.label15.StylePriority.UseFont = false;
            this.label15.StylePriority.UseTextAlignment = false;
            this.label15.Text = "Cliente";
            this.label15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label14
            // 
            this.label14.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.083333F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseTextAlignment = false;
            this.label14.Text = "Movimiento";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.SelectCommand = this.oleDbCommand1;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand1
            // 
            this.oleDbCommand1.CommandText = "SPINFORMEVENTANETA 1";
            this.oleDbCommand1.CommandTimeout = 0;
            this.oleDbCommand1.Connection = this.oleDbConnection1;
            // 
            // oleDbConnection1
            // 
            this.oleDbConnection1.ConnectionString = "Provider=SQLOLEDB;Data Source=.;Initial Catalog=INFORMES11;User ID=SA;";
            // 
            // RepVentaNeta
            // 
            this.RepVentaNeta.DataSetName = "RepVentaNetaDataSet";
            this.RepVentaNeta.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Maroon;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Maroon;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // Movimiento
            // 
            this.Movimiento.DataMember = "Table";
            this.Movimiento.DataSource = this.RepVentaNeta;
            this.Movimiento.Expression = "[Mov] + \' \' + [MovID]";
            this.Movimiento.Name = "Movimiento";
            // 
            // Utilidad
            // 
            this.Utilidad.DataMember = "Table";
            this.Utilidad.DataSource = this.RepVentaNeta;
            this.Utilidad.Expression = "[SubTotal]-[CostoTotal]";
            this.Utilidad.Name = "Utilidad";
            // 
            // InformeVentaNeta
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.pageFooterBand1,
                        this.reportHeaderBand1,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.PageHeader,
                        this.GroupHeader1,
                        this.GroupFooter1,
                        this.ReportFooter,
                        this.GroupHeader2});
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.Movimiento,
                        this.Utilidad});
            this.DataAdapter = this.TableTableAdapter;
            this.DataMember = "Table";
            this.DataSource = this.RepVentaNeta;
            this.DisplayName = "InformeVentaNeta";
            this.Landscape = true;
            this.Margins = new System.Drawing.Printing.Margins(12, 11, 25, 22);
            this.Name = "InformeVentaNeta";
            this.PageHeight = 850;
            this.PageWidth = 1100;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "EXEC spInformeVentaNeta [EstacionTrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(pointSeriesLabel2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepVentaNetaDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepVentaNetaDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepVentaNetaDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepVentaNetaDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepVentaNetaDataSet cln = ((RepVentaNetaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepVentaNetaDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnEstacion;
            private global::System.Data.DataColumn columnIDInforme;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnEmpresa;
            private global::System.Data.DataColumn columnMov;
            private global::System.Data.DataColumn columnMovID;
            private global::System.Data.DataColumn columnMoneda;
            private global::System.Data.DataColumn columnTipoCambio;
            private global::System.Data.DataColumn columnFechaEmision;
            private global::System.Data.DataColumn columnConcepto;
            private global::System.Data.DataColumn columnReferencia;
            private global::System.Data.DataColumn columnProyecto;
            private global::System.Data.DataColumn columnFechaRequerida;
            private global::System.Data.DataColumn columnPrioridad;
            private global::System.Data.DataColumn columnEstatus;
            private global::System.Data.DataColumn columnSituacion;
            private global::System.Data.DataColumn columnSituacionFecha;
            private global::System.Data.DataColumn columnCliente;
            private global::System.Data.DataColumn columnEnviarA;
            private global::System.Data.DataColumn columnAlmacen;
            private global::System.Data.DataColumn columnAgente;
            private global::System.Data.DataColumn columnFormaEnvio;
            private global::System.Data.DataColumn columnCondicion;
            private global::System.Data.DataColumn columnVencimiento;
            private global::System.Data.DataColumn columnUsuario;
            private global::System.Data.DataColumn columnObservaciones;
            private global::System.Data.DataColumn columnDescuentoGlobal;
            private global::System.Data.DataColumn columnCostoTotal;
            private global::System.Data.DataColumn columnPrecioTotal;
            private global::System.Data.DataColumn columnImporte;
            private global::System.Data.DataColumn columnDescuentoLineal;
            private global::System.Data.DataColumn columnDescuentosTotales;
            private global::System.Data.DataColumn columnSubTotal;
            private global::System.Data.DataColumn columnImpuestos;
            private global::System.Data.DataColumn columnImporteTotal;
            private global::System.Data.DataColumn columnPeso;
            private global::System.Data.DataColumn columnVolumen;
            private global::System.Data.DataColumn columnClienteNombre;
            private global::System.Data.DataColumn columnUtilidad;
            private global::System.Data.DataColumn columnTotal;
            private global::System.Data.DataColumn columnContMoneda;
            private global::System.Data.DataColumn columnImporteTotalMC;
            private global::System.Data.DataColumn columnCostoTotalMC;
            private global::System.Data.DataColumn columnUtilidadMC;
            private global::System.Data.DataColumn columnFechaGrafica;
            private global::System.Data.DataColumn columnGrafica1;
            private global::System.Data.DataColumn columnGrafica2;
            private global::System.Data.DataColumn columnReporte;
            private global::System.Data.DataColumn columnSaldoDescripcion;
            private global::System.Data.DataColumn columnSaldoImporte;
            private global::System.Data.DataColumn columnMovimiento;
            private global::System.Data.DataColumn columnSaldoDescripcionMC;
            private global::System.Data.DataColumn columnSaldoImporteMC;
            private global::System.Data.DataColumn columnFechaDesde;
            private global::System.Data.DataColumn columnFechaHasta;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnPeriodo;
            private global::System.Data.DataColumn columnEjercicio;
            private global::System.Data.DataColumn columnEtiqueta;
            private global::System.Data.DataColumn columnVerGraficaDetalle;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstacionColumn {
                get {
                    return this.columnEstacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDInformeColumn {
                get {
                    return this.columnIDInforme;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovColumn {
                get {
                    return this.columnMov;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovIDColumn {
                get {
                    return this.columnMovID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoCambioColumn {
                get {
                    return this.columnTipoCambio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaEmisionColumn {
                get {
                    return this.columnFechaEmision;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConceptoColumn {
                get {
                    return this.columnConcepto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenciaColumn {
                get {
                    return this.columnReferencia;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProyectoColumn {
                get {
                    return this.columnProyecto;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaRequeridaColumn {
                get {
                    return this.columnFechaRequerida;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrioridadColumn {
                get {
                    return this.columnPrioridad;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstatusColumn {
                get {
                    return this.columnEstatus;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SituacionColumn {
                get {
                    return this.columnSituacion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SituacionFechaColumn {
                get {
                    return this.columnSituacionFecha;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteColumn {
                get {
                    return this.columnCliente;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnviarAColumn {
                get {
                    return this.columnEnviarA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlmacenColumn {
                get {
                    return this.columnAlmacen;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgenteColumn {
                get {
                    return this.columnAgente;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormaEnvioColumn {
                get {
                    return this.columnFormaEnvio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CondicionColumn {
                get {
                    return this.columnCondicion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VencimientoColumn {
                get {
                    return this.columnVencimiento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsuarioColumn {
                get {
                    return this.columnUsuario;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescuentoGlobalColumn {
                get {
                    return this.columnDescuentoGlobal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoTotalColumn {
                get {
                    return this.columnCostoTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioTotalColumn {
                get {
                    return this.columnPrecioTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteColumn {
                get {
                    return this.columnImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescuentoLinealColumn {
                get {
                    return this.columnDescuentoLineal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescuentosTotalesColumn {
                get {
                    return this.columnDescuentosTotales;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImpuestosColumn {
                get {
                    return this.columnImpuestos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteTotalColumn {
                get {
                    return this.columnImporteTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoColumn {
                get {
                    return this.columnPeso;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VolumenColumn {
                get {
                    return this.columnVolumen;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClienteNombreColumn {
                get {
                    return this.columnClienteNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilidadColumn {
                get {
                    return this.columnUtilidad;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContMonedaColumn {
                get {
                    return this.columnContMoneda;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteTotalMCColumn {
                get {
                    return this.columnImporteTotalMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoTotalMCColumn {
                get {
                    return this.columnCostoTotalMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UtilidadMCColumn {
                get {
                    return this.columnUtilidadMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaGraficaColumn {
                get {
                    return this.columnFechaGrafica;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica1Column {
                get {
                    return this.columnGrafica1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica2Column {
                get {
                    return this.columnGrafica2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporteColumn {
                get {
                    return this.columnReporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionColumn {
                get {
                    return this.columnSaldoDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteColumn {
                get {
                    return this.columnSaldoImporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovimientoColumn {
                get {
                    return this.columnMovimiento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoDescripcionMCColumn {
                get {
                    return this.columnSaldoDescripcionMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoImporteMCColumn {
                get {
                    return this.columnSaldoImporteMC;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaDesdeColumn {
                get {
                    return this.columnFechaDesde;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaHastaColumn {
                get {
                    return this.columnFechaHasta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoColumn {
                get {
                    return this.columnPeriodo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EjercicioColumn {
                get {
                    return this.columnEjercicio;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtiquetaColumn {
                get {
                    return this.columnEtiqueta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerGraficaDetalleColumn {
                get {
                    return this.columnVerGraficaDetalle;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        int Estacion, 
                        int IDInforme, 
                        int ID, 
                        string Empresa, 
                        string Mov, 
                        string MovID, 
                        string Moneda, 
                        double TipoCambio, 
                        System.DateTime FechaEmision, 
                        string Concepto, 
                        string Referencia, 
                        string Proyecto, 
                        System.DateTime FechaRequerida, 
                        string Prioridad, 
                        string Estatus, 
                        string Situacion, 
                        System.DateTime SituacionFecha, 
                        string Cliente, 
                        int EnviarA, 
                        string Almacen, 
                        string Agente, 
                        string FormaEnvio, 
                        string Condicion, 
                        System.DateTime Vencimiento, 
                        string Usuario, 
                        string Observaciones, 
                        double DescuentoGlobal, 
                        decimal CostoTotal, 
                        decimal PrecioTotal, 
                        decimal Importe, 
                        double DescuentoLineal, 
                        decimal DescuentosTotales, 
                        decimal SubTotal, 
                        decimal Impuestos, 
                        decimal ImporteTotal, 
                        double Peso, 
                        double Volumen, 
                        string ClienteNombre, 
                        decimal Utilidad, 
                        bool Total, 
                        string ContMoneda, 
                        decimal ImporteTotalMC, 
                        decimal CostoTotalMC, 
                        decimal UtilidadMC, 
                        string FechaGrafica, 
                        bool Grafica1, 
                        bool Grafica2, 
                        string Reporte, 
                        string SaldoDescripcion, 
                        decimal SaldoImporte, 
                        string Movimiento, 
                        string SaldoDescripcionMC, 
                        decimal SaldoImporteMC, 
                        System.DateTime FechaDesde, 
                        System.DateTime FechaHasta, 
                        string Titulo, 
                        string EmpresaNombre, 
                        int Periodo, 
                        int Ejercicio, 
                        bool Etiqueta, 
                        bool VerGraficaDetalle) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Estacion,
                        IDInforme,
                        ID,
                        Empresa,
                        Mov,
                        MovID,
                        Moneda,
                        TipoCambio,
                        FechaEmision,
                        Concepto,
                        Referencia,
                        Proyecto,
                        FechaRequerida,
                        Prioridad,
                        Estatus,
                        Situacion,
                        SituacionFecha,
                        Cliente,
                        EnviarA,
                        Almacen,
                        Agente,
                        FormaEnvio,
                        Condicion,
                        Vencimiento,
                        Usuario,
                        Observaciones,
                        DescuentoGlobal,
                        CostoTotal,
                        PrecioTotal,
                        Importe,
                        DescuentoLineal,
                        DescuentosTotales,
                        SubTotal,
                        Impuestos,
                        ImporteTotal,
                        Peso,
                        Volumen,
                        ClienteNombre,
                        Utilidad,
                        Total,
                        ContMoneda,
                        ImporteTotalMC,
                        CostoTotalMC,
                        UtilidadMC,
                        FechaGrafica,
                        Grafica1,
                        Grafica2,
                        Reporte,
                        SaldoDescripcion,
                        SaldoImporte,
                        Movimiento,
                        SaldoDescripcionMC,
                        SaldoImporteMC,
                        FechaDesde,
                        FechaHasta,
                        Titulo,
                        EmpresaNombre,
                        Periodo,
                        Ejercicio,
                        Etiqueta,
                        VerGraficaDetalle};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEstacion = base.Columns["Estacion"];
                this.columnIDInforme = base.Columns["IDInforme"];
                this.columnID = base.Columns["ID"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnMov = base.Columns["Mov"];
                this.columnMovID = base.Columns["MovID"];
                this.columnMoneda = base.Columns["Moneda"];
                this.columnTipoCambio = base.Columns["TipoCambio"];
                this.columnFechaEmision = base.Columns["FechaEmision"];
                this.columnConcepto = base.Columns["Concepto"];
                this.columnReferencia = base.Columns["Referencia"];
                this.columnProyecto = base.Columns["Proyecto"];
                this.columnFechaRequerida = base.Columns["FechaRequerida"];
                this.columnPrioridad = base.Columns["Prioridad"];
                this.columnEstatus = base.Columns["Estatus"];
                this.columnSituacion = base.Columns["Situacion"];
                this.columnSituacionFecha = base.Columns["SituacionFecha"];
                this.columnCliente = base.Columns["Cliente"];
                this.columnEnviarA = base.Columns["EnviarA"];
                this.columnAlmacen = base.Columns["Almacen"];
                this.columnAgente = base.Columns["Agente"];
                this.columnFormaEnvio = base.Columns["FormaEnvio"];
                this.columnCondicion = base.Columns["Condicion"];
                this.columnVencimiento = base.Columns["Vencimiento"];
                this.columnUsuario = base.Columns["Usuario"];
                this.columnObservaciones = base.Columns["Observaciones"];
                this.columnDescuentoGlobal = base.Columns["DescuentoGlobal"];
                this.columnCostoTotal = base.Columns["CostoTotal"];
                this.columnPrecioTotal = base.Columns["PrecioTotal"];
                this.columnImporte = base.Columns["Importe"];
                this.columnDescuentoLineal = base.Columns["DescuentoLineal"];
                this.columnDescuentosTotales = base.Columns["DescuentosTotales"];
                this.columnSubTotal = base.Columns["SubTotal"];
                this.columnImpuestos = base.Columns["Impuestos"];
                this.columnImporteTotal = base.Columns["ImporteTotal"];
                this.columnPeso = base.Columns["Peso"];
                this.columnVolumen = base.Columns["Volumen"];
                this.columnClienteNombre = base.Columns["ClienteNombre"];
                this.columnUtilidad = base.Columns["Utilidad"];
                this.columnTotal = base.Columns["Total"];
                this.columnContMoneda = base.Columns["ContMoneda"];
                this.columnImporteTotalMC = base.Columns["ImporteTotalMC"];
                this.columnCostoTotalMC = base.Columns["CostoTotalMC"];
                this.columnUtilidadMC = base.Columns["UtilidadMC"];
                this.columnFechaGrafica = base.Columns["FechaGrafica"];
                this.columnGrafica1 = base.Columns["Grafica1"];
                this.columnGrafica2 = base.Columns["Grafica2"];
                this.columnReporte = base.Columns["Reporte"];
                this.columnSaldoDescripcion = base.Columns["SaldoDescripcion"];
                this.columnSaldoImporte = base.Columns["SaldoImporte"];
                this.columnMovimiento = base.Columns["Movimiento"];
                this.columnSaldoDescripcionMC = base.Columns["SaldoDescripcionMC"];
                this.columnSaldoImporteMC = base.Columns["SaldoImporteMC"];
                this.columnFechaDesde = base.Columns["FechaDesde"];
                this.columnFechaHasta = base.Columns["FechaHasta"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnPeriodo = base.Columns["Periodo"];
                this.columnEjercicio = base.Columns["Ejercicio"];
                this.columnEtiqueta = base.Columns["Etiqueta"];
                this.columnVerGraficaDetalle = base.Columns["VerGraficaDetalle"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEstacion = new global::System.Data.DataColumn("Estacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstacion);
                this.columnIDInforme = new global::System.Data.DataColumn("IDInforme", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDInforme);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnMov = new global::System.Data.DataColumn("Mov", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMov);
                this.columnMovID = new global::System.Data.DataColumn("MovID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovID);
                this.columnMoneda = new global::System.Data.DataColumn("Moneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoneda);
                this.columnTipoCambio = new global::System.Data.DataColumn("TipoCambio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoCambio);
                this.columnFechaEmision = new global::System.Data.DataColumn("FechaEmision", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaEmision);
                this.columnConcepto = new global::System.Data.DataColumn("Concepto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConcepto);
                this.columnReferencia = new global::System.Data.DataColumn("Referencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferencia);
                this.columnProyecto = new global::System.Data.DataColumn("Proyecto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProyecto);
                this.columnFechaRequerida = new global::System.Data.DataColumn("FechaRequerida", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaRequerida);
                this.columnPrioridad = new global::System.Data.DataColumn("Prioridad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrioridad);
                this.columnEstatus = new global::System.Data.DataColumn("Estatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstatus);
                this.columnSituacion = new global::System.Data.DataColumn("Situacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSituacion);
                this.columnSituacionFecha = new global::System.Data.DataColumn("SituacionFecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSituacionFecha);
                this.columnCliente = new global::System.Data.DataColumn("Cliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCliente);
                this.columnEnviarA = new global::System.Data.DataColumn("EnviarA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnviarA);
                this.columnAlmacen = new global::System.Data.DataColumn("Almacen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlmacen);
                this.columnAgente = new global::System.Data.DataColumn("Agente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgente);
                this.columnFormaEnvio = new global::System.Data.DataColumn("FormaEnvio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormaEnvio);
                this.columnCondicion = new global::System.Data.DataColumn("Condicion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondicion);
                this.columnVencimiento = new global::System.Data.DataColumn("Vencimiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVencimiento);
                this.columnUsuario = new global::System.Data.DataColumn("Usuario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario);
                this.columnObservaciones = new global::System.Data.DataColumn("Observaciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservaciones);
                this.columnDescuentoGlobal = new global::System.Data.DataColumn("DescuentoGlobal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescuentoGlobal);
                this.columnCostoTotal = new global::System.Data.DataColumn("CostoTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoTotal);
                this.columnPrecioTotal = new global::System.Data.DataColumn("PrecioTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecioTotal);
                this.columnImporte = new global::System.Data.DataColumn("Importe", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporte);
                this.columnDescuentoLineal = new global::System.Data.DataColumn("DescuentoLineal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescuentoLineal);
                this.columnDescuentosTotales = new global::System.Data.DataColumn("DescuentosTotales", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescuentosTotales);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
                this.columnImpuestos = new global::System.Data.DataColumn("Impuestos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImpuestos);
                this.columnImporteTotal = new global::System.Data.DataColumn("ImporteTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteTotal);
                this.columnPeso = new global::System.Data.DataColumn("Peso", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeso);
                this.columnVolumen = new global::System.Data.DataColumn("Volumen", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumen);
                this.columnClienteNombre = new global::System.Data.DataColumn("ClienteNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClienteNombre);
                this.columnUtilidad = new global::System.Data.DataColumn("Utilidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilidad);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnContMoneda = new global::System.Data.DataColumn("ContMoneda", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContMoneda);
                this.columnImporteTotalMC = new global::System.Data.DataColumn("ImporteTotalMC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteTotalMC);
                this.columnCostoTotalMC = new global::System.Data.DataColumn("CostoTotalMC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostoTotalMC);
                this.columnUtilidadMC = new global::System.Data.DataColumn("UtilidadMC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilidadMC);
                this.columnFechaGrafica = new global::System.Data.DataColumn("FechaGrafica", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaGrafica);
                this.columnGrafica1 = new global::System.Data.DataColumn("Grafica1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica1);
                this.columnGrafica2 = new global::System.Data.DataColumn("Grafica2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica2);
                this.columnReporte = new global::System.Data.DataColumn("Reporte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporte);
                this.columnSaldoDescripcion = new global::System.Data.DataColumn("SaldoDescripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcion);
                this.columnSaldoImporte = new global::System.Data.DataColumn("SaldoImporte", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporte);
                this.columnMovimiento = new global::System.Data.DataColumn("Movimiento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovimiento);
                this.columnSaldoDescripcionMC = new global::System.Data.DataColumn("SaldoDescripcionMC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoDescripcionMC);
                this.columnSaldoImporteMC = new global::System.Data.DataColumn("SaldoImporteMC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoImporteMC);
                this.columnFechaDesde = new global::System.Data.DataColumn("FechaDesde", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaDesde);
                this.columnFechaHasta = new global::System.Data.DataColumn("FechaHasta", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaHasta);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnPeriodo = new global::System.Data.DataColumn("Periodo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodo);
                this.columnEjercicio = new global::System.Data.DataColumn("Ejercicio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEjercicio);
                this.columnEtiqueta = new global::System.Data.DataColumn("Etiqueta", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtiqueta);
                this.columnVerGraficaDetalle = new global::System.Data.DataColumn("VerGraficaDetalle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerGraficaDetalle);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Estacion {
                get {
                    try {
                        return ((int)(this[this.table_Table.EstacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EstacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDInforme {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDInformeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IDInforme\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDInformeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Empresa\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mov {
                get {
                    try {
                        return ((string)(this[this.table_Table.MovColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Mov\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MovColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MovID {
                get {
                    try {
                        return ((string)(this[this.table_Table.MovIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'MovID\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MovIDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.MonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Moneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TipoCambio {
                get {
                    try {
                        return ((double)(this[this.table_Table.TipoCambioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TipoCambio\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TipoCambioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaEmision {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaEmisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaEmision\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaEmisionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Concepto {
                get {
                    try {
                        return ((string)(this[this.table_Table.ConceptoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Concepto\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ConceptoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Referencia {
                get {
                    try {
                        return ((string)(this[this.table_Table.ReferenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Referencia\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ReferenciaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Proyecto {
                get {
                    try {
                        return ((string)(this[this.table_Table.ProyectoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Proyecto\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ProyectoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaRequerida {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaRequeridaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaRequerida\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaRequeridaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prioridad {
                get {
                    try {
                        return ((string)(this[this.table_Table.PrioridadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Prioridad\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PrioridadColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Estatus {
                get {
                    try {
                        return ((string)(this[this.table_Table.EstatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estatus\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EstatusColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Situacion {
                get {
                    try {
                        return ((string)(this[this.table_Table.SituacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Situacion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SituacionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SituacionFecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.SituacionFechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SituacionFecha\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SituacionFechaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cliente {
                get {
                    try {
                        return ((string)(this[this.table_Table.ClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cliente\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ClienteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EnviarA {
                get {
                    try {
                        return ((int)(this[this.table_Table.EnviarAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EnviarA\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EnviarAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Almacen {
                get {
                    try {
                        return ((string)(this[this.table_Table.AlmacenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Almacen\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.AlmacenColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Agente {
                get {
                    try {
                        return ((string)(this[this.table_Table.AgenteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Agente\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.AgenteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FormaEnvio {
                get {
                    try {
                        return ((string)(this[this.table_Table.FormaEnvioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FormaEnvio\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FormaEnvioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condicion {
                get {
                    try {
                        return ((string)(this[this.table_Table.CondicionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Condicion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CondicionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Vencimiento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.VencimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Vencimiento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VencimientoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Usuario {
                get {
                    try {
                        return ((string)(this[this.table_Table.UsuarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Usuario\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UsuarioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.table_Table.ObservacionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Observaciones\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ObservacionesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DescuentoGlobal {
                get {
                    try {
                        return ((double)(this[this.table_Table.DescuentoGlobalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DescuentoGlobal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescuentoGlobalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostoTotal {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.CostoTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoTotal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoTotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PrecioTotal {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.PrecioTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PrecioTotal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PrecioTotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Importe {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Importe\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DescuentoLineal {
                get {
                    try {
                        return ((double)(this[this.table_Table.DescuentoLinealColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DescuentoLineal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescuentoLinealColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DescuentosTotales {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.DescuentosTotalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DescuentosTotales\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescuentosTotalesColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SubTotal {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubTotal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubTotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Impuestos {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImpuestosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Impuestos\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImpuestosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ImporteTotal {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImporteTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ImporteTotal\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImporteTotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Peso {
                get {
                    try {
                        return ((double)(this[this.table_Table.PesoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Peso\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PesoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Volumen {
                get {
                    try {
                        return ((double)(this[this.table_Table.VolumenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Volumen\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VolumenColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClienteNombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.ClienteNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ClienteNombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ClienteNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Utilidad {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.UtilidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Utilidad\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UtilidadColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Total {
                get {
                    try {
                        return ((bool)(this[this.table_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Total\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TotalColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContMoneda {
                get {
                    try {
                        return ((string)(this[this.table_Table.ContMonedaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ContMoneda\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ContMonedaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ImporteTotalMC {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.ImporteTotalMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ImporteTotalMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ImporteTotalMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostoTotalMC {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.CostoTotalMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CostoTotalMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CostoTotalMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UtilidadMC {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.UtilidadMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'UtilidadMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.UtilidadMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FechaGrafica {
                get {
                    try {
                        return ((string)(this[this.table_Table.FechaGraficaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaGrafica\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaGraficaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica1 {
                get {
                    try {
                        return ((bool)(this[this.table_Table.Grafica1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Grafica2 {
                get {
                    try {
                        return ((bool)(this[this.table_Table.Grafica2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reporte {
                get {
                    try {
                        return ((string)(this[this.table_Table.ReporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Reporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ReporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.SaldoDescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoDescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SaldoImporte {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.SaldoImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoImporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Movimiento {
                get {
                    try {
                        return ((string)(this[this.table_Table.MovimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Movimiento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MovimientoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SaldoDescripcionMC {
                get {
                    try {
                        return ((string)(this[this.table_Table.SaldoDescripcionMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoDescripcionMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoDescripcionMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SaldoImporteMC {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.SaldoImporteMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoImporteMC\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoImporteMCColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaDesde {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaDesdeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaDesde\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaDesdeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaHasta {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.FechaHastaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FechaHasta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FechaHastaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Periodo {
                get {
                    try {
                        return ((int)(this[this.table_Table.PeriodoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Periodo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PeriodoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ejercicio {
                get {
                    try {
                        return ((int)(this[this.table_Table.EjercicioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ejercicio\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EjercicioColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Etiqueta {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EtiquetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Etiqueta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EtiquetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool VerGraficaDetalle {
                get {
                    try {
                        return ((bool)(this[this.table_Table.VerGraficaDetalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VerGraficaDetalle\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.VerGraficaDetalleColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstacionNull() {
                return this.IsNull(this.table_Table.EstacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstacionNull() {
                this[this.table_Table.EstacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDInformeNull() {
                return this.IsNull(this.table_Table.IDInformeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDInformeNull() {
                this[this.table_Table.IDInformeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table_Table.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table_Table.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.table_Table.EmpresaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.table_Table.EmpresaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovNull() {
                return this.IsNull(this.table_Table.MovColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovNull() {
                this[this.table_Table.MovColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovIDNull() {
                return this.IsNull(this.table_Table.MovIDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovIDNull() {
                this[this.table_Table.MovIDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonedaNull() {
                return this.IsNull(this.table_Table.MonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonedaNull() {
                this[this.table_Table.MonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoCambioNull() {
                return this.IsNull(this.table_Table.TipoCambioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoCambioNull() {
                this[this.table_Table.TipoCambioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaEmisionNull() {
                return this.IsNull(this.table_Table.FechaEmisionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaEmisionNull() {
                this[this.table_Table.FechaEmisionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConceptoNull() {
                return this.IsNull(this.table_Table.ConceptoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConceptoNull() {
                this[this.table_Table.ConceptoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenciaNull() {
                return this.IsNull(this.table_Table.ReferenciaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenciaNull() {
                this[this.table_Table.ReferenciaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProyectoNull() {
                return this.IsNull(this.table_Table.ProyectoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProyectoNull() {
                this[this.table_Table.ProyectoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaRequeridaNull() {
                return this.IsNull(this.table_Table.FechaRequeridaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaRequeridaNull() {
                this[this.table_Table.FechaRequeridaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrioridadNull() {
                return this.IsNull(this.table_Table.PrioridadColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrioridadNull() {
                this[this.table_Table.PrioridadColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstatusNull() {
                return this.IsNull(this.table_Table.EstatusColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstatusNull() {
                this[this.table_Table.EstatusColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSituacionNull() {
                return this.IsNull(this.table_Table.SituacionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSituacionNull() {
                this[this.table_Table.SituacionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSituacionFechaNull() {
                return this.IsNull(this.table_Table.SituacionFechaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSituacionFechaNull() {
                this[this.table_Table.SituacionFechaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClienteNull() {
                return this.IsNull(this.table_Table.ClienteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClienteNull() {
                this[this.table_Table.ClienteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnviarANull() {
                return this.IsNull(this.table_Table.EnviarAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnviarANull() {
                this[this.table_Table.EnviarAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlmacenNull() {
                return this.IsNull(this.table_Table.AlmacenColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlmacenNull() {
                this[this.table_Table.AlmacenColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgenteNull() {
                return this.IsNull(this.table_Table.AgenteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgenteNull() {
                this[this.table_Table.AgenteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormaEnvioNull() {
                return this.IsNull(this.table_Table.FormaEnvioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormaEnvioNull() {
                this[this.table_Table.FormaEnvioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCondicionNull() {
                return this.IsNull(this.table_Table.CondicionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCondicionNull() {
                this[this.table_Table.CondicionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVencimientoNull() {
                return this.IsNull(this.table_Table.VencimientoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVencimientoNull() {
                this[this.table_Table.VencimientoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsuarioNull() {
                return this.IsNull(this.table_Table.UsuarioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsuarioNull() {
                this[this.table_Table.UsuarioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObservacionesNull() {
                return this.IsNull(this.table_Table.ObservacionesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObservacionesNull() {
                this[this.table_Table.ObservacionesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescuentoGlobalNull() {
                return this.IsNull(this.table_Table.DescuentoGlobalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescuentoGlobalNull() {
                this[this.table_Table.DescuentoGlobalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoTotalNull() {
                return this.IsNull(this.table_Table.CostoTotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoTotalNull() {
                this[this.table_Table.CostoTotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrecioTotalNull() {
                return this.IsNull(this.table_Table.PrecioTotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrecioTotalNull() {
                this[this.table_Table.PrecioTotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteNull() {
                return this.IsNull(this.table_Table.ImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteNull() {
                this[this.table_Table.ImporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescuentoLinealNull() {
                return this.IsNull(this.table_Table.DescuentoLinealColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescuentoLinealNull() {
                this[this.table_Table.DescuentoLinealColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescuentosTotalesNull() {
                return this.IsNull(this.table_Table.DescuentosTotalesColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescuentosTotalesNull() {
                this[this.table_Table.DescuentosTotalesColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.table_Table.SubTotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.table_Table.SubTotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImpuestosNull() {
                return this.IsNull(this.table_Table.ImpuestosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImpuestosNull() {
                this[this.table_Table.ImpuestosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteTotalNull() {
                return this.IsNull(this.table_Table.ImporteTotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteTotalNull() {
                this[this.table_Table.ImporteTotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesoNull() {
                return this.IsNull(this.table_Table.PesoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesoNull() {
                this[this.table_Table.PesoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVolumenNull() {
                return this.IsNull(this.table_Table.VolumenColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVolumenNull() {
                this[this.table_Table.VolumenColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClienteNombreNull() {
                return this.IsNull(this.table_Table.ClienteNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClienteNombreNull() {
                this[this.table_Table.ClienteNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilidadNull() {
                return this.IsNull(this.table_Table.UtilidadColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilidadNull() {
                this[this.table_Table.UtilidadColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.table_Table.TotalColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.table_Table.TotalColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContMonedaNull() {
                return this.IsNull(this.table_Table.ContMonedaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContMonedaNull() {
                this[this.table_Table.ContMonedaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteTotalMCNull() {
                return this.IsNull(this.table_Table.ImporteTotalMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteTotalMCNull() {
                this[this.table_Table.ImporteTotalMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostoTotalMCNull() {
                return this.IsNull(this.table_Table.CostoTotalMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostoTotalMCNull() {
                this[this.table_Table.CostoTotalMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUtilidadMCNull() {
                return this.IsNull(this.table_Table.UtilidadMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUtilidadMCNull() {
                this[this.table_Table.UtilidadMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaGraficaNull() {
                return this.IsNull(this.table_Table.FechaGraficaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaGraficaNull() {
                this[this.table_Table.FechaGraficaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica1Null() {
                return this.IsNull(this.table_Table.Grafica1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica1Null() {
                this[this.table_Table.Grafica1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica2Null() {
                return this.IsNull(this.table_Table.Grafica2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica2Null() {
                this[this.table_Table.Grafica2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporteNull() {
                return this.IsNull(this.table_Table.ReporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporteNull() {
                this[this.table_Table.ReporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionNull() {
                return this.IsNull(this.table_Table.SaldoDescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionNull() {
                this[this.table_Table.SaldoDescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteNull() {
                return this.IsNull(this.table_Table.SaldoImporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteNull() {
                this[this.table_Table.SaldoImporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovimientoNull() {
                return this.IsNull(this.table_Table.MovimientoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovimientoNull() {
                this[this.table_Table.MovimientoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoDescripcionMCNull() {
                return this.IsNull(this.table_Table.SaldoDescripcionMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoDescripcionMCNull() {
                this[this.table_Table.SaldoDescripcionMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoImporteMCNull() {
                return this.IsNull(this.table_Table.SaldoImporteMCColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoImporteMCNull() {
                this[this.table_Table.SaldoImporteMCColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaDesdeNull() {
                return this.IsNull(this.table_Table.FechaDesdeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaDesdeNull() {
                this[this.table_Table.FechaDesdeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaHastaNull() {
                return this.IsNull(this.table_Table.FechaHastaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaHastaNull() {
                this[this.table_Table.FechaHastaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.table_Table.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.table_Table.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.table_Table.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.table_Table.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoNull() {
                return this.IsNull(this.table_Table.PeriodoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoNull() {
                this[this.table_Table.PeriodoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEjercicioNull() {
                return this.IsNull(this.table_Table.EjercicioColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEjercicioNull() {
                this[this.table_Table.EjercicioColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEtiquetaNull() {
                return this.IsNull(this.table_Table.EtiquetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEtiquetaNull() {
                this[this.table_Table.EtiquetaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerGraficaDetalleNull() {
                return this.IsNull(this.table_Table.VerGraficaDetalleColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerGraficaDetalleNull() {
                this[this.table_Table.VerGraficaDetalleColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
