/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.2, Version=10.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\assembly\GAC_MSIL\DevExpress.XtraReports.v10.2\10.2.5.0__b88d1754d700e49a\DevExpress.XtraReports.v10.2.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>es-ES</Localization>
///   <References>
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\Windows\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class InformeContResultados : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.PageFooterBand pageFooterBand1;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.ReportHeaderBand reportHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label32;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.XRLabel label44;
        private DevExpress.XtraReports.UI.XRLabel label41;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo3;
        private DevExpress.XtraReports.UI.XRLabel label198;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.ReportFooterBand ReportFooter;
        private DevExpress.XtraReports.UI.XRLabel label36;
        private DevExpress.XtraReports.UI.XRLabel label35;
        private DevExpress.XtraReports.UI.XRLabel label37;
        private DevExpress.XtraReports.UI.XRLabel label39;
        private DevExpress.XtraReports.UI.XRLabel label38;
        private DevExpress.XtraReports.UI.XRLabel label33;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox1;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo4;
        private DevExpress.XtraReports.UI.XRLabel label34;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRLabel label27;
        private DevExpress.XtraReports.UI.XRLabel label28;
        private DevExpress.XtraReports.UI.XRLine line9;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLine line4;
        private DevExpress.XtraReports.UI.XRLine line2;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRPageBreak pageBreak1;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private XtraReportSerialization.RepVentaNetaDataSet RepVentaNeta;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader1;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader2;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter2;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader3;
        private DevExpress.XtraReports.UI.XRLabel label47;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter3;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLabel label26;
        private DevExpress.XtraReports.UI.XRLabel label25;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label24;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader4;
        private DevExpress.XtraReports.UI.XRLabel label50;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private DevExpress.XtraReports.UI.GroupHeaderBand GroupHeader5;
        private DevExpress.XtraReports.UI.XRLabel label52;
        private DevExpress.XtraReports.UI.XRLabel label51;
        private System.Data.OleDb.OleDbDataAdapter TableTableAdapter;
        private System.Data.OleDb.OleDbCommand oleDbCommand1;
        private System.Data.OleDb.OleDbConnection oleDbConnection1;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle FieldCaption;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private DevExpress.XtraReports.UI.XRControlStyle DataField;
        private DevExpress.XtraReports.UI.CalculatedField SaldoMes;
        private DevExpress.XtraReports.UI.CalculatedField SaldoAcum;
        private DevExpress.XtraReports.UI.CalculatedField Resultado1;
        private DevExpress.XtraReports.UI.CalculatedField Resultado2;
        private DevExpress.XtraReports.UI.CalculatedField PorsentajeAcum;
        private DevExpress.XtraReports.UI.CalculatedField PorsentajeMes;
        private DevExpress.XtraReports.UI.CalculatedField Resultado3;
        private DevExpress.XtraReports.UI.CalculatedField Resultado4;
        private System.Resources.ResourceManager _resources;
        public InformeContResultados() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = "zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJza" +
                        "W9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4O" +
                        "SNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAADAAAAAQAAAGhTeXN0ZW0uRHJhd" +
                        "2luZy5CaXRtYXAsIFN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhb" +
                        "CwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYVBBRFBBREhecsHnWR035IbpXQAAAABSAAAAK" +
                        "wAAAK0BAAAmJAB0AGgAaQBzAC4AUwBjAHIAaQBwAHQAcwBTAG8AdQByAGMAZQAAAAAAInAAaQBjAHQAd" +
                        "QByAGUAQgBvAHgAMQAuAEkAbQBhAGcAZQDSDgAAInAAaQBjAHQAdQByAGUAQgBvAHgAMgAuAEkAbQBhA" +
                        "GcAZQDP0AAAAc8dRGltIFJlczEgYXMgZG91YmxlID0gMA0KRGltIFJlczIgYXMgZG91YmxlID0gMA0KR" +
                        "GltIFJlczMgYXMgZG91YmxlID0gMA0KRGltIFJlczQgYXMgZG91YmxlID0gMA0KDQpQcml2YXRlIFN1Y" +
                        "iBHcm91cEZvb3RlcjFfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBc" +
                        "yBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KICAgICBlLkNhbmNlbCA9I" +
                        "EZhbHNlDQogIElGIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiR3JhZmljYTEiKSA9IDEgVEhFTg0KICAgI" +
                        "CBlLkNhbmNlbCA9IFRydWUNCicgIEVMU0UNCicgICAgIFJlczEgPSBSZXMxIC0gR2V0Q3VycmVudENvb" +
                        "HVtblZhbHVlKCJTYWxkb0FsIikNCicgICAgIFJlczIgPSBSZXMyIC0gR2V0Q3VycmVudENvbHVtblZhb" +
                        "HVlKCJTYWxkbyIpDQonICAgICBSZXMzID0gUmVzMyAtIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY" +
                        "2VudGFqZUFsIikNCicgICAgIFJlczQgPSBSZXM0IC0gR2V0Q3VycmVudENvbHVtblZhbHVlKCJQb3JjZ" +
                        "W50YWplIikNCmVuZCBpZg0KDQpFbmQgU3ViDQoNClByaXZhdGUgU3ViIFJlc3VsdGFkbzFfR2V0VmFsd" +
                        "WUoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCxCeVZhbCBlIEFzIEdldFZhbHVlRXZlbnRBcmdzKSANCg0KI" +
                        "CBlLlZhbHVlID3CoFJlczEgDQoNCkVuZCBTdWINCg0KUHJpdmF0ZSBTdWIgUmVzdWx0YWRvMl9HZXRWY" +
                        "Wx1ZShCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIERldkV4cHJlc3MuWHRyYVJlcG9yd" +
                        "HMuVUkuR2V0VmFsdWVFdmVudEFyZ3MpDQoNCiAgZS5WYWx1ZSA9wqBSZXMyDQoNCkVuZCBTdWINCg0KD" +
                        "QpQcml2YXRlIFN1YiBSZXN1bHRhZG8zX0dldFZhbHVlKEJ5VmFsIHNlbmRlciBBcyBPYmplY3QsIEJ5V" +
                        "mFsIGUgQXMgRGV2RXhwcmVzcy5YdHJhUmVwb3J0cy5VSS5HZXRWYWx1ZUV2ZW50QXJncykNCg0KICBlL" +
                        "lZhbHVlID3CoC1SZXMzLzEwMA0KDQpFbmQgU3ViDQoNCg0KUHJpdmF0ZSBTdWIgUmVzdWx0YWRvNF9HZ" +
                        "XRWYWx1ZShCeVZhbCBzZW5kZXIgQXMgT2JqZWN0LCBCeVZhbCBlIEFzIERldkV4cHJlc3MuWHRyYVJlc" +
                        "G9ydHMuVUkuR2V0VmFsdWVFdmVudEFyZ3MpDQoNCiAgZS5WYWx1ZSA9wqAtUmVzNC8xMDANCg0KRW5kI" +
                        "FN1Yg0KDQoNClByaXZhdGUgU3ViIERldGFpbF9CZWZvcmVQcmludChCeVZhbCBzZW5kZXIgQXMgT2JqZ" +
                        "WN0LCBCeVZhbCBlIEFzIFN5c3RlbS5EcmF3aW5nLlByaW50aW5nLlByaW50RXZlbnRBcmdzKQ0KDQoNC" +
                        "iAgICAgUmVzMSA9IFJlczEgLSBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlNhbGRvQWwiKQ0KICAgICBSZ" +
                        "XMyID0gUmVzMiAtIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiU2FsZG8iKQ0KICAgICBSZXMzID0gUmVzM" +
                        "yAtIEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiUG9yY2VudGFqZUFsIikNCiAgICAgUmVzNCA9IFJlczQgL" +
                        "SBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIlBvcmNlbnRhamUiKQ0KDQogIElGIEdldEN1cnJlbnRDb2x1b" +
                        "W5WYWx1ZSgiR3JhZmljYTEiKSA9IDEgVEhFTg0KICAgICBlLkNhbmNlbCA9IFRydWUNCiAgRUxTRQ0KI" +
                        "CBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkRlc2dsb3NhciIpID0gIlNpIiBUSEVODQogICAgIGUuQ" +
                        "2FuY2VsID0gRmFsc2UNCiAgRUxTRQ0KICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogIEVORCBJRiANC" +
                        "kVORCBJRiANCg0KRW5kIFN1Yg0KDQoNClByaXZhdGUgU3ViIGxhYmVsMTJfQmVmb3JlUHJpbnQoQnlWY" +
                        "Wwgc2VuZGVyIEFzIE9iamVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5Qcmlud" +
                        "EV2ZW50QXJncykNCg0KICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIkdyYWZpY2ExIikgPSAxIFRIR" +
                        "U4NCiAgICAgZS5DYW5jZWwgPSBUcnVlDQogIEVMU0UNCiAgICBJRiBHZXRDdXJyZW50Q29sdW1uVmFsd" +
                        "WUoIkRlc2dsb3NhciIpID0gIlNpIiBUSEVODQogICAgICAgZS5DYW5jZWwgPSBGYWxzZQ0KICAgIEVMU" +
                        "0UNCiAgICAgICBlLkNhbmNlbCA9IFRydWUgICAgDQogICAgRU5EIElGIA0KICBFTkQgSUYgDQoNCkVuZ" +
                        "CBTdWINCg0KUHJpdmF0ZSBTdWIgR3JvdXBGb290ZXIyX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBc" +
                        "yBPYmplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpD" +
                        "QoNCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJHcmFmaWNhMSIpID0gMSBUSEVODQogICAgIGUuQ" +
                        "2FuY2VsID0gVHJ1ZQ0KICBFTFNFDQogICAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTkQgSUYNCg0KRW5kI" +
                        "FN1Yg0KDQpQcml2YXRlIFN1YiBQYWdlSGVhZGVyX0JlZm9yZVByaW50KEJ5VmFsIHNlbmRlciBBcyBPY" +
                        "mplY3QsIEJ5VmFsIGUgQXMgU3lzdGVtLkRyYXdpbmcuUHJpbnRpbmcuUHJpbnRFdmVudEFyZ3MpDQoNC" +
                        "iAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJHcmFmaWNhMSIpID0gMCBUSEVODQogICAgIGUuQ2FuY" +
                        "2VsID0gVHJ1ZQ0KICBFTFNFDQogICAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTkQgSUYNCg0KRW5kIFN1Y" +
                        "g0KDQpQcml2YXRlIFN1YiBHcm91cEhlYWRlcjNfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9ia" +
                        "mVjdCwgQnlWYWwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KI" +
                        "CBJRiBHZXRDdXJyZW50Q29sdW1uVmFsdWUoIk9yZGVuIikgPSA5OTk5OTk5OTkgVEhFTg0KICAgIGUuQ" +
                        "2FuY2VsID0gVHJ1ZQ0KICBFTFNFDQogICAgZS5DYW5jZWwgPSBGYWxzZQ0KICBFTkQgSUYNCg0KJyAgS" +
                        "UYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJHcmFmaWNhMSIpID0gMSBUSEVODQonICAgICBlLkNhbmNlb" +
                        "CA9IFRydWUNCicgIEVMU0UNCicgICAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJEZXNnbG9zYXIiK" +
                        "SA9ICJTaSIgVEhFTg0KJyAgICAgICBlLkNhbmNlbCA9IEZhbHNlDQonICAgIEVMU0UNCicgICAgICAgZ" +
                        "S5DYW5jZWwgPSBUcnVlICAgIA0KJyAgICBFTkQgSUYgDQonICBFTkQgSUYgDQoNCg0KRW5kIFN1Yg0KD" +
                        "QpQcml2YXRlIFN1YiBjaGFydDFfQmVmb3JlUHJpbnQoQnlWYWwgc2VuZGVyIEFzIE9iamVjdCwgQnlWY" +
                        "WwgZSBBcyBTeXN0ZW0uRHJhd2luZy5QcmludGluZy5QcmludEV2ZW50QXJncykNCg0KICBJRiBHZXRDd" +
                        "XJyZW50Q29sdW1uVmFsdWUoIk9yZGVuIikgSVMgTk9USElORyBUSEVODQogICAgIGUuQ2FuY2VsID0gV" +
                        "HJ1ZSAgICANCiAgICBSRVRVUk4NCiAgRU5EIElGDQoNCiAgJ0dlbmVyYSB1biBvYmpldG8gcXVlIHJlc" +
                        "HJlc2VudGEgYSBsYSBncsOhZmljYQ0KICBEaW0gR3JhZmljYTEgQXMgWFJDaGFydCA9IENUeXBlKHNlb" +
                        "mRlcixYUkNoYXJ0KQ0KDQogICdHdWFyZGEgZWwgdmFsb3IgZGUgbGEgY29sdW1uYSBDb250TW9uZWRhD" +
                        "QogIERpbSBDb250TW9uZWRhIEFzIFN0cmluZyA9IEdldEN1cnJlbnRDb2x1bW5WYWx1ZSgiQ3VlbnRhI" +
                        "ikuVG9TdHJpbmcNCg0KICAnR2VuZXJhIHVuIG9iamV0byBxdWUgcmVwcmVzZW50YSBhIGxhIHBsYW50a" +
                        "WxsYSBzZSBzZXJpZXMgYXV0b2NyZWFkYXMNCiAgRGltIFBsYW50aWxsYSBBcyBTZXJpZXNCYXNlID0gR" +
                        "3JhZmljYTEuU2VyaWVzVGVtcGxhdGUNCg0KICAnT2N1bHRhIG8gbXVlc3RyYSBsYXMgZXRpcXVldGFzI" +
                        "GRlIGxhIGdyYWZpY2ENCiAgSUYgR2V0Q3VycmVudENvbHVtblZhbHVlKCJFdGlxdWV0YSIpID0gRmFsc" +
                        "2UgVEhFTg0KICAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gRmFsc2UNC" +
                        "iAgRUxTRQ0KICAgICBHcmFmaWNhMS5TZXJpZXNUZW1wbGF0ZS5MYWJlbC5WaXNpYmxlID0gVHJ1ZQ0KI" +
                        "CBFTkQgSUYNCg0KRW5kIFN1Yg0KDQpAAAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZ" +
                        "ywgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmM" +
                        "TFkNTBhM2EFAQAAABVTeXN0ZW0uRHJhd2luZy5CaXRtYXABAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAW" +
                        "sEAAAL/2P/gABBKRklGAAEBAQCWAJYAAP/uAA5BZG9iZQBkAAAAAAH/4RGWRXhpZgAATU0AKgAAAAgAB" +
                        "wESAAMAAAABAAEAAAEaAAUAAAABAAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAAcAAAAc" +
                        "gEyAAIAAAAUAAAAjodpAAQAAAABAAAAogAAAMIAlgAAAAEAAACWAAAAAQAAQWRvYmUgUGhvdG9zaG9wI" +
                        "ENTNSBXaW5kb3dzADIwMTE6MDE6MTggMDk6NTE6MDYAAAKgAgAEAAAAAQAAAWKgAwAEAAAAAQAAAIEAA" +
                        "AAAAAAABgEDAAMAAAABAAYAAAEaAAUAAAABAAABEAEbAAUAAAABAAABGAEoAAMAAAABAAIAAAIBAAQAA" +
                        "AABAAABIAICAAQAAAABAAAQbgAAAAAAAABIAAAAAQAAAEgAAAAB/9j/7QAMQWRvYmVfQ00AAf/uAA5BZ" +
                        "G9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADoAoAMBIgACEQEDEQH/3QAEAAr/xAE/AAABBQEBA" +
                        "QEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEA" +
                        "gUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh8WNzNRaisoMmR" +
                        "JNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1" +
                        "+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzN" +
                        "PElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2J" +
                        "zdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkkklKWBhZH1nd9ZMirKqDekt3+m7a0N2iPQdVYD6r7bP8" +
                        "Mx//gf6NXfrD1Y9I6Tdmsa19rdraWOmC95DG7tv5rZ9RyH9WOq5fVukMzMuttdjnvaCyQ1wa7Z6jWuL3" +
                        "M/c+mn+1L2/d/Q4uD/CWe7H3Pb/AEq4v8F1kkkkxepJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJ" +
                        "T//0PVVn9a61idHxPXv99j5bRQ0+6x37rf3WN/wln+DTdb63idGxPXv99j5bRQ0+6x3gP3WN/wln+DXG" +
                        "9M6Z1H619Rfn57y3FadtljZAgH+h4f7rG/4W3/0f/NpSvrH1PKzfqv067KcHXZeTbc4NENaKzdVXUz+Q" +
                        "xjmfSRerDqXS+ifV/qHTwWVYlO620agPvFT4yK/9Da71G/1/wDR2ekrX+MHBqo6V08Y7BVRj2mllbRAA" +
                        "cxxb/56XQ9AdTl/V3BBAsqfi11vY4AtMMFVrHNP0vouYtCOQY+WwT4eICc+OJ2PFxR/6DRljOTmc0b4S" +
                        "YQ4ZDcV6v8ApsPq99YcXreLvZ+jya4GRjk6tP7zf36n/mPWsvO+u9Czvqxmt6t0hzhiB2h1cai4/wAxf" +
                        "/pcWz6LHu/4uz9L6VtnXfV76w43W8Xewenk1QMigmS0n85v79T/AMx6h5jl4iPvYTxYZf42OX7smXBnk" +
                        "ZHFlHDlj/i5I/vxS9d65idDwftuW176y8Vhte2ZILv8I6tn0WO/OV6q1l1TLqzLLGh7T5OG5qwfrx1HL" +
                        "6b0ivIw3NZf67Wtscxry2WWkurFoexr/bs+j9BZPU+s/WV/V8Lp3TcoVvysWqwNcyvaXltllri99T9vt" +
                        "rTcfKzyREhKMQeL5j/m/mtdk5mEJGJEpSHDpEfv/K9usrrv1gxeh10WZVdljL3lk1hp2wNxc4Pcz/orm" +
                        "8jrH106E4W9XY3Lw7Pa57AwbSf9HbSxnp2/uevT6T1l/Wh/V7sXHysrMbndLvcX4Nm1jLILd36ZlNde2" +
                        "xjf0Vn8v/RqbDyV5I8coSxy6wl8/wDVj/WYs3OVjkYxkJx6Sj8v9aX9V9NSXK1dT+sPQsPKzfrHbXks9" +
                        "jMSmvaHutO727666msr2/T3+p9D/tyjj2/4wuqY/wC0Me2vHqeN9NEMZub29Jt1dz9rvzPtNrP8xRDlJ" +
                        "Gz7mMQB4fcMvRKXaLIeZAocEzMji4APXGPeT3C5X6ofWHP6hjdSy+pWB7MYh7WsYGhjNr7Htbt97/o/n" +
                        "o/1X+suT1G63pnU6vQ6jjCSAC0Pa0hr5YZ2Ws3N3fmP/nKli/UWw19I61YGteWM3BrxLTFdh2vb+cxPj" +
                        "gMcWeMwOMe1wy3+eW8Zf1lks4lkwGJPARk4h/cj+lH+q9Z0LreJ1zB+24jXsYHmtzbNu4ObB/wbrGfRc" +
                        "389aK4jp/1t6hjfVR/UckjKy3ZRxqJa1jB+jbY31GUCr2Ma2z+X+Yljs/xhZuK3qFOZUGvG6ukGqSDxt" +
                        "Apsp/7cvTfucxfHOEAJcHFI6Sl/VXfe4GuGM5kjjqI1jHxevz82nAwr82+fSx2OseGiTDRu9swh9J6nR" +
                        "1bp9PUMcObVdMNdEgtc6p7TsL2fTZ+8sKvq/Xbfq31O3qmGMfKw2OFdljPZYQP5z0LN7Hem78/+j2f4N" +
                        "VLPrdn4X1Wwcp8ZHUc51zRa9oDQK7HtdY6ur02uds9NjGf9cTRymQmhwn1+3ob14fc4v7vCuPNYwLNj0" +
                        "+5qOnFwf43E9okuKbj/AOMZ1DcxmXVYXAEUNNJJB/6z9m/9mF0P1dz+pZ/TvW6ninEyWvcwtLXM3gRFo" +
                        "qs99f0tn9hNycuYR4hOEwDR4JahOPPxnhMJwsWOMaF//9Hs/rX9WT1VozcQxn0s2Bjj7bKwS/0fd7arN" +
                        "zv0Vn9i7/SU5n1T+s/oFnR+pfogw+lj2uGwtcDs+yZLfbssa72V2f8AW7f0v872q5v61fVVnVGOzMNrW" +
                        "57Ww9hgNvaBHp2T7W3Nb/NW/wDWrf0f8ylN760dMd1PomTj1t3XtAtoHJ31neGt/wCMbuq/64sT/F51d" +
                        "luLZ0mx36Skm7HB71vM2NH/ABVzv/BlH6qfWh7Ht6R1Vzg4O9LHuskODgdn2TJ3e71d3sqe/wD4qz9J/" +
                        "O5/1h6DcM5/Vfq6XZFT7HsubiOl9N+teQ1vpnfst3O9T/R/8SrnLShkxy5eZ4eI8eOR/Rm1OZjPHkjng" +
                        "OLhHBkiP0of+gtz63fWs3Of0XpM2OsPo5FrBuLi72HFx2j6b3/Qsf8A9br9/wDN6n1Q+q56PU7LyzOfk" +
                        "NDXMBltTJ3eiCPp2bv52z/tr/SWw+qf1SZ0ljc3Na1/UHNhrRBbS0j+br/etd/hbf8ArVX6P+e6ZDPmh" +
                        "GHsYPk/Tn1yy/71OHDKU/fzfP8AoQ6Yo/8AfPKf4yP+Qav/AAy3/wA93LPH/i06N/4Uq/8APWQul+suF" +
                        "07OwasbqIt9GzIqYx9OhbY8+jU5x/0bnWel9H/CKi5n1ePUz1RgtOT0h9fTxUwy0uftoo2sd7rNrsp1O" +
                        "/f+ZZ/o0/DlAwiNSJrLHQaXl4YwWZcROYysb45eP6v1SdL6x1ss6B1FtjQ4DGtcAfFrTYx39l7dy4DPb" +
                        "a76ldMfyxmTez4Fxtcwfg9ek3NxM+jJwy9tjHtdTkNY4bm7xtc123+bftcqGL0vomB0p/SLLGXYjQ59r" +
                        "ch7CdrnEl9n0NrW2/Qf++mcvnGKIBBMhkE+H+rwygV/MYfckSCADAwv+txcTifXa/H6r0CrN6dc3Jpx7" +
                        "mvu2GdrXtfXutZ9Ova97PY9qz+mdJxOoYjL2/WO2l20Cyix+11ZAj09rr2+1v5jvoLp+m/V/oPSMm70D" +
                        "7+oN2Ci2wPBYNzjXVW/3WM93u3+qstn1Q+q/UrLLahdibbrccUte0NL6XOZYaWWet7PZu/qf4NTY8+OM" +
                        "DCMpxhE8UcnBGWk/wBGUZf9JiyYZynxkRlKQ4ZQ45R+X9KMopuh/VOvF6nX1dnVDnlm9rjAduJb6Xuu9" +
                        "Sz6Cx/qW9jekdcpLgLfSLvTPO0MsYXf5/tXWfV7pHS+lYttfTbDdXZYXWPLw/3ACvb+jDWN2bViiroJ6" +
                        "lX1Srp2ZZZ1Wl5pYzYK7PWr9bJe1nrsfXd6Lv0m5zGf6P8AS/pE2OYz92MjKekOGXDGH80fc4ZR9P8AW" +
                        "TLCIDFKIEPn4o3KY/XDg4uL1OZ0O/o1P1Mt/bFbrcazNLGNrBL/AFCytzHVOBbscxrXu3b/AP0mpt+re" +
                        "NTU7P8Aq915tNZAJ9Sz04/O/T3Ulm3/AIu7FXQ43TOhdMxv+b9jC/GyWPyLH5Dmlph9NMPf7Ntu+2n0f" +
                        "TZ/g/8ASqjb9Qfq07K9P17q7Xy5mOLWE7R+56tdl+z+2njmIcUzxTgJyM/lGTHOH9z9FaeXlwwHDCZjE" +
                        "R+b28kJf33PxOvdQ6n9X+t4mc5t78SgluSwABwdvbDtgbW7+b/RPaz9JWnx7ugN+pvTKetNeWXW3Cl9Q" +
                        "JfW4W3b7w5v5tbXe/8AnN/+hsXS0dG6DT0+/pGOGMqvrJvDXzYWuGz13vJdZ29r/oJUdE6I7pY6LtblY" +
                        "2Mfcx7tz2ucTb6jns2vqtd6jnez01GeYxa8MZwj7gyVD0ER4ODiH7vrXjBk0uUZy9s4/V6hxcfHX+K8s" +
                        "76vfYKjndB6/VXjkz+ktFbf+uWVF1Frv+Mxlu/Uvrub1jCu+2gOtxnhvrNG0PDhu9zR7PUZ+fs/kKkPq" +
                        "J9V3N+1NyrTRq7cLayyGzv/AEvp7trNvu/SrpenYOBgYraOn1tqx/pN2Gd27/CF5LnWbv33OS5jNjljM" +
                        "bOSd6TlAY5QroZfpJ5fDkjkB0xwrWEZmcZ32H6L/9L1VJJJJTzn1p+qzepsdm4TQ3qDW+5mgbe0D+bfP" +
                        "tbc3/A3f9at/R/zM/qn9XH9IpdkZLj9syWgWVNcfTraPo17Wn07bm/n3/8AW6f0f870CSSlJJJJKafWM" +
                        "SzM6bfRV/PFu+iTA9Wsi7H93/H11rHo6BnDMwbrCzaazdn8GMppvvpNbfz2faepZFv/AKDUrpElYxe77" +
                        "Z4a4bld9+H+X+GwZfa4xxXxUNu3E899W+j5ODZWcqqxluPj/ZjZuoNL/c1+6r7PXVlWbnM9Vr839Kz1r" +
                        "vz7LLE1f1enJw7bcWl2zMzb8lxDSSy52Q7GLtP0n08b2/4P/rS6JJSS97jntdHi4eL93Jt/z/8ADWR9r" +
                        "gjd8NiuKv3oPHv6F1r7BjYYq91NNLa3tdVDH1Xvvc22+xpytldLcf7E3F/P9X1kZ/QOrF2dt2OGeM2qt" +
                        "z3a44ufZdTbRtH81my1mb/h/U9D/B1emzqklIff1/m/mldfvLB7Onz/ACx3/dcfoGBZjOvutptx7LW1M" +
                        "LLDj7f0QcB6Tensqr2s3+l6lrfVfWyr/RoOH0rOqZ9XxYwA9OqczK9wO0mj0Pb+/wDpFvJKA+5xT+XbW" +
                        "rqvan8v/U2UcHBC+KrFXXFfuw+b/DcrqPSvtvUWW201347MS+oCwBwFljqdvsd+9Wyz3rJb0frTn4Dbq" +
                        "gTinBcbWuqiKQxuX69rmOzbsrd67K/Ts+y/Z3/6T1K7erSTsXu8IrhqvTx33/RRk9viN8V3rw08Z0fDd" +
                        "bg4uRXhsrqxrM2+3Olm6xrhlY/oNa39M5z32Mdd6v6HZjV/zns9JYfRczN6Vj/ZcWvBA6YKDaHNH2g2n" +
                        "Hv2fo2vf6Hp0W+o/Jbv9TLf+gtr9X1ezSUx93iNCPFxaaz/AHsn73p/fYo+3wizLh4ddI/uw/d9X/dvO" +
                        "YvQ3vsx7bsezb9t+0ZFWUaHCG4tuNXdXVhNbjfzz6Wf6X9F6q0OkUZWExuEcZteMHZNjbGvbtYHZD34u" +
                        "O2kfmuxrd//AAXp+ktNJV83uUePh4dKri4f0+HhZ8XBpw8V678N/o8Vv//Z/+0Y0FBob3Rvc2hvcCAzL" +
                        "jAAOEJJTQQlAAAAAAAQAAAAAAAAAAAAAAAAAAAAADhCSU0EOgAAAAAAkwAAABAAAAABAAAAAAALcHJpb" +
                        "nRPdXRwdXQAAAAFAAAAAENsclNlbnVtAAAAAENsclMAAAAAUkdCQwAAAABJbnRlZW51bQAAAABJbnRlA" +
                        "AAAAENscm0AAAAATXBCbGJvb2wBAAAAD3ByaW50U2l4dGVlbkJpdGJvb2wAAAAAC3ByaW50ZXJOYW1lV" +
                        "EVYVAAAAAEAAAA4QklNBDsAAAAAAbIAAAAQAAAAAQAAAAAAEnByaW50T3V0cHV0T3B0aW9ucwAAABIAA" +
                        "AAAQ3B0bmJvb2wAAAAAAENsYnJib29sAAAAAABSZ3NNYm9vbAAAAAAAQ3JuQ2Jvb2wAAAAAAENudENib" +
                        "29sAAAAAABMYmxzYm9vbAAAAAAATmd0dmJvb2wAAAAAAEVtbERib29sAAAAAABJbnRyYm9vbAAAAAAAQ" +
                        "mNrZ09iamMAAAABAAAAAAAAUkdCQwAAAAMAAAAAUmQgIGRvdWJAb+AAAAAAAAAAAABHcm4gZG91YkBv4" +
                        "AAAAAAAAAAAAEJsICBkb3ViQG/gAAAAAAAAAAAAQnJkVFVudEYjUmx0AAAAAAAAAAAAAAAAQmxkIFVud" +
                        "EYjUmx0AAAAAAAAAAAAAAAAUnNsdFVudEYjUHhsQGLAAAAAAAAAAAAKdmVjdG9yRGF0YWJvb2wBAAAAA" +
                        "FBnUHNlbnVtAAAAAFBnUHMAAAAAUGdQQwAAAABMZWZ0VW50RiNSbHQAAAAAAAAAAAAAAABUb3AgVW50R" +
                        "iNSbHQAAAAAAAAAAAAAAABTY2wgVW50RiNQcmNAWQAAAAAAADhCSU0D7QAAAAAAEACWAAAAAQACAJYAA" +
                        "AABAAI4QklNBCYAAAAAAA4AAAAAAAAAAAAAP4AAADhCSU0EDQAAAAAABAAAAHg4QklNBBkAAAAAAAQAA" +
                        "AAeOEJJTQPzAAAAAAAJAAAAAAAAAAABADhCSU0nEAAAAAAACgABAAAAAAAAAAI4QklNA/UAAAAAAEgAL" +
                        "2ZmAAEAbGZmAAYAAAAAAAEAL2ZmAAEAoZmaAAYAAAAAAAEAMgAAAAEAWgAAAAYAAAAAAAEANQAAAAEAL" +
                        "QAAAAYAAAAAAAE4QklNA/gAAAAAAHAAAP////////////////////////////8D6AAAAAD//////////" +
                        "///////////////////A+gAAAAA/////////////////////////////wPoAAAAAP///////////////" +
                        "/////////////8D6AAAOEJJTQQAAAAAAAACAAE4QklNBAIAAAAAAAQAAAAAOEJJTQQwAAAAAAACAQE4Q" +
                        "klNBC0AAAAAAAYAAQAAAAM4QklNBAgAAAAAABAAAAABAAACQAAAAkAAAAAAOEJJTQQeAAAAAAAEAAAAA" +
                        "DhCSU0EGgAAAAADSQAAAAYAAAAAAAAAAAAAAIEAAAFiAAAACgBVAG4AdABpAHQAbABlAGQALQAxAAAAA" +
                        "QAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAFiAAAAgQAAAAAAAAAAAAAAAAAAAAABAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAABAAAAABAAAAAAAAbnVsbAAAAAIAAAAGYm91bmRzT2JqYwAAAAEAAAAAAABSY3QxA" +
                        "AAABAAAAABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAAgQAAAABSZ2h0b" +
                        "G9uZwAAAWIAAAAGc2xpY2VzVmxMcwAAAAFPYmpjAAAAAQAAAAAABXNsaWNlAAAAEgAAAAdzbGljZUlEb" +
                        "G9uZwAAAAAAAAAHZ3JvdXBJRGxvbmcAAAAAAAAABm9yaWdpbmVudW0AAAAMRVNsaWNlT3JpZ2luAAAAD" +
                        "WF1dG9HZW5lcmF0ZWQAAAAAVHlwZWVudW0AAAAKRVNsaWNlVHlwZQAAAABJbWcgAAAABmJvdW5kc09ia" +
                        "mMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRsb25nAAAAAAAAAABCdG9tb" +
                        "G9uZwAAAIEAAAAAUmdodGxvbmcAAAFiAAAAA3VybFRFWFQAAAABAAAAAAAAbnVsbFRFWFQAAAABAAAAA" +
                        "AAATXNnZVRFWFQAAAABAAAAAAAGYWx0VGFnVEVYVAAAAAEAAAAAAA5jZWxsVGV4dElzSFRNTGJvb2wBA" +
                        "AAACGNlbGxUZXh0VEVYVAAAAAEAAAAAAAlob3J6QWxpZ25lbnVtAAAAD0VTbGljZUhvcnpBbGlnbgAAA" +
                        "AdkZWZhdWx0AAAACXZlcnRBbGlnbmVudW0AAAAPRVNsaWNlVmVydEFsaWduAAAAB2RlZmF1bHQAAAALY" +
                        "mdDb2xvclR5cGVlbnVtAAAAEUVTbGljZUJHQ29sb3JUeXBlAAAAAE5vbmUAAAAJdG9wT3V0c2V0bG9uZ" +
                        "wAAAAAAAAAKbGVmdE91dHNldGxvbmcAAAAAAAAADGJvdHRvbU91dHNldGxvbmcAAAAAAAAAC3JpZ2h0T" +
                        "3V0c2V0bG9uZwAAAAAAOEJJTQQoAAAAAAAMAAAAAj/wAAAAAAAAOEJJTQQUAAAAAAAEAAAABDhCSU0ED" +
                        "AAAAAAQigAAAAEAAACgAAAAOgAAAeAAAGzAAAAQbgAYAAH/2P/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlA" +
                        "GSAAAAAAf/bAIQADAgICAkIDAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAENCwsNDg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMD" +
                        "AwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAOgCgAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBA" +
                        "AAAAAAAAAMAAQIEBQYHCAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGC" +
                        "AUDDDMBAAIRAwQhEjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkR" +
                        "cKjdDYX0lXiZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRA" +
                        "AICAQIEBAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGF" +
                        "qKygwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dXZ" +
                        "3eHl6e3x//aAAwDAQACEQMRAD8A9VSSSSUpYGFkfWd31kyKsqoN6S3f6btrQ3aI9B1VgPqvts/wzH/+B" +
                        "/o1d+sPVj0jpN2axrX2t2tpY6YL3kMbu2/mtn1HIf1Y6rl9W6QzMy6212Oe9oLJDXBrtnqNa4vcz9z6a" +
                        "f7Uvb939Di4P8JZ7sfc9v8ASri/wXWSSSTF6kkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklP//Q9" +
                        "VWf1rrWJ0fE9e/32PltFDT7rHfut/dY3/CWf4NN1vreJ0bE9e/32PltFDT7rHeA/dY3/CWf4Ncb0zpnU" +
                        "frX1F+fnvLcVp22WNkCAf6Hh/usb/hbf/R/82lK+sfU8rN+q/Trspwddl5Ntzg0Q1orN1VdTP5DGOZ9J" +
                        "F6sOpdL6J9X+odPBZViU7rbRqA+8VPjIr/0NrvUb/X/ANHZ6Stf4wcGqjpXTxjsFVGPaaWVtEABzHFv/" +
                        "npdD0B1OX9XcEECyp+LXW9jgC0wwVWsc0/S+i5i0I5Bj5bBPh4gJz44nY8XFH/oNGWM5OZzRvhJhDhkN" +
                        "xXq/wCmw+r31hxet4u9n6PJrgZGOTq0/vN/fqf+Y9ay87670LO+rGa3q3SHOGIHaHVxqLj/ADF/+lxbP" +
                        "ose7/i7P0vpW2dd9XvrDjdbxd7B6eTVAyKCZLSfzm/v1P8AzHqHmOXiI+9hPFhl/jY5fuyZcGeRkcWUc" +
                        "OWP+Lkj+/FL13rmJ0PB+25bXvrLxWG17Zkgu/wjq2fRY785XqrWXVMurMssaHtPk4bmrB+vHUcvpvSK8" +
                        "jDc1l/rta2xzGvLZZaS6sWh7Gv9uz6P0Fk9T6z9ZX9XwundNyhW/KxarA1zK9peW2WWuL31P2+2tNx8r" +
                        "PJESEoxB4vmP+b+a12TmYQkYkSlIcOkR+/8r26yuu/WDF6HXRZlV2WMveWTWGnbA3Fzg9zP+iubyOsfX" +
                        "ToThb1djcvDs9rnsDBtJ/0dtLGenb+569PpPWX9aH9XuxcfKysxud0u9xfg2bWMsgt3fpmU117bGN/RW" +
                        "fy/9GpsPJXkjxyhLHLrCXz/ANWP9Zizc5WORjGQnHpKPy/1pf1X01JcrV1P6w9Cw8rN+sdteSz2MxKa9" +
                        "oe607vbvrrqayvb9Pf6n0P+3KOPb/jC6pj/ALQx7a8ep4300Qxm5vb0m3V3P2u/M+02s/zFEOUkbPuYx" +
                        "AHh9wy9Epdosh5kChwTMyOLgA9cY95PcLlfqh9Yc/qGN1LL6lYHsxiHtaxgaGM2vse1u33v+j+ej/Vf6" +
                        "y5PUbremdTq9DqOMJIALQ9rSGvlhnZazc3d+Y/+cqWL9RbDX0jrVga15YzcGvEtMV2Ha9v5zE+OAxxZ4" +
                        "zA4x7XDLf55bxl/WWSziWTAYk8BGTiH9yP6Uf6r1nQut4nXMH7biNexgea3Ns27g5sH/BusZ9Fzfz1or" +
                        "iOn/W3qGN9VH9RySMrLdlHGolrWMH6NtjfUZQKvYxrbP5f5iWOz/GFm4reoU5lQa8bq6QapIPG0Cmyn/" +
                        "ty9N+5zF8c4QAlwcUjpKX9Vd97ga4YzmSOOojWMfF6/PzacDCvzb59LHY6x4aJMNG72zCH0nqdHVun09" +
                        "Qxw5tV0w10SC1zqntOwvZ9Nn7ywq+r9dt+rfU7eqYYx8rDY4V2WM9lhA/nPQs3sd6bvz/6PZ/g1Us+t2" +
                        "fhfVbBynxkdRznXNFr2gNArse11jq6vTa52z02MZ/1xNHKZCaHCfX7ehvXh9zi/u8K481jAs2PT7mo6c" +
                        "XB/jcT2iS4puP8A4xnUNzGZdVhcARQ00kkH/rP2b/2YXQ/V3P6ln9O9bqeKcTJa9zC0tczeBEWiqz31/" +
                        "S2f2E3Jy5hHiE4TANHglqE48/GeEwnCxY4xoX//0ez+tf1ZPVWjNxDGfSzYGOPtsrBL/R93tqs3O/RWf" +
                        "2Lv9JTmfVP6z+gWdH6l+iDD6WPa4bC1wOz7Jkt9uyxrvZXZ/wBbt/S/zvarm/rV9VWdUY7Mw2tbntbD2" +
                        "GA29oEenZPtbc1v81b/ANat/R/zKU3vrR0x3U+iZOPW3de0C2gcnfWd4a3/AIxu6r/rixP8XnV2W4tnS" +
                        "bHfpKSbscHvW8zY0f8AFXO/8GUfqp9aHse3pHVXODg70se6yQ4OB2fZMnd7vV3eyp7/APirP0n87n/WH" +
                        "oNwzn9V+rpdkVPsey5uI6X03615DW+md+y3c71P9H/xKuctKGTHLl5nh4jx45H9GbU5mM8eSOeA4uEcG" +
                        "SI/Sh/6C3Prd9azc5/RekzY6w+jkWsG4uLvYcXHaPpvf9Cx/wD1uv3/AM3qfVD6rno9TsvLM5+Q0NcwG" +
                        "W1Mnd6II+nZu/nbP+2v9JbD6p/VJnSWNzc1rX9Qc2GtEFtLSP5uv9613+Ft/wCtVfo/57pkM+aEYexg+" +
                        "T9OfXLL/vU4cMpT9/N8/wChDpij/wB88p/jI/5Bq/8ADLf/AD3cs8f+LTo3/hSr/wA9ZC6X6y4XTs7Bq" +
                        "xuoi30bMipjH06Ftjz6NTnH/RudZ6X0f8IqLmfV49TPVGC05PSH19PFTDLS5+2ijax3us2uynU79/5ln" +
                        "+jT8OUDCI1ImssdBpeXhjBZlxE5jKxvjl4/q/VJ0vrHWyzoHUW2NDgMa1wB8WtNjHf2Xt3LgM9trvqV0" +
                        "x/LGZN7PgXG1zB+D16Tc3Ez6MnDL22Me11OQ1jhubvG1zXbf5t+1yoYvS+iYHSn9IssZdiNDn2tyHsJ2" +
                        "ucSX2fQ2tbb9B/76Zy+cYogEEyGQT4f6vDKBX8xh9yRIIAMDC/63FxOJ9dr8fqvQKs3p1zcmnHua+7YZ" +
                        "2te19e61n069r3s9j2rP6Z0nE6hiMvb9Y7aXbQLKLH7XVkCPT2uvb7W/mO+gun6b9X+g9IybvQPv6g3Y" +
                        "KLbA8Fg3ONdVb/dYz3e7f6qy2fVD6r9SsstqF2JtutxxS17Q0vpc5lhpZZ63s9m7+p/g1Njz44wMIynG" +
                        "ETxRycEZaT/AEZRl/0mLJhnKfGRGUpDhlDjlH5f0oyim6H9U68XqdfV2dUOeWb2uMB24lvpe671LPoLH" +
                        "+pb2N6R1ykuAt9Iu9M87Qyxhd/n+1dZ9XukdL6Vi219NsN1dlhdY8vD/cAK9v6MNY3ZtWKKugnqVfVKu" +
                        "nZllnVaXmljNgrs9av1sl7Weux9d3ou/SbnMZ/o/wBL+kTY5jP3YyMp6Q4ZcMYfzR9zhlH0/wBZMsIgM" +
                        "UogQ+fijcpj9cODi4vU5nQ7+jU/Uy39sVutxrM0sY2sEv8AULK3MdU4FuxzGte7dv8A/Sam36t41NTs/" +
                        "wCr3Xm01kAn1LPTj879PdSWbf8Ai7sVdDjdM6F0zG/5v2ML8bJY/IsfkOaWmH00w9/s2277afR9Nn+D/" +
                        "wBKqNv1B+rTsr0/XurtfLmY4tYTtH7nq12X7P7aeOYhxTPFOAnIz+UZMc4f3P0Vp5eXDAcMJmMRH5vby" +
                        "Ql/fc/E691Dqf1f63iZzm3vxKCW5LAAHB29sO2Btbv5v9E9rP0lafHu6A36m9Mp6015ZdbcKX1Al9bhb" +
                        "dvvDm/m1td7/wCc3/6GxdLR0boNPT7+kY4Yyq+sm8NfNha4bPXe8l1nb2v+glR0Tojuljou1uVjYx9zH" +
                        "u3Pa5xNvqOeza+q13qOd7PTUZ5jFrwxnCPuDJUPQRHg4OIfu+teMGTS5RnL2zj9XqHFx8df4ryzvq99g" +
                        "qOd0Hr9VeOTP6S0Vt/65ZUXUWu/4zGW79S+u5vWMK77aA63GeG+s0bQ8OG73NHs9Rn5+z+QqQ+on1Xc3" +
                        "7U3KtNGrtwtrLIbO/8AS+nu2s2+79Kul6dg4GBito6fW2rH+k3YZ3bv8IXkudZu/fc5LmM2OWMxs5J3p" +
                        "OUBjlCuhl+knl8OSOQHTHCtYRmZxnfYfov/0vVUkkklPOfWn6rN6mx2bhNDeoNb7maBt7QP5t8+1tzf8" +
                        "Dd/1q39H/Mz+qf1cf0il2RkuP2zJaBZU1x9Oto+jXtafTtub+ff/wBbp/R/zvQJJKUkkkkpp9YxLMzpt" +
                        "9FX88W76JMD1ayLsf3f8fXWsejoGcMzBusLNprN2fwYymm++k1t/PZ9p6lkW/8AoNSukSVjF7vtnhrhu" +
                        "V334f5f4bBl9rjHFfFQ27cTz31b6Pk4NlZyqrGW4+P9mNm6g0v9zX7qvs9dWVZucz1Wvzf0rPWu/Psss" +
                        "TV/V6cnDttxaXbMzNvyXENJLLnZDsYu0/SfTxvb/g/+tLoklJL3uOe10eLh4v3cm3/P/wANZH2uCN3w2" +
                        "K4q/eg8e/oXWvsGNhir3U00tre11UMfVe+9zbb7GnK2V0tx/sTcX8/1fWRn9A6sXZ23Y4Z4zaq3Pdrji" +
                        "59l1NtG0fzWbLWZv+H9T0P8HV6bOqSUh9/X+b+aV1+8sHs6fP8ALHf91x+gYFmM6+62m3HstbUwssOPt" +
                        "/RBwHpN6eyqvazf6XqWt9V9bKv9Gg4fSs6pn1fFjAD06pzMr3A7SaPQ9v7/AOkW8koD7nFP5dtauq9qf" +
                        "y/9TZRwcEL4qsVdcV+7D5v8Nyuo9K+29RZbbTXfjsxL6gLAHAWWOp2+x371bLPeslvR+tOfgNuqBOKcF" +
                        "xta6qIpDG5fr2uY7Nuyt3rsr9Oz7L9nf/pPUrt6tJOxe7wiuGq9PHff9FGT2+I3xXevDTxnR8N1uDi5F" +
                        "eGyurGszb7c6WbrGuGVj+g1rf0znPfYx13q/odmNX/Oez0lh9FzM3pWP9lxa8EDpgoNoc0faDace/Z+j" +
                        "a9/oenRb6j8lu/1Mt/6C2v1fV7NJTH3eI0I8XFprP8Aeyfven99ij7fCLMuHh10j+7D931f9285i9De+" +
                        "zHtux7Nv237RkVZRocIbi241d1dWE1uN/PPpZ/pf0XqrQ6RRlYTG4Rxm14wdk2Nsa9u1gdkPfi47aR+a" +
                        "7Gt3/8ABen6S00lXze5R4+Hh0quLh/T4eFnxcGnDxXrvw3+jxW//9k4QklNBCEAAAAAAFUAAAABAQAAA" +
                        "A8AQQBkAG8AYgBlACAAUABoAG8AdABvAHMAaABvAHAAAAATAEEAZABvAGIAZQAgAFAAaABvAHQAbwBzA" +
                        "GgAbwBwACAAQwBTADUAAAABADhCSU0EBgAAAAAABwAHAAAAAQEA/+EN0Gh0dHA6Ly9ucy5hZG9iZS5jb" +
                        "20veGFwLzEuMC8APD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjO" +
                        "WQiPz4NCjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNU" +
                        "CBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4NCgk8c" +
                        "mRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1uc" +
                        "yMiPg0KCQk8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZ" +
                        "G9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvb" +
                        "W0vIiB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlR" +
                        "XZlbnQjIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOnBob" +
                        "3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sP" +
                        "SJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiIHhtcDpDcmVhdGVEYXRlPSIyMDExLTAxLTE4VDA5O" +
                        "jUxOjA2LTA2OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDExLTAxLTE4VDA5OjUxOjA2LTA2OjAwIiB4b" +
                        "XA6TW9kaWZ5RGF0ZT0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgeG1wTU06SW5zdGFuY2VJRD0ie" +
                        "G1wLmlpZDozNDRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5OCIgeG1wTU06RG9jdW1lbnRJRD0ie" +
                        "G1wLmRpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQTAyRTQ3QzE5OCIgeG1wTU06T3JpZ2luYWxEb2N1b" +
                        "WVudElEPSJ4bXAuZGlkOjMzNEMwOUFCMUEyM0UwMTE4MjAxQjJBMDJFNDdDMTk4IiBkYzpmb3JtYXQ9I" +
                        "mltYWdlL2pwZWciIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJzU" +
                        "kdCIElFQzYxOTY2LTIuMSI+DQoJCQk8eG1wTU06SGlzdG9yeT4NCgkJCQk8cmRmOlNlcT4NCgkJCQkJP" +
                        "HJkZjpsaSBzdEV2dDphY3Rpb249ImNyZWF0ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6MzM0Q" +
                        "zA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHN0RXZ0OndoZW49IjIwMTEtMDEtMThUMDk6NTE6M" +
                        "DYtMDY6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyIvP" +
                        "g0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5pa" +
                        "WQ6MzQ0QzA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIHN0RXZ0OndoZW49IjIwMTEtMDEtMThUM" +
                        "Dk6NTE6MDYtMDY6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZ" +
                        "G93cyIgc3RFdnQ6Y2hhbmdlZD0iLyIvPg0KCQkJCTwvcmRmOlNlcT4NCgkJCTwveG1wTU06SGlzdG9ye" +
                        "T4NCgkJPC9yZGY6RGVzY3JpcHRpb24+DQoJPC9yZGY6UkRGPg0KPC94OnhtcG1ldGE+DQogICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgPD94cGFja2V0IGVuZD0ndyc/Pv/iDFhJQ0NfUFJPRklMRQABAQAADEhMa" +
                        "W5vAhAAAG1udHJSR0IgWFlaIAfOAAIACQAGADEAAGFjc3BNU0ZUAAAAAElFQyBzUkdCAAAAAAAAAAAAA" +
                        "AABAAD21gABAAAAANMtSFAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAEWNwcnQAAAFQAAAAM2Rlc2MAAAGEAAAAbHd0cHQAAAHwAAAAFGJrcHQAAAIEAAAAFHJYWVoAA" +
                        "AIYAAAAFGdYWVoAAAIsAAAAFGJYWVoAAAJAAAAAFGRtbmQAAAJUAAAAcGRtZGQAAALEAAAAiHZ1ZWQAA" +
                        "ANMAAAAhnZpZXcAAAPUAAAAJGx1bWkAAAP4AAAAFG1lYXMAAAQMAAAAJHRlY2gAAAQwAAAADHJUUkMAA" +
                        "AQ8AAAIDGdUUkMAAAQ8AAAIDGJUUkMAAAQ8AAAIDHRleHQAAAAAQ29weXJpZ2h0IChjKSAxOTk4IEhld" +
                        "2xldHQtUGFja2FyZCBDb21wYW55AABkZXNjAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAA" +
                        "AAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAABYWVogAAAAAAAA81EAAQAAAAEWzFhZWiAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAA" +
                        "G+iAAA49QAAA5BYWVogAAAAAAAAYpkAALeFAAAY2lhZWiAAAAAAAAAkoAAAD4QAALbPZGVzYwAAAAAAA" +
                        "AAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAAAAAAAAAAAAAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALklFQyA2M" +
                        "Tk2Ni0yLjEgRGVmYXVsdCBSR0IgY29sb3VyIHNwYWNlIC0gc1JHQgAAAAAAAAAAAAAALklFQyA2MTk2N" +
                        "i0yLjEgRGVmYXVsdCBSR0IgY29sb3VyIHNwYWNlIC0gc1JHQgAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZ" +
                        "XNjAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAA" +
                        "AAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAdmlldwAAAAAAE6T+ABRfLgAQzxQAA+3MAAQTCwADXJ4AAAABWFlaIAAAAAAAT" +
                        "AlWAFAAAABXH+dtZWFzAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAACjwAAAAJzaWcgAAAAAENSVCBjd" +
                        "XJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgALQAyADcAOwBAAEUASgBPAFQAWQBeAGMAaABtAHIAd" +
                        "wB8AIEAhgCLAJAAlQCaAJ8ApACpAK4AsgC3ALwAwQDGAMsA0ADVANsA4ADlAOsA8AD2APsBAQEHAQ0BE" +
                        "wEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGpAbEBuQHBAckB0QHZAeEB6" +
                        "QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2AsECywLVAuAC6wL1AwADC" +
                        "wMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kEBgQTBCAELQQ7BEgEVQRjBHEEf" +
                        "gSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWWBaYFtQXFBdUF5QX2BgYGFgYnBjcGS" +
                        "AZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdhB3QHhgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIb" +
                        "giCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK8" +
                        "wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMMXAx1DI4MpwzADNkM8w0NDSYNQA1aDXQNjg2pDcMN3" +
                        "g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9BD14Peg+WD7MPzw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRM" +
                        "RFPEW0RjBGqEckR6BIHEiYSRRJkEoQSoxLDEuMTAxMjE0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U8" +
                        "BUSFTQVVhV4FZsVvRXgFgMWJhZJFmwWjxayFtYW+hcdF0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZI" +
                        "BlFGWsZkRm3Gd0aBBoqGlEadxqeGsUa7BsUGzsbYxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdw" +
                        "x3sHhYeQB5qHpQevh7pHxMfPh9pH5Qfvx/qIBUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3" +
                        "SMKIzgjZiOUI8Ij8CQfJE0kfCSrJNolCSU4JWgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8oc" +
                        "SiiKNQpBik4KWspnSnQKgIqNSpoKpsqzysCKzYraSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwug" +
                        "i63Lu4vJC9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1E" +
                        "zVNNYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8J" +
                        "zxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6Q31Dw" +
                        "EQDREdEikTORRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRLDEtTS5pL4" +
                        "kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIxUnxSx1MTU19TqlP2VEJUj" +
                        "1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbhaB1pWWqZa9VtFW5Vb5Vw1XIZc1l0nXXhdy" +
                        "V4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTpZT1lkmXnZj1mkmboZz1nk" +
                        "2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4SbmtuxG8eb3hv0XArcIZw4HE6cZVx8" +
                        "HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjMeSp5iXnnekZ6pXsEe2N7wnwhfIF84" +
                        "X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eDuoQdhICE44VHhauGDoZyhteHO4efiASIa" +
                        "YjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7OjzaPnpAGkG6Q1pE/kaiSEZJ6kuOTTZO2lCCUi" +
                        "pT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR" +
                        "6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9p26n4KhSqMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2uo" +
                        "a8Wr4uwALB1sOqxYLHWskuywrM4s660JbSctRO1irYBtnm28Ldot+C4WbjRuUq5wro7urW7LrunvCG8m" +
                        "70VvY++Cr6Evv+/er/1wHDA7MFnwePCX8Lbw1jD1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLN" +
                        "su2zDXMtc01zbXONs62zzfPuNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHad" +
                        "tr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW" +
                        "+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw5fFy8f/yjPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65" +
                        "/t3/Af8mP0p/br+S/7c/23////bAEMAAQEBAQEBAQEBAQIBAQECAgEBAQECAgICAgICAgMCAwMDAwIDA" +
                        "wQEBAQEAwUFBQUFBQcHBwcHCAgICAgICAgICP/bAEMBAQEBAgICBAMDBAcFBAUHCAgICAgICAgICAgIC" +
                        "AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICP/AABEIAIEBYgMBEQACEQEDEQH/xAAfA" +
                        "AABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQ" +
                        "QYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXW" +
                        "FlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHy" +
                        "MnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGB" +
                        "wgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVic" +
                        "tEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SF";
                    resourceString += "hoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8" +
                        "/T19vf4+fr/2gAMAwEAAhEDEQA/AP7+KACgAoAKACgAoAa7pGjySOI44wXkkcgKqgZJJPQCgD8VvGX/A" +
                        "AXQ/ZW8L/Em78G6X4S8TeMvCOmXT6Vf/Enw/Dp32OUo5Qz2dvcXMcs0GeQ7bCRkqpGMxzo0VJn7B+CfG" +
                        "nhf4j+EPDXj3wTrEXiDwl4vsrfxD4d1qyJ8u4tLqMSxuAwDKcHlWAKnIIBBFWZtHUUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFA" +
                        "BQBg+KtBh8VeGPEfhe4uXs7fxJYXmgz3drjzYkvLd7dnTdxuUPkZ70AfxE+M/8Aglx+294U+JN78ObL4" +
                        "Gar4v2XRsdI8aeGVil0G9gaQrFcC+kdIYEdRuKzsjJnDhTWPKzqVRH9gn7IXwV1T9nb9mn4PfBjXdTj1" +
                        "fXfA2kpZa9fWZLQG+uZ5L64SFmVC0Ucs7JGxUEqASAeK1SOeTuz6QpkhQAUAFABQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFA" +
                        "BQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQA" +
                        "UAFABQAUAFABQAUAf56/wDwUQ/ax8Z/tU/tR/E/xbdeL73VPh34c1u+0D4QaIbiUWNho2n3BtLaa3gDF" +
                        "I5LhYhNK45LMecAY/2g8FfDrC8PcP4eiqSjXnBSqu2rlJXab3ajflS2SR/il43eI+K4i4hxFZ1XKhCbj" +
                        "SV9Iwi7JpbJytzN73Z/U/8A8EOPi58U/i9+xH9s+KmvXnii78EeLNW+H/g7X/EEs1xeT6Haadpt5Csk8" +
                        "7M8ohmu5oUJPyoioOFr/Pn6WXDeX5bxXy4SCgqlKM5KNklNymnZLRXUU33bb6n+h30SOJcxzPhPmxc3N" +
                        "06soQlK7bgowau3q7OTS7JJdD9ia/mU/p8KACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACg" +
                        "AoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAILq6trK2uL29uEtLO0R7q7u7p1jiiijUu" +
                        "zuzkBVUAkknAFAHyx+118bNP+GP7G3xy+OHhrWIbmHTvBWo6/4I12ylVoJ7vUrAwaXLHIpwyyTXERUjq" +
                        "DxX3vhbw8s24jwWEavGdWPN/hTvL/yVM+A8VeInlPDeOxadpU6UuX/E1aP/AJM0f5ytf7gn+GJ/dv8AA" +
                        "/VbP/gnx/wSQ8I+O30aG41n4e+AF+J11o2ob40uvEniY/2rHbXLrh8fbdRSBiDkKMLwBX+RfFmHlxn4k" +
                        "VcPzNRq1/Z3XSnT91tdPhi5Lz3P9f8AhLEQ4K8NaWI5E50qHtLPrUqe8k+vxzUX5bH09+xV+2r8Jv23v" +
                        "hNafEX4dXY03X9NEWn/ABE+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurovwPin4WZjwpmLw2JV4O7hN" +
                        "L3Zx7rs19qO6fdNN/oHhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQAUAFABQAUAFABQAU" +
                        "AFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAQXV1bWVtc" +
                        "Xt7cJaWdoj3V3d3TrHFFFGpdndnICqoBJJOAKAP5SP+CnP/AAU61L9oDVdQ/Zr/AGb9XeH4StcDQ/F/j" +
                        "TT5PJl8W3JkEX2aByV26cG4JJHnnk/u/v5SkbwhbVn6Sf8ABa7VYfhn/wAE1fEHgbS5jBZa/qXg/wCGt" +
                        "sMHc9vY3sWphc7WxldMGeRkcZOcH+nPok5YsRxpRm1/ChUl/wCS8n/t39bn8u/S7zR4fgqtBO3tZ04/+" +
                        "Tc//tv9bH8Wnw48JS+PviH4D8Cws6zeNdZ0vwlE0GN4bUr6KzBXIIzmTjiv9U88zJYPBVsQ9qcJS/8AA" +
                        "U3+h/lDkeWvG42jh1vUnGP/AIE0v1P7Qf8Agu3rWo+FP+Ce+peHtA0+4Oj+J/E/hfwhrQ02OV4LXTraS" +
                        "bVY2nKBgkXn2EKBmIG9kGckA/5c/RFwsMRxpGpUkuaFOpJX3cnaLt3dpSenRN7H+qH0v8XUw3BUqdOL5" +
                        "Z1acXbZRV5K/ZXjFa9WlvY/kR/Zh/ae+LP7I/xZ0P4v/CDXDput6afsms6Nd7307WdOd1aaxvoVZfMhk" +
                        "2juGVgHQq6qw/0m4+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR/mj4f+IGZcNZlDG4KdprRp/DOPWMl1" +
                        "T+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ABE+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCu" +
                        "rov+QPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/7E+FPitlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml" +
                        "9h1+Zn6cFABQAUAcp448c+D/hp4T1zx34+8R2nhLwf4ah/tDXfEWuSrBbW0W4Rgszd2ZgqqOWYgAEkCg" +
                        "EjyP4DftX/s8/tOQa5N8DPihZePX8Nsia7YW8N7Y3tssjMiSPa6nBbTeWxUhZAm044NJO43Fo+h6YgoA" +
                        "KACgAoA+BvEf/BUL9hDwf8AFXXPgr4s/aBtPDXxG8NapN4M1/Sde0bxLaWlpqNvMYJI5dRn05bJVVxgy" +
                        "GfZ33Yr9iwPgDxficuhjqOCc6E4qcWpU23Fq6aip8+3Tlv5H41jvpBcH4XMZ4GtjVCvCThJOFRJSTs05" +
                        "uHJv15reZ96xSxTxRTwSrNBMqywzRMGR0YZDKRwQR0Nfj8otOz3P2OMk1dapklSUFABQAUAFAHxT/wUY" +
                        "+KvjL4J/sSftE/Er4fao+h+M9A0NbXQNbtiVmsptSv7fSjcQsPuyxLcl427MAe1fqngjw9hc14rwWFxM" +
                        "ealKd5Lo1FOVn5O1n5H5T448RYrKeE8disNLlqxhaL6pyko3Xmr3XmfyE/8ErfiF4+8Wf8ABR79nC68U" +
                        "+ONY8S3Oq6tqkuqXHiDU728kuW/4RzUDmVrmRy54HLZr/Sj6QmTYPDcD45UqUIKMY25YpW9+O1lof5nf" +
                        "R3zrGYnjrAutWnNynK/NJu/7uW93qf3ca3rejeGtG1XxF4i1W20LQNCtptY1vW9YmjtrSztLaMzSzTSz" +
                        "FUSNEUszMQABk1/kGf7Dnzx8Ef2y/2Y/wBo7X9b8K/Bb4vad448SeHo2vNT0S3ivrO58hHWNpoU1GC3M" +
                        "8SsyhpItygkZPIpJplOLR9N0yQoAKACgAoA+XfjN+2p+y3+z34s0jwN8YvjLpngvxbrSR3NpoVxHe3c8" +
                        "UMudklz/Z8E4to22na85RT2NJtFKLZ9L6fqFhq1hZarpV7Dqel6nDHqGm6lp8iTQXEEyCSOSOSMlXR1I" +
                        "KsCQQcimSW6ACgAoAKACgAoAKACgCC6uraytri9vbhLSztEe6u7u6dY4ooo1Ls7s5AVVAJJJwBQB/J//" +
                        "wAFRv8AgqNc/HC51v8AZ7/Z71t7T4NWjtp/jnxzp7NHL4rljbDQQMMFdOUjk9Zzyf3eA+UpHRTp2Pya/" +
                        "Zu8AeJ/id8ePhN4L8I+Gp/Fusarr2ludF0+LzS9rBeRz3DyZwqxRxIzyOxCqoJJAFSi5PQ/pI/4OHp54" +
                        "f2J/hvHFM8Ud18T9EguUjYqJEHhbxFKFYDqNyK2D3APav7E+hXBPiqvdbYaf/pykfxj9NqbXClBJ74mH" +
                        "/puqfy0fsTW0F5+2Z+yPaXUK3FrdfE7wFbXMEoDI8b+KrFWVgeoIODX+gnirNx4XzJp2aw1b/03I/z08" +
                        "J4KXFOWJq6eJo/+nIn+iv4w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5azoUeORHBBBB/DqOa" +
                        "/xMyzM8RgsRCvQm4VINOMk7NNbNM/3AzPLMPjcPOhXgp0ppqUWrpp7po/iJ/wCCof8AwS88U/sWeKbj4" +
                        "kfDe3uvFP7NHim68vR9Yk3z3Xhi6nf5NO1F+SYyTi3uD9/7j/vMF/8AVvwB8fsPxTh1hsS1DHwWq2VRL" +
                        "7UfP+aPTdabf5NfSC+j7iOFMQ8VhU54Cb0e7pt/Yn5fyy67PXf4H/Zh/ae+LP7I/wAWdD+L/wAINcOm6" +
                        "3pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD9h4+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR+" +
                        "N+H/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/Cb9t74TWnxF+HV2NN1/TRFp/xE+HeoSo+" +
                        "o6BqLoT5cmAvmQSbWME4ULIoPCurov+QPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/7E+FPitlvFu" +
                        "WrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFABQB+X3/BXfwN42+Jf7IU/gP4eeHL3xd4u8T+KfDun6T" +
                        "4c8PwvPc3TCeSYgIn8KhC7MeFALEgDNTPYum9T4A/4JOfsJftc/s0/tMap8QvjJ8LpPAvgfVPCeqeGn1" +
                        "Ia94dvvNurm+sLqGF7fStQuZufILfMmAV5IOKmMWmXUmmj+kCtDEKACgAoAKAP87T/gol/yfX+1p/2Pv" +
                        "iP/ANOMlf7XeCn/ACSOW/8AXin/AOko/wARPG7/AJK/Mv8Ar/U/9KZ/dd+xNc3F5+xl+yPeXk73V3dfD" +
                        "HwDc3V1cuzySSP4VsWZmZiSWJOST1r/ACO8VYRjxRmSSslia3/pyR/r54UVJS4WyyUndvDUf/TcT6dr4" +
                        "I+/CgAoAKACgD84v+CuP/KOj9p7/sFaX/6kenV+4fRu/wCS3wH+KX/puZ+GfSV/5IfMP8Mf/TkD+SH/A" +
                        "IJHf8pF/wBmH/sK6p/6jmo1/o99JH/kiMf/AIY/+nIH+bH0av8AkuMv/wAUv/Tcz+xT/gpXoniHxL+xB" +
                        "8efDnhPS7vW/Emv2ek6Joui6FFLPeXk914hsIFgijgBd2k3bdoHOcV/jfLY/wBnIbn4mf8ABNX/AIJ6f" +
                        "tnfA79sD4NfF/4mfB+bwb8ONHi18+I9Zn13w3LJFFqHhfUbK3WWzs9RluTuuJogV8olTgsAASIjF3NZz" +
                        "TR/U1WpgFABQAUAFAH8j/7b37DX7Wv7TX7bf7S3jL4O/B+/8Y+F7XVtN0xfEl/faVpNnM9v4e0+Ix282" +
                        "u3dms3l4CsIi23GDjGKylFtnRGSSP6P/wBir4f+OfhT+yn8C/hx8StMbRfHPgzQbfQfEWkS3Vtem2lgd" +
                        "1WLzrOWeJwqbQNjkAcDpWkdjGT1PqGmSFABQAUAFABQAUAQXV1bWVtcXt7cJaWdoj3V3d3TrHFFFGpdn" +
                        "dnICqoBJJOAKAP5P/8AgqN/wVGufjhc63+z3+z3rb2nwatHbT/HPjnT2aOXxXLG2GggYYK6cpHJ6znk/" +
                        "u8B8pSOinTsfjZ8Lvhd48+NHjzw38M/hn4bn8V+NPFc40/R9H08DLHG55JHbCxxRqC8kjkKigsxAFQka" +
                        "N2P7Uf2Af2AfAf7FPgPe/keK/jV4rgjX4g/EFYzhRkSf2fp/mANHaRsBk4DSsA7gYRE2jGxzTnc+Pf+D" +
                        "gvQ5tW/Ya8MX8W7Z4Y+Iega5c7FBGyTRtZ00biSMDddjn1wK/rb6GeLVPi2pF/boTX/AJNTl/7afyH9N" +
                        "PCOpwjTkvsYiD/8kqR/9uP5Lv2VPEcXg/8Aah/Zu8WzukUHhbx94P8AEc0lyGaNUsfENpckuEIJUBOcH" +
                        "Nf6NeIeBeJ4fx1FbzoVY/fCSP8AN3w6xywvEGArPaFelL7pxZ/pOV/hif7tnN+MPB/hb4geFtf8E+NtA" +
                        "tfFPhHxTazaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmu7LMzxGCxEK9CbhUg04yTs01s0zhzPLMPjcPOhXg" +
                        "p0ppqUWrpp7po/iJ/4Kh/8ABLzxT+xZ4puPiR8N7e68U/s0eKbry9H1iTfPdeGLqd/k07UX5JjJOLe4P" +
                        "3/uP+8wX/1b8AfH7D8U4dYbEtQx8FqtlUS+1Hz/AJo9N1pt/k19IL6PuI4UxDxWFTngJvR7um39ifl/L" +
                        "Lrs9d/gf9mH9p74s/sj/FnQ/i/8INcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD9h4+4" +
                        "By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR+N+H/iBmXDWZQxuCnaa0afwzj1jJdU/vTs000mf3n/sVftq/" +
                        "Cb9t74TWnxF+HV2NN1/TRFp/wARPh3qEqPqOgai6E+XJgL5kEm1jBOFCyKDwrq6L/kD4p+FmY8KZi8Ni" +
                        "VeDu4TS92ce67Nfajun3TTf+xPhT4rZbxblqxOGdpqynBv3oS7Pun9mWzXZppfYdfmZ+nBQB+e3/BUH9" +
                        "pzx/wDslfsgeN/iv8LVtovH0t7pfg/w5q2qwpcw6dLqdz5b3XkShkleONW8tXBTeQWDKCrftHgDwFg+I" +
                        "+JaWExd/Y2lKSTs5cq+G61SbtdrW17NPVfin0geP8bw3wzWxmEt7a8YxbV1HmfxWejaV7J6XtdNaP8AG" +
                        "v8A4I3ft5ftb/tI/tcaj8PPjd8aL7x94Nh8H6z4ii0LULLSLeMXtte6fFFLusbSB8qszjG7HPSv6d+k7" +
                        "4QcN5Fw3HE4HCqlVdWMbpyejUrrWTXRH8u/Rd8YuJc94llhsfipVaSozlZqK1Tik9Ip9WeAf8FIf+CkP" +
                        "7bXwW/ba+Pnww+GHx81Dwl4D8Jahp9n4d8O2en6HNHaxzaHZXTqr3VlLIcySs3zMetfZeB3gdwpmvCmD" +
                        "xWKwcalapGTlJymr2nJdJJbJdD4zx08dOLMq4sxmEwmMlTo05RUYqMHa8IvrFvdvqfEH/D3H/gov/0c9" +
                        "qv/AIK/Dn/yur9X/wCJbuCP+gCP/gVT/wCTPyX/AImV44/6GEv/AAGn/wDIHoHw/wD+C1v/AAUP8DatD" +
                        "f6h8YbT4jacj+dP4b+IHh/RZrSY8DDS6Zb2N0o46JOv514+c/RX4KxdNxjhnSl/NCc018pOUfviz2cl+" +
                        "lbxvg6ilLFKtH+WcINP5xUZfdJH7sfsy/8ABVTwL/wUE8K3XwEvPHGo/sZ/tRa3GF8C+J/DsthqGmajq" +
                        "MaEILJtWgeOQu337GdA7KcRTM43L/I3Hn0esXwZiFmEaUcwy+PxxknGUY9ebld1bpOLsnrKKWj/AK/4B" +
                        "+kTg+NMO8ulWll+YSXuSi4yjKXTl5lZ3605K7WkZN6r8bv2o/21f+Cs37I3xj8SfBj4rftGanba1oxF5" +
                        "o+tWWleHjYazpcrstvf2bvpoLQyhD1AZWDIwDKwH9O+H/hX4c8SZZTxuEwMXCWjTlO8ZLeMvf3X3NWa0" +
                        "aP5d8QvFbxI4azSpgcZjpKcdU1GFpRe0o+5s/vTunqmfkR488deLPid4z8T/EPx3rL+IfGXjO9uPEfif" +
                        "XblIY5Lu9upDLLKywJGgLMScKoHtX9JZRlGGwGFp4bDx5KVNKMVrolstbs/mjOM3xOYYqpicRLnq1JOU" +
                        "npq3q3pZfcfZvg7/gqH+3p8P/CHhXwH4P8A2itS0Twj4J02x8I+FtFg03QJEs9O021SztoFaawd2EcUa" +
                        "qCzEnHJJr8vzPwA4PxuJqYitgYyqVJOUnzT1lJ3b0lbVu+h+pZX9ILjHBYanh6GOlGlTioxXLDSMVZLW" +
                        "N9Eran9bn/BI79qr4s/tb/slH4hfGwx3fjPwn4j1P4dzeLIbWOyGt2tjY2N8l88UCRwh83jQuYlCFoyc" +
                        "A5Ff5w/SQ8PMu4b4j+rYG6pTpxny3vyNuS5bu7t7t1fWz9D/Sf6NXiLmXEvDf1nH2dWnUlDmtbnSUXzW" +
                        "Vlf3nF2Vrx73Pz2/bz/AOC8Gn/DzxDrnwo/Y70jT/Gmt6O8ml6/8afE6vc6PDcKpR00q0idPtLRsf8Aj" +
                        "4lYRblIWOVCHr9o8IPohzxtGGLzqUqcJaxpR0k1/flry3/lXvWesovQ/FPGL6YMMDXng8ljGpOOkqstY" +
                        "p/3I6c1v5n7t1pGS1Pwl8Vf8FP/ANv7xjqcurar+1R4qsbmUs5g8K3UOh2o3Y4W30aK1iAGOPl/rX9c5" +
                        "d4B8G4WnyQy+k1/eTm/vk2/xP5AzH6QHGeKqc88xqp/3WoL7oKK/A9++A3/AAWv/bo+DmrWJ8VePYfjn" +
                        "4RidBfeF/ihawSzvF91/K1KzSG7SQj7rSPIoIBKHkH47jD6K3CWZ037Ki8NU6Spt2+cHeNvRJ+aPtODv" +
                        "pXcX5XUXtqyxNLrGolf5TVpJ+ra8mf1jfsO/t7/AAZ/bq8AXPib4fSv4c8a+HBFD4/+F+uTRvqWkyyj5" +
                        "ZFZAouLWQgiOdVAOCGVGBUf50+LHg9mnCOMVLE+/Sn8FRL3ZeXlJdYv5NrU/wBHfCTxkyvi/BOrhvcqw" +
                        "tz02/ei+/8Aei+kkvVJ6HB/8Fcf+UdH7T3/AGCtL/8AUj06vY+jd/yW+A/xS/8ATczx/pK/8kPmH+GP/" +
                        "pyB/JD/AMEjv+Ui/wCzD/2FdU/9RzUa/wBHvpI/8kRj/wDDH/05A/zY+jV/yXGX/wCKX/puZ/ab+3J8d" +
                        "PEn7NX7Jvxv+N3g6xt9Q8V+BdJW58OQasrPbLe3t7BpsMsqKQXWJrgSFMjdtxkZzX+WvhNwlQz3iPCYG" +
                        "s2qdWXvW3sk5NLte1r9L3P9VPFzi+vkPDeLx9FJ1KUPdvtdtRTfezd7dbWP5tv+CYH/AAUa/bS+P37eX" +
                        "wS+GPxb+Ol74v8AAHjB/FE3iHwvNpuh2tvObPwhq2pwDNjZQugjngRwFYfdA6cV/cvj74IcLZNwhi8Vg" +
                        "8Iqdan7PllzTbV6sIveTTum1r3P4T+j945cVZzxjhMJjMY6lGp7TmjywSdqU5LaKas0np2P6Pv2zP2z/" +
                        "hF+xH8KZPiX8UbmS/vtSkbSfA3gXRmj/tPXdQVQ5igEhCpHGpDTTN8qLjqzIrfw94X+F2ZcV5j9Vwisl" +
                        "rOb+GEe77t7JLVvyTa/ujxS8U8s4Ty761i2227QgvinLsuyW8m9Eu7aT/kp+PX/AAXC/bh+Lup3qeBvF" +
                        "Vl8BfCMjsLLw/8ADuzt5r0RchfP1LUo5p2kAPLQ+Sp/uiv9HeD/AKJ/CeW017em8VV6ym2lfyhFpW8nz" +
                        "PzP82uMfpa8W5nUf1eosLS6Rgk3bznJN381yryPjiH/AIKDftzQakdVT9rf4hNdFBD5U3ivWJLbCsG/4" +
                        "95JzDnjk7MkcZwTX6bLwZ4SdPk/s2hb/r3G/wB9r/ifl8fGri5VOf8AtLEX/wCvkrfde34H3p+zt/wXe" +
                        "/bE+FWp6dZ/F6fTv2hPBMbpFf2fiS1ttK1uO3HX7NqOlQxqX77riGbPTjqPyDjb6InDOY05SwalhavRx" +
                        "blC/nGTen+GUT9i4I+mDxRl1SMca44ul1Ukozt5Tilr/ijI/rI/ZO/a0+EP7Zfwns/i18H9Snl0wTton" +
                        "iPw7rcSwano2pxxJM9pdRozruCyKyujMjKQQx5A/wA6PEXw5zLhfMXg8ZFc1rxktYyjspRfyas0mnuj/" +
                        "R/w48SMs4py1YzBSfLe0ovSUZbuMlqtmndNprZn82f/AAVJ/wCCpP7YXwy/bC+JHwY+DHxIPwr8CfCs6" +
                        "foVpaaFp+l3NxqNxc6XbajNdXU2o21w27dcFERCqhVHBYkn+5vo/fR+4Zx/DNDG42h7etX5m25SSilJx" +
                        "SSi12u27tt9rI/hL6Qv0heJ8v4nr4HA1/YUaHKklGLcm4qTbck+9klZJLvdn9Ef7BPxL8X/ABU/Yx/Z/" +
                        "wDih8TPETeIfGHirw7HrnirxLfrbwNcTedKGlcQJFGvyqM4UDiv4p8YMiw2X8UYzC4WHJShUtGKu7Ky0" +
                        "1uz+3PBzPsVmPCuCxeKnz1Z07yk7K7u9dLI/ED9uH/gvhqWg+Ktc+G37GOj6bqlhoksmmah8b/FkLXsF" +
                        "5NGSrtpFnuRGiVh8txPuEnJWPbtdv6v8J/oe062Hhis7lKLkrqlF2aX9+W9+8Y2a6yvdL+TPFv6ZFSji" +
                        "J4XI4xlGLs60ldN/wByO1u0pXT6RtZv8SfGP/BSr9vbxzdXV5rX7V/jOylvNvnJ4O1aTw7ENrBhsi8Pi" +
                        "ySPkc7FGRweK/qvLPAvg/CRUYZdRaX80ef8Z8zfzP5OzTx44yxknKpmVZN/yy5F8lDlS+R2fw0/4Kwf8" +
                        "FAfhfqEF5pn7SGs+K7VGV7rSPiWLbxHb3CKANjNq0c0yA7eTFIjdeck15ee/R14NzCDjLAwg+9O8Gv/A" +
                        "AFpP5pryPVyH6R3GmXzUo46dRdqlqif/gSbXyafmf0W/wDBPT/gtV4L/aj8U+Hvgp8dfC9v8LPjT4jkX" +
                        "TPCes+HWmk8N6/dlSRAgunkmsrhyMRxSPIrngSBiqH+JvGn6LGK4fw88dgKjrYWCvJSt7SC76WUorq0k" +
                        "1/LZNn9weCf0rMLxDiIYHMKaoYubtFxv7Ob7a3cJPom5J/zXaR+7FfyMf18FAEF1dW1lbXF7e3CWlnaI" +
                        "91d3d06xxRRRqXZ3ZyAqqASSTgCgD+T/wD4Kjf8FRrn44XOt/s9/s9629p8GrR20/xz4509mjl8Vyxth" +
                        "oIGGCunKRyes55P7vAfKUjop07H42fC74XePPjR488N/DP4Z+G5/FfjTxXONP0fR9PAyxxueSR2wscUa" +
                        "gvJI5CooLMQBUJGjdj+1H9gH9gHwH+xT4D3v5Hiv41eK4I1+IPxBWM4UZEn9n6f5gDR2kbAZOA0rAO4G" +
                        "ERNoxsc053P0JqiD83f+CuXw5m+Jf8AwT0/aN0yzg87UfDGm2XxGs2AJMaeHdVttWumwP8Ap1gmHtnNf" +
                        "uX0bs7WA40wMpP3ZycH/wBvxcV/5M0fhX0lcjeP4Jx0Yq8oRU1/25JSf/kqZ/AhbXM9ncW93azNb3Vq6" +
                        "XNtPESrpIjBlZSOhBGRX+xM4KUWmrpn+NNObjJNOzR/pe/Az4lWPxk+C/wn+LOnSJJafEjw7o3jVPJ6I" +
                        "2pafFdOmMDBRnKkEZBGDX+EvFuRTyvNMTg5b0akof8AgMmr/Pc/3p4Rz6GaZVhsZHatTjP/AMCinb5bH" +
                        "qlfPH0RzfjDwf4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5ruyzM8RgsRCvQ" +
                        "m4VINOMk7NNbNM4czyzD43DzoV4KdKaalFq6ae6aP4if+Cof/BLzxT+xZ4puPiR8N7e68U/s0eKbry9H" +
                        "1iTfPdeGLqd/k07UX5JjJOLe4P3/uP+8wX/ANW/AHx+w/FOHWGxLUMfBarZVEvtR8/5o9N1pt/k19IL6" +
                        "PuI4UxDxWFTngJvR7um39ifl/LLrs9d/gf9mH9p74s/sj/FnQ/i/wDCDXDput6afsms6Nd7307WdOd1a" +
                        "axvoVZfMhk2juGVgHQq6qw/YePuAcu4ky6eDxkLweqa+KMukovo19zWjum0fjfh/wCIGZcNZlDG4Kdpr" +
                        "Rp/DOPWMl1T+9OzTTSZ/fZ+xv8AtX+BP2zvgP4Z+N3gS2l0hNQkm0HxZ4Wv3WS40bWrMIbm0eRAFkAEi" +
                        "SRyADdG6MQpJUf47eJ3h3jOF83qYHENStZxktpQe0rdNmmujTV2tX/sp4XeI2D4qyenj8OnG94yi94zW" +
                        "8b9d00+qadk9F9TV+fH6GfjP/wXi/5R/eIf+xp8M/8ApTJX9P8A0Q/+Syh/16qfkj+W/phf8kXP/r7T/" +
                        "Nn4f/8ABv8Af8n16t/2IXiD/wBOOl1/WH0yf+SRj/1/h/6TM/kr6GH/ACV8v+vE/wD0qB8uf8Fcf+Ui/" +
                        "wC09/2FdL/9RzTq+/8Ao3f8kRgP8Mv/AE5M/PvpK/8AJcZh/ij/AOm4H9D/APwTT/YD/Y2+Lf7Dn7P/A" +
                        "MRfiT+z34f8YeN/E+najda/4k1eGdrm6ki12+tkZykqjISNVHHQV/Ffjt4xcT5bxZjcNhcbUp0oSjyxT" +
                        "VleEX27s/trwG8GuF8y4RwWJxWCp1K04y5pNO7tOS79kj1z4+/8ERv2H/i74dv4PAfgqb4EeNTG39k+L" +
                        "PAF3eS2yzADYLjTr+eW3kjBHzCMRuc/fHFfN8HfSt4sy2uniKqxNLrGaV7eU0lJP15l5H0vGX0TeEszo" +
                        "NYek8LV6Sg3a/nCTcWvTlfmfx9/tO/s3fFf9jH46a38JPiEDp3inwtJBr3hjxTobyx2+pWEkhez1Kxl+" +
                        "VtjGM4IwySKyHDIQP8AS7gLjnLuKMohjMNrTndSi7Xi/tQkvn6NNNaNH+ZHH/AmZcK5vPB4nSpCzjJXt" +
                        "KP2ZxfbT1TTT1TP61P2ENd+Av8AwVV/Zd8B+Kv2ovhhovxW+MfwKmufhn4s1HxHATcNK8cE8d6pidG23" +
                        "sCxtJ/D5yybQBxX+cni7g848POIK1LKsROhhcSlUiovTqnH/tx3S68rjc/0k8H8Zk3iLw9RrZth4V8Vh" +
                        "m6cnJa9GpafzqzfTmUrH8nv7b/g3wv8O/2v/wBpLwL4J0WHw34R8JeMdd0Hw3oOnArBZ2dtfPHFFGGJI" +
                        "VVGBk1/op4UZpiMbw1gcRXm51Z0YOTe7bSu2f5xeLWV4fA8TY/D0IKFKnWnGMVskm7JH9fP7I//AATl/" +
                        "Ye8cfspfsx+NfFv7NfhvXfFXi/4e+C/FHibXL6G4M95qGoeG7O7uJ5CswBeSSRmbA6mv81fEjxu4swnE" +
                        "WPoUcdUjTp16sYpNWUY1JJJadErH+mfhr4G8JYvhzL69bAU5VKmHpSk2ndylTi23ru27ngn/BZ7476N+" +
                        "xz+yJ4I/Zi+AWkWXwyPxra/8KwaV4Kgi0+LTPClgscuqLDHahQjXkl3HE7EZdXmOSxJH2P0XeEKvE/Et" +
                        "XNMwk631e0rzbk5VHfku3vyqLaXRqPQ+N+lPxhS4X4Zo5Vl0Y0frPNG0EoqNONnOyW3M5JN9U5ddT+dX" +
                        "/gnh+wj4u/bx+NEngix1OTwp8OPB0MXiD4q+O4YRM9jZSuyQW9ujkI11dujLEGOFVXkIYIVb+2PGrxdw" +
                        "3CGV+3lHnr1Hy04Xtd9W+vLHd23bS0vdfxB4JeD+J4xzX2EZclCmuapO17Lol05pPRX2Sb1tZ/2P/C7/" +
                        "glx+wV8KPDkHh7S/wBmvw34vZYfsl7r/wAUbGHxNqN05Xa8rS6ws4jdjz+5WNVP3VUcV/mPxB9IDjDMa" +
                        "7qTx1SnrdRpt04rytG11/ibb6tn+oXD30e+DstoKlDAU6mlnKolUk/O8r2f+FJLokfnz+3v/wAEP/gx8" +
                        "QfA3iP4g/sk+Gk+F/xd0SGXWIPh7ps8p8P+IREpke2jhuGcWdy4GIWiKxFsK6Dd5i/s3g99K/NMFi4Yf" +
                        "OKntsNJ252vfh5tr4or7V7ytqm7Wf4t4x/RLyrG4Spicnp+xxMVfkT9yduiT+GT+za0b6NK/Mv5iP2Sv" +
                        "2j/ABr+x9+0R4D+M3htrmCfwlfLYeNfDaMYTqmiSyrFqOnTJJgZkjB2bx8kqo+NyDH97+I/A+F4myStg" +
                        "qtmpxvCW/LNfDJej3tvFtbM/gDw246xfDGd0cdSunTlacduaD+OL9VtfaST3R/aP/wVQ1/SfFf/AATI/" +
                        "aB8UaBeLqOheJPD2g6/ouoRAhZ7S813TLiGQbgDhkcEZr/Lf6PmDqYfj3BUqitOFScWuzUJpr7z/VL6R" +
                        "GMpYngDG1abvCdOEk+6c4NP7j+Tn/gkd/ykX/Zh/wCwrqn/AKjmo1/or9JH/kiMf/hj/wCnIH+cX0av+" +
                        "S4y/wDxS/8ATcz+t7/grj/yjo/ae/7BWl/+pHp1f5w/Ru/5LfAf4pf+m5n+k/0lf+SHzD/DH/05A/lK/" +
                        "wCCLv8Aykt/Zs/7nH/1Adcr/Q76Uf8AyQmO/wC4X/p6mf50fRX/AOS9wH/cX/0zUPqP/g4X1/xNefti/" +
                        "Dzw5qU8o8M6F4C07UPDFi4YQCS/1nUxdTpngvI1uiMR2jUdq+A+hdg6EeGK9WKXtJV5KT66Rhyr5XbXq" +
                        "z9C+mxja8uKKFKTfs40IuK6e9OfM/V2SfojzD/glZ4Q/wCCX+v3Or3X7ani8RfFBb5U8H+FfiVJdaR4L" +
                        "WyRUKzNe2cqxSzFywdLySOMLjCPyw9/6QmZcf0YxWR0v9n5felTtKrftytXSts4Ju/VbHz/ANHfLPD+t" +
                        "KTz2r/tHN7sal40rd+ZOzd91NqNuj3P6sNL/Yl/YB8aeE7aTw9+zB8LPEHhfVYVWw8QeGPC3hqXz4geH" +
                        "i1Cxg8wnj76y5PrX+eWI8VeMsLiWqmYYmFSL1jKpU0fnFu3yaP9FcP4T8GYvDJ08vws6clpKNOnqvKSV" +
                        "/mmflD+2F/wQE+GnjwL4n/Y98QW/wAIfE0sxbU/APj681K78MzxuSxe3uUivby1dST8pEqEYCiPHP8AR" +
                        "Phn9MbH4P8AdZzB16dtJwUVUXqrxjJefuvu2fzl4nfQzwGM/e5LNYepfWE3J036O0pRfl7y7JH37/wS9" +
                        "/YM1n9gz4LeJvCPjLxjaeMviD8QdWXxV4ruPDCzjSbMQWqWkFtavdxwyyhQGZpXjTJbGwbct+OeP3i/S" +
                        "4wzSnWo0nTo0o8sea3M7u7bs2l0SSb2310/Zvo++DtXg7KqlGvVVSvVlzS5b8qsrJRuk31bbSve1tNf5" +
                        "M/+CuP/ACkX/ae/7Cul/wDqOadX+i/0bv8AkiMB/hl/6cmf5v8A0lf+S4zD/FH/ANNwP6Ef7e8TeGv+D" +
                        "f8Ah1TwjczWesH4ZRaW9xYgmVbG/wBXWwvsbeQDazShm7DJ7V/GP1OhX8ZHCsk4/Wb691G8f/Jkj+1Pr" +
                        "mIoeDCnRbUvq1tO0pWl/wCStn8kHwXsfhNqXxV8C2Px217VvDPwhuL+JfH2ueB7SK91WCwALN9nimZVy" +
                        "zAKz4YopLhJCoRv9H+Ka2ZU8urSwEIzxKj7im7Rb82vvtpd6NpO6/zY4Vo5bUzGjHMJyhhnL33BXko+S" +
                        "f3X1stUpNWf9sP7Jf7O/wDwSA8e+FrSx/Z28A/DL4xiKAS3cXi63s/E/iIKAu6W6tvFSz3sBYjOGiRRy" +
                        "FAHFf5W+I3GviXg8Q5ZlWxOH105W6cPROnaD+9vuz/Vzw24I8MsZh1HLaOGxGmvMlUn6yVS819yXZHZ/" +
                        "Hn/AIJD/sJ/HPRL+0i+DFh8IfEkyMul+L/gxFHoEtpIRw32K1UWMq5xlZIDx0KnmvL4Q+knxdlNVSeKl" +
                        "Xh1jV99P/t5++vlL1uepxj9Gfg/N6UorCxw9TpKl7jX/bq9x/OPpY/Lr9l3/ggv8Vfg3+1X8PPir4++M" +
                        "3h3W/hZ8JPENh8RPDQ8KJqi6/qtzot7HqFjHc2t3bLb2qNLEpm2XMx2gqv3ty/v/iB9L/Ls04er4TD4W" +
                        "pHEV6bhLm5eSKmnGTTT5paN2vGOur2s/wCffD76HWY5XxFQxeIxVOWHoVFOPLzc8nBqUU01yxV0r2lLT" +
                        "Rb3X9PVfwOf3+FAHin7RXwS0f8AaM+C3j/4L674g1HwtpvjuyOly694YneC6t3WRZkJCsoliLIBLCx2y" +
                        "ISpxnITQ4uzP4W/2oP2X/il+yZ8UtU+F3xR0vybmHde+G/ElkrnTta04uVju7SRgMqcYZT8yNlWAIrFq" +
                        "x1Rlc9v/wCCeH7abfsU/GibxdqnhaDxT4E8a28Phfx/HDbQNrFrYrP5on0+4kAZXjb5nh3BJgAGwyo6O" +
                        "LsKcbo/ts+HfxE8FfFjwV4c+Ivw68R23ivwZ4rtk1TQtd0t90U0TZBBBAZHRgVdGAZGBVgGBFbHK0dpQ" +
                        "BzfjHwpovjzwh4q8D+JLb7Z4d8Z6bfeFNfs/l/e2Wo2r2c6fMGHzRyEcg13ZZmNXB4mnXpO06clJPs4u" +
                        "6/FHDmmXUsZhqmHqq8KkXGS7qSs/wAGf5p3xa+G3iD4OfFH4h/CjxVEYvEXw51nUvBer7kaMSTaddvam" +
                        "RA2fkk2b0OSCpBBIOa/3W4cz2jmeX0MXS+CtCM16SV7eq2fmf4NcSZFWyvMK+DrL36M5QfrFtX9HuvI/" +
                        "sE/4IIftF2vxP8A2TdS+CWqagJfF37PmqTadb2spzI/h7XJpdTspcsctsnNzDgDCqiDuBX+aP0wuCZYD" +
                        "iOOOhH93iop3/vwSjJfNcr822f6cfQ444jmHDcsBOX73CSat/cm3KL+UuZeSSP3Rr+ST+uwoA/lQ/4LD" +
                        "/8ABV7S/F9j4u/ZB/Zu1W31fwxdb9A+NPxQtPLuIL7Y+JNK0xzuUxBlxPcL94jZGduWb/Q36M30dqmGn" +
                        "TznM4uNRa0qb0a7Tn5/yx6bvWyX+dX0nfpG08VCrkuWSUqb92rUWqfeEPL+aXXZaXb/AJuvB/g/xT8QP" +
                        "FOgeCfBOgXXinxd4puodE8PeHtEhee6vLqdwiRxogJJJP4dTxX9x5nmeHwWHnXrzUKcE3KTdkkt22fwr" +
                        "lmWYjG4iFChBzqzaUYpXbb2SR/fF/wS+/Y71/8AYn/Za0z4Y+M9Th1Dx/4s1a7+J/j2DTH820sdS1Gzt" +
                        "LEWkMg4kEMFlEruPlZ9xXK4J/x68ffE2jxVxBLFUItUYRVOF9G4xcnzNdLuTaW6Vr6n+yP0fvDCtwnw9" +
                        "HC15J1qk3UnbVKUlFcqfWyik3s3e2h+iVfih+3H4z/8F4v+Uf3iH/safDP/AKUyV/T/ANEP/ksof9eqn" +
                        "5I/lv6YX/JFz/6+0/zZ+H//AAb/AH/J9erf9iF4g/8ATjpdf1h9Mn/kkY/9f4f+kzP5K+hh/wAlfL/rx" +
                        "P8A9KgfLn/BXH/lIv8AtPf9hXS//Uc06vv/AKN3/JEYD/DL/wBOTPz76Sv/ACXGYf4o/wDpuB/W9/wSO" +
                        "/5R0fsw/wDYK1T/ANSPUa/zh+kj/wAlvj/8Uf8A03A/0n+jV/yQ+X/4Zf8ApyZ+jtfh5+5n81X/AAcb/" +
                        "DrRLj4cfs5fFpLWOLxHpOt6n8Op71FAmnstQsP7TjRyB8yxSWTlAT8pkbH3jX91fQhzurHHY7B3fJKEZ" +
                        "26JxfK381JX72XY/g76cmR0pYHA4yy9pGcqd+rUlzJfJxdu133PFP8Ag3B8RanB8RP2oPCSzE6Nqei+H" +
                        "fEU9uxJAubG+u7ZGUdBlLtgfXA9K+p+nDgqbwWX1re8pzj8mov/ANtR8p9BjHVFjswo392UIS+ackvwk" +
                        "z8Zf+CgWoQan+3J+1xc2wYRx/ETxbp7eaAD5lprVxaP0J43RnHtX9Q+DVF0+E8tT/6B6b++Cf6n8teNF" +
                        "ZVOLsza/wCgiqvum0/yP7t/2Hf+TKv2P/8Asl3w/wD/AFE7Cv8AIvxY/wCSqzP/ALCa3/pyR/r/AOEn/" +
                        "JKZZ/2DUf8A03E/mm/4OMHvD+0l8B43Mn9nr4Hke1DbvK85tevBLt7btoTdjtj2r+6/oSKP9hYx/a9t+" +
                        "HJG36/ifwb9OFy/t7Br7Psfx55X/T8D8Ovhv/wvHyNW/wCFQ/8ACV/Zt8P9u/8ACt/7X2b8P5Xn/wBl8" +
                        "Zxu27vfHev6xzz+ybx+ueyvrb2nL87c342P5IyL+17S+pe1tpf2fN8r8v4XPTP+M1f+qo/+XZXg/wDGK" +
                        "/8AUN/5TPf/AOMr/wCon/yoH/Gav/VUf/Lso/4xX/qG/wDKYf8AGV/9RP8A5UPNLn4L/HO8uJ7y8+E/i" +
                        "y6u7p3ubq6udC1h5JJHYszMzQEliTkk9a96HFOUxiksTSSX9+P+Z4NThXN5ScpYaq2/7kv8j+u74+R63" +
                        "b/8EErOz8R21xZ61p3wt8CaXfWWqxPBcwm1vtItljkjkVWVkVApDDPHPNf5s8HSpPxgcqTTg8TWaa1Tu" +
                        "pu6fmf6XcZxqx8HFGqmprDUU01ZqzpqzXkfzrf8Ejv+Ui/7MP8A2FdU/wDUc1Gv7Y+kj/yRGP8A8Mf/A" +
                        "E5A/iH6NX/JcZf/AIpf+m5n9b3/AAVx/wCUdH7T3/YK0v8A9SPTq/zh+jd/yW+A/wAUv/Tcz/Sf6Sv/A" +
                        "CQ+Yf4Y/wDpyB/KV/wRd/5SW/s2f9zj/wCoDrlf6HfSj/5ITHf9wv8A09TP86Por/8AJe4D/uL/AOmah" +
                        "/WR/wAFA/8Agnf8L/29fA2laf4g1F/BHxQ8FLcN8PviVpsCzvbC4AMlpeQFk+0WjsqsV3KyMMowy4f/A" +
                        "Dp8GvGrMOD8XKVOPtMPUtz027XttKL+zJbXs01o07K3+j/jR4I5fxjg4xqS9niKd+Sole194yWnNF72u" +
                        "mnqmrtP+Sn9oT/gkN+3N+z7NqN5P8J5viv4QsS8kfjL4NM+uRPEg3F3sokW/iCryxe3CjnDEAmv9HOC/" +
                        "pKcJZyoxWJVCq/s1fc1/wAXwPytK/kf5tca/Rn4uyVyk8M69Jfbpe/p/hXvrzvG3mfFHw7+Mnx2/Z58R" +
                        "Xlx8MviN4l+EPiO3lEWsW3hrUNQ0mR5ITjy7uCN4xIAeCkqkeor9UzvhjKM6oJYqhTrwa05oxlv1i9be" +
                        "qZ+U5HxRnGSV28LXqYeaevLKUduklpf0aP2B/Z2/wCC/P7VHw5u9O0v47aFpPx98JoUhvtRaCHQPESRj" +
                        "5d0dzpsYtXKjkiS1LOQMuuSa/mnjX6HPD2OjKeAnLC1Oiu5w+ak+ZfKVl2ex/TfBH0y+IsDKMMwhHFU+" +
                        "rsoT+TiuV/ON33W5/Uv+yd+158F/wBs34Yw/E/4Na1JcWtvINM8UeFdcSODWNEviu/7PewRvIqll+ZHR" +
                        "mRx91jggf59+IvhrmnC+PeFxsEm1eMlrGa7xdl800muq2P9C/DfxMyrinL1i8FNtJ2lF6Sg+0ld/JptP" +
                        "o9z+KP/AIK4/wDKRf8Aae/7Cul/+o5p1f6ofRu/5IjAf4Zf+nJn+Uv0lf8AkuMw/wAUf/TcD+uz/gnF4" +
                        "b0Hxj/wTc/Zz8JeKdJg17wz4n8FN4f8Q6HqcYltryyvHuLeeGVG4ZJEcqw9DX+bfjhjq2F45x1alJxqQ" +
                        "rc0Wt01ZprzTP8ASzwMwNHFcCYGjWipU50eWSezTumn5NH4U/tg/wDBAX4r+GNd1vxd+yBq9t8RPBF3J" +
                        "JfWfwt8V3sNhr+nK7bvs9vd3pS2u4052tLJFJjAIkbLH+uPDP6Y2XYijCjnMXSqrR1IpuEvNxV5Rb7JS" +
                        "XXRaH8heJ30M8xw9adbJZKtReqpyajOPkpO0ZJd24vpq9T8MfiZ8EPjx+zx4ggs/in8NPEfwn12znH9m" +
                        "3niPT73Tg80ZLK9rcsqpLjaSrxORxkGv61yHizKM6ouWEr068GtVGSlp/eW69Gj+Rc/4SzjJK6ji8PUo" +
                        "TT0couOv917P1TZ9d/Az/grN+3h8BmsLXR/jfe/EHw5Y4X/AIRT4wr/AMJJbSRrwsf2i9b7bGigYVYrl" +
                        "ABwOK/NeLfo58IZxdzwipTf2qXuP1svcb9Ys/TOEfpIcYZPyqGLdWmvs1f3i9Lv30vSSP6LP2D/APgtt" +
                        "8K/2nPFPh34QfGjwsnwX+LniSRNK8N6na3X2jwzrV65wkEUtxtltJ5SdsUUu9XbCiUuyof4m8XvoqZhk" +
                        "GHnjMDU+sYaCvJWtUgu7S0klu2rNLXlsmz+4PB76WOXZ/iIYLHU/q+Jm7Rd705vok3rFvZJ3TenNdpH7" +
                        "mV/JZ/XIUAFAHzH+1h+yf8AC39r/wCFt/8ADb4k2Hk3MPmX3gzxnYxodR0LUSm1bi3ZsZU4AliJ2yLwc" +
                        "EKypq5UZWP4jP2oP2X/AIpfsmfFLVPhd8UdL8m5h3XvhvxJZK507WtOLlY7u0kYDKnGGU/MjZVgCKxas" +
                        "dMZXPpj/gnn/wAFDPGv7F3jUaRq5ufFfwH8V3KSeN/BEb7pbOVsRnUdOEhCpcIoG9MhZlAViCEdHGViZ" +
                        "wuf2h/Dv4ieCvix4K8OfEX4deI7bxX4M8V2yapoWu6W+6KaJsggggMjowKujAMjAqwDAitjmaO0oA/j3" +
                        "/4L/fsq3Hw/+OXhf9qDw1pZXwh8a7ePw942ubZP3Vt4o0m2WJGfaoC/a7ONCvUs8MrHrX+mH0OPEKOMy" +
                        "mplVWX73Dvmh505O/8A5LJu/ZSij/Mb6Zvh3LBZvTzWlH91iVyz8qkVb/yaKVu7jJn5wf8ABOD9rq4/Y" +
                        "y/ak8F/E6/mmb4ea2G8DfFjTrTcxl0HUJE8yZUH3pLWVI7hAOW2bMgMa/cPHDw2jxRw/VwsUvbx9+m3/" +
                        "PHZekleL7Xv0PwzwM8S5cLcQ0sVJv2EvcqJfyS3du8XaS72t1P9BjStV0zXdL03W9F1CHVtG1m3h1XSd" +
                        "V02VJre5triMTRSxSRkq6OjBlYHBByK/wAZcRh6lGpKnOLjKLaaejTWjTXRpn+02HxFOtTjUpyUoySaa" +
                        "1TT1TT6prY/lu/4K5/8Fc/7U/4Sf9lX9lXxP/xK/wB9oHxg+MGgTf8AH11im0rSpoj/AKrqtxcKfn5RD" +
                        "s3M/wDoD9G76N3s/Z5tm1P3tHSpNbdpzXfrGL23etkv89vpLfSW9p7TKMoqe7rGrVi9+8IPt0lJb7LS7" +
                        "f8ANX4P8H+KfiB4p0DwT4J0C68U+LvFN1Donh7w9okLz3V5dTuESONEBJJJ/DqeK/unM8zw+Cw869eah" +
                        "Tgm5Sbsklu2z+D8syzEY3EQoUIOdWbSjFK7beySP7dv+CXn/BLzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1" +
                        "iPZPa+GLWdPn07Tn5BkIOLi4H3/ALifu8l/8pPH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/rL9H36P" +
                        "uH4Uw6xWKSnj5rV7qmn9iHn/NLrstN/1+r+aj+mgoA/Gf8A4Lxf8o/vEP8A2NPhn/0pkr+n/oh/8llD/" +
                        "r1U/JH8t/TC/wCSLn/19p/mz8P/APg3+/5Pr1b/ALELxB/6cdLr+sPpk/8AJIx/6/w/9JmfyV9DD/kr5" +
                        "f8AXif/AKVA+XP+CuP/ACkX/ae/7Cul/wDqOadX3/0bv+SIwH+GX/pyZ+ffSV/5LjMP8Uf/AE3A/re/4" +
                        "JHf8o6P2Yf+wVqn/qR6jX+cP0kf+S3x/wDij/6bgf6T/Rq/5IfL/wDDL/05M/R2vw8/cz+e3/g4t/5Ng" +
                        "+B//Y+r/wCo9qNf2f8AQl/5H+L/AOvH/t8D+Kvpwf8AJP4T/r//AO2TPjT/AINx/wDktf7R/wD2K2lf+" +
                        "nY1+ofTe/5FWB/6+y/9JPyz6DX/ACNsd/16j/6Ufml/wVa+HOufDX9v79pGw1q2kij8Va43xG0O6lUql" +
                        "zY6/Cmpo8ZIAZUaV4iR0ZGHUGv3X6PGd0cdwbgZQfwQ5Guzg+XX1sn6NM/BvpF5HWwHGePjUXxz9on3U" +
                        "1zaejbXqmj+jX/glz/wVG/Zo8Y/s/fBz4CfE3x/Y/Cb4ufC3Q9M+GcWn+OZU0/TNXtNGto9Ns57O/m22" +
                        "5d4Y4w0MjrJv3bVZfmr+IvpAfR/z7C5ziswwtGVfDVpyqXh70ouTcpKUV71k27NJq1rtPQ/uT6Pn0g8h" +
                        "xWS4XL8VWjQxNCEadpvljJRSjFxk/du0ldNp3vZNanNf8F7P2Y9R+M37O/gb9orwJbHXNS+A0l3deI00" +
                        "oCb7R4U1tIGmuwYtxdbWW3ikyOBG8jk4Fd/0P8Aj2GV53Wy3EPljibct9LVIXtHy5k2vOSiupwfTG4An" +
                        "muSUcyw65pYVtytrenO15efK0n5Rcn0P59/+Can7eOrfsI/HCfxTf6dN4j+FHxAht/DfxW8MaeUFy1tD" +
                        "MZLe+td+Abi0MjlEYhXV3QlSwdf7L8dfCGnxflKpRkoYmk3KnJ7Xa1i/wC7Kyu900nraz/i7wG8YanB+" +
                        "butKLnhqqUakVvZPSS/vRu7LZptaXuv7YPhT+2t+yd8avDVn4q+Hf7QPhbVrC7jW5l0+/1iz07U7Tf/A" +
                        "A3VjqDw3MDZ7SRrntkc1/lbxF4V8R5VXdLE4KrFrqouUX6SinF/Js/1c4c8V+G81w6rYbG0pRa2clGS/" +
                        "wAUZNSXzSPUP+F4/BT/AKLB4W/8KDSf/j9eB/qnmv8A0DVf/AJf5H0H+t2U/wDQVS/8Dj/meh6Xqul65" +
                        "p9pq2i6lb6xpV+nn2Op6XNHcW8yE43RyRFlYcdQa8XEYepSm4Ti4yW6as16pnt4fE060FOnJSi9mndP0" +
                        "aPgz/gqloV74i/4J7/tS6fYKXnt/Dq67IFBb9zpepWupzHA9I7djntX6/8AR7xkKHGmXyls6lvnKLivx" +
                        "Z+O/SIwc6/BWYxjuqd/lGUZP8Ez+N7/AIJg/FDwz8HP28/2cPH3jLXYfDPhmy1e80DVte1Ioltaprui3" +
                        "ugq8zyELHHuvAHkYgIuWJAGa/058fMgr5nwfjsPRg51HBSSW75JRnp3fu6Lq9D/AC8+j/xBh8r4xwOIr" +
                        "zUKam4uT2XPCUNX0Xvavoteh/YF/wAFbJYp/wDgnH+01PBKs0E2k6TLDNEwZHRvEWnEMpHBBHQ1/ml9H" +
                        "CLXHGAT35pf+kTP9NvpJyT4Gx7WqcI/+nIH8p3/AARd/wCUlv7Nn/c4/wDqA65X+hv0o/8AkhMd/wBwv" +
                        "/T1M/zq+iv/AMl7gP8AuL/6ZqH75f8ABWr/AIKofFf9ib4j/D74M/Bbwhot94m8SaDH8SfEXirx5BdXs" +
                        "EVldaleaZb29rb2lza4k32ErSO7MNpUBc5I/j36OX0e8u4rwNbG46rNU4T9nGMGk7qMZNttPS0lZK2t7" +
                        "vof2T9JL6RGZcJ46hgcDSg6k4e0lKabVnKUUkk463i7t30tZdT0P9hf/gsz+z/+0j4Z0vw98cvEej/AT" +
                        "44xH7FqWk69ctY+HNVfICzadfag5SPzCQPs88vmBuFMg+avE8W/ov5zkdeVTAQnisJumlecfKcYq7t/N" +
                        "FWtq1HY9vwh+lLkue4eNPH1IYXF7NSdoS84Sk7K/wDLJ3vonLc/Q74v/Az9lf8AaF8MHWPjL8PfCHxK8" +
                        "OLFm38X+IrfT5mt4mxHug1NSskIOQN0cq9ua/FuGuLeIclxHJgq9WjO/wAMXJXfnDZ/NM/beJuEeHc7w" +
                        "/PjqFKtC3xSUXZeU918mj+PH/gqV8BP+Cd/wR1vRLP9j34tXHiTx5d3rReMvhroWpR+JvDmk6eIZDvTV" +
                        "izyJcLKFQ27TTtgksYyoD/6ZfR+4w41zalOWc4ZQope7UcfZzlK6+xs4215lGK2tzX0/wAw/pC8G8EZT" +
                        "VhHJcS51nL36al7SnGNntPVqV7LlcpPe/LbX6W/4N0rvxQn7UPxusbRp/8AhCrnwC934gWMH7MdUh8Q6" +
                        "amnmQ/3/Klu9ntur4T6bVPDvh/CSdvaqvaPflcJ81vK6hf5H3v0H6mIXEGLjG/snQvLtzKcOW/nZzt8z" +
                        "4L/AOCuP/KRf9p7/sK6X/6jmnV+v/Ru/wCSIwH+GX/pyZ+O/SV/5LjMP8Uf/TcD+pT9lb41W37Of/BID" +
                        "4YfHG60V/Ea/DP4eSeJ4NAhlEH2y4inmWCFpSG2I8jKHfaSq5IBIwf8/vELhaWd+JeIwCnye2xHLzb2T" +
                        "Su7dbK9l1fVH+hPh3xXHI/DLD49w5/Y4fm5drtN2V+ibtd62XRn5W/sz/8ABwl4/uPilHp37V3gTQrT4" +
                        "T687Qf8JF8KdP1KLUNAdz8krwXV7dm7t16SKoEoGWXeR5bf0Hx59DDBxy/myitN4mP2ako8s/K6jHll2" +
                        "b93o7br+eOAfpq42WY8ub0YLDS+1TjLmh2bTlLmj3S97qr7P+kH4f8Axp/Zx/ac8KFvh/8AEHwt8ZPC+" +
                        "tRbb3RrK6sNS3Iy7jHdWM26SNgOWjmjDDuK/h7OeFs8yHEf7RRq4epF6Npx+cZLR+qdj+6Ml4qyLP8AD" +
                        "f7NXpYinJapNS+UovVejSZ+Tf7eX7Dn/BIfQfDfiDxR8WNT0T9mLxXHFLd2tz8I9St9P1SeVQSI7fw5C" +
                        "LiG4y33lhtA2P41HI/ovwg8WfEmtXhSwkZ4yndL95FyivN1XZx9XO3k9j+b/GLwj8M6NCdXGShgqlm17" +
                        "KSjJ+SpK6l6KF/Nbn8bF01tZa3ct4bvrmeztLp20HU54haXjxxzHyJWjhllEchADFVkbaeAxxmv9PKal" +
                        "KkvapJtardbaq7Suvkr9j/Lqo4wqv2TbSfuvZ76Oybs/Ru3c/00fh1J4gl+H3gSXxYsieKZdG0uTxKl4" +
                        "u2Yag1lEbgSDs3mbsj1r/BzO1RWNrKjb2fPLltty3drfI/3xyOVZ4Ki61/ackea+/NZXv8AM7KvMPUCg" +
                        "AoA+Y/2sP2T/hb+1/8AC2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxG" +
                        "ftQfsv/ABS/ZM+KWqfC74o6X5NzDuvfDfiSyVzp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6YyufTH/BPP/" +
                        "goZ41/Yu8ajSNXNz4r+A/iu5STxv4IjfdLZytiM6jpwkIVLhFA3pkLMoCsQQjo4ysTOFz+0P4d/ETwV8" +
                        "WPBXhz4i/DrxHbeK/Bniu2TVNC13S33RTRNkEEEBkdGBV0YBkYFWAYEVsczR5V+1d+zf4N/ay+AvxA+B" +
                        "fjb/RrDxfa50fXI0DzaVq1swnsr2IZUkwzKpZQRvTchOGNfbeHfHGK4czijj6GrpvVdJRekov1XXo7Pd" +
                        "HxHiNwLheJMmrZfX0VRaPrGS1jJej6dVdbM/wA7/wCNHwf8d/AL4peNvg98S9HfQ/GvgK+k0TWbJwdj7" +
                        "QHinhYgb4Z42WWJxwyMrDg1/tTwtxLg84y+ljcLLmpVY3T/ADT7NO6a6NNH+JPFXDGMybMauCxUeWrSl" +
                        "Zr8mu6as0+qaZ9i+Hf+Cnn7T/hX9j6f9jrQfEv9n+FpJpbC28dwyTDXbbw3PGRJosEwPyW7OT84+cITE" +
                        "CE4r8yxvgJkGI4mWdVKd6lr8mnI5rao11lbptf3nqfp+B8f+IMNww8lp1LU7tc+vOqb3pp9I367291aH" +
                        "wf4P8H+KfiB4p0DwT4J0C68U+LvFN1Donh7w9okLz3V5dTuESONEBJJJ/DqeK/XszzPD4LDzr15qFOCb" +
                        "lJuySW7bPx7LMsxGNxEKFCDnVm0oxSu23skj+3b/gl5/wAEvPC37Fnha3+JHxIt7XxT+0v4ptfL1jWI9" +
                        "k9r4YtZ0+fTtOfkGQg4uLgff+4n7vJf/KTx+8fsRxTiHhsM3DAQei2dRr7UvL+WPTd67f6y/R9+j7h+F" +
                        "MOsVikp4+a1e6pp/Yh5/wA0uuy03/X6v5qP6aCgAoA/MH/gsB8EPiX8fP2H/Hfg/wCE3hi48Z+L9H1LR" +
                        "/GcfhXR0Mt/e2um3Je4S1iX5pplRy6xLlnwVQMxCn99+jTxXgMn4so1sZUVOlKMocz2TktLvor6Xei3d" +
                        "ldn8/8A0m+EsfnPCVajg6bqVYyjPlWsmovXlXV21stXayu7I/Gz/gg9+yn+0B4L/aZ8a/GP4gfCrXPh3" +
                        "4D0PwpqHg+PVPHemXmkve6nqV/Yyxw20V/HE8oWO3keR1UquACQWFf079LzxDybFZDSwWHxEKtaVWMrQ" +
                        "kpWjFSTbabS1aST1ettmfy79D3w6zrCZ/VxuJw06VGNKUbzi43lKUWklJJvRNtrRaX3R89f8Fev2Mv2k" +
                        "7r9uv4nePfB3wb8SfEPwX8XW0nxB4P8QeA9F1HV4Xkj0ez064tpjp8MoimjuIHARiCUKsOvH2n0a/FDI" +
                        "o8I4fD1sVTpVaHNGUZzjF/FKSa5mrpprVdbrofE/SY8LM+lxfiMRQwtSrSr8soyhCUl8MYtPlTs1JPR7" +
                        "qz6n9RP/BPP4ReMvgR+xb+z38LPiFYjS/GvhrQzP4j0jIZ7K51K+uNVNtIVJHmQi5EcmCRuU4JHNfwD4" +
                        "08S4XN+Kcbi8M+alOfuvuopRuvJ2uvJn+gvgnwzisn4VwWExK5asIe8uzk3Kz81ez80fZtfl5+pn4p/8" +
                        "F0v2f8A4s/Hb9lXwdL8I/Bt74+1P4b+K7fxf4i8N+GYJbzU202TS7zT3mt7aBWkm8uSdN6oCwUlsbVYj" +
                        "+p/ok8ZZblHENVYyqqUa1JxjKTtHm5oys29FdJ2b0vpu0fyn9LzgzMs44dpPB0nVlRqqUoxV5cvLKN0l" +
                        "q7Nq6Wttdkz4S/4N/PhB8Wvhr8Yf2gr74i/C7xF4BstT8NaZaadeeNdE1PSoriVNULskb30MQdgOSASc" +
                        "V+u/TJ4ly3HZZgo4bEU6rVSTahOMre71s3Y/H/oYcMZlgM0xssTh6lJSpxSc4Sim+bpdK5+vP8AwUL/A" +
                        "OCbvwu/b18J6bPqWonwF8Y/BtvLZ+BPiZZQC4Agd/ONjfwbkM9qzksoDBomJZDhnR/5s8FvHLMOD8TJR" +
                        "j7XC1HedNu2u3NF9JW30tJKz2TX9MeNngVl/GOGi5S9liqatColfTflkusb7a3i3dbtP+Rb9oX/AIJY/" +
                        "tt/s6a3PY658F9S+Inh4yeRpvjn4O2114j0y5UnAdlsYjc2+Txi5hjOemcjP+kfBf0g+FM7pKVPFRpTt" +
                        "rCq1CS+98sv+3ZM/wA0+Nvo8cWZHVcamElWhfSdJOpF/cuaP/b0Uf1Mf8EZ/hJ8bfhx+w9D4L/aM8P3+" +
                        "lPrevazqPgrwL49iYXVh4UvbKzhS1ns7td8KSXKXUohkUHbJkgBsV/n39KDiTKsdxY6+WzjLlhFTnDZ1" +
                        "E5PmUlo2o8q5l1Xkf6F/Ra4azbA8JKhmcJR5qknCE91TaiuVxeqTlzvlfR7an5i/t2f8EF/FMev618Sv" +
                        "2KJLfV9C1SWXUr74F+IbyKzurCSRt5TSby8ZIZIOTtiuJEZAMB5M4H734R/S/w7owwueXjONkq0VdP/A" +
                        "BxWqfnFNPsuv4B4v/Q7xCrTxWRWlCTbdGTSa/wSejXlJpru+n4V+JP2Lv2vfCOqT6N4h/Zg8faff25Kl" +
                        "R4S1yaKQA7d0U0Fs8ciZHDIxB9a/rfA+KXDWJpqdPMKDT/6eQT+abuvRq5/IeO8K+JsNUcKmX101/06m" +
                        "18mlZrzTsYH/DK37T//AEbh49/8I/xD/wDIldn/ABELIP8AoOof+DYf/JHH/wAQ74g/6AK//gqf/wAif" +
                        "1S/8EC/g3+0b8JvhF8b5vjL4Z1rwN4D8Vato918LfB/ji3udPuUura3vE1W8js7xI5Y4rgSWqhyAHMZI" +
                        "6En/Pf6YnE+R5jmWEWCqQqVoRl7SUGpKzceSLkrptWm7dL6n+iH0NeF88y3LMW8dTnSoznF04zTi7pS5" +
                        "5KLs0pXgr9eXQ/d7xL4c0Pxj4c8QeEfE+mR614a8VWV34c8Q6PeAmG7sb6BrWeFwCDtkjdlPPQ1/IeAx" +
                        "1XC14VqUuWpBqUWt007pr0Z/YOPwNHFUJ0asVKnOLjJPZpqzT9Vofwt/tvf8Em/2kP2X/iRqUfgDwDrX" +
                        "xl+DOu3c8ngDxl4G0+51e8gtmYvHaapb6fE8kFzEmFMhQRS/eQ53In+tvhR9IvI8/wMXiK0MPiopc8Zy" +
                        "UU31lBydnF9r80dn0b/AMiPFn6OGe8P4+Sw1GeIwsm+ScIuTS6Rmoq6kl1tyy3T3S/br4O/swftVeI/+" +
                        "CJXjz4B+N9Dv5Pi94hsb7Ufht8O/FbPDqtlotprFrqVnpki3ZBildbWQwQuRsEiRnZghf5S4m4+4eoeK" +
                        "1HMKE4/VoSSqTjrFzcXGU1bdLmXM1vZtX3f9ZcL+H/EVfwnrZdXhL6zOLdOEtJKClGUYO+zfK+VPa6Tt" +
                        "svzK/4I1fseftK6F+3b8Pvif4y+DHiP4f8Agn4RW/iK88V654+0e/0aLztR8OahoMFtAdRih82Yy3isU" +
                        "TJVVJOBiv3n6T3iZkVbhGthaOKp1atdwUVCSk7RnGbb5W7K0d3u2kj8C+i54Y59R4woYuvhalKlQU3Jz" +
                        "jKCvKEoJLmSu7y2WyTbP6Kv+Cgv/BOr4Xft6eCNOttavj4H+LHg6OZPh/8AE2wgE7wJL872d7DuTz7R3" +
                        "w23cGRvmRhl1f8AifwZ8bMw4PxcnBe0w1S3PTbtf+9F9JJfJrRrZr+3/GnwPy/jHCRVR+yxNO/JUSva/" +
                        "wBmS6xb17p6p7p/yEftD/8ABK/9tv8AZy1PUI9e+DOo/EDwtZlmt/H/AMIYLjxDpc0Iz+9dbOL7Tbrxz" +
                        "9phj/Ign/Sjgr6QfCmeU4unio0qj+xVahJPtq+WX/bsmf5ncbfR44syOpJVMLKrTX26Sc4td9FzR/7ei" +
                        "j4f/wCFd/ED7V9h/wCEG1j7b5n2T7H/AGZe+b5u7Zs2eXndnjGM5r9Y/trB8vN7aFt78y/zPyT+xMbzc" +
                        "vsZ32tyu9/uPtL9n3/gl7+2z+0bqWnR+F/gnqngzwzfMpl8ffFa3uPD2kRQt/y2Vr6NZ7hO3+jRSnPbg" +
                        "4/LeM/H7hTJISdXFxqVF9im1OV+2jtF/wCJxP1Xgv6PvFmeVIqlhJU6b+3UThG3fVXkv8Kkf2Sf8E//A" +
                        "Ng74f8A7BvwluvBfh3UT4t8eeLpoda+JvxDubdLeTUrqGMxwwwxgsY7S3Dt5UbMxyzsTliB/mJ4yeL2N" +
                        "4vzJV6kfZ0aaapwvflT3bfWUtLuy2S6H+ongx4PYLg7LXQpS9pWqNOpO1uZrZJdIx1srvdvqfzJf8Fbf" +
                        "2NP2ntS/bv+Kfjbwp8EvEnj7wj8W59K1rwR4h8A6NqGs21xjSbPTpIJG0+KURTpNCymOTBIwwyrA1/ef" +
                        "0cPE/IKfCGHoVsXTpVKCkpxnKMWvelJNczV00915rdH8C/ST8LeIKnGGIr0cJUq0q7i4ShGUk/djFp8q" +
                        "dmmno/J7M/qR/ZB+Al54L/Yb+DX7PXxs8NWt/cxeDYvB3xJ8G6j5d1bFdRgkN3YzbCyPtWcxPtJUkHBI" +
                        "wa/z+8SuMI4ri3FZjgajS9s5U5LR+61yyXVbXXXuf6EeGXBssLwjhctx1NN+xUakHqveT5ovo97O2nY/" +
                        "nP/AG1P+CDHxe8B63rfjf8AZElX4qfDu6ke+g+GOq3UVt4m0lHYsYYJbtkhvoYx91jIk2MLskYFz/bfh" +
                        "Z9L7LcZShQzj9xXWntEr05ebSu4N9dHHreK0X8PeK30O8zwdadfJv39Bu/s20qkfJN2U0ujupdLSer/A" +
                        "A+8Z/AT45fDrU30Xx98HPFPgvVoyUOn+KNA1WxlOO6i5gTcO4IyCORX9YZXxhlOOp8+HxVKpHvGcX+TP" +
                        "5KzXg7N8DU5MRhatOXaUJL80anw/wD2af2hvitqMOlfDf4H+K/Gt7M/k48PaBqdxHGcgEyypD5cajIyz" +
                        "sAO5rnznjrJcug54nF0qa/vTivuV7v5HRkvAed5jNQwuEq1H/dhJ/e7WXzP6Kv+Cb3/AARD8X+DvHfhT" +
                        "47/ALYUVnp8nhG4t/Efg74H2E1vqLyX8DCWGbWJ4TJb+XE4DrbxM+848xgoaN/4n8cfpXYbFYSpl+TXf" +
                        "tE4yqtOOj0app2d2tOZpW6JuzX9v+Bf0TMThcZTzDOrL2bUo0U1L3lqnUavGyevKm79WldP+oCv4EP9A" +
                        "goAKACgAoA+Y/2sP2T/AIW/tf8Awtv/AIbfEmw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghW" +
                        "VNXKjKx/EZ+1B+y/wDFL9kz4pap8Lvijpfk3MO698N+JLJXOna1pxcrHd2kjAZU4wyn5kbKsARWLVjpj" +
                        "K59Tf8ABOX/AIKF+J/2MPHEmheJTdeJvgL4ymU+MPCkLl5NMuW2oNTsEbgSqoAljGBKgwfmVCrjKxM4X" +
                        "P7QPBHjfwl8SfCXh/x54D8QW3inwf4pto9X0DX9IkElvc28g4ZTwQQQVZWAZWBVgCCK2OZo/Iz/AIKlf" +
                        "8E7fDP7d/wxsfjP8EbrT7z47+CdPlbwprGkzwS2fi7SYDJL/Zb3MT+V5gcsbWYnarko5CsWT+mvo6eOs" +
                        "+F8Z9VxTbwNV6/9O5PTnS7fzJbpXWqs/wCYfpH+A0OKcH9awqSx1GOn/TyK15G+j/kb0TdnZO6/jI0/4" +
                        "Q/FPVPiTD8HLH4d6zN8Vp74eGl+HTaddJrK3+dpge0kRZEcdWDKMDk4HNf6k1uJcvp4F42VeH1dR5ufm" +
                        "XLbvzbP5H+VdHhnMamPWCjQn9ZcuXk5Xz83bl3T9dj+1X/gl5/wS88LfsWeFrf4kfEi3tfFP7S/im18";
                    resourceString += "vWNYj2T2vhi1nT59O05+QZCDi4uB9/7ifu8l/wDLHx+8fsRxTiHhsM3DAQei2dRr7UvL+WPTd67f6sfR9" +
                        "+j7h+FMOsVikp4+a1e6pp/Yh5/zS67LTf8AX6v5qP6aCgAoAKAPCf2mfjvpP7MnwO8ffHbX/DGo+MdC+" +
                        "HcFtqms6B4T+znUJLae+gsnkiF3JFGRCJvNfc4+RWxk4B+u4D4QqZ9m1HAU6kac6raUpX5bpN2dk3ray" +
                        "03aPj+PuMKWQZRWzCpTlUhSSbjG3NZtK6u0tL3euyZo+Efjn4H8XfADQP2kIJ5NO+HeueE4PjFJLehPP" +
                        "tNKk0oavIJVRiokijyHAOAwIzWGZcJYvDZzPLGr141XS02cublVvJvbyOjLOLsJicmhmabVCVJVdd1Hl" +
                        "5nfzS38zxb9iD9t34bft2fDTxL8SvhvoGqeFbXwprcvgjVtA8ZCzF6ssdlbXyTAWM86eVItztUlgdysM" +
                        "cc/VeK/hTjuEcfTwuJnGbnDnTje1rtW1Sd1bXyaPlPCXxZwHGGAqYrCwlBQm4OM7XvZO+jas76eaZs/B" +
                        "j9r7wT8dPj/APtFfATwX4Z1Q3X7NNxYaJ438c3n2MaTPqN95ii1tvKmeUuj286vvRcGM+orl4o8NcXlG" +
                        "TYLMK9SNsYm4QV+ZRVtXpazTi1Zvc6uFvE3CZvnWOy6hTlfBtKc3blcnfRa3umpJ3S2Z9a1+cH6SFABQ" +
                        "AUAFABQB8I/8FEf2x9S/Yb+AVn8aNK8BwfEW6uvEGneCT4f1C/k02NUvra7uDL5scFwcr9mxt28568V+" +
                        "u+CnhjT4tzh4GdZ0kqcp8yjzbOKta679z8f8bvFCpwjkyx0KKrN1Iw5XLl3Une9n27H3dX5EfsAUAFAH" +
                        "z1+1V+0X4X/AGTfgL48/aB8Z6Hf+JPDXgD+y/7S0XwwLc3039q6zaaJH5X2uSKP5ZLxWbLD5Qcc4Ffae" +
                        "HvBOI4jzijl1CcYVKvNZyvZcsZTd7JvaNttz4rxE44w/DeTVsxrwlOnS5bqNrvmnGCtdpbyT32Plb4h/" +
                        "wDBRjVvBtx4Ofwt+xJ8aPjFoPjXw3oPxJ0zxd8JvCMusaUsOvaemoJatc27lDPCsgWVVJAPc1+hZL4JU" +
                        "8Uqvtc1weHnTqTpuNSpyyvCTjez1s7aH51nfjjUwrpeyynGYiFSnCopUqXNG04qVrrS6vZ+Z4N8P/8Ag" +
                        "szpnxZ0J/FPwr/YS+OXxL8Mx3EmlSeI/h/4Tj1mwW6hVXkhNxp080YkUOpZd2QCMjkV9fnP0X6mXVvZY" +
                        "vN8FRqWvyzqcrs9naSTtpufH5L9KWnmVH2uEyfG1qd7c0KXOrrdXi2r6rQ/ZvT7pr6wsb5rWSya8hium" +
                        "srxdk0JkQPskXsy5wR61/L1anyTcb3s7XWz9D+paNTngpWaur2e69T4y/4J/wD7Wuo/trfs7ab8ctU8E" +
                        "Q/D67v9W1Tw2fDthfPqMarp0qxiTzpIYCS+7pt4r9R8ZPDiHCudywEKrqpRjLma5fi6Wu/zPy3wY8SZ8" +
                        "V5JHHzoqk3OUeVPm+Hrey39D7Zr8qP1cKACgAoAKACgAoAKACgAoAKACgAoAKACgAoA+Y/2sP2T/hb+1" +
                        "/8AC2/+G3xJsPJuYfMvvBnjOxjQ6joWolNq3FuzYypwBLETtkXg4IVlTVyoysfxGftQfsv/ABS/ZM+KW" +
                        "qfC74o6X5NzDuvfDfiSyVzp2tacXKx3dpIwGVOMMp+ZGyrAEVi1Y6YyuXfht+2B+0N8I/hB8QPgX4A+I" +
                        "13oPw5+JGP7c0mA5lt9/wAtx9imPz232lPkn8sjevBouDij7U/4Jmf8FC/i3+zV4o0z4JW3grUPjX8Nv" +
                        "H2pRQ6T8O9AYvrWn6lduI2k0kSZRvN+9JbuVRmG4NGS7M4ysTOFz+x2zhguDb6zNpP9n6rc20cMwu1tz" +
                        "dwxn975EkkDSKdjE5Cuy5yQT1rp9rLl5bu29ul+5xeyjzc1lzWtfrbsaNQaBQAUAFABQB5n8afhtp/xj" +
                        "+D/AMUvhLqpRdP+Jfh7WPAtzNMCRENV0+WyEnAJBQyBgRyCARzXvcLZ5PLMzw+Mh8VGpGf/AIDJO3ztY" +
                        "8DirIoZplmIwc/hrU5Q/wDAotX+V7n81ngX9ozxJpv/AAQz8V/CYNJH8XrLxTe/sRWeiXBC3b3mt60L1" +
                        "7NlJ5I0y7mhXH9zHYmv7pzfgihU8WqeM/5hnSWLb6WhC3N/4MipfP0P4QyjjivT8IqmD1+tKq8Il1vOd" +
                        "3H/AMFycfl5M+k/2LrDw9/wT5/bR/bN/Z21S6Fn8N7L4XeFP2hdAmYeWk8Hg/QIbLVp4y+MvLLPOzk8t" +
                        "5e49DXwvilWrcZ8LZXmUFeu8TUoy8nVm3BPySUUu17H3fhXRocFcVZrlk3agsNTrx81SglNrzbcm+9rn" +
                        "hv7Pn7Qni39jT/gmx4y/a5XTbK+/aH/AG8Pidqup+CT4nfy7WG81W7ureK5u/NZM29v9iu7pWYhWMqBi" +
                        "FavrOM+C8NxRx1SyfmawWWYaKny7tRSbUf70uaEdNVyuyuj5HgrjXE8LcB1c55YvHZniZOHNsnJtJy/u" +
                        "x5Zy10fMruzO3+NPxs/aK/ZD+G+i/tMaJ/wU48M/tXeKvDl7pMnxk/Z6nk8InS9VstSvYbSePRotJma4" +
                        "iMDzKN0aK2wNKdoUxnyuFuFck4lx08rqZBUwNOal7Kv+95ouKbTqOS5XdJ6NtXtHVtSPW4q4szzhnAwz" +
                        "SnxBTx1SDj7Wh+65ZKTSapqL5lZtapJ2vLRJxf9Efg7xTpfjnwh4V8a6G5k0Xxhptj4p0eSTG5rXULVL" +
                        "uInaSMlJB0NfxTmeX1MJialCp8dOTi/WLs/xR/buV5jTxeGp16fwVIqS9JK6/Bn4OfDfxl+35+11+1H+" +
                        "2/8B/Av7Tr/AAP+EXwP8aX9ifiBa+H9N1bWoILme5tdN0bT1kFqqwqLSWaeYyGUYRdwDc/17nmV8HcN8" +
                        "P5TmGIwH1nE4minyc8owbSTnUlvr7yUVbl3dtD+PMizTjPibiHN8vw+YfVsNhqzXOoRlNJtqFOO2nuty" +
                        "d+bZX1OX/Z2+IH/AAUk/aK+I3xx/Yb1n9pvTvh1f/su6rdW3xA/ab0TQLO/8U6/YXM5g0m0gtXeCCIOI" +
                        "ZJpbgETBdiMSwYv6HG2TcDZJgcJn0MBKqsbFcmHc3GnBpXnJvVu10lHWN7taWt5/BGdcd55jsXkE8wjR" +
                        "eCk+fEKClUmm7Qio6JXs25aStZPW9/rn/gnH+0B+0Be/GX9qr9jH9pnxvD8VfHv7NF7p1z4V+KsNpHZ3" +
                        "Ws6LqSuV+1R242B0QwOuS0n7xlZm2bj+beN/BuTQyvLs7yuk6FHGKXNTvdRnH+VvXV8y6L3U0lex+leB" +
                        "nGmdTzTMcjzWsq9bBuPLUtZzhL+ZLS6XK+r95pt2ufLH7V3if4//s7+H/HvjvVv+CxOiTftCeBba78Xa" +
                        "T+z5Po/g3TbG/hs42uBpX9lxzzTedNGuyGSWImR+MAncv6F4d4DJs7rUcPDhmf1Kq1F1uarJpvTn57JW" +
                        "T1aT0XpZ/nniNmGdZJRrYifFEPrtJOSoctKKklrycl27taJtavTrdcP/wAFPfjtdftNf8Ed/gF8dNR0y" +
                        "HRtX+IXiTw1qWvaZp3mfZotRt7PWLG7EImJYRGeBygYkhcAlup9bwD4RjkPibjMBGTlGlTqJN7uLdNxv" +
                        "brZq/n0R5H0gOMJZ/4YYLMJRUZValNtLZSSqKVr62unby6vc+xdL/aG+O37eX7Uk/g/9lP4hXXwu/Y6/" +
                        "Z+vpNK+Mnx48OW2nXF14z15ArtpOkSajFcp5KoV/fInCsZCSGgD/mOI4LyjhDh9Vs2oqtmeKjelRk5JU" +
                        "ofzzUWne/2W91y6Wm1+oYfjbOOMeIXQyiu6GV4WVqtaKi3Vn/JTck1a32ktnza3gnxXx0/an+I3x1/bK" +
                        "+JP7LfgP9qzRP2NPgx+z9Y2J+J/xR1CbQo/EPiLX9ShE66fpra9KixxQAkSPGAysjbiwdBXq8I+HuByj" +
                        "hihmuIy6eYYrFSfs6aU+SEIu3NPkWrfRPRpq1rM8ni/xEx2ccU18pw+Ywy/C4WK9pUbhzznJX5Yc70S6" +
                        "tapp3vdHXfsOftP/E6w/a1+J/7E/wATPj9pX7WHh7TPDUXxe+Dfx98N/wBkm7ksFuYLO50zUjosksLzR" +
                        "tPkMzb/AJCWJWRFTzfFngHAT4cw+eYXBywM3U9lVoy5rXs2pw50mk7bLTVW1Tb9Pwj8QMwhxJiMixWNh" +
                        "joRp+1pVo8t+W6ThPkbTavu9dG27SSXqP8AwWi/5RpftJ/9yd/6n2h18/8ARc/5LvA/9xf/AEzUPofpU" +
                        "f8AJBY//uF/6epn2Z+yt/ybB+zh/wBiF4P/APUetK/MPEL/AJH+O/6/1f8A0uR+peHf/JP4D/rxS/8AS" +
                        "In5c/8ABv8Af8mKat/2PviD/wBN2l1+/wD0yf8Akro/9eIf+lTP57+hh/ySEv8Ar/P/ANJgfuBX8oH9a" +
                        "n8rn/BLH4Kftt/HT9jVrL4RftSRfst/C/wtretweD4/Dfh+31fVvEetyPHczz311cTRtbWkRZIUSHJY7" +
                        "yykBc/6EfSD4q4UyjifmxmXvG4icIc3NNxjCGqSiknzSerbe2iT3t/nf9HjhTizN+F+XB5gsFh4Tny8s" +
                        "FKVSejbk21yxWiSW+ra2v8AqF/wTh/aZ+Pv7UH7O3xz8D/E7xBZaV+018C9b134KX/xCtrCCW0k1KG0Z" +
                        "LLUprWJIoJGiuN4kjRVVxGDtG81+A+OHAeT5BneEr4WDlgMTCFVQu78rfvQTd2rxtZttq++h/QXgZx9n" +
                        "PEGR4zD4qcY5hhpzpOdlbmS92bSsnaV7pJJ22Vz4B/am+O3xz/Y70S6+K3hr/grRoP7RPxj8D6jYf8AC" +
                        "f8A7Nerad4ShtdWtrnUIbS4trfT9InnktHh8zfIgCSCIM6uhUbv2Tw+4RyniaqsJV4cnhMLUjLkrqVRu" +
                        "LUW03KSSknayeq5rJp30/GPEPi/N+GKTxdLiSGLxVKUeeg40kpJySaUYtuLV7taPlu01bX6d/4KMftif" +
                        "tEeB7D/AIJ4+Kf2WdTGmax+0rqaLB4G1aO2ms9al1m00d9Msrx5ohIIxLfgOY2jYgnkcEfA+CPhlkmLn" +
                        "nVLNo80cHH41dOCi6nPKNna9o6XuvJn3/jj4n53hIZJVymXLLGS+B2am5KnyRldXteWtrPzRxX7Tegf8" +
                        "FMP2KPhuP2vW/bLj/aEh8E3Gn6p8bPgjrXhbTtL0B9OvLqK1lTTmtS0gihkmVS6rDJszJkYKH1eA8ZwJ" +
                        "xVjv7G/sv6q6ikqVVVJSnzJNrnvpdpXs3JX93szyuPsFx7wpgP7Z/tVYtU3F1aLpxjDlbSfJbWybtdKL" +
                        "t73Sx0/7b/7ZH7RFr4w/wCCZ+v/ALH+vrbxftiWOty2fgjxZDbPpN1Jqmm6E+lT6gwgedFsW1hpphG4y" +
                        "I8Eda8/wo8Mcklhs+p5zC7wEoXnFvmXLKpzqOtnz8lldPe56Hi14o53HFZBUyWdlmEZ2hJLlfNGnyOWl" +
                        "1ye0cpWa2scX+06/wDwUa/4J5eF9F/av1D9rlv2qvh5o+paXYfHj4WeLPDOm6LZx2mo3SWYl09rMzGCM" +
                        "zSrErRmNkdkLLIpZB6vAS4I41xE8ojlv1KvKMnRqRqSm7xV7Sva7sm2ndNJpOLszyuP3xzwTh4ZxLM/r" +
                        "1CMoqtTlTjBWk7Xja9ldpK1mm02pK6PZf2uv22/F3in41fAH9l39n/42aH+zlYfF3wpB8e/iJ+0f8QBp" +
                        "Tf2R4Xv0k+xWunxatKlu15ceWSQxyNyFWA3sPl/Dbwpw2HyrGZrmOEni5UKrowoQ5veqK3M5OK5uWN/w" +
                        "d09EfU+JfixicRmuCynLsXDCRxFJVp158vu03flUVJ8vNK34qzWrPP/AITftKfE39nb9tX4I/s9a7+2J" +
                        "pv7bXwK/aVttT0vQ/Egl0C68Q+E/EenQ+cqTy6DLKXguC0ar5pAIdioHlMX9niPgXAZ3wri8xp5ZLLsX" +
                        "g3FuPvqFSEnbRTSs46vTsrt8yt4vDfHmPyTivCZbUzSOZYPGKSUvcc6c4q+rg3dS0Wvd2S5Xfj/AIZfE" +
                        "T9vz9rX9rP9uH9nbwH+0rH8GvhD8FfGVxFffEKDQtN1TxDp1jcXV7Z6do2mJIIEWOX7HLJJOzeYvlgBv" +
                        "mKt6efZJwdw5w5lOZYjAfWMTiKKtDnlGEmlFzqT3d1zJKK91320uvMyDPOM+JOJM3y3D4/6vhsNWd58k" +
                        "ZTim5KFOC0VnytuT95WWutn9GfsAfHH9pfQ/wBpv9pb9hb9qLx2vxj8TfBKx0zx14C+Ly2Vvp8+oaJfr" +
                        "bsFuY4B8zMt9AylmZkYSIzuApHxHjJwnkVXIcBn2VUfq9PEylCdK7kozV9m/wDDJdE1ytJan3Hgxxdn1" +
                        "HP8fkGbVvrFTDRjOFWyi5Qdt0t/ii+rT5k29D9g6/mg/pwKACgAoAKACgAoA+Y/2sP2T/hb+1/8Lb/4b" +
                        "fEmw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/FZ8dP2NPjv8Bvjvb/ALPuv+D7n" +
                        "X/GWv3KWnw8m8NQS3Fv4lt7iXyoJ7AgZYMeHU/NG2Q+CDWLR0qSaP6lv+Cbf/BNvw1+yB4ag+IPxBgtv" +
                        "Ev7RHiW28vVdVj2z23hy2nX5rCwbkFyDiecff8Aur8mS+kY2MJzufqzVmYUAFABQAUAFABQB/MPpX7J3" +
                        "xdT/grrq3wxfwNqo/ZeX4mR/tuHxYNOvV0MaxD4fl1WNEuCn2ct/aF0Lcx5yApwMV/e+I8RctfhtHFe2" +
                        "j/aH1b6py8y5+VzUXpfm+Bc1/M/gHD+HGZrxLlhfYy/s/6z9b5uV8nMoOS1+H45ctt9D03/AILbfBv41" +
                        "3PxJ+B/xg+AHgjV/GniLx54V8X/ALMfxEtvCWnXl+66Nq8WLZZ/scb7I2OpXR3PhQwHXJx4P0VOJ8qjg" +
                        "cXg8xqwpwpVaWIhzSS96L1tdq79yGi1se99LHhbNZY/CY3LqM6k6tKrh58sXL3ZLS9k7L356vS6R9F/8" +
                        "FBP2EvGHiv9gj4FfCX4HeG7Xx14v/ZPuvC3iPRfA12kbxeJbXQtKk0m9t/Km2JK84l89lYgybWUZZwD8" +
                        "T4M+LuGw/GGLxmPqOlSxyqRc1vTc5KUXdbJW5U1tdPZH3HjT4P4rE8G4PB4CmqtXAunJQe1RQi4yVna7" +
                        "d+Zp72a3Z8y+D/jP/wTE8QWui6Fq/8AwS38SaX8Xro22n6/8JdK+EKX9/ZX0v7uRVcLD5kKSK4DlVcqp" +
                        "Plg5UfeZnwtx9RlOpDiCnLDK7VR4mya6d7Nq2l2rv4up8FlfFXh/XjCnPh6pHFOylSWF5pJ9e10nfWyb" +
                        "S+FPQ/oo0bR9K8PaRpWgaFp0Oj6HodtBo+jaTpsaw29raW0SwQwxRoAqoiKFVQMADFfxPisTUr1ZVKkn" +
                        "Kcm229W29W2+7Z/b2FwtOhSjTpxUYRSSS0SS0SS7JbH5Qf8E6/BXjLwv+1J/wAFQtY8S+EtT8O6T4u+J" +
                        "VtqvhTVNdsLq0t9UtRLqxM1pJcIizxjevzRkjkc81/RXjZmuFxHD/D8KVSM5U8O1JJpuLtDSST0fkz+c" +
                        "fA/KsVh+IeIJ1aUoRqYhOLcWlJXnrFtarzRzP7C3gXxv4e/4KNf8FOPFHiDwdquh+GfFupeHZfCviLWN" +
                        "Pu7ax1NImvd7WlxPGscwXcMlGOM13eLeb4SvwRkFKnVjKpTjPmipJuPw/Ek7r5nB4Q5Pi6HHGf1alKUa" +
                        "dSUOWTi0pfF8Las/keZ/DX4dfHS1/b6/wCCtfiPwH4X1Xw74g8aeBrfTvgn421OxuLTTbvxCPD0EVk1t" +
                        "eXKRwSGO5C7tr4GDnGK97Pc7yiXB3DlLEVIzhTrN1YJpyUOd814q7V436Hg5Dkebx4y4kq4enKE6lBKl" +
                        "NpqLnyLltJ2TtK3XQ/P/wCBWsfCTwx+xN8T/wBm63/YY8Y+Nv8AgoN4w0fxp4P8cazrvgU3WqWuo61Hq" +
                        "FtHqs2taonmWsFtbSgqi7WMqEAEuZT+ycXYbMsRxVh8zeb0qeS050pQSrWi4x5W4KnHSTlJbu65X5cp+" +
                        "L8IYrLcPwniMrWUVqmdVIVYzbo3kpT5kpupLWKjF7Kz5ltrzP0r9oH4RfFjVf8AghZ+y58PdL+GHiLUv" +
                        "H2j+JbW51bwPYaLqU2sWsaaj4iLNNZxwmZFAkXJZB94eorw+DeJcup+LeYYmeIpqjKm7Tc4qL92ltK9n" +
                        "s+vQ97jThnMqnhDl+Ghh6jrRqK8FCTkveq7xtdbrp1Pqbxl8FfGX/BLP9qXwl8av2Y/hzrfjH9jj45/Y" +
                        "vAPx7+Cnw/s9R1u88OX9nAUt9XtLeETzuAoaUEhsnzYmZfNiK/nuWcVYXxB4fqYHNK8KeZ4a86NWbjBT" +
                        "TesJN2S1sun2ZJPllf9DzThTFeHnENLHZVQnUyvE2hWpQUpuEktJxSu3pd9ftRbXNG3kXxs+EvgL9mz9" +
                        "uX42/Hb9o/9kq6/al/ZS/ahg0rxh4a+I+i+F4vE154O1mK3CzQz20qq0EUpkctnaXQRFd7o6j6XhXiPG" +
                        "Z7wlhMBlmZLBZjgnKMoOp7NVY30aa3asrb2fNeyaZ8zxXw3g8h4uxeYZnlrxuXY1RlGoqftHSklqmnsn" +
                        "d32uuW12mj9B/2F9e/Yn8ffEHxXr/7L/wCyFqXwav8Aw7pMUcnxZ1jwAPCtjqNvqEyNJZWl23zSOPLR5" +
                        "EIXIwRuAyPxjxbwfFWDwVOnmuZRxCnL+Gq3tHFxWkpR6btJ69nY/a/CLGcKY3G1KmVZZLDuEf4jo+zUl" +
                        "J6xjLq9E2tO6udF/wAFe/Cvijxt/wAE7v2hfDHgzw3f+LvEup/8In/Zvh7wxZ3F/fXHk+OdGuJPKgtEk" +
                        "kfZHGzthThQSeAa4vo15jh8JxrgqtepGnTXtLyk1FK9GolduyV27ep2/SYy7EYvgjG0qFOVSpL2doxTk" +
                        "3atTbslduyTfofXP7M2n3+k/s3/ALPularZTaZqemeCPCmn6lpuoRvDPbzw6DaxyRyRyAMjowIZSAQRg" +
                        "1+bceVoVM8xs4NOLrVGmtU05uzT6pn6VwDRnTyLBQmnGUaNNNPRpqEbpro0fmv/AMELvAvjf4efsVapo" +
                        "Pj/AMHar4H11/G+u6gmi+MNPu9MuzBJp+mqkghvY432MUIDYwcH0r90+ltm+ExvFUamHqxqQ9jBXjJSV" +
                        "+ael02rn4R9EPJ8XguFJU8RSlSn7abtKLi7csNbNJ2P2Wr+YD+pD8jv+CJXgrxl4B/YW0Hw9478Jan4K" +
                        "1+PxL4iu5ND8W2F1pt4sUtxGUcw3kcbhWA4OMGv6Q+lXmuFxnF06mHqRqQ9nBXi1JbPqm0fzV9E/KsVg" +
                        "uEIU8RSlTn7SbtKLi7XXRpM+DvhB8I/2mIP2XP+CxWhfDXwVr/hr4mePPH+s6h8P4bjTtQsbzWdJk1aV" +
                        "78aZ5iRvO1xYGaOExZ3MygZJFfr/EvEmQviDhipiqsJ0KVCKn70Woy5Vy8+9uWfK3fZJ3Px7hnhrP1w/" +
                        "wAUU8LSqQxFWvNw92Sc48z5uTa/NDmStu2rHzb441f4IeOP+CcU/wCzd+y5+wv4tuP2iYdE8PR/Gjxq3" +
                        "gNo7/Rr7RtT0/VtXnudYmia5uZLqa12QwRnJjkACoEEdfc5Ths2wnHCzPNc3pLBc8/ZQ9tpJSjKMEoJ8" +
                        "sVFO7k+q3d+Y+EzbE5Ti+BnlmU5RVeOUIe1n7H3oOEoym3Ua5pOTVoxXR7JLlPov/golf8AjfwR4B/4I" +
                        "m6n4V8Gz+I/iR4Q1Hwtf+HPh9eBrO5v9b0+y8LyW+nOLgKYnlnjWI7wNpPPSvifBSjhMXjOKo1aqhQqR" +
                        "qKU1qlCTrXkrbpJ303PuPG6ti8Jg+E50aTnXpypuMHo3OKo2g77NyVtdj1v9r39uXxF+2z8Fdd/ZB/Ze" +
                        "/Zv+IrfGn4xNY+FPHNr8SvDM2iWXhCwF7FPeHUbiaR442/d+UXbCKGLbtwVT834a+EtDhXNYZzmuOw/1" +
                        "XD3lD2dRTdV2ajypK73vbd2ta12vpfEzxdr8WZVPJcpwGI+t4i0Z+0puCpK6cudt2W1r7K7d72T4f8A4" +
                        "KC+G/F37Kvj3/gi94S+FnhWf4s+K/gJH4g0HS/CmkBYrvxH/YGm+FYLyOAMDie6ihlKAKTvYYUnAPreD" +
                        "OOw3EOD4prYuoqFPFODcntDnlWcW/KLav5LVrc8nxpwGJ4dxnCtHCU3XqYXnSit6nJGipJecknbzeiex" +
                        "v8A7Z/7XXiH/got8J4f2Lv2VfgD47bxf8V9U0OD4r+IPil4buND03wfp2m6nb6w326d2lVJFntoy5zt2" +
                        "Bghd2VTx+F3htR4JzF53m2MoeyoRn7ONOanKrKUXH3VpdWbt1vZuyTZ2eKfiXX44y1ZHlGCr+1ryh7SV" +
                        "Sm4RpRjJS9562d0r9LXSu2kR/tq/snWf7Pv7SH7Pn7Sur/s3S/tcfsy+FvAWmfs+fGPwLp+jx65q+mHQ" +
                        "raS2s9Zjs5CQf3SxDe3yrsdHdPMRg/CzxFlnWR43LIY5YHHzryrUpuXJGXO05U3L1vpu7ppPlaJ8VfDi" +
                        "OS57gs0ngHj8BChGhVgo88o8iajUUfS2uys02uZM+jP2TfGP/BOn4p/G3wbZfs7/sPan4T8XaXHd+J7P" +
                        "4t3nwzTQ9L0CaxikG2XUX5indgY49qkFsruzgH4jxGyzjbL8qqyzLNozpStF01X55TTttHqlu+ttbH3P" +
                        "hvmnA+Y5tSjluUSp1Y3kqrw/JGDV959G3oul9Lln/gnB4F8b+Fv21f+Cr+veJ/B2q+HNC8ZeN9A1Dwhr" +
                        "Wvafd2dpqsEeoeJ2eSzmuI0SdFEyEtGSBuX1FR44ZvhMRwrw7TpVYznTozUkpJuL5aOkkndPR79mX4F5" +
                        "Pi8PxXxHUq0pQhUrQcW4tKS5q2sW1ZrVbX3R0vwe8FeMrH/AILG/tbeOb3wlqdn4K1r4a+GtK0bxhdWF" +
                        "1Hpd3dRLou+GG7dBDJIvltuVWJGDkcGuHibNcLPwxy2hGpF1Y4io3G65kn7TVxvdLVa2O/hjKsVDxQzL" +
                        "ESpSVKWHppScXytr2d0pWs3o9Ez6T/Ya/bA1/8AbG8EePvGGv8AwF1v4CzeCvENx4HttH8ZTSXDX6QQR" +
                        "ymZXls7IrIhfZLEFYI2BvbPHwviz4aUeGMXRo08ZDFKpTU7xVrXbVvilo907q66I+88I/E2txRhK1apg" +
                        "54V06jhaTveyTv8MdVs1Z2fVn29X5QfrIUAFABQAUAFABQBkXnh/QdR1XRtd1DRLS+1zw79o/4R/Wby2" +
                        "hlu7D7ZGIZ/s8zqXi81AFfYRuHByKANegAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKA" +
                        "CgAoAKACgAoAKACgD89f20v2QPG/wC0v8Xv2JfiJ4U8TaVoOmfsxePbT4r+LbHxCbsT6hZ2+qaVfNDaf" +
                        "ZoZV80rYOB5hUZI564/aPC3xLwmQ5ZmuGrU5SljKDpxcbWi3GavK7WnvLa7PxTxV8MsXn2Z5TiaNSMY4" +
                        "KuqklK95JSg7Rsnr7r3stj9Cq/Fz9rPg39qD9lHxl8c/wBpj9iD43eHvEemaRoH7L2seJfEfi7SdZN0L" +
                        "zUItai0uOJbPyIpE3IbFt3mMo5GM81+v8A+ImFynIc2wNSEpTxsKcYtWtHkc7812nrzK1kz8d8QPDnFZ" +
                        "vn+UY+nUjGGCnUlJO95KahblsmtOV3u0feVfkB+xBQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUA" +
                        "FABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAH" +
                        "//ZC0AAAQAAAP////8BAAAAAAAAAAwCAAAAUVN5c3RlbS5EcmF3aW5nLCBWZXJzaW9uPTIuMC4wLjAsI" +
                        "EN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQUBAAAAFVN5c3Rlb" +
                        "S5EcmF3aW5nLkJpdG1hcAEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABawQAAAv/Y/+AAEEpGSUYAAQEBA" +
                        "JYAlgAA/+4ADkFkb2JlAGQAAAAAAf/hEZZFeGlmAABNTQAqAAAACAAHARIAAwAAAAEAAQAAARoABQAAA" +
                        "AEAAABiARsABQAAAAEAAABqASgAAwAAAAEAAgAAATEAAgAAABwAAAByATIAAgAAABQAAACOh2kABAAAA" +
                        "AEAAACiAAAAwgCWAAAAAQAAAJYAAAABAABBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MAMjAxMTowM" +
                        "ToxOCAwOTo1MTowNgAAAqACAAQAAAABAAABYqADAAQAAAABAAAAgQAAAAAAAAAGAQMAAwAAAAEABgAAA" +
                        "RoABQAAAAEAAAEQARsABQAAAAEAAAEYASgAAwAAAAEAAgAAAgEABAAAAAEAAAEgAgIABAAAAAEAABBuA" +
                        "AAAAAAAAEgAAAABAAAASAAAAAH/2P/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgIC" +
                        "AkIDAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD" +
                        "AENCwsNDg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD" +
                        "AwMDAwM/8AAEQgAOgCgAwEiAAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYHC" +
                        "AkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMBAAIRAwQhEjEFQ" +
                        "VFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKjdDYX0lXiZfKzhMPTd" +
                        "ePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cRAAICAQIEBAMEBQYHBwYFN" +
                        "QEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M08SUGFqKygwcmNcLSRJNUoxdkR" +
                        "VU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vYnN0dXZ3eHl6e3x//aAAwDAQACE" +
                        "QMRAD8A9VSSSSUpYGFkfWd31kyKsqoN6S3f6btrQ3aI9B1VgPqvts/wzH/+B/o1d+sPVj0jpN2axrX2t" +
                        "2tpY6YL3kMbu2/mtn1HIf1Y6rl9W6QzMy6212Oe9oLJDXBrtnqNa4vcz9z6af7Uvb939Di4P8JZ7sfc9" +
                        "v8ASri/wXWSSSTF6kkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklP//Q9VWf1rrWJ0fE9e/32PltF" +
                        "DT7rHfut/dY3/CWf4NN1vreJ0bE9e/32PltFDT7rHeA/dY3/CWf4Ncb0zpnUfrX1F+fnvLcVp22WNkCA" +
                        "f6Hh/usb/hbf/R/82lK+sfU8rN+q/Trspwddl5Ntzg0Q1orN1VdTP5DGOZ9JF6sOpdL6J9X+odPBZViU" +
                        "7rbRqA+8VPjIr/0NrvUb/X/ANHZ6Stf4wcGqjpXTxjsFVGPaaWVtEABzHFv/npdD0B1OX9XcEECyp+LX" +
                        "W9jgC0wwVWsc0/S+i5i0I5Bj5bBPh4gJz44nY8XFH/oNGWM5OZzRvhJhDhkNxXq/wCmw+r31hxet4u9n" +
                        "6PJrgZGOTq0/vN/fqf+Y9ay87670LO+rGa3q3SHOGIHaHVxqLj/ADF/+lxbPose7/i7P0vpW2dd9XvrD" +
                        "jdbxd7B6eTVAyKCZLSfzm/v1P8AzHqHmOXiI+9hPFhl/jY5fuyZcGeRkcWUcOWP+Lkj+/FL13rmJ0PB+" +
                        "25bXvrLxWG17Zkgu/wjq2fRY785XqrWXVMurMssaHtPk4bmrB+vHUcvpvSK8jDc1l/rta2xzGvLZZaS6" +
                        "sWh7Gv9uz6P0Fk9T6z9ZX9XwundNyhW/KxarA1zK9peW2WWuL31P2+2tNx8rPJESEoxB4vmP+b+a12Tm" +
                        "YQkYkSlIcOkR+/8r26yuu/WDF6HXRZlV2WMveWTWGnbA3Fzg9zP+iubyOsfXToThb1djcvDs9rnsDBtJ" +
                        "/0dtLGenb+569PpPWX9aH9XuxcfKysxud0u9xfg2bWMsgt3fpmU117bGN/RWfy/9GpsPJXkjxyhLHLrC" +
                        "Xz/ANWP9Zizc5WORjGQnHpKPy/1pf1X01JcrV1P6w9Cw8rN+sdteSz2MxKa9oe607vbvrrqayvb9Pf6n" +
                        "0P+3KOPb/jC6pj/ALQx7a8ep4300Qxm5vb0m3V3P2u/M+02s/zFEOUkbPuYxAHh9wy9Epdosh5kChwTM" +
                        "yOLgA9cY95PcLlfqh9Yc/qGN1LL6lYHsxiHtaxgaGM2vse1u33v+j+ej/Vf6y5PUbremdTq9DqOMJIAL" +
                        "Q9rSGvlhnZazc3d+Y/+cqWL9RbDX0jrVga15YzcGvEtMV2Ha9v5zE+OAxxZ4zA4x7XDLf55bxl/WWSzi" +
                        "WTAYk8BGTiH9yP6Uf6r1nQut4nXMH7biNexgea3Ns27g5sH/BusZ9Fzfz1oriOn/W3qGN9VH9RySMrLd" +
                        "lHGolrWMH6NtjfUZQKvYxrbP5f5iWOz/GFm4reoU5lQa8bq6QapIPG0Cmyn/ty9N+5zF8c4QAlwcUjpK" +
                        "X9Vd97ga4YzmSOOojWMfF6/PzacDCvzb59LHY6x4aJMNG72zCH0nqdHVun09Qxw5tV0w10SC1zqntOwv" +
                        "Z9Nn7ywq+r9dt+rfU7eqYYx8rDY4V2WM9lhA/nPQs3sd6bvz/6PZ/g1Us+t2fhfVbBynxkdRznXNFr2g" +
                        "NArse11jq6vTa52z02MZ/1xNHKZCaHCfX7ehvXh9zi/u8K481jAs2PT7mo6cXB/jcT2iS4puP8A4xnUN" +
                        "zGZdVhcARQ00kkH/rP2b/2YXQ/V3P6ln9O9bqeKcTJa9zC0tczeBEWiqz31/S2f2E3Jy5hHiE4TANHgl" +
                        "qE48/GeEwnCxY4xoX//0ez+tf1ZPVWjNxDGfSzYGOPtsrBL/R93tqs3O/RWf2Lv9JTmfVP6z+gWdH6l+" +
                        "iDD6WPa4bC1wOz7Jkt9uyxrvZXZ/wBbt/S/zvarm/rV9VWdUY7Mw2tbntbD2GA29oEenZPtbc1v81b/A" +
                        "Nat/R/zKU3vrR0x3U+iZOPW3de0C2gcnfWd4a3/AIxu6r/rixP8XnV2W4tnSbHfpKSbscHvW8zY0f8AF" +
                        "XO/8GUfqp9aHse3pHVXODg70se6yQ4OB2fZMnd7vV3eyp7/APirP0n87n/WHoNwzn9V+rpdkVPsey5uI" +
                        "6X03615DW+md+y3c71P9H/xKuctKGTHLl5nh4jx45H9GbU5mM8eSOeA4uEcGSI/Sh/6C3Prd9azc5/Re" +
                        "kzY6w+jkWsG4uLvYcXHaPpvf9Cx/wD1uv3/AM3qfVD6rno9TsvLM5+Q0NcwGW1Mnd6II+nZu/nbP+2v9" +
                        "JbD6p/VJnSWNzc1rX9Qc2GtEFtLSP5uv9613+Ft/wCtVfo/57pkM+aEYexg+T9OfXLL/vU4cMpT9/N8/" +
                        "wChDpij/wB88p/jI/5Bq/8ADLf/AD3cs8f+LTo3/hSr/wA9ZC6X6y4XTs7Bqxuoi30bMipjH06Ftjz6N" +
                        "TnH/RudZ6X0f8IqLmfV49TPVGC05PSH19PFTDLS5+2ijax3us2uynU79/5ln+jT8OUDCI1ImssdBpeXh" +
                        "jBZlxE5jKxvjl4/q/VJ0vrHWyzoHUW2NDgMa1wB8WtNjHf2Xt3LgM9trvqV0x/LGZN7PgXG1zB+D16Tc" +
                        "3Ez6MnDL22Me11OQ1jhubvG1zXbf5t+1yoYvS+iYHSn9IssZdiNDn2tyHsJ2ucSX2fQ2tbb9B/76Zy+c" +
                        "YogEEyGQT4f6vDKBX8xh9yRIIAMDC/63FxOJ9dr8fqvQKs3p1zcmnHua+7YZ2te19e61n069r3s9j2rP" +
                        "6Z0nE6hiMvb9Y7aXbQLKLH7XVkCPT2uvb7W/mO+gun6b9X+g9IybvQPv6g3YKLbA8Fg3ONdVb/dYz3e7" +
                        "f6qy2fVD6r9SsstqF2JtutxxS17Q0vpc5lhpZZ63s9m7+p/g1Njz44wMIynGETxRycEZaT/AEZRl/0mL" +
                        "JhnKfGRGUpDhlDjlH5f0oyim6H9U68XqdfV2dUOeWb2uMB24lvpe671LPoLH+pb2N6R1ykuAt9Iu9M87" +
                        "Qyxhd/n+1dZ9XukdL6Vi219NsN1dlhdY8vD/cAK9v6MNY3ZtWKKugnqVfVKunZllnVaXmljNgrs9av1s" +
                        "l7Weux9d3ou/SbnMZ/o/wBL+kTY5jP3YyMp6Q4ZcMYfzR9zhlH0/wBZMsIgMUogQ+fijcpj9cODi4vU5" +
                        "nQ7+jU/Uy39sVutxrM0sY2sEv8AULK3MdU4FuxzGte7dv8A/Sam36t41NTs/wCr3Xm01kAn1LPTj879P" +
                        "dSWbf8Ai7sVdDjdM6F0zG/5v2ML8bJY/IsfkOaWmH00w9/s2277afR9Nn+D/wBKqNv1B+rTsr0/Xurtf" +
                        "LmY4tYTtH7nq12X7P7aeOYhxTPFOAnIz+UZMc4f3P0Vp5eXDAcMJmMRH5vbyQl/fc/E691Dqf1f63iZz" +
                        "m3vxKCW5LAAHB29sO2Btbv5v9E9rP0lafHu6A36m9Mp6015ZdbcKX1Al9bhbdvvDm/m1td7/wCc3/6Gx" +
                        "dLR0boNPT7+kY4Yyq+sm8NfNha4bPXe8l1nb2v+glR0Tojuljou1uVjYx9zHu3Pa5xNvqOeza+q13qOd" +
                        "7PTUZ5jFrwxnCPuDJUPQRHg4OIfu+teMGTS5RnL2zj9XqHFx8df4ryzvq99gqOd0Hr9VeOTP6S0Vt/65" +
                        "ZUXUWu/4zGW79S+u5vWMK77aA63GeG+s0bQ8OG73NHs9Rn5+z+QqQ+on1Xc37U3KtNGrtwtrLIbO/8AS" +
                        "+nu2s2+79Kul6dg4GBito6fW2rH+k3YZ3bv8IXkudZu/fc5LmM2OWMxs5J3pOUBjlCuhl+knl8OSOQHT" +
                        "HCtYRmZxnfYfov/0vVUkkklPOfWn6rN6mx2bhNDeoNb7maBt7QP5t8+1tzf8Dd/1q39H/Mz+qf1cf0il" +
                        "2RkuP2zJaBZU1x9Oto+jXtafTtub+ff/wBbp/R/zvQJJKUkkkkpp9YxLMzpt9FX88W76JMD1ayLsf3f8" +
                        "fXWsejoGcMzBusLNprN2fwYymm++k1t/PZ9p6lkW/8AoNSukSVjF7vtnhrhuV334f5f4bBl9rjHFfFQ2" +
                        "7cTz31b6Pk4NlZyqrGW4+P9mNm6g0v9zX7qvs9dWVZucz1Wvzf0rPWu/PsssTV/V6cnDttxaXbMzNvyX" +
                        "ENJLLnZDsYu0/SfTxvb/g/+tLoklJL3uOe10eLh4v3cm3/P/wANZH2uCN3w2K4q/eg8e/oXWvsGNhir3" +
                        "U00tre11UMfVe+9zbb7GnK2V0tx/sTcX8/1fWRn9A6sXZ23Y4Z4zaq3Pdrji59l1NtG0fzWbLWZv+H9T" +
                        "0P8HV6bOqSUh9/X+b+aV1+8sHs6fP8ALHf91x+gYFmM6+62m3HstbUwssOPt/RBwHpN6eyqvazf6XqWt" +
                        "9V9bKv9Gg4fSs6pn1fFjAD06pzMr3A7SaPQ9v7/AOkW8koD7nFP5dtauq9qfy/9TZRwcEL4qsVdcV+7D" +
                        "5v8Nyuo9K+29RZbbTXfjsxL6gLAHAWWOp2+x371bLPeslvR+tOfgNuqBOKcFxta6qIpDG5fr2uY7Nuyt" +
                        "3rsr9Oz7L9nf/pPUrt6tJOxe7wiuGq9PHff9FGT2+I3xXevDTxnR8N1uDi5FeGyurGszb7c6WbrGuGVj" +
                        "+g1rf0znPfYx13q/odmNX/Oez0lh9FzM3pWP9lxa8EDpgoNoc0faDace/Z+ja9/oenRb6j8lu/1Mt/6C" +
                        "2v1fV7NJTH3eI0I8XFprP8Aeyfven99ij7fCLMuHh10j+7D931f9285i9De+zHtux7Nv237RkVZRocIb" +
                        "i241d1dWE1uN/PPpZ/pf0XqrQ6RRlYTG4Rxm14wdk2Nsa9u1gdkPfi47aR+a7Gt3/8ABen6S00lXze5R" +
                        "4+Hh0quLh/T4eFnxcGnDxXrvw3+jxW//9n/7RjQUGhvdG9zaG9wIDMuMAA4QklNBCUAAAAAABAAAAAAA" +
                        "AAAAAAAAAAAAAAAOEJJTQQ6AAAAAACTAAAAEAAAAAEAAAAAAAtwcmludE91dHB1dAAAAAUAAAAAQ2xyU" +
                        "2VudW0AAAAAQ2xyUwAAAABSR0JDAAAAAEludGVlbnVtAAAAAEludGUAAAAAQ2xybQAAAABNcEJsYm9vb" +
                        "AEAAAAPcHJpbnRTaXh0ZWVuQml0Ym9vbAAAAAALcHJpbnRlck5hbWVURVhUAAAAAQAAADhCSU0EOwAAA" +
                        "AABsgAAABAAAAABAAAAAAAScHJpbnRPdXRwdXRPcHRpb25zAAAAEgAAAABDcHRuYm9vbAAAAAAAQ2xic" +
                        "mJvb2wAAAAAAFJnc01ib29sAAAAAABDcm5DYm9vbAAAAAAAQ250Q2Jvb2wAAAAAAExibHNib29sAAAAA" +
                        "ABOZ3R2Ym9vbAAAAAAARW1sRGJvb2wAAAAAAEludHJib29sAAAAAABCY2tnT2JqYwAAAAEAAAAAAABSR" +
                        "0JDAAAAAwAAAABSZCAgZG91YkBv4AAAAAAAAAAAAEdybiBkb3ViQG/gAAAAAAAAAAAAQmwgIGRvdWJAb" +
                        "+AAAAAAAAAAAABCcmRUVW50RiNSbHQAAAAAAAAAAAAAAABCbGQgVW50RiNSbHQAAAAAAAAAAAAAAABSc" +
                        "2x0VW50RiNQeGxAYsAAAAAAAAAAAAp2ZWN0b3JEYXRhYm9vbAEAAAAAUGdQc2VudW0AAAAAUGdQcwAAA" +
                        "ABQZ1BDAAAAAExlZnRVbnRGI1JsdAAAAAAAAAAAAAAAAFRvcCBVbnRGI1JsdAAAAAAAAAAAAAAAAFNjb" +
                        "CBVbnRGI1ByY0BZAAAAAAAAOEJJTQPtAAAAAAAQAJYAAAABAAIAlgAAAAEAAjhCSU0EJgAAAAAADgAAA" +
                        "AAAAAAAAAA/gAAAOEJJTQQNAAAAAAAEAAAAeDhCSU0EGQAAAAAABAAAAB44QklNA/MAAAAAAAkAAAAAA" +
                        "AAAAAEAOEJJTScQAAAAAAAKAAEAAAAAAAAAAjhCSU0D9QAAAAAASAAvZmYAAQBsZmYABgAAAAAAAQAvZ" +
                        "mYAAQChmZoABgAAAAAAAQAyAAAAAQBaAAAABgAAAAAAAQA1AAAAAQAtAAAABgAAAAAAAThCSU0D+AAAA" +
                        "AAAcAAA/////////////////////////////wPoAAAAAP////////////////////////////8D6AAAA" +
                        "AD/////////////////////////////A+gAAAAA/////////////////////////////wPoAAA4QklNB" +
                        "AAAAAAAAAIAAThCSU0EAgAAAAAABAAAAAA4QklNBDAAAAAAAAIBAThCSU0ELQAAAAAABgABAAAAAzhCS" +
                        "U0ECAAAAAAAEAAAAAEAAAJAAAACQAAAAAA4QklNBB4AAAAAAAQAAAAAOEJJTQQaAAAAAANJAAAABgAAA" +
                        "AAAAAAAAAAAgQAAAWIAAAAKAFUAbgB0AGkAdABsAGUAZAAtADEAAAABAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AEAAAAAAAAAAAAAAWIAAACBAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAEAA" +
                        "AAAAABudWxsAAAAAgAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBsb25nAAAAA" +
                        "AAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAACBAAAAAFJnaHRsb25nAAABYgAAAAZzbGljZXNWb" +
                        "ExzAAAAAU9iamMAAAABAAAAAAAFc2xpY2UAAAASAAAAB3NsaWNlSURsb25nAAAAAAAAAAdncm91cElEb" +
                        "G9uZwAAAAAAAAAGb3JpZ2luZW51bQAAAAxFU2xpY2VPcmlnaW4AAAANYXV0b0dlbmVyYXRlZAAAAABUe" +
                        "XBlZW51bQAAAApFU2xpY2VUeXBlAAAAAEltZyAAAAAGYm91bmRzT2JqYwAAAAEAAAAAAABSY3QxAAAAB" +
                        "AAAAABUb3AgbG9uZwAAAAAAAAAATGVmdGxvbmcAAAAAAAAAAEJ0b21sb25nAAAAgQAAAABSZ2h0bG9uZ" +
                        "wAAAWIAAAADdXJsVEVYVAAAAAEAAAAAAABudWxsVEVYVAAAAAEAAAAAAABNc2dlVEVYVAAAAAEAAAAAA" +
                        "AZhbHRUYWdURVhUAAAAAQAAAAAADmNlbGxUZXh0SXNIVE1MYm9vbAEAAAAIY2VsbFRleHRURVhUAAAAA" +
                        "QAAAAAACWhvcnpBbGlnbmVudW0AAAAPRVNsaWNlSG9yekFsaWduAAAAB2RlZmF1bHQAAAAJdmVydEFsa" +
                        "WduZW51bQAAAA9FU2xpY2VWZXJ0QWxpZ24AAAAHZGVmYXVsdAAAAAtiZ0NvbG9yVHlwZWVudW0AAAARR" +
                        "VNsaWNlQkdDb2xvclR5cGUAAAAATm9uZQAAAAl0b3BPdXRzZXRsb25nAAAAAAAAAApsZWZ0T3V0c2V0b" +
                        "G9uZwAAAAAAAAAMYm90dG9tT3V0c2V0bG9uZwAAAAAAAAALcmlnaHRPdXRzZXRsb25nAAAAAAA4QklNB" +
                        "CgAAAAAAAwAAAACP/AAAAAAAAA4QklNBBQAAAAAAAQAAAAEOEJJTQQMAAAAABCKAAAAAQAAAKAAAAA6A" +
                        "AAB4AAAbMAAABBuABgAAf/Y/+0ADEFkb2JlX0NNAAH/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMC" +
                        "QkMEQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LC" +
                        "w0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD" +
                        "Az/wAARCAA6AKADASIAAhEBAxEB/90ABAAK/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLA" +
                        "QABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETI" +
                        "nGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ" +
                        "5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACE" +
                        "QMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RFVTZ0Z" +
                        "eLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAP" +
                        "wD1VJJJJSlgYWR9Z3fWTIqyqg3pLd/pu2tDdoj0HVWA+q+2z/DMf/4H+jV36w9WPSOk3ZrGtfa3a2ljp" +
                        "gveQxu7b+a2fUch/VjquX1bpDMzLrbXY572gskNcGu2eo1ri9zP3Ppp/tS9v3f0OLg/wlnux9z2/wBKu" +
                        "L/BdZJJJMXqSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//9D1VZ/WutYnR8T17/fY+W0UNPusd" +
                        "+6391jf8JZ/g03W+t4nRsT17/fY+W0UNPusd4D91jf8JZ/g1xvTOmdR+tfUX5+e8txWnbZY2QIB/oeH+" +
                        "6xv+Ft/9H/zaUr6x9Tys36r9OuynB12Xk23ODRDWis3VV1M/kMY5n0kXqw6l0von1f6h08FlWJTuttGo" +
                        "D7xU+Miv/Q2u9Rv9f8A0dnpK1/jBwaqOldPGOwVUY9ppZW0QAHMcW/+el0PQHU5f1dwQQLKn4tdb2OAL" +
                        "TDBVaxzT9L6LmLQjkGPlsE+HiAnPjidjxcUf+g0ZYzk5nNG+EmEOGQ3Fer/AKbD6vfWHF63i72fo8muB" +
                        "kY5OrT+839+p/5j1rLzvrvQs76sZrerdIc4YgdodXGouP8AMX/6XFs+ix7v+Ls/S+lbZ131e+sON1vF3" +
                        "sHp5NUDIoJktJ/Ob+/U/wDMeoeY5eIj72E8WGX+Njl+7JlwZ5GRxZRw5Y/4uSP78UvXeuYnQ8H7blte+" +
                        "svFYbXtmSC7/COrZ9FjvzleqtZdUy6syyxoe0+ThuasH68dRy+m9IryMNzWX+u1rbHMa8tllpLqxaHsa" +
                        "/27Po/QWT1PrP1lf1fC6d03KFb8rFqsDXMr2l5bZZa4vfU/b7a03Hys8kRISjEHi+Y/5v5rXZOZhCRiR" +
                        "KUhw6RH7/yvbrK679YMXoddFmVXZYy95ZNYadsDcXOD3M/6K5vI6x9dOhOFvV2Ny8Oz2uewMG0n/R20s" +
                        "Z6dv7nr0+k9Zf1of1e7Fx8rKzG53S73F+DZtYyyC3d+mZTXXtsY39FZ/L/0amw8leSPHKEscusJfP8A1" +
                        "Y/1mLNzlY5GMZCceko/L/Wl/VfTUlytXU/rD0LDys36x215LPYzEpr2h7rTu9u+uuprK9v09/qfQ/7co" +
                        "49v+MLqmP8AtDHtrx6njfTRDGbm9vSbdXc/a78z7Taz/MUQ5SRs+5jEAeH3DL0Sl2iyHmQKHBMzI4uAD" +
                        "1xj3k9wuV+qH1hz+oY3UsvqVgezGIe1rGBoYza+x7W7fe/6P56P9V/rLk9Rut6Z1Or0Oo4wkgAtD2tIa" +
                        "+WGdlrNzd35j/5ypYv1FsNfSOtWBrXljNwa8S0xXYdr2/nMT44DHFnjMDjHtcMt/nlvGX9ZZLOJZMBiT" +
                        "wEZOIf3I/pR/qvWdC63idcwftuI17GB5rc2zbuDmwf8G6xn0XN/PWiuI6f9beoY31Uf1HJIyst2UcaiW" +
                        "tYwfo22N9RlAq9jGts/l/mJY7P8YWbit6hTmVBrxurpBqkg8bQKbKf+3L037nMXxzhACXBxSOkpf1V33" +
                        "uBrhjOZI46iNYx8Xr8/NpwMK/Nvn0sdjrHhokw0bvbMIfSep0dW6fT1DHDm1XTDXRILXOqe07C9n02fv" +
                        "LCr6v1236t9Tt6phjHysNjhXZYz2WED+c9Czex3pu/P/o9n+DVSz63Z+F9VsHKfGR1HOdc0WvaA0Cux7" +
                        "XWOrq9NrnbPTYxn/XE0cpkJocJ9ft6G9eH3OL+7wrjzWMCzY9PuajpxcH+NxPaJLim4/wDjGdQ3MZl1W" +
                        "FwBFDTSSQf+s/Zv/ZhdD9Xc/qWf071up4pxMlr3MLS1zN4ERaKrPfX9LZ/YTcnLmEeIThMA0eCWoTjz8" +
                        "Z4TCcLFjjGhf//R7P61/Vk9VaM3EMZ9LNgY4+2ysEv9H3e2qzc79FZ/Yu/0lOZ9U/rP6BZ0fqX6IMPpY" +
                        "9rhsLXA7PsmS327LGu9ldn/AFu39L/O9qub+tX1VZ1RjszDa1ue1sPYYDb2gR6dk+1tzW/zVv8A1q39H" +
                        "/MpTe+tHTHdT6Jk49bd17QLaByd9Z3hrf8AjG7qv+uLE/xedXZbi2dJsd+kpJuxwe9bzNjR/wAVc7/wZ" +
                        "R+qn1oex7ekdVc4ODvSx7rJDg4HZ9kyd3u9Xd7Knv8A+Ks/Sfzuf9Yeg3DOf1X6ul2RU+x7Lm4jpfTfr" +
                        "XkNb6Z37LdzvU/0f/Eq5y0oZMcuXmeHiPHjkf0ZtTmYzx5I54Di4RwZIj9KH/oLc+t31rNzn9F6TNjrD" +
                        "6ORawbi4u9hxcdo+m9/0LH/APW6/f8Azep9UPquej1Oy8szn5DQ1zAZbUyd3ogj6dm7+ds/7a/0lsPqn" +
                        "9UmdJY3NzWtf1BzYa0QW0tI/m6/3rXf4W3/AK1V+j/numQz5oRh7GD5P059csv+9ThwylP383z/AKEOm" +
                        "KP/AHzyn+Mj/kGr/wAMt/8APdyzx/4tOjf+FKv/AD1kLpfrLhdOzsGrG6iLfRsyKmMfToW2PPo1Ocf9G" +
                        "51npfR/wiouZ9Xj1M9UYLTk9IfX08VMMtLn7aKNrHe6za7KdTv3/mWf6NPw5QMIjUiayx0Gl5eGMFmXE" +
                        "TmMrG+OXj+r9UnS+sdbLOgdRbY0OAxrXAHxa02Md/Ze3cuAz22u+pXTH8sZk3s+BcbXMH4PXpNzcTPoy" +
                        "cMvbYx7XU5DWOG5u8bXNdt/m37XKhi9L6JgdKf0iyxl2I0Ofa3Iewna5xJfZ9Da1tv0H/vpnL5xiiAQT" +
                        "IZBPh/q8MoFfzGH3JEggAwML/rcXE4n12vx+q9AqzenXNyace5r7thna17X17rWfTr2vez2Pas/pnScT" +
                        "qGIy9v1jtpdtAsosftdWQI9Pa69vtb+Y76C6fpv1f6D0jJu9A+/qDdgotsDwWDc411Vv91jPd7t/qrLZ" +
                        "9UPqv1Kyy2oXYm263HFLXtDS+lzmWGllnrez2bv6n+DU2PPjjAwjKcYRPFHJwRlpP8ARlGX/SYsmGcp8" +
                        "ZEZSkOGUOOUfl/SjKKbof1Trxep19XZ1Q55Zva4wHbiW+l7rvUs+gsf6lvY3pHXKS4C30i70zztDLGF3" +
                        "+f7V1n1e6R0vpWLbX02w3V2WF1jy8P9wAr2/ow1jdm1Yoq6CepV9Uq6dmWWdVpeaWM2Cuz1q/WyXtZ67" +
                        "H13ei79Jucxn+j/AEv6RNjmM/djIynpDhlwxh/NH3OGUfT/AFkywiAxSiBD5+KNymP1w4OLi9TmdDv6N" +
                        "T9TLf2xW63GszSxjawS/wBQsrcx1TgW7HMa17t2/wD9Jqbfq3jU1Oz/AKvdebTWQCfUs9OPzv091JZt/" +
                        "wCLuxV0ON0zoXTMb/m/Ywvxslj8ix+Q5paYfTTD3+zbbvtp9H02f4P/AEqo2/UH6tOyvT9e6u18uZji1" +
                        "hO0fuerXZfs/tp45iHFM8U4CcjP5Rkxzh/c/RWnl5cMBwwmYxEfm9vJCX99z8Tr3UOp/V/reJnObe/Eo" +
                        "JbksAAcHb2w7YG1u/m/0T2s/SVp8e7oDfqb0ynrTXll1twpfUCX1uFt2+8Ob+bW13v/AJzf/obF0tHRu" +
                        "g09Pv6RjhjKr6ybw182Frhs9d7yXWdva/6CVHROiO6WOi7W5WNjH3Me7c9rnE2+o57Nr6rXeo53s9NRn" +
                        "mMWvDGcI+4MlQ9BEeDg4h+7614wZNLlGcvbOP1eocXHx1/ivLO+r32Co53Qev1V45M/pLRW3/rllRdRa" +
                        "7/jMZbv1L67m9YwrvtoDrcZ4b6zRtDw4bvc0ez1Gfn7P5CpD6ifVdzftTcq00au3C2sshs7/wBL6e7az" +
                        "b7v0q6Xp2DgYGK2jp9basf6Tdhndu/wheS51m799zkuYzY5YzGzknek5QGOUK6GX6SeXw5I5AdMcK1hG" +
                        "ZnGd9h+i//S9VSSSSU859afqs3qbHZuE0N6g1vuZoG3tA/m3z7W3N/wN3/Wrf0f8zP6p/Vx/SKXZGS4/" +
                        "bMloFlTXH062j6Ne1p9O25v59//AFun9H/O9AkkpSSSSSmn1jEszOm30VfzxbvokwPVrIux/d/x9dax6" +
                        "OgZwzMG6ws2ms3Z/BjKab76TW389n2nqWRb/wCg1K6RJWMXu+2eGuG5Xffh/l/hsGX2uMcV8VDbtxPPf" +
                        "Vvo+Tg2VnKqsZbj4/2Y2bqDS/3Nfuq+z11ZVm5zPVa/N/Ss9a78+yyxNX9XpycO23FpdszM2/JcQ0ksu" +
                        "dkOxi7T9J9PG9v+D/60uiSUkve457XR4uHi/dybf8//AA1kfa4I3fDYrir96Dx7+hda+wY2GKvdTTS2t" +
                        "7XVQx9V773NtvsacrZXS3H+xNxfz/V9ZGf0DqxdnbdjhnjNqrc92uOLn2XU20bR/NZstZm/4f1PQ/wdX" +
                        "ps6pJSH39f5v5pXX7ywezp8/wAsd/3XH6BgWYzr7rabcey1tTCyw4+39EHAek3p7Kq9rN/pepa31X1sq" +
                        "/0aDh9KzqmfV8WMAPTqnMyvcDtJo9D2/v8A6RbySgPucU/l21q6r2p/L/1NlHBwQviqxV1xX7sPm/w3K" +
                        "6j0r7b1FlttNd+OzEvqAsAcBZY6nb7HfvVss96yW9H605+A26oE4pwXG1rqoikMbl+va5js27K3euyv0" +
                        "7Psv2d/+k9Su3q0k7F7vCK4ar08d9/0UZPb4jfFd68NPGdHw3W4OLkV4bK6sazNvtzpZusa4ZWP6DWt/" +
                        "TOc99jHXer+h2Y1f857PSWH0XMzelY/2XFrwQOmCg2hzR9oNpx79n6Nr3+h6dFvqPyW7/Uy3/oLa/V9X" +
                        "s0lMfd4jQjxcWms/wB7J+96f32KPt8Isy4eHXSP7sP3fV/3bzmL0N77Me27Hs2/bftGRVlGhwhuLbjV3" +
                        "V1YTW4388+ln+l/ReqtDpFGVhMbhHGbXjB2TY2xr27WB2Q9+LjtpH5rsa3f/wAF6fpLTSVfN7lHj4eHS" +
                        "q4uH9Ph4WfFwacPFeu/Df6PFb//2ThCSU0EIQAAAAAAVQAAAAEBAAAADwBBAGQAbwBiAGUAIABQAGgAb" +
                        "wB0AG8AcwBoAG8AcAAAABMAQQBkAG8AYgBlACAAUABoAG8AdABvAHMAaABvAHAAIABDAFMANQAAAAEAO" +
                        "EJJTQQGAAAAAAAHAAcAAAABAQD/4Q3QaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZ" +
                        "XQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4b" +
                        "Wxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4wLWMwNjAgNjEuM" +
                        "TM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPg0KCTxyZGY6UkRGIHhtbG5zOnJkZj0ia" +
                        "HR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+DQoJCTxyZGY6RGVzY3Jpc" +
                        "HRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIge" +
                        "G1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0RXZ0PSJod" +
                        "HRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiIHhtbG5zOmRjPSJod" +
                        "HRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuY" +
                        "WRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDU" +
                        "zUgV2luZG93cyIgeG1wOkNyZWF0ZURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcDpNZ" +
                        "XRhZGF0YURhdGU9IjIwMTEtMDEtMThUMDk6NTE6MDYtMDY6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDExL" +
                        "TAxLTE4VDA5OjUxOjA2LTA2OjAwIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjM0NEMwOUFCMUEyM" +
                        "0UwMTE4MjAxQjJBMDJFNDdDMTk4IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjMzNEMwOUFCMUEyM" +
                        "0UwMTE4MjAxQjJBMDJFNDdDMTk4IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MzM0Q" +
                        "zA5QUIxQTIzRTAxMTgyMDFCMkEwMkU0N0MxOTgiIGRjOmZvcm1hdD0iaW1hZ2UvanBlZyIgcGhvdG9za" +
                        "G9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xIj4NC" +
                        "gkJCTx4bXBNTTpIaXN0b3J5Pg0KCQkJCTxyZGY6U2VxPg0KCQkJCQk8cmRmOmxpIHN0RXZ0OmFjdGlvb" +
                        "j0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDozMzRDMDlBQjFBMjNFMDExODIwMUIyQ" +
                        "TAyRTQ3QzE5OCIgc3RFdnQ6d2hlbj0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgc3RFdnQ6c29md" +
                        "HdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIi8+DQoJCQkJCTxyZGY6bGkgc3RFd" +
                        "nQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDozNDRDMDlBQjFBMjNFMDExO" +
                        "DIwMUIyQTAyRTQ3QzE5OCIgc3RFdnQ6d2hlbj0iMjAxMS0wMS0xOFQwOTo1MTowNi0wNjowMCIgc3RFd" +
                        "nQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiBzdEV2dDpjaGFuZ2VkP" +
                        "SIvIi8+DQoJCQkJPC9yZGY6U2VxPg0KCQkJPC94bXBNTTpIaXN0b3J5Pg0KCQk8L3JkZjpEZXNjcmlwd" +
                        "Glvbj4NCgk8L3JkZjpSREY+DQo8L3g6eG1wbWV0YT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "AogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg";
                    resourceString += "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgI" +
                        "CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P" +
                        "3hwYWNrZXQgZW5kPSd3Jz8+/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB" +
                        "84AAgAJAAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAEAAPbWAAEAAAAA0y1IUCAgA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAzZ" +
                        "GVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwAAAAUY" +
                        "lhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAAA9QAAAAkb" +
                        "HVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RSQwAABDwAAAgMY" +
                        "lRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1QYWNrYXJkIENvbXBhb" +
                        "nkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yL" +
                        "jEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAA" +
                        "ADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAA" +
                        "ABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNjAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZ" +
                        "WMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" +
                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQ" +
                        "iBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb" +
                        "2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZ" +
                        "SBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld" +
                        "2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3A" +
                        "AAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAA" +
                        "AAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPA" +
                        "BQAGQAeACMAKAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkA" +
                        "KkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMA" +
                        "VIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4A" +
                        "kECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oDZgNyA" +
                        "34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATTBOEE8AT+B" +
                        "Q0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowGnQavBsAG0QbjB" +
                        "vUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiqCL4I0gjnCPsJEAklC" +
                        "ToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsLIgs5C1ELaQuAC5gLsAvIC" +
                        "+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3eDfgOEw4uDkkOZA5/DpsOtg7SD" +
                        "u4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURExExEU8RbRGMEaoRyRHoEgcSJhJFE" +
                        "mQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmF" +
                        "kkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3G" +
                        "p4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H" +
                        "2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8J" +
                        "Ksk2iUJJTglaCWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1K" +
                        "mgqmyrPKwIrNitpK50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsM" +
                        "KQw2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN" +
                        "2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gP" +
                        "qA+4D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiR" +
                        "mdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uT" +
                        "rdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV" +
                        "5JX4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2CqY" +
                        "PxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFqSGqfa" +
                        "vdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQUdHB0zHUod" +
                        "YV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+wn8jf4R/5YBHg" +
                        "KiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZif6KZIrKizCLlov8j" +
                        "GOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSVX5XJljSWn5cKl3WX4JhMm" +
                        "LiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFHobaiJqKWowajdqPmpFakx6U4p" +
                        "ammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuLa6hrxavi7AAsHWw6rFgsdayS7LCs" +
                        "zizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsuu6e8IbybvRW9j74KvoS+/796v/XAcMDsw" +
                        "WfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40" +
                        "DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p3" +
                        "6/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A7" +
                        "8zwWPDl8XLx//KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///" +
                        "9sAQwABAQEBAQEBAQEBAgEBAQICAQEBAQICAgICAgICAwIDAwMDAgMDBAQEBAQDBQUFBQUFBwcHBwcIC" +
                        "AgICAgICAgI/9sAQwEBAQECAgIEAwMEBwUEBQcICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC" +
                        "AgICAgICAgICAgICAgICAgI/8AAEQgAgQFiAwERAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABA" +
                        "gMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVU" +
                        "tHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g" +
                        "4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6" +
                        "Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHB" +
                        "QQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1N" +
                        "jc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp" +
                        "6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRA" +
                        "D8A/v4oAKACgAoAKACgBrukaPJI4jjjBeSRyAqqBkkk9AKAPxW8Zf8ABdD9lbwv8SbvwbpfhLxN4y8I6" +
                        "ZdPpV/8SfD8OnfY5SjlDPZ29xcxyzQZ5DtsJGSqkYzHOjRUmfsH4J8aeF/iP4Q8NePfBOsReIPCXi+yt" +
                        "/EPh3WrIny7i0uoxLG4DAMpweVYAqcggEEVZm0dRQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFAGD4q0GHxV4Y8R+F7i5ezt/E" +
                        "lheaDPd2uPNiS8t3t2dN3G5Q+RnvQB/ET4z/wCCXH7b3hT4k3vw5svgZqvi/ZdGx0jxp4ZWKXQb2BpCs" +
                        "VwL6R0hgR1G4rOyMmcOFNY8rOpVEf2CfshfBXVP2dv2afg98GNd1OPV9d8DaSllr19ZktAb65nkvrhIW" +
                        "ZULRRyzskbFQSoBIB4rVI55O7PpCmSFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQ" +
                        "AUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQB/nr/APBRD" +
                        "9rHxn+1T+1H8T/Ft14vvdU+HfhzW77QPhBohuJRY2GjafcG0tpreAMUjkuFiE0rjksx5wBj/aDwV8OsL" +
                        "w9w/h6KpKNecFKq7auUldpvdqN+VLZJH+KXjd4j4riLiHEVnVcqEJuNJX0jCLsmlsnK3M3vdn9T/wDwQ" +
                        "4+LnxT+L37Ef2z4qa9eeKLvwR4s1b4f+Dtf8QSzXF5Podpp2m3kKyTzszyiGa7mhQk/KiKg4Wv8+fpZc" +
                        "N5flvFfLhIKCqUozko2SU3KadktFdRTfdtvqf6HfRI4lzHM+E+bFzc3TqyhCUrtuCjBq7ers5NLskl0P" +
                        "2Jr+ZT+nwoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAo" +
                        "AKACgAoAKACgAoAKACgAoAgurq2sra4vb24S0s7RHuru7unWOKKKNS7O7OQFVQCSScAUAfLH7XXxs0/4" +
                        "Y/sbfHL44eGtYhuYdO8Fajr/gjXbKVWgnu9SsDBpcscinDLJNcRFSOoPFfe+FvDyzbiPBYRq8Z1Y83+F" +
                        "O8v/JUz4DxV4ieU8N47Fp2lTpS5f8TVo/8AkzR/nK1/uCf4Yn92/wAD9Vs/+CfH/BJDwj47fRobjWfh7" +
                        "4AX4nXWjahvjS68SeJj/asdtcuuHx9t1FIGIOQowvAFf5F8WYeXGfiRVw/M1GrX9nddKdP3W10+GLkvP" +
                        "c/1/wCEsRDgrw1pYjkTnSoe0s+tSp7yT6/HNRflsfT37FX7avwm/be+E1p8Rfh1djTdf00Raf8AET4d6" +
                        "hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui/A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003+geFPitlv" +
                        "FuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAF" +
                        "ABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d" +
                        "2cgKqgEkk4AoA/lI/4Kc/8ABTrUv2gNV1D9mv8AZv1d4fhK1wND8X+NNPk8mXxbcmQRfZoHJXbpwbgkk" +
                        "eeeT+7+/lKRvCFtWfpJ/wAFrtVh+Gf/AATV8QeBtLmMFlr+peD/AIa2wwdz29jexamFztbGV0wZ5GRxk" +
                        "5wf6c+iTlixHGlGbX8KFSX/AJLyf+3f1ufy79LvNHh+Cq0E7e1nTj/5Nz/+2/1sfxafDjwlL4++IfgPw" +
                        "LCzrN411nS/CUTQY3htSvorMFcgjOZOOK/1TzzMlg8FWxD2pwlL/wABTf6H+UOR5a8bjaOHW9ScY/8Ag" +
                        "TS/U/tB/wCC7etaj4U/4J76l4e0DT7g6P4n8T+F/CGtDTY5XgtdOtpJtVjacoGCRefYQoGYgb2QZyQD/" +
                        "lz9EXCwxHGkalSS5oU6klfdydou3d2lJ6dE3sf6ofS/xdTDcFSp04vlnVpxdtlFXkr9leMVr1aW9j+RH" +
                        "9mH9p74s/sj/FnQ/i/8INcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD/Sbj7gHLuJMun" +
                        "g8ZC8HqmvijLpKL6Nfc1o7ptH+aPh/4gZlw1mUMbgp2mtGn8M49YyXVP707NNNJn95/7FX7avwm/be+E" +
                        "1p8Rfh1djTdf00Raf8AET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8K6ui/5A+KfhZmPCmYvDYlXg7uE0" +
                        "vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12aaX2HX5mfpwUAFABQBynjjxz4P+G" +
                        "nhPXPHfj7xHaeEvB/hqH+0Nd8Ra5KsFtbRbhGCzN3ZmCqo5ZiAASQKASPI/gN+1f+zz+05Brk3wM+KFl" +
                        "49fw2yJrthbw3tje2yyMyJI9rqcFtN5bFSFkCbTjg0k7jcWj6HpiCgAoAKACgD4G8R/8FQv2EPB/wAVd" +
                        "c+Cviz9oG08NfEbw1qk3gzX9J17RvEtpaWmo28xgkjl1GfTlslVXGDIZ9nfdiv2LA+APF+Jy6GOo4Jzo" +
                        "TipxalTbcWrpqKnz7dOW/kfjWO+kFwfhcxnga2NUK8JOEk4VElJOzTm4cm/Xmt5n3rFLFPFFPBKs0Eyr" +
                        "LDNEwZHRhkMpHBBHQ1+Pyi07Pc/Y4yTV1qmSVJQUAFABQAUAfFP/BRj4q+Mvgn+xJ+0T8Svh9qj6H4z0" +
                        "DQ1tdA1u2JWaym1K/t9KNxCw+7LEtyXjbswB7V+qeCPD2FzXivBYXEx5qUp3kujUU5Wfk7WfkflPjjxF" +
                        "isp4Tx2Kw0uWrGFovqnKSjdeavdeZ/IT/wSt+IXj7xZ/wAFHv2cLrxT441jxLc6rq2qS6pceINTvbyS5" +
                        "b/hHNQOZWuZHLngctmv9KPpCZNg8NwPjlSpQgoxjblilb347WWh/md9HfOsZieOsC61ac3Kcr80m7/u5" +
                        "b3ep/dxret6N4a0bVfEXiLVbbQtA0K2m1jW9b1iaO2tLO0tozNLNNLMVRI0RSzMxAAGTX+QZ/sOfPHwR" +
                        "/bL/Zj/AGjtf1vwr8Fvi9p3jjxJ4eja81PRLeK+s7nyEdY2mhTUYLczxKzKGki3KCRk8ikmmU4tH03TJ" +
                        "CgAoAKACgD5d+M37an7Lf7PfizSPA3xi+MumeC/FutJHc2mhXEd7dzxQy52SXP9nwTi2jbadrzlFPY0m" +
                        "0Uotn0vp+oWGrWFlqulXsOp6XqcMeoabqWnyJNBcQTIJI5I5IyVdHUgqwJBByKZJboAKACgAoAKACgAo" +
                        "AKAILq6trK2uL29uEtLO0R7q7u7p1jiiijUuzuzkBVUAkknAFAH8n//AAVG/wCCo1z8cLnW/wBnv9nvW" +
                        "3tPg1aO2n+OfHOns0cviuWNsNBAwwV05SOT1nPJ/d4D5SkdFOnY/Jr9m7wB4n+J3x4+E3gvwj4an8W6x" +
                        "quvaW50XT4vNL2sF5HPcPJnCrFHEjPI7EKqgkkAVKLk9D+kj/g4ennh/Yn+G8cUzxR3XxP0SC5SNiokQ" +
                        "eFvEUoVgOo3IrYPcA9q/sT6FcE+Kq91thp/+nKR/GP02ptcKUEnviYf+m6p/LR+xNbQXn7Zn7I9pdQrc" +
                        "Wt18TvAVtcwSgMjxv4qsVZWB6gg4Nf6CeKs3HhfMmnZrDVv/Tcj/PTwngpcU5Ymrp4mj/6cif6K/jDwf" +
                        "4W+IHhbX/BPjbQLXxT4R8U2s2ieIfD2twpPa3lrOhR45EcEEEH8Oo5r/EzLMzxGCxEK9CbhUg04yTs01" +
                        "s0z/cDM8sw+Nw86FeCnSmmpRaumnumj+In/AIKh/wDBLzxT+xZ4puPiR8N7e68U/s0eKbry9H1iTfPde" +
                        "GLqd/k07UX5JjJOLe4P3/uP+8wX/wBW/AHx+w/FOHWGxLUMfBarZVEvtR8/5o9N1pt/k19IL6PuI4UxD" +
                        "xWFTngJvR7um39ifl/LLrs9d/gf9mH9p74s/sj/ABZ0P4v/AAg1w6bremn7JrOjXe99O1nTndWmsb6FW" +
                        "XzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nfc1o7ptH434f+IGZcNZlDG4KdprRp/DOPW" +
                        "Ml1T+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/ET4d6hKj6joGouhPlyYC+ZBJtYwThQsig8" +
                        "K6ui/5A+KfhZmPCmYvDYlXg7uE0vdnHuuzX2o7p9003/sT4U+K2W8W5asThnaaspwb96Euz7p/Zls12a" +
                        "aX2HX5mfpwUAFAH5ff8Fd/A3jb4l/shT+A/h54cvfF3i7xP4p8O6fpPhzw/C89zdMJ5JiAifwqELsx4U" +
                        "AsSAM1M9i6b1PgD/gk5+wl+1z+zT+0xqnxC+Mnwuk8C+B9U8J6p4afUhr3h2+826ub6wuoYXt9K1C5m5" +
                        "8gt8yYBXkg4qYxaZdSaaP6QK0MQoAKACgAoA/ztP+CiX/J9f7Wn/Y++I/8A04yV/td4Kf8AJI5b/wBeK" +
                        "f8A6Sj/ABE8bv8Akr8y/wCv9T/0pn9137E1zcXn7GX7I95eTvdXd18MfANzdXVy7PJJI/hWxZmZmJJYk" +
                        "5JPWv8AI7xVhGPFGZJKyWJrf+nJH+vnhRUlLhbLJSd28NR/9NxPp2vgj78KACgAoAKAPzi/4K4/8o6P2" +
                        "nv+wVpf/qR6dX7h9G7/AJLfAf4pf+m5n4Z9JX/kh8w/wx/9OQP5If8Agkd/ykX/AGYf+wrqn/qOajX+j" +
                        "30kf+SIx/8Ahj/6cgf5sfRq/wCS4y//ABS/9NzP7FP+CleieIfEv7EHx58OeE9Lu9b8Sa/Z6Tomi6LoU" +
                        "Us95eT3XiGwgWCKOAF3aTdt2gc5xX+N8tj/AGchufiZ/wAE1f8Agnp+2d8Dv2wPg18X/iZ8H5vBvw40e" +
                        "LXz4j1mfXfDcskUWoeF9RsrdZbOz1GW5O64miBXyiVOCwABIiMXc1nNNH9TVamAUAFABQAUAfyP/tvfs" +
                        "Nfta/tNftt/tLeMvg78H7/xj4XtdW03TF8SX99pWk2cz2/h7T4jHbza7d2azeXgKwiLbcYOMYrKUW2dE" +
                        "ZJI/o//AGKvh/45+FP7KfwL+HHxK0xtF8c+DNBt9B8RaRLdW16baWB3VYvOs5Z4nCptA2OQBwOlaR2MZ" +
                        "PU+oaZIUAFABQAUAFABQBBdXVtZW1xe3twlpZ2iPdXd3dOscUUUal2d2cgKqgEkk4AoA/k//wCCo3/BU" +
                        "a5+OFzrf7Pf7PetvafBq0dtP8c+OdPZo5fFcsbYaCBhgrpykcnrOeT+7wHylI6KdOx+Nnwu+F3jz40eP" +
                        "PDfwz+GfhufxX408VzjT9H0fTwMscbnkkdsLHFGoLySOQqKCzEAVCRo3Y/tR/YB/YB8B/sU+A97+R4r+" +
                        "NXiuCNfiD8QVjOFGRJ/Z+n+YA0dpGwGTgNKwDuBhETaMbHNOdz49/4OC9Dm1b9hrwxfxbtnhj4h6Brlz" +
                        "sUEbJNG1nTRuJIwN12OfXAr+tvoZ4tU+LakX9uhNf8Ak1OX/tp/If008I6nCNOS+xiIP/ySpH/24/ku/" +
                        "ZU8RxeD/wBqH9m7xbO6RQeFvH3g/wARzSXIZo1Sx8Q2lyS4QglQE5wc1/o14h4F4nh/HUVvOhVj98JI/" +
                        "wA3fDrHLC8QYCs9oV6UvunFn+k5X+GJ/u2c34w8H+FviB4W1/wT420C18U+EfFNrNoniHw9rcKT2t5az" +
                        "oUeORHBBBB/DqOa7sszPEYLEQr0JuFSDTjJOzTWzTOHM8sw+Nw86FeCnSmmpRaumnumj+In/gqH/wAEv" +
                        "PFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g/f+4/7zBf/VvwB8fsPxTh1hsS1" +
                        "DHwWq2VRL7UfP8Amj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8suuz13+B/2Yf2nviz+yP8WdD+L" +
                        "/wg1w6bremn7JrOjXe99O1nTndWmsb6FWXzIZNo7hlYB0KuqsP2Hj7gHLuJMung8ZC8HqmvijLpKL6Nf" +
                        "c1o7ptH434f+IGZcNZlDG4KdprRp/DOPWMl1T+9OzTTSZ/ef+xV+2r8Jv23vhNafEX4dXY03X9NEWn/A" +
                        "BE+HeoSo+o6BqLoT5cmAvmQSbWME4ULIoPCurov+QPin4WZjwpmLw2JV4O7hNL3Zx7rs19qO6fdNN/7E" +
                        "+FPitlvFuWrE4Z2mrKcG/ehLs+6f2ZbNdmml9h1+Zn6cFAH57f8FQf2nPH/AOyV+yB43+K/wtW2i8fS3" +
                        "ul+D/DmrarClzDp0up3PlvdeRKGSV441by1cFN5BYMoKt+0eAPAWD4j4lpYTF39jaUpJOzlyr4brVJu1" +
                        "2tbXs09V+KfSB4/xvDfDNbGYS3trxjFtXUeZ/FZ6NpXsnpe101o/wAa/wDgjd+3l+1v+0j+1xqPw8+N3" +
                        "xovvH3g2HwfrPiKLQtQstIt4xe217p8UUu6xtIHyqzOMbsc9K/p36TvhBw3kXDccTgcKqVV1YxunJ6NS" +
                        "utZNdEfy79F3xi4lz3iWWGx+KlVpKjOVmorVOKT0in1Z4B/wUh/4KQ/ttfBb9tr4+fDD4YfHzUPCXgPw" +
                        "lqGn2fh3w7Z6foc0drHNodldOqvdWUshzJKzfMx619l4HeB3Cma8KYPFYrBxqVqkZOUnKavacl0klsl0" +
                        "PjPHTx04syrizGYTCYyVOjTlFRiowdrwi+sW92+p8Qf8Pcf+Ci//Rz2q/8Agr8Of/K6v1f/AIlu4I/6A" +
                        "I/+BVP/AJM/Jf8AiZXjj/oYS/8AAaf/AMgegfD/AP4LW/8ABQ/wNq0N/qHxhtPiNpyP50/hv4geH9Fmt" +
                        "JjwMNLplvY3Sjjok6/nXj5z9FfgrF03GOGdKX80JzTXyk5R++LPZyX6VvG+DqKUsUq0f5Zwg0/nFRl90" +
                        "kfux+zL/wAFVPAv/BQTwrdfAS88caj+xn+1FrcYXwL4n8Oy2GoaZqOoxoQgsm1aB45C7ffsZ0DspxFMz" +
                        "jcv8jcefR6xfBmIWYRpRzDL4/HGScZRj15uV3Vuk4uyesopaP8Ar/gH6ROD40w7y6VaWX5hJe5KLjKMp" +
                        "dOXmVnfrTkrtaRk3qvxu/aj/bV/4KzfsjfGPxJ8GPit+0ZqdtrWjEXmj61ZaV4eNhrOlyuy29/Zu+mgt" +
                        "DKEPUBlYMjAMrAf074f+FfhzxJllPG4TAxcJaNOU7xkt4y9/dfc1ZrRo/l3xC8VvEjhrNKmBxmOkpx1T" +
                        "UYWlF7Sj7mz+9O6eqZ+RHjzx14s+J3jPxP8Q/Hesv4h8ZeM7248R+J9duUhjku726kMssrLAkaAsxJwq" +
                        "ge1f0llGUYbAYWnhsPHkpU0oxWuiWy1uz+aM4zfE5hiqmJxEuerUk5Semrerell9x9m+Dv+Cof7enw/8" +
                        "IeFfAfg/wDaK1LRPCPgnTbHwj4W0WDTdAkSz07TbVLO2gVprB3YRxRqoLMScckmvy/M/ADg/G4mpiK2B" +
                        "jKpUk5SfNPWUndvSVtW76H6llf0guMcFhqeHoY6UaVOKjFcsNIxVktY30Stqf1uf8Ejv2qviz+1v+yUf" +
                        "iF8bDHd+M/CfiPU/h3N4shtY7Ia3a2NjY3yXzxQJHCHzeNC5iUIWjJwDkV/nD9JDw8y7hviP6tgbqlOn" +
                        "GfLe/I25Llu7u3u3V9bP0P9J/o1eIuZcS8N/WcfZ1adSUOa1udJRfNZWV/ecXZWvHvc/Pb9vP8A4Lwaf" +
                        "8PPEOufCj9jvSNP8aa3o7yaXr/xp8Tq9zo8NwqlHTSrSJ0+0tGx/wCPiVhFuUhY5UIev2jwg+iHPG0YY" +
                        "vOpSpwlrGlHSTX9+WvLf+Ve9Z6yi9D8U8YvpgwwNeeDyWMak46Sqy1in/cjpzW/mfu3WkZLU/CXxV/wU" +
                        "/8A2/vGOpy6tqv7VHiqxuZSzmDwrdQ6HajdjhbfRorWIAY4+X+tf1zl3gHwbhafJDL6TX95Ob++Tb/E/" +
                        "kDMfpAcZ4qpzzzGqn/dagvugor8D374Df8ABa/9uj4OatYnxV49h+OfhGJ0F94X+KFrBLO8X3X8rUrNI" +
                        "btJCPutI8iggEoeQfjuMPorcJZnTfsqLw1TpKm3b5wd429En5o+04O+ldxfldRe2rLE0usaiV/lNWkn6" +
                        "tryZ/WN+w7+3v8ABn9urwBc+Jvh9K/hzxr4cEUPj/4X65NG+paTLKPlkVkCi4tZCCI51UA4IZUYFR/nT" +
                        "4seD2acI4xUsT79KfwVEvdl5eUl1i/k2tT/AEd8JPGTK+L8E6uG9yrC3PTb96L7/wB6L6SS9UnocH/wV" +
                        "x/5R0ftPf8AYK0v/wBSPTq9j6N3/Jb4D/FL/wBNzPH+kr/yQ+Yf4Y/+nIH8kP8AwSO/5SL/ALMP/YV1T" +
                        "/1HNRr/AEe+kj/yRGP/AMMf/TkD/Nj6NX/JcZf/AIpf+m5n9pv7cnx08Sfs1fsm/G/43eDrG31DxX4F0" +
                        "lbnw5Bqys9st7e3sGmwyyopBdYmuBIUyN23GRnNf5a+E3CVDPeI8Jgazap1Ze9beyTk0u17Wv0vc/1U8" +
                        "XOL6+Q8N4vH0UnUpQ92+121FN97N3t1tY/m2/4Jgf8ABRr9tL4/ft5fBL4Y/Fv46Xvi/wAAeMH8UTeIf" +
                        "C82m6Ha285s/CGranAM2NlC6COeBHAVh90DpxX9y+Pvghwtk3CGLxWDwip1qfs+WXNNtXqwi95NO6bWv" +
                        "c/hP6P3jlxVnPGOEwmMxjqUantOaPLBJ2pTktopqzSenY/o+/bM/bP+EX7Efwpk+JfxRuZL++1KRtJ8D" +
                        "eBdGaP+09d1BVDmKASEKkcakNNM3youOrMit/D3hf4XZlxXmP1XCKyWs5v4YR7vu3sktW/JNr+6PFLxT" +
                        "yzhPLvrWLbbbtCC+Kcuy7Jbyb0S7tpP+Sn49f8ABcL9uH4u6nep4G8VWXwF8IyOwsvD/wAO7O3mvRFyF" +
                        "8/UtSjmnaQA8tD5Kn+6K/0d4P8Aon8J5bTXt6bxVXrKbaV/KEWlbyfM/M/za4x+lrxbmdR/V6iwtLpGC" +
                        "TdvOck3fzXKvI+OIf8AgoN+3NBqR1VP2t/iE10UEPlTeK9YktsKwb/j3knMOeOTsyRxnBNfpsvBnhJ0+" +
                        "T+zaFv+vcb/AH2v+J+Xx8auLlU5/wC0sRf/AK+St917fgfen7O3/Bd79sT4Vanp1n8Xp9O/aE8ExukV/" +
                        "Z+JLW20rW47cdfs2o6VDGpfvuuIZs9OOo/IONvoicM5jTlLBqWFq9HFuUL+cZN6f4ZRP2Lgj6YPFGXVI" +
                        "xxrji6XVSSjO3lOKWv+KMj+sj9k79rT4Q/tl/Cez+LXwf1KeXTBO2ieI/DutxLBqejanHEkz2l1GjOu4" +
                        "LIrK6MyMpBDHkD/ADo8RfDnMuF8xeDxkVzWvGS1jKOylF/JqzSae6P9H/DjxIyzinLVjMFJ8t7Si9JRl" +
                        "u4yWq2ad02mtmfzZ/8ABUn/AIKk/thfDL9sL4kfBj4MfEg/CvwJ8Kzp+hWlpoWn6Xc3Go3FzpdtqM11d" +
                        "TajbXDbt1wUREKqFUcFiSf7m+j99H7hnH8M0MbjaHt61fmbblJKKUnFJKLXa7bu232sj+EvpC/SF4ny/" +
                        "ievgcDX9hRocqSUYtybipNtyT72SVkku92f0R/sE/Evxf8AFT9jH9n/AOKHxM8RN4h8YeKvDseueKvEt" +
                        "+tvA1xN50oaVxAkUa/KozhQOK/inxgyLDZfxRjMLhYclKFS0Yq7srLTW7P7c8HM+xWY8K4LF4qfPVnTv" +
                        "KTsru710sj8QP24f+C+GpaD4q1z4bfsY6PpuqWGiSyaZqHxv8WQtewXk0ZKu2kWe5EaJWHy3E+4SclY9" +
                        "u12/q/wn+h7TrYeGKzuUouSuqUXZpf35b37xjZrrK90v5M8W/pkVKOInhcjjGUYuzrSV03/AHI7W7Sld" +
                        "PpG1m/xJ8Y/8FKv29vHN1dXmtftX+M7KW82+cng7VpPDsQ2sGGyLw+LJI+RzsUZHB4r+q8s8C+D8JFRh" +
                        "l1FpfzR5/xnzN/M/k7NPHjjLGScqmZVk3/LLkXyUOVL5HZ/DT/grB/wUB+F+oQXmmftIaz4rtUZXutI+" +
                        "JYtvEdvcIoA2M2rRzTIDt5MUiN15yTXl579HXg3MIOMsDCD707wa/8AAWk/mmvI9XIfpHcaZfNSjjp1F" +
                        "2qWqJ/+BJtfJp+Z/Rb/AME9P+C1Xgv9qPxT4e+Cnx18L2/ws+NPiORdM8J6z4daaTw3r92VJECC6eSay" +
                        "uHIxHFI8iueBIGKof4m8afosYrh/Dzx2AqOthYK8lK3tILvpZSiurSTX8tk2f3B4J/SswvEOIhgcwpqh" +
                        "i5u0XG/s5vtrdwk+ibkn/NdpH7sV/Ix/XwUAQXV1bWVtcXt7cJaWdoj3V3d3TrHFFFGpdndnICqoBJJO" +
                        "AKAP5P/APgqN/wVGufjhc63+z3+z3rb2nwatHbT/HPjnT2aOXxXLG2GggYYK6cpHJ6znk/u8B8pSOinT" +
                        "sfjZ8Lvhd48+NHjzw38M/hn4bn8V+NPFc40/R9H08DLHG55JHbCxxRqC8kjkKigsxAFQkaN2P7Uf2Af2" +
                        "AfAf7FPgPe/keK/jV4rgjX4g/EFYzhRkSf2fp/mANHaRsBk4DSsA7gYRE2jGxzTnc/QmqIPzd/4K5fDm" +
                        "b4l/wDBPT9o3TLODztR8MabZfEazYAkxp4d1W21a6bA/wCnWCYe2c1+5fRuztYDjTAyk/dnJwf/AG/Fx" +
                        "X/kzR+FfSVyN4/gnHRiryhFTX/bklJ/+Spn8CFtcz2dxb3drM1vdWrpc208RKukiMGVlI6EEZFf7Ezgp" +
                        "Raaumf4005uMk07NH+l78DPiVY/GT4L/Cf4s6dIklp8SPDujeNU8nojalp8V06YwMFGcqQRkEYNf4S8W" +
                        "5FPK80xODlvRqSh/wCAyav89z/enhHPoZplWGxkdq1OM/8AwKKdvlseqV88fRHN+MPB/hb4geFtf8E+N" +
                        "tAtfFPhHxTazaJ4h8Pa3Ck9reWs6FHjkRwQQQfw6jmu7LMzxGCxEK9CbhUg04yTs01s0zhzPLMPjcPOh" +
                        "Xgp0ppqUWrpp7po/iJ/4Kh/8EvPFP7Fnim4+JHw3t7rxT+zR4puvL0fWJN8914Yup3+TTtRfkmMk4t7g" +
                        "/f+4/7zBf8A1b8AfH7D8U4dYbEtQx8FqtlUS+1Hz/mj03Wm3+TX0gvo+4jhTEPFYVOeAm9Hu6bf2J+X8" +
                        "suuz13+B/2Yf2nviz+yP8WdD+L/AMINcOm63pp+yazo13vfTtZ053VprG+hVl8yGTaO4ZWAdCrqrD9h4" +
                        "+4By7iTLp4PGQvB6pr4oy6Si+jX3NaO6bR+N+H/AIgZlw1mUMbgp2mtGn8M49YyXVP707NNNJn99n7G/" +
                        "wC1f4E/bO+A/hn43eBLaXSE1CSbQfFnha/dZLjRtaswhubR5EAWQASJJHIAN0boxCklR/jt4neHeM4Xz" +
                        "epgcQ1K1nGS2lB7St02aa6NNXa1f+ynhd4jYPirJ6ePw6cb3jKL3jNbxv13TT6pp2T0X1NX58foZ+M//" +
                        "BeL/lH94h/7Gnwz/wClMlf0/wDRD/5LKH/Xqp+SP5b+mF/yRc/+vtP82fh//wAG/wB/yfXq3/YheIP/A" +
                        "E46XX9YfTJ/5JGP/X+H/pMz+SvoYf8AJXy/68T/APSoHy5/wVx/5SL/ALT3/YV0v/1HNOr7/wCjd/yRG" +
                        "A/wy/8ATkz8++kr/wAlxmH+KP8A6bgf0P8A/BNP9gP9jb4t/sOfs/8AxF+JP7Pfh/xh438T6dqN1r/iT" +
                        "V4Z2ubqSLXb62RnKSqMhI1UcdBX8V+O3jFxPlvFmNw2FxtSnShKPLFNWV4Rfbuz+2vAbwa4XzLhHBYnF" +
                        "YKnUrTjLmk07u05Lv2SPXPj7/wRG/Yf+Lvh2/g8B+CpvgR41Mbf2T4s8AXd5LbLMANguNOv55beSMEfM" +
                        "IxG5z98cV83wd9K3izLa6eIqrE0usZpXt5TSUk/XmXkfS8ZfRN4SzOg1h6TwtXpKDdr+cJNxa9OV+Z/H" +
                        "3+07+zd8V/2Mfjprfwk+IQOneKfC0kGveGPFOhvLHb6lYSSF7PUrGX5W2MYzgjDJIrIcMhA/wBLuAuOc" +
                        "u4oyiGMw2tOd1KLteL+1CS+fo001o0f5kcf8CZlwrm88HidKkLOMle0o/ZnF9tPVNNPVM/rU/YQ134C/" +
                        "wDBVX9l3wH4q/ai+GGi/Fb4x/Aqa5+GfizUfEcBNw0rxwTx3qmJ0bbewLG0n8PnLJtAHFf5yeLuDzjw8" +
                        "4grUsqxE6GFxKVSKi9Oqcf+3HdLryuNz/STwfxmTeIvD1Gtm2HhXxWGbpyclr0alp/OrN9OZSsfye/tv" +
                        "+DfC/w7/a//AGkvAvgnRYfDfhHwl4x13QfDeg6cCsFnZ2188cUUYYkhVUYGTX+inhRmmIxvDWBxFebnV" +
                        "nRg5N7ttK7Z/nF4tZXh8DxNj8PQgoUqdacYxWySbskf18/sj/8ABOX9h7xx+yl+zH418W/s1+G9d8VeL" +
                        "/h74L8UeJtcvobgz3moah4bs7u4nkKzAF5JJGZsDqa/zV8SPG7izCcRY+hRx1SNOnXqxik1ZRjUkklp0" +
                        "Ssf6Z+Gvgbwli+HMvr1sBTlUqYelKTad3KVOLbeu7bueCf8Fnvjvo37HP7Ingj9mL4BaRZfDI/Gtr/wr" +
                        "BpXgqCLT4tM8KWCxy6osMdqFCNeSXccTsRl1eY5LEkfY/Rd4Qq8T8S1c0zCTrfV7SvNuTlUd+S7e/Kot" +
                        "pdGo9D436U/GFLhfhmjlWXRjR+s80bQSio042c7Jbczkk31Tl11P51f+CeH7CPi79vH40SeCLHU5PCnw" +
                        "48HQxeIPir47hhEz2NlK7JBb26OQjXV26MsQY4VVeQhghVv7Y8avF3DcIZX7eUeevUfLThe131b68sd3" +
                        "bdtLS91/EHgl4P4njHNfYRlyUKa5qk7XsuiXTmk9FfZJvW1n/Y/8Lv+CXH7BXwo8OQeHtL/AGa/Dfi9l" +
                        "h+yXuv/ABRsYfE2o3TldrytLrCziN2PP7lY1U/dVRxX+Y/EH0gOMMxrupPHVKet1Gm3TivK0bXX+Jtvq" +
                        "2f6hcPfR74Oy2gqUMBTqaWcqiVST87yvZ/4UkuiR+fP7e//AAQ/+DHxB8DeI/iD+yT4aT4X/F3RIZdYg" +
                        "+Humzynw/4hESmR7aOG4ZxZ3LgYhaIrEWwroN3mL+zeD30r80wWLhh84qe2w0nbna9+Hm2viivtXvK2q" +
                        "btZ/i3jH9EvKsbhKmJyen7HExV+RP3J26JP4ZP7NrRvo0r8y/mI/ZK/aP8AGv7H37RHgP4zeG2uYJ/CV" +
                        "8th418NoxhOqaJLKsWo6dMkmBmSMHZvHySqj43IMf3v4j8D4XibJK2Cq2anG8Jb8s18Ml6Pe28W1sz+A" +
                        "PDbjrF8MZ3Rx1K6dOVpx25oP44v1W19pJPdH9o//BVDX9J8V/8ABMj9oHxRoF4uo6F4k8PaDr+i6hECF" +
                        "ntLzXdMuIZBuAOGRwRmv8t/o+YOph+PcFSqK04VJxa7NQmmvvP9UvpEYylieAMbVpu8J04ST7pzg0/uP" +
                        "5Of+CR3/KRf9mH/ALCuqf8AqOajX+iv0kf+SIx/+GP/AKcgf5xfRq/5LjL/APFL/wBNzP63v+CuP/KOj" +
                        "9p7/sFaX/6kenV/nD9G7/kt8B/il/6bmf6T/SV/5IfMP8Mf/TkD+Ur/AIIu/wDKS39mz/ucf/UB1yv9D" +
                        "vpR/wDJCY7/ALhf+nqZ/nR9Ff8A5L3Af9xf/TNQ+o/+DhfX/E15+2L8PPDmpTyjwzoXgLTtQ8MWLhhAJ" +
                        "L/WdTF1OmeC8jW6IxHaNR2r4D6F2DoR4Yr1Ype0lXkpPrpGHKvldterP0L6bGNry4ooUpN+zjQi4rp70" +
                        "58z9XZJ+iPMP+CVnhD/AIJf6/c6vdftqeLxF8UFvlTwf4V+JUl1pHgtbJFQrM17ZyrFLMXLB0vJI4wuM" +
                        "I/LD3/pCZlx/RjFZHS/2fl96VO0qt+3K1dK2zgm79VsfP8A0d8s8P60pPPav+0c3uxqXjSt35k7N33U2" +
                        "o26Pc/qw0v9iX9gHxp4TtpPD37MHws8QeF9VhVbDxB4Y8LeGpfPiB4eLULGDzCePvrLk+tf55YjxV4yw" +
                        "uJaqZhiYVIvWMqlTR+cW7fJo/0Vw/hPwZi8MnTy/CzpyWko06eq8pJX+aZ+UP7YX/BAT4aePAvif9j3x" +
                        "Bb/AAh8TSzFtT8A+PrzUrvwzPG5LF7e5SK9vLV1JPykSoRgKI8c/wBE+Gf0xsfg/wB1nMHXp20nBRVRe" +
                        "qvGMl5+6+7Z/OXid9DPAYz97ks1h6l9YTcnTfo7SlF+XvLskffv/BL39gzWf2DPgt4m8I+MvGNp4y+IP" +
                        "xB1ZfFXiu48MLONJsxBapaQW1q93HDLKFAZmleNMlsbBty3454/eL9LjDNKdajSdOjSjyx5rczu7tuza" +
                        "XRJJvbfXT9m+j74O1eDsqqUa9VVK9WXNLlvyqyslG6TfVttK97W01/kz/4K4/8AKRf9p7/sK6X/AOo5p" +
                        "1f6L/Ru/wCSIwH+GX/pyZ/m/wDSV/5LjMP8Uf8A03A/oR/t7xN4a/4N/wCHVPCNzNZ6wfhlFpb3FiCZV" +
                        "sb/AFdbC+xt5ANrNKGbsMntX8Y/U6FfxkcKyTj9Zvr3Ubx/8mSP7U+uYih4MKdFtS+rW07SlaX/AJK2f" +
                        "yQfBex+E2pfFXwLY/HbXtW8M/CG4v4l8fa54HtIr3VYLAAs32eKZlXLMArPhiikuEkKhG/0f4prZlTy6" +
                        "tLAQjPEqPuKbtFvza++2l3o2k7r/NjhWjltTMaMcwnKGGcvfcFeSj5J/dfWy1Sk1Z/2w/sl/s7/APBID" +
                        "x74WtLH9nbwD8MvjGIoBLdxeLrez8T+IgoC7pbq28VLPewFiM4aJFHIUAcV/lb4jca+JeDxDlmVbE4fX" +
                        "Tlbpw9E6doP72+7P9XPDbgjwyxmHUcto4bEaa8yVSfrJVLzX3Jdkdn8ef8AgkP+wn8c9Ev7SL4MWHwh8" +
                        "STIy6X4v+DEUegS2khHDfYrVRYyrnGVkgPHQqea8vhD6SfF2U1VJ4qVeHWNX30/+3n76+UvW56nGP0Z+" +
                        "D83pSisLHD1OkqXuNf9ur3H84+lj8uv2Xf+CC/xV+Df7Vfw8+Kvj74zeHdb+Fnwk8Q2HxE8NDwomqLr+" +
                        "q3Oi3seoWMdza3dstvao0sSmbZczHaCq/e3L+/+IH0v8uzTh6vhMPhakcRXpuEubl5IqacZNNPmlo3a8" +
                        "Y66vaz/AJ98PvodZjlfEVDF4jFU5YehUU48vNzycGpRTTXLFXSvaUtNFvdf09V/A5/f4UAeKftFfBLR/" +
                        "wBoz4LeP/gvrviDUfC2m+O7I6XLr3hid4Lq3dZFmQkKyiWIsgEsLHbIhKnGchNDi7M/hb/ag/Zf+KX7J" +
                        "nxS1T4XfFHS/JuYd174b8SWSudO1rTi5WO7tJGAypxhlPzI2VYAisWrHVGVz2//AIJ4ftpt+xT8aJvF2" +
                        "qeFoPFPgTxrbw+F/H8cNtA2sWtis/mifT7iQBleNvmeHcEmAAbDKjo4uwpxuj+2z4d/ETwV8WPBXhz4i" +
                        "/DrxHbeK/Bniu2TVNC13S33RTRNkEEEBkdGBV0YBkYFWAYEVscrR2lAHN+MfCmi+PPCHirwP4ktvtnh3" +
                        "xnpt94U1+z+X97ZajavZzp8wYfNHIRyDXdlmY1cHiadek7TpyUk+zi7r8UcOaZdSxmGqYeqrwqRcZLup" +
                        "Kz/AAZ/mnfFr4beIPg58UfiH8KPFURi8RfDnWdS8F6vuRoxJNp129qZEDZ+STZvQ5IKkEEg5r/dbhzPa" +
                        "OZ5fQxdL4K0IzXpJXt6rZ+Z/g1xJkVbK8wr4OsvfozlB+sW1f0e68j+wT/ggh+0Xa/E/wDZN1L4JapqA" +
                        "l8Xfs+apNp1vaynMj+Htcml1Oylyxy2yc3MOAMKqIO4Ff5o/TC4JlgOI446Ef3eKinf+/BKMl81yvzbZ" +
                        "/px9DjjiOYcNywE5fvcJJq39ybcov5S5l5JI/dGv5JP67CgD+VD/gsP/wAFXtL8X2Pi79kH9m7VbfV/D" +
                        "F1v0D40/FC08u4gvtj4k0rTHO5TEGXE9wv3iNkZ25Zv9DfozfR2qYadPOczi41FrSpvRrtOfn/LHpu9b" +
                        "Jf51fSd+kbTxUKuS5ZJSpv3atRap94Q8v5pddlpdv8Am68H+D/FPxA8U6B4J8E6BdeKfF3im6h0Tw94e" +
                        "0SF57q8up3CJHGiAkkk/h1PFf3HmeZ4fBYedevNQpwTcpN2SS3bZ/CuWZZiMbiIUKEHOrNpRildtvZJH" +
                        "98X/BL79jvX/wBif9lrTPhj4z1OHUPH/izVrv4n+PYNMfzbSx1LUbO0sRaQyDiQQwWUSu4+Vn3Fcrgn/" +
                        "Hrx98TaPFXEEsVQi1RhFU4X0bjFyfM10u5NpbpWvqf7I/R+8MK3CfD0cLXknWqTdSdtUpSUVyp9bKKTe" +
                        "zd7aH6JV+KH7cfjP/wXi/5R/eIf+xp8M/8ApTJX9P8A0Q/+Syh/16qfkj+W/phf8kXP/r7T/Nn4f/8AB" +
                        "v8Af8n16t/2IXiD/wBOOl1/WH0yf+SRj/1/h/6TM/kr6GH/ACV8v+vE/wD0qB8uf8Fcf+Ui/wC09/2Fd" +
                        "L/9RzTq+/8Ao3f8kRgP8Mv/AE5M/PvpK/8AJcZh/ij/AOm4H9b3/BI7/lHR+zD/ANgrVP8A1I9Rr/OH6" +
                        "SP/ACW+P/xR/wDTcD/Sf6NX/JD5f/hl/wCnJn6O1+Hn7mfzVf8ABxv8OtEuPhx+zl8WktY4vEek63qfw" +
                        "6nvUUCaey1Cw/tONHIHzLFJZOUBPymRsfeNf3V9CHO6scdjsHd8koRnbonF8rfzUlfvZdj+DvpyZHSlg" +
                        "cDjLL2kZyp36tSXMl8nF27Xfc8U/wCDcHxFqcHxE/ag8JLMTo2p6L4d8RT27EkC5sb67tkZR0GUu2B9c" +
                        "D0r6n6cOCpvBZfWt7ynOPyai/8A21Hyn0GMdUWOzCjf3ZQhL5pyS/CTPxl/4KBahBqf7cn7XFzbBhHH8" +
                        "RPFunt5oAPmWmtXFo/QnjdGce1f1D4NUXT4Ty1P/oHpv74J/qfy140VlU4uzNr/AKCKq+6bT/I/u3/Yd" +
                        "/5Mq/Y//wCyXfD/AP8AUTsK/wAi/Fj/AJKrM/8AsJrf+nJH+v8A4Sf8kpln/YNR/wDTcT+ab/g4we8P7" +
                        "SXwHjcyf2evgeR7UNu8rzm168Eu3tu2hN2O2Pav7r+hIo/2FjH9r234ckbfr+J/Bv04XL+3sGvs+x/Hn" +
                        "lf9PwPw6+G//C8fI1b/AIVD/wAJX9m3w/27/wAK3/tfZvw/lef/AGXxnG7bu98d6/rHPP7JvH657K+tv" +
                        "acvztzfjY/kjIv7XtL6l7W2l/Z83yvy/hc9M/4zV/6qj/5dleD/AMYr/wBQ3/lM9/8A4yv/AKif/Kgf8" +
                        "Zq/9VR/8uyj/jFf+ob/AMph/wAZX/1E/wDlQ80ufgv8c7y4nvLz4T+LLq7une5urq50LWHkkkdizMzNA" +
                        "SWJOST1r3ocU5TGKSxNJJf34/5ng1OFc3lJylhqrb/uS/yP67vj5Hrdv/wQSs7PxHbXFnrWnfC3wJpd9" +
                        "ZarE8FzCbW+0i2WOSORVZWRUCkMM8c81/mzwdKk/GBypNODxNZprVO6m7p+Z/pdxnGrHwcUaqamsNRTT" +
                        "VmrOmrNeR/Ot/wSO/5SL/sw/wDYV1T/ANRzUa/tj6SP/JEY/wDwx/8ATkD+Ifo1f8lxl/8Ail/6bmf1v" +
                        "f8ABXH/AJR0ftPf9grS/wD1I9Or/OH6N3/Jb4D/ABS/9NzP9J/pK/8AJD5h/hj/AOnIH8pX/BF3/lJb+" +
                        "zZ/3OP/AKgOuV/od9KP/khMd/3C/wDT1M/zo+iv/wAl7gP+4v8A6ZqH9ZH/AAUD/wCCd/wv/b18DaVp/" +
                        "iDUX8EfFDwUtw3w++JWmwLO9sLgAyWl5AWT7RaOyqxXcrIwyjDLh/8AOnwa8asw4PxcpU4+0w9S3PTbt" +
                        "e20ov7MltezTWjTsrf6P+NHgjl/GODjGpL2eIp35KiV7X3jJac0Xva6aeqau0/5Kf2hP+CQ37c37Ps2o" +
                        "3k/wnm+K/hCxLyR+Mvg0z65E8SDcXeyiRb+IKvLF7cKOcMQCa/0c4L+kpwlnKjFYlUKr+zV9zX/ABfA/" +
                        "K0r+R/m1xr9Gfi7JXKTwzr0l9ul7+n+Fe+vO8beZ8UfDv4yfHb9nnxFeXHwy+I3iX4Q+I7eURaxbeGtQ" +
                        "1DSZHkhOPLu4I3jEgB4KSqR6iv1TO+GMozqgliqFOvBrTmjGW/WL1t6pn5TkfFGcZJXbwteph5p68spR" +
                        "26SWl/Ro/YH9nb/AIL8/tUfDm707S/jtoWk/H3wmhSG+1FoIdA8RJGPl3R3Omxi1cqOSJLUs5Ay65Jr+" +
                        "aeNfoc8PY6Mp4CcsLU6K7nD5qT5l8pWXZ7H9N8EfTL4iwMowzCEcVT6uyhP5OK5X843fdbn9S/7J37Xn" +
                        "wX/AGzfhjD8T/g1rUlxa28g0zxR4V1xI4NY0S+K7/s97BG8iqWX5kdGZHH3WOCB/n34i+GuacL494XGw" +
                        "SbV4yWsZrvF2XzTSa6rY/0L8N/EzKuKcvWLwU20naUXpKD7SV38mm0+j3P4o/8Agrj/AMpF/wBp7/sK6" +
                        "X/6jmnV/qh9G7/kiMB/hl/6cmf5S/SV/wCS4zD/ABR/9NwP67P+CcXhvQfGP/BNz9nPwl4p0mDXvDPif" +
                        "wU3h/xDoepxiW2vLK8e4t54ZUbhkkRyrD0Nf5t+OGOrYXjnHVqUnGpCtzRa3TVmmvNM/wBLPAzA0cVwJ" +
                        "gaNaKlTnR5ZJ7NO6afk0fhT+2D/AMEBfiv4Y13W/F37IGr23xE8EXckl9Z/C3xXew2Gv6crtu+z293el" +
                        "La7jTna0skUmMAiRssf648M/pjZdiKMKOcxdKqtHUim4S83FXlFvslJddFofyF4nfQzzHD1p1slkq1F6" +
                        "qnJqM4+Sk7Rkl3bi+mr1Pwx+JnwQ+PH7PHiCCz+Kfw08R/CfXbOcf2beeI9PvdODzRksr2tyyqkuNpKv" +
                        "E5HGQa/rXIeLMozqi5YSvTrwa1UZKWn95br0aP5Fz/hLOMkrqOLw9ShNPRyi46/3Xs/VNn138DP+Cs37" +
                        "eHwGawtdH+N978QfDljhf8AhFPjCv8AwkltJGvCx/aL1vtsaKBhViuUAHA4r814t+jnwhnF3PCKlN/ap" +
                        "e4/Wy9xv1iz9M4R+khxhk/KoYt1aa+zV/eL0u/fS9JI/os/YP8A+C23wr/ac8U+HfhB8aPCyfBf4ueJJ" +
                        "E0rw3qdrdfaPDOtXrnCQRS3G2W0nlJ2xRS71dsKJS7Kh/ibxe+ipmGQYeeMwNT6xhoK8la1SC7tLSSW7" +
                        "as0teWybP7g8HvpY5dn+IhgsdT+r4mbtF3vTm+iTesW9kndN6c12kfuZX8ln9chQAUAfMf7WH7J/wALf" +
                        "2v/AIW3/wANviTYeTcw+ZfeDPGdjGh1HQtRKbVuLdmxlTgCWInbIvBwQrKmrlRlY/iM/ag/Zf8Ail+yZ" +
                        "8UtU+F3xR0vybmHde+G/ElkrnTta04uVju7SRgMqcYZT8yNlWAIrFqx0xlc+mP+Cef/AAUM8a/sXeNRp" +
                        "Grm58V/AfxXcpJ438ERvuls5WxGdR04SEKlwigb0yFmUBWIIR0cZWJnC5/aH8O/iJ4K+LHgrw58Rfh14" +
                        "jtvFfgzxXbJqmha7pb7opomyCCCAyOjAq6MAyMCrAMCK2OZo7SgD+Pf/gv9+yrcfD/45eF/2oPDWllfC" +
                        "Hxrt4/D3ja5tk/dW3ijSbZYkZ9qgL9rs40K9Szwysetf6YfQ48Qo4zKamVVZfvcO+aHnTk7/wDksm79l" +
                        "KKP8xvpm+HcsFm9PNaUf3WJXLPyqRVv/JopW7uMmfnB/wAE4P2urj9jL9qTwX8Tr+aZvh5rYbwN8WNOt" +
                        "NzGXQdQkTzJlQfektZUjuEA5bZsyAxr9w8cPDaPFHD9XCxS9vH36bf88dl6SV4vte/Q/DPAzxLlwtxDS" +
                        "xUm/YS9yol/JLd27xdpLva3U/0GNK1XTNd0vTdb0XUIdW0bWbeHVdJ1XTZUmt7m2uIxNFLFJGSro6MGV" +
                        "gcEHIr/ABlxGHqUakqc4uMotpp6NNaNNdGmf7TYfEU61ONSnJSjJJprVNPVNPqmtj+W7/grn/wVz/tT/" +
                        "hJ/2Vf2VfE//Er/AH2gfGD4waBN/wAfXWKbStKmiP8Aquq3Fwp+flEOzcz/AOgP0bvo3ez9nm2bU/e0d" +
                        "Kk1t2nNd+sYvbd62S/z2+kt9Jb2ntMoyip7usatWL37wg+3SUlvstLt/wA1fg/wf4p+IHinQPBPgnQLr" +
                        "xT4u8U3UOieHvD2iQvPdXl1O4RI40QEkkn8Op4r+6czzPD4LDzr15qFOCblJuySW7bP4PyzLMRjcRChQ" +
                        "g51ZtKMUrtt7JI/t2/4Jef8EvPC37Fnha3+JHxIt7XxT+0v4ptfL1jWI9k9r4YtZ0+fTtOfkGQg4uLgf" +
                        "f8AuJ+7yX/yk8fvH7EcU4h4bDNwwEHotnUa+1Ly/lj03eu3+sv0ffo+4fhTDrFYpKePmtXuqaf2Ief80" +
                        "uuy03/X6v5qP6aCgD8Z/wDgvF/yj+8Q/wDY0+Gf/SmSv6f+iH/yWUP+vVT8kfy39ML/AJIuf/X2n+bPw" +
                        "/8A+Df7/k+vVv8AsQvEH/px0uv6w+mT/wAkjH/r/D/0mZ/JX0MP+Svl/wBeJ/8ApUD5c/4K4/8AKRf9p" +
                        "7/sK6X/AOo5p1ff/Ru/5IjAf4Zf+nJn599JX/kuMw/xR/8ATcD+t7/gkd/yjo/Zh/7BWqf+pHqNf5w/S" +
                        "R/5LfH/AOKP/puB/pP9Gr/kh8v/AMMv/Tkz9Ha/Dz9zP57f+Di3/k2D4H/9j6v/AKj2o1/Z/wBCX/kf4" +
                        "v8A68f+3wP4q+nB/wAk/hP+v/8A7ZM+NP8Ag3H/AOS1/tH/APYraV/6djX6h9N7/kVYH/r7L/0k/LPoN" +
                        "f8AI2x3/XqP/pR+aX/BVr4c658Nf2/v2kbDWraSKPxVrjfEbQ7qVSqXNjr8KamjxkgBlRpXiJHRkYdQa" +
                        "/dfo8Z3Rx3BuBlB/BDka7OD5dfWyfo0z8G+kXkdbAcZ4+NRfHP2ifdTXNp6NteqaP6Nf+CXP/BUb9mjx" +
                        "j+z98HPgJ8TfH9j8Jvi58LdD0z4Zxaf45lTT9M1e00a2j02zns7+bbbl3hjjDQyOsm/dtVl+av4i+kB9" +
                        "H/PsLnOKzDC0ZV8NWnKpeHvSi5NykpRXvWTbs0mrWu09D+5Po+fSDyHFZLhcvxVaNDE0IRp2m+WMlFKM" +
                        "XGT927SV02ne9k1qc1/wXs/Zj1H4zfs7+Bv2ivAlsdc1L4DSXd14jTSgJvtHhTW0gaa7Bi3F1tZbeKTI" +
                        "4EbyOTgV3/Q/wCPYZXndbLcQ+WOJty30tUhe0fLmTa85KK6nB9MbgCea5JRzLDrmlhW3K2t6c7Xl58rS" +
                        "flFyfQ/n3/4Jqft46t+wj8cJ/FN/p03iP4UfECG38N/Fbwxp5QXLW0Mxkt76134BuLQyOURiFdXdCVLB" +
                        "1/svx18IafF+UqlGShiaTcqcntdrWL/ALsrK73TSetrP+LvAbxhqcH5u60oueGqpRqRW9k9JL+9G7stm" +
                        "m1pe6/tg+FP7a37J3xq8NWfir4d/tA+FtWsLuNbmXT7/WLPTtTtN/8ADdWOoPDcwNntJGue2RzX+VvEX" +
                        "hXxHlVd0sTgqsWuqi5RfpKKcX8mz/VzhzxX4bzXDqthsbSlFrZyUZL/ABRk1JfNI9Q/4Xj8FP8AosHhb" +
                        "/woNJ/+P14H+qea/wDQNV/8Al/kfQf63ZT/ANBVL/wOP+Z6Hpeq6Xrmn2mraLqVvrGlX6efY6npc0dxb" +
                        "zITjdHJEWVhx1BrxcRh6lKbhOLjJbpqzXqme3h8TTrQU6clKL2ad0/Ro+DP+CqWhXviL/gnv+1Lp9gpe" +
                        "e38OrrsgUFv3Ol6la6nMcD0jt2Oe1fr/wBHvGQocaZfKWzqW+couK/Fn479IjBzr8FZjGO6p3+UZRk/w" +
                        "TP43v8AgmD8UPDPwc/bz/Zw8feMtdh8M+GbLV7zQNW17UiiW1qmu6Le6CrzPIQsce68AeRiAi5YkAZr/" +
                        "Tnx8yCvmfB+Ow9GDnUcFJJbvklGend+7our0P8ALz6P/EGHyvjHA4ivNQpqbi5PZc8JQ1fRe9q+i16H9" +
                        "gX/AAVslin/AOCcf7TU8EqzQTaTpMsM0TBkdG8RacQykcEEdDX+aX0cItccYBPfml/6RM/02+knJPgbH" +
                        "tapwj/6cgfynf8ABF3/AJSW/s2f9zj/AOoDrlf6G/Sj/wCSEx3/AHC/9PUz/Or6K/8AyXuA/wC4v/pmo" +
                        "fvl/wAFav8Agqh8V/2JviP8Pvgz8FvCGi33ibxJoMfxJ8ReKvHkF1ewRWV1qV5plvb2tvaXNriTfYStI" +
                        "7sw2lQFzkj+Pfo5fR7y7ivA1sbjqs1ThP2cYwaTuoxk2209LSVkra3u+h/ZP0kvpEZlwnjqGBwNKDqTh" +
                        "7SUpptWcpRSSTjreLu3fS1l1PQ/2F/+CzP7P/7SPhnS/D3xy8R6P8BPjjEfsWpaTr1y1j4c1V8gLNp19" +
                        "qDlI/MJA+zzy+YG4UyD5q8Txb+i/nOR15VMBCeKwm6aV5x8pxiru380Va2rUdj2/CH6UuS57h408fUhh" +
                        "cXs1J2hLzhKTsr/AMsne+ictz9Dvi/8DP2V/wBoXwwdY+Mvw98IfErw4sWbfxf4it9Pma3ibEe6DU1Ky" +
                        "Qg5A3Ryr25r8W4a4t4hyXEcmCr1aM7/AAxcld+cNn80z9t4m4R4dzvD8+OoUq0LfFJRdl5T3XyaP48f+" +
                        "CpXwE/4J3/BHW9Es/2Pfi1ceJPHl3etF4y+GuhalH4m8OaTp4hkO9NWLPIlwsoVDbtNO2CSxjKgP/pl9" +
                        "H7jDjXNqU5ZzhlCil7tRx9nOUrr7GzjbXmUYra3NfT/ADD+kLwbwRlNWEclxLnWcvfpqXtKcY2e09WpX" +
                        "suVyk978ttfpb/g3Su/FCftQ/G6xtGn/wCEKufAL3fiBYwfsx1SHxDpqaeZD/f8qW72e26vhPptU8O+H" +
                        "8JJ29qq9o9+VwnzW8rqF/kfe/QfqYhcQYuMb+ydC8u3Mpw5b+dnO3zPgv8A4K4/8pF/2nv+wrpf/qOad" +
                        "X6/9G7/AJIjAf4Zf+nJn479JX/kuMw/xR/9NwP6lP2VvjVbfs5/8EgPhh8cbrRX8Rr8M/h5J4ng0CGUQ" +
                        "fbLiKeZYIWlIbYjyMod9pKrkgEjB/z+8QuFpZ34l4jAKfJ7bEcvNvZNK7t1sr2XV9Uf6E+HfFccj8MsP" +
                        "j3Dn9jh+bl2u03ZX6Ju13rZdGflb+zP/wAHCXj+4+KUenftXeBNCtPhPrztB/wkXwp0/UotQ0B3PySvB" +
                        "dXt2bu3XpIqgSgZZd5Hlt/QfHn0MMHHL+bKK03iY/ZqSjyz8rqMeWXZv3ejtuv544B+mrjZZjy5vRgsN" +
                        "L7VOMuaHZtOUuaPdL3uqvs/6Qfh/wDGn9nH9pzwoW+H/wAQfC3xk8L61FtvdGsrqw1LcjLuMd1YzbpI2" +
                        "A5aOaMMO4r+Hs54WzzIcR/tFGrh6kXo2nH5xktH6p2P7oyXirIs/wAN/s1eliKclqk1L5Si9V6NJn5N";
                    resourceString += "/t5fsOf8Eh9B8N+IPFHxY1PRP2YvFccUt3a3Pwj1K30/VJ5VBIjt/DkIuIbjLfeWG0DY/jUcj+i/CDxZ8" +
                        "Sa1eFLCRnjKd0v3kXKK83VdnH1c7eT2P5v8YvCPwzo0J1cZKGCqWbXspKMn5KkrqXooX81ufxsXTW1lr" +
                        "dy3hu+uZ7O0unbQdTniFpePHHMfIlaOGWURyEAMVWRtp4DHGa/08pqUqS9qkm1qt1tqrtK6+Sv2P8uqj" +
                        "jCq/ZNtJ+69nvo7Juz9G7dz/TR+HUniCX4feBJfFiyJ4pl0bS5PEqXi7ZhqDWURuBIOzeZuyPWv8HM7V" +
                        "FY2sqNvZ88uW23Ld2t8j/fHI5VngqLrX9pyR5r781le/wAzsq8w9QKACgD5j/aw/ZP+Fv7X/wALb/4bf" +
                        "Emw8m5h8y+8GeM7GNDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/EZ+1B+y/8AFL9kz4pap8Lvijpfk" +
                        "3MO698N+JLJXOna1pxcrHd2kjAZU4wyn5kbKsARWLVjpjK59Mf8E8/+ChnjX9i7xqNI1c3Piv4D+K7lJ" +
                        "PG/giN90tnK2IzqOnCQhUuEUDemQsygKxBCOjjKxM4XP7Q/h38RPBXxY8FeHPiL8OvEdt4r8GeK7ZNU0" +
                        "LXdLfdFNE2QQQQGR0YFXRgGRgVYBgRWxzNHlX7V37N/g39rL4C/ED4F+Nv9GsPF9rnR9cjQPNpWrWzCe" +
                        "yvYhlSTDMqllBG9NyE4Y19t4d8cYrhzOKOPoaum9V0lF6Si/Vdejs90fEeI3AuF4kyatl9fRVFo+sZLW" +
                        "Ml6Pp1V1sz/ADv/AI0fB/x38Avil42+D3xL0d9D8a+Ar6TRNZsnB2PtAeKeFiBvhnjZZYnHDIysODX+1" +
                        "PC3EuDzjL6WNwsualVjdP8ANPs07pro00f4k8VcMYzJsxq4LFR5atKVmvya7pqzT6ppn2L4d/4KeftP+" +
                        "Ff2Pp/2OtB8S/2f4WkmlsLbx3DJMNdtvDc8ZEmiwTA/Jbs5Pzj5whMQITivzLG+AmQYjiZZ1Up3qWvya" +
                        "cjmtqjXWVum1/eep+n4Hx/4gw3DDyWnUtTu1z686pvemn0jfrvb3VofB/g/wf4p+IHinQPBPgnQLrxT4" +
                        "u8U3UOieHvD2iQvPdXl1O4RI40QEkkn8Op4r9ezPM8PgsPOvXmoU4JuUm7JJbts/HssyzEY3EQoUIOdW" +
                        "bSjFK7beySP7dv+CXn/AAS88LfsWeFrf4kfEi3tfFP7S/im18vWNYj2T2vhi1nT59O05+QZCDi4uB9/7" +
                        "ifu8l/8pPH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/rL9H36PuH4Uw6xWKSnj5rV7qmn9iHn/ADS67" +
                        "LTf9fq/mo/poKACgD8wf+CwHwQ+Jfx8/Yf8d+D/AITeGLjxn4v0fUtH8Zx+FdHQy397a6bcl7hLWJfmm" +
                        "mVHLrEuWfBVAzEKf336NPFeAyfiyjWxlRU6UoyhzPZOS0u+ivpd6Ld2V2fz/wDSb4Sx+c8JVqODpupVj" +
                        "KM+Vayai9eVdXbWy1drK7sj8bP+CD37Kf7QHgv9pnxr8Y/iB8Ktc+HfgPQ/CmoeD49U8d6ZeaS97qepX" +
                        "9jLHDbRX8cTyhY7eR5HVSq4AJBYV/Tv0vPEPJsVkNLBYfEQq1pVYytCSlaMVJNtptLVpJPV622Z/Lv0P" +
                        "fDrOsJn9XG4nDTpUY0pRvOLjeUpRaSUkm9E22tFpfdHz1/wV6/Yy/aTuv26/id498HfBvxJ8Q/BfxdbS" +
                        "fEHg/xB4D0XUdXheSPR7PTri2mOnwyiKaO4gcBGIJQqw68fafRr8UMijwjh8PWxVOlVoc0ZRnOMX8UpJ" +
                        "rmaummtV1uuh8T9Jjwsz6XF+IxFDC1KtKvyyjKEJSXwxi0+VOzUk9HurPqf1E/8E8/hF4y+BH7Fv7Pfw" +
                        "s+IViNL8a+GtDM/iPSMhnsrnUr641U20hUkeZCLkRyYJG5Tgkc1/APjTxLhc34pxuLwz5qU5+6+6ilG6" +
                        "8na68mf6C+CfDOKyfhXBYTErlqwh7y7OTcrPzV7PzR9m1+Xn6mfin/wXS/Z/wDiz8dv2VfB0vwj8G3vj" +
                        "7U/hv4rt/F/iLw34ZglvNTbTZNLvNPea3toFaSby5J03qgLBSWxtViP6n+iTxlluUcQ1VjKqpRrUnGMp" +
                        "O0ebmjKzb0V0nZvS+m7R/Kf0vODMyzjh2k8HSdWVGqpSjFXly8so3SWrs2rpa212TPhL/g38+EHxa+Gv" +
                        "xh/aCvviL8LvEXgGy1Pw1plpp15410TU9KiuJU1QuyRvfQxB2A5IBJxX679MniXLcdlmCjhsRTqtVJNq" +
                        "E4yt7vWzdj8f+hhwxmWAzTGyxOHqUlKnFJzhKKb5ul0rn68/wDBQv8A4Ju/C79vXwnps+paifAXxj8G2" +
                        "8tn4E+JllALgCB3842N/BuQz2rOSygMGiYlkOGdH/mzwW8csw4PxMlGPtcLUd5027a7c0X0lbfS0krPZ" +
                        "Nf0x42eBWX8Y4aLlL2WKpq0KiV9N+WS6xvtreLd1u0/5Fv2hf8Aglj+23+zprc9jrnwX1L4ieHjJ5Gm+" +
                        "Ofg7bXXiPTLlScB2WxiNzb5PGLmGM56ZyM/6R8F/SD4UzukpU8VGlO2sKrUJL73yy/7dkz/ADT42+jxx" +
                        "ZkdVxqYSVaF9J0k6kX9y5o/9vRR/Ux/wRn+Enxt+HH7D0Pgv9ozw/f6U+t69rOo+CvAvj2JhdWHhS9sr" +
                        "OFLWezu13wpJcpdSiGRQdsmSAGxX+ff0oOJMqx3Fjr5bOMuWEVOcNnUTk+ZSWjajyrmXVeR/oX9FrhrN" +
                        "sDwkqGZwlHmqScIT3VNqK5XF6pOXO+V9HtqfmL+3Z/wQX8Ux6/rXxK/Yokt9X0LVJZdSvvgX4hvIrO6s" +
                        "JJG3lNJvLxkhkg5O2K4kRkAwHkzgfvfhH9L/DujDC55eM42SrRV0/8AHFap+cU0+y6/gHi/9DvEKtPFZ" +
                        "FaUJNt0ZNJr/BJ6NeUmmu76fhX4k/Yu/a98I6pPo3iH9mDx9p9/bkqVHhLXJopADt3RTQWzxyJkcMjEH" +
                        "1r+t8D4pcNYmmp08woNP/p5BP5pu69Grn8h47wr4mw1RwqZfXTX/TqbXyaVmvNOxgf8MrftP/8ARuHj3" +
                        "/wj/EP/AMiV2f8AEQsg/wCg6h/4Nh/8kcf/ABDviD/oAr/+Cp//ACJ/VL/wQL+Df7Rvwm+EXxvm+Mvhn" +
                        "WvA3gPxVq2j3Xwt8H+OLe50+5S6tre8TVbyOzvEjljiuBJaqHIAcxkjoSf89/picT5HmOZYRYKpCpWhG" +
                        "XtJQakrNx5IuSum1abt0vqf6IfQ14XzzLcsxbx1OdKjOcXTjNOLulLnkouzSleCv15dD93vEvhzQ/GPh" +
                        "zxB4R8T6ZHrXhrxVZXfhzxDo94CYbuxvoGtZ4XAIO2SN2U89DX8h4DHVcLXhWpS5akGpRa3TTumvRn9g" +
                        "4/A0cVQnRqxUqc4uMk9mmrNP1Wh/C3+29/wSb/aQ/Zf+JGpR+APAOtfGX4M67dzyeAPGXgbT7nV7yC2Z" +
                        "i8dpqlvp8TyQXMSYUyFBFL95Dncif62+FH0i8jz/AxeIrQw+KilzxnJRTfWUHJ2cX2vzR2fRv8AyI8Wf" +
                        "o4Z7w/j5LDUZ4jCyb5Jwi5NLpGairqSXW3LLdPdL9uvg7+zB+1V4j/4IlePPgH430O/k+L3iGxvtR+G3" +
                        "w78Vs8Oq2Wi2msWupWemSLdkGKV1tZDBC5GwSJGdmCF/lLibj7h6h4rUcwoTj9WhJKpOOsXNxcZTVt0u" +
                        "ZczW9m1fd/1lwv4f8RV/Cetl1eEvrM4t04S0koKUZRg77N8r5U9rpO2y/Mr/gjV+x5+0roX7dvw++J/j" +
                        "L4MeI/h/wCCfhFb+IrzxXrnj7R7/RovO1Hw5qGgwW0B1GKHzZjLeKxRMlVUk4GK/efpPeJmRVuEa2Fo4" +
                        "qnVq13BRUJKTtGcZtvlbsrR3e7aSPwL6Lnhjn1HjChi6+FqUqVBTcnOMoK8oSgkuZK7vLZbJNs/oq/4K" +
                        "C/8E6vhd+3p4I0621q+Pgf4seDo5k+H/wATbCATvAkvzvZ3sO5PPtHfDbdwZG+ZGGXV/wCJ/BnxszDg/" +
                        "FycF7TDVLc9Nu1/70X0kl8mtGtmv7f8afA/L+McJFVH7LE078lRK9r/AGZLrFvXunqnun/IR+0P/wAEr" +
                        "/22/wBnLU9Qj174M6j8QPC1mWa38f8AwhguPEOlzQjP711s4vtNuvHP2mGP8iCf9KOCvpB8KZ5Ti6eKj" +
                        "SqP7FVqEk+2r5Zf9uyZ/mdxt9HjizI6klUwsqtNfbpJzi130XNH/t6KPh//AIV38QPtX2H/AIQbWPtvm" +
                        "fZPsf8AZl75vm7tmzZ5ed2eMYzmv1j+2sHy83toW3vzL/M/JP7ExvNy+xnfa3K73+4+0v2ff+CXv7bP7" +
                        "RupadH4X+CeqeDPDN8ymXx98Vre48PaRFC3/LZWvo1nuE7f6NFKc9uDj8t4z8fuFMkhJ1cXGpUX2KbU5" +
                        "X7aO0X/AInE/VeC/o+8WZ5UiqWElTpv7dROEbd9VeS/wqR/ZJ/wT/8A2Dvh/wDsG/CW68F+HdRPi3x54" +
                        "umh1r4m/EO5t0t5NSuoYzHDDDGCxjtLcO3lRszHLOxOWIH+YnjJ4vY3i/MlXqR9nRppqnC9+VPdt9ZS0" +
                        "u7LZLof6ieDHg9guDstdClL2lao06k7W5mtkl0jHWyu92+p/Ml/wVt/Y0/ae1L9u/4p+NvCnwS8SePvC" +
                        "Pxbn0rWvBHiHwDo2oazbXGNJs9OkgkbT4pRFOk0LKY5MEjDDKsDX95/Rw8T8gp8IYehWxdOlUoKSnGco" +
                        "xa96Uk1zNXTT3Xmt0fwL9JPwt4gqcYYivRwlSrSruLhKEZST92MWnyp2aaej8nsz+pH9kH4CXngv9hv4" +
                        "Nfs9fGzw1a39zF4Ni8HfEnwbqPl3VsV1GCQ3djNsLI+1ZzE+0lSQcEjBr/P7xK4wjiuLcVmOBqNL2zlT" +
                        "ktH7rXLJdVtdde5/oR4ZcGywvCOFy3HU037FRqQeq95Pmi+j3s7adj+c/8AbU/4IMfF7wHret+N/wBkS" +
                        "Vfip8O7qR76D4Y6rdRW3ibSUdixhglu2SG+hjH3WMiTYwuyRgXP9t+Fn0vstxlKFDOP3Fdae0SvTl5tK" +
                        "7g310cet4rRfw94rfQ7zPB1p18m/f0G7+zbSqR8k3ZTS6O6l0tJ6v8AD7xn8BPjl8OtTfRfH3wc8U+C9" +
                        "WjJQ6f4o0DVbGU47qLmBNw7gjII5Ff1hlfGGU46nz4fFUqke8Zxf5M/krNeDs3wNTkxGFq05dpQkvzRq" +
                        "fD/APZp/aG+K2ow6V8N/gf4r8a3sz+Tjw9oGp3EcZyATLKkPlxqMjLOwA7mufOeOsly6DnicXSpr+9OK" +
                        "+5Xu/kdGS8B53mM1DC4SrUf92En97tZfM/oq/4Jvf8ABEPxf4O8d+FPjv8AthRWenyeEbi38R+DvgfYT" +
                        "W+ovJfwMJYZtYnhMlv5cTgOtvEz7zjzGCho3/ifxx+ldhsVhKmX5Nd+0TjKq046PRqmnZ3a05mlbom7N" +
                        "f2/4F/RMxOFxlPMM6svZtSjRTUveWqdRq8bJ68qbv1aV0/6gK/gQ/0CCgAoAKACgD5j/aw/ZP8Ahb+1/" +
                        "wDC2/8Aht8SbDybmHzL7wZ4zsY0Oo6FqJTatxbs2MqcASxE7ZF4OCFZU1cqMrH8Rn7UH7L/AMUv2TPil" +
                        "qnwu+KOl+Tcw7r3w34kslc6drWnFysd3aSMBlTjDKfmRsqwBFYtWOmMrn1N/wAE5f8AgoX4n/Yw8cSaF" +
                        "4lN14m+AvjKZT4w8KQuXk0y5bag1OwRuBKqgCWMYEqDB+ZUKuMrEzhc/tA8EeN/CXxJ8JeH/HngPxBbe" +
                        "KfB/im2j1fQNf0iQSW9zbyDhlPBBBBVlYBlYFWAIIrY5mj8jP8AgqV/wTt8M/t3/DGx+M/wRutPvPjv4" +
                        "J0+VvCmsaTPBLZ+LtJgMkv9lvcxP5XmByxtZidquSjkKxZP6a+jp46z4Xxn1XFNvA1Xr/07k9OdLt/Ml" +
                        "uldaqz/AJh+kf4DQ4pwf1rCpLHUY6f9PIrXkb6P+RvRN2dk7r+MjT/hD8U9U+JMPwcsfh3rM3xWnvh4a" +
                        "X4dNp10msrf52mB7SRFkRx1YMowOTgc1/qTW4ly+ngXjZV4fV1Hm5+Zctu/Ns/kf5V0eGcxqY9YKNCf1" +
                        "ly5eTlfPzduXdP12P7Vf+CXn/BLzwt+xZ4Wt/iR8SLe18U/tL+KbXy9Y1iPZPa+GLWdPn07Tn5BkIOLi" +
                        "4H3/uJ+7yX/AMsfH7x+xHFOIeGwzcMBB6LZ1GvtS8v5Y9N3rt/qx9H36PuH4Uw6xWKSnj5rV7qmn9iHn" +
                        "/NLrstN/wBfq/mo/poKACgAoA8J/aZ+O+k/syfA7x98dtf8Maj4x0L4dwW2qazoHhP7OdQktp76CyeSI" +
                        "XckUZEIm819zj5FbGTgH67gPhCpn2bUcBTqRpzqtpSlfluk3Z2TetrLTdo+P4+4wpZBlFbMKlOVSFJJu" +
                        "Mbc1m0rq7S0vd67Jmj4R+Ofgfxd8ANA/aQgnk074d654Tg+MUkt6E8+00qTShq8glVGKiSKPIcA4DAjN" +
                        "YZlwli8NnM8savXjVdLTZy5uVW8m9vI6Ms4uwmJyaGZptUJUlV13UeXmd/NLfzPFv2IP23fht+3Z8NPE" +
                        "vxK+G+gap4VtfCmty+CNW0DxkLMXqyx2VtfJMBYzzp5Ui3O1SWB3Kwxxz9V4r+FOO4Rx9PC4mcZucOdO" +
                        "N7Wu1bVJ3VtfJo+U8JfFnAcYYCpisLCUFCbg4zte9k76Nqzvp5pmz8GP2vvBPx0+P8A+0V8BPBfhnVDd" +
                        "fs03FhonjfxzefYxpM+o33mKLW28qZ5S6Pbzq+9FwYz6iuXijw1xeUZNgswr1I2xibhBX5lFW1elrNOL" +
                        "Vm9zq4W8TcJm+dY7LqFOV8G0pzduVyd9Fre6akndLZn1rX5wfpIUAFABQAUAFAHwj/wUR/bH1L9hv4BW" +
                        "fxo0rwHB8Rbq68Qad4JPh/UL+TTY1S+tru4MvmxwXByv2bG3bznrxX674KeGNPi3OHgZ1nSSpynzKPNs" +
                        "4q1rrv3Px/xu8UKnCOTLHQoqs3UjDlcuXdSd72fbsfd1fkR+wBQAUAfPX7VX7Rfhf8AZN+Avjz9oHxno" +
                        "d/4k8NeAP7L/tLRfDAtzfTf2rrNpokflfa5Io/lkvFZssPlBxzgV9p4e8E4jiPOKOXUJxhUq81nK9lyx" +
                        "lN3sm9o223PivETjjD8N5NWzGvCU6dLluo2u+acYK12lvJPfY+VviH/AMFGNW8G3Hg5/C37Enxo+MWg+" +
                        "NfDeg/EnTPF3wm8Iy6xpSw69p6aglq1zbuUM8KyBZVUkA9zX6FkvglTxSq+1zXB4edOpOm41KnLK8JON" +
                        "7PWztofnWd+ONTCul7LKcZiIVKcKilSpc0bTipWutLq9n5ng3w//wCCzOmfFnQn8U/Cv9hL45fEvwzHc" +
                        "SaVJ4j+H/hOPWbBbqFVeSE3GnTzRiRQ6ll3ZAIyORX1+c/RfqZdW9li83wVGpa/LOpyuz2dpJO2m58fk" +
                        "v0paeZUfa4TJ8bWp3tzQpc6ut1eLavqtD9m9PumvrCxvmtZLJryGK6ayvF2TQmRA+yRezLnBHrX8vVqf" +
                        "JNxveztdbP0P6lo1OeClZq6vZ7r1PjL/gn/APta6j+2t+ztpvxy1TwRD8Pru/1bVPDZ8O2F8+oxqunSr" +
                        "GJPOkhgJL7um3iv1Hxk8OIcK53LAQquqlGMuZrl+Lpa7/M/LfBjxJnxXkkcfOiqTc5R5U+b4et7Lf0Pt" +
                        "mvyo/VwoAKACgAoAKACgAoAKACgAoAKACgAoAKACgD5j/aw/ZP+Fv7X/wALb/4bfEmw8m5h8y+8GeM7G" +
                        "NDqOhaiU2rcW7NjKnAEsRO2ReDghWVNXKjKx/EZ+1B+y/8AFL9kz4pap8Lvijpfk3MO698N+JLJXOna1" +
                        "pxcrHd2kjAZU4wyn5kbKsARWLVjpjK5d+G37YH7Q3wj+EHxA+BfgD4jXeg/Dn4kY/tzSYDmW33/AC3H2" +
                        "KY/PbfaU+SfyyN68Gi4OKPtT/gmZ/wUL+Lf7NXijTPglbeCtQ+Nfw28falFDpPw70Bi+tafqV24jaTSR" +
                        "JlG8370lu5VGYbg0ZLszjKxM4XP7HbOGC4NvrM2k/2fqtzbRwzC7W3N3DGf3vkSSQNIp2MTkK7LnJBPW" +
                        "un2suXlu7b26X7nF7KPNzWXNa1+tuxo1BoFABQAUAFAHmfxp+G2n/GP4P8AxS+EuqlF0/4l+HtY8C3M0" +
                        "wJEQ1XT5bIScAkFDIGBHIIBHNe9wtnk8szPD4yHxUakZ/8AgMk7fO1jwOKsihmmWYjBz+GtTlD/AMCi1" +
                        "f5XufzWeBf2jPEmm/8ABDPxX8Jg0kfxesvFN7+xFZ6JcELdvea3rQvXs2UnkjTLuaFcf3Mdia/unN+CK" +
                        "FTxap4z/mGdJYtvpaELc3/gyKl8/Q/hDKOOK9PwiqYPX60qrwiXW853cf8AwXJx+Xkz6T/YusPD3/BPn" +
                        "9tH9s39nbVLoWfw3svhd4U/aF0CZh5aTweD9AhstWnjL4y8ss87OTy3l7j0NfC+KVatxnwtleZQV67xN" +
                        "SjLydWbcE/JJRS7Xsfd+FdGhwVxVmuWTdqCw1OvHzVKCU2vNtyb72ueG/s+ftCeLf2NP+CbHjL9rldNs" +
                        "r79of8Abw+J2q6n4JPid/LtYbzVbu6t4rm781kzb2/2K7ulZiFYyoGIVq+s4z4Lw3FHHVLJ+ZrBZZhoq" +
                        "fLu1FJtR/vS5oR01XK7K6PkeCuNcTwtwHVznli8dmeJk4c2ycm0nL+7HlnLXR8yu7M7f40/Gz9or9kP4" +
                        "b6L+0xon/BTjwz+1d4q8OXukyfGT9nqeTwidL1Wy1K9htJ49Gi0mZriIwPMo3RorbA0p2hTGfK4W4VyT" +
                        "iXHTyupkFTA05qXsq/73mi4ptOo5Lld0no21e0dW1I9birizPOGcDDNKfEFPHVIOPtaH7rlkpNJqmovm" +
                        "Vm1qkna8tEnF/0R+DvFOl+OfCHhXxrobmTRfGGm2PinR5JMbmtdQtUu4idpIyUkHQ1/FOZ5fUwmJqUKn" +
                        "x05OL9Yuz/FH9u5XmNPF4anXp/BUipL0krr8Gfg58N/GX7fn7XX7Uf7b/wH8C/tOv8AA/4RfA/xpf2J+" +
                        "IFr4f03VtagguZ7m103RtPWQWqrCotJZp5jIZRhF3ANz/XueZXwdw3w/lOYYjAfWcTiaKfJzyjBtJOdS" +
                        "W+vvJRVuXd20P48yLNOM+JuIc3y/D5h9Ww2GrNc6hGU0m2oU47ae63J35tlfU5f9nb4gf8ABST9or4jf" +
                        "HH9hvWf2m9O+HV/+y7qt1bfED9pvRNAs7/xTr9hczmDSbSC1d4IIg4hkmluARMF2IxLBi/ocbZNwNkmB" +
                        "wmfQwEqqxsVyYdzcacGlecm9W7XSUdY3u1pa3n8EZ1x3nmOxeQTzCNF4KT58QoKVSabtCKjolezblpK1" +
                        "k9b3+uf+Ccf7QH7QF78Zf2qv2Mf2mfG8PxV8e/s0XunXPhX4qw2kdndazoupK5X7VHbjYHRDA65LSfvG" +
                        "VmbZuP5t438G5NDK8uzvK6ToUcYpc1O91Gcf5W9dXzLovdTSV7H6V4GcaZ1PNMxyPNayr1sG48tS1nOE" +
                        "v5ktLpcr6v3mm3a58sftXeJ/j/+zv4f8e+O9W/4LE6JN+0J4FtrvxdpP7Pk+j+DdNsb+Gzja4Glf2XHP" +
                        "NN500a7IZJYiZH4wCdy/oXh3gMmzutRw8OGZ/UqrUXW5qsmm9OfnslZPVpPReln+eeI2YZ1klGtiJ8UQ" +
                        "+u0k5Khy0oqSWvJyXbu1om1q9Ot1w//AAU9+O11+01/wR3+AXx01HTIdG1f4heJPDWpa9pmneZ9mi1G3" +
                        "s9YsbsQiYlhEZ4HKBiSFwCW6n1vAPhGOQ+JuMwEZOUaVOok3u4t03G9utmr+fRHkfSA4wln/hhgswlFR" +
                        "lVqU20tlJKopWvra6dvLq9z7F0v9ob47ft5ftST+D/2U/iFdfC79jr9n6+k0r4yfHjw5badcXXjPXkCu" +
                        "2k6RJqMVynkqhX98icKxkJIaAP+Y4jgvKOEOH1Wzaiq2Z4qN6VGTklSh/PNRad7/Zb3XLpabX6hh+Ns4" +
                        "4x4hdDKK7oZXhZWq1oqLdWf8lNyTVrfaS2fNreCfFfHT9qf4jfHX9sr4k/st+A/2rNE/Y0+DH7P1jYn4" +
                        "n/FHUJtCj8Q+Itf1KETrp+mtr0qLHFACRI8YDKyNuLB0Ferwj4e4HKOGKGa4jLp5hisVJ+zppT5IQi7c" +
                        "0+Rat9E9GmrWszyeL/ETHZxxTXynD5jDL8LhYr2lRuHPOclflhzvRLq1qmne90dd+w5+0/8TrD9rX4n/" +
                        "sT/ABM+P2lftYeHtM8NRfF74N/H3w3/AGSbuSwW5gs7nTNSOiySwvNG0+QzNv8AkJYlZEVPN8WeAcBPh" +
                        "zD55hcHLAzdT2VWjLmtezanDnSaTtstNVbVNv0/CPxAzCHEmIyLFY2GOhGn7WlWjy35bpOE+RtNq+710" +
                        "bbtJJeo/wDBaL/lGl+0n/3J3/qfaHXz/wBFz/ku8D/3F/8ATNQ+h+lR/wAkFj/+4X/p6mfZn7K3/JsH7" +
                        "OH/AGIXg/8A9R60r8w8Qv8Akf47/r/V/wDS5H6l4d/8k/gP+vFL/wBIiflz/wAG/wB/yYpq3/Y++IP/A" +
                        "E3aXX7/APTJ/wCSuj/14h/6VM/nv6GH/JIS/wCv8/8A0mB+4Ffygf1qfyuf8Esfgp+238dP2NWsvhF+1" +
                        "JF+y38L/C2t63B4Pj8N+H7fV9W8R63I8dzPPfXVxNG1taRFkhRIcljvLKQFz/oR9IPirhTKOJ+bGZe8b" +
                        "iJwhzc03GMIapKKSfNJ6tt7aJPe3+d/0eOFOLM34X5cHmCwWHhOfLywUpVJ6NuTbXLFaJJb6tra/wCoX" +
                        "/BOH9pn4+/tQfs7fHPwP8TvEFlpX7TXwL1vXfgpf/EK2sIJbSTUobRkstSmtYkigkaK43iSNFVXEYO0b" +
                        "zX4D44cB5PkGd4SvhYOWAxMIVVC7vyt+9BN3avG1m22r76H9BeBnH2c8QZHjMPipxjmGGnOk52VuZL3Z" +
                        "tKydpXukknbZXPgH9qb47fHP9jvRLr4reGv+CtGg/tE/GPwPqNh/wAJ/wDs16tp3hKG11a2udQhtLi2t" +
                        "9P0ieeS0eHzN8iAJIIgzq6FRu/ZPD7hHKeJqqwlXhyeEwtSMuSupVG4tRbTcpJKSdrJ6rmsmnfT8Y8Q+" +
                        "L834YpPF0uJIYvFUpR56DjSSknJJpRi24tXu1o+W7TVtfp3/gox+2J+0R4HsP8Agnj4p/ZZ1MaZrH7Su" +
                        "posHgbVo7aaz1qXWbTR30yyvHmiEgjEt+A5jaNiCeRwR8D4I+GWSYuedUs2jzRwcfjV04KLqc8o2dr2j" +
                        "pe68mff+OPifneEhklXKZcssZL4HZqbkqfJGV1e15a2s/NHFftN6B/wUw/Yo+G4/a9b9suP9oSHwTcaf" +
                        "qnxs+COteFtO0vQH068uorWVNOa1LSCKGSZVLqsMmzMmRgofV4DxnAnFWO/sb+y/qrqKSpVVUlKfMk2u" +
                        "e+l2lezclf3ezPK4+wXHvCmA/tn+1Vi1TcXVounGMOVtJ8ltbJu10ou3vdLHT/tv/tkftEWvjD/AIJn6" +
                        "/8Asf6+tvF+2JY63LZ+CPFkNs+k3UmqaboT6VPqDCB50WxbWGmmEbjIjwR1rz/CjwxySWGz6nnMLvASh" +
                        "ecW+ZcsqnOo62fPyWV097noeLXijnccVkFTJZ2WYRnaEkuV80afI5aXXJ7RylZraxxf7Tr/APBRr/gnl" +
                        "4X0X9q/UP2uW/aq+Hmj6lpdh8ePhZ4s8M6botnHaajdJZiXT2szMYIzNKsStGY2R2QssilkHq8BLgjjX" +
                        "ETyiOW/Uq8oydGpGpKbvFXtK9ruybad00mk4uzPK4/fHPBOHhnEsz+vUIyiq1OVOMFaTteNr2V2krWab" +
                        "Takro9l/a6/bb8XeKfjV8Af2Xf2f/jZof7OVh8XfCkHx7+In7R/xAGlN/ZHhe/ST7Fa6fFq0qW7Xlx5Z" +
                        "JDHI3IVYDew+X8NvCnDYfKsZmuY4SeLlQqujChDm96orczk4rm5Y3/B3T0R9T4l+LGJxGa4LKcuxcMJH" +
                        "EUlWnXny+7Td+VRUny80rfirNas8/8AhN+0p8Tf2dv21fgj+z1rv7Ymm/ttfAr9pW21PS9D8SCXQLrxD" +
                        "4T8R6dD5ypPLoMspeC4LRqvmkAh2KgeUxf2eI+BcBnfCuLzGnlksuxeDcW4++oVISdtFNKzjq9Oyu3zK" +
                        "3i8N8eY/JOK8JltTNI5lg8YpJS9xzpzir6uDd1LRa93ZLld+P8Ahl8RP2/P2tf2s/24f2dvAf7Ssfwa+" +
                        "EPwV8ZXEV98QoNC03VPEOnWNxdXtnp2jaYkggRY5fscskk7N5i+WAG+Yq3p59knB3DnDmU5liMB9YxOI" +
                        "oq0OeUYSaUXOpPd3XMkor3XfbS68zIM84z4k4kzfLcPj/q+Gw1Z3nyRlOKbkoU4LRWfK25P3lZa62f0Z" +
                        "+wB8cf2l9D/AGm/2lv2Fv2ovHa/GPxN8ErHTPHXgL4vLZW+nz6hol+tuwW5jgHzMy30DKWZmRhIjO4Ck" +
                        "fEeMnCeRVchwGfZVR+r08TKUJ0ruSjNX2b/AMMl0TXK0lqfceDHF2fUc/x+QZtW+sVMNGM4VbKLlB23S" +
                        "3+KL6tPmTb0P2Dr+aD+nAoAKACgAoAKACgD5j/aw/ZP+Fv7X/wtv/ht8SbDybmHzL7wZ4zsY0Oo6FqJT" +
                        "atxbs2MqcASxE7ZF4OCFZU1cqMrH8Vnx0/Y0+O/wG+O9v8As+6/4Pudf8Za/cpafDybw1BLcW/iW3uJf" +
                        "KgnsCBlgx4dT80bZD4INYtHSpJo/qW/4Jt/8E2/DX7IHhqD4g/EGC28S/tEeJbby9V1WPbPbeHLadfms" +
                        "LBuQXIOJ5x9/wC6vyZL6RjYwnO5+rNWZhQAUAFABQAUAFAH8w+lfsnfF1P+CuurfDF/A2qj9l5fiZH+2" +
                        "4fFg069XQxrEPh+XVY0S4KfZy39oXQtzHnICnAxX974jxFy1+G0cV7aP9ofVvqnLzLn5XNRel+b4FzX8" +
                        "z+AcP4cZmvEuWF9jL+z/rP1vm5Xycyg5LX4fjly230PTf8Agtt8G/jXc/En4H/GD4AeCNX8aeIvHnhXx" +
                        "f8Asx/ES28JadeX7ro2rxYtln+xxvsjY6ldHc+FDAdcnHg/RU4nyqOBxeDzGrCnClVpYiHNJL3ovW12r" +
                        "v3IaLWx730seFs1lj8JjcuozqTq0quHnyxcvdktL2Tsvfnq9LpH0X/wUE/YS8YeK/2CPgV8Jfgd4btfH" +
                        "Xi/9k+68LeI9F8DXaRvF4ltdC0qTSb238qbYkrziXz2ViDJtZRlnAPxPgz4u4bD8YYvGY+o6VLHKpFzW" +
                        "9NzkpRd1slblTW109kfceNPg/isTwbg8HgKaq1cC6clB7VFCLjJWdrt35mnvZrdnzL4P+M//BMTxBa6L" +
                        "oWr/wDBLfxJpfxeujbafr/wl0r4Qpf39lfS/u5FVwsPmQpIrgOVVyqk+WDlR95mfC3H1GU6kOIKcsMrt" +
                        "VHibJrp3s2raXau/i6nwWV8VeH9eMKc+HqkcU7KVJYXmkn17XSd9bJtL4U9D+ijRtH0rw9pGlaBoWnQ6" +
                        "Poeh20Gj6NpOmxrDb2tpbRLBDDFGgCqiIoVVAwAMV/E+KxNSvVlUqScpybbb1bb1bb7tn9vYXC06FKNO" +
                        "nFRhFJJLRJLRJLslsflB/wTr8FeMvC/7Un/AAVC1jxL4S1Pw7pPi74lW2q+FNU12wurS31S1EurEzWkl" +
                        "wiLPGN6/NGSORzzX9FeNma4XEcP8PwpVIzlTw7Ukmm4u0NJJPR+TP5x8D8qxWH4h4gnVpShGpiE4txaU" +
                        "leesW1qvNHM/sLeBfG/h7/go1/wU48UeIPB2q6H4Z8W6l4dl8K+ItY0+7trHU0ia93taXE8axzBdwyUY" +
                        "4zXd4t5vhK/BGQUqdWMqlOM+aKkm4/D8STuvmcHhDk+LoccZ/VqUpRp1JQ5ZOLSl8Xwtqz+R5n8Nfh18" +
                        "dLX9vr/AIK1+I/AfhfVfDviDxp4Gt9O+CfjbU7G4tNNu/EI8PQRWTW15cpHBIY7kLu2vgYOcYr3s9zvK" +
                        "JcHcOUsRUjOFOs3VgmnJQ53zXirtXjfoeDkOR5vHjLiSrh6coTqUEqU2moufIuW0nZO0rddD8//AIFax" +
                        "8JPDH7E3xP/AGbrf9hjxj42/wCCg3jDR/Gng/xxrOu+BTdapa6jrUeoW0eqza1qieZawW1tKCqLtYyoQ" +
                        "AS5lP7JxdhsyxHFWHzN5vSp5LTnSlBKtaLjHlbgqcdJOUlu7rlflyn4vwhistw/CeIytZRWqZ1UhVjNu" +
                        "jeSlPmSm6ktYqMXsrPmW2vM/Sv2gfhF8WNV/wCCFn7Lnw90v4YeItS8faP4ltbnVvA9houpTaxaxpqPi" +
                        "Is01nHCZkUCRclkH3h6ivD4N4ly6n4t5hiZ4imqMqbtNziov3aW0r2ez69D3uNOGcyqeEOX4aGHqOtGo" +
                        "rwUJOS96rvG11uunU+pvGXwV8Zf8Es/2pfCXxq/Zj+HOt+Mf2OPjn9i8A/Hv4KfD+z1HW7zw5f2cBS31" +
                        "e0t4RPO4ChpQSGyfNiZl82Ir+e5ZxVhfEHh+pgc0rwp5nhrzo1ZuMFNN6wk3ZLWy6fZkk+WV/0PNOFMV" +
                        "4ecQ0sdlVCdTK8TaFalBSm4SS0nFK7el31+1Ftc0beRfGz4S+Av2bP25fjb8dv2j/2Srr9qX9lL9qGDS" +
                        "vGHhr4j6L4Xi8TXng7WYrcLNDPbSqrQRSmRy2dpdBEV3ujqPpeFeI8ZnvCWEwGWZksFmOCcoyg6ns1Vj" +
                        "fRprdqytvZ817JpnzPFfDeDyHi7F5hmeWvG5djVGUaip+0dKSWqaeyd3fa65bXaaP0H/YX179ifx98Qf" +
                        "Fev/sv/ALIWpfBq/wDDukxRyfFnWPAA8K2Oo2+oTI0llaXbfNI48tHkQhcjBG4DI/GPFvB8VYPBU6ea5" +
                        "lHEKcv4are0cXFaSlHpu0nr2dj9r8IsZwpjcbUqZVlksO4R/iOj7NSUnrGMur0Ta07q50X/AAV78K+KP" +
                        "G3/AATu/aF8MeDPDd/4u8S6n/wif9m+HvDFncX99ceT450a4k8qC0SSR9kcbO2FOFBJ4Bri+jXmOHwnG" +
                        "uCq16kadNe0vKTUUr0aiV27JXbt6nb9JjLsRi+CMbSoU5VKkvZ2jFOTdq1NuyV27JN+h9c/szaff6T+z" +
                        "f8As+6VqtlNpmp6Z4I8KafqWm6hG8M9vPDoNrHJHJHIAyOjAhlIBBGDX5tx5WhUzzGzg04utUaa1TTm7" +
                        "NPqmfpXANGdPIsFCacZRo0009GmoRumujR+a/8AwQu8C+N/h5+xVqmg+P8AwdqvgfXX8b67qCaL4w0+7" +
                        "0y7MEmn6aqSCG9jjfYxQgNjBwfSv3T6W2b4TG8VRqYerGpD2MFeMlJX5p6XTaufhH0Q8nxeC4UlTxFKV" +
                        "Kftpu0ouLtyw1s0nY/Zav5gP6kPyO/4IleCvGXgH9hbQfD3jvwlqfgrX4/EviK7k0PxbYXWm3ixS3EZR" +
                        "zDeRxuFYDg4wa/pD6Vea4XGcXTqYepGpD2cFeLUls+qbR/NX0T8qxWC4QhTxFKVOftJu0ouLtddGkz4O" +
                        "+EHwj/aYg/Zc/4LFaF8NfBWv+GviZ488f6zqHw/huNO1CxvNZ0mTVpXvxpnmJG87XFgZo4TFnczKBkkV" +
                        "+v8S8SZC+IOGKmKqwnQpUIqfvRajLlXLz725Z8rd9knc/HuGeGs/XD/ABRTwtKpDEVa83D3ZJzjzPm5N" +
                        "r80OZK27asfNvjjV/gh44/4JxT/ALN37Ln7C/i24/aJh0Tw9H8aPGreA2jv9GvtG1PT9W1ee51iaJrm5" +
                        "kuprXZDBGcmOQAKgQR19zlOGzbCccLM81zeksFzz9lD22klKMowSgnyxUU7uT6rd35j4TNsTlOL4GeWZ" +
                        "TlFV45Qh7Wfsfeg4SjKbdRrmk5NWjFdHskuU+i/+CiV/wCN/BHgH/gibqfhXwbP4j+JHhDUfC1/4c+H1" +
                        "4Gs7m/1vT7LwvJb6c4uApieWeNYjvA2k89K+J8FKOExeM4qjVqqFCpGopTWqUJOteStuknfTc+48bq2L" +
                        "wmD4TnRpOdenKm4wejc4qjaDvs3JW12PW/2vf25fEX7bPwV139kH9l79m/4it8afjE1j4U8c2vxK8Mza" +
                        "JZeELAXsU94dRuJpHjjb935RdsIoYtu3BVPzfhr4S0OFc1hnOa47D/VcPeUPZ1FN1XZqPKkrve9t3a1r" +
                        "Xa+l8TPF2vxZlU8lynAYj63iLRn7Sm4Kkrpy523ZbWvsrt3vZPh/wDgoL4b8Xfsq+Pf+CL3hL4WeFZ/i" +
                        "z4r+AkfiDQdL8KaQFiu/Ef9gab4VgvI4AwOJ7qKGUoApO9hhScA+t4M47DcQ4Pimti6ioU8U4Nye0OeV" +
                        "Zxb8otq/ktWtzyfGnAYnh3GcK0cJTdephedKK3qckaKkl5ySdvN6J7G/wDtn/tdeIf+Ci3wnh/Yu/ZV+" +
                        "APjtvF/xX1TQ4Piv4g+KXhu40PTfB+nabqdvrDfbp3aVUkWe2jLnO3YGCF3ZVPH4XeG1HgnMXnebYyh7" +
                        "KhGfs405qcqspRcfdWl1Zu3W9m7JNnZ4p+JdfjjLVkeUYKv7WvKHtJVKbhGlGMlL3nrZ3Sv0tdK7aRH+" +
                        "2r+ydZ/s+/tIfs+ftK6v+zdL+1x+zL4W8BaZ+z58Y/Aun6PHrmr6YdCtpLaz1mOzkJB/dLEN7fKux0d0" +
                        "8xGD8LPEWWdZHjcshjlgcfOvKtSm5ckZc7TlTcvW+m7umk+VonxV8OI5LnuCzSeAePwEKEaFWCjzyjyJ" +
                        "qNRR9La7KzTa5kz6M/ZN8Y/8E6fin8bfBtl+zv+w9qfhPxdpcd34ns/i3efDNND0vQJrGKQbZdRfmKd2" +
                        "Bjj2qQWyu7OAfiPEbLONsvyqrLMs2jOlK0XTVfnlNO20eqW7621sfc+G+acD5jm1KOW5RKnVjeSqvD8k" +
                        "YNX3n0bei6X0uWf+CcHgXxv4W/bV/4Kv694n8Har4c0Lxl430DUPCGta9p93Z2mqwR6h4nZ5LOa4jRJ0" +
                        "UTIS0ZIG5fUVHjhm+ExHCvDtOlVjOdOjNSSkm4vlo6SSd09Hv2ZfgXk+Lw/FfEdSrSlCFStBxbi0pLmr" +
                        "axbVmtVtfdHS/B7wV4ysf8Agsb+1t45vfCWp2fgrWvhr4a0rRvGF1YXUel3d1Eui74Ybt0EMki+W25VY" +
                        "kYORwa4eJs1ws/DHLaEakXVjiKjcbrmSftNXG90tVrY7+GMqxUPFDMsRKlJUpYemlJxfK2vZ3Slazej0" +
                        "TPpP9hr9sDX/wBsbwR4+8Ya/wDAXW/gLN4K8Q3Hge20fxlNJcNfpBBHKZleWzsisiF9ksQVgjYG9s8fC" +
                        "+LPhpR4YxdGjTxkMUqlNTvFWtdtW+KWj3Turroj7zwj8Ta3FGErVqmDnhXTqOFpO97JO/wx1WzVnZ9Wf" +
                        "b1flB+shQAUAFABQAUAFAGReeH9B1HVdG13UNEtL7XPDv2j/hH9ZvLaGW7sPtkYhn+zzOpeLzUAV9hG4" +
                        "cHIoA16ACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKACgAoAKAPz1/bS/ZA" +
                        "8b/ALS/xe/Yl+InhTxNpWg6Z+zF49tPiv4tsfEJuxPqFnb6ppV80Np9mhlXzStg4HmFRkjnrj9o8LfEv" +
                        "CZDlma4atTlKWMoOnFxtaLcZq8rtae8trs/FPFXwyxefZnlOJo1Ixjgq6qSUr3klKDtGyevuvey2P0Kr" +
                        "8XP2s+Df2oP2UfGXxz/AGmP2IPjd4e8R6ZpGgfsvax4l8R+LtJ1k3QvNQi1qLS44ls/IikTchsW3eYyj" +
                        "kYzzX6/wD4iYXKchzbA1ISlPGwpxi1a0eRzvzXaevMrWTPx3xA8OcVm+f5Rj6dSMYYKdSUk73kpqFuWy" +
                        "a05Xe7R95V+QH7EFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFA" +
                        "BQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAFABQAUAf/9kL";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.XtraReports.UI.XRSummary summary1 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary2 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary3 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary4 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary5 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary6 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary7 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary8 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.StackedBarSeriesLabel stackedBarSeriesLabel1 = new DevExpress.XtraCharts.StackedBarSeriesLabel();
            DevExpress.XtraCharts.PointOptions pointOptions1 = new DevExpress.XtraCharts.PointOptions();
            DevExpress.XtraCharts.StackedBarSeriesView stackedBarSeriesView1 = new DevExpress.XtraCharts.StackedBarSeriesView();
            DevExpress.XtraReports.UI.XRSummary summary9 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary10 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary11 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary12 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary13 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary14 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary15 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary16 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary17 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary18 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary19 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary20 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary21 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary22 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary23 = new DevExpress.XtraReports.UI.XRSummary();
            DevExpress.XtraReports.UI.XRSummary summary24 = new DevExpress.XtraReports.UI.XRSummary();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.pageFooterBand1 = new DevExpress.XtraReports.UI.PageFooterBand();
            this.reportHeaderBand1 = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.ReportFooter = new DevExpress.XtraReports.UI.ReportFooterBand();
            this.GroupHeader1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupHeader2 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupFooter2 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupHeader3 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupFooter3 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.GroupHeader4 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.GroupHeader5 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label32 = new DevExpress.XtraReports.UI.XRLabel();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label44 = new DevExpress.XtraReports.UI.XRLabel();
            this.label41 = new DevExpress.XtraReports.UI.XRLabel();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo3 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label198 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.label36 = new DevExpress.XtraReports.UI.XRLabel();
            this.label35 = new DevExpress.XtraReports.UI.XRLabel();
            this.label37 = new DevExpress.XtraReports.UI.XRLabel();
            this.label39 = new DevExpress.XtraReports.UI.XRLabel();
            this.label38 = new DevExpress.XtraReports.UI.XRLabel();
            this.label33 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.pageInfo4 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label34 = new DevExpress.XtraReports.UI.XRLabel();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.label27 = new DevExpress.XtraReports.UI.XRLabel();
            this.label28 = new DevExpress.XtraReports.UI.XRLabel();
            this.line9 = new DevExpress.XtraReports.UI.XRLine();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.line4 = new DevExpress.XtraReports.UI.XRLine();
            this.line2 = new DevExpress.XtraReports.UI.XRLine();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.pageBreak1 = new DevExpress.XtraReports.UI.XRPageBreak();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.RepVentaNeta = new XtraReportSerialization.RepVentaNetaDataSet();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label47 = new DevExpress.XtraReports.UI.XRLabel();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.label26 = new DevExpress.XtraReports.UI.XRLabel();
            this.label25 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label24 = new DevExpress.XtraReports.UI.XRLabel();
            this.label50 = new DevExpress.XtraReports.UI.XRLabel();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.label52 = new DevExpress.XtraReports.UI.XRLabel();
            this.label51 = new DevExpress.XtraReports.UI.XRLabel();
            this.TableTableAdapter = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand1 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection1 = new System.Data.OleDb.OleDbConnection();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.FieldCaption = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DataField = new DevExpress.XtraReports.UI.XRControlStyle();
            this.SaldoMes = new DevExpress.XtraReports.UI.CalculatedField();
            this.SaldoAcum = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado1 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado2 = new DevExpress.XtraReports.UI.CalculatedField();
            this.PorsentajeAcum = new DevExpress.XtraReports.UI.CalculatedField();
            this.PorsentajeMes = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado3 = new DevExpress.XtraReports.UI.CalculatedField();
            this.Resultado4 = new DevExpress.XtraReports.UI.CalculatedField();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label45,
                        this.label46,
                        this.label43,
                        this.label40,
                        this.label42});
            this.Detail.HeightF = 24.04162F;
            this.Detail.Name = "Detail";
            this.Detail.Scripts.OnBeforePrint = "Detail_BeforePrint";
            // 
            // pageFooterBand1
            // 
            this.pageFooterBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line7,
                        this.pageInfo2,
                        this.pageInfo1});
            this.pageFooterBand1.HeightF = 24.25003F;
            this.pageFooterBand1.Name = "pageFooterBand1";
            // 
            // reportHeaderBand1
            // 
            this.reportHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label32,
                        this.label30,
                        this.label31,
                        this.label29,
                        this.label44,
                        this.label41,
                        this.line6,
                        this.pageInfo3,
                        this.label198,
                        this.pictureBox2});
            this.reportHeaderBand1.HeightF = 168.2916F;
            this.reportHeaderBand1.Name = "reportHeaderBand1";
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.HeightF = 38F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.HeightF = 40F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // ReportFooter
            // 
            this.ReportFooter.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label36,
                        this.label35,
                        this.label37,
                        this.label39,
                        this.label38,
                        this.label33,
                        this.pictureBox1,
                        this.pageInfo4,
                        this.label34,
                        this.line1,
                        this.label27,
                        this.label28,
                        this.line9,
                        this.label21,
                        this.label22,
                        this.label23,
                        this.label15,
                        this.label8,
                        this.line4,
                        this.line2,
                        this.label3,
                        this.label2,
                        this.label6,
                        this.label5,
                        this.pageBreak1,
                        this.chart1});
            this.ReportFooter.HeightF = 966.8757F;
            this.ReportFooter.Name = "ReportFooter";
            // 
            // GroupHeader1
            // 
            this.GroupHeader1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label4});
            this.GroupHeader1.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Rama", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader1.HeightF = 18.00001F;
            this.GroupHeader1.KeepTogether = true;
            this.GroupHeader1.Level = 1;
            this.GroupHeader1.Name = "GroupHeader1";
            this.GroupHeader1.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            // 
            // GroupHeader2
            // 
            this.GroupHeader2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label10,
                        this.label9});
            this.GroupHeader2.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Cuenta", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader2.HeightF = 23.00002F;
            this.GroupHeader2.KeepTogether = true;
            this.GroupHeader2.Name = "GroupHeader2";
            this.GroupHeader2.Scripts.OnBeforePrint = "GroupHeader1_BeforePrint";
            this.GroupHeader2.Visible = false;
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label14,
                        this.label7,
                        this.label13,
                        this.label18,
                        this.label12});
            this.GroupFooter1.HeightF = 23.00002F;
            this.GroupFooter1.Name = "GroupFooter1";
            this.GroupFooter1.Scripts.OnBeforePrint = "GroupFooter1_BeforePrint";
            // 
            // GroupFooter2
            // 
            this.GroupFooter2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label20,
                        this.label11,
                        this.line3,
                        this.label17,
                        this.label19});
            this.GroupFooter2.HeightF = 29.04165F;
            this.GroupFooter2.Level = 1;
            this.GroupFooter2.Name = "GroupFooter2";
            this.GroupFooter2.Scripts.OnBeforePrint = "GroupFooter2_BeforePrint";
            // 
            // GroupHeader3
            // 
            this.GroupHeader3.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label47});
            this.GroupHeader3.GroupFields.AddRange(new DevExpress.XtraReports.UI.GroupField[] {
                        new DevExpress.XtraReports.UI.GroupField("Orden1", DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending)});
            this.GroupHeader3.HeightF = 13.00001F;
            this.GroupHeader3.KeepTogether = true;
            this.GroupHeader3.Level = 2;
            this.GroupHeader3.Name = "GroupHeader3";
            this.GroupHeader3.Scripts.OnBeforePrint = "GroupHeader3_BeforePrint";
            // 
            // GroupFooter3
            // 
            this.GroupFooter3.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line5,
                        this.label26,
                        this.label25,
                        this.label1,
                        this.label16,
                        this.label24});
            this.GroupFooter3.HeightF = 36.50004F;
            this.GroupFooter3.Level = 2;
            this.GroupFooter3.Name = "GroupFooter3";
            this.GroupFooter3.Scripts.OnBeforePrint = "GroupFooter2_BeforePrint";
            // 
            // GroupHeader4
            // 
            this.GroupHeader4.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label50,
                        this.label49});
            this.GroupHeader4.HeightF = 27.49999F;
            this.GroupHeader4.KeepTogether = true;
            this.GroupHeader4.Level = 3;
            this.GroupHeader4.Name = "GroupHeader4";
            this.GroupHeader4.RepeatEveryPage = true;
            this.GroupHeader4.Scripts.OnBeforePrint = "GroupHeader3_BeforePrint";
            // 
            // GroupHeader5
            // 
            this.GroupHeader5.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label52,
                        this.label51});
            this.GroupHeader5.HeightF = 18F;
            this.GroupHeader5.KeepTogether = true;
            this.GroupHeader5.Level = 4;
            this.GroupHeader5.Name = "GroupHeader5";
            // 
            // label45
            // 
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorsentajeMes", "{0:0.0%;(0.0%)}")});
            this.label45.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(520F, 0F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label45.StylePriority.UseFont = false;
            summary1.FormatString = "{0:0.0%;(0.0%)}";
            this.label45.Summary = summary1;
            this.label45.Text = "label45";
            // 
            // label46
            // 
            this.label46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorsentajeAcum", "{0:0.0%;(0.0%)}")});
            this.label46.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(700F, 0F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label46.StylePriority.UseFont = false;
            summary2.FormatString = "{0:0.0%;(0.0%)}";
            this.label46.Summary = summary2;
            this.label46.Text = "label46";
            // 
            // label43
            // 
            this.label43.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SaldoMes", "{0:$#,#.00}")});
            this.label43.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(400F, 0F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label43.StylePriority.UseFont = false;
            summary3.FormatString = "{0:$#,#.00}";
            this.label43.Summary = summary3;
            this.label43.Text = "label43";
            // 
            // label40
            // 
            this.label40.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label40.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(18.20831F, 0F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.Scripts.OnBeforePrint = "label12_BeforePrint";
            this.label40.SizeF = new System.Drawing.SizeF(350F, 18F);
            this.label40.StyleName = "Title";
            this.label40.StylePriority.UseFont = false;
            this.label40.StylePriority.UseForeColor = false;
            this.label40.StylePriority.UseTextAlignment = false;
            this.label40.Text = "[CentroCostos]";
            this.label40.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // label42
            // 
            this.label42.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SaldoAcum", "{0:$#,#.00}")});
            this.label42.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(580F, 0F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label42.StylePriority.UseFont = false;
            summary4.FormatString = "{0:$#,#.00}";
            this.label42.Summary = summary4;
            this.label42.Text = "label42";
            // 
            // line7
            // 
            this.line7.BorderColor = System.Drawing.Color.Gray;
            this.line7.ForeColor = System.Drawing.Color.Gray;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(822.0002F, 2.166621F);
            this.line7.StylePriority.UseBorderColor = false;
            this.line7.StylePriority.UseForeColor = false;
            // 
            // pageInfo2
            // 
            this.pageInfo2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo2.Format = "Página {0} de {1}";
            this.pageInfo2.LocationFloat = new DevExpress.Utils.PointFloat(440.6547F, 2.166622F);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo2.SizeF = new System.Drawing.SizeF(381.3455F, 18F);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.StylePriority.UseFont = false;
            this.pageInfo2.StylePriority.UseTextAlignment = false;
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pageInfo1
            // 
            this.pageInfo1.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2.166621F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(313F, 18F);
            this.pageInfo1.StyleName = "PageInfo";
            this.pageInfo1.StylePriority.UseFont = false;
            this.pageInfo1.StylePriority.UseTextAlignment = false;
            this.pageInfo1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label32
            // 
            this.label32.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label32.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label32.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label32.LocationFloat = new DevExpress.Utils.PointFloat(509.0001F, 23.66664F);
            this.label32.Name = "label32";
            this.label32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label32.SizeF = new System.Drawing.SizeF(313.6666F, 18.00001F);
            this.label32.StyleName = "Title";
            this.label32.StylePriority.UseFont = false;
            this.label32.StylePriority.UseForeColor = false;
            this.label32.StylePriority.UseTextAlignment = false;
            this.label32.Text = "label41";
            this.label32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label30
            // 
            this.label30.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion4")});
            this.label30.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(509.0001F, 77.66666F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(313.6667F, 18F);
            this.label30.StylePriority.UseFont = false;
            this.label30.StylePriority.UseTextAlignment = false;
            this.label30.Text = "label31";
            this.label30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label31
            // 
            this.label31.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(509.0001F, 59.66666F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseTextAlignment = false;
            this.label31.Text = "[Direccion3]";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label29
            // 
            this.label29.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion2")});
            this.label29.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(509.0001F, 41.66667F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseTextAlignment = false;
            this.label29.Text = "[Direccion2]";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label44
            // 
            this.label44.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label44.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label44.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label44.LocationFloat = new DevExpress.Utils.PointFloat(0F, 137.7916F);
            this.label44.Name = "label44";
            this.label44.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label44.SizeF = new System.Drawing.SizeF(368.2083F, 18F);
            this.label44.StyleName = "Title";
            this.label44.StylePriority.UseFont = false;
            this.label44.StylePriority.UseForeColor = false;
            this.label44.StylePriority.UseTextAlignment = false;
            this.label44.Text = "label198";
            this.label44.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label41
            // 
            this.label41.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label41.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label41.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label41.LocationFloat = new DevExpress.Utils.PointFloat(271.3333F, 117.7916F);
            this.label41.Name = "label41";
            this.label41.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label41.SizeF = new System.Drawing.SizeF(330.6667F, 18.00001F);
            this.label41.StyleName = "Title";
            this.label41.StylePriority.UseFont = false;
            this.label41.StylePriority.UseForeColor = false;
            this.label41.StylePriority.UseTextAlignment = false;
            this.label41.Text = "label41";
            this.label41.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.label41.Visible = false;
            // 
            // line6
            // 
            this.line6.BorderColor = System.Drawing.Color.Gray;
            this.line6.ForeColor = System.Drawing.Color.Gray;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 135.7916F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line6.StylePriority.UseBorderColor = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // pageInfo3
            // 
            this.pageInfo3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo3.LocationFloat = new DevExpress.Utils.PointFloat(602.0001F, 117.7916F);
            this.pageInfo3.Name = "pageInfo3";
            this.pageInfo3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo3.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo3.SizeF = new System.Drawing.SizeF(219.9999F, 17.99999F);
            this.pageInfo3.StyleName = "PageInfo";
            this.pageInfo3.StylePriority.UseFont = false;
            this.pageInfo3.StylePriority.UseTextAlignment = false;
            this.pageInfo3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label198
            // 
            this.label198.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label198.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label198.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label198.LocationFloat = new DevExpress.Utils.PointFloat(0F, 117.7916F);
            this.label198.Name = "label198";
            this.label198.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label198.SizeF = new System.Drawing.SizeF(271.3333F, 17.99999F);
            this.label198.StyleName = "Title";
            this.label198.StylePriority.UseFont = false;
            this.label198.StylePriority.UseForeColor = false;
            this.label198.StylePriority.UseTextAlignment = false;
            this.label198.Text = "label198";
            this.label198.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // label36
            // 
            this.label36.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion2")});
            this.label36.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label36.LocationFloat = new DevExpress.Utils.PointFloat(509.0002F, 54.16667F);
            this.label36.Name = "label36";
            this.label36.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label36.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label36.StylePriority.UseFont = false;
            this.label36.StylePriority.UseTextAlignment = false;
            this.label36.Text = "[Direccion2]";
            this.label36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label35
            // 
            this.label35.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Reporte")});
            this.label35.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label35.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label35.LocationFloat = new DevExpress.Utils.PointFloat(0F, 147.1667F);
            this.label35.Name = "label35";
            this.label35.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label35.SizeF = new System.Drawing.SizeF(368.2083F, 18F);
            this.label35.StyleName = "Title";
            this.label35.StylePriority.UseFont = false;
            this.label35.StylePriority.UseForeColor = false;
            this.label35.StylePriority.UseTextAlignment = false;
            this.label35.Text = "label198";
            this.label35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label37
            // 
            this.label37.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label37.LocationFloat = new DevExpress.Utils.PointFloat(509.0002F, 73.66666F);
            this.label37.Name = "label37";
            this.label37.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label37.SizeF = new System.Drawing.SizeF(313.6666F, 18F);
            this.label37.StylePriority.UseFont = false;
            this.label37.StylePriority.UseTextAlignment = false;
            this.label37.Text = "[Direccion3]";
            this.label37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label39
            // 
            this.label39.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label39.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label39.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label39.LocationFloat = new DevExpress.Utils.PointFloat(509.0002F, 36.16666F);
            this.label39.Name = "label39";
            this.label39.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label39.SizeF = new System.Drawing.SizeF(313.6666F, 18.00001F);
            this.label39.StyleName = "Title";
            this.label39.StylePriority.UseFont = false;
            this.label39.StylePriority.UseForeColor = false;
            this.label39.StylePriority.UseTextAlignment = false;
            this.label39.Text = "label41";
            this.label39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label38
            // 
            this.label38.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Direccion4")});
            this.label38.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label38.LocationFloat = new DevExpress.Utils.PointFloat(509.0002F, 91.66666F);
            this.label38.Name = "label38";
            this.label38.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label38.SizeF = new System.Drawing.SizeF(313.6667F, 18F);
            this.label38.StylePriority.UseFont = false;
            this.label38.StylePriority.UseTextAlignment = false;
            this.label38.Text = "label31";
            this.label38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label33
            // 
            this.label33.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Titulo")});
            this.label33.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label33.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label33.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 127.1667F);
            this.label33.Name = "label33";
            this.label33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label33.SizeF = new System.Drawing.SizeF(271.3333F, 17.99999F);
            this.label33.StyleName = "Title";
            this.label33.StylePriority.UseFont = false;
            this.label33.StylePriority.UseForeColor = false;
            this.label33.StylePriority.UseTextAlignment = false;
            this.label33.Text = "label198";
            this.label33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 12.00002F);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.SizeF = new System.Drawing.SizeF(259.3751F, 97.95833F);
            // 
            // pageInfo4
            // 
            this.pageInfo4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.pageInfo4.LocationFloat = new DevExpress.Utils.PointFloat(602.0001F, 127.1667F);
            this.pageInfo4.Name = "pageInfo4";
            this.pageInfo4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo4.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo4.SizeF = new System.Drawing.SizeF(219.9999F, 17.99999F);
            this.pageInfo4.StyleName = "PageInfo";
            this.pageInfo4.StylePriority.UseFont = false;
            this.pageInfo4.StylePriority.UseTextAlignment = false;
            this.pageInfo4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // label34
            // 
            this.label34.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.EmpresaNombre")});
            this.label34.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label34.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label34.LocationFloat = new DevExpress.Utils.PointFloat(271.3334F, 127.1667F);
            this.label34.Name = "label34";
            this.label34.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label34.SizeF = new System.Drawing.SizeF(330.6667F, 18.00001F);
            this.label34.StyleName = "Title";
            this.label34.StylePriority.UseFont = false;
            this.label34.StylePriority.UseForeColor = false;
            this.label34.StylePriority.UseTextAlignment = false;
            this.label34.Text = "label41";
            this.label34.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            this.label34.Visible = false;
            // 
            // line1
            // 
            this.line1.BorderColor = System.Drawing.Color.Gray;
            this.line1.ForeColor = System.Drawing.Color.Gray;
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 145.1667F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line1.StylePriority.UseBorderColor = false;
            this.line1.StylePriority.UseForeColor = false;
            // 
            // label27
            // 
            this.label27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Abonos")});
            this.label27.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label27.LocationFloat = new DevExpress.Utils.PointFloat(582.5F, 940.9589F);
            this.label27.Name = "label27";
            this.label27.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label27.SizeF = new System.Drawing.SizeF(119.9999F, 18F);
            this.label27.StylePriority.UseFont = false;
            this.label27.StylePriority.UseTextAlignment = false;
            summary5.FormatString = "{0:$#,#.00}";
            summary5.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label27.Summary = summary5;
            this.label27.Text = "[Abonos]";
            this.label27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label27.Visible = false;
            // 
            // label28
            // 
            this.label28.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Cargos")});
            this.label28.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label28.LocationFloat = new DevExpress.Utils.PointFloat(462.4999F, 940.9589F);
            this.label28.Name = "label28";
            this.label28.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label28.SizeF = new System.Drawing.SizeF(120F, 18.00003F);
            this.label28.StylePriority.UseFont = false;
            this.label28.StylePriority.UseTextAlignment = false;
            summary6.FormatString = "{0:$#,#.00}";
            summary6.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label28.Summary = summary6;
            this.label28.Text = "label28";
            this.label28.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label28.Visible = false;
            // 
            // line9
            // 
            this.line9.LocationFloat = new DevExpress.Utils.PointFloat(0F, 938.9589F);
            this.line9.Name = "line9";
            this.line9.SizeF = new System.Drawing.SizeF(822.0001F, 2F);
            this.line9.Visible = false;
            // 
            // label21
            // 
            this.label21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Inicio")});
            this.label21.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(342.0001F, 940.9589F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label21.StylePriority.UseFont = false;
            this.label21.StylePriority.UseTextAlignment = false;
            summary7.FormatString = "{0:$#,#.00}";
            summary7.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label21.Summary = summary7;
            this.label21.Text = "label21";
            this.label21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label21.Visible = false;
            // 
            // label22
            // 
            this.label22.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(0F, 940.9589F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.SizeF = new System.Drawing.SizeF(52.29166F, 18F);
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            this.label22.Text = "Total";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label22.Visible = false;
            // 
            // label23
            // 
            this.label23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Final")});
            this.label23.Font = new System.Drawing.Font("Arial", 8F, System.Drawing.FontStyle.Bold);
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(702.4998F, 940.9589F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(120.0001F, 18F);
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseTextAlignment = false;
            summary8.FormatString = "{0:$#,#.00}";
            summary8.Running = DevExpress.XtraReports.UI.SummaryRunning.Report;
            this.label23.Summary = summary8;
            this.label23.Text = "label23";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label23.Visible = false;
            // 
            // label15
            // 
            this.label15.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(702.4999F, 917.0006F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label15.StylePriority.UseFont = false;
            this.label15.StylePriority.UseTextAlignment = false;
            this.label15.Text = "Final";
            this.label15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label15.Visible = false;
            // 
            // label8
            // 
            this.label8.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(342.0001F, 917.0006F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseTextAlignment = false;
            this.label8.Text = "Inicio";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label8.Visible = false;
            // 
            // line4
            // 
            this.line4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 935.0006F);
            this.line4.Name = "line4";
            this.line4.SizeF = new System.Drawing.SizeF(822.0002F, 3.958321F);
            this.line4.Visible = false;
            // 
            // line2
            // 
            this.line2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 915.0006F);
            this.line2.Name = "line2";
            this.line2.SizeF = new System.Drawing.SizeF(822.0002F, 2F);
            this.line2.Visible = false;
            // 
            // label3
            // 
            this.label3.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(582.4999F, 917.0006F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseTextAlignment = false;
            this.label3.Text = "Abonos";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label3.Visible = false;
            // 
            // label2
            // 
            this.label2.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 917.0006F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.Text = "Cuenta";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label2.Visible = false;
            // 
            // label6
            // 
            this.label6.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(462.4999F, 917.0006F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label6.StylePriority.UseFont = false;
            this.label6.StylePriority.UseTextAlignment = false;
            this.label6.Text = "Cargos";
            this.label6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            this.label6.Visible = false;
            // 
            // label5
            // 
            this.label5.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(120F, 917.0006F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(222F, 18F);
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseTextAlignment = false;
            this.label5.Text = "Descripción";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.label5.Visible = false;
            // 
            // pageBreak1
            // 
            this.pageBreak1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10.00001F);
            this.pageBreak1.Name = "pageBreak1";
            // 
            // chart1
            // 
            this.chart1.AppearanceName = "Pastel Kit";
            this.chart1.AutoBindingSettingsEnabled = false;
            this.chart1.AutoLayoutSettingsEnabled = false;
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.chart1.DataMember = "Table";
            this.chart1.DataSource = this.RepVentaNeta;
            xYDiagram1.AxisX.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.Range.SideMarginsEnabled = true;
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            this.chart1.Diagram = xYDiagram1;
            this.chart1.IndicatorsPaletteName = "Default";
            this.chart1.Legend.Font = new System.Drawing.Font("Arial", 6F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.chart1.Legend.HorizontalIndent = 0;
            this.chart1.Legend.TextOffset = 0;
            this.chart1.Legend.VerticalIndent = 0;
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 228.8349F);
            this.chart1.Name = "chart1";
            this.chart1.Scripts.OnBeforePrint = "chart1_BeforePrint";
            this.chart1.SeriesDataMember = "GraficaSerie";
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[0];
            this.chart1.SeriesTemplate.ArgumentDataMember = "GraficaArgumento";
            this.chart1.SeriesTemplate.DataFilters.ClearAndAddRange(new DevExpress.XtraCharts.DataFilter[] {
                        new DevExpress.XtraCharts.DataFilter("Grafica1", "System.Int32", DevExpress.XtraCharts.DataFilterCondition.Equal, 1)});
            stackedBarSeriesLabel1.ResolveOverlappingMode = DevExpress.XtraCharts.ResolveOverlappingMode.Default;
            this.chart1.SeriesTemplate.Label = stackedBarSeriesLabel1;
            pointOptions1.ValueNumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Currency;
            this.chart1.SeriesTemplate.PointOptions = pointOptions1;
            this.chart1.SeriesTemplate.ValueDataMembersSerializable = "GraficaValor";
            this.chart1.SeriesTemplate.View = stackedBarSeriesView1;
            this.chart1.SizeF = new System.Drawing.SizeF(822.0001F, 602.7068F);
            // 
            // RepVentaNeta
            // 
            this.RepVentaNeta.DataSetName = "RepVentaNetaDataSet";
            this.RepVentaNeta.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // label4
            // 
            this.label4.Font = new System.Drawing.Font("Arial", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label4.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 0F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(350F, 18F);
            this.label4.StyleName = "Title";
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseForeColor = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "[RamaDesc]";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // label10
            // 
            this.label10.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Utilidad", "{0:$#,#.00}")});
            this.label10.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(397.9167F, 0F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(122.0833F, 22.99999F);
            this.label10.StylePriority.UseFont = false;
            this.label10.Text = "label10";
            // 
            // label9
            // 
            this.label9.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label9.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(20F, 0F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(350F, 18F);
            this.label9.StyleName = "Title";
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseForeColor = false;
            this.label9.StylePriority.UseTextAlignment = false;
            this.label9.Text = "[Descripcion]";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // label14
            // 
            this.label14.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorsentajeAcum")});
            this.label14.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(700F, 0F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label14.StylePriority.UseFont = false;
            summary9.FormatString = "{0:0.0%;(0.0%)}";
            summary9.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label14.Summary = summary9;
            this.label14.Text = "label14";
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorsentajeMes")});
            this.label7.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(520F, 0F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label7.StylePriority.UseFont = false;
            summary10.FormatString = "{0:0.0%;(0.0%)}";
            summary10.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label7.Summary = summary10;
            this.label7.Text = "label7";
            // 
            // label13
            // 
            this.label13.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SaldoMes")});
            this.label13.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(400F, 0F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label13.StylePriority.UseFont = false;
            summary11.FormatString = "{0:$#,#.00}";
            summary11.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label13.Summary = summary11;
            this.label13.Text = "label13";
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SaldoAcum")});
            this.label18.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(580F, 0F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label18.StylePriority.UseFont = false;
            summary12.FormatString = "{0:$#,#.00}";
            summary12.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label18.Summary = summary12;
            this.label18.Text = "label18";
            // 
            // label12
            // 
            this.label12.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label12.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(20F, 0F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(350F, 18F);
            this.label12.StyleName = "Title";
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseForeColor = false;
            this.label12.StylePriority.UseTextAlignment = false;
            this.label12.Text = "[Descripcion]";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // label20
            // 
            this.label20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorsentajeAcum")});
            this.label20.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(700F, 2F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label20.StylePriority.UseFont = false;
            summary13.FormatString = "{0:0.0%;(0.0%)}";
            summary13.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label20.Summary = summary13;
            this.label20.Text = "label14";
            // 
            // label11
            // 
            this.label11.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PorsentajeMes")});
            this.label11.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(520F, 2F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label11.StylePriority.UseFont = false;
            summary14.FormatString = "{0:0.0%;(0.0%)}";
            summary14.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label11.Summary = summary14;
            this.label11.Text = "label7";
            // 
            // line3
            // 
            this.line3.BorderColor = System.Drawing.Color.Silver;
            this.line3.ForeColor = System.Drawing.Color.Silver;
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(827.0001F, 2F);
            this.line3.StylePriority.UseBorderColor = false;
            this.line3.StylePriority.UseForeColor = false;
            // 
            // label17
            // 
            this.label17.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SaldoAcum")});
            this.label17.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(580F, 2F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label17.StylePriority.UseFont = false;
            summary15.FormatString = "{0:$#,#.00}";
            summary15.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label17.Summary = summary15;
            this.label17.Text = "label17";
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.SaldoMes")});
            this.label19.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(400F, 2F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label19.StylePriority.UseFont = false;
            summary16.FormatString = "{0:$#,#.00}";
            summary16.IgnoreNullValues = true;
            summary16.Running = DevExpress.XtraReports.UI.SummaryRunning.Group;
            this.label19.Summary = summary16;
            this.label19.Text = "[SaldoMes]";
            // 
            // label47
            // 
            this.label47.BorderColor = System.Drawing.Color.Transparent;
            this.label47.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Orden")});
            this.label47.Font = new System.Drawing.Font("Times New Roman", 1.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label47.ForeColor = System.Drawing.Color.Transparent;
            this.label47.LocationFloat = new DevExpress.Utils.PointFloat(0.0001271566F, 0F);
            this.label47.Name = "label47";
            this.label47.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label47.SizeF = new System.Drawing.SizeF(827.0001F, 13.00001F);
            this.label47.StylePriority.UseBorderColor = false;
            this.label47.StylePriority.UseFont = false;
            this.label47.StylePriority.UseForeColor = false;
            this.label47.Text = "label47";
            // 
            // line5
            // 
            this.line5.BorderColor = System.Drawing.Color.Silver;
            this.line5.ForeColor = System.Drawing.Color.Silver;
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(827.0001F, 2F);
            this.line5.StylePriority.UseBorderColor = false;
            this.line5.StylePriority.UseForeColor = false;
            // 
            // label26
            // 
            this.label26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado4", "{0:0.0%;(0.0%)}")});
            this.label26.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label26.LocationFloat = new DevExpress.Utils.PointFloat(700F, 2F);
            this.label26.Name = "label26";
            this.label26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label26.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label26.StylePriority.UseFont = false;
            summary17.FormatString = "{0:$#,#.00}";
            summary17.IgnoreNullValues = true;
            this.label26.Summary = summary17;
            this.label26.Text = "label26";
            // 
            // label25
            // 
            this.label25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado3", "{0:0.0%;(0.0%)}")});
            this.label25.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label25.LocationFloat = new DevExpress.Utils.PointFloat(520F, 2F);
            this.label25.Name = "label25";
            this.label25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label25.SizeF = new System.Drawing.SizeF(60F, 18F);
            this.label25.StylePriority.UseFont = false;
            summary18.FormatString = "{0:$#,#.00}";
            summary18.IgnoreNullValues = true;
            this.label25.Summary = summary18;
            this.label25.Text = "label25";
            // 
            // label1
            // 
            this.label1.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado2", "{0:$#,#.00}")});
            this.label1.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(580F, 2F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label1.StylePriority.UseFont = false;
            summary19.FormatString = "{0:$#,#.00}";
            summary19.IgnoreNullValues = true;
            this.label1.Summary = summary19;
            this.label1.Text = "label1";
            // 
            // label16
            // 
            this.label16.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.Resultado1", "{0:$#,#.00}")});
            this.label16.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(400F, 2F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label16.StylePriority.UseFont = false;
            summary20.FormatString = "{0:$#,#.00}";
            summary20.IgnoreNullValues = true;
            this.label16.Summary = summary20;
            this.label16.Text = "label16";
            // 
            // label24
            // 
            this.label24.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label24.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.label24.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2F);
            this.label24.Name = "label24";
            this.label24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label24.SizeF = new System.Drawing.SizeF(350F, 18F);
            this.label24.StyleName = "Title";
            this.label24.StylePriority.UseFont = false;
            this.label24.StylePriority.UseForeColor = false;
            this.label24.StylePriority.UseTextAlignment = false;
            this.label24.Text = "[Clase]";
            this.label24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopLeft;
            // 
            // label50
            // 
            this.label50.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label50.LocationFloat = new DevExpress.Utils.PointFloat(582.5F, 0F);
            this.label50.Name = "label50";
            this.label50.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label50.SizeF = new System.Drawing.SizeF(120F, 27.49999F);
            this.label50.StylePriority.UseFont = false;
            summary21.FormatString = "{0:$#,#.00}";
            this.label50.Summary = summary21;
            this.label50.Text = "Acumulado";
            // 
            // label49
            // 
            this.label49.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PeriodoA")});
            this.label49.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(400F, 0F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(120F, 27.49999F);
            this.label49.StylePriority.UseFont = false;
            summary22.FormatString = "{0:$#,#.00}";
            this.label49.Summary = summary22;
            this.label49.Text = "label50";
            // 
            // label52
            // 
            this.label52.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label52.LocationFloat = new DevExpress.Utils.PointFloat(582.5F, 0F);
            this.label52.Name = "label52";
            this.label52.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label52.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label52.StylePriority.UseFont = false;
            summary23.FormatString = "{0:$#,#.00}";
            this.label52.Summary = summary23;
            this.label52.Text = "Acumulado";
            // 
            // label51
            // 
            this.label51.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Table.PeriodoA")});
            this.label51.Font = new System.Drawing.Font("Arial", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label51.LocationFloat = new DevExpress.Utils.PointFloat(400F, 0F);
            this.label51.Name = "label51";
            this.label51.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label51.SizeF = new System.Drawing.SizeF(120F, 18F);
            this.label51.StylePriority.UseFont = false;
            summary24.FormatString = "{0:$#,#.00}";
            this.label51.Summary = summary24;
            this.label51.Text = "label50";
            // 
            // TableTableAdapter
            // 
            this.TableTableAdapter.SelectCommand = this.oleDbCommand1;
            this.TableTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "Table", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand1
            // 
            this.oleDbCommand1.CommandText = "SPINFORMECONTRESULTADOS 1";
            this.oleDbCommand1.CommandTimeout = 0;
            this.oleDbCommand1.Connection = this.oleDbConnection1;
            // 
            // oleDbConnection1
            // 
            this.oleDbConnection1.ConnectionString = "Provider=SQLOLEDB;Data Source=.;Initial Catalog=INFORMES;User ID=SA;";
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.White;
            this.Title.BorderColor = System.Drawing.SystemColors.ControlText;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1;
            this.Title.Font = new System.Drawing.Font("Times New Roman", 20F, System.Drawing.FontStyle.Bold);
            this.Title.ForeColor = System.Drawing.Color.Maroon;
            this.Title.Name = "Title";
            // 
            // FieldCaption
            // 
            this.FieldCaption.BackColor = System.Drawing.Color.White;
            this.FieldCaption.BorderColor = System.Drawing.SystemColors.ControlText;
            this.FieldCaption.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.FieldCaption.BorderWidth = 1;
            this.FieldCaption.Font = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
            this.FieldCaption.ForeColor = System.Drawing.Color.Maroon;
            this.FieldCaption.Name = "FieldCaption";
            // 
            // PageInfo
            // 
            this.PageInfo.BackColor = System.Drawing.Color.White;
            this.PageInfo.BorderColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.PageInfo.BorderWidth = 1;
            this.PageInfo.Font = new System.Drawing.Font("Times New Roman", 10F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.SystemColors.ControlText;
            this.PageInfo.Name = "PageInfo";
            // 
            // DataField
            // 
            this.DataField.BackColor = System.Drawing.Color.White;
            this.DataField.BorderColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DataField.BorderWidth = 1;
            this.DataField.Font = new System.Drawing.Font("Times New Roman", 10F);
            this.DataField.ForeColor = System.Drawing.SystemColors.ControlText;
            this.DataField.Name = "DataField";
            this.DataField.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // SaldoMes
            // 
            this.SaldoMes.DataMember = "Table";
            this.SaldoMes.DataSource = this.RepVentaNeta;
            this.SaldoMes.Expression = "Iif([RamaEsAcreedora]  == True, 0.0-[SaldoAl] ,[SaldoAl] )";
            this.SaldoMes.Name = "SaldoMes";
            // 
            // SaldoAcum
            // 
            this.SaldoAcum.DataMember = "Table";
            this.SaldoAcum.DataSource = this.RepVentaNeta;
            this.SaldoAcum.Expression = "Iif([RamaEsAcreedora],-[Saldo]  ,[Saldo] )";
            this.SaldoAcum.Name = "SaldoAcum";
            // 
            // Resultado1
            // 
            this.Resultado1.DataMember = "Table";
            this.Resultado1.DataSource = this.RepVentaNeta;
            this.Resultado1.Name = "Resultado1";
            this.Resultado1.Scripts.OnGetValue = "Resultado1_GetValue";
            // 
            // Resultado2
            // 
            this.Resultado2.DataMember = "Table";
            this.Resultado2.DataSource = this.RepVentaNeta;
            this.Resultado2.Name = "Resultado2";
            this.Resultado2.Scripts.OnGetValue = "Resultado2_GetValue";
            // 
            // PorsentajeAcum
            // 
            this.PorsentajeAcum.DataMember = "Table";
            this.PorsentajeAcum.DataSource = this.RepVentaNeta;
            this.PorsentajeAcum.Expression = "Iif([RamaEsAcreedora]  == True, [Saldo] / [Ingresos] ,0.0-[Saldo] / [Ingresos])";
            this.PorsentajeAcum.Name = "PorsentajeAcum";
            // 
            // PorsentajeMes
            // 
            this.PorsentajeMes.DataMember = "Table";
            this.PorsentajeMes.DataSource = this.RepVentaNeta;
            this.PorsentajeMes.Expression = "Iif([RamaEsAcreedora]  == True, [SaldoAl] / [IngresosAl] ,0.0-[SaldoAl] / [Ingres" +
                "osAl])";
            this.PorsentajeMes.Name = "PorsentajeMes";
            // 
            // Resultado3
            // 
            this.Resultado3.DataMember = "Table";
            this.Resultado3.DataSource = this.RepVentaNeta;
            this.Resultado3.Name = "Resultado3";
            this.Resultado3.Scripts.OnGetValue = "Resultado3_GetValue";
            // 
            // Resultado4
            // 
            this.Resultado4.DataMember = "Table";
            this.Resultado4.DataSource = this.RepVentaNeta;
            this.Resultado4.Name = "Resultado4";
            this.Resultado4.Scripts.OnGetValue = "Resultado4_GetValue";
            // 
            // InformeContResultados
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.Detail,
                        this.pageFooterBand1,
                        this.reportHeaderBand1,
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.ReportFooter,
                        this.GroupHeader1,
                        this.GroupHeader2,
                        this.GroupFooter1,
                        this.GroupFooter2,
                        this.GroupHeader3,
                        this.GroupFooter3,
                        this.GroupHeader4,
                        this.GroupHeader5});
            this.CalculatedFields.AddRange(new DevExpress.XtraReports.UI.CalculatedField[] {
                        this.SaldoMes,
                        this.SaldoAcum,
                        this.Resultado1,
                        this.Resultado2,
                        this.PorsentajeAcum,
                        this.PorsentajeMes,
                        this.Resultado3,
                        this.Resultado4});
            this.DataAdapter = this.TableTableAdapter;
            this.DataMember = "Table";
            this.DataSource = this.RepVentaNeta;
            this.DisplayName = "InformeContResultados";
            this.Margins = new System.Drawing.Printing.Margins(12, 11, 38, 40);
            this.Name = "InformeContResultados";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.ScriptsSource = resources.GetString("$this.ScriptsSource");
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.FieldCaption,
                        this.PageInfo,
                        this.DataField});
            this.Tag = "EXEC spInformeContResultados [Estaciontrabajo]";
            this.Version = "10.2";
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesLabel1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedBarSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.RepVentaNeta)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RepVentaNetaDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RepVentaNetaDataSet : global::System.Data.DataSet {
        private _TableDataTable table_Table;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RepVentaNetaDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RepVentaNetaDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RepVentaNetaDataSet cln = ((RepVentaNetaDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RepVentaNetaDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnOrden;
            private global::System.Data.DataColumn columnID;
            private global::System.Data.DataColumn columnClase;
            private global::System.Data.DataColumn columnSubClase;
            private global::System.Data.DataColumn columnRama;
            private global::System.Data.DataColumn columnRamaDesc;
            private global::System.Data.DataColumn columnRamaEsAcreedora;
            private global::System.Data.DataColumn columnCuenta;
            private global::System.Data.DataColumn columnDescripcion;
            private global::System.Data.DataColumn columnEsAcreedora;
            private global::System.Data.DataColumn columnSubCuenta;
            private global::System.Data.DataColumn columnCentroCostos;
            private global::System.Data.DataColumn columnSaldo;
            private global::System.Data.DataColumn columnIngresos;
            private global::System.Data.DataColumn columnPorcentaje;
            private global::System.Data.DataColumn columnSaldoAl;
            private global::System.Data.DataColumn columnIngresosAl;
            private global::System.Data.DataColumn columnPorcentajeAl;
            private global::System.Data.DataColumn columnGrupo;
            private global::System.Data.DataColumn columnSubGrupo;
            private global::System.Data.DataColumn columnSubSubGrupo;
            private global::System.Data.DataColumn columnDesglosar;
            private global::System.Data.DataColumn columnOrden1;
            private global::System.Data.DataColumn columnGraficaArgumento;
            private global::System.Data.DataColumn columnGraficaValor;
            private global::System.Data.DataColumn columnGrafica1;
            private global::System.Data.DataColumn columnGrafica2;
            private global::System.Data.DataColumn columnTitulo;
            private global::System.Data.DataColumn columnReporte;
            private global::System.Data.DataColumn columnDireccion2;
            private global::System.Data.DataColumn columnDireccion3;
            private global::System.Data.DataColumn columnDireccion4;
            private global::System.Data.DataColumn columnGraficaSerie;
            private global::System.Data.DataColumn columnEmpresaNombre;
            private global::System.Data.DataColumn columnPeriodoA;
            private global::System.Data.DataColumn columnEtiqueta;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrdenColumn {
                get {
                    return this.columnOrden;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClaseColumn {
                get {
                    return this.columnClase;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubClaseColumn {
                get {
                    return this.columnSubClase;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RamaColumn {
                get {
                    return this.columnRama;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RamaDescColumn {
                get {
                    return this.columnRamaDesc;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RamaEsAcreedoraColumn {
                get {
                    return this.columnRamaEsAcreedora;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CuentaColumn {
                get {
                    return this.columnCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EsAcreedoraColumn {
                get {
                    return this.columnEsAcreedora;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubCuentaColumn {
                get {
                    return this.columnSubCuenta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CentroCostosColumn {
                get {
                    return this.columnCentroCostos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IngresosColumn {
                get {
                    return this.columnIngresos;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PorcentajeColumn {
                get {
                    return this.columnPorcentaje;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoAlColumn {
                get {
                    return this.columnSaldoAl;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IngresosAlColumn {
                get {
                    return this.columnIngresosAl;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PorcentajeAlColumn {
                get {
                    return this.columnPorcentajeAl;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrupoColumn {
                get {
                    return this.columnGrupo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubGrupoColumn {
                get {
                    return this.columnSubGrupo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubSubGrupoColumn {
                get {
                    return this.columnSubSubGrupo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesglosarColumn {
                get {
                    return this.columnDesglosar;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Orden1Column {
                get {
                    return this.columnOrden1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaArgumentoColumn {
                get {
                    return this.columnGraficaArgumento;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaValorColumn {
                get {
                    return this.columnGraficaValor;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica1Column {
                get {
                    return this.columnGrafica1;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Grafica2Column {
                get {
                    return this.columnGrafica2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReporteColumn {
                get {
                    return this.columnReporte;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion2Column {
                get {
                    return this.columnDireccion2;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion3Column {
                get {
                    return this.columnDireccion3;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Direccion4Column {
                get {
                    return this.columnDireccion4;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GraficaSerieColumn {
                get {
                    return this.columnGraficaSerie;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaNombreColumn {
                get {
                    return this.columnEmpresaNombre;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoAColumn {
                get {
                    return this.columnPeriodoA;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EtiquetaColumn {
                get {
                    return this.columnEtiqueta;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            public event _TableRowChangeEventHandler _TableRowChanging;
            public event _TableRowChangeEventHandler _TableRowChanged;
            public event _TableRowChangeEventHandler _TableRowDeleting;
            public event _TableRowChangeEventHandler _TableRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        int Orden, 
                        int ID, 
                        string Clase, 
                        string SubClase, 
                        string Rama, 
                        string RamaDesc, 
                        bool RamaEsAcreedora, 
                        string Cuenta, 
                        string Descripcion, 
                        bool EsAcreedora, 
                        string SubCuenta, 
                        string CentroCostos, 
                        decimal Saldo, 
                        decimal Ingresos, 
                        double Porcentaje, 
                        decimal SaldoAl, 
                        decimal IngresosAl, 
                        double PorcentajeAl, 
                        string Grupo, 
                        string SubGrupo, 
                        string SubSubGrupo, 
                        string Desglosar, 
                        int Orden1, 
                        string GraficaArgumento, 
                        double GraficaValor, 
                        int Grafica1, 
                        int Grafica2, 
                        string Titulo, 
                        string Reporte, 
                        string Direccion2, 
                        string Direccion3, 
                        string Direccion4, 
                        string GraficaSerie, 
                        string EmpresaNombre, 
                        string PeriodoA, 
                        bool Etiqueta) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Orden,
                        ID,
                        Clase,
                        SubClase,
                        Rama,
                        RamaDesc,
                        RamaEsAcreedora,
                        Cuenta,
                        Descripcion,
                        EsAcreedora,
                        SubCuenta,
                        CentroCostos,
                        Saldo,
                        Ingresos,
                        Porcentaje,
                        SaldoAl,
                        IngresosAl,
                        PorcentajeAl,
                        Grupo,
                        SubGrupo,
                        SubSubGrupo,
                        Desglosar,
                        Orden1,
                        GraficaArgumento,
                        GraficaValor,
                        Grafica1,
                        Grafica2,
                        Titulo,
                        Reporte,
                        Direccion2,
                        Direccion3,
                        Direccion4,
                        GraficaSerie,
                        EmpresaNombre,
                        PeriodoA,
                        Etiqueta};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrden = base.Columns["Orden"];
                this.columnID = base.Columns["ID"];
                this.columnClase = base.Columns["Clase"];
                this.columnSubClase = base.Columns["SubClase"];
                this.columnRama = base.Columns["Rama"];
                this.columnRamaDesc = base.Columns["RamaDesc"];
                this.columnRamaEsAcreedora = base.Columns["RamaEsAcreedora"];
                this.columnCuenta = base.Columns["Cuenta"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnEsAcreedora = base.Columns["EsAcreedora"];
                this.columnSubCuenta = base.Columns["SubCuenta"];
                this.columnCentroCostos = base.Columns["CentroCostos"];
                this.columnSaldo = base.Columns["Saldo"];
                this.columnIngresos = base.Columns["Ingresos"];
                this.columnPorcentaje = base.Columns["Porcentaje"];
                this.columnSaldoAl = base.Columns["SaldoAl"];
                this.columnIngresosAl = base.Columns["IngresosAl"];
                this.columnPorcentajeAl = base.Columns["PorcentajeAl"];
                this.columnGrupo = base.Columns["Grupo"];
                this.columnSubGrupo = base.Columns["SubGrupo"];
                this.columnSubSubGrupo = base.Columns["SubSubGrupo"];
                this.columnDesglosar = base.Columns["Desglosar"];
                this.columnOrden1 = base.Columns["Orden1"];
                this.columnGraficaArgumento = base.Columns["GraficaArgumento"];
                this.columnGraficaValor = base.Columns["GraficaValor"];
                this.columnGrafica1 = base.Columns["Grafica1"];
                this.columnGrafica2 = base.Columns["Grafica2"];
                this.columnTitulo = base.Columns["Titulo"];
                this.columnReporte = base.Columns["Reporte"];
                this.columnDireccion2 = base.Columns["Direccion2"];
                this.columnDireccion3 = base.Columns["Direccion3"];
                this.columnDireccion4 = base.Columns["Direccion4"];
                this.columnGraficaSerie = base.Columns["GraficaSerie"];
                this.columnEmpresaNombre = base.Columns["EmpresaNombre"];
                this.columnPeriodoA = base.Columns["PeriodoA"];
                this.columnEtiqueta = base.Columns["Etiqueta"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrden = new global::System.Data.DataColumn("Orden", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrden);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnClase = new global::System.Data.DataColumn("Clase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClase);
                this.columnSubClase = new global::System.Data.DataColumn("SubClase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubClase);
                this.columnRama = new global::System.Data.DataColumn("Rama", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRama);
                this.columnRamaDesc = new global::System.Data.DataColumn("RamaDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRamaDesc);
                this.columnRamaEsAcreedora = new global::System.Data.DataColumn("RamaEsAcreedora", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRamaEsAcreedora);
                this.columnCuenta = new global::System.Data.DataColumn("Cuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnEsAcreedora = new global::System.Data.DataColumn("EsAcreedora", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEsAcreedora);
                this.columnSubCuenta = new global::System.Data.DataColumn("SubCuenta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCuenta);
                this.columnCentroCostos = new global::System.Data.DataColumn("CentroCostos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentroCostos);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.columnIngresos = new global::System.Data.DataColumn("Ingresos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIngresos);
                this.columnPorcentaje = new global::System.Data.DataColumn("Porcentaje", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentaje);
                this.columnSaldoAl = new global::System.Data.DataColumn("SaldoAl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldoAl);
                this.columnIngresosAl = new global::System.Data.DataColumn("IngresosAl", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIngresosAl);
                this.columnPorcentajeAl = new global::System.Data.DataColumn("PorcentajeAl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorcentajeAl);
                this.columnGrupo = new global::System.Data.DataColumn("Grupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrupo);
                this.columnSubGrupo = new global::System.Data.DataColumn("SubGrupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubGrupo);
                this.columnSubSubGrupo = new global::System.Data.DataColumn("SubSubGrupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSubGrupo);
                this.columnDesglosar = new global::System.Data.DataColumn("Desglosar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesglosar);
                this.columnOrden1 = new global::System.Data.DataColumn("Orden1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrden1);
                this.columnGraficaArgumento = new global::System.Data.DataColumn("GraficaArgumento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaArgumento);
                this.columnGraficaValor = new global::System.Data.DataColumn("GraficaValor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaValor);
                this.columnGrafica1 = new global::System.Data.DataColumn("Grafica1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica1);
                this.columnGrafica2 = new global::System.Data.DataColumn("Grafica2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrafica2);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnReporte = new global::System.Data.DataColumn("Reporte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReporte);
                this.columnDireccion2 = new global::System.Data.DataColumn("Direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion2);
                this.columnDireccion3 = new global::System.Data.DataColumn("Direccion3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion3);
                this.columnDireccion4 = new global::System.Data.DataColumn("Direccion4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion4);
                this.columnGraficaSerie = new global::System.Data.DataColumn("GraficaSerie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGraficaSerie);
                this.columnEmpresaNombre = new global::System.Data.DataColumn("EmpresaNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresaNombre);
                this.columnPeriodoA = new global::System.Data.DataColumn("PeriodoA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodoA);
                this.columnEtiqueta = new global::System.Data.DataColumn("Etiqueta", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtiqueta);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RepVentaNetaDataSet ds = new RepVentaNetaDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            private _TableDataTable table_Table;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Orden {
                get {
                    try {
                        return ((int)(this[this.table_Table.OrdenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Orden\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.OrdenColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table_Table.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Clase {
                get {
                    try {
                        return ((string)(this[this.table_Table.ClaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Clase\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ClaseColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubClase {
                get {
                    try {
                        return ((string)(this[this.table_Table.SubClaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubClase\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubClaseColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rama {
                get {
                    try {
                        return ((string)(this[this.table_Table.RamaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Rama\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RamaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RamaDesc {
                get {
                    try {
                        return ((string)(this[this.table_Table.RamaDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'RamaDesc\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RamaDescColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RamaEsAcreedora {
                get {
                    try {
                        return ((bool)(this[this.table_Table.RamaEsAcreedoraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'RamaEsAcreedora\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.RamaEsAcreedoraColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta {
                get {
                    try {
                        return ((string)(this[this.table_Table.CuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Cuenta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.table_Table.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Descripcion\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DescripcionColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EsAcreedora {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EsAcreedoraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EsAcreedora\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EsAcreedoraColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubCuenta {
                get {
                    try {
                        return ((string)(this[this.table_Table.SubCuentaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubCuenta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubCuentaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CentroCostos {
                get {
                    try {
                        return ((string)(this[this.table_Table.CentroCostosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CentroCostos\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CentroCostosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Saldo {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Saldo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ingresos {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.IngresosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Ingresos\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IngresosColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Porcentaje {
                get {
                    try {
                        return ((double)(this[this.table_Table.PorcentajeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Porcentaje\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PorcentajeColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SaldoAl {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.SaldoAlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SaldoAl\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SaldoAlColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IngresosAl {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.IngresosAlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IngresosAl\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.IngresosAlColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PorcentajeAl {
                get {
                    try {
                        return ((double)(this[this.table_Table.PorcentajeAlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PorcentajeAl\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PorcentajeAlColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grupo {
                get {
                    try {
                        return ((string)(this[this.table_Table.GrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grupo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GrupoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubGrupo {
                get {
                    try {
                        return ((string)(this[this.table_Table.SubGrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubGrupo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubGrupoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubSubGrupo {
                get {
                    try {
                        return ((string)(this[this.table_Table.SubSubGrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SubSubGrupo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SubSubGrupoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desglosar {
                get {
                    try {
                        return ((string)(this[this.table_Table.DesglosarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Desglosar\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DesglosarColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Orden1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Orden1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Orden1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Orden1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaArgumento {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaArgumentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaArgumento\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaArgumentoColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GraficaValor {
                get {
                    try {
                        return ((double)(this[this.table_Table.GraficaValorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaValor\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaValorColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica1 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Grafica1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica1\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica1Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Grafica2 {
                get {
                    try {
                        return ((int)(this[this.table_Table.Grafica2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grafica2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Grafica2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.table_Table.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Titulo\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TituloColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reporte {
                get {
                    try {
                        return ((string)(this[this.table_Table.ReporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Reporte\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ReporteColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion2 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion2\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion2Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion3 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion3\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion3Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion4 {
                get {
                    try {
                        return ((string)(this[this.table_Table.Direccion4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Direccion4\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.Direccion4Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GraficaSerie {
                get {
                    try {
                        return ((string)(this[this.table_Table.GraficaSerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'GraficaSerie\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.GraficaSerieColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpresaNombre {
                get {
                    try {
                        return ((string)(this[this.table_Table.EmpresaNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'EmpresaNombre\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EmpresaNombreColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PeriodoA {
                get {
                    try {
                        return ((string)(this[this.table_Table.PeriodoAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PeriodoA\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PeriodoAColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Etiqueta {
                get {
                    try {
                        return ((bool)(this[this.table_Table.EtiquetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Etiqueta\' de la tabla \'Table\' es DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EtiquetaColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrdenNull() {
                return this.IsNull(this.table_Table.OrdenColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrdenNull() {
                this[this.table_Table.OrdenColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table_Table.IDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table_Table.IDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClaseNull() {
                return this.IsNull(this.table_Table.ClaseColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClaseNull() {
                this[this.table_Table.ClaseColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubClaseNull() {
                return this.IsNull(this.table_Table.SubClaseColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubClaseNull() {
                this[this.table_Table.SubClaseColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRamaNull() {
                return this.IsNull(this.table_Table.RamaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRamaNull() {
                this[this.table_Table.RamaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRamaDescNull() {
                return this.IsNull(this.table_Table.RamaDescColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRamaDescNull() {
                this[this.table_Table.RamaDescColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRamaEsAcreedoraNull() {
                return this.IsNull(this.table_Table.RamaEsAcreedoraColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRamaEsAcreedoraNull() {
                this[this.table_Table.RamaEsAcreedoraColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuentaNull() {
                return this.IsNull(this.table_Table.CuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuentaNull() {
                this[this.table_Table.CuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.table_Table.DescripcionColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.table_Table.DescripcionColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEsAcreedoraNull() {
                return this.IsNull(this.table_Table.EsAcreedoraColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEsAcreedoraNull() {
                this[this.table_Table.EsAcreedoraColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubCuentaNull() {
                return this.IsNull(this.table_Table.SubCuentaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubCuentaNull() {
                this[this.table_Table.SubCuentaColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCentroCostosNull() {
                return this.IsNull(this.table_Table.CentroCostosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCentroCostosNull() {
                this[this.table_Table.CentroCostosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoNull() {
                return this.IsNull(this.table_Table.SaldoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoNull() {
                this[this.table_Table.SaldoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIngresosNull() {
                return this.IsNull(this.table_Table.IngresosColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIngresosNull() {
                this[this.table_Table.IngresosColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorcentajeNull() {
                return this.IsNull(this.table_Table.PorcentajeColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorcentajeNull() {
                this[this.table_Table.PorcentajeColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoAlNull() {
                return this.IsNull(this.table_Table.SaldoAlColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoAlNull() {
                this[this.table_Table.SaldoAlColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIngresosAlNull() {
                return this.IsNull(this.table_Table.IngresosAlColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIngresosAlNull() {
                this[this.table_Table.IngresosAlColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPorcentajeAlNull() {
                return this.IsNull(this.table_Table.PorcentajeAlColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPorcentajeAlNull() {
                this[this.table_Table.PorcentajeAlColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrupoNull() {
                return this.IsNull(this.table_Table.GrupoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrupoNull() {
                this[this.table_Table.GrupoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubGrupoNull() {
                return this.IsNull(this.table_Table.SubGrupoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubGrupoNull() {
                this[this.table_Table.SubGrupoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubSubGrupoNull() {
                return this.IsNull(this.table_Table.SubSubGrupoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubSubGrupoNull() {
                this[this.table_Table.SubSubGrupoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesglosarNull() {
                return this.IsNull(this.table_Table.DesglosarColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesglosarNull() {
                this[this.table_Table.DesglosarColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrden1Null() {
                return this.IsNull(this.table_Table.Orden1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrden1Null() {
                this[this.table_Table.Orden1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaArgumentoNull() {
                return this.IsNull(this.table_Table.GraficaArgumentoColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaArgumentoNull() {
                this[this.table_Table.GraficaArgumentoColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaValorNull() {
                return this.IsNull(this.table_Table.GraficaValorColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaValorNull() {
                this[this.table_Table.GraficaValorColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica1Null() {
                return this.IsNull(this.table_Table.Grafica1Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica1Null() {
                this[this.table_Table.Grafica1Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrafica2Null() {
                return this.IsNull(this.table_Table.Grafica2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrafica2Null() {
                this[this.table_Table.Grafica2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.table_Table.TituloColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.table_Table.TituloColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReporteNull() {
                return this.IsNull(this.table_Table.ReporteColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReporteNull() {
                this[this.table_Table.ReporteColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion2Null() {
                return this.IsNull(this.table_Table.Direccion2Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion2Null() {
                this[this.table_Table.Direccion2Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion3Null() {
                return this.IsNull(this.table_Table.Direccion3Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion3Null() {
                this[this.table_Table.Direccion3Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccion4Null() {
                return this.IsNull(this.table_Table.Direccion4Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccion4Null() {
                this[this.table_Table.Direccion4Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGraficaSerieNull() {
                return this.IsNull(this.table_Table.GraficaSerieColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGraficaSerieNull() {
                this[this.table_Table.GraficaSerieColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNombreNull() {
                return this.IsNull(this.table_Table.EmpresaNombreColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNombreNull() {
                this[this.table_Table.EmpresaNombreColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoANull() {
                return this.IsNull(this.table_Table.PeriodoAColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoANull() {
                this[this.table_Table.PeriodoAColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEtiquetaNull() {
                return this.IsNull(this.table_Table.EtiquetaColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEtiquetaNull() {
                this[this.table_Table.EtiquetaColumn] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            private _TableRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
